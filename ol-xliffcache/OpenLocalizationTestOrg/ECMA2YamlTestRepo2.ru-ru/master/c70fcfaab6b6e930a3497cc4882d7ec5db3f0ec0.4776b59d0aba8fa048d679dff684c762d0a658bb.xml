{"nodes":[{"pos":[722,763],"content":"Abstract base class for timer extensions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract base class for timer extensions.","pos":[0,41]}]},{"pos":[775,882],"content":"A timer extension is used by activities such as <xref:System.Activities.Statements.Delay> to manage timers.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A timer extension is used by activities such as &lt;xref:System.Activities.Statements.Delay&gt; to manage timers.","pos":[0,107],"source":"A timer extension is used by activities such as <xref:System.Activities.Statements.Delay> to manage timers."}]},{"pos":[1439,1520],"content":"When implemented in a derived class, creates a new instance of the derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, creates a new instance of the derived class.","pos":[0,81]}]},{"pos":[2171,2187],"content":"Removes a timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a timer.","pos":[0,16]}]},{"pos":[2367,2406],"content":"The bookmark associated with the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bookmark associated with the timer.","pos":[0,39]}]},{"pos":[3002,3087],"content":"Called by the <xref:System.Activities.Statements.TimerExtension.CancelTimer*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the &lt;xref:System.Activities.Statements.TimerExtension.CancelTimer*&gt; method.","pos":[0,85],"source":"Called by the <xref:System.Activities.Statements.TimerExtension.CancelTimer*> method."}]},{"pos":[3281,3320],"content":"The bookmark associated with the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bookmark associated with the timer.","pos":[0,39]}]},{"pos":[3987,4074],"content":"Called by the <xref:System.Activities.Statements.TimerExtension.RegisterTimer*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called by the &lt;xref:System.Activities.Statements.TimerExtension.RegisterTimer*&gt; method.","pos":[0,87],"source":"Called by the <xref:System.Activities.Statements.TimerExtension.RegisterTimer*> method."}]},{"pos":[4276,4302],"content":"The duration of the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The duration of the timer.","pos":[0,26]}]},{"pos":[4380,4457],"content":"The bookmark associated with the timer, to be resumed when the timer expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bookmark associated with the timer, to be resumed when the timer expires.","pos":[0,77]}]},{"pos":[5116,5175],"content":"Creates a timer with the specified duration and associated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a timer with the specified duration and associated.","pos":[0,59]}]},{"pos":[5363,5389],"content":"The duration of the timer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The duration of the timer.","pos":[0,26]}]},{"pos":[5467,5544],"content":"The bookmark associated with the timer, to be resumed when the timer expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bookmark associated with the timer, to be resumed when the timer expires.","pos":[0,77]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TimerExtension\n  id: TimerExtension\n  children:\n  - System.Activities.Statements.TimerExtension.#ctor\n  - System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)\n  - System.Activities.Statements.TimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  - System.Activities.Statements.TimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  - System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  langs:\n  - csharp\n  name: TimerExtension\n  nameWithType: TimerExtension\n  fullName: System.Activities.Statements.TimerExtension\n  type: Class\n  summary: Abstract base class for timer extensions.\n  remarks: A timer extension is used by activities such as <xref:System.Activities.Statements.Delay> to manage timers.\n  syntax:\n    content: public abstract class TimerExtension\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TimerExtension.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TimerExtension\n  langs:\n  - csharp\n  name: TimerExtension()\n  nameWithType: TimerExtension.TimerExtension()\n  fullName: System.Activities.Statements.TimerExtension.TimerExtension()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: When implemented in a derived class, creates a new instance of the derived class.\n  syntax:\n    content: protected TimerExtension ();\n    parameters: []\n  overload: System.Activities.Statements.TimerExtension.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)\n  id: CancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  langs:\n  - csharp\n  name: CancelTimer(Bookmark)\n  nameWithType: TimerExtension.CancelTimer(Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.CancelTimer(Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Removes a timer.\n  syntax:\n    content: public void CancelTimer (System.Activities.Bookmark bookmark);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark associated with the timer.\n  overload: System.Activities.Statements.TimerExtension.CancelTimer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  id: OnCancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  langs:\n  - csharp\n  name: OnCancelTimer(Bookmark)\n  nameWithType: TimerExtension.OnCancelTimer(Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.OnCancelTimer(Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Called by the <xref:System.Activities.Statements.TimerExtension.CancelTimer*> method.\n  syntax:\n    content: protected abstract void OnCancelTimer (System.Activities.Bookmark bookmark);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark associated with the timer.\n  overload: System.Activities.Statements.TimerExtension.OnCancelTimer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  id: OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  langs:\n  - csharp\n  name: OnRegisterTimer(TimeSpan,Bookmark)\n  nameWithType: TimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Called by the <xref:System.Activities.Statements.TimerExtension.RegisterTimer*> method.\n  syntax:\n    content: protected abstract void OnRegisterTimer (TimeSpan timeout, System.Activities.Bookmark bookmark);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The duration of the timer.\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark associated with the timer, to be resumed when the timer expires.\n  overload: System.Activities.Statements.TimerExtension.OnRegisterTimer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  id: RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  langs:\n  - csharp\n  name: RegisterTimer(TimeSpan,Bookmark)\n  nameWithType: TimerExtension.RegisterTimer(TimeSpan,Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.RegisterTimer(TimeSpan,Bookmark)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a timer with the specified duration and associated.\n  syntax:\n    content: public void RegisterTimer (TimeSpan timeout, System.Activities.Bookmark bookmark);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The duration of the timer.\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark associated with the timer, to be resumed when the timer expires.\n  overload: System.Activities.Statements.TimerExtension.RegisterTimer*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Statements.TimerExtension.#ctor\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: TimerExtension()\n  nameWithType: TimerExtension.TimerExtension()\n  fullName: System.Activities.Statements.TimerExtension.TimerExtension()\n- uid: System.Activities.Statements.TimerExtension.CancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: CancelTimer(Bookmark)\n  nameWithType: TimerExtension.CancelTimer(Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.CancelTimer(Bookmark)\n- uid: System.Activities.Bookmark\n  parent: System.Activities\n  isExternal: false\n  name: Bookmark\n  nameWithType: Bookmark\n  fullName: System.Activities.Bookmark\n- uid: System.Activities.Statements.TimerExtension.OnCancelTimer(System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: OnCancelTimer(Bookmark)\n  nameWithType: TimerExtension.OnCancelTimer(Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.OnCancelTimer(Bookmark)\n- uid: System.Activities.Statements.TimerExtension.OnRegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: OnRegisterTimer(TimeSpan,Bookmark)\n  nameWithType: TimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.OnRegisterTimer(TimeSpan,Bookmark)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Activities.Statements.TimerExtension.RegisterTimer(System.TimeSpan,System.Activities.Bookmark)\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: RegisterTimer(TimeSpan,Bookmark)\n  nameWithType: TimerExtension.RegisterTimer(TimeSpan,Bookmark)\n  fullName: System.Activities.Statements.TimerExtension.RegisterTimer(TimeSpan,Bookmark)\n- uid: System.Activities.Statements.TimerExtension.#ctor*\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: TimerExtension\n  nameWithType: TimerExtension.TimerExtension\n- uid: System.Activities.Statements.TimerExtension.CancelTimer*\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: CancelTimer\n  nameWithType: TimerExtension.CancelTimer\n- uid: System.Activities.Statements.TimerExtension.OnCancelTimer*\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: OnCancelTimer\n  nameWithType: TimerExtension.OnCancelTimer\n- uid: System.Activities.Statements.TimerExtension.OnRegisterTimer*\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: OnRegisterTimer\n  nameWithType: TimerExtension.OnRegisterTimer\n- uid: System.Activities.Statements.TimerExtension.RegisterTimer*\n  parent: System.Activities.Statements.TimerExtension\n  isExternal: false\n  name: RegisterTimer\n  nameWithType: TimerExtension.RegisterTimer\n"}