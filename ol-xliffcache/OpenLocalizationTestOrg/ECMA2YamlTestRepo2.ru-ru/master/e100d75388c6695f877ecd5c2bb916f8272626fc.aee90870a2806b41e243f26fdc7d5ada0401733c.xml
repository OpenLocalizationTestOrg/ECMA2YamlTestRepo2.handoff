{"nodes":[{"pos":[1562,1794],"content":"Describes a geometry using drawing commands. This class is used with the <xref href=\"System.Windows.Media.StreamGeometry\"></xref> class to create a lightweight geometry that does not support data binding, animation, or modification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Describes a geometry using drawing commands.","pos":[0,44]},{"content":"This class is used with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.StreamGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class to create a lightweight geometry that does not support data binding, animation, or modification.","pos":[45,232],"source":" This class is used with the <xref href=\"System.Windows.Media.StreamGeometry\"></xref> class to create a lightweight geometry that does not support data binding, animation, or modification."}]},{"pos":[3057,3093],"content":"Draws an arc to the specified point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws an arc to the specified point.","pos":[0,36]}]},{"pos":[3106,3522],"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,414],"nodes":[{"content":"This method uses the end point of the previous segment as its starting point.","pos":[0,77]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[78,246],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[253,414],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[4369,4414],"content":"The destination point for the end of the arc.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination point for the end of the arc.","pos":[0,45]}]},{"pos":[4481,4821],"content":"The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle. If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle. If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.","pos":[0,340],"nodes":[{"content":"The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.","pos":[0,100]},{"content":"If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc.","pos":[101,211]},{"content":"For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.","pos":[212,340]}]}]},{"pos":[4891,5008],"content":"The rotation angle of the oval that specifies the curve. The curvature of the arc can be rotated with this parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rotation angle of the oval that specifies the curve. The curvature of the arc can be rotated with this parameter.","pos":[0,117],"nodes":[{"content":"The rotation angle of the oval that specifies the curve.","pos":[0,56]},{"content":"The curvature of the arc can be rotated with this parameter.","pos":[57,117]}]}]},{"pos":[5076,5253],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to draw the arc greater than 180 degrees; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the arc greater than 180 degrees; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5346,5528],"content":"A value that indicates whether the arc is drawn in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.SweepDirection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> direction.","needQuote":true,"needEscape":true,"source":"A value that indicates whether the arc is drawn in the <xref href=\"System.Windows.Media.SweepDirection\"></xref> or <xref href=\"System.Windows.Media.SweepDirection\"></xref> direction."},{"pos":[5595,5842],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5912,6190],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6851,6897],"content":"Specifies the starting point for a new figure.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the starting point for a new figure.","pos":[0,46]}]},{"pos":[6910,7247],"content":"By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,335],"nodes":[{"content":"By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this &lt;xref:System.Windows.Media.StreamGeometryContext&gt;.","pos":[0,167],"source":"By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[174,335],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[7459,7529],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> where the figure begins.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Point\"></xref> where the figure begins."},{"pos":[7595,7813],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7879,8351],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to close the figure; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. For example, if two connecting lines are drawn, and `isClosed` is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the drawing will just be of two lines but if `isClosed` is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the two lines will be closed to create a triangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to close the figure; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,156],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to close the figure; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"For example, if two connecting lines are drawn, and <ph id=\"ph1\">`isClosed`</ph> is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the drawing will just be of two lines but if <ph id=\"ph2\">`isClosed`</ph> is set to <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, the two lines will be closed to create a triangle.","pos":[157,472],"source":" For example, if two connecting lines are drawn, and `isClosed` is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the drawing will just be of two lines but if `isClosed` is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the two lines will be closed to create a triangle."}]},{"pos":[9123,9167],"content":"Draws a Bezier curve to the specified point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a Bezier curve to the specified point.","pos":[0,44]}]},{"pos":[9180,9861],"content":"A cubic Bezier curve is defined by a start point, end point, and two control points. The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.       This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A cubic Bezier curve is defined by a start point, end point, and two control points. The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.       This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,677],"nodes":[{"content":"A cubic Bezier curve is defined by a start point, end point, and two control points.","pos":[0,84]},{"content":"The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.","pos":[85,256]},{"content":"This method uses the end point of the previous segment as its starting point.","pos":[263,340]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[341,509],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[516,677],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[10683,10746],"content":"The first control point used to specify the shape of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first control point used to specify the shape of the curve.","pos":[0,63]}]},{"pos":[10816,10880],"content":"The second control point used to specify the shape of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second control point used to specify the shape of the curve.","pos":[0,64]}]},{"pos":[10950,10997],"content":"The destination point for the end of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination point for the end of the curve.","pos":[0,47]}]},{"pos":[11064,11311],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11381,11659],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11849,11997],"content":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to add a segment without starting a figure by calling the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure*&gt; method.","pos":[0,148],"source":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method."}]},{"pos":[12382,12453],"content":"Closes this context and flushes its content so that it can be rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes this context and flushes its content so that it can be rendered.","pos":[0,71]}]},{"pos":[12465,12572],"content":"Once closed, the context cannot be modified. The context must be closed before its content can be rendered.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Once closed, the context cannot be modified. The context must be closed before its content can be rendered.","pos":[0,107],"nodes":[{"content":"Once closed, the context cannot be modified.","pos":[0,44]},{"content":"The context must be closed before its content can be rendered.","pos":[45,107]}]}]},{"pos":[12827,12876],"content":"This context has already been closed or disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"This context has already been closed or disposed.","pos":[0,49]}]},{"pos":[13433,13514],"content":"Draws a straight line to the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Draws a straight line to the specified <xref href=\"System.Windows.Point\"></xref>."},{"pos":[13527,13943],"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,414],"nodes":[{"content":"This method uses the end point of the previous segment as its starting point.","pos":[0,77]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[78,246],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[253,414],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[14697,14743],"content":"The destination point for the end of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination point for the end of the line.","pos":[0,46]}]},{"pos":[14810,15057],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15127,15405],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15593,15741],"content":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to add a segment without starting a figure by calling the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure*&gt; method.","pos":[0,148],"source":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method."}]},{"pos":[16417,16459],"content":"Draws one or more connected Bezier curves.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws one or more connected Bezier curves.","pos":[0,42]}]},{"pos":[16472,17124],"content":"The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.       This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The first point in <ph id=\"ph1\">`points`</ph> specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.","pos":[0,227],"source":"The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on."},{"content":"This method uses the end point of the previous segment as its starting point.","pos":[234,311]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[312,480],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[487,648],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]},{"pos":[18006,18171],"content":"The list of points that specify control points and destination points for one or more Bezier curves. The number of points in this list should be a multiple of three.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of points that specify control points and destination points for one or more Bezier curves. The number of points in this list should be a multiple of three.","pos":[0,165],"nodes":[{"content":"The list of points that specify control points and destination points for one or more Bezier curves.","pos":[0,100]},{"content":"The number of points in this list should be a multiple of three.","pos":[101,165]}]}]},{"pos":[18238,18485],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18555,18833],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19027,19175],"content":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to add a segment without starting a figure by calling the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure*&gt; method.","pos":[0,148],"source":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method."}]},{"pos":[19841,19884],"content":"Draws one or more connected straight lines.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws one or more connected straight lines.","pos":[0,43]}]},{"pos":[19897,20313],"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,414],"nodes":[{"content":"This method uses the end point of the previous segment as its starting point.","pos":[0,77]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[78,246],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[253,414],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[21157,21255],"content":"The collection of points that specify destination points for one or more connected straight lines.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of points that specify destination points for one or more connected straight lines.","pos":[0,98]}]},{"pos":[21322,21569],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21639,21917],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22109,22257],"content":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to add a segment without starting a figure by calling the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure*&gt; method.","pos":[0,148],"source":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method."}]},{"pos":[22978,23030],"content":"Draws one or more connected quadratic Bezier curves.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws one or more connected quadratic Bezier curves.","pos":[0,52]}]},{"pos":[23043,23459],"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,414],"nodes":[{"content":"This method uses the end point of the previous segment as its starting point.","pos":[0,77]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[78,246],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[253,414],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[24423,24773],"content":"The collection of points that specify control points and destination points for one or more quadratic Bezier curves. The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on. The list must contain an even number of points.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of points that specify control points and destination points for one or more quadratic Bezier curves. The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on. The list must contain an even number of points.","pos":[0,350],"nodes":[{"content":"The collection of points that specify control points and destination points for one or more quadratic Bezier curves.","pos":[0,116]},{"content":"The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.","pos":[117,302]},{"content":"The list must contain an even number of points.","pos":[303,350]}]}]},{"pos":[24840,25087],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25157,25435],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25638,25786],"content":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to add a segment without starting a figure by calling the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure*&gt; method.","pos":[0,148],"source":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method."}]},{"pos":[26458,26489],"content":"Draws a quadratic Bezier curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Draws a quadratic Bezier curve.","pos":[0,31]}]},{"pos":[26502,27046],"content":"Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.       This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.       This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.","pos":[0,540],"nodes":[{"content":"Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.","pos":[0,119]},{"content":"This method uses the end point of the previous segment as its starting point.","pos":[126,203]},{"content":"If this is the first segment in a figure, it uses the point specified by the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A&gt; method as its start point.","pos":[204,372],"source":" If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point."},{"content":"A &lt;xref:System.Windows.Media.StreamGeometry&gt; cannot be serialized if it contains a &lt;xref:System.Windows.Media.Transform&gt; or any non-stroked or unfilled segments.","pos":[379,540],"source":"       A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments."}]}]},{"pos":[27921,27978],"content":"The control point used to specify the shape of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control point used to specify the shape of the curve.","pos":[0,57]}]},{"pos":[28048,28095],"content":"The destination point for the end of the curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination point for the end of the curve.","pos":[0,47]}]},{"pos":[28162,28409],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to make the segment stroked when a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is used to render the segment; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28479,28757],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to treat the join between this segment and the previous segment as a corner when stroked with a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Pen\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28956,29104],"content":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt was made to add a segment without starting a figure by calling the &lt;xref:System.Windows.Media.StreamGeometryContext.BeginFigure*&gt; method.","pos":[0,148],"source":"An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method."}]},{"pos":[29608,29772],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.StreamGeometryContext\n  id: StreamGeometryContext\n  children:\n  - System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.Close\n  - System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  - System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: StreamGeometryContext\n  nameWithType: StreamGeometryContext\n  fullName: System.Windows.Media.StreamGeometryContext\n  type: Class\n  summary: Describes a geometry using drawing commands. This class is used with the <xref href=\"System.Windows.Media.StreamGeometry\"></xref> class to create a lightweight geometry that does not support data binding, animation, or modification.\n  syntax:\n    content: 'public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)\n  id: ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws an arc to the specified point.\n  remarks: \"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw an arc using the ArcTo method.  \\n  \\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]\\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]\"\n  syntax:\n    content: public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The destination point for the end of the arc.\n    - id: size\n      type: System.Windows.Size\n      description: The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle. If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.\n    - id: rotationAngle\n      type: System.Double\n      description: The rotation angle of the oval that specifies the curve. The curvature of the arc can be rotated with this parameter.\n    - id: isLargeArc\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to draw the arc greater than 180 degrees; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: sweepDirection\n      type: System.Windows.Media.SweepDirection\n      description: A value that indicates whether the arc is drawn in the <xref href=\"System.Windows.Media.SweepDirection\"></xref> or <xref href=\"System.Windows.Media.SweepDirection\"></xref> direction.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.ArcTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)\n  id: BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: BeginFigure(Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Specifies the starting point for a new figure.\n  remarks: \"By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  syntax:\n    content: public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);\n    parameters:\n    - id: startPoint\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> where the figure begins.\n    - id: isFilled\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isClosed\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to close the figure; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. For example, if two connecting lines are drawn, and `isClosed` is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, the drawing will just be of two lines but if `isClosed` is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, the two lines will be closed to create a triangle.\n  overload: System.Windows.Media.StreamGeometryContext.BeginFigure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  id: BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: BezierTo(Point,Point,Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws a Bezier curve to the specified point.\n  remarks: \"A cubic Bezier curve is defined by a start point, end point, and two control points. The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.  \\n  \\n This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw a Bezier curve using the BezierTo method.  \\n  \\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]\\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]\"\n  syntax:\n    content: public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The first control point used to specify the shape of the curve.\n    - id: point2\n      type: System.Windows.Point\n      description: The second control point used to specify the shape of the curve.\n    - id: point3\n      type: System.Windows.Point\n      description: The destination point for the end of the curve.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.BezierTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.Close\n  id: Close\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: StreamGeometryContext.Close()\n  fullName: System.Windows.Media.StreamGeometryContext.Close()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Closes this context and flushes its content so that it can be rendered.\n  remarks: Once closed, the context cannot be modified. The context must be closed before its content can be rendered.\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  overload: System.Windows.Media.StreamGeometryContext.Close*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This context has already been closed or disposed.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)\n  id: LineTo(System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: LineTo(Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.LineTo(Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.LineTo(Point,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws a straight line to the specified <xref href=\"System.Windows.Point\"></xref>.\n  remarks: \"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw a triangle using the LineTo method.  \\n  \\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]\\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]\"\n  syntax:\n    content: public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The destination point for the end of the line.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.LineTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  id: PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: PolyBezierTo(IList<Point>,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws one or more connected Bezier curves.\n  remarks: \"The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.  \\n  \\n This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw multiple connected Bezier curves using the PolyBezierTo method.  \\n  \\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]\\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]\"\n  syntax:\n    content: public abstract void PolyBezierTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: points\n      type: System.Collections.Generic.IList{System.Windows.Point}\n      description: The list of points that specify control points and destination points for one or more Bezier curves. The number of points in this list should be a multiple of three.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.PolyBezierTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  id: PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: PolyLineTo(IList<Point>,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws one or more connected straight lines.\n  remarks: \"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw a triangle using the PolyLineTo method.  \\n  \\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]\"\n  syntax:\n    content: public abstract void PolyLineTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: points\n      type: System.Collections.Generic.IList{System.Windows.Point}\n      description: The collection of points that specify destination points for one or more connected straight lines.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.PolyLineTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  id: PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws one or more connected quadratic Bezier curves.\n  remarks: \"This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw multiple connected quadratic Bezier curves using the PolyQuadraticBezierTo method.  \\n  \\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]\\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]\"\n  syntax:\n    content: public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList<System.Windows.Point> points, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: points\n      type: System.Collections.Generic.IList{System.Windows.Point}\n      description: The collection of points that specify control points and destination points for one or more quadratic Bezier curves. The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on. The list must contain an even number of points.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  id: QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: QuadraticBezierTo(Point,Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Draws a quadratic Bezier curve.\n  remarks: \"Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.  \\n  \\n This method uses the end point of the previous segment as its starting point. If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.  \\n  \\n A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.\"\n  example:\n  - \"The following example shows how to draw a quadratic Bezier curve using the QuadraticBezierTo method.  \\n  \\n [!code-cs[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]\\n [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]\"\n  syntax:\n    content: public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);\n    parameters:\n    - id: point1\n      type: System.Windows.Point\n      description: The control point used to specify the shape of the curve.\n    - id: point2\n      type: System.Windows.Point\n      description: The destination point for the end of the curve.\n    - id: isStroked\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to make the segment stroked when a <xref href=\"System.Windows.Media.Pen\"></xref> is used to render the segment; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: isSmoothJoin\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to treat the join between this segment and the previous segment as a corner when stroked with a <xref href=\"System.Windows.Media.Pen\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An attempt was made to add a segment without starting a figure by calling the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure*> method.\n  platform:\n  - net462\n- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Windows.Media.StreamGeometryContext\n  langs:\n  - csharp\n  name: System.IDisposable.Dispose()\n  nameWithType: StreamGeometryContext.System.IDisposable.Dispose()\n  fullName: System.Windows.Media.StreamGeometryContext.System.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: System.Windows.Threading.DispatcherObject\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.ArcTo(Point,Size,Double,Boolean,SweepDirection,Boolean,Boolean)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.SweepDirection\n  parent: System.Windows.Media\n  isExternal: false\n  name: SweepDirection\n  nameWithType: SweepDirection\n  fullName: System.Windows.Media.SweepDirection\n- uid: System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: BeginFigure(Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.BeginFigure(Point,Boolean,Boolean)\n- uid: System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: BezierTo(Point,Point,Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.BezierTo(Point,Point,Point,Boolean,Boolean)\n- uid: System.Windows.Media.StreamGeometryContext.Close\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: Close()\n  nameWithType: StreamGeometryContext.Close()\n  fullName: System.Windows.Media.StreamGeometryContext.Close()\n- uid: System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: LineTo(Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.LineTo(Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.LineTo(Point,Boolean,Boolean)\n- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: PolyBezierTo(IList<Point>,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.PolyBezierTo(IList<Point>,Boolean,Boolean)\n- uid: System.Collections.Generic.IList{System.Windows.Point}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Point>\n  nameWithType: IList<Point>\n  fullName: System.Collections.Generic.IList<System.Windows.Point>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Windows.Point>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Point\n    name: Point\n    nameWithType: Point\n    fullName: Point\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: PolyLineTo(IList<Point>,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.PolyLineTo(IList<Point>,Boolean,Boolean)\n- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(IList<Point>,Boolean,Boolean)\n- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: QuadraticBezierTo(Point,Point,Boolean,Boolean)\n  nameWithType: StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)\n  fullName: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(Point,Point,Boolean,Boolean)\n- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: System.IDisposable.Dispose()\n  nameWithType: StreamGeometryContext.System.IDisposable.Dispose()\n  fullName: System.Windows.Media.StreamGeometryContext.System.IDisposable.Dispose()\n- uid: System.Windows.Media.StreamGeometryContext.ArcTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: ArcTo\n  nameWithType: StreamGeometryContext.ArcTo\n- uid: System.Windows.Media.StreamGeometryContext.BeginFigure*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: BeginFigure\n  nameWithType: StreamGeometryContext.BeginFigure\n- uid: System.Windows.Media.StreamGeometryContext.BezierTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: BezierTo\n  nameWithType: StreamGeometryContext.BezierTo\n- uid: System.Windows.Media.StreamGeometryContext.Close*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: Close\n  nameWithType: StreamGeometryContext.Close\n- uid: System.Windows.Media.StreamGeometryContext.LineTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: LineTo\n  nameWithType: StreamGeometryContext.LineTo\n- uid: System.Windows.Media.StreamGeometryContext.PolyBezierTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: PolyBezierTo\n  nameWithType: StreamGeometryContext.PolyBezierTo\n- uid: System.Windows.Media.StreamGeometryContext.PolyLineTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: PolyLineTo\n  nameWithType: StreamGeometryContext.PolyLineTo\n- uid: System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: PolyQuadraticBezierTo\n  nameWithType: StreamGeometryContext.PolyQuadraticBezierTo\n- uid: System.Windows.Media.StreamGeometryContext.QuadraticBezierTo*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: QuadraticBezierTo\n  nameWithType: StreamGeometryContext.QuadraticBezierTo\n- uid: System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose*\n  parent: System.Windows.Media.StreamGeometryContext\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: StreamGeometryContext.System.IDisposable.Dispose\n"}