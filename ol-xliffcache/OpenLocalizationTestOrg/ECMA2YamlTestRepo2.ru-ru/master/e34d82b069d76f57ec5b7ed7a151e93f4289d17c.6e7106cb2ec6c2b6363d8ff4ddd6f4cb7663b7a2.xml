{"nodes":[{"pos":[1134,1183],"content":"Abstract class that represents a keyboard device.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract class that represents a keyboard device.","pos":[0,49]}]},{"pos":[1196,1933],"content":"The KeyboardDevice supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.       For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class. The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.       The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate KeyboardDevice.       Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The KeyboardDevice supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,171],"source":"The KeyboardDevice supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For keyboard related input, use the &lt;xref:System.Windows.Input.Keyboard&gt; class.","pos":[178,257],"source":"       For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class."},{"content":"The &lt;xref:System.Windows.Input.Keyboard&gt; class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.","pos":[258,431],"source":" The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard."},{"content":"The &lt;xref:System.Windows.Input.Keyboard&gt; class delegates to the appropriate KeyboardDevice.","pos":[438,529],"source":"       The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate KeyboardDevice."},{"content":"Each &lt;xref:System.Windows.Input.InputDevice&gt; object represents one particular input device.","pos":[536,627],"source":"       Each <xref:System.Windows.Input.InputDevice> object represents one particular input device."},{"content":"For example, if there are two mice, there will be two &lt;xref:System.Windows.Input.InputDevice&gt; objects.","pos":[629,731],"source":"  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects."}]},{"pos":[2855,2952],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyboardDevice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Input.KeyboardDevice\"></xref> class."},{"pos":[3155,3251],"content":"The input manager associated with this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyboardDevice\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The input manager associated with this <xref href=\"System.Windows.Input.KeyboardDevice\"></xref>."},{"pos":[3711,3815],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.PresentationSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is reporting input for this device.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Windows.PresentationSource\"></xref> that is reporting input for this device."},{"pos":[3988,4024],"content":"The source of input for this device.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source of input for this device.","pos":[0,36]}]},{"pos":[4485,4498],"content":"Clears focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears focus.","pos":[0,13]}]},{"pos":[4510,4557],"content":"The ClearFocus method sets the focus to <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The ClearFocus method sets the focus to `null`."},{"pos":[5146,5265],"content":"Gets or sets the behavior of <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> when restoring focus.","needQuote":true,"needEscape":true,"source":"Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] when restoring focus."},{"pos":[5453,5677],"content":"An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] when restoring focus. The default in <xref href=\"System.Windows.Input.RestoreFocusMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumeration value that specifies the behavior of <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> when restoring focus.","pos":[0,149],"source":"An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] when restoring focus."},{"content":"The default in <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.RestoreFocusMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[150,224],"source":" The default in <xref href=\"System.Windows.Input.RestoreFocusMode\"></xref>."}]},{"pos":[6223,6310],"content":"Sets keyboard focus on the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Sets keyboard focus on the specified <xref href=\"System.Windows.IInputElement\"></xref>."},{"pos":[6510,6539],"content":"The element to move focus to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element to move focus to.","pos":[0,29]}]},{"pos":[6612,6648],"content":"The element that has keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that has keyboard focus.","pos":[0,36]}]},{"pos":[6828,6958],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is not a <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is not a <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref>."},{"pos":[7356,7397],"content":"Gets the element that has keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the element that has keyboard focus.","pos":[0,41]}]},{"pos":[7553,7585],"content":"The element with keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element with keyboard focus.","pos":[0,32]}]},{"pos":[8119,8210],"content":"Gets the set of key states for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the set of key states for the specified <xref href=\"System.Windows.Input.Key\"></xref>."},{"pos":[8403,8420],"content":"The key to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to check.","pos":[0,17]}]},{"pos":[8495,8539],"content":"The set of key states for the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of key states for the specified key.","pos":[0,44]}]},{"pos":[8762,8798],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","needQuote":true,"needEscape":true,"source":"<code>key</code> is not a valid key."},{"pos":[9301,9465],"content":"When overridden in a derived class, obtains the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.KeyStates\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Input.Key\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, obtains the <xref href=\"System.Windows.Input.KeyStates\"></xref> for the specified <xref href=\"System.Windows.Input.Key\"></xref>."},{"pos":[9680,9697],"content":"The key to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to check.","pos":[0,17]}]},{"pos":[9772,9816],"content":"The set of key states for the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of key states for the specified key.","pos":[0,44]}]},{"pos":[10343,10443],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the down state.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the down state."},{"pos":[10607,10624],"content":"The key to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to check.","pos":[0,17]}]},{"pos":[10683,10860],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept> is in the down state; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is in the down state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11080,11116],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","needQuote":true,"needEscape":true,"source":"<code>key</code> is not a valid key."},{"pos":[11569,11672],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the toggled state.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the toggled state."},{"pos":[11839,11856],"content":"The key to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to check.","pos":[0,17]}]},{"pos":[11915,12095],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept> is in the toggled state; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is in the toggled state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12318,12354],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","needQuote":true,"needEscape":true,"source":"<code>key</code> is not a valid key."},{"pos":[12782,12880],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.Key\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is in the up state.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the up state."},{"pos":[13042,13059],"content":"The key to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to check.","pos":[0,17]}]},{"pos":[13118,13293],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept> is in the up state; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is in the up state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13511,13547],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is not a valid key.","needQuote":true,"needEscape":true,"source":"<code>key</code> is not a valid key."},{"pos":[13920,14019],"content":"Gets the set of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Input.ModifierKeys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> which are currently pressed.","needQuote":true,"needEscape":true,"source":"Gets the set of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> which are currently pressed."},{"pos":[14180,14205],"content":"The set of modifier keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of modifier keys.","pos":[0,25]}]},{"pos":[14639,14747],"content":"Gets the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that input from this device is sent to.","needQuote":true,"needEscape":true,"source":"Gets the specified <xref href=\"System.Windows.IInputElement\"></xref> that input from this device is sent to."},{"pos":[14759,14857],"content":"The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The target for a &lt;xref:System.Windows.Input.KeyboardDevice&gt; is the object that has keyboard focus.","pos":[0,98],"source":"The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus."}]},{"pos":[15014,15046],"content":"The element that receives input.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that receives input.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.KeyboardDevice\n  id: KeyboardDevice\n  children:\n  - System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  - System.Windows.Input.KeyboardDevice.ActiveSource\n  - System.Windows.Input.KeyboardDevice.ClearFocus\n  - System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  - System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  - System.Windows.Input.KeyboardDevice.FocusedElement\n  - System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  - System.Windows.Input.KeyboardDevice.Modifiers\n  - System.Windows.Input.KeyboardDevice.Target\n  langs:\n  - csharp\n  name: KeyboardDevice\n  nameWithType: KeyboardDevice\n  fullName: System.Windows.Input.KeyboardDevice\n  type: Class\n  summary: Abstract class that represents a keyboard device.\n  remarks: \"The KeyboardDevice supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  \\n  \\n For keyboard related input, use the <xref:System.Windows.Input.Keyboard> class. The <xref:System.Windows.Input.Keyboard> class represents the keyboard to an application and provides methods, properties, and events that reflect the state of the keyboard.  \\n  \\n The <xref:System.Windows.Input.Keyboard> class delegates to the appropriate KeyboardDevice.  \\n  \\n Each <xref:System.Windows.Input.InputDevice> object represents one particular input device.  For example, if there are two mice, there will be two <xref:System.Windows.Input.InputDevice> objects.\"\n  syntax:\n    content: 'public abstract class KeyboardDevice : System.Windows.Input.InputDevice'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.Input.InputDevice\n  implements: []\n  inheritedMembers:\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  id: '#ctor(System.Windows.Input.InputManager)'\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: KeyboardDevice(InputManager)\n  nameWithType: KeyboardDevice.KeyboardDevice(InputManager)\n  fullName: System.Windows.Input.KeyboardDevice.KeyboardDevice(InputManager)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.KeyboardDevice\"></xref> class.\n  syntax:\n    content: protected KeyboardDevice (System.Windows.Input.InputManager inputManager);\n    parameters:\n    - id: inputManager\n      type: System.Windows.Input.InputManager\n      description: The input manager associated with this <xref href=\"System.Windows.Input.KeyboardDevice\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.ActiveSource\n  id: ActiveSource\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: ActiveSource\n  nameWithType: KeyboardDevice.ActiveSource\n  fullName: System.Windows.Input.KeyboardDevice.ActiveSource\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the <xref href=\"System.Windows.PresentationSource\"></xref> that is reporting input for this device.\n  syntax:\n    content: public override System.Windows.PresentationSource ActiveSource { get; }\n    return:\n      type: System.Windows.PresentationSource\n      description: The source of input for this device.\n  overload: System.Windows.Input.KeyboardDevice.ActiveSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.ClearFocus\n  id: ClearFocus\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: ClearFocus()\n  nameWithType: KeyboardDevice.ClearFocus()\n  fullName: System.Windows.Input.KeyboardDevice.ClearFocus()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Clears focus.\n  remarks: The ClearFocus method sets the focus to `null`.\n  syntax:\n    content: public void ClearFocus ();\n    parameters: []\n  overload: System.Windows.Input.KeyboardDevice.ClearFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  id: DefaultRestoreFocusMode\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: DefaultRestoreFocusMode\n  nameWithType: KeyboardDevice.DefaultRestoreFocusMode\n  fullName: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] when restoring focus.\n  syntax:\n    content: public System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }\n    return:\n      type: System.Windows.Input.RestoreFocusMode\n      description: An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] when restoring focus. The default in <xref href=\"System.Windows.Input.RestoreFocusMode\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  id: Focus(System.Windows.IInputElement)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: Focus(IInputElement)\n  nameWithType: KeyboardDevice.Focus(IInputElement)\n  fullName: System.Windows.Input.KeyboardDevice.Focus(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets keyboard focus on the specified <xref href=\"System.Windows.IInputElement\"></xref>.\n  syntax:\n    content: public System.Windows.IInputElement Focus (System.Windows.IInputElement element);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element to move focus to.\n    return:\n      type: System.Windows.IInputElement\n      description: The element that has keyboard focus.\n  overload: System.Windows.Input.KeyboardDevice.Focus*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>element</code> is not a <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.FocusedElement\n  id: FocusedElement\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: FocusedElement\n  nameWithType: KeyboardDevice.FocusedElement\n  fullName: System.Windows.Input.KeyboardDevice.FocusedElement\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the element that has keyboard focus.\n  syntax:\n    content: public System.Windows.IInputElement FocusedElement { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The element with keyboard focus.\n  overload: System.Windows.Input.KeyboardDevice.FocusedElement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  id: GetKeyStates(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: GetKeyStates(Key)\n  nameWithType: KeyboardDevice.GetKeyStates(Key)\n  fullName: System.Windows.Input.KeyboardDevice.GetKeyStates(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the set of key states for the specified <xref href=\"System.Windows.Input.Key\"></xref>.\n  syntax:\n    content: public System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Windows.Input.KeyStates\n      description: The set of key states for the specified key.\n  overload: System.Windows.Input.KeyboardDevice.GetKeyStates*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  id: GetKeyStatesFromSystem(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: GetKeyStatesFromSystem(Key)\n  nameWithType: KeyboardDevice.GetKeyStatesFromSystem(Key)\n  fullName: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: When overridden in a derived class, obtains the <xref href=\"System.Windows.Input.KeyStates\"></xref> for the specified <xref href=\"System.Windows.Input.Key\"></xref>.\n  syntax:\n    content: protected abstract System.Windows.Input.KeyStates GetKeyStatesFromSystem (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Windows.Input.KeyStates\n      description: The set of key states for the specified key.\n  overload: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  id: IsKeyDown(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: IsKeyDown(Key)\n  nameWithType: KeyboardDevice.IsKeyDown(Key)\n  fullName: System.Windows.Input.KeyboardDevice.IsKeyDown(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the down state.\n  syntax:\n    content: public bool IsKeyDown (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is in the down state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.IsKeyDown*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  id: IsKeyToggled(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: IsKeyToggled(Key)\n  nameWithType: KeyboardDevice.IsKeyToggled(Key)\n  fullName: System.Windows.Input.KeyboardDevice.IsKeyToggled(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the toggled state.\n  syntax:\n    content: public bool IsKeyToggled (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is in the toggled state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.IsKeyToggled*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  id: IsKeyUp(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: IsKeyUp(Key)\n  nameWithType: KeyboardDevice.IsKeyUp(Key)\n  fullName: System.Windows.Input.KeyboardDevice.IsKeyUp(Key)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether the specified <xref href=\"System.Windows.Input.Key\"></xref> is in the up state.\n  syntax:\n    content: public bool IsKeyUp (System.Windows.Input.Key key);\n    parameters:\n    - id: key\n      type: System.Windows.Input.Key\n      description: The key to check.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>key</code> is in the up state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.KeyboardDevice.IsKeyUp*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>key</code> is not a valid key.\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.Modifiers\n  id: Modifiers\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: Modifiers\n  nameWithType: KeyboardDevice.Modifiers\n  fullName: System.Windows.Input.KeyboardDevice.Modifiers\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the set of <xref href=\"System.Windows.Input.ModifierKeys\"></xref> which are currently pressed.\n  syntax:\n    content: public System.Windows.Input.ModifierKeys Modifiers { get; }\n    return:\n      type: System.Windows.Input.ModifierKeys\n      description: The set of modifier keys.\n  overload: System.Windows.Input.KeyboardDevice.Modifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.KeyboardDevice.Target\n  id: Target\n  parent: System.Windows.Input.KeyboardDevice\n  langs:\n  - csharp\n  name: Target\n  nameWithType: KeyboardDevice.Target\n  fullName: System.Windows.Input.KeyboardDevice.Target\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the specified <xref href=\"System.Windows.IInputElement\"></xref> that input from this device is sent to.\n  remarks: The target for a <xref:System.Windows.Input.KeyboardDevice> is the object that has keyboard focus.\n  syntax:\n    content: public override System.Windows.IInputElement Target { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The element that receives input.\n  overload: System.Windows.Input.KeyboardDevice.Target*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.InputDevice\n  isExternal: false\n  name: System.Windows.Input.InputDevice\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: KeyboardDevice(InputManager)\n  nameWithType: KeyboardDevice.KeyboardDevice(InputManager)\n  fullName: System.Windows.Input.KeyboardDevice.KeyboardDevice(InputManager)\n- uid: System.Windows.Input.InputManager\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputManager\n  nameWithType: InputManager\n  fullName: System.Windows.Input.InputManager\n- uid: System.Windows.Input.KeyboardDevice.ActiveSource\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ActiveSource\n  nameWithType: KeyboardDevice.ActiveSource\n  fullName: System.Windows.Input.KeyboardDevice.ActiveSource\n- uid: System.Windows.PresentationSource\n  parent: System.Windows\n  isExternal: false\n  name: PresentationSource\n  nameWithType: PresentationSource\n  fullName: System.Windows.PresentationSource\n- uid: System.Windows.Input.KeyboardDevice.ClearFocus\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ClearFocus()\n  nameWithType: KeyboardDevice.ClearFocus()\n  fullName: System.Windows.Input.KeyboardDevice.ClearFocus()\n- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: DefaultRestoreFocusMode\n  nameWithType: KeyboardDevice.DefaultRestoreFocusMode\n  fullName: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode\n- uid: System.Windows.Input.RestoreFocusMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: RestoreFocusMode\n  nameWithType: RestoreFocusMode\n  fullName: System.Windows.Input.RestoreFocusMode\n- uid: System.Windows.Input.KeyboardDevice.Focus(System.Windows.IInputElement)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Focus(IInputElement)\n  nameWithType: KeyboardDevice.Focus(IInputElement)\n  fullName: System.Windows.Input.KeyboardDevice.Focus(IInputElement)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.KeyboardDevice.FocusedElement\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: FocusedElement\n  nameWithType: KeyboardDevice.FocusedElement\n  fullName: System.Windows.Input.KeyboardDevice.FocusedElement\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStates(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStates(Key)\n  nameWithType: KeyboardDevice.GetKeyStates(Key)\n  fullName: System.Windows.Input.KeyboardDevice.GetKeyStates(Key)\n- uid: System.Windows.Input.KeyStates\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyStates\n  nameWithType: KeyStates\n  fullName: System.Windows.Input.KeyStates\n- uid: System.Windows.Input.Key\n  parent: System.Windows.Input\n  isExternal: false\n  name: Key\n  nameWithType: Key\n  fullName: System.Windows.Input.Key\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStatesFromSystem(Key)\n  nameWithType: KeyboardDevice.GetKeyStatesFromSystem(Key)\n  fullName: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem(Key)\n- uid: System.Windows.Input.KeyboardDevice.IsKeyDown(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyDown(Key)\n  nameWithType: KeyboardDevice.IsKeyDown(Key)\n  fullName: System.Windows.Input.KeyboardDevice.IsKeyDown(Key)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyToggled(Key)\n  nameWithType: KeyboardDevice.IsKeyToggled(Key)\n  fullName: System.Windows.Input.KeyboardDevice.IsKeyToggled(Key)\n- uid: System.Windows.Input.KeyboardDevice.IsKeyUp(System.Windows.Input.Key)\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyUp(Key)\n  nameWithType: KeyboardDevice.IsKeyUp(Key)\n  fullName: System.Windows.Input.KeyboardDevice.IsKeyUp(Key)\n- uid: System.Windows.Input.KeyboardDevice.Modifiers\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Modifiers\n  nameWithType: KeyboardDevice.Modifiers\n  fullName: System.Windows.Input.KeyboardDevice.Modifiers\n- uid: System.Windows.Input.ModifierKeys\n  parent: System.Windows.Input\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: ModifierKeys\n  fullName: System.Windows.Input.ModifierKeys\n- uid: System.Windows.Input.KeyboardDevice.Target\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Target\n  nameWithType: KeyboardDevice.Target\n  fullName: System.Windows.Input.KeyboardDevice.Target\n- uid: System.Windows.Input.KeyboardDevice.#ctor*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: KeyboardDevice\n  nameWithType: KeyboardDevice.KeyboardDevice\n- uid: System.Windows.Input.KeyboardDevice.ActiveSource*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ActiveSource\n  nameWithType: KeyboardDevice.ActiveSource\n- uid: System.Windows.Input.KeyboardDevice.ClearFocus*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: ClearFocus\n  nameWithType: KeyboardDevice.ClearFocus\n- uid: System.Windows.Input.KeyboardDevice.DefaultRestoreFocusMode*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: DefaultRestoreFocusMode\n  nameWithType: KeyboardDevice.DefaultRestoreFocusMode\n- uid: System.Windows.Input.KeyboardDevice.Focus*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Focus\n  nameWithType: KeyboardDevice.Focus\n- uid: System.Windows.Input.KeyboardDevice.FocusedElement*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: FocusedElement\n  nameWithType: KeyboardDevice.FocusedElement\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStates*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStates\n  nameWithType: KeyboardDevice.GetKeyStates\n- uid: System.Windows.Input.KeyboardDevice.GetKeyStatesFromSystem*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: GetKeyStatesFromSystem\n  nameWithType: KeyboardDevice.GetKeyStatesFromSystem\n- uid: System.Windows.Input.KeyboardDevice.IsKeyDown*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyDown\n  nameWithType: KeyboardDevice.IsKeyDown\n- uid: System.Windows.Input.KeyboardDevice.IsKeyToggled*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyToggled\n  nameWithType: KeyboardDevice.IsKeyToggled\n- uid: System.Windows.Input.KeyboardDevice.IsKeyUp*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: IsKeyUp\n  nameWithType: KeyboardDevice.IsKeyUp\n- uid: System.Windows.Input.KeyboardDevice.Modifiers*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Modifiers\n  nameWithType: KeyboardDevice.Modifiers\n- uid: System.Windows.Input.KeyboardDevice.Target*\n  parent: System.Windows.Input.KeyboardDevice\n  isExternal: false\n  name: Target\n  nameWithType: KeyboardDevice.Target\n"}