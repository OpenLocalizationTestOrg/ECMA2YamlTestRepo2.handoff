{"nodes":[{"pos":[1018,1030],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4049,4061],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4734,4746],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4798,4810],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5500,5512],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5564,5576],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6170,6182],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6757,6769],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7374,7386],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8012,8024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8611,8623],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9216,9228],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.ObjectSet`1\n  id: ObjectSet`1\n  children:\n  - System.Data.Objects.ObjectSet`1.AddObject(`0)\n  - System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  - System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  - System.Data.Objects.ObjectSet`1.Attach(`0)\n  - System.Data.Objects.ObjectSet`1.CreateObject\n  - System.Data.Objects.ObjectSet`1.CreateObject``1\n  - System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  - System.Data.Objects.ObjectSet`1.Detach(`0)\n  - System.Data.Objects.ObjectSet`1.EntitySet\n  langs:\n  - csharp\n  name: ObjectSet<TEntity>\n  nameWithType: ObjectSet<TEntity>\n  fullName: System.Data.Objects.ObjectSet<TEntity>\n  type: Class\n  syntax:\n    content: 'public class ObjectSet<TEntity> : System.Data.Objects.ObjectQuery<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Objects.IObjectSet<TEntity>, System.Linq.IQueryable<TEntity> where TEntity : class'\n    typeParameters:\n    - id: TEntity\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Data.Objects.ObjectQuery\n  - System.Data.Objects.ObjectQuery`1\n  implements:\n  - System.Collections.Generic.IEnumerable<TEntity>\n  - System.Data.Objects.IObjectSet<TEntity>\n  - System.Linq.IQueryable<TEntity>\n  inheritedMembers:\n  - System.Data.Objects.ObjectQuery.CommandText\n  - System.Data.Objects.ObjectQuery.Context\n  - System.Data.Objects.ObjectQuery.EnablePlanCaching\n  - System.Data.Objects.ObjectQuery.GetResultType\n  - System.Data.Objects.ObjectQuery.MergeOption\n  - System.Data.Objects.ObjectQuery.Parameters\n  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider\n  - System.Data.Objects.ObjectQuery.ToTraceString\n  - System.Data.Objects.ObjectQuery`1.Distinct\n  - System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Include(System.String)\n  - System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.Name\n  - System.Data.Objects.ObjectQuery`1.OfType``1\n  - System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.AddObject(`0)\n  id: AddObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: AddObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.AddObject(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.AddObject(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void AddObject (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.AddObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  id: ApplyCurrentValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: ApplyCurrentValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public TEntity ApplyCurrentValues (TEntity currentEntity);\n    parameters:\n    - id: currentEntity\n      type: TEntity\n      description: To be added.\n    return:\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.ApplyCurrentValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  id: ApplyOriginalValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: ApplyOriginalValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public TEntity ApplyOriginalValues (TEntity originalEntity);\n    parameters:\n    - id: originalEntity\n      type: TEntity\n      description: To be added.\n    return:\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.ApplyOriginalValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.Attach(`0)\n  id: Attach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: Attach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Attach(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.Attach(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Attach (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.Attach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.CreateObject\n  id: CreateObject\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: CreateObject()\n  nameWithType: ObjectSet<TEntity>.CreateObject()\n  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public TEntity CreateObject ();\n    parameters: []\n    return:\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.CreateObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.CreateObject``1\n  id: CreateObject``1\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: CreateObject()\n  nameWithType: ObjectSet<TEntity>.CreateObject()\n  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: 'public T CreateObject<T> () where T : class, TEntity;'\n    parameters: []\n    return:\n      type: T\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.CreateObject<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  id: DeleteObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: DeleteObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.DeleteObject(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.DeleteObject(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void DeleteObject (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.DeleteObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.Detach(`0)\n  id: Detach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: Detach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Detach(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.Detach(TEntity)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public void Detach (TEntity entity);\n    parameters:\n    - id: entity\n      type: TEntity\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.Detach*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Objects.ObjectSet`1.EntitySet\n  id: EntitySet\n  parent: System.Data.Objects.ObjectSet`1\n  langs:\n  - csharp\n  name: EntitySet\n  nameWithType: ObjectSet<TEntity>.EntitySet\n  fullName: System.Data.Objects.ObjectSet<TEntity>.EntitySet\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Metadata.Edm.EntitySet EntitySet { get; }\n    return:\n      type: System.Data.Metadata.Edm.EntitySet\n      description: To be added.\n  overload: System.Data.Objects.ObjectSet`1.EntitySet*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: System.Data.Objects.ObjectQuery<TEntity>\n- uid: System.Data.Objects.ObjectSet`1.AddObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: AddObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.AddObject(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.AddObject(TEntity)\n- uid: TEntity\n  isExternal: true\n  name: TEntity\n  nameWithType: TEntity\n  fullName: TEntity\n- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyCurrentValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyCurrentValues(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyOriginalValues(TEntity)\n  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyOriginalValues(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.Attach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Attach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Attach(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.Attach(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.CreateObject\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject()\n  nameWithType: ObjectSet<TEntity>.CreateObject()\n  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject()\n- uid: System.Data.Objects.ObjectSet`1.CreateObject``1\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject()\n  nameWithType: ObjectSet<TEntity>.CreateObject()\n  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Objects.ObjectSet`1.DeleteObject(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: DeleteObject(TEntity)\n  nameWithType: ObjectSet<TEntity>.DeleteObject(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.DeleteObject(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.Detach(`0)\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Detach(TEntity)\n  nameWithType: ObjectSet<TEntity>.Detach(TEntity)\n  fullName: System.Data.Objects.ObjectSet<TEntity>.Detach(TEntity)\n- uid: System.Data.Objects.ObjectSet`1.EntitySet\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: EntitySet\n  nameWithType: ObjectSet<TEntity>.EntitySet\n  fullName: System.Data.Objects.ObjectSet<TEntity>.EntitySet\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Objects.ObjectSet`1.AddObject*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: AddObject\n  nameWithType: ObjectSet<TEntity>.AddObject\n- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyCurrentValues\n  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues\n- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: ApplyOriginalValues\n  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues\n- uid: System.Data.Objects.ObjectSet`1.Attach*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Attach\n  nameWithType: ObjectSet<TEntity>.Attach\n- uid: System.Data.Objects.ObjectSet`1.CreateObject*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject\n  nameWithType: ObjectSet<TEntity>.CreateObject\n- uid: System.Data.Objects.ObjectSet`1.CreateObject<T>*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: CreateObject<T>\n  nameWithType: ObjectSet<TEntity>.CreateObject<T>\n- uid: System.Data.Objects.ObjectSet`1.DeleteObject*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: DeleteObject\n  nameWithType: ObjectSet<TEntity>.DeleteObject\n- uid: System.Data.Objects.ObjectSet`1.Detach*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: Detach\n  nameWithType: ObjectSet<TEntity>.Detach\n- uid: System.Data.Objects.ObjectSet`1.EntitySet*\n  parent: System.Data.Objects.ObjectSet`1\n  isExternal: false\n  name: EntitySet\n  nameWithType: ObjectSet<TEntity>.EntitySet\n"}