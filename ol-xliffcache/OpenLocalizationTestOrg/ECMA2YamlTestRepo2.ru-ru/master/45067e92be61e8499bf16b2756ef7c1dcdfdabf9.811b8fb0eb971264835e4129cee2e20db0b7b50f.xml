{"nodes":[{"pos":[923,1074],"content":"Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.","pos":[0,151]}]},{"pos":[1087,2077],"content":"The BinaryMessageFormatter is very efficient and can be used to serialize most objects. The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does. Loosely coupled means that the client and the server can independently version the type that is sent and received.       When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body. When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.       BinaryMessageFormatter provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>. Use the BinaryMessageFormatter when pure speed rather than loosely coupled messaging is desired.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BinaryMessageFormatter is very efficient and can be used to serialize most objects. The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does. Loosely coupled means that the client and the server can independently version the type that is sent and received.       When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body. When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.       BinaryMessageFormatter provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>. Use the BinaryMessageFormatter when pure speed rather than loosely coupled messaging is desired.","pos":[0,986],"nodes":[{"content":"The BinaryMessageFormatter is very efficient and can be used to serialize most objects.","pos":[0,87]},{"content":"The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the &lt;xref:System.Messaging.XmlMessageFormatter&gt; does.","pos":[88,239],"source":" The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does."},{"content":"Loosely coupled means that the client and the server can independently version the type that is sent and received.","pos":[240,354]},{"content":"When the application sends a message to the queue using an instance of the &lt;xref:System.Messaging.MessageQueue&gt; class, the formatter serializes the object into a stream and inserts it into the message body.","pos":[361,567],"source":"       When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body."},{"content":"When reading from a queue using a &lt;xref:System.Messaging.MessageQueue&gt;, the formatter deserializes the message data into the &lt;xref:System.Messaging.Message.Body%2A&gt; property of a &lt;xref:System.Messaging.Message&gt;.","pos":[568,779],"source":" When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>."},{"content":"BinaryMessageFormatter provides faster throughput than the &lt;xref:System.Messaging.XmlMessageFormatter&gt;.","pos":[786,889],"source":"       BinaryMessageFormatter provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>."},{"content":"Use the BinaryMessageFormatter when pure speed rather than loosely coupled messaging is desired.","pos":[890,986]}]}]},{"pos":[3071,3233],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.BinaryMessageFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class without specifying a type style or top object assembly style.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref> class without specifying a type style or top object assembly style."},{"pos":[3245,3664],"content":"You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You must specify values for the &lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt; property (which defines how the root object in a graph is laid out) and the &lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt; property (which defines how object type descriptions are laid out) before using an instance of the &lt;xref:System.Messaging.BinaryMessageFormatter&gt; class to serialize and send a message.","pos":[0,419],"source":"You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message."}]},{"pos":[4616,4786],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.BinaryMessageFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, specifying the formats of the root object and the type descriptions.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref> class, specifying the formats of the root object and the type descriptions."},{"pos":[5129,5214],"content":"Determines how the top (root) object of a graph is laid out in the serialized stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines how the top (root) object of a graph is laid out in the serialized stream.","pos":[0,85]}]},{"pos":[5326,5397],"content":"Determines how type descriptions are laid out in the serialized stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines how type descriptions are laid out in the serialized stream.","pos":[0,71]}]},{"pos":[5929,6006],"content":"Determines whether the formatter can deserialize the contents of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the formatter can deserialize the contents of the message.","pos":[0,77]}]},{"pos":[6019,6354],"content":"CanRead returns `false` if the message body is not a binary object.       On the receiving computer, CanRead returns `true` if the assembly for the class to be deserialized exists locally. The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CanRead returns <ph id=\"ph1\">`false`</ph> if the message body is not a binary object.","pos":[0,67],"source":"CanRead returns `false` if the message body is not a binary object."},{"content":"On the receiving computer, CanRead returns <ph id=\"ph1\">`true`</ph> if the assembly for the class to be deserialized exists locally.","pos":[74,188],"source":"       On the receiving computer, CanRead returns `true` if the assembly for the class to be deserialized exists locally."},{"content":"The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).","pos":[189,333]}]},{"pos":[6525,6586],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Messaging.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to inspect.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Messaging.Message\"></xref> to inspect."},{"pos":[6645,6841],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the binary message formatter can deserialize the message; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binary message formatter can deserialize the message; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7019,7118],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>message</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7491,7749],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.BinaryMessageFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class whose read/write properties (the root object and type description formats) are the same as the current <bpt id=\"p2\">&lt;xref href=\"System.Messaging.BinaryMessageFormatter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref> class whose read/write properties (the root object and type description formats) are the same as the current <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref>."},{"pos":[7761,7989],"content":"This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>. It is used for scalability, but does not guarantee read or write thread safety.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>. It is used for scalability, but does not guarantee read or write thread safety.","pos":[0,228],"nodes":[{"content":"This method creates a copy of the formatter and initializes all its properties to the values of this &lt;xref:System.Messaging.BinaryMessageFormatter&gt;.","pos":[0,148],"source":"This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>."},{"content":"It is used for scalability, but does not guarantee read or write thread safety.","pos":[149,228]}]}]},{"pos":[8113,8305],"content":"An object whose properties are identical to those of this <bpt id=\"p1\">&lt;xref href=\"System.Messaging.BinaryMessageFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, but whose metadata does not specify it to be a formatter class instance.","needQuote":true,"needEscape":true,"source":"An object whose properties are identical to those of this <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref>, but whose metadata does not specify it to be a formatter class instance."},{"pos":[8822,8925],"content":"Reads the contents from the given message and creates an object that contains the deserialized message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reads the contents from the given message and creates an object that contains the deserialized message.","pos":[0,103]}]},{"pos":[8938,9411],"content":"> [!IMPORTANT] >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).       The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it. If the body represents a custom class, the assembly for that class must exist locally.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  Calling this method with untrusted data is a security risk.","pos":[0,77],"source":"> [!IMPORTANT] >  Calling this method with untrusted data is a security risk."},{"content":"Call this method only with trusted data.","pos":[78,118]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Untrusted Data Security Risks<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.","pos":[119,224],"source":" For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)."},{"content":"The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.","pos":[231,383]},{"content":"If the body represents a custom class, the assembly for that class must exist locally.","pos":[384,470]}]},{"pos":[9581,9665],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Messaging.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in binary format, to deserialize.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Messaging.Message\"></xref>, in binary format, to deserialize."},{"pos":[9723,9748],"content":"The deserialized message.","needQuote":true,"needEscape":true,"nodes":[{"content":"The deserialized message.","pos":[0,25]}]},{"pos":[9931,10030],"content":"The message's <xref:System.Messaging.Message.BodyType*> property does not indicate a binary object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message's &lt;xref:System.Messaging.Message.BodyType*&gt; property does not indicate a binary object.","pos":[0,99],"source":"The message's <xref:System.Messaging.Message.BodyType*> property does not indicate a binary object."}]},{"pos":[10133,10232],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>message</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10651,10787],"content":"Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.","pos":[0,136]}]},{"pos":[10799,10863],"content":"Currently, you should accept the default value, <ph id=\"ph1\">`AssemblyStyle`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Currently, you should accept the default value, `AssemblyStyle`."},{"pos":[11093,11237],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that defines the deserialization behavior.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\"></xref> values that defines the deserialization behavior."},{"pos":[11717,11811],"content":"Gets or sets a value that defines how type descriptions are laid out in the serialized stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that defines how type descriptions are laid out in the serialized stream.","pos":[0,94]}]},{"pos":[11823,11889],"content":"Currently, you should accept the default value, <ph id=\"ph1\">`TypesWhenNeeded`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Currently, you should accept the default value, `TypesWhenNeeded`."},{"pos":[12106,12229],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.Formatters.FormatterTypeStyle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that defines the type description format.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.Formatters.FormatterTypeStyle\"></xref> that defines the type description format."},{"pos":[12805,12855],"content":"Serializes an object into the body of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes an object into the body of the message.","pos":[0,50]}]},{"pos":[12868,13385],"content":"The top object format and type format need not be specified to write to the queue as they must be when reading. The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.       The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled. However, it is compact, so the formatter is efficient for large objects.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The top object format and type format need not be specified to write to the queue as they must be when reading. The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.       The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled. However, it is compact, so the formatter is efficient for large objects.","pos":[0,515],"nodes":[{"content":"The top object format and type format need not be specified to write to the queue as they must be when reading.","pos":[0,111]},{"content":"The &lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt; and &lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt; properties are used by the formatter only when deserializing a message.","pos":[112,318],"source":" The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message."},{"content":"The &lt;xref:System.Messaging.BinaryMessageFormatter&gt; can serialize most objects, but the result is not loosely coupled.","pos":[325,442],"source":"       The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled."},{"content":"However, it is compact, so the formatter is efficient for large objects.","pos":[443,515]}]}]},{"pos":[13566,13704],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Messaging.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> whose &lt;xref:System.Messaging.Message.Body*&gt; property will contain the serialized object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Messaging.Message\"></xref> whose <xref:System.Messaging.Message.Body*> property will contain the serialized object."},{"pos":[13764,13814],"content":"The object to be serialized into the message body.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be serialized into the message body.","pos":[0,50]}]},{"pos":[13990,14089],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">message</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>message</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.BinaryMessageFormatter\n  id: BinaryMessageFormatter\n  children:\n  - System.Messaging.BinaryMessageFormatter.#ctor\n  - System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)\n  - System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)\n  - System.Messaging.BinaryMessageFormatter.Clone\n  - System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)\n  - System.Messaging.BinaryMessageFormatter.TopObjectFormat\n  - System.Messaging.BinaryMessageFormatter.TypeFormat\n  - System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)\n  langs:\n  - csharp\n  name: BinaryMessageFormatter\n  nameWithType: BinaryMessageFormatter\n  fullName: System.Messaging.BinaryMessageFormatter\n  type: Class\n  summary: Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.\n  remarks: \"The BinaryMessageFormatter is very efficient and can be used to serialize most objects. The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does. Loosely coupled means that the client and the server can independently version the type that is sent and received.  \\n  \\n When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body. When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.  \\n  \\n BinaryMessageFormatter provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>. Use the BinaryMessageFormatter when pure speed rather than loosely coupled messaging is desired.\"\n  example:\n  - >-\n    [!code-cpp[MessagingBinaryFormatter#1](~/add/codesnippet/cpp/t-system.messaging.binar_1.cpp)]\n     [!code-cs[MessagingBinaryFormatter#1](~/add/codesnippet/csharp/t-system.messaging.binar_1.cs)]\n     [!code-vb[MessagingBinaryFormatter#1](~/add/codesnippet/visualbasic/t-system.messaging.binar_1.vb)]\n  syntax:\n    content: 'public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  - System.Messaging.IMessageFormatter\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.#ctor\n  id: '#ctor'\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: BinaryMessageFormatter()\n  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()\n  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref> class without specifying a type style or top object assembly style.\n  remarks: You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.\n  syntax:\n    content: public BinaryMessageFormatter ();\n    parameters: []\n  overload: System.Messaging.BinaryMessageFormatter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)\n  id: '#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)'\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)\n  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)\n  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref> class, specifying the formats of the root object and the type descriptions.\n  syntax:\n    content: public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);\n    parameters:\n    - id: topObjectFormat\n      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\n      description: Determines how the top (root) object of a graph is laid out in the serialized stream.\n    - id: typeFormat\n      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle\n      description: Determines how type descriptions are laid out in the serialized stream.\n  overload: System.Messaging.BinaryMessageFormatter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)\n  id: CanRead(System.Messaging.Message)\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: CanRead(Message)\n  nameWithType: BinaryMessageFormatter.CanRead(Message)\n  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Determines whether the formatter can deserialize the contents of the message.\n  remarks: \"CanRead returns `false` if the message body is not a binary object.  \\n  \\n On the receiving computer, CanRead returns `true` if the assembly for the class to be deserialized exists locally. The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).\"\n  syntax:\n    content: public bool CanRead (System.Messaging.Message message);\n    parameters:\n    - id: message\n      type: System.Messaging.Message\n      description: The <xref href=\"System.Messaging.Message\"></xref> to inspect.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the binary message formatter can deserialize the message; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Messaging.BinaryMessageFormatter.CanRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>message</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.Clone\n  id: Clone\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BinaryMessageFormatter.Clone()\n  fullName: System.Messaging.BinaryMessageFormatter.Clone()\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Creates an instance of the <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref> class whose read/write properties (the root object and type description formats) are the same as the current <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref>.\n  remarks: This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>. It is used for scalability, but does not guarantee read or write thread safety.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: An object whose properties are identical to those of this <xref href=\"System.Messaging.BinaryMessageFormatter\"></xref>, but whose metadata does not specify it to be a formatter class instance.\n  overload: System.Messaging.BinaryMessageFormatter.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)\n  id: Read(System.Messaging.Message)\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: Read(Message)\n  nameWithType: BinaryMessageFormatter.Read(Message)\n  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Reads the contents from the given message and creates an object that contains the deserialized message.\n  remarks: \"> [!IMPORTANT]\\n>  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).  \\n  \\n The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it. If the body represents a custom class, the assembly for that class must exist locally.\"\n  syntax:\n    content: public object Read (System.Messaging.Message message);\n    parameters:\n    - id: message\n      type: System.Messaging.Message\n      description: The <xref href=\"System.Messaging.Message\"></xref>, in binary format, to deserialize.\n    return:\n      type: System.Object\n      description: The deserialized message.\n  overload: System.Messaging.BinaryMessageFormatter.Read*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The message's <xref:System.Messaging.Message.BodyType*> property does not indicate a binary object.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>message</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat\n  id: TopObjectFormat\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: TopObjectFormat\n  nameWithType: BinaryMessageFormatter.TopObjectFormat\n  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.\n  remarks: Currently, you should accept the default value, `AssemblyStyle`.\n  syntax:\n    content: public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }\n    return:\n      type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\n      description: One of the <xref href=\"System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\"></xref> values that defines the deserialization behavior.\n  overload: System.Messaging.BinaryMessageFormatter.TopObjectFormat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.TypeFormat\n  id: TypeFormat\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: TypeFormat\n  nameWithType: BinaryMessageFormatter.TypeFormat\n  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets or sets a value that defines how type descriptions are laid out in the serialized stream.\n  remarks: Currently, you should accept the default value, `TypesWhenNeeded`.\n  syntax:\n    content: public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }\n    return:\n      type: System.Runtime.Serialization.Formatters.FormatterTypeStyle\n      description: A <xref href=\"System.Runtime.Serialization.Formatters.FormatterTypeStyle\"></xref> that defines the type description format.\n  overload: System.Messaging.BinaryMessageFormatter.TypeFormat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)\n  id: Write(System.Messaging.Message,System.Object)\n  parent: System.Messaging.BinaryMessageFormatter\n  langs:\n  - csharp\n  name: Write(Message,Object)\n  nameWithType: BinaryMessageFormatter.Write(Message,Object)\n  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Serializes an object into the body of the message.\n  remarks: \"The top object format and type format need not be specified to write to the queue as they must be when reading. The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.  \\n  \\n The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled. However, it is compact, so the formatter is efficient for large objects.\"\n  syntax:\n    content: public void Write (System.Messaging.Message message, object obj);\n    parameters:\n    - id: message\n      type: System.Messaging.Message\n      description: The <xref href=\"System.Messaging.Message\"></xref> whose <xref:System.Messaging.Message.Body*> property will contain the serialized object.\n    - id: obj\n      type: System.Object\n      description: The object to be serialized into the message body.\n  overload: System.Messaging.BinaryMessageFormatter.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>message</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Messaging.BinaryMessageFormatter.#ctor\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: BinaryMessageFormatter()\n  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter()\n  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter()\n- uid: System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)\n  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)\n  fullName: System.Messaging.BinaryMessageFormatter.BinaryMessageFormatter(FormatterAssemblyStyle,FormatterTypeStyle)\n- uid: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\n  parent: System.Runtime.Serialization.Formatters\n  isExternal: false\n  name: FormatterAssemblyStyle\n  nameWithType: FormatterAssemblyStyle\n  fullName: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle\n- uid: System.Runtime.Serialization.Formatters.FormatterTypeStyle\n  parent: System.Runtime.Serialization.Formatters\n  isExternal: false\n  name: FormatterTypeStyle\n  nameWithType: FormatterTypeStyle\n  fullName: System.Runtime.Serialization.Formatters.FormatterTypeStyle\n- uid: System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: CanRead(Message)\n  nameWithType: BinaryMessageFormatter.CanRead(Message)\n  fullName: System.Messaging.BinaryMessageFormatter.CanRead(Message)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Messaging.Message\n  parent: System.Messaging\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Messaging.Message\n- uid: System.Messaging.BinaryMessageFormatter.Clone\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: Clone()\n  nameWithType: BinaryMessageFormatter.Clone()\n  fullName: System.Messaging.BinaryMessageFormatter.Clone()\n- uid: System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: Read(Message)\n  nameWithType: BinaryMessageFormatter.Read(Message)\n  fullName: System.Messaging.BinaryMessageFormatter.Read(Message)\n- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: TopObjectFormat\n  nameWithType: BinaryMessageFormatter.TopObjectFormat\n  fullName: System.Messaging.BinaryMessageFormatter.TopObjectFormat\n- uid: System.Messaging.BinaryMessageFormatter.TypeFormat\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: TypeFormat\n  nameWithType: BinaryMessageFormatter.TypeFormat\n  fullName: System.Messaging.BinaryMessageFormatter.TypeFormat\n- uid: System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: Write(Message,Object)\n  nameWithType: BinaryMessageFormatter.Write(Message,Object)\n  fullName: System.Messaging.BinaryMessageFormatter.Write(Message,Object)\n- uid: System.Messaging.BinaryMessageFormatter.#ctor*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: BinaryMessageFormatter\n  nameWithType: BinaryMessageFormatter.BinaryMessageFormatter\n- uid: System.Messaging.BinaryMessageFormatter.CanRead*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: CanRead\n  nameWithType: BinaryMessageFormatter.CanRead\n- uid: System.Messaging.BinaryMessageFormatter.Clone*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: Clone\n  nameWithType: BinaryMessageFormatter.Clone\n- uid: System.Messaging.BinaryMessageFormatter.Read*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: Read\n  nameWithType: BinaryMessageFormatter.Read\n- uid: System.Messaging.BinaryMessageFormatter.TopObjectFormat*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: TopObjectFormat\n  nameWithType: BinaryMessageFormatter.TopObjectFormat\n- uid: System.Messaging.BinaryMessageFormatter.TypeFormat*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: TypeFormat\n  nameWithType: BinaryMessageFormatter.TypeFormat\n- uid: System.Messaging.BinaryMessageFormatter.Write*\n  parent: System.Messaging.BinaryMessageFormatter\n  isExternal: false\n  name: Write\n  nameWithType: BinaryMessageFormatter.Write\n"}