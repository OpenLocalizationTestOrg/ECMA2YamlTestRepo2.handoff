{"nodes":[{"pos":[1313,1415],"content":"Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.","pos":[0,102],"nodes":[{"content":"Controls the permissions related to user interfaces and the Clipboard.","pos":[0,70]},{"content":"This class cannot be inherited.","pos":[71,102]}]}]},{"pos":[1428,2325],"content":"Drawing and user input events in windows are user interfaces.       The permission to use windows can be one of the following: unrestricted, limited to <xref:System.Security.Permissions.UIPermissionWindow>, only <xref:System.Security.Permissions.UIPermissionWindow>, or no window drawing or user input event access allowed. <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionWindow> are restricted in title and size to prevent possible spoofing by potentially harmful code.       The permission to use the Clipboard can be one of the following: unrestricted, write-only, or no Clipboard access allowed. The paste limitation prevents potentially harmful applications from taking data from the Clipboard without the user's consent, while still allowing the cut, copy, and paste operations when initiated by the user through keyboard commands.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Drawing and user input events in windows are user interfaces.       The permission to use windows can be one of the following: unrestricted, limited to <xref:System.Security.Permissions.UIPermissionWindow>, only <xref:System.Security.Permissions.UIPermissionWindow>, or no window drawing or user input event access allowed. <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionWindow> are restricted in title and size to prevent possible spoofing by potentially harmful code.       The permission to use the Clipboard can be one of the following: unrestricted, write-only, or no Clipboard access allowed. The paste limitation prevents potentially harmful applications from taking data from the Clipboard without the user's consent, while still allowing the cut, copy, and paste operations when initiated by the user through keyboard commands.","pos":[0,893],"nodes":[{"content":"Drawing and user input events in windows are user interfaces.","pos":[0,61]},{"content":"The permission to use windows can be one of the following: unrestricted, limited to &lt;xref:System.Security.Permissions.UIPermissionWindow&gt;, only &lt;xref:System.Security.Permissions.UIPermissionWindow&gt;, or no window drawing or user input event access allowed.","pos":[68,323],"source":"       The permission to use windows can be one of the following: unrestricted, limited to <xref:System.Security.Permissions.UIPermissionWindow>, only <xref:System.Security.Permissions.UIPermissionWindow>, or no window drawing or user input event access allowed."},{"content":"&lt;xref:System.Security.Permissions.UIPermissionWindow&gt; and &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; are restricted in title and size to prevent possible spoofing by potentially harmful code.","pos":[324,526],"source":" <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionWindow> are restricted in title and size to prevent possible spoofing by potentially harmful code."},{"content":"The permission to use the Clipboard can be one of the following: unrestricted, write-only, or no Clipboard access allowed.","pos":[533,655]},{"content":"The paste limitation prevents potentially harmful applications from taking data from the Clipboard without the user's consent, while still allowing the cut, copy, and paste operations when initiated by the user through keyboard commands.","pos":[656,893]}]}]},{"pos":[3811,3979],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UIPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with either fully restricted or unrestricted access, as specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with either fully restricted or unrestricted access, as specified."},{"pos":[3991,4098],"content":"This constructor creates either the fully restricted (<ph id=\"ph1\">`None`</ph>) or the <ph id=\"ph2\">`Unrestricted`</ph> form of the permission.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission."},{"pos":[4855,4885],"content":"One of the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]},{"pos":[5054,5167],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>state</code> parameter is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>."},{"pos":[5729,5896],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UIPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the permissions for the Clipboard, and no access to windows.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with the permissions for the Clipboard, and no access to windows."},{"pos":[5908,6009],"content":"To set both the Clipboard and window permissions, use the constructor that takes parameters for both.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To set both the Clipboard and window permissions, use the constructor that takes parameters for both.","pos":[0,101]}]},{"pos":[6794,6824],"content":"One of the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]},{"pos":[6993,7126],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">clipboardFlag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.UIPermissionClipboard\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The <code>clipboardFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> value."},{"pos":[7673,7840],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UIPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the permissions for windows, and no access to the Clipboard.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with the permissions for windows, and no access to the Clipboard."},{"pos":[7852,7953],"content":"To set both the Clipboard and window permissions, use the constructor that takes parameters for both.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To set both the Clipboard and window permissions, use the constructor that takes parameters for both.","pos":[0,101]}]},{"pos":[8726,8756],"content":"One of the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]},{"pos":[8925,9052],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">windowFlag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.UIPermissionWindow\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The <code>windowFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> value."},{"pos":[9765,9928],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UIPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permissions for windows and the Clipboard.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with the specified permissions for windows and the Clipboard."},{"pos":[10783,10813],"content":"One of the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]},{"pos":[10919,10949],"content":"One of the enumeration values.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]},{"pos":[11119,11405],"content":"The <code>windowFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> value.       -or-       The <code>clipboardFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> value.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">windowFlag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.UIPermissionWindow\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[0,127],"source":"The <code>windowFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> value."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">clipboardFlag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.UIPermissionClipboard\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","pos":[134,278],"source":"       -or-       The <code>clipboardFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> value."}]},{"pos":[11791,11855],"content":"Gets or sets the Clipboard access represented by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the Clipboard access represented by the permission.","pos":[0,64]}]},{"pos":[12053,12142],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UIPermissionClipboard\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> values."},{"pos":[12587,12651],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[12663,12755],"content":"A copy of the permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A copy of the permission represents the same access to resources as the original permission.","pos":[0,92]}]},{"pos":[13722,13755],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[14321,14391],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[15384,15436],"content":"The XML encoding used to reconstruct the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding used to reconstruct the permission.","pos":[0,52]}]},{"pos":[15615,15710],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>esd</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15806,15954],"content":"The <code>esd</code> parameter is not a valid permission element.       -or-       The <code>esd</code> parameter's version number is not valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","pos":[0,65],"source":"The <code>esd</code> parameter is not a valid permission element."},{"content":"-or-       The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter's version number is not valid.","pos":[72,144],"source":"       -or-       The <code>esd</code> parameter's version number is not valid."}]},{"pos":[16435,16548],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[16560,16919],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Specifically, it represents the least permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Specifically, it represents the least permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.","pos":[0,359],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Specifically, it represents the least permissive values of &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; and &lt;xref:System.Security.Permissions.UIPermissionClipboard&gt; from those in the current permission and the specified permission.","pos":[119,359],"source":" Specifically, it represents the least permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission."}]}]},{"pos":[17923,18029],"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","pos":[0,106],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be the same type as the current permission.","pos":[55,106]}]}]},{"pos":[18101,18320],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[18493,18649],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[19134,19216],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[19228,19752],"content":"The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission. That is, the specified permission contains at least the permissions contained in the subset. For IsSubsetOf to return `true`, both the <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> values of the current permission must be equal to or less permissive than the values of the specified permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission.","pos":[0,160]},{"content":"That is, the specified permission contains at least the permissions contained in the subset.","pos":[161,253]},{"content":"For IsSubsetOf to return <ph id=\"ph1\">`true`</ph>, both the &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; and &lt;xref:System.Security.Permissions.UIPermissionClipboard&gt; values of the current permission must be equal to or less permissive than the values of the specified permission.","pos":[254,524],"source":" For IsSubsetOf to return `true`, both the <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> values of the current permission must be equal to or less permissive than the values of the specified permission."}]},{"pos":[20735,20849],"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to test for the subset relationship. This permission must be the same type as the current permission.","pos":[0,114],"nodes":[{"content":"A permission to test for the subset relationship.","pos":[0,49]},{"content":"This permission must be the same type as the current permission.","pos":[50,114]}]}]},{"pos":[20908,21110],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21284,21440],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[21854,21928],"content":"Returns a value indicating whether the current permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]},{"pos":[21940,22038],"content":"An unrestricted permission represents access to any and all resources protected by the permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An unrestricted permission represents access to any and all resources protected by the permission.","pos":[0,98]}]},{"pos":[22170,22348],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22803,22867],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[23858,23925],"content":"An XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]},{"pos":[24462,24548],"content":"Creates a permission that is the union of the permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the permission and the specified permission.","pos":[0,86]}]},{"pos":[24560,24989],"content":"The result of a call to Union is a permission that represents all the operations represented by the current permission as well as all the operations represented by the specified permission. Specifically, it represents the most permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by the current permission as well as all the operations represented by the specified permission. Specifically, it represents the most permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.","pos":[0,429],"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations represented by the current permission as well as all the operations represented by the specified permission.","pos":[0,189]},{"content":"Specifically, it represents the most permissive values of &lt;xref:System.Security.Permissions.UIPermissionWindow&gt; and &lt;xref:System.Security.Permissions.UIPermissionClipboard&gt; from those in the current permission and the specified permission.","pos":[190,429],"source":" Specifically, it represents the most permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission."}]}]},{"pos":[25991,26095],"content":"A permission to combine with the current permission. It must be the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be the same type as the current permission.","pos":[0,104],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be the same type as the current permission.","pos":[53,104]}]}]},{"pos":[26167,26265],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[26434,26590],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[26960,27021],"content":"Gets or sets the window access represented by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the window access represented by the permission.","pos":[0,61]}]},{"pos":[27777,27863],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UIPermissionWindow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> values."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.UIPermission\n  id: UIPermission\n  children:\n  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)\n  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)\n  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)\n  - System.Security.Permissions.UIPermission.Clipboard\n  - System.Security.Permissions.UIPermission.Copy\n  - System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.UIPermission.IsUnrestricted\n  - System.Security.Permissions.UIPermission.ToXml\n  - System.Security.Permissions.UIPermission.Union(System.Security.IPermission)\n  - System.Security.Permissions.UIPermission.Window\n  langs:\n  - csharp\n  name: UIPermission\n  nameWithType: UIPermission\n  fullName: System.Security.Permissions.UIPermission\n  type: Class\n  summary: Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.\n  remarks: \"Drawing and user input events in windows are user interfaces.  \\n  \\n The permission to use windows can be one of the following: unrestricted, limited to <xref:System.Security.Permissions.UIPermissionWindow>, only <xref:System.Security.Permissions.UIPermissionWindow>, or no window drawing or user input event access allowed. <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionWindow> are restricted in title and size to prevent possible spoofing by potentially harmful code.  \\n  \\n The permission to use the Clipboard can be one of the following: unrestricted, write-only, or no Clipboard access allowed. The paste limitation prevents potentially harmful applications from taking data from the Clipboard without the user's consent, while still allowing the cut, copy, and paste operations when initiated by the user through keyboard commands.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class UIPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: UIPermission(PermissionState)\n  nameWithType: UIPermission.UIPermission(PermissionState)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with either fully restricted or unrestricted access, as specified.\n  remarks: This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission.\n  example:\n  - \"The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#7](~/add/codesnippet/csharp/e990e3fe-cf11-4eb4-a027-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#7](~/add/codesnippet/cpp/e990e3fe-cf11-4eb4-a027-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#7](~/add/codesnippet/visualbasic/e990e3fe-cf11-4eb4-a027-_1.vb)]\"\n  syntax:\n    content: public UIPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the enumeration values.\n  overload: System.Security.Permissions.UIPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)\n  id: '#ctor(System.Security.Permissions.UIPermissionClipboard)'\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: UIPermission(UIPermissionClipboard)\n  nameWithType: UIPermission.UIPermission(UIPermissionClipboard)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionClipboard)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with the permissions for the Clipboard, and no access to windows.\n  remarks: To set both the Clipboard and window permissions, use the constructor that takes parameters for both.\n  example:\n  - \"The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#9](~/add/codesnippet/csharp/519c51a2-48d5-4ed4-b336-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#9](~/add/codesnippet/cpp/519c51a2-48d5-4ed4-b336-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#9](~/add/codesnippet/visualbasic/519c51a2-48d5-4ed4-b336-_1.vb)]\"\n  syntax:\n    content: public UIPermission (System.Security.Permissions.UIPermissionClipboard clipboardFlag);\n    parameters:\n    - id: clipboardFlag\n      type: System.Security.Permissions.UIPermissionClipboard\n      description: One of the enumeration values.\n  overload: System.Security.Permissions.UIPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>clipboardFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> value.\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)\n  id: '#ctor(System.Security.Permissions.UIPermissionWindow)'\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: UIPermission(UIPermissionWindow)\n  nameWithType: UIPermission.UIPermission(UIPermissionWindow)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with the permissions for windows, and no access to the Clipboard.\n  remarks: To set both the Clipboard and window permissions, use the constructor that takes parameters for both.\n  example:\n  - \"The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#8](~/add/codesnippet/csharp/ba800fdb-6254-4e0e-86c5-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#8](~/add/codesnippet/cpp/ba800fdb-6254-4e0e-86c5-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#8](~/add/codesnippet/visualbasic/ba800fdb-6254-4e0e-86c5-_1.vb)]\"\n  syntax:\n    content: public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag);\n    parameters:\n    - id: windowFlag\n      type: System.Security.Permissions.UIPermissionWindow\n      description: One of the enumeration values.\n  overload: System.Security.Permissions.UIPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>windowFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> value.\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)\n  id: '#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)'\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: UIPermission(UIPermissionWindow,UIPermissionClipboard)\n  nameWithType: UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.UIPermission\"></xref> class with the specified permissions for windows and the Clipboard.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the UIPermission constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#10](~/add/codesnippet/csharp/14bd8a50-0977-45af-9b3a-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#10](~/add/codesnippet/cpp/14bd8a50-0977-45af-9b3a-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#10](~/add/codesnippet/visualbasic/14bd8a50-0977-45af-9b3a-_1.vb)]\"\n  syntax:\n    content: public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag, System.Security.Permissions.UIPermissionClipboard clipboardFlag);\n    parameters:\n    - id: windowFlag\n      type: System.Security.Permissions.UIPermissionWindow\n      description: One of the enumeration values.\n    - id: clipboardFlag\n      type: System.Security.Permissions.UIPermissionClipboard\n      description: One of the enumeration values.\n  overload: System.Security.Permissions.UIPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>windowFlag</code> parameter is not a valid <xref href=\\\"System.Security.Permissions.UIPermissionWindow\\\"></xref> value.  \\n  \\n -or-  \\n  \\n The <code>clipboardFlag</code> parameter is not a valid <xref href=\\\"System.Security.Permissions.UIPermissionClipboard\\\"></xref> value.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.Clipboard\n  id: Clipboard\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: Clipboard\n  nameWithType: UIPermission.Clipboard\n  fullName: System.Security.Permissions.UIPermission.Clipboard\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the Clipboard access represented by the permission.\n  syntax:\n    content: public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }\n    return:\n      type: System.Security.Permissions.UIPermissionClipboard\n      description: One of the <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> values.\n  overload: System.Security.Permissions.UIPermission.Clipboard*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: UIPermission.Copy()\n  fullName: System.Security.Permissions.UIPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of the permission represents the same access to resources as the original permission.\n  example:\n  - \"The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#5](~/add/codesnippet/csharp/m-system.security.permis_19_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#5](~/add/codesnippet/cpp/m-system.security.permis_19_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#5](~/add/codesnippet/visualbasic/m-system.security.permis_19_1.vb)]\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.UIPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: UIPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.UIPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  remarks: ''\n  example:\n  - \"The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#6](~/add/codesnippet/csharp/b4e05dbf-6e29-4076-9efb-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#6](~/add/codesnippet/cpp/b4e05dbf-6e29-4076-9efb-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#6](~/add/codesnippet/visualbasic/b4e05dbf-6e29-4076-9efb-_1.vb)]\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding used to reconstruct the permission.\n  overload: System.Security.Permissions.UIPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The <code>esd</code> parameter's version number is not valid.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: UIPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.UIPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Specifically, it represents the least permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.\n  example:\n  - \"The following code example shows the behavior of the Intersect method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#4](~/add/codesnippet/csharp/b36c2eae-237a-4f19-b255-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#4](~/add/codesnippet/cpp/b36c2eae-237a-4f19-b255-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#4](~/add/codesnippet/visualbasic/b36c2eae-237a-4f19-b255-_1.vb)]\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.UIPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: UIPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.UIPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission. That is, the specified permission contains at least the permissions contained in the subset. For IsSubsetOf to return `true`, both the <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> values of the current permission must be equal to or less permissive than the values of the specified permission.\n  example:\n  - \"The following code example shows the behavior of the IsSubsetOf method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#2](~/add/codesnippet/csharp/5bb99814-2dd0-4b32-a4d5-_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#2](~/add/codesnippet/cpp/5bb99814-2dd0-4b32-a4d5-_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#2](~/add/codesnippet/visualbasic/5bb99814-2dd0-4b32-a4d5-_1.vb)]\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to test for the subset relationship. This permission must be the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.UIPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: UIPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.UIPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to any and all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.UIPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: UIPermission.ToXml()\n  fullName: System.Security.Permissions.UIPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: ''\n  example:\n  - \"The following code example shows the behavior of the ToXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#6](~/add/codesnippet/csharp/m-system.security.permis_27_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#6](~/add/codesnippet/cpp/m-system.security.permis_27_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#6](~/add/codesnippet/visualbasic/m-system.security.permis_27_1.vb)]\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.UIPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: UIPermission.Union(IPermission)\n  fullName: System.Security.Permissions.UIPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the permission and the specified permission.\n  remarks: The result of a call to Union is a permission that represents all the operations represented by the current permission as well as all the operations represented by the specified permission. Specifically, it represents the most permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.\n  example:\n  - \"The following code example shows the behavior of the Union method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n> [!NOTE]\\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#3](~/add/codesnippet/csharp/m-system.security.permis_4_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#3](~/add/codesnippet/cpp/m-system.security.permis_4_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#3](~/add/codesnippet/visualbasic/m-system.security.permis_4_1.vb)]\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.UIPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.UIPermission.Window\n  id: Window\n  parent: System.Security.Permissions.UIPermission\n  langs:\n  - csharp\n  name: Window\n  nameWithType: UIPermission.Window\n  fullName: System.Security.Permissions.UIPermission.Window\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the window access represented by the permission.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of the Window property. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \\n  \\n [!code-cs[System.Security.Permissions.UIPermission#2](~/add/codesnippet/csharp/p-system.security.permis_25_1.cs)]\\n [!code-cpp[System.Security.Permissions.UIPermission#2](~/add/codesnippet/cpp/p-system.security.permis_25_1.cpp)]\\n [!code-vb[System.Security.Permissions.UIPermission#2](~/add/codesnippet/visualbasic/p-system.security.permis_25_1.vb)]\"\n  syntax:\n    content: public System.Security.Permissions.UIPermissionWindow Window { get; set; }\n    return:\n      type: System.Security.Permissions.UIPermissionWindow\n      description: One of the <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> values.\n  overload: System.Security.Permissions.UIPermission.Window*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: UIPermission(PermissionState)\n  nameWithType: UIPermission.UIPermission(PermissionState)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: UIPermission(UIPermissionClipboard)\n  nameWithType: UIPermission.UIPermission(UIPermissionClipboard)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionClipboard)\n- uid: System.Security.Permissions.UIPermissionClipboard\n  parent: System.Security.Permissions\n  isExternal: false\n  name: UIPermissionClipboard\n  nameWithType: UIPermissionClipboard\n  fullName: System.Security.Permissions.UIPermissionClipboard\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: UIPermission(UIPermissionWindow)\n  nameWithType: UIPermission.UIPermission(UIPermissionWindow)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow)\n- uid: System.Security.Permissions.UIPermissionWindow\n  parent: System.Security.Permissions\n  isExternal: false\n  name: UIPermissionWindow\n  nameWithType: UIPermissionWindow\n  fullName: System.Security.Permissions.UIPermissionWindow\n- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: UIPermission(UIPermissionWindow,UIPermissionClipboard)\n  nameWithType: UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)\n  fullName: System.Security.Permissions.UIPermission.UIPermission(UIPermissionWindow,UIPermissionClipboard)\n- uid: System.Security.Permissions.UIPermission.Clipboard\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Clipboard\n  nameWithType: UIPermission.Clipboard\n  fullName: System.Security.Permissions.UIPermission.Clipboard\n- uid: System.Security.Permissions.UIPermission.Copy\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: UIPermission.Copy()\n  fullName: System.Security.Permissions.UIPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: UIPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.UIPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: UIPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.UIPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: UIPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.UIPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.UIPermission.IsUnrestricted\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: UIPermission.IsUnrestricted()\n  fullName: System.Security.Permissions.UIPermission.IsUnrestricted()\n- uid: System.Security.Permissions.UIPermission.ToXml\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: UIPermission.ToXml()\n  fullName: System.Security.Permissions.UIPermission.ToXml()\n- uid: System.Security.Permissions.UIPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: UIPermission.Union(IPermission)\n  fullName: System.Security.Permissions.UIPermission.Union(IPermission)\n- uid: System.Security.Permissions.UIPermission.Window\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Window\n  nameWithType: UIPermission.Window\n  fullName: System.Security.Permissions.UIPermission.Window\n- uid: System.Security.Permissions.UIPermission.#ctor*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: UIPermission\n  nameWithType: UIPermission.UIPermission\n- uid: System.Security.Permissions.UIPermission.Clipboard*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Clipboard\n  nameWithType: UIPermission.Clipboard\n- uid: System.Security.Permissions.UIPermission.Copy*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Copy\n  nameWithType: UIPermission.Copy\n- uid: System.Security.Permissions.UIPermission.FromXml*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: UIPermission.FromXml\n- uid: System.Security.Permissions.UIPermission.Intersect*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: UIPermission.Intersect\n- uid: System.Security.Permissions.UIPermission.IsSubsetOf*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: UIPermission.IsSubsetOf\n- uid: System.Security.Permissions.UIPermission.IsUnrestricted*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: UIPermission.IsUnrestricted\n- uid: System.Security.Permissions.UIPermission.ToXml*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: UIPermission.ToXml\n- uid: System.Security.Permissions.UIPermission.Union*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Union\n  nameWithType: UIPermission.Union\n- uid: System.Security.Permissions.UIPermission.Window*\n  parent: System.Security.Permissions.UIPermission\n  isExternal: false\n  name: Window\n  nameWithType: UIPermission.Window\n"}