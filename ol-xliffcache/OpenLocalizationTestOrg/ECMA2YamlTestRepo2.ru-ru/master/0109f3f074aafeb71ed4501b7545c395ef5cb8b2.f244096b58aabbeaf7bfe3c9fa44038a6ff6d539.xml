{"nodes":[{"pos":[924,1033],"content":"Provides a type converter to convert <xref:System.Boolean> objects to and from various other representations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a type converter to convert &lt;xref:System.Boolean&gt; objects to and from various other representations.","pos":[0,109],"source":"Provides a type converter to convert <xref:System.Boolean> objects to and from various other representations."}]},{"pos":[1046,1649],"content":"This converter can only convert a <xref:System.Boolean> object to and from a string.       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  You should never create an instance of a BooleanConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a &lt;xref:System.Boolean&gt; object to and from a string.","pos":[0,84],"source":"This converter can only convert a <xref:System.Boolean> object to and from a string."},{"content":"For more information about type converters, see the &lt;xref:System.ComponentModel.TypeConverter&gt; base class and <bpt id=\"p1\">[</bpt>How to: Implement a Type Converter<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[91,277],"source":"       For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should never create an instance of a BooleanConverter.","pos":[283,354],"source":"      > [!NOTE] >  You should never create an instance of a BooleanConverter."},{"content":"Instead, call the &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method of the &lt;xref:System.ComponentModel.TypeDescriptor&gt; class.","pos":[355,497],"source":" Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class."},{"content":"For more information, see the examples in the &lt;xref:System.ComponentModel.TypeConverter&gt; base class.","pos":[498,598],"source":" For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."}]},{"pos":[5813,5913],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BooleanConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.BooleanConverter\"></xref> class."},{"pos":[6659,6801],"content":"Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.","pos":[0,142]}]},{"pos":[6814,7117],"content":"This converter can only convert a Boolean object to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a Boolean object to and from a string.","pos":[0,70]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[77,206],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[207,243],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[244,301],"source":" Also, properties on the context object can return `null`."}]},{"pos":[7361,7461],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[7526,7597],"content":"A <xref:System.Type> that represents the type you wish to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type you wish to convert from.","pos":[0,71],"source":"A <xref:System.Type> that represents the type you wish to convert from."}]},{"pos":[7656,7834],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this object can perform the conversion; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8616,8668],"content":"Converts the given value object to a Boolean object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the given value object to a Boolean object.","pos":[0,52]}]},{"pos":[8681,8984],"content":"This converter can only convert a Boolean object to and from a string.       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This converter can only convert a Boolean object to and from a string.","pos":[0,70]},{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[77,206],"source":"       The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[207,243],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[244,301],"source":" Also, properties on the context object can return `null`."}]},{"pos":[9266,9366],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[9449,9538],"content":"A <xref:System.Globalization.CultureInfo> that specifies the culture to which to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; that specifies the culture to which to convert.","pos":[0,89],"source":"A <xref:System.Globalization.CultureInfo> that specifies the culture to which to convert."}]},{"pos":[9600,9636],"content":"The <xref:System.Object> to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to convert.","pos":[0,36],"source":"The <xref:System.Object> to convert."}]},{"pos":[9694,9767],"content":"An &lt;xref:System.Object&gt; that represents the converted <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> that represents the converted <code>value</code>."},{"pos":[9936,9996],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a valid value for the target type.","needQuote":true,"needEscape":true,"source":"<code>value</code> is not a valid value for the target type."},{"pos":[10099,10134],"content":"The conversion cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conversion cannot be performed.","pos":[0,35]}]},{"pos":[10711,10774],"content":"Gets a collection of standard values for the Boolean data type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of standard values for the Boolean data type.","pos":[0,63]}]},{"pos":[10786,10852],"content":"The Boolean data type has two standard values, <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The Boolean data type has two standard values, `true` and `false`."},{"pos":[11137,11237],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[11342,11454],"content":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; that holds a standard set of valid values.","pos":[0,112],"source":"A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values."}]},{"pos":[12163,12334],"content":"Gets a value indicating whether the list of standard values returned from the <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> method is an exclusive list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the list of standard values returned from the &lt;xref:System.ComponentModel.BooleanConverter.GetStandardValues*&gt; method is an exclusive list.","pos":[0,171],"source":"Gets a value indicating whether the list of standard values returned from the <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> method is an exclusive list."}]},{"pos":[12346,12586],"content":"The Boolean data type has only two standard values, `true` and `false`. The <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from this method has all possible values. Therefore, this method always returns `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Boolean data type has only two standard values, <ph id=\"ph1\">`true`</ph> and <ph id=\"ph2\">`false`</ph>.","pos":[0,71],"source":"The Boolean data type has only two standard values, `true` and `false`."},{"content":"The &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; returned from this method has all possible values.","pos":[72,194],"source":" The <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from this method has all possible values."},{"content":"Therefore, this method always returns <ph id=\"ph1\">`true`</ph>.","pos":[195,240],"source":" Therefore, this method always returns `true`."}]},{"pos":[12824,12924],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[12983,13334],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> is an exhaustive list of possible values. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> because the &lt;xref:System.ComponentModel.TypeConverter.StandardValuesCollection&gt; returned from &lt;xref:System.ComponentModel.BooleanConverter.GetStandardValues*&gt; is an exhaustive list of possible values.","pos":[0,261],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> is an exhaustive list of possible values."},{"content":"This method never returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[262,351],"source":" This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14052,14161],"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this object supports a standard set of values that can be picked from a list.","pos":[0,109]}]},{"pos":[14173,14315],"content":"The Boolean data type supports standard values, because a Boolean can only be `true` or `false`. Therefore, this method always returns `true`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Boolean data type supports standard values, because a Boolean can only be <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","pos":[0,96],"source":"The Boolean data type supports standard values, because a Boolean can only be `true` or `false`."},{"content":"Therefore, this method always returns <ph id=\"ph1\">`true`</ph>.","pos":[97,142],"source":" Therefore, this method always returns `true`."}]},{"pos":[14553,14653],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that provides a format context.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."},{"pos":[14712,15001],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> can be called to find a common set of values the object supports. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> because &lt;xref:System.ComponentModel.BooleanConverter.GetStandardValues*&gt; can be called to find a common set of values the object supports.","pos":[0,199],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> can be called to find a common set of values the object supports."},{"content":"This method never returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[200,289],"source":" This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.BooleanConverter\n  id: BooleanConverter\n  children:\n  - System.ComponentModel.BooleanConverter.#ctor\n  - System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: BooleanConverter\n  nameWithType: BooleanConverter\n  fullName: System.ComponentModel.BooleanConverter\n  type: Class\n  summary: Provides a type converter to convert <xref:System.Boolean> objects to and from various other representations.\n  remarks: \"This converter can only convert a <xref:System.Boolean> object to and from a string.  \\n  \\n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  You should never create an instance of a BooleanConverter. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.\"\n  example:\n  - \"The following code example converts a variable of type <xref:System.Boolean> to and from a string.  \\n  \\n [!code-cs[Converters#3](~/add/codesnippet/csharp/t-system.componentmodel._25_1.cs)]\\n [!code-vb[Converters#3](~/add/codesnippet/visualbasic/t-system.componentmodel._25_1.vb)]\\n [!code-cpp[Converters#3](~/add/codesnippet/cpp/t-system.componentmodel._25_1.cpp)]\"\n  syntax:\n    content: 'public class BooleanConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.ComponentModel.BooleanConverter.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.BooleanConverter\n  langs:\n  - csharp\n  name: BooleanConverter()\n  nameWithType: BooleanConverter.BooleanConverter()\n  fullName: System.ComponentModel.BooleanConverter.BooleanConverter()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.BooleanConverter\"></xref> class.\n  syntax:\n    content: public BooleanConverter ();\n    parameters: []\n  overload: System.ComponentModel.BooleanConverter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.BooleanConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: BooleanConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.BooleanConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.\n  remarks: \"This converter can only convert a Boolean object to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref:System.Type> that represents the type you wish to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can perform the conversion; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.BooleanConverter.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.BooleanConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: BooleanConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.BooleanConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Converts the given value object to a Boolean object.\n  remarks: \"This converter can only convert a Boolean object to and from a string.  \\n  \\n The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> that specifies the culture to which to convert.\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to convert.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that represents the converted <code>value</code>.\n  overload: System.ComponentModel.BooleanConverter.ConvertFrom*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>value</code> is not a valid value for the target type.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion cannot be performed.\n  platform:\n  - net462\n- uid: System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.BooleanConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: BooleanConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.BooleanConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a collection of standard values for the Boolean data type.\n  remarks: The Boolean data type has two standard values, `true` and `false`.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.ComponentModel.TypeConverter.StandardValuesCollection\n      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> that holds a standard set of valid values.\n  overload: System.ComponentModel.BooleanConverter.GetStandardValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.BooleanConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: BooleanConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the list of standard values returned from the <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> method is an exclusive list.\n  remarks: The Boolean data type has only two standard values, `true` and `false`. The <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from this method has all possible values. Therefore, this method always returns `true`.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> is an exhaustive list of possible values. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.BooleanConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: BooleanConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.BooleanConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this object supports a standard set of values that can be picked from a list.\n  remarks: The Boolean data type supports standard values, because a Boolean can only be `true` or `false`. Therefore, this method always returns `true`.\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> because <xref:System.ComponentModel.BooleanConverter.GetStandardValues*> can be called to find a common set of values the object supports. This method never returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.BooleanConverter.GetStandardValuesSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.BooleanConverter.#ctor\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: BooleanConverter()\n  nameWithType: BooleanConverter.BooleanConverter()\n  fullName: System.ComponentModel.BooleanConverter.BooleanConverter()\n- uid: System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: BooleanConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.ComponentModel.BooleanConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: BooleanConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.ComponentModel.BooleanConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: BooleanConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: System.ComponentModel.BooleanConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.StandardValuesCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter+StandardValuesCollection\n  nameWithType: TypeConverter+StandardValuesCollection\n  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection\n- uid: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: BooleanConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: BooleanConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: System.ComponentModel.BooleanConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.BooleanConverter.#ctor*\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: BooleanConverter\n  nameWithType: BooleanConverter.BooleanConverter\n- uid: System.ComponentModel.BooleanConverter.CanConvertFrom*\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: BooleanConverter.CanConvertFrom\n- uid: System.ComponentModel.BooleanConverter.ConvertFrom*\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: BooleanConverter.ConvertFrom\n- uid: System.ComponentModel.BooleanConverter.GetStandardValues*\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: BooleanConverter.GetStandardValues\n- uid: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive*\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: BooleanConverter.GetStandardValuesExclusive\n- uid: System.ComponentModel.BooleanConverter.GetStandardValuesSupported*\n  parent: System.ComponentModel.BooleanConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: BooleanConverter.GetStandardValuesSupported\n"}