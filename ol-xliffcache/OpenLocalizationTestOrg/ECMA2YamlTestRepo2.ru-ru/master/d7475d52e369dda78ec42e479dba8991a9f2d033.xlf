<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7475d52e369dda78ec42e479dba8991a9f2d033</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.ObjectDataSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">016a0ab35713f73436d8cd2c1c37c0599c2ced80</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7895f2980f6395547d65d67512e1ca2df1a0f4c1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a business object that provides data to data-bound controls in multitier Web application architectures.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this topic:      -   <bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>Purpose<ept id="p2">](#purpose)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>Retrieving Data<ept id="p3">](#retrieving_data)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>Performing Data Operations<ept id="p4">](#performing_data_operations)</ept><ph id="ph4">      -   </ph><bpt id="p5">[</bpt>Filtering Data<ept id="p5">](#filtering_data)</ept><ph id="ph5">      -   </ph><bpt id="p6">[</bpt>Caching<ept id="p6">](#caching)</ept><ph id="ph6">      -   </ph><bpt id="p7">[</bpt>Features<ept id="p7">](#features)</ept><ph id="ph7">      -   </ph><bpt id="p8">[</bpt>Data View<ept id="p8">](#data_view)</ept><ph id="ph8">      -   </ph><bpt id="p9">[</bpt>Using LINQ to SQL<ept id="p9">](#using_linq_to_sql)</ept><ph id="ph9">      -   </ph><bpt id="p10">[</bpt>Declarative Syntax<ept id="p10">](#declarative_syntax)</ept>      <bpt id="p11">&lt;a name="introduction"&gt;</bpt><ept id="p11">&lt;/a&gt;</ept>    ## Introduction    An ObjectDataSource control works with a class that you create.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You create methods that retrieve and update data, and you provide the names of those methods to the ObjectDataSource control in markup.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>During rendering or postback processing, the ObjectDataSource calls the methods that you have specified.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no visual rendering of the ObjectDataSource control.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the ObjectDataSource does not support visual features such as the &lt;xref:System.Web.UI.DataSourceControl.EnableTheming%2A&gt; or &lt;xref:System.Web.UI.DataSourceControl.SkinID%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="purpose"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Purpose    A very common application design practice is to separate the presentation layer from business logic and to encapsulate the business logic in business objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>These business objects form a distinct layer between the presentation layer and the data tier, resulting in a three-tier application architecture.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource control enables developers to use an ASP.NET data source control while retaining their three-tier application architecture.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource control uses reflection to create instances of business objects and to call methods on them to retrieve, update, insert, and delete data.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property identifies the name of the class that the ObjectDataSource works with.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource control creates and destroys an instance of the class for each method call; it does not hold the object in memory for the lifetime of the Web request.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a serious consideration if the business object that you use requires many resources or is otherwise expensive to create and destroy.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using an expensive object might not be an optimal design choice, but you can control the life cycle of the object by using the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; events.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The methods that are identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; properties can be instance methods or <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) methods.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the methods are <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), an instance of the business object is not created, and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; events are not raised.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="retrieving_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Retrieving Data    To retrieve data from a business object, set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property to the name of the method that retrieves data.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method does not return an &lt;xref:System.Collections.IEnumerable&gt; or &lt;xref:System.Data.DataSet&gt; object, the object is wrapped by the runtime in an &lt;xref:System.Collections.IEnumerable&gt; collection.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method signature has parameters, you can add &lt;xref:System.Web.UI.WebControls.Parameter&gt; objects to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; collection, and then bind them to the values that you want to pass to the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for the ObjectDataSource control to use the parameters, the parameters must match the names and types of the parameters in the method signature.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource control retrieves data whenever the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides programmatic access to the method that is specified by &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property is called automatically by controls that are bound to the ObjectDataSource when their <ph id="ph1">`DataBind`</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">`DataSourceID`</ph> property of a data-bound control, the control automatically binds to data from the data source, as needed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">`DataSourceID`</ph> property is the recommended method for binding an ObjectDataSource control to a data-bound control.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can set the <ph id="ph1">`DataSource`</ph> property, but then you must explicitly call the <ph id="ph2">`DataBind`</ph> method of the data-bound control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method programmatically at any time to retrieve data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about binding data-bound controls to data source controls, see <bpt id="p1">[</bpt>Binding to Data Using a Data Source Control<ept id="p1">](http://msdn.microsoft.com/en-us/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)</ept>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="performing_data_operations"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Performing Data Operations    Depending on the capabilities of the business object that the ObjectDataSource control works with, you can perform data operations, such as updates, insertions, and deletions.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform these data operations, set the appropriate method name and any associated parameters for the operation that you want to perform.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for an update operation, set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property to the name of the business object method that performs updates and add any required parameters to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the ObjectDataSource control is associated with a data-bound control, the parameters are added by the data-bound control.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you need to ensure that the parameter names of the method match the field names in the data-bound control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The update is performed when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt; method is called, either explicitly by your code or automatically by a data-bound control.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same general pattern is followed for &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt; operations.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Business objects are assumed to perform these types of data operations one record at a time, rather than batched.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="filtering_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Filtering Data    The ObjectDataSource control can filter data that is retrieved by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property, if the data is returned as a &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt; object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property to a filtering expression by using a format string syntax and bind values in the expression to parameters that are specified in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="caching"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Caching    Although the ObjectDataSource does not retain the instance of the business object across multiple requests, it can cache the result of calling the method identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the data is cached, subsequent calls to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method return the cached data instead of creating the business object and calling its &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; using reflection.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Caching lets you avoid creating the object and calling its data method at the expense of memory on the Web server.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource automatically caches data when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt; property is set to <ph id="ph1">`true`</ph>, and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; property is set to the number of seconds that the cache stores data before the cache is discarded.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt; property and an optional &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource control allows you to cache all types of data, but you should not cache objects that retain resources or state that cannot be shared to service multiple requests (for example, an open &lt;xref:System.Data.SqlClient.SqlDataReader&gt; object), because the same instance of the object will be used to service multiple requests.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="features"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Features    The following table describes the features of the ObjectDataSource control.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Capability|Requirements|   |----------------|------------------|   |Selecting|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property to the name of the business object method that selects data, and include any necessary parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; collection either programmatically or by using a data-bound control.|   |Sorting|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A&gt; property to the name of the parameter in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; method that carries the sort criteria.|   |Filtering|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property to a filtering expression and optionally add any parameters to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt; collection to filter the data when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is called.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property must return a &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt;.|   |Paging|Data source paging is supported, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; method contains parameters for the maximum number of records to retrieve and the index of the first record to retrieve.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The names of those parameters must be set in the  &lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt; properties, respectively.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>A data-bound control might be able to perform paging itself, even if the ObjectDataSource control does not support paging directly in the method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requirement for the data-bound control to be able to do this is that the method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property return an object that implements the &lt;xref:System.Collections.ICollection&gt; interface.|   |Updating|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property to the name of the business object method that updates data, and include any necessary parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection.|   |Deleting|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; property to the name of the business object method or function that deletes data, and include any necessary parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection.|   |Inserting|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt; property to the name of the business object method or function that inserts data, and include any necessary parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt; collection.|   |Caching|Set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt; property to <ph id="ph1">`true`</ph>, and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt; properties according to the caching behavior you want for your cached data.|      &gt; <ph id="ph2">[!NOTE]</ph> &gt;  When you use the ObjectDataSource class to update or insert data, strings that are entered at the client are not automatically converted from the client culture format to the server culture format.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the client culture might specify DD/MM/YYYY as the date format, and the date format on the server might be MM/DD/YYYY.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, October 5, 2009 would be entered in a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control as 5/10/2009 but would be interpreted as May 10, 2009.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>October 15, 2009 would be entered as 15/10/2009, and would be rejected as an invalid date.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="data_view"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Data View    As with all data source controls, the ObjectDataSource control is associated with a data source view class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the ObjectDataSource control is the interface that the page developer uses to work with data, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; class is the interface that data-bound controls work with.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; class describes the capabilities of the data source control, and performs the actual work.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDataSource control has only one associated &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;, and it is always named <ph id="ph1">`DefaultView`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A&gt; method, many of its properties and methods are wrapped and exposed directly by the ObjectDataSource control.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Behind the scenes, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object performs all data operations, including retrieving, inserting, updating, deleting, filtering, and sorting the data.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt;.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="using_linq_to_sql"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Using LINQ to SQL    You can use the ObjectDataSource control with a LINQ to SQL class.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so, you set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property to the name of the data-context class.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You also set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; methods to the methods in the data-context class that perform the corresponding operations.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create an event handler for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; event in order to cancel disposing of the data-context class.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary because LINQ to SQL supports deferred execution, whereas the ObjectDataSource control tries to dispose the data context after the Select operation.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to create LINQ to SQL classes, see <bpt id="p1">[</bpt>How to: Create LINQ to SQL Classes in a Web Project<ept id="p1">](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of how to cancel the disposing of a data context class, see the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; event.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the Entity Framework    You can also use the ObjectDataSource control with the Entity Framework.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using the Entity Framework and the ObjectDataSource Control<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=209117)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="declarative_syntax"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Declarative Syntax      <ph id="ph1">```   &lt;asp:ObjectDataSource       CacheDuration="string|Infinite"       CacheExpirationPolicy="Absolute|Sliding"       CacheKeyDependency="string"       ConflictDetection="OverwriteChanges|CompareAllValues"       ConvertNullToDBNull="True|False"       DataObjectTypeName="string"       DeleteMethod="string"       EnableCaching="True|False"       EnablePaging="True|False"       EnableTheming="True|False"       EnableViewState="True|False"       FilterExpression="string"       ID="string"       InsertMethod="string"       MaximumRowsParameterName="string"       OldValuesParameterFormatString="string"       OnDataBinding="DataBinding event handler"       OnDeleted="Deleted event handler"       OnDeleting="Deleting event handler"       OnDisposed="Disposed event handler"       OnFiltering="Filtering event handler"       OnInit="Init event handler"       OnInserted="Inserted event handler"       OnInserting="Inserting event handler"       OnLoad="Load event handler"       OnObjectCreated="ObjectCreated event handler"       OnObjectCreating="ObjectCreating event handler"       OnObjectDisposing="ObjectDisposing event handler"       OnPreRender="PreRender event handler"       OnSelected="Selected event handler"       OnSelecting="Selecting event handler"       OnUnload="Unload event handler"       OnUpdated="Updated event handler"       OnUpdating="Updating event handler"       runat="server"       SelectCountMethod="string"       SelectMethod="string"       SkinID="string"       SortParameterName="string"       SqlCacheDependency="string"       StartRowIndexParameterName="string"       TypeName="string"       UpdateMethod="string"       Visible="True|False"   &gt;           &lt;DeleteParameters&gt;                   &lt;asp:ControlParameter                       ControlID="string"                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:CookieParameter                       ConvertEmptyStringToNull="True|False"                       CookieName="string"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:FormParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       FormField="string"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:Parameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:ProfileParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:QueryStringParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       QueryStringField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:SessionParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       SessionField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;           &lt;/DeleteParameters&gt;           &lt;FilterParameters&gt;                   &lt;asp:ControlParameter                       ControlID="string"                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:CookieParameter                       ConvertEmptyStringToNull="True|False"                       CookieName="string"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:FormParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       FormField="string"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:Parameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:ProfileParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:QueryStringParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       QueryStringField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:SessionParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       SessionField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;           &lt;/FilterParameters&gt;           &lt;InsertParameters&gt;                   &lt;asp:ControlParameter                       ControlID="string"                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:CookieParameter                       ConvertEmptyStringToNull="True|False"                       CookieName="string"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:FormParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       FormField="string"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:Parameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:ProfileParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:QueryStringParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       QueryStringField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:SessionParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       SessionField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;           &lt;/InsertParameters&gt;           &lt;SelectParameters&gt;                   &lt;asp:ControlParameter                       ControlID="string"                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:CookieParameter                       ConvertEmptyStringToNull="True|False"                       CookieName="string"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:FormParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       FormField="string"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:Parameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:ProfileParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:QueryStringParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       QueryStringField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:SessionParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       SessionField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;           &lt;/SelectParameters&gt;           &lt;UpdateParameters&gt;                   &lt;asp:ControlParameter                       ControlID="string"                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:CookieParameter                       ConvertEmptyStringToNull="True|False"                       CookieName="string"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:FormParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       FormField="string"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:Parameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:ProfileParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       PropertyName="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:QueryStringParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       QueryStringField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;                   &lt;asp:SessionParameter                       ConvertEmptyStringToNull="True|False"                       DefaultValue="string"                       Direction="Input|Output|InputOutput|ReturnValue"                       Name="string"                       SessionField="string"                       Size="integer"                       Type="Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String"                   /&gt;           &lt;/UpdateParameters&gt;   &lt;/asp:ObjectDataSource&gt;   ```</ph></source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified type name and data retrieval method name.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`typeName`</ph> parameter can be a partially qualified type for code that is located in the Bin or App_Code directory or a fully qualified type name for code that is registered in the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the global assembly cache, you must add the appropriate reference to the <ph id="ph1">`assemblies`</ph> section of the Machine.config or Web.config configuration file.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The name of the class that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> works with.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> invokes to retrieve data.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports data caching.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>While data is cached, calls to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieve data from the cache rather than from the business object that the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; works with.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the cache expires, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieves data from the business object, and then caches the data again.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically caches data when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt; property is set to <ph id="ph1">`true`</ph> and the CacheDuration property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates an infinitely long cache.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache is regulated by a combination of the duration and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt; setting.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt; property is set to the &lt;xref:System.Web.UI.DataSourceCacheExpiry&gt; value, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; caches data on the first call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method and holds it in memory for, at most, the amount of time that is specified by the CacheDuration property.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data might be released before the duration time, if the memory is needed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache is then refreshed during the next call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt; property is set to &lt;xref:System.Web.UI.DataSourceCacheExpiry&gt; value, the data source control caches data on the first call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method, but resets the time window for which it holds the cache on each subsequent call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache expires if there is no activity for a time that is equal to the CacheDuration property since the last call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The number of seconds that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> caches the results of a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property invocation.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value cannot be negative.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports data caching.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>While data is cached, calls to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieve data from the cache rather than from the business object that the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; works with.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the cache expires, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieves data from the business object, and then caches the data again.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically caches data when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt; property is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates an infinitely long cache period.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache is regulated by a combination of the duration and the CacheExpirationPolicy setting.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the CacheExpirationPolicy property is set to the &lt;xref:System.Web.UI.DataSourceCacheExpiry&gt; value, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; caches data on the first call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method and holds it in memory for, at most, the amount of time that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data might be released before the duration time, if the memory is needed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache is then refreshed during the next call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the CacheExpirationPolicy property is set to the &lt;xref:System.Web.UI.DataSourceCacheExpiry&gt; value, the data source control caches data on the first call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method, but resets the time window for which it holds the cache for each subsequent call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache expires if there is no activity for a time that is equal to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; property since the last call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.DataSourceCacheExpiry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.UI.DataSourceCacheExpiry"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CacheKeyDependency property can be set to any arbitrary string value.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>All cache objects are explicitly expired when the key is expired.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows you to invalidate cache entries that are created by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; from your own page code programmatically.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports data caching.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>While data is cached, calls to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieve data from the cache rather than from the business object that the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; works with.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the cache expires, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieves data from the business object, and then caches the data again.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically caches data when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A&gt; property is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates an infinitely long cache.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the CacheKeyDependency property to create a dependency between all cache entries that are created by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control and the key.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can expire all the cache entries programmatically at any time by expiring the key.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expire the key by using the &lt;xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName&gt; method with the current CacheKeyDependency value as the parameter.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>A unique cache entry is created for every combination of the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; controls can use the same cache entries in scenarios where they load data using the same type, method, and parameters.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A key that identifies all cache objects created by the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether or not just the new values are passed to the <bpt id="p1">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method or both the old and new values are passed to the <bpt id="p2">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines whether parameters for old and new values are applied to the method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property returns a &lt;xref:System.Data.DataTable&gt; control with the columns <ph id="ph1">`Name`</ph> and <ph id="ph2">`Number`</ph>, and the ConflictDetection property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; field, parameters are created for <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> for the <ph id="ph5">`Update`</ph> method.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the ConflictDetection property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, parameters are created for <ph id="ph1">`Name`</ph>, <ph id="ph2">`Number`</ph>, <ph id="ph3">`original_Name`</ph>, and <ph id="ph4">`original_Number`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The exact name of the parameters for the original values depends on the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt; property.) The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; then determines whether the method that is specified in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property has parameters that match.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one client reads data and presents it to a user, while another client reads the same data and presents it to a different user.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both users update the data and submit it to the data storage, an unexpected result might occur, because both clients might provide different values for the same data.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is considered a conflict.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>By setting the ConflictDetection property to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, the <ph id="ph1">`Update`</ph> method can then compare the old and new values to the original data source to detect conflicts and handle them as necessary.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ConflictDetection property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.UI.ConflictOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Web.UI.ConflictOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.Parameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that are passed to an update, insert, or delete operation are automatically converted from <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to the <bpt id="p3">&lt;xref href="System.DBNull.Value"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> value by the <bpt id="p4">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not converting <ph id="ph1">`null`</ph> to the &lt;xref:System.DBNull.Value&gt; value can result in errors at run time.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ConvertNullToDBNull property to indicate whether &lt;xref:System.Web.UI.WebControls.Parameter&gt; values that are passed to an update, insert, or delete operation are automatically converted from <ph id="ph1">`null`</ph> to the &lt;xref:System.DBNull.Value&gt; value by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if any <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values in <bpt id="p3">&lt;xref href="System.Web.UI.WebControls.Parameter"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> objects passed to the <bpt id="p4">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> control are automatically converted to <bpt id="p5">&lt;xref href="System.DBNull.Value"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> values; otherwise, <bpt id="p6">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p6">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of a class that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control uses for a parameter in an update, insert, or delete data operation, instead of passing individual values from the data-bound control.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of specifying several parameters that are passed to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; methods, you can create one object that aggregates several data field values.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This one object is passed to the methods, instead of several parameters.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior of an &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control that is bound to a data-bound control is that the data-bound control creates a &lt;xref:System.Web.UI.WebControls.Parameter&gt; object for each parameter in the data source.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the business object has many fields, the resulting method also has many fields.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataObjectTypeName property allows you to specify a type that has a property for each data field.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, instead of passing several parameters to the method, the runtime creates one object and sets all of its properties.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This one object is added to the parameters collection for the method call.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type that is specified by the DataObjectTypeName property must have a default constructor that has no parameters, so the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control can create an instance of the type.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type must also have settable properties that allow the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control to populate the object with values that are passed from the data-bound control.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property names on the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control are expected to exactly match the parameter names of values that are passed by the data-bound control.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the DataObjectTypeName property is set and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is associated with a data-bound control, the methods that are specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; properties must each have one parameter of the type that is specified in the DataObjectTypeName property.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property must have one parameter of the type that is specified in the DataObjectTypeName property.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property must have two parameters of the type that is specified in the DataObjectTypeName property.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first parameter contains the original values; the second parameter contains the new values.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DataObjectTypeName property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A partially or fully qualified class name that identifies the type of the object that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can use as a parameter for an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update<ept id="p2">*</ept>&gt;, or a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete*&gt; operation.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Performs a delete operation by calling the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod<bpt id="p1">*</bpt>&gt; property with any parameters that are in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters<ept id="p1">*</ept>&gt; collection.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the Delete operation is performed, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt; event.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt; event to examine the values of the parameters and to perform any preprocessing before a Delete operation.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a delete operation, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object uses reflection to create an instance of the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then calls the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; property, using any associated &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the deletion parameters come from an associated data-bound control, the name of the parameters is created according to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Delete operation completes, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt; event.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleted&gt; event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Delete method delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-Bound Controls    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is associated with a data-bound control, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, it is not necessary to call the Delete method from page code.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Delete method is invoked directly by the data-bound control instead.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A value that represents the number of rows deleted from the underlying data storage, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*&gt; property of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is set in the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource.Deleted"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Occurs when a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete*&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Deleted event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value, output parameters, and exception handling properties are available from the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt; object that is associated with the event.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt; object to return the number of rows that were deleted from the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you return the number of deleted rows from the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; property, the value is available from the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control invokes to delete data.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The business object is assumed to delete data one record at a time, rather than in a batch.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeleteMethod property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure that the parameter names configured for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection match the column names that are returned by the select method.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object Lifetime    The method that is identified by the DeleteMethod property can be an instance method or a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is an instance method, the business object is created and destroyed each time the DeleteMethod property is called.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt; events to work with the business object before the DeleteMethod property is called.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; event that is raised after the DeleteMethod property is called.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the business object implements the &lt;xref:System.IDisposable&gt; interface, the &lt;xref:System.IDisposable.Dispose%2A&gt; method is called before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method is a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method, the business object is never created and you cannot handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; events.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter Merging    Parameters are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection from three sources:      -   From the data-bound control, at run time.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   From the <ph id="ph1">`DeleteParameters`</ph> element, declaratively.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   From the <ph id="ph1">`Deleting`</ph> method, declaratively.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, any parameters that are generated from data-bound controls are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is bound to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control that has the columns <ph id="ph1">`Name`</ph> and <ph id="ph2">`Number`</ph>, parameters for <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> are added to the collection.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exact name of the parameter depends on the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data type of these parameters is <ph id="ph1">`string`</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, the parameters that are listed in the <ph id="ph1">`DeleteParameters`</ph> element are added.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter in the <ph id="ph1">`DeleteParameters`</ph> element is found with the same name as a parameter that is already in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection, the existing parameter is modified to match the parameter that is specified in the <ph id="ph2">`DeleteParameters`</ph> element.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this is used to modify the type of the data in the parameter.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can programmatically add and remove parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt; event, which occurs before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; method is run.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is resolved after the parameters are merged.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method resolution is discussed in the next section.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method Resolution    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph1">`DeleteParameters`</ph> element, and the parameters that were added in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt; event handler are all merged.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information, see the preceding section.) The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; object then attempts to find a method to call.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, it looks for one or more methods with the name that is specified in the DeleteMethod property.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no match is found, an &lt;xref:System.InvalidOperationException&gt; exception is thrown.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a match is found, it then looks for matching parameter names.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose the type that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property has two methods named <ph id="ph1">`DeleteARecord`</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>One <ph id="ph1">`DeleteARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`DeleteARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection has only one parameter named <ph id="ph1">`ID`</ph>, the <ph id="ph2">`DeleteARecord`</ph> method with just the <ph id="ph3">`ID`</ph> parameter is called.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the parameter is not checked in resolving the methods.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the parameters does not matter.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property is set, the method is resolved in a different way.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; looks for a method with the name that is specified in the DeleteMethod property that takes one parameter of the type that is specified in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the name of the parameter does not matter.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A string that represents the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to delete data.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets the parameters collection that contains the parameters that are used by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*&gt; method.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The names and types of the parameters that are contained in the DeleteParameters collection must match the names and types of the parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; method signature.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameter names are affected by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt; property and are case-sensitive.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters in the collection depend on the data that is in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see "Parameter Merging" in &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; and <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeleteParameters property retrieves the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A&gt; property that is contained by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the parameters used by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*&gt; method.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Occurs before a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete*&gt; operation.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Deleting event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control performs the delete operation.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters are available as an &lt;xref:System.Collections.IDictionary&gt; collection that is accessed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt; property, which is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can cancel the delete operation by setting the &lt;xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt; to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control has data caching enabled.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports data caching.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>While data is cached, calls to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieve data from the cache rather than the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; creating an instance of the business object and calling its data method.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the cache expires, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method retrieves data from the business object, and then caches the data again.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically caches data when the EnableCaching property is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates an infinitely long cache.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data caching is enabled for the data source control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The EnableCaching property is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property returns a <bpt id="p2">&lt;xref href="System.Data.Common.DbDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the data source control supports paging through the set of data that it retrieves.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Paging by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is handled by setting the EnablePaging, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt; properties of the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; and defining a select method in the business object with the proper parameters.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the EnablePaging property is set to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; collection includes two additional parameters for the first row that is requested and the number of rows that are requested.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>These two parameters are named as defined by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Select`</ph> method should return the requested number of rows, starting at the specified index.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the data might not divide evenly by the page size, the last page might contain fewer rows.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, the number of rows that are requested is actually the maximum number of rows that are returned.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>When paging is enabled on the associated data-bound control, the data-bound control calls the <ph id="ph1">`Select`</ph> method with the start index and number of rows that are required.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt; property is set, the data-bound control calls the method before rendering the pager controls.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a &lt;xref:System.Web.UI.WebControls.GridView&gt; control has paging enabled with a page size of 5, and the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt; property returns 20, only 4 pages are displayed in the pager.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnablePaging property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data source control supports paging through the data it retrieves; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets or sets a filtering expression that is applied when the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property is called.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports filtering data only when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method returns a &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt; object.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax that is used for the FilterExpression property is a format string–style expression.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The filter expression syntax is the same syntax that is accepted by the &lt;xref:System.Data.DataColumn.Expression%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add parameters to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt; collection, you can also include format string placeholders.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, include <ph id="ph1">`"{0}"`</ph> in the expression to substitute for parameter values.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The placeholders are replaced according to the index of the parameter in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can include parameters in the FilterExpression property.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type of the parameter is a string or character type, enclose the parameter in single quotation marks.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Quotation marks are not required if the parameter is a numeric type.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt; collection contains the parameters that are evaluated for the placeholders that are found in the FilterExpression property.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FilterExpression property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should validate any filter parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt; object that is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using the FilterExpression property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A string that represents a filtering expression that is applied when data is retrieved by using the method or function identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The FilterExpression property was set and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select*&gt; method does not return a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Occurs before a filter operation.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Filtering event to perform validation operations on filter parameter values before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control performs a filter operation.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can cancel the selected operation by setting the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&gt; to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event is raised only if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property is set.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Filtering event delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=fullName&gt; event of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should validate any filter parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the filter expression and applies it to the &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt; object that is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets a collection of parameters that are associated with any parameter placeholders in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression*&gt; string.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports filtering data only when the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method returns a &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt; object.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax that is used for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; is a format string–style expression.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The filter expression syntax is the same syntax that is accepted by the &lt;xref:System.Data.DataColumn.Expression%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add parameters to the FilterParameters collection, you can also include format string placeholders.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, include <ph id="ph1">`"{0}"`</ph> in the expression to substitute for parameter values.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The placeholders are replaced according to the index of the parameter in the FilterParameters collection.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can include parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parameter is a string or character type, enclose the parameter in single quotation marks.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Quotation marks are not required if the parameter is a numeric type.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FilterParameters property retrieves the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A&gt; property that is contained by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a set of parameters associated with any parameter placeholders found in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression*&gt; property.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>You set the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression<bpt id="p1">*</bpt>&gt; property and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select<ept id="p1">*</ept>&gt; method does not return a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Retrieves the named data source view that is associated with the data source control.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports only one data source view.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with all data source view objects, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the data source control defines its capabilities, performs all the work that is necessary to retrieve data from the underlying data storage, and performs operations such as sorting, inserting, deleting, and updating.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetView method is intended to be called by data-bound controls, not by page code.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The name of the view to retrieve.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> supports only one view, <ph id="ph1">`viewName`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSourceView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> named <bpt id="p2">&lt;xref uid="langword_csharp_DefaultView" name="DefaultView" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that is associated with the <bpt id="p3">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">viewName</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or something other than <bpt id="p3">&lt;xref uid="langword_csharp_DefaultView" name="DefaultView" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of names representing the list of view objects that are associated with the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports only one view, named <ph id="ph1">`DefaultView`</ph>, on its underlying data.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetViewNames method returns a single-element collection of this one view name.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetViewNames method is intended to be called by data-bound controls, not by page code.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; that contains the names of the views associated with the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Performs an insert operation by calling the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod<bpt id="p1">*</bpt>&gt; property and any parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters<ept id="p1">*</ept>&gt; collection.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the Insert operation is performed, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt; event.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt; event to examine the values of the parameters and to perform any preprocessing before an Insert operation.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an insert operation, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object uses reflection to create an instance of the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then calls the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt; property, using any associated &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Insert operation completes, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt; event.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserted&gt; event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Insert method delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-Bound Controls    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; object is associated with a data-bound control, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, it is not necessary to call the Insert method from page code.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Insert method is invoked directly by the data-bound control instead.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>A value that represents the number of rows inserted into the underlying data storage.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Occurs when an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert*&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Inserted event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value, output parameters, and exception handling properties are available from the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt; object that is associated with the event.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Occurs before an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert*&gt; operation.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Inserting event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control performs the insert operation.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters are available as an &lt;xref:System.Collections.IDictionary&gt; collection that is accessed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt; property, which is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control invokes to insert data.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The business object is assumed to insert data one record at a time, rather than in a batch.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InsertMethod property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; object.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object Lifetime    The method that is identified by the InsertMethod property can be an instance method or a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is an instance method, the business object is created and destroyed each time the method specified by the InsertMethod property is called.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt; events to work with the business object before the InsertMethod property is called.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; event that is raised after the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A&gt; property is called.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the business object implements the &lt;xref:System.IDisposable&gt; interface, the &lt;xref:System.IDisposable.Dispose%2A&gt; method is called before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the business object is never created and you cannot handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; events.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter Merging    Parameters are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt; collection from three sources:      -   From the data-bound control, at run time.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   From the <ph id="ph1">`InsertParameters`</ph> element, declaratively.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   From the <ph id="ph1">`Inserting`</ph> method, programmatically.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, any parameters that are generated from data-bound controls are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is bound to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control that has the columns <ph id="ph1">`Name`</ph> and <ph id="ph2">`Number`</ph>, the parameters for <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> are added to the collection.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data type of these parameters is <ph id="ph1">`string`</ph>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, the parameters that are listed in the <ph id="ph1">`InsertParameters`</ph> element are added.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter in the <ph id="ph1">`InsertParameters`</ph> element is found with the same name as a parameter that is already in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt; collection, the existing parameter is modified to match the parameter that is specified in the <ph id="ph2">`InsertParameters`</ph> element.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this is used to modify the type of the data in the parameter.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can programmatically add and remove parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt; event, which occurs before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt; method is run.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is resolved after the parameters are merged.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method resolution is discussed in the next section.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should validate any parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the InsertMethod property.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method Resolution    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt; method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph1">`InsertParameters`</ph> element, and the parameters that were added in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt; event handler are all merged.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information, see the preceding section.) The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; object then attempts to find a method to call.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, it looks for one or more methods with the name that is specified in the InsertMethod property.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no match is found, an &lt;xref:System.InvalidOperationException&gt; exception is thrown.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a match is found, it then looks for matching parameter names.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose a type that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property has two methods named <ph id="ph1">`InsertARecord`</ph>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>One <ph id="ph1">`InsertARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`InsertARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A&gt; collection has only one parameter named <ph id="ph1">`ID`</ph>, the <ph id="ph2">`InsertARecord`</ph> method with just the <ph id="ph3">`ID`</ph> parameter is called.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the parameter is not checked in resolving the methods.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the parameters does not matter.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property is set, the method is resolved in a different way.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; looks for a method with the name that is specified in the InsertMethod property that takes one parameter of the type that is specified in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the name of the parameter does not matter.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>A string that represents the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to insert data.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Gets the parameters collection that contains the parameters that are used by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>The names and types of the parameters that are contained in the InsertParameters collection must match the names and types of the parameters that are in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt; property signature.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameter names are case sensitive.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with data-bound controls that supply parameters, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; and &lt;xref:System.Web.UI.WebControls.DetailsView&gt; controls, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically merges any parameters that are explicitly specified in the collection with the parameters that are provided by the data-bound control.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is important because data-bound controls always supply their parameters as &lt;xref:System.String&gt; types, and if the method signature includes numeric or date types, you must explicitly include a parameter in the InsertParameters collection with the correct type.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control attempts to cast the parameters according to the type that is defined by the parameters in the collection.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InsertParameters property retrieves the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A&gt; property that is contained by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the parameters used by the method identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Loads the previously saved view state of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, control developers can override this method to specify how a custom server control restores its view state.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET State Management Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LoadViewState method is used to load the previously saved view state of the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>An object that contains the saved view state values for the control.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the business object data retrieval method parameter that is used to indicate the number of records to retrieve for data source paging support.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MaximumRowsParameterName property is used to support data source paging.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how paging is supported by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MaximumRowsParameterName property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The name of the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; parameter that is used to indicate the number of records to retrieve.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`"maximumRows"`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Occurs after the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*&gt; property is created.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the ObjectCreated event to call other methods on the business object, set properties, or perform other initialization that is specific to the business object before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; object calls the business object data method to perform a data operation.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reference to the object is accessed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt; property, which is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method that is identified to perform the data operation is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt; and ObjectCreated events are never raised.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Occurs before the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*&gt; property is created.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method that is identified to perform the data operation is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the ObjectCreating and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt; events are never raised.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically calls the default constructor of a business object to create an instance of it using reflection.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the ObjectCreating event to explicitly call another constructor, and set the instance of the object that results to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt; property of the associated &lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Occurs before the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*&gt; property is discarded.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectDisposing event is always raised before the instance of the business object is discarded.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the business object implements the &lt;xref:System.IDisposable&gt; interface, the &lt;xref:System.IDisposable.Dispose%2A&gt; method is called after this event is raised.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the ObjectDisposing event to call other methods on the object, set properties, or perform clean-up that is specific to the object before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reference to the object is accessed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A&gt; property, which is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use a &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control with a LINQ to SQL class, you must cancel the disposing of the data-context class in an handler for the ObjectDisposing event.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary because LINQ to SQL supports deferred execution, whereas the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control tries to dispose the data context after the Select operation.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Gets or sets a format string to apply to the names of the parameters for original values that are passed to the <bpt id="p1">&lt;xref uid="langword_csharp_Delete" name="Delete" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Update" name="Update" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> methods.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt; property is applied to primary keys only, such as those that are identified with the <ph id="ph1">`DataKeyNames`</ph> property of a data-bound control, or in delete and update scenarios where the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, and the set of original values are passed to the corresponding data method.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are two common scenarios where you might change the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt; property:      -   You might want to change the property to differentiate between old and new values in updates.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A&gt; property is set to the &lt;xref:System.Web.UI.ConflictOptions&gt; value, parameters for both the original and new values are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without the formatting string, two parameters with the same name would be created for each data field.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Some visual designers implement a particular naming scheme for original values and keys.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OldValuesParameterFormatString property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A string that represents a format string applied to the names of any <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldValues</ph><ept id="p1">&lt;/code&gt;</ept> or key parameters passed to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete<bpt id="p2">*</bpt>&gt; or &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update<ept id="p2">*</ept>&gt; methods.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`"{0}"`</ph>, which means the parameter name is the field name.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Web.UI.Page.LoadComplete"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event handler to the page that contains the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnInit method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains event data.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Gets a or sets a value that indicates what culture information is used when converting string values to actual property types in order to construct an object of the type indicated by &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*&gt;.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The culture information.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ParsingCulture"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Saves the state of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Returns the server control's current view state; otherwise, returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if there is no view state associated with the control.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Retrieves data from the underlying data storage by calling the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod<bpt id="p1">*</bpt>&gt; property with the parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters<ept id="p1">*</ept>&gt; collection.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified method might have any method signature, but it must return or be derived from one of the types listed in the following table for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control to call it successfully.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Return type|Action|   |-----------------|------------|   |&lt;xref:System.Collections.IEnumerable&gt;|The &lt;xref:System.Collections.IEnumerable&gt; is returned by the Select method.|   |&lt;xref:System.Data.DataTable&gt;|A &lt;xref:System.Data.DataView&gt; is created by using the &lt;xref:System.Data.DataTable&gt; and returned by the Select method.|   |&lt;xref:System.Data.DataView&gt;|The &lt;xref:System.Data.DataView&gt; is returned by the Select method.|   |&lt;xref:System.Data.DataSet&gt;|The first &lt;xref:System.Data.DataTable&gt; of the &lt;xref:System.Data.DataSet&gt; is extracted and a &lt;xref:System.Data.DataView&gt; is created and returned by the Select method.|   |&lt;xref:System.Object&gt;|The object is wrapped in a one-element &lt;xref:System.Collections.IEnumerable&gt; collection and returned by the Select method.|       The method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property can be an instance method or a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is an instance method, the business object is created and destroyed each time the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property is called, except that the same instance is used to call the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property and the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Select method returns an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, to enable caching and filtering scenarios, the return value must be a &lt;xref:System.Data.DataSet&gt; object.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the &lt;xref:System.Data.DataSet&gt; class does not implement the &lt;xref:System.Collections.IEnumerable&gt; interface, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control automatically extracts the default &lt;xref:System.Data.DataView&gt; control, which implements the &lt;xref:System.Collections.IEnumerable&gt;.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the Select operation is performed, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event to examine the values of the parameters and to perform any preprocessing before a Select operation.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a data retrieval operation, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object uses reflection to create an instance of the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then calls the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property, using any associated &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Select operation completes, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt; event.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selected&gt; event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property returns a &lt;xref:System.Data.DataSet&gt;, &lt;xref:System.Data.DataTable&gt;, or &lt;xref:System.Data.DataView&gt; object and caching is enabled, the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; retrieves data from and saves data to the cache during the Select operation.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property returns a &lt;xref:System.Data.DataSet&gt; or &lt;xref:System.Data.DataTable&gt; object, and a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A&gt; property has been specified, it is evaluated with any supplied &lt;xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A&gt; properties and the resulting filter is applied to the list of data during the Select operation.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Select method delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-Bound Controls    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is associated with a data-bound control, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, it is not necessary to call the Select method from page code.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Select method is invoked directly by the data-bound control instead.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerable&gt; list of data rows.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control invokes to retrieve a row count.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelectCountMethod property identifies a business object method that is used to retrieve a total row count, to support data source paging.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelectCountMethod property is evaluated only if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt; property is set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelectCountMethod property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how paging is supported by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>A string that represents the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to retrieve a row count.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The method must return an integer (&lt;xref:System.Int32&gt;).</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Occurs when a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select*&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Selected event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value, output parameters, and exception handling properties are available from the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt; object that is associated with the event.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Occurs before a &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select*&gt; operation.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Selecting event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control performs the data retrieval operation.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters are available as an &lt;xref:System.Collections.IDictionary&gt; collection that is accessed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt; property, which is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can be fired twice for a single call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A&gt; property is set.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&gt; object is used to determine if select was called to retrieve data or retrieve the count.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control invokes to retrieve data.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified method can have any method signature, but it must return one of the types shown in the following table for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control to call it successfully.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Return type|Action|   |-----------------|------------|   |&lt;xref:System.Collections.IEnumerable&gt;|The &lt;xref:System.Collections.IEnumerable&gt; is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.|   |&lt;xref:System.Data.DataTable&gt;|A &lt;xref:System.Data.DataView&gt; is created using the &lt;xref:System.Data.DataTable&gt; and returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.|   |&lt;xref:System.Data.DataView&gt;|A &lt;xref:System.Data.DataView&gt; is returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.|   |&lt;xref:System.Data.DataSet&gt;|The first &lt;xref:System.Data.DataTable&gt; of the &lt;xref:System.Data.DataSet&gt; is extracted, and a &lt;xref:System.Data.DataView&gt; is created and returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.|   |&lt;xref:System.Object&gt;|The object is wrapped in a one-element &lt;xref:System.Collections.IEnumerable&gt; collection and returned by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method.|       The SelectMethod property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; class to delete or update data, make sure that the parameter names configured for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A&gt; collection or &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection match the column names that are returned by the select method.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object Lifetime    The method that is identified by the SelectMethod property can be an instance method or a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is an instance method, the business object is created and destroyed each time the method that is specified by the SelectMethod property is called.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt; events to work with the business object before the method that is specified by the SelectMethod property is called.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; event that is raised after the method that is specified by the SelectMethod property is called.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the business object implements the &lt;xref:System.IDisposable&gt; interface, the &lt;xref:System.IDisposable.Dispose%2A&gt; method is called before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the business object is never created and you cannot handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; events.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter Merging    Parameters are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; collection from these sources:      -   Declaratively from the <ph id="ph1">`SelectParameters`</ph> element.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Programmatically from the <ph id="ph1">`Selecting`</ph> method.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the parameters listed in the <ph id="ph1">`SelectParameters`</ph> element are added.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Second, parameters are programmatically added and removed in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event, which occurs before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is run.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is resolved after the parameters are merged.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method resolution is discussed in the next section.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should validate any parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the SelectMethod property.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method Resolution    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph1">`SelectParameters`</ph> element, and the parameters that were added in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event handler are all merged.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information, see the preceding section.) The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control then attempts to find a method to call.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, it looks for one or more methods with the name that is specified in the SelectMethod property.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no match is found, an &lt;xref:System.InvalidOperationException&gt; exception is thrown.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a match is found, it then looks for matching parameter names.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose a type that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property has two methods named <ph id="ph1">`SelectARecord`</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>One <ph id="ph1">`SelectARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`SelectARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A&gt; collection has only one parameter named <ph id="ph1">`ID`</ph>, the <ph id="ph2">`SelectARecord`</ph> method with just the <ph id="ph3">`ID`</ph> parameter is called.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the parameter is not checked in resolving the methods.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the parameters does not matter.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property is set, the method is resolved in a different way.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; looks for a method with the name that is specified in the SelectMethod property that takes one parameter of the type that is specified in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the name of the parameter does not matter.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>A string that represents the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to retrieve data.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Gets a collection of parameters that are used by the method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelectParameters property gets the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the SelectParameters collection declaratively by using the <ph id="ph1">`SelectParameters`</ph> element or programmatically in the handler for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, parameters listed in the <ph id="ph1">`SelectParameters`</ph> element are added to the collection first.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters in the collection are then added or removed by the handler for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event is raised before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is run.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is run, the names and types of the parameters that are contained in the SelectParameters collection must match the signature of the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a select method named <ph id="ph1">`GetEmployeesByStateAndAge`</ph> takes a <ph id="ph2">`string`</ph> and an integer as parameters, the SelectParameters collection must contain two parameters.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first parameter must resolve to a string and the second parameter must resolve to an integer.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both parameters can be specified in markup in the <ph id="ph1">`SelectParameters`</ph> element.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, they can be can be added in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event handler, or one parameter can be added in markup and the other one can be added programmatically.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod&gt; property.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  In the code for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt; event handler or in the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property, make sure that you validate any parameter value that is received from the client.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>A collection of parameters that are used by the method specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the business object that the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*&gt; parameter used to specify a sort expression for data source sorting support.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SortParameterName property is used to support data source sorting.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A&gt; property is set on the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object and passed to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method, the SortParameterName value identifies the parameter name of the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; business object method according to which the data is sorted.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; is associated with a data-bound control, the values that are passed to this parameter take the form of comma-separated field values followed by <ph id="ph1">`"ASC"`</ph> or <ph id="ph2">`"DESC"`</ph>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the value for an ascending sort on <ph id="ph1">`Name`</ph> would be <ph id="ph2">`"Name ASC"`</ph>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SortParameterName property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The name of the method parameter used to indicate the parameter which is used to sort the data.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control supports an optional expiration policy that is based on the &lt;xref:System.Web.Caching.SqlCacheDependency&gt; object for the data cache (the service must be configured for the database server).</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>SQL Server supports two mechanisms for cache invalidation: polling and notification.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each mechanism has a different syntax for the &lt;xref:System.Web.Caching.SqlCacheDependency&gt; object.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; supports only polling.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.Caching.SqlCacheDependency&gt; string is used to create a &lt;xref:System.Data.SqlClient.SqlDependency&gt; object that is passed to the &lt;xref:System.Data.Common.DbCommand&gt; constructor before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt; method is executed.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SqlCacheDependency string identifies databases and tables according to the same format that is used by the <ph id="ph1">`@ Page`</ph> directive, where the first part of the string is a connection string to a SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, <ph id="ph2">`"connectionstring1:table1"`</ph>).</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SqlCacheDependency property depends on more than one table, the connection string and table name pairs are separated by semicolons (for example, <ph id="ph1">`"connectionstring1:table1";connectionstring2:table2"`</ph>).</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support notification, you must write the cache logic in the implementation of your &lt;xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A&gt; property and handle the construction of the &lt;xref:System.Web.Caching.SqlCacheDependency&gt; object in your code.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>A string that indicates which databases and tables to use for the SQL Server cache dependency.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the data retrieval method parameter that is used to indicate the value of the identifier of the first record to retrieve for data source paging support.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StartRowIndexParameterName property is used to support data source paging.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how paging is supported by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>The StartRowIndexParameterName property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The name of the business object method parameter used to indicate the first record to retrieve.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The parameter must return an integer value.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`"startRowIndex"`</ph>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Tracks view-state changes to the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control so that they can be stored in the <bpt id="p2">&lt;xref href="System.Web.UI.StateBag"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TrackViewState method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the object.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the class that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object represents.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an instance of the object that the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control binds to, the control uses reflection to load the type that is identified by the type name at run time.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the value of the TypeName property can be a partially qualified type for code that is located in the Bin or App_Code directories or a fully qualified type name for code that is registered in the global assembly cache.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the global assembly cache, you must add the appropriate reference to the <ph id="ph1">`assemblies`</ph> section of the Machine.config or Web.config file.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type must have a default constructor, unless you handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt; event to create an instance of it yourself.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of the type is created for each call to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A&gt; methods, if the methods on the type are member methods.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance is not created if the methods are <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type implements the &lt;xref:System.IDisposable&gt; interface, the &lt;xref:System.IDisposable.Dispose%2A&gt; method is called before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>A partially or fully qualified class name that identifies the type of the object that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Performs an update operation by calling the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod<bpt id="p1">*</bpt>&gt; property and any parameters that are in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters<ept id="p1">*</ept>&gt; collection.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>The business object is assumed to update data one record at a time, rather than in a batch.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the Update operation is performed, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt; event.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt; event to examine the values of the parameters and to perform any preprocessing before an Update operation.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an update operation, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object uses reflection to create an instance of the object that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then calls the method that is identified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property, using any associated &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; properties.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the Update operation completes, the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A&gt; method is called to raise the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt; event.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updated&gt; event to examine any return values, output parameters, and exceptions, and to perform any post-processing.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Update method delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A&gt; method of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should validate any parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-Bound Controls    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is associated with a data-bound control, such as the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, it is not necessary to call the Update method from page code.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Update method is invoked directly by the data-bound control instead.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>A value that represents the number of rows updated in the underlying data storage.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>Occurs when an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update*&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Updated event to examine the values of a return value or output parameters, or to determine whether an exception was thrown after an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt; operation has completed.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value, output parameters, and exception handling properties are available from the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&gt; object that is associated with the event.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control invokes to update data.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control assumes that the method that is identified by the UpdateMethod property performs updates one at a time, rather than in a batch.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UpdateMethod property delegates to the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure that the parameter names configured for the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection match the column names that are returned by the select method.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object Lifetime    The method that is identified by the UpdateMethod property can be an instance method or a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) method.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is an instance method, the business object is created and destroyed each time the method that is specified by the UpdateMethod property is called.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt; and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt; events to work with the business object before the method that is specified by the UpdateMethod property is called.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; event that is raised after the method that is specified by the UpdateMethod property is called.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the business object implements the &lt;xref:System.IDisposable&gt; interface, the &lt;xref:System.IDisposable.Dispose%2A&gt; method is called before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method is <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic), the business object is never created and you cannot handle the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&gt;, &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&gt;, and &lt;xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&gt; events.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter Merging    Parameters are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection from three sources:      -   From the data-bound control, at run time.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   From the <ph id="ph1">`UpdateParameters`</ph> element, declaratively.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   From the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt; event handler, programmatically.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, any parameters that are generated from data-bound controls are added to the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control is bound to a &lt;xref:System.Web.UI.WebControls.GridView&gt; control that has the columns <ph id="ph1">`Name`</ph> and <ph id="ph2">`Number`</ph>, the parameters for <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> are added to the collection.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exact name of the parameter depends on the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data type of these parameters is <ph id="ph1">`string`</ph>.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, the parameters that are listed in the <ph id="ph1">`UpdateParameters`</ph> element are added.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a parameter in the <ph id="ph1">`UpdateParameters`</ph> element is found with the same name as a parameter that is already in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection, the existing parameter is modified to match the parameter that is specified in the <ph id="ph2">`UpdateParameters`</ph> element.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this is used to modify the type of the data in the parameter.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can programmatically add and remove parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt; event, which occurs before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt; method is run.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is resolved after the parameters are merged.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method resolution is discussed in the next section.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should validate any parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the UpdateMethod property.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method Resolution    When the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt; method is called, the data fields from the data-bound control, the parameters that were created declaratively in the <ph id="ph1">`UpdateParameters`</ph> element, and the parameters that were added in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt; event handler are all merged.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information, see the preceding section.) The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control then attempts to find a method to call.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, it looks for one or more methods with the name that is specified in the UpdateMethod property.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no match is found, an &lt;xref:System.InvalidOperationException&gt; exception is thrown.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a match is found, it then looks for matching parameter names.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose a type that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A&gt; property has two methods named <ph id="ph1">`UpdateARecord`</ph>.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>One <ph id="ph1">`UpdateARecord`</ph> has one parameter, <ph id="ph2">`ID`</ph>, and the other <ph id="ph3">`UpdateARecord`</ph> has two parameters, <ph id="ph4">`Name`</ph> and <ph id="ph5">`Number`</ph>.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A&gt; collection has only one parameter named <ph id="ph1">`ID`</ph>, the <ph id="ph2">`UpdateARecord`</ph> method with just the <ph id="ph3">`ID`</ph> parameter is called.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the parameter is not checked in resolving the methods.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the parameters does not matter.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property is set, the method is resolved in a different way.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; looks for a method with the name that is specified in the UpdateMethod property that takes one parameter of the type that is specified in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the name of the parameter does not matter.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>A string that represents the name of the method or function that the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ObjectDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses to update data.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Gets the parameters collection that contains the parameters that are used by the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>The names and types of the parameters that are contained in the UpdateParameters collection must match the names and types of the parameters in the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; method signature.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameter names are affected by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A&gt; property and are case-sensitive.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters in the collection depend on the data in the data-bound control, the parameters that are specified declaratively, and the parameters that are added programmatically.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Parameter Merging" section in &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A&gt; and <bpt id="p1">[</bpt>Using Parameters with the ObjectDataSource Control<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UpdateParameters property retrieves the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A&gt; property that is contained by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceView&gt; object that is associated with the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parameter merging, object lifetime, and method resolution, see &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You should validate any parameter value that you receive from the client.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime simply substitutes the parameter value into the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A&gt; property.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.ParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the parameters used by the method that is specified by the &lt;xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*&gt; property.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Occurs before an &lt;xref:System.Web.UI.WebControls.ObjectDataSource.Update*&gt; operation.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Updating event to perform additional initialization that is specific to your application, to validate the values of parameters, or to change the parameter values before the &lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt; control performs the update operation.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters are available as an &lt;xref:System.Collections.IDictionary&gt; collection that is accessed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A&gt; property, which is exposed by the &lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt; object.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>