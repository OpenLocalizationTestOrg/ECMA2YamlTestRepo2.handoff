{"nodes":[{"pos":[1360,1399],"content":"Manages security tokens for the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Manages security tokens for the client.","pos":[0,39]}]},{"pos":[1411,1603],"content":"This class handles security token serialization, security token provision and security token authentication for the client. There is one instance of this class for each client channel factory.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class handles security token serialization, security token provision and security token authentication for the client. There is one instance of this class for each client channel factory.","pos":[0,192],"nodes":[{"content":"This class handles security token serialization, security token provision and security token authentication for the client.","pos":[0,123]},{"content":"There is one instance of this class for each client channel factory.","pos":[124,192]}]}]},{"pos":[2897,3016],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ClientCredentialsSecurityTokenManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.ClientCredentialsSecurityTokenManager\"></xref> class."},{"pos":[3602,3663],"content":"The <xref:System.ServiceModel.Description.ClientCredentials>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ClientCredentials&gt;.","pos":[0,61],"source":"The <xref:System.ServiceModel.Description.ClientCredentials>."}]},{"pos":[3857,3952],"content":"<ph id=\"ph1\">&lt;code&gt;clientCredentials&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>clientCredentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4456,4484],"content":"Gets the client credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the client credentials.","pos":[0,28]}]},{"pos":[4496,4657],"content":"The <xref:System.ServiceModel.Description.ClientCredentials> object allows the user to configure client credentials to be used for authentication to the service.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; object allows the user to configure client credentials to be used for authentication to the service.","pos":[0,161],"source":"The <xref:System.ServiceModel.Description.ClientCredentials> object allows the user to configure client credentials to be used for authentication to the service."}]},{"pos":[4858,4926],"content":"The <xref:System.ServiceModel.Description.ClientCredentials> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Description.ClientCredentials&gt; object.","pos":[0,68],"source":"The <xref:System.ServiceModel.Description.ClientCredentials> object."}]},{"pos":[5975,6014],"content":"Creates a security token authenticator.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a security token authenticator.","pos":[0,39]}]},{"pos":[6026,6370],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is responsible for validating security tokens and providing a <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to obtain claims for security tokens that meet the requirements specified in <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; is responsible for validating security tokens and providing a &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; to obtain claims for security tokens that meet the requirements specified in &lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;.","pos":[0,344],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is responsible for validating security tokens and providing a <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to obtain claims for security tokens that meet the requirements specified in <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>."}]},{"pos":[6788,6869],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>."},{"pos":[6987,7138],"content":"When this method returns, contains a <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref>. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,111],"source":"When this method returns, contains a <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref>."},{"content":"This parameter is passed uninitialized.","pos":[112,151]}]},{"pos":[7240,7330],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> object."},{"pos":[7551,7645],"content":"<ph id=\"ph1\">&lt;code&gt;tokenRequirement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8389,8423],"content":"Creates a security token provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a security token provider.","pos":[0,34]}]},{"pos":[8435,8707],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally token providers support renewing and canceling tokens as well.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally token providers support renewing and canceling tokens as well.","pos":[0,272],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt; class is responsible for obtaining tokens for a given &lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;.","pos":[0,198],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>."},{"content":"Optionally token providers support renewing and canceling tokens as well.","pos":[199,272]}]}]},{"pos":[9336,9417],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>."},{"pos":[9514,9599],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenProvider\"></xref> object."},{"pos":[9815,9909],"content":"<ph id=\"ph1\">&lt;code&gt;tokenRequirement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10643,10679],"content":"Creates a security token serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a security token serializer.","pos":[0,36]}]},{"pos":[10691,11236],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers, and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers, and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.","pos":[0,545],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt; is used to write and read security tokens, security key identifiers, and security key identifier clauses.","pos":[0,171],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers, and security key identifier clauses."},{"content":"When deserializing the token from XML, the returned token must be able to perform cryptographic operations.","pos":[172,279]},{"content":"The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.","pos":[280,545]}]}]},{"pos":[11541,11640],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the security token.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenVersion\"></xref> of the security token."},{"pos":[11739,11826],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> object."},{"pos":[12649,12685],"content":"Creates a security token serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a security token serializer.","pos":[0,36]}]},{"pos":[12697,13241],"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.","pos":[0,544],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt; is used to write and read security tokens, security key identifiers and security key identifier clauses.","pos":[0,170],"source":"The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers and security key identifier clauses."},{"content":"When deserializing the token from XML, the returned token must be able to perform cryptographic operations.","pos":[171,278]},{"content":"The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.","pos":[279,544]}]}]},{"pos":[13526,13604],"content":"The <xref:System.ServiceModel.Security.SecurityVersion> of the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Security.SecurityVersion&gt; of the security token.","pos":[0,78],"source":"The <xref:System.ServiceModel.Security.SecurityVersion> of the security token."}]},{"pos":[13703,13790],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> object."},{"pos":[14677,14785],"content":"Gets a value that indicates whether the specified token requirement is an issued security token requirement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified token requirement is an issued security token requirement.","pos":[0,108]}]},{"pos":[15053,15134],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>."},{"pos":[15193,15483],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified token requirement is an issued security token requirement; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified token requirement is an issued security token requirement; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,211],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified token requirement is an issued security token requirement; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[212,290],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[15704,15793],"content":"<ph id=\"ph1\">&lt;code&gt;requirement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>requirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  id: ClientCredentialsSecurityTokenManager\n  children:\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)\n  - System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  langs:\n  - csharp\n  name: ClientCredentialsSecurityTokenManager\n  nameWithType: ClientCredentialsSecurityTokenManager\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  type: Class\n  summary: Manages security tokens for the client.\n  remarks: This class handles security token serialization, security token provision and security token authentication for the client. There is one instance of this class for each client channel factory.\n  example:\n  - \"The following code shows how you can override this class to create a custom Client Credentials Security Token Manager.  \\n  \\n [!code-vb[c_CustomCredentials#2](~/add/codesnippet/visualbasic/t-system.servicemodel.cl_1.vb)]\\n [!code-cs[c_CustomCredentials#2](~/add/codesnippet/csharp/t-system.servicemodel.cl_1.cs)]\"\n  syntax:\n    content: 'public class ClientCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenManager\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)\n  id: '#ctor(System.ServiceModel.Description.ClientCredentials)'\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: ClientCredentialsSecurityTokenManager(ClientCredentials)\n  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.ClientCredentialsSecurityTokenManager\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows how to override this constructor.  \\n  \\n [!code-vb[ClientCredentialsSecurityTokenManager#8](~/add/codesnippet/visualbasic/f7027904-ba13-4c11-87f9-_1.vb)]\\n [!code-cs[ClientCredentialsSecurityTokenManager#8](~/add/codesnippet/csharp/f7027904-ba13-4c11-87f9-_1.cs)]\"\n  syntax:\n    content: public ClientCredentialsSecurityTokenManager (System.ServiceModel.Description.ClientCredentials clientCredentials);\n    parameters:\n    - id: clientCredentials\n      type: System.ServiceModel.Description.ClientCredentials\n      description: The <xref:System.ServiceModel.Description.ClientCredentials>.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>clientCredentials</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials\n  id: ClientCredentials\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: ClientCredentials\n  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentials\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the client credentials.\n  remarks: The <xref:System.ServiceModel.Description.ClientCredentials> object allows the user to configure client credentials to be used for authentication to the service.\n  syntax:\n    content: public System.ServiceModel.Description.ClientCredentials ClientCredentials { get; }\n    return:\n      type: System.ServiceModel.Description.ClientCredentials\n      description: The <xref:System.ServiceModel.Description.ClientCredentials> object.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a security token authenticator.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is responsible for validating security tokens and providing a <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to obtain claims for security tokens that meet the requirements specified in <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.\n  syntax:\n    content: public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);\n    parameters:\n    - id: tokenRequirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>.\n    - id: outOfBandTokenResolver\n      type: System.IdentityModel.Selectors.SecurityTokenResolver\n      description: When this method returns, contains a <xref href=\"System.IdentityModel.Selectors.SecurityTokenResolver\"></xref>. This parameter is passed uninitialized.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenAuthenticator\"></xref> object.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenProvider(SecurityTokenRequirement)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a security token provider.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>. Optionally token providers support renewing and canceling tokens as well.\n  example:\n  - \"The following code shows how to override this method.  \\n  \\n [!code-vb[ClientCredentialsSecurityTokenManager#2](~/add/codesnippet/visualbasic/5c6f32c5-5142-4e18-b825-_1.vb)]\\n [!code-cs[ClientCredentialsSecurityTokenManager#2](~/add/codesnippet/csharp/5c6f32c5-5142-4e18-b825-_1.cs)]\"\n  syntax:\n    content: public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);\n    parameters:\n    - id: tokenRequirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenProvider\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenProvider\"></xref> object.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenRequirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenSerializer(SecurityTokenVersion)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a security token serializer.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers, and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.\n  syntax:\n    content: public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);\n    parameters:\n    - id: version\n      type: System.IdentityModel.Selectors.SecurityTokenVersion\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenVersion\"></xref> of the security token.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> object.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)\n  id: CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: CreateSecurityTokenSerializer(SecurityVersion)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a security token serializer.\n  remarks: The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.\n  syntax:\n    content: protected System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.ServiceModel.Security.SecurityVersion version);\n    parameters:\n    - id: version\n      type: System.ServiceModel.Security.SecurityVersion\n      description: The <xref:System.ServiceModel.Security.SecurityVersion> of the security token.\n    return:\n      type: System.IdentityModel.Selectors.SecurityTokenSerializer\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenSerializer\"></xref> object.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  id: IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  langs:\n  - csharp\n  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  nameWithType: ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether the specified token requirement is an issued security token requirement.\n  syntax:\n    content: protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);\n    parameters:\n    - id: requirement\n      type: System.IdentityModel.Selectors.SecurityTokenRequirement\n      description: The <xref href=\"System.IdentityModel.Selectors.SecurityTokenRequirement\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified token requirement is an issued security token requirement; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>requirement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenManager\n  isExternal: false\n  name: System.IdentityModel.Selectors.SecurityTokenManager\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: ClientCredentialsSecurityTokenManager(ClientCredentials)\n  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)\n- uid: System.ServiceModel.Description.ClientCredentials\n  parent: System.ServiceModel.Description\n  isExternal: true\n  name: ClientCredentials\n  nameWithType: ClientCredentials\n  fullName: System.ServiceModel.Description.ClientCredentials\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: ClientCredentials\n  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentials\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.SecurityTokenRequirement\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenRequirement\n  nameWithType: SecurityTokenRequirement\n  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenProvider(SecurityTokenRequirement)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)\n- uid: System.IdentityModel.Selectors.SecurityTokenProvider\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenProvider\n  nameWithType: SecurityTokenProvider\n  fullName: System.IdentityModel.Selectors.SecurityTokenProvider\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenSerializer(SecurityTokenVersion)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)\n- uid: System.IdentityModel.Selectors.SecurityTokenSerializer\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenSerializer\n  nameWithType: SecurityTokenSerializer\n  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer\n- uid: System.IdentityModel.Selectors.SecurityTokenVersion\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenVersion\n  nameWithType: SecurityTokenVersion\n  fullName: System.IdentityModel.Selectors.SecurityTokenVersion\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenSerializer(SecurityVersion)\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)\n- uid: System.ServiceModel.Security.SecurityVersion\n  parent: System.ServiceModel.Security\n  isExternal: true\n  name: SecurityVersion\n  nameWithType: SecurityVersion\n  fullName: System.ServiceModel.Security.SecurityVersion\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  nameWithType: ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor*\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: ClientCredentialsSecurityTokenManager\n  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials*\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: ClientCredentials\n  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentials\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenAuthenticator\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider*\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenProvider\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: CreateSecurityTokenSerializer\n  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer\n- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*\n  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager\n  isExternal: false\n  name: IsIssuedSecurityTokenRequirement\n  nameWithType: ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement\n"}