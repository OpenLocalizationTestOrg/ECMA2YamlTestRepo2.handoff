{"nodes":[{"pos":[623,804],"content":"Allows security actions for <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows security actions for <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SiteIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be applied to code using declarative security.","pos":[0,149],"source":"Allows security actions for <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[150,181]}]},{"pos":[4114,4318],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SiteIdentityPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[4541,4623],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[5219,5329],"content":"Creates and returns a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SiteIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a new instance of <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref>."},{"pos":[5342,5656],"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","pos":[0,312],"nodes":[{"content":"This method should only be called by the security system, never by application code.","pos":[0,84]},{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[91,182]},{"content":"Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","pos":[183,312]}]}]},{"pos":[5836,5945],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SiteIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to this attribute.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> that corresponds to this attribute."},{"pos":[6488,6535],"content":"Gets or sets the site name of the calling code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the site name of the calling code.","pos":[0,47]}]},{"pos":[7362,7444],"content":"The site name to compare against the site name specified by the security provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The site name to compare against the site name specified by the security provider.","pos":[0,82]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute\n  id: SiteIdentityPermissionAttribute\n  children:\n  - System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission\n  - System.Security.Permissions.SiteIdentityPermissionAttribute.Site\n  langs:\n  - csharp\n  name: SiteIdentityPermissionAttribute\n  nameWithType: SiteIdentityPermissionAttribute\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute\n  type: Class\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \\\"//\\\" after the protocol of a URL and the following \\\"/\\\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \\n  \\n Sites can be matched exactly, or by a wildcard (\\\"*\\\") prefix at the dot delimiter. For example, the site name string \\\\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\\\* will match any site, but will not match code that has no site evidence.  \\n  \\n> [!IMPORTANT]\\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \\n>   \\n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \\n  \\n The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class SiteIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  langs:\n  - csharp\n  name: SiteIdentityPermissionAttribute(SecurityAction)\n  nameWithType: SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  syntax:\n    content: public SiteIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: SiteIdentityPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new instance of <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref>.\n  remarks: \"This method should only be called by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> that corresponds to this attribute.\n  overload: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.Site\n  id: Site\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  langs:\n  - csharp\n  name: Site\n  nameWithType: SiteIdentityPermissionAttribute.Site\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.Site\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the site name of the calling code.\n  remarks: \"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \\\"//\\\" after the protocol of a URL and the following \\\"/\\\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \\n  \\n Sites can be matched exactly, or by a wildcard (\\\"*\\\") prefix at the dot delimiter. For example, the site name string \\\\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match.\"\n  syntax:\n    content: public string Site { get; set; }\n    return:\n      type: System.String\n      description: The site name to compare against the site name specified by the security provider.\n  overload: System.Security.Permissions.SiteIdentityPermissionAttribute.Site*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  isExternal: false\n  name: SiteIdentityPermissionAttribute(SecurityAction)\n  nameWithType: SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: SiteIdentityPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.Site\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  isExternal: false\n  name: Site\n  nameWithType: SiteIdentityPermissionAttribute.Site\n  fullName: System.Security.Permissions.SiteIdentityPermissionAttribute.Site\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor*\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  isExternal: false\n  name: SiteIdentityPermissionAttribute\n  nameWithType: SiteIdentityPermissionAttribute.SiteIdentityPermissionAttribute\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: SiteIdentityPermissionAttribute.CreatePermission\n- uid: System.Security.Permissions.SiteIdentityPermissionAttribute.Site*\n  parent: System.Security.Permissions.SiteIdentityPermissionAttribute\n  isExternal: false\n  name: Site\n  nameWithType: SiteIdentityPermissionAttribute.Site\n"}