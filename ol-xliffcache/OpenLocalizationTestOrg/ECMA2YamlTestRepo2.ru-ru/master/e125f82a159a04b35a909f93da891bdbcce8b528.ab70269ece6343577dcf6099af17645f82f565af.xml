{"nodes":[{"pos":[5189,5254],"content":"Encapsulates HTTP-response information from an ASP.NET operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Encapsulates HTTP-response information from an ASP.NET operation.","pos":[0,65]}]},{"pos":[5267,6649],"content":"The methods and properties of the HttpResponse class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.       The following methods of the HttpResponse class are supported only in post back scenarios and not in asynchronous post back scenarios:      -   <xref:System.Web.HttpResponse.BinaryWrite%2A>      -   <xref:System.Web.HttpResponse.Clear%2A>      -   <xref:System.Web.HttpResponse.ClearContent%2A>      -   <xref:System.Web.HttpResponse.ClearHeaders%2A>      -   <xref:System.Web.HttpResponse.Close%2A>      -   <xref:System.Web.HttpResponse.End%2A>      -   <xref:System.Web.HttpResponse.Flush%2A>      -   <xref:System.Web.HttpResponse.TransmitFile%2A>      -   <xref:System.Web.HttpResponse.Write%2A>      -   <xref:System.Web.HttpResponse.WriteFile%2A>      -   <xref:System.Web.HttpResponse.WriteSubstitution%2A>       Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back. For more information, see [UpdatePanel Control Overview](~/add/includes/ajax-current-ext-md.md) and [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The methods and properties of the HttpResponse class are exposed through the &lt;xref:System.Web.HttpApplication.Response%2A&gt; property of the &lt;xref:System.Web.HttpApplication&gt;, &lt;xref:System.Web.HttpContext&gt;, &lt;xref:System.Web.UI.Page&gt;, and &lt;xref:System.Web.UI.UserControl&gt; classes.","pos":[0,277],"source":"The methods and properties of the HttpResponse class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes."},{"content":"The following methods of the HttpResponse class are supported only in post back scenarios and not in asynchronous post back scenarios:      -   &lt;xref:System.Web.HttpResponse.BinaryWrite%2A&gt;      -   &lt;xref:System.Web.HttpResponse.Clear%2A&gt;      -   &lt;xref:System.Web.HttpResponse.ClearContent%2A&gt;      -   &lt;xref:System.Web.HttpResponse.ClearHeaders%2A&gt;      -   &lt;xref:System.Web.HttpResponse.Close%2A&gt;      -   &lt;xref:System.Web.HttpResponse.End%2A&gt;      -   &lt;xref:System.Web.HttpResponse.Flush%2A&gt;      -   &lt;xref:System.Web.HttpResponse.TransmitFile%2A&gt;      -   &lt;xref:System.Web.HttpResponse.Write%2A&gt;      -   &lt;xref:System.Web.HttpResponse.WriteFile%2A&gt;      -   &lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;       Partial-page updates are enabled when you use &lt;xref:System.Web.UI.UpdatePanel&gt; controls to update selected regions of a page instead of updating the whole page with a post back.","pos":[284,1182],"source":"       The following methods of the HttpResponse class are supported only in post back scenarios and not in asynchronous post back scenarios:      -   <xref:System.Web.HttpResponse.BinaryWrite%2A>      -   <xref:System.Web.HttpResponse.Clear%2A>      -   <xref:System.Web.HttpResponse.ClearContent%2A>      -   <xref:System.Web.HttpResponse.ClearHeaders%2A>      -   <xref:System.Web.HttpResponse.Close%2A>      -   <xref:System.Web.HttpResponse.End%2A>      -   <xref:System.Web.HttpResponse.Flush%2A>      -   <xref:System.Web.HttpResponse.TransmitFile%2A>      -   <xref:System.Web.HttpResponse.Write%2A>      -   <xref:System.Web.HttpResponse.WriteFile%2A>      -   <xref:System.Web.HttpResponse.WriteSubstitution%2A>       Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>UpdatePanel Control Overview<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Partial-Page Rendering Overview<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1183,1356],"source":" For more information, see [UpdatePanel Control Overview](~/add/includes/ajax-current-ext-md.md) and [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[9201,9286],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpResponse\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.HttpResponse\"></xref> class."},{"pos":[9299,9583],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.       The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.       The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.","pos":[0,282],"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]},{"content":"The methods and properties of the &lt;xref:System.Web.HttpResponse&gt; class are exposed through the intrinsic &lt;xref:System.Web.HttpContext.Response%2A&gt; object in ASP.NET.","pos":[117,282],"source":"       The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET."}]}]},{"pos":[9744,9813],"content":"A <xref:System.IO.TextWriter> object that enables custom HTTP output.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; object that enables custom HTTP output.","pos":[0,69],"source":"A <xref:System.IO.TextWriter> object that enables custom HTTP output."}]},{"pos":[10368,10542],"content":"Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.","pos":[0,174]}]},{"pos":[10554,10698],"content":"The AddCacheDependency method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AddCacheDependency method allows dependencies to be created between cached responses and a &lt;xref:System.Web.Caching.CacheDependency&gt; object.","pos":[0,144],"source":"The AddCacheDependency method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object."}]},{"pos":[11316,11441],"content":"A file, cache key, or <bpt id=\"p1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the list of application dependencies.","needQuote":true,"needEscape":true,"source":"A file, cache key, or <xref href=\"System.Web.Caching.CacheDependency\"></xref> to add to the list of application dependencies."},{"pos":[11614,11718],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dependencies</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>dependencies</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11829,11941],"content":"This method was called too late in the cache processing pipeline, after the cached response was already created.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method was called too late in the cache processing pipeline, after the cached response was already created.","pos":[0,112]}]},{"pos":[12426,12504],"content":"Makes the validity of a cached response dependent on other items in the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes the validity of a cached response dependent on other items in the cache.","pos":[0,78]}]},{"pos":[12516,12653],"content":"When the items referred to in the <ph id=\"ph1\">`cacheKeys`</ph> parameter are removed from the cache, the cached response of the current item is not valid.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When the items referred to in the `cacheKeys` parameter are removed from the cache, the cached response of the current item is not valid."},{"pos":[13620,13761],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the keys of the items that the current cached response is dependent upon.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Collections.ArrayList\"></xref> that contains the keys of the items that the current cached response is dependent upon."},{"pos":[14296,14371],"content":"Makes the validity of a cached item dependent on another item in the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes the validity of a cached item dependent on another item in the cache.","pos":[0,75]}]},{"pos":[14383,14490],"content":"When any of the <ph id=\"ph1\">`cacheKey`</ph>s are removed from the cache, the cached response of the current item is invalid.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When any of the `cacheKey`s are removed from the cache, the cached response of the current item is invalid."},{"pos":[14656,14721],"content":"An array of item keys that the cached response is dependent upon.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of item keys that the cached response is dependent upon.","pos":[0,65]}]},{"pos":[15236,15315],"content":"Makes the validity of a cached response dependent on another item in the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes the validity of a cached response dependent on another item in the cache.","pos":[0,79]}]},{"pos":[15327,15461],"content":"When the item corresponding to the <ph id=\"ph1\">`cacheKey`</ph> parameter is removed from the cache, the cached response of the current item is invalid.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When the item corresponding to the `cacheKey` parameter is removed from the cache, the cached response of the current item is invalid."},{"pos":[16883,16946],"content":"The key of the item that the cached response is dependent upon.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the item that the cached response is dependent upon.","pos":[0,63]}]},{"pos":[17483,17585],"content":"Adds a group of file names to the collection of file names on which the current response is dependent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a group of file names to the collection of file names on which the current response is dependent.","pos":[0,102]}]},{"pos":[18435,18466],"content":"The collection of files to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of files to add.","pos":[0,31]}]},{"pos":[18971,19074],"content":"Adds an array of file names to the collection of file names on which the current response is dependent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an array of file names to the collection of file names on which the current response is dependent.","pos":[0,103]}]},{"pos":[19640,19665],"content":"An array of files to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of files to add.","pos":[0,25]}]},{"pos":[20150,20249],"content":"Adds a single file name to the collection of file names on which the current response is dependent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a single file name to the collection of file names on which the current response is dependent.","pos":[0,99]}]},{"pos":[20262,20592],"content":"When you use the AddFileDependency method to add a file dependency, you must also specify output caching programmatically or declaratively. For example, to specify output caching declaratively, use the  directive. For more information, see [How to: Cache Page Output with File Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you use the AddFileDependency method to add a file dependency, you must also specify output caching programmatically or declaratively.","pos":[0,139]},{"content":"For example, to specify output caching declaratively, use the  directive.","pos":[140,213]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Cache Page Output with File Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[214,330],"source":" For more information, see [How to: Cache Page Output with File Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[21180,21208],"content":"The name of the file to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to add.","pos":[0,28]}]},{"pos":[21700,21811],"content":"Adds an HTTP header to the output stream. AddHeader is provided for compatibility with earlier versions of ASP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an HTTP header to the output stream. AddHeader is provided for compatibility with earlier versions of ASP.","pos":[0,111],"nodes":[{"content":"Adds an HTTP header to the output stream.","pos":[0,41]},{"content":"AddHeader is provided for compatibility with earlier versions of ASP.","pos":[42,111]}]}]},{"pos":[21823,22029],"content":"AddHeader is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"AddHeader is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.","pos":[0,206],"nodes":[{"content":"AddHeader is the same as &lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt; and is provided only for compatibility with earlier versions of ASP.","pos":[0,140],"source":"AddHeader is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP."},{"content":"With ASP.NET, use &lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;.","pos":[141,206],"source":" With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>."}]}]},{"pos":[22180,22226],"content":"The name of the HTTP header to add <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The name of the HTTP header to add `value` to."},{"pos":[22288,22320],"content":"The string to add to the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to add to the header.","pos":[0,32]}]},{"pos":[22893,23080],"content":"[Supported in the .NET Framework 4.5.2 and later versions]       Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.","needQuote":false,"needEscape":true,"nodes":[{"content":"[Supported in the .NET Framework 4.5.2 and later versions]       Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.","pos":[0,185]}]},{"pos":[23094,24536],"content":"> [!IMPORTANT] >  The AddOnSendingHeaders method is not invoked if the native module flushes the response first.       The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription. The intent is that the callback may modify the response status code or may set a response cookie or header. Other usage notes and caveats:      -   This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.      -   The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on. For example, the callback may be invoked synchronously in a background thread if a background flush is being performed. <xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.      -   The callback must not call any method that manipulates the response entity body or that results in a flush. For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body.      -   The callback must contain only short-running synchronous code. Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.      -   The callback must not throw an exception; otherwise behavior is undefined.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!IMPORTANT]</ph> &gt;  The AddOnSendingHeaders method is not invoked if the native module flushes the response first.","pos":[0,112],"source":"> [!IMPORTANT] >  The AddOnSendingHeaders method is not invoked if the native module flushes the response first."},{"content":"The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.","pos":[119,287]},{"content":"The intent is that the callback may modify the response status code or may set a response cookie or header.","pos":[288,395]},{"content":"Other usage notes and caveats:      -   This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.","pos":[396,592]},{"content":"-   The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.","pos":[598,699]},{"content":"For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.","pos":[700,819]},{"content":"&lt;xref:System.Web.HttpContext.Current%2A&gt; is not guaranteed to be available in such a thread.","pos":[820,912],"source":" <xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread."},{"content":"-   The callback must not call any method that manipulates the response entity body or that results in a flush.","pos":[918,1029]},{"content":"For example, the callback must not call &lt;xref:System.Web.HttpResponse.Redirect%2A&gt;, as that method may manipulate the response entity body.","pos":[1030,1169],"source":" For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body."},{"content":"-   The callback must contain only short-running synchronous code.","pos":[1175,1241]},{"content":"Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.","pos":[1242,1345]},{"content":"-   The callback must not throw an exception; otherwise behavior is undefined.","pos":[1351,1429]}]},{"pos":[24765,24785],"content":"The callback method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback method.","pos":[0,20]}]},{"pos":[24859,24990],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.ISubscriptionToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the subscription to the OnSendingHeaders pseudo-event.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.ISubscriptionToken\"></xref> object that represents the subscription to the OnSendingHeaders pseudo-event."},{"pos":[25478,25533],"content":"Adds an HTTP cookie to the intrinsic cookie collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an HTTP cookie to the intrinsic cookie collection.","pos":[0,55]}]},{"pos":[26270,26345],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCookie\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the output stream.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.HttpCookie\"></xref> to add to the output stream."},{"pos":[26504,26563],"content":"A cookie is appended after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cookie is appended after the HTTP headers have been sent.","pos":[0,59]}]},{"pos":[26998,27039],"content":"Adds an HTTP header to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an HTTP header to the output stream.","pos":[0,41]}]},{"pos":[27052,28174],"content":"If you use the AppendHeader method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used. This behavior enables ASP.NET to maintain the most restrictive settings. For example, consider a page that includes user controls. If those controls have conflicting cache policies, the most restrictive cache policy will be used. If one user control sets the header \"`Cache-Control: Public`\" and another user control sets the more restrictive header \"`Cache-Control: Private`\" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the \"`Cache-Control: Private`\" header will be sent with the response.       For a list of standard HTTP/1.1 headers, see section 14, \"Header Field Definitions,\" in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you use the AppendHeader method to send cache-specific headers and at the same time use the cache object model (&lt;xref:System.Web.HttpResponse.Cache%2A&gt;) to set cache policy, HTTP response headers that pertain to caching (<ph id=\"ph1\">`Cache-Control`</ph>, <ph id=\"ph2\">`Expires`</ph>, <ph id=\"ph3\">`Last-Modified`</ph>, <ph id=\"ph4\">`Pragma`</ph>, and <ph id=\"ph5\">`Vary`</ph>) might be deleted when the cache object model is used.","pos":[0,344],"source":"If you use the AppendHeader method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used."},{"content":"This behavior enables ASP.NET to maintain the most restrictive settings.","pos":[345,417]},{"content":"For example, consider a page that includes user controls.","pos":[418,475]},{"content":"If those controls have conflicting cache policies, the most restrictive cache policy will be used.","pos":[476,574]},{"content":"If one user control sets the header \"<ph id=\"ph1\">`Cache-Control: Public`</ph>\" and another user control sets the more restrictive header \"<ph id=\"ph2\">`Cache-Control: Private`</ph>\" via calls to &lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;, then the \"<ph id=\"ph3\">`Cache-Control: Private`</ph>\" header will be sent with the response.","pos":[575,863],"source":" If one user control sets the header \"`Cache-Control: Public`\" and another user control sets the more restrictive header \"`Cache-Control: Private`\" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the \"`Cache-Control: Private`\" header will be sent with the response."},{"content":"For a list of standard HTTP/1.1 headers, see section 14, \"Header Field Definitions,\" in the <bpt id=\"p1\">[</bpt>Hypertext Transfer Protocol -- HTTP/1.1<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=73147)</ept> specification on the World Wide Web Consortium (W3C) Web site.","pos":[870,1112],"source":"       For a list of standard HTTP/1.1 headers, see section 14, \"Header Field Definitions,\" in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site."}]},{"pos":[28752,28808],"content":"The name of the HTTP header to add to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the HTTP header to add to the output stream.","pos":[0,56]}]},{"pos":[28870,28905],"content":"The string to append to the header.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to append to the header.","pos":[0,35]}]},{"pos":[29064,29125],"content":"The header is appended after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The header is appended after the HTTP headers have been sent.","pos":[0,61]}]},{"pos":[29506,29586],"content":"Adds custom log information to the Internet Information Services (IIS) log file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds custom log information to the Internet Information Services (IIS) log file.","pos":[0,80]}]},{"pos":[29599,30397],"content":"To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS.       To customize extended logging in IIS 6.0, follow these steps:      1.  In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**.      2.  Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected).      3.  In the **Active log format** box, click **W3C Extended Log File Format**.      4.  Click **Properties**.      5.  Click the **Advanced** tab, select the properties that you want to log, and then click **OK**.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"To allow for the specified string to be recorded in the log file, you first must enable the <bpt id=\"p1\">**</bpt>URI Query<ept id=\"p1\">**</ept> option of the <bpt id=\"p2\">**</bpt>Extended Logging Properties<ept id=\"p2\">**</ept> dialog box for the site that you want to log activity for in IIS.","pos":[0,217],"source":"To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS."},{"content":"To customize extended logging in IIS 6.0, follow these steps:      1.","pos":[224,293]},{"content":"In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","pos":[295,442],"source":"  In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**."},{"content":"2.","pos":[448,450]},{"content":"Click the <bpt id=\"p1\">**</bpt>Web or FTP Site<ept id=\"p1\">**</ept> tab, and then select the <bpt id=\"p2\">**</bpt>Enable logging<ept id=\"p2\">**</ept> check box (if it is not already selected).","pos":[452,568],"source":"  Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected)."},{"content":"3.","pos":[574,576]},{"content":"In the <bpt id=\"p1\">**</bpt>Active log format<ept id=\"p1\">**</ept> box, click <bpt id=\"p2\">**</bpt>W3C Extended Log File Format<ept id=\"p2\">**</ept>.","pos":[578,651],"source":"  In the **Active log format** box, click **W3C Extended Log File Format**."},{"content":"4.","pos":[657,659]},{"content":"Click <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept>.","pos":[661,682],"source":"  Click **Properties**."},{"content":"5.","pos":[688,690]},{"content":"Click the <bpt id=\"p1\">**</bpt>Advanced<ept id=\"p1\">**</ept> tab, select the properties that you want to log, and then click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>.","pos":[692,786],"source":"  Click the **Advanced** tab, select the properties that you want to log, and then click **OK**."}]},{"pos":[30862,30894],"content":"The text to add to the log file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to add to the log file.","pos":[0,32]}]},{"pos":[31386,31706],"content":"Adds a session ID to the virtual path if the session is using &lt;xref:System.Web.Configuration.SessionStateSection.Cookieless<bpt id=\"p1\">*</bpt>&gt; session state and returns the combined path. If &lt;xref:System.Web.Configuration.SessionStateSection.Cookieless<ept id=\"p1\">*</ept>&gt; session state is not used, ApplyAppPathModifier returns the original virtual path.","needQuote":true,"needEscape":true,"source":"Adds a session ID to the virtual path if the session is using <xref:System.Web.Configuration.SessionStateSection.Cookieless*> session state and returns the combined path. If <xref:System.Web.Configuration.SessionStateSection.Cookieless*> session state is not used, ApplyAppPathModifier returns the original virtual path."},{"pos":[31718,31805],"content":"ApplyAppPathModifier is used only with cookieless sessions to construct absolute HREFs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"ApplyAppPathModifier is used only with cookieless sessions to construct absolute HREFs.","pos":[0,87]}]},{"pos":[32518,32549],"content":"The virtual path to a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to a resource.","pos":[0,31]}]},{"pos":[32607,32665],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the session ID inserted.","needQuote":true,"needEscape":true,"source":"The <code>virtualPath</code> with the session ID inserted."},{"pos":[33200,33252],"content":"Sends the currently buffered response to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends the currently buffered response to the client.","pos":[0,52]}]},{"pos":[33264,33619],"content":"If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously. Otherwise, the flush operation is performed synchronously. Asynchronous flush is supported for IIS 6.0 and later.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously. Otherwise, the flush operation is performed synchronously. Asynchronous flush is supported for IIS 6.0 and later.","pos":[0,355],"nodes":[{"content":"If the underlying &lt;xref:System.Web.HttpWorkerRequest&gt; object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.","pos":[0,241],"source":"If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously."},{"content":"Otherwise, the flush operation is performed synchronously.","pos":[242,300]},{"content":"Asynchronous flush is supported for IIS 6.0 and later.","pos":[301,355]}]}]},{"pos":[33801,33821],"content":"The callback object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The callback object.","pos":[0,20]}]},{"pos":[33883,33902],"content":"The response state.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response state.","pos":[0,19]}]},{"pos":[33966,33997],"content":"The asynchronous result object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous result object.","pos":[0,31]}]},{"pos":[34154,34188],"content":"The response is already completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response is already completed.","pos":[0,34]}]},{"pos":[34569,34632],"content":"Writes a string of binary characters to the HTTP output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes a string of binary characters to the HTTP output stream.","pos":[0,63]}]},{"pos":[35152,35192],"content":"The bytes to write to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bytes to write to the output stream.","pos":[0,40]}]},{"pos":[35562,35682],"content":"Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.","pos":[0,120]}]},{"pos":[35694,35940],"content":"The Buffer property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Buffer property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.","pos":[0,246],"nodes":[{"content":"The Buffer property has been deprecated in favor of the &lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt; property and is provided only for compatibility with earlier versions of ASP.","pos":[0,180],"source":"The Buffer property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP."},{"content":"With ASP.NET, use &lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;.","pos":[181,246],"source":" With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>."}]}]},{"pos":[36055,36227],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the output to client is buffered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the output to client is buffered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36622,36738],"content":"Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.","pos":[0,116]}]},{"pos":[37579,37827],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the output to client is buffered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the output to client is buffered; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,171],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the output to client is buffered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,248],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[38193,38293],"content":"Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.","pos":[0,100]}]},{"pos":[38791,38924],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCachePolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains information about the caching policy of the current response.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.HttpCachePolicy\"></xref> object that contains information about the caching policy of the current response."},{"pos":[39318,39518],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Cache-Control\" name=\"Cache-Control\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> HTTP header that matches one of the <bpt id=\"p2\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref uid=\"langword_csharp_Cache-Control\" name=\"Cache-Control\" href=\"\"></xref> HTTP header that matches one of the <xref href=\"System.Web.HttpCacheability\"></xref> enumeration values."},{"pos":[39531,40338],"content":"The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (\" \"). If the CacheControl property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown. If the CacheControl property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability>.       The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated. Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The values for <ph id=\"ph1\">`Private`</ph>, <ph id=\"ph2\">`Public`</ph>, and <ph id=\"ph3\">`No-Cache`</ph> are strings and must be enclosed in quotation marks (\" \").","pos":[0,109],"source":"The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (\" \")."},{"content":"If the CacheControl property is set to a value that does not match one of the &lt;xref:System.Web.HttpCacheability&gt; enumeration values, then an &lt;xref:System.ArgumentException&gt; is thrown.","pos":[110,293],"source":" If the CacheControl property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown."},{"content":"If the CacheControl property is not set, the cacheability of the response is set to &lt;xref:System.Web.HttpCacheability&gt;.","pos":[294,413],"source":" If the CacheControl property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability>."},{"content":"The <ph id=\"ph1\">`CacheControl`</ph>, &lt;xref:System.Web.HttpResponse.Expires%2A&gt;, and &lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt; properties have been deprecated.","pos":[420,569],"source":"       The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated."},{"content":"Instead, the methods of the &lt;xref:System.Web.HttpCachePolicy&gt; class are available through the &lt;xref:System.Web.HttpResponse.Cache%2A&gt; intrinsic object to control the Internet Information Services (IIS) output cache and client caches.","pos":[570,803],"source":" Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches."}]},{"pos":[40461,40559],"content":"A string representation of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"A string representation of the <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value."},{"pos":[40718,40833],"content":"The string value set does not match one of the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"The string value set does not match one of the <xref href=\"System.Web.HttpCacheability\"></xref> enumeration values."},{"pos":[41142,41199],"content":"Gets or sets the HTTP character set of the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP character set of the output stream.","pos":[0,57]}]},{"pos":[41211,41298],"content":"The <ph id=\"ph1\">`Charset`</ph> property can be set to <ph id=\"ph2\">`null`</ph> to suppress the HTTP <ph id=\"ph3\">`Content-Type`</ph> header.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `Charset` property can be set to `null` to suppress the HTTP `Content-Type` header."},{"pos":[41762,41806],"content":"The HTTP character set of the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP character set of the output stream.","pos":[0,44]}]},{"pos":[41960,42072],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Charset\" name=\"Charset\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property was set after headers were sent.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Charset\" name=\"Charset\" href=\"\"></xref> property was set after headers were sent."},{"pos":[42375,42424],"content":"Clears all content output from the buffer stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all content output from the buffer stream.","pos":[0,49]}]},{"pos":[42436,42487],"content":"The Clear method does not clear header information.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Clear method does not clear header information.","pos":[0,51]}]},{"pos":[43657,43706],"content":"Clears all content output from the buffer stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all content output from the buffer stream.","pos":[0,49]}]},{"pos":[43718,43776],"content":"The ClearContent method does not clear header information.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ClearContent method does not clear header information.","pos":[0,58]}]},{"pos":[44579,44621],"content":"Clears all headers from the buffer stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all headers from the buffer stream.","pos":[0,42]}]},{"pos":[45434,45492],"content":"Headers are cleared after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Headers are cleared after the HTTP headers have been sent.","pos":[0,58]}]},{"pos":[45881,45981],"content":"Gets a <xref:System.Threading.CancellationToken> object that is tripped when the client disconnects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Threading.CancellationToken&gt; object that is tripped when the client disconnects.","pos":[0,100],"source":"Gets a <xref:System.Threading.CancellationToken> object that is tripped when the client disconnects."}]},{"pos":[45994,47938],"content":"This API is thread-safe. However, there are some restrictions on how the cancellation token should be used. Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior. Keep in mind the following guidelines:      -   Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request. There is no guarantee that the token will ever transition to a canceled state before it is disposed. For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.      -   Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.      -   Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.      -   Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> method. The callback may be running concurrently with other ASP.NET or application code.      -   Keep the callback methods short-running and non-blocking.      -   Make every effort to avoid throwing exceptions from within the callback methods.       This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode. If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown. To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>. To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This API is thread-safe. However, there are some restrictions on how the cancellation token should be used. Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior. Keep in mind the following guidelines:      -   Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request. There is no guarantee that the token will ever transition to a canceled state before it is disposed. For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.      -   Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.      -   Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.      -   Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> method. The callback may be running concurrently with other ASP.NET or application code.      -   Keep the callback methods short-running and non-blocking.      -   Make every effort to avoid throwing exceptions from within the callback methods.       This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode. If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown. To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>. To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.","pos":[0,1930],"nodes":[{"content":"This API is thread-safe.","pos":[0,24]},{"content":"However, there are some restrictions on how the cancellation token should be used.","pos":[25,107]},{"content":"Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.","pos":[108,198]},{"content":"Keep in mind the following guidelines:      -   Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.","pos":[199,409]},{"content":"There is no guarantee that the token will ever transition to a canceled state before it is disposed.","pos":[410,510]},{"content":"For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.","pos":[511,650]},{"content":"-   Do not wait on the &lt;xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName&gt;, as this defeats the purpose of an asynchronous notification and can cause deadlocks.","pos":[656,845],"source":"      -   Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, as this defeats the purpose of an asynchronous notification and can cause deadlocks."},{"content":"-   Do not call the &lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName&gt; overloads which invoke the callback on the original &lt;xref:System.Threading.SynchronizationContext&gt; object.","pos":[851,1056],"source":"      -   Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object."},{"content":"-   Do not use the &lt;xref:System.Web.HttpContext&gt; object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the &lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName&gt; method.","pos":[1062,1296],"source":"      -   Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> method."},{"content":"The callback may be running concurrently with other ASP.NET or application code.","pos":[1297,1377]},{"content":"-   Keep the callback methods short-running and non-blocking.","pos":[1383,1444]},{"content":"-   Make every effort to avoid throwing exceptions from within the callback methods.","pos":[1450,1534]},{"content":"This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode.","pos":[1541,1635]},{"content":"If you invoke it without the right IIS version or pipeline mode, a &lt;xref:System.PlatformNotSupportedException&gt; is thrown.","pos":[1636,1757],"source":" If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown."},{"content":"To determine the IIS version, use &lt;xref:System.Web.HttpRuntime.IISVersion%2A&gt;.","pos":[1758,1836],"source":" To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>."},{"content":"To determine the pipeline mode, use &lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;.","pos":[1837,1930],"source":" To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>."}]}]},{"pos":[48116,48139],"content":"The cancellation token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cancellation token.","pos":[0,23]}]},{"pos":[48520,48561],"content":"Closes the socket connection to a client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the socket connection to a client.","pos":[0,41]}]},{"pos":[48574,49084],"content":"This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing. The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.       However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing. The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.       However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.","pos":[0,508],"nodes":[{"content":"This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.","pos":[0,127]},{"content":"The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.","pos":[128,287]},{"content":"However, typically you should call &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt; instead if you want to jump ahead to the &lt;xref:System.Web.HttpApplication.EndRequest&gt; event and send a response to the client.","pos":[294,508],"source":"       However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client."}]}]},{"pos":[49558,49615],"content":"Gets or sets the HTTP character set of the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP character set of the output stream.","pos":[0,57]}]},{"pos":[49627,49936],"content":"Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) section. If ContentEncoding is specified by the client, the default configuration settings are overridden.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Default <ph id=\"ph1\">`ContentEncoding`</ph> can be specified in an ASP.NET configuration file in the <bpt id=\"p1\">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> section.","pos":[0,211],"source":"Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) section."},{"content":"If ContentEncoding is specified by the client, the default configuration settings are overridden.","pos":[212,309]}]},{"pos":[50458,50569],"content":"A <xref:System.Text.Encoding> object that contains information about the character set of the current response.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Text.Encoding&gt; object that contains information about the character set of the current response.","pos":[0,111],"source":"A <xref:System.Text.Encoding> object that contains information about the character set of the current response."}]},{"pos":[50739,50836],"content":"Attempted to set ContentEncoding to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Attempted to set ContentEncoding to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[51165,51218],"content":"Gets or sets the HTTP MIME type of the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP MIME type of the output stream.","pos":[0,53]}]},{"pos":[52061,52196],"content":"The HTTP MIME type of the output stream. The default value is \"<xref uid=\"langword_csharp_text/html\" name=\"text/html\" href=\"\"></xref>\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP MIME type of the output stream.","pos":[0,40]},{"content":"The default value is \"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_text/html\" name=\"text/html\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>\".","pos":[41,135],"source":" The default value is \"<xref uid=\"langword_csharp_text/html\" name=\"text/html\" href=\"\"></xref>\"."}]},{"pos":[52354,52450],"content":"The ContentType property is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The ContentType property is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[52759,52795],"content":"Gets the response cookie collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the response cookie collection.","pos":[0,36]}]},{"pos":[52808,53489],"content":"ASP.NET includes two intrinsic cookie collections. The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header. The collection accessed through the Cookies collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.       After you add a cookie by using the Cookies collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName> collection, even if the response has not been sent to the client.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"ASP.NET includes two intrinsic cookie collections.","pos":[0,50]},{"content":"The collection accessed through the &lt;xref:System.Web.HttpRequest.Cookies%2A&gt; collection of &lt;xref:System.Web.HttpRequest&gt; contains cookies transmitted by the client to the server in the <ph id=\"ph1\">`Cookie`</ph> header.","pos":[51,252],"source":" The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header."},{"content":"The collection accessed through the Cookies collection of &lt;xref:System.Web.HttpResponse&gt; contains new cookies created on the server and transmitted to the client in the <ph id=\"ph1\">`Set-Cookie`</ph> header.","pos":[253,442],"source":" The collection accessed through the Cookies collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header."},{"content":"After you add a cookie by using the Cookies collection, the cookie is immediately available in the &lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName&gt; collection, even if the response has not been sent to the client.","pos":[449,679],"source":"       After you add a cookie by using the Cookies collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName> collection, even if the response has not been sent to the client."}]},{"pos":[54188,54219],"content":"The response cookie collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response cookie collection.","pos":[0,31]}]},{"pos":[54649,54698],"content":"Disables kernel caching for the current response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disables kernel caching for the current response.","pos":[0,49]}]},{"pos":[54710,54772],"content":"If kernel caching is not supported, this method has no effect.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If kernel caching is not supported, this method has no effect.","pos":[0,62]}]},{"pos":[55280,55329],"content":"Disables IIS user-mode caching for this response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disables IIS user-mode caching for this response.","pos":[0,49]}]},{"pos":[55341,55434],"content":"If IIS user-mode caching is not supported, this method returns without performing any action.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If IIS user-mode caching is not supported, this method returns without performing any action.","pos":[0,93]}]},{"pos":[55873,56033],"content":"Sends all currently buffered output to the client, stops execution of the page, and raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplication.EndRequest\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Sends all currently buffered output to the client, stops execution of the page, and raises the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event."},{"pos":[56046,57588],"content":"This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET. If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead.       To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception. If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance. In that case, no code after the call to the End method is executed.       If the End method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client. It does this synchronously, which can also be detrimental to your site's performance.       In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event.       The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed. If your intention is to avoid execution of subsequent code, and if the performance penalty of End is acceptable, you can call End instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.","pos":[0,147]},{"content":"If you want to jump ahead to the &lt;xref:System.Web.HttpApplication.EndRequest&gt; event and send a response to the client, it is usually preferable to call &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt; instead.","pos":[148,361],"source":" If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead."},{"content":"To mimic the behavior of the <ph id=\"ph1\">`End`</ph> method in ASP, this method tries to raise a &lt;xref:System.Threading.ThreadAbortException&gt; exception.","pos":[368,502],"source":"       To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception."},{"content":"If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.","pos":[503,618]},{"content":"In that case, no code after the call to the End method is executed.","pos":[619,686]},{"content":"If the End method is not able to raise a &lt;xref:System.Threading.ThreadAbortException&gt;, it instead flushes the response bytes to the client.","pos":[693,832],"source":"       If the End method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client."},{"content":"It does this synchronously, which can also be detrimental to your site's performance.","pos":[833,918]},{"content":"In either case (whether or not a &lt;xref:System.Threading.ThreadAbortException&gt; exception is successfully raised), the response pipeline jumps ahead to the &lt;xref:System.Web.HttpApplication.EndRequest&gt; event.","pos":[925,1130],"source":"       In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event."},{"content":"The &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt; method does not raise an exception, and code after the call to the &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt; method might be executed.","pos":[1137,1339],"source":"       The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed."},{"content":"If your intention is to avoid execution of subsequent code, and if the performance penalty of End is acceptable, you can call End instead of &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;.","pos":[1340,1534],"source":" If your intention is to avoid execution of subsequent code, and if the performance penalty of End is acceptable, you can call End instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>."}]},{"pos":[57827,57878],"content":"The call to End has terminated the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The call to End has terminated the current request.","pos":[0,51]}]},{"pos":[58274,58316],"content":"Completes an asynchronous flush operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes an asynchronous flush operation.","pos":[0,42]}]},{"pos":[58478,58509],"content":"The asynchronous result object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous result object.","pos":[0,31]}]},{"pos":[58672,58815],"content":"Asynchronous flush is not supported and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Asynchronous flush is not supported and the <code>asyncResult</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[58910,59035],"content":"Asynchronous flush is not supported and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be cast to a <ph id=\"ph2\">`FlushAsyncResult`</ph> object.","needQuote":true,"needEscape":true,"source":"Asynchronous flush is not supported and the <code>asyncResult</code> parameter cannot be cast to a `FlushAsyncResult` object."},{"pos":[59344,59578],"content":"Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. Expires is provided for compatibility with earlier versions of ASP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. Expires is provided for compatibility with earlier versions of ASP.","pos":[0,234],"nodes":[{"content":"Gets or sets the number of minutes before a page cached on a browser expires.","pos":[0,77]},{"content":"If the user returns to the same page before it expires, the cached version is displayed.","pos":[78,166]},{"content":"Expires is provided for compatibility with earlier versions of ASP.","pos":[167,234]}]}]},{"pos":[59590,59970],"content":"The <ph id=\"ph1\">`Expires`</ph>, &lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt; and &lt;xref:System.Web.HttpResponse.CacheControl%2A&gt; properties have been deprecated in favor of the methods of the &lt;xref:System.Web.HttpCachePolicy&gt; class available through the &lt;xref:System.Web.HttpResponse.Cache%2A&gt; intrinsic object to control the Internet Information Services (IIS) output cache and client caches.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches."},{"pos":[60083,60129],"content":"The number of minutes before the page expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of minutes before the page expires.","pos":[0,46]}]},{"pos":[60540,60709],"content":"Gets or sets the absolute date and time at which to remove cached information from the cache. ExpiresAbsolute is provided for compatibility with earlier versions of ASP.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the absolute date and time at which to remove cached information from the cache. ExpiresAbsolute is provided for compatibility with earlier versions of ASP.","pos":[0,169],"nodes":[{"content":"Gets or sets the absolute date and time at which to remove cached information from the cache.","pos":[0,93]},{"content":"ExpiresAbsolute is provided for compatibility with earlier versions of ASP.","pos":[94,169]}]}]},{"pos":[60721,61102],"content":"The <ph id=\"ph1\">`ExpiresAbsolute`</ph>, &lt;xref:System.Web.HttpResponse.Expires%2A&gt;, and &lt;xref:System.Web.HttpResponse.CacheControl%2A&gt; properties have been deprecated in favor of the methods of the &lt;xref:System.Web.HttpCachePolicy&gt; class available through the &lt;xref:System.Web.HttpResponse.Cache%2A&gt; intrinsic object to control the Internet Information Services (IIS) output cache and client caches.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches."},{"pos":[61231,61275],"content":"The date and time at which the page expires.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date and time at which the page expires.","pos":[0,44]}]},{"pos":[61649,61751],"content":"Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.","pos":[0,102]}]},{"pos":[61763,61939],"content":"When you create a <ph id=\"ph1\">`Stream`</ph> object and set the Filter property to the <ph id=\"ph2\">`Stream`</ph> object, all HTTP output sent by &lt;xref:System.Web.HttpResponse.Write%2A&gt; passes through the filter.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When you create a `Stream` object and set the Filter property to the `Stream` object, all HTTP output sent by <xref:System.Web.HttpResponse.Write%2A> passes through the filter."},{"pos":[63078,63144],"content":"The <xref:System.IO.Stream> object that acts as the output filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.Stream&gt; object that acts as the output filter.","pos":[0,66],"source":"The <xref:System.IO.Stream> object that acts as the output filter."}]},{"pos":[63297,63338],"content":"Filtering is not allowed with the entity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Filtering is not allowed with the entity.","pos":[0,41]}]},{"pos":[63641,63691],"content":"Sends all currently buffered output to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends all currently buffered output to the client.","pos":[0,50]}]},{"pos":[63703,63838],"content":"Forces all currently buffered output to be sent to the client. The Flush method can be called multiple times during request processing.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Forces all currently buffered output to be sent to the client. The Flush method can be called multiple times during request processing.","pos":[0,135],"nodes":[{"content":"Forces all currently buffered output to be sent to the client.","pos":[0,62]},{"content":"The Flush method can be called multiple times during request processing.","pos":[63,135]}]}]},{"pos":[64878,64932],"content":"The cache is flushed after the response has been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cache is flushed after the response has been sent.","pos":[0,54]}]},{"pos":[65260,65325],"content":"Asynchronously sends all currently buffered output to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously sends all currently buffered output to the client.","pos":[0,65]}]},{"pos":[65489,65569],"content":"A <xref:System.Threading.Tasks.Task> that represents the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Threading.Tasks.Task&gt; that represents the asynchronous operation.","pos":[0,80],"source":"A <xref:System.Threading.Tasks.Task> that represents the asynchronous operation."}]},{"pos":[65978,66095],"content":"Gets or sets an <xref:System.Text.Encoding> object that represents the encoding for the current header output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an &lt;xref:System.Text.Encoding&gt; object that represents the encoding for the current header output stream.","pos":[0,117],"source":"Gets or sets an <xref:System.Text.Encoding> object that represents the encoding for the current header output stream."}]},{"pos":[66108,67133],"content":"The HeaderEncoding property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object. The default encoding value is the <xref:System.Text.UTF8Encoding> class.       By changing the type of the HeaderEncoding property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header. Header injection attacks can be avoided, in part, by leaving the HeaderEncoding property of a response to the default setting. An attack against a vulnerable application could echo back entrusted data as part of a response header. If the HeaderEncoding is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The HeaderEncoding property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object. The default encoding value is the <xref:System.Text.UTF8Encoding> class.       By changing the type of the HeaderEncoding property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header. Header injection attacks can be avoided, in part, by leaving the HeaderEncoding property of a response to the default setting. An attack against a vulnerable application could echo back entrusted data as part of a response header. If the HeaderEncoding is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.","pos":[0,1023],"nodes":[{"content":"The HeaderEncoding property gives you the ability to disable or change the &lt;xref:System.Text.Encoding&gt; object on a response header by using the &lt;xref:System.Text.ASCIIEncoding&gt;, &lt;xref:System.Text.UnicodeEncoding&gt;, &lt;xref:System.Text.UTF7Encoding&gt;, or &lt;xref:System.Text.UTF8Encoding&gt; object.","pos":[0,289],"source":"The HeaderEncoding property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object."},{"content":"The default encoding value is the &lt;xref:System.Text.UTF8Encoding&gt; class.","pos":[290,362],"source":" The default encoding value is the <xref:System.Text.UTF8Encoding> class."},{"content":"By changing the type of the HeaderEncoding property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.","pos":[369,552]},{"content":"Header injection attacks can be avoided, in part, by leaving the HeaderEncoding property of a response to the default setting.","pos":[553,679]},{"content":"An attack against a vulnerable application could echo back entrusted data as part of a response header.","pos":[680,783]},{"content":"If the HeaderEncoding is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.","pos":[784,1023]}]}]},{"pos":[67279,67383],"content":"An <xref:System.Text.Encoding> that contains information about the character set for the current header.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Text.Encoding&gt; that contains information about the character set for the current header.","pos":[0,104],"source":"An <xref:System.Text.Encoding> that contains information about the character set for the current header."}]},{"pos":[67552,67635],"content":"The encoding value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The encoding value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[68161,68201],"content":"Gets the collection of response headers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of response headers.","pos":[0,40]}]},{"pos":[68213,68528],"content":"The Headers property is only supported with the [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] integrated pipeline mode and at least the .NET Framework 3.0. When you try to access the Headers property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Headers property is only supported with the <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> integrated pipeline mode and at least the .NET Framework 3.0.","pos":[0,167],"source":"The Headers property is only supported with the [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] integrated pipeline mode and at least the .NET Framework 3.0."},{"content":"When you try to access the Headers property and either of these two conditions is not met, a &lt;xref:System.PlatformNotSupportedException&gt; is thrown.","pos":[168,315],"source":" When you try to access the Headers property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown."}]},{"pos":[68721,68815],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Collections.Specialized.NameValueCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of response headers.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> of response headers."},{"pos":[68993,69150],"content":"The operation requires the integrated pipeline mode in <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> and at least the .NET Framework version 3.0.","needQuote":true,"needEscape":true,"source":"The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0."},{"pos":[69495,69633],"content":"[Supported in the .NET Framework 4.5.2 and later versions]       Gets a value indicating whether the response headers have been written.","needQuote":false,"needEscape":true,"nodes":[{"content":"[Supported in the .NET Framework 4.5.2 and later versions]       Gets a value indicating whether the response headers have been written.","pos":[0,136]}]},{"pos":[69752,69930],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the response headers have been written; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response headers have been written; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[70358,70434],"content":"Gets a value indicating whether the client is still connected to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the client is still connected to the server.","pos":[0,76]}]},{"pos":[70447,71259],"content":"The IsClientConnected property returns `false` when the following conditions are true:      -   The connection to the client was terminated. This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page.      -   The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> method returns `false`. If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> method might be set based on custom criteria. For example, the custom worker request might force a time-out after a period of time.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsClientConnected property returns <ph id=\"ph1\">`false`</ph> when the following conditions are true:      -   The connection to the client was terminated.","pos":[0,140],"source":"The IsClientConnected property returns `false` when the following conditions are true:      -   The connection to the client was terminated."},{"content":"This can occur if the &lt;xref:System.Web.HttpResponse.Close%2A&gt; method was invoked, or if the client stopped execution of the Web page or browsed to another page.","pos":[141,301],"source":" This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page."},{"content":"-   The &lt;xref:System.Web.HttpWorkerRequest&gt; object that is handling the request is <ph id=\"ph1\">`null`</ph> or the &lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName&gt; method returns <ph id=\"ph2\">`false`</ph>.","pos":[307,509],"source":"      -   The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> method returns `false`."},{"content":"If a custom &lt;xref:System.Web.HttpWorkerRequest&gt; object handles the request, then the &lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName&gt; method might be set based on custom criteria.","pos":[510,722],"source":" If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> method might be set based on custom criteria."},{"content":"For example, the custom worker request might force a time-out after a period of time.","pos":[723,808]}]},{"pos":[72050,72223],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the client is currently connected; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client is currently connected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[72689,72779],"content":"Gets a Boolean value indicating whether the client is being transferred to a new location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a Boolean value indicating whether the client is being transferred to a new location.","pos":[0,90]}]},{"pos":[72791,73114],"content":"Use the IsRequestBeingRedirected property with the &lt;xref:System.Web.HttpResponse.RedirectLocation%2A&gt; property to test and determine whether the absolute URI that is transmitted to the client in the HTTP <ph id=\"ph1\">`Location`</ph> header is different than the current URI and what the new intended URI that is being transferred to will be.","needQuote":true,"needEscape":true,"extradata":"MT","source":"Use the IsRequestBeingRedirected property with the <xref:System.Web.HttpResponse.RedirectLocation%2A> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP `Location` header is different than the current URI and what the new intended URI that is being transferred to will be."},{"pos":[73242,73462],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of the location response header is different than the current location; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the location response header is different than the current location; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[73845,73905],"content":"Enables output of text to the outgoing HTTP response stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables output of text to the outgoing HTTP response stream.","pos":[0,60]}]},{"pos":[74809,74887],"content":"A <xref:System.IO.TextWriter> object that enables custom output to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.TextWriter&gt; object that enables custom output to the client.","pos":[0,78],"source":"A <xref:System.IO.TextWriter> object that enables custom output to the client."}]},{"pos":[75282,75338],"content":"Enables binary output to the outgoing HTTP content body.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables binary output to the outgoing HTTP content body.","pos":[0,56]}]},{"pos":[76919,77013],"content":"An IO <xref:System.IO.Stream> representing the raw contents of the outgoing HTTP content body.","needQuote":true,"needEscape":true,"nodes":[{"content":"An IO &lt;xref:System.IO.Stream&gt; representing the raw contents of the outgoing HTTP content body.","pos":[0,94],"source":"An IO <xref:System.IO.Stream> representing the raw contents of the outgoing HTTP content body."}]},{"pos":[77172,77215],"content":"<ph id=\"ph1\">&lt;code&gt;OutputStream&lt;/code&gt;</ph> is not available.","needQuote":true,"needEscape":true,"source":"<code>OutputStream</code> is not available."},{"pos":[77561,77677],"content":"Appends a HTTP <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_PICS-Label\" name=\"PICS-Label\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header to the output stream.","needQuote":true,"needEscape":true,"source":"Appends a HTTP <xref uid=\"langword_csharp_PICS-Label\" name=\"PICS-Label\" href=\"\"></xref> header to the output stream."},{"pos":[77690,78140],"content":"Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling. PICS is essentially a language for creating a ratings system.       Any value can be a PICS label; ASP.NET does not validate the label. The maximum length of the string is 255 characters. For more information about PICS standards and syntax, see the [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.","pos":[0,114]},{"content":"PICS is essentially a language for creating a ratings system.","pos":[115,176]},{"content":"Any value can be a PICS label; ASP.NET does not validate the label.","pos":[183,250]},{"content":"The maximum length of the string is 255 characters.","pos":[251,302]},{"content":"For more information about PICS standards and syntax, see the <bpt id=\"p1\">[</bpt>World Wide Web Consortium<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=37125)</ept> Web site.","pos":[303,448],"source":" For more information about PICS standards and syntax, see the [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web site."}]},{"pos":[78834,78939],"content":"The string to add to the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_PICS-Label\" name=\"PICS-Label\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header.","needQuote":true,"needEscape":true,"source":"The string to add to the <xref uid=\"langword_csharp_PICS-Label\" name=\"PICS-Label\" href=\"\"></xref> header."},{"pos":[79380,79617],"content":"This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).","needQuote":false,"needEscape":true,"nodes":[{"content":"This API is to support applications sending push promises to HTTP 2.0 clients.","pos":[0,78]},{"content":"You can find more details regarding to Http2 server push at <bpt id=\"p1\">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id=\"p1\">](http://http2.github.io/http2-spec/#PushResources)</ept>.","pos":[79,237],"source":" You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources)."}]},{"pos":[79630,79933],"content":"PushPromise is non-deterministic and applications shouldn't have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"PushPromise is non-deterministic and applications shouldn't have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.","pos":[0,303],"nodes":[{"content":"PushPromise is non-deterministic and applications shouldn't have logic that depends on it.","pos":[0,90]},{"content":"Its only purpose is performance advantage in some cases.","pos":[91,147]},{"content":"There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.","pos":[148,258]},{"content":"The expectation is based on fire-and-forget.","pos":[259,303]}]}]},{"pos":[80072,80200],"content":"The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.","pos":[0,128],"nodes":[{"content":"The URL of the push request.","pos":[0,28]},{"content":"It should be the virtual path of the relative resource that the server wants to push to the client.","pos":[29,128]}]}]},{"pos":[80859,81096],"content":"This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).","needQuote":false,"needEscape":true,"nodes":[{"content":"This API is to support applications sending push promises to HTTP 2.0 clients.","pos":[0,78]},{"content":"You can find more details regarding to Http2 server push at <bpt id=\"p1\">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id=\"p1\">](http://http2.github.io/http2-spec/#PushResources)</ept>.","pos":[79,237],"source":" You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources)."}]},{"pos":[81109,81412],"content":"PushPromise is non-deterministic and applications shouldn't have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"PushPromise is non-deterministic and applications shouldn't have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.","pos":[0,303],"nodes":[{"content":"PushPromise is non-deterministic and applications shouldn't have logic that depends on it.","pos":[0,90]},{"content":"Its only purpose is performance advantage in some cases.","pos":[91,147]},{"content":"There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.","pos":[148,258]},{"content":"The expectation is based on fire-and-forget.","pos":[259,303]}]}]},{"pos":[81626,81754],"content":"The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.","pos":[0,128],"nodes":[{"content":"The URL of the push request.","pos":[0,28]},{"content":"It should be the virtual path of the relative resource that the server wants to push to the client.","pos":[29,128]}]}]},{"pos":[81817,81876],"content":"Http request method that would be used by the push request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Http request method that would be used by the push request.","pos":[0,59]}]},{"pos":[81977,82036],"content":"Http request header that would be used by the push request.","needQuote":true,"needEscape":true,"nodes":[{"content":"Http request header that would be used by the push request.","pos":[0,59]}]},{"pos":[82468,82527],"content":"Redirects a request to a new URL and specifies the new URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a request to a new URL and specifies the new URL.","pos":[0,59]}]},{"pos":[82540,84192],"content":"Calling Redirect is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`.       Redirect calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion. This exception has a detrimental effect on Web application performance. Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method. For more information, see the <xref:System.Web.HttpResponse.End%2A> method.      > [!NOTE] >  For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data. To set a property on a mobile control with a path such as \"~/path\", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \"~/path\" before assigning it to the property.       ASP.NET performs the redirection by returning a 302 HTTP status code. An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method. The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client. For more information, see [How to: Redirect Users to Another Page](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Calling Redirect is equivalent to calling &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; with the second parameter set to <ph id=\"ph1\">`true`</ph>.","pos":[0,125],"source":"Calling Redirect is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`."},{"content":"Redirect calls &lt;xref:System.Web.HttpResponse.End%2A&gt; which throws a &lt;xref:System.Threading.ThreadAbortException&gt; exception upon completion.","pos":[132,271],"source":"       Redirect calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion."},{"content":"This exception has a detrimental effect on Web application performance.","pos":[272,343]},{"content":"Therefore, we recommend that instead of this overload you use the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName&gt; overload and pass <ph id=\"ph1\">`false`</ph> for the <ph id=\"ph2\">`endResponse`</ph> parameter, and then call the &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt; method.","pos":[344,648],"source":" Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method."},{"content":"For more information, see the &lt;xref:System.Web.HttpResponse.End%2A&gt; method.","pos":[649,724],"source":" For more information, see the <xref:System.Web.HttpResponse.End%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data.","pos":[730,998],"source":"      > [!NOTE] >  For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data."},{"content":"To set a property on a mobile control with a path such as \"~/path\", resolve the path using &lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt; \"~/path\" before assigning it to the property.","pos":[999,1199],"source":" To set a property on a mobile control with a path such as \"~/path\", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \"~/path\" before assigning it to the property."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[1206,1275]},{"content":"An alternative way to transfer control to another page is the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method.","pos":[1276,1393],"source":" An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method."},{"content":"The &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method is typically more efficient because it does not cause a round trip to the client.","pos":[1394,1534],"source":" The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Redirect Users to Another Page<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1535,1641],"source":" For more information, see [How to: Redirect Users to Another Page](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[84658,84678],"content":"The target location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target location.","pos":[0,20]}]},{"pos":[84833,84898],"content":"A redirection is attempted after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"A redirection is attempted after the HTTP headers have been sent.","pos":[0,65]}]},{"pos":[85318,85432],"content":"Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.","pos":[0,114],"nodes":[{"content":"Redirects a client to a new URL.","pos":[0,32]},{"content":"Specifies the new URL and whether execution of the current page should terminate.","pos":[33,114]}]}]},{"pos":[85445,87249],"content":"An absolute URL (for example, http://www.contoso.com/default.aspx) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.       When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method. If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes. This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended. For more information, see the <xref:System.Web.HttpResponse.End%2A> method.      > [!NOTE] >  For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data. To set a property on a mobile control with a path such as \"~/path\", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \"~/path\" before assigning it to the property.       ASP.NET performs the redirection by returning a 302 HTTP status code. An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method. The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client. For more information, see [How to: Redirect Users to Another Page](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An absolute URL (for example, http://www.contoso.com/default.aspx) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.","pos":[0,198]},{"content":"When you use this method in a page handler to terminate a request for one page and start a new request for another page, set <ph id=\"ph1\">`endResponse`</ph> to <ph id=\"ph2\">`false`</ph> and then call the &lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt; method.","pos":[205,433],"source":"       When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method."},{"content":"If you specify <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`endResponse`</ph> parameter, this method calls the &lt;xref:System.Web.HttpResponse.End%2A&gt; method for the original request, which throws a &lt;xref:System.Threading.ThreadAbortException&gt; exception when it completes.","pos":[434,670],"source":" If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes."},{"content":"This exception has a detrimental effect on Web application performance, which is why passing <ph id=\"ph1\">`false`</ph> for the <ph id=\"ph2\">`endResponse`</ph> parameter is recommended.","pos":[671,819],"source":" This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended."},{"content":"For more information, see the &lt;xref:System.Web.HttpResponse.End%2A&gt; method.","pos":[820,895],"source":" For more information, see the <xref:System.Web.HttpResponse.End%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data.","pos":[901,1150],"source":"      > [!NOTE] >  For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data."},{"content":"To set a property on a mobile control with a path such as \"~/path\", resolve the path using &lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt; \"~/path\" before assigning it to the property.","pos":[1151,1351],"source":" To set a property on a mobile control with a path such as \"~/path\", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \"~/path\" before assigning it to the property."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[1358,1427]},{"content":"An alternative way to transfer control to another page is the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method.","pos":[1428,1545],"source":" An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method."},{"content":"The &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method is typically more efficient because it does not cause a round trip to the client.","pos":[1546,1686],"source":" The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Redirect Users to Another Page<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1687,1793],"source":" For more information, see [How to: Redirect Users to Another Page](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[88141,88168],"content":"The location of the target.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location of the target.","pos":[0,27]}]},{"pos":[88237,88302],"content":"Indicates whether execution of the current page should terminate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether execution of the current page should terminate.","pos":[0,65]}]},{"pos":[88465,88546],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[88641,88687],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> contains a newline character.","needQuote":true,"needEscape":true,"source":"<code>url</code> contains a newline character."},{"pos":[88782,88847],"content":"A redirection is attempted after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"A redirection is attempted after the HTTP headers have been sent.","pos":[0,65]}]},{"pos":[88948,88993],"content":"The page request is the result of a callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"The page request is the result of a callback.","pos":[0,45]}]},{"pos":[89347,89458],"content":"Gets or sets the value of the HTTP <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header.","needQuote":true,"needEscape":true,"source":"Gets or sets the value of the HTTP <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header."},{"pos":[89944,90083],"content":"The absolute URI that is transmitted to the client in the HTTP <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> header.","needQuote":true,"needEscape":true,"source":"The absolute URI that is transmitted to the client in the HTTP <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header."},{"pos":[90246,90289],"content":"The HTTP headers have already been written.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP headers have already been written.","pos":[0,43]}]},{"pos":[90700,90777],"content":"Performs a permanent redirection from the requested URL to the specified URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from the requested URL to the specified URL.","pos":[0,77]}]},{"pos":[90790,91158],"content":"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.       Calling the RedirectPermanent method overload terminates the response.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.       Calling the RedirectPermanent method overload terminates the response.","pos":[0,366],"nodes":[{"content":"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.","pos":[0,134]},{"content":"A 301 HTTP status code is a standard code in an HTTP response.","pos":[135,197]},{"content":"It indicates that a permanent redirection exists, and it provides the redirection location.","pos":[198,289]},{"content":"Calling the RedirectPermanent method overload terminates the response.","pos":[296,366]}]}]},{"pos":[91302,91342],"content":"The location to redirect the request to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location to redirect the request to.","pos":[0,40]}]},{"pos":[91514,91595],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[91690,91743],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> includes a newline character (<ph id=\"ph2\">` `</ph>).","needQuote":true,"needEscape":true,"source":"<code>url</code> includes a newline character (` `)."},{"pos":[92208,92335],"content":"Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.","pos":[0,127]}]},{"pos":[92347,92784],"content":"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.","pos":[0,437],"nodes":[{"content":"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.","pos":[0,134]},{"content":"This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.","pos":[135,282]},{"content":"A 301 HTTP status code is a standard code in an HTTP response.","pos":[283,345]},{"content":"It indicates that a permanent redirection exists, and it provides the redirection location.","pos":[346,437]}]}]},{"pos":[92945,92985],"content":"The location to redirect the request to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location to redirect the request to.","pos":[0,40]}]},{"pos":[93054,93294],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to terminate the response; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to terminate the response; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,161],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to terminate the response; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,240],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[93466,93547],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[93642,93695],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> includes a newline character (<ph id=\"ph2\">` `</ph>).","needQuote":true,"needEscape":true,"source":"<code>url</code> includes a newline character (` `)."},{"pos":[94096,94161],"content":"Redirects a request to a new URL by using route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a request to a new URL by using route parameter values.","pos":[0,65]}]},{"pos":[94174,94870],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.       ASP.NET performs the redirection by returning a 302 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method converts the object that is passed in <ph id=\"ph1\">`routeValues`</ph> to a &lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt; object by using the &lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt; constructor.","pos":[211,483],"source":"       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor."},{"content":"The &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method is then called to determine the URL.","pos":[484,616],"source":" The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[623,692]}]},{"pos":[95400,95427],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[95605,95660],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[95755,95818],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[96219,96274],"content":"Redirects a request to a new URL by using a route name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a request to a new URL by using a route name.","pos":[0,55]}]},{"pos":[96287,96758],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method.       ASP.NET performs the redirection by returning a 302 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method converts the route name that is passed in <ph id=\"ph1\">`routeName`</ph> to a URL by using the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method.","pos":[211,391],"source":"       This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[398,467]}]},{"pos":[97156,97178],"content":"The name of the route.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the route.","pos":[0,22]}]},{"pos":[97356,97411],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[97506,97569],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[98064,98129],"content":"Redirects a request to a new URL by using route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a request to a new URL by using route parameter values.","pos":[0,65]}]},{"pos":[98142,98568],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL.       ASP.NET performs the redirection by returning a 302 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method calls the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method to determine the URL.","pos":[211,346],"source":"       This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[353,422]}]},{"pos":[99183,99210],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[99388,99443],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[99538,99601],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[100051,100133],"content":"Redirects a request to a new URL by using route parameter values and a route name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a request to a new URL by using route parameter values and a route name.","pos":[0,82]}]},{"pos":[100146,100842],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.       ASP.NET performs the redirection by returning a 302 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method converts the object that is passed in <ph id=\"ph1\">`routeValues`</ph> to a &lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt; object by using the &lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt; constructor.","pos":[211,483],"source":"       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor."},{"content":"The &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method is then called to determine the URL.","pos":[484,616],"source":" The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[623,692]}]},{"pos":[101440,101462],"content":"The name of the route.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the route.","pos":[0,22]}]},{"pos":[101530,101557],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[101735,101790],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[101885,101948],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[102492,102574],"content":"Redirects a request to a new URL by using route parameter values and a route name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirects a request to a new URL by using route parameter values and a route name.","pos":[0,82]}]},{"pos":[102587,103005],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is called to determine the URL.       ASP.NET performs the redirection by returning a 302 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"The &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method is called to determine the URL.","pos":[211,338],"source":"       The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is called to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 302 HTTP status code.","pos":[345,414]}]},{"pos":[103662,103684],"content":"The name of the route.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the route.","pos":[0,22]}]},{"pos":[103778,103805],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[103983,104038],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[104133,104196],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[104642,104741],"content":"Performs a permanent redirection from a requested URL to a new URL by using route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from a requested URL to a new URL by using route parameter values.","pos":[0,99]}]},{"pos":[104754,105459],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.       ASP.NET performs the redirection by returning a 301 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,213],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method converts the object that is passed in <ph id=\"ph1\">`routeValues`</ph> to a &lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt; object by using the &lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt; constructor.","pos":[220,492],"source":"       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor."},{"content":"The &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method is then called to determine the URL.","pos":[493,625],"source":" The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 301 HTTP status code.","pos":[632,701]}]},{"pos":[106016,106043],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[106230,106285],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[106380,106443],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[106889,106978],"content":"Performs a permanent redirection from a requested URL to a new URL by using a route name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from a requested URL to a new URL by using a route name.","pos":[0,89]}]},{"pos":[106991,107471],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method.       ASP.NET performs the redirection by returning a 301 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,213],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method converts the route name that is passed in <ph id=\"ph1\">`routeName`</ph> to a URL by using the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method.","pos":[220,400],"source":"       This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method."},{"content":"ASP.NET performs the redirection by returning a 301 HTTP status code.","pos":[407,476]}]},{"pos":[107896,107918],"content":"The name of the route.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the route.","pos":[0,22]}]},{"pos":[108105,108160],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[108255,108318],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[108858,108957],"content":"Performs a permanent redirection from a requested URL to a new URL by using route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from a requested URL to a new URL by using route parameter values.","pos":[0,99]}]},{"pos":[108970,109396],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL.       ASP.NET performs the redirection by returning a 301 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method calls the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method to determine the URL.","pos":[211,346],"source":"       This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 301 HTTP status code.","pos":[353,422]}]},{"pos":[110037,110064],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[110251,110306],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[110401,110464],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[110959,111119],"content":"Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.","pos":[0,160]}]},{"pos":[111132,111804],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`.       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.       ASP.NET performs the redirection by returning a 301 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.RedirectPermanent%2A&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,180],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`."},{"content":"This method converts the object that is passed in <ph id=\"ph1\">`routeValues`</ph> to a &lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt; object by using the &lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt; constructor.","pos":[187,459],"source":"       This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor."},{"content":"The &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method is then called to determine the URL.","pos":[460,592],"source":" The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 301 HTTP status code.","pos":[599,668]}]},{"pos":[112429,112451],"content":"The name of the route.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the route.","pos":[0,22]}]},{"pos":[112519,112546],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[112733,112788],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[112883,112946],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[113535,113651],"content":"Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.","pos":[0,116]}]},{"pos":[113664,114090],"content":"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.       This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL.       ASP.NET performs the redirection by returning a 301 HTTP status code.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is provided for coding convenience.","pos":[0,47]},{"content":"It is equivalent to calling the &lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt; method with the second parameter set to <ph id=\"ph1\">`false`</ph>.","pos":[48,204],"source":" It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`."},{"content":"This method calls the &lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt; method to determine the URL.","pos":[211,346],"source":"       This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL."},{"content":"ASP.NET performs the redirection by returning a 301 HTTP status code.","pos":[353,422]}]},{"pos":[114773,114795],"content":"The name of the route.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the route.","pos":[0,22]}]},{"pos":[114889,114916],"content":"The route parameter values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The route parameter values.","pos":[0,27]}]},{"pos":[115103,115158],"content":"No route corresponds to the specified route parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"No route corresponds to the specified route parameters.","pos":[0,55]}]},{"pos":[115253,115316],"content":"Redirection was attempted after the HTTP headers had been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Redirection was attempted after the HTTP headers had been sent.","pos":[0,63]}]},{"pos":[115747,115869],"content":"Removes from the cache all cached items that are associated with the default output-cache provider. This method is static.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes from the cache all cached items that are associated with the default output-cache provider. This method is static.","pos":[0,122],"nodes":[{"content":"Removes from the cache all cached items that are associated with the default output-cache provider.","pos":[0,99]},{"content":"This method is static.","pos":[100,122]}]}]},{"pos":[115881,116197],"content":"Call this method to remove output-cache items that are associated with the default output-cache provider. Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call this method to remove output-cache items that are associated with the default output-cache provider. Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.","pos":[0,316],"nodes":[{"content":"Call this method to remove output-cache items that are associated with the default output-cache provider.","pos":[0,105]},{"content":"Call the &lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A&gt; method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.","pos":[106,316],"source":" Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file."}]}]},{"pos":[116353,116424],"content":"The virtual absolute path to the items that are removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual absolute path to the items that are removed from the cache.","pos":[0,71]}]},{"pos":[116600,116682],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[116777,116827],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is not an absolute virtual path.","needQuote":true,"needEscape":true,"source":"<code>path</code> is not an absolute virtual path."},{"pos":[117307,117425],"content":"Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.","pos":[0,118]}]},{"pos":[117437,117783],"content":"Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file. To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file. To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.","pos":[0,346],"nodes":[{"content":"Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.","pos":[0,159]},{"content":"To remove output-cache items that are associated with the default output-cache provider, call the &lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29&gt; method overload.","pos":[160,346],"source":" To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload."}]}]},{"pos":[117960,118031],"content":"The virtual absolute path of the items that are removed from the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual absolute path of the items that are removed from the cache.","pos":[0,71]}]},{"pos":[118100,118207],"content":"The provider that is used to remove the output-cache artifacts that are associated with the specified path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider that is used to remove the output-cache artifacts that are associated with the specified path.","pos":[0,107]}]},{"pos":[118383,118409],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is null.","needQuote":true,"needEscape":true,"source":"<code>path</code> is null."},{"pos":[118504,118541],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an invalid path.","needQuote":true,"needEscape":true,"source":"<code>path</code> is an invalid path."},{"pos":[118940,118992],"content":"Updates an existing cookie in the cookie collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Updates an existing cookie in the cookie collection.","pos":[0,52]}]},{"pos":[119489,119532],"content":"The cookie in the collection to be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cookie in the collection to be updated.","pos":[0,43]}]},{"pos":[119688,119749],"content":"Attempted to set the cookie after the HTTP headers were sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempted to set the cookie after the HTTP headers were sent.","pos":[0,61]}]},{"pos":[120053,120163],"content":"Sets the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Status\" name=\"Status\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> line that is returned to the client.","needQuote":true,"needEscape":true,"source":"Sets the <xref uid=\"langword_csharp_Status\" name=\"Status\" href=\"\"></xref> line that is returned to the client."},{"pos":[120175,120413],"content":"Status has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Status has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.","pos":[0,238],"nodes":[{"content":"Status has been deprecated in favor of &lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt; and is provided only for compatibility with earlier versions of ASP.","pos":[0,159],"source":"Status has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP."},{"content":"With ASP.NET, use &lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt; instead.","pos":[160,238],"source":" With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead."}]}]},{"pos":[120529,120670],"content":"Setting the status code causes a string describing the status of the HTTP output to be returned to the client. The default value is 200 (OK).","needQuote":true,"needEscape":true,"nodes":[{"content":"Setting the status code causes a string describing the status of the HTTP output to be returned to the client. The default value is 200 (OK).","pos":[0,141],"nodes":[{"content":"Setting the status code causes a string describing the status of the HTTP output to be returned to the client.","pos":[0,110]},{"content":"The default value is 200 (OK).","pos":[111,141]}]}]},{"pos":[120823,120863],"content":"Status is set to an invalid status code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Status is set to an invalid status code.","pos":[0,40]}]},{"pos":[121187,121258],"content":"Gets or sets the HTTP status code of the output returned to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP status code of the output returned to the client.","pos":[0,71]}]},{"pos":[121776,121992],"content":"An Integer representing the status of the HTTP output returned to the client. The default value is 200 (OK). For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).","needQuote":true,"needEscape":true,"nodes":[{"content":"An Integer representing the status of the HTTP output returned to the client.","pos":[0,77]},{"content":"The default value is 200 (OK).","pos":[78,108]},{"content":"For a listing of valid status codes, see <bpt id=\"p1\">[</bpt>Http Status Codes<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.","pos":[109,216],"source":" For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157)."}]},{"pos":[122149,122205],"content":"StatusCode is set after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"StatusCode is set after the HTTP headers have been sent.","pos":[0,56]}]},{"pos":[122564,122637],"content":"Gets or sets the HTTP status string of the output returned to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the HTTP status string of the output returned to the client.","pos":[0,73]}]},{"pos":[123180,123392],"content":"A string that describes the status of the HTTP output returned to the client. The default value is \"OK\". For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that describes the status of the HTTP output returned to the client.","pos":[0,77]},{"content":"The default value is \"OK\".","pos":[78,104]},{"content":"For a listing of valid status codes, see <bpt id=\"p1\">[</bpt>Http Status Codes<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.","pos":[105,212],"source":" For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157)."}]},{"pos":[123556,123632],"content":"<ph id=\"ph1\">&lt;code&gt;StatusDescription&lt;/code&gt;</ph> is set after the HTTP headers have been sent.","needQuote":true,"needEscape":true,"source":"<code>StatusDescription</code> is set after the HTTP headers have been sent."},{"pos":[123747,123796],"content":"The selected value has a length greater than 512.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected value has a length greater than 512.","pos":[0,49]}]},{"pos":[124135,124199],"content":"Gets or sets a value qualifying the status code of the response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value qualifying the status code of the response.","pos":[0,64]}]},{"pos":[124211,124838],"content":"The SubStatusCode property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0. When you set the SubStatusCode property, the status is logged on [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] if failed-request tracing is configured. Independent of whether tracing is configured, the code is never sent as part of the final response to the request. For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The SubStatusCode property is only supported with the integrated pipeline mode in <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> and at least the .NET Framework version 3.0.","pos":[0,184],"source":"The SubStatusCode property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0."},{"content":"When you set the SubStatusCode property, the status is logged on <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> if failed-request tracing is configured.","pos":[185,348],"source":" When you set the SubStatusCode property, the status is logged on [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] if failed-request tracing is configured."},{"content":"Independent of whether tracing is configured, the code is never sent as part of the final response to the request.","pos":[349,463]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0<ept id=\"p1\">](http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1)</ept>.","pos":[464,627],"source":" For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)."}]},{"pos":[125656,125767],"content":"An integer value that represents the <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> sub status code.","needQuote":true,"needEscape":true,"source":"An integer value that represents the [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] sub status code."},{"pos":[125951,126108],"content":"The operation requires the integrated pipeline mode in <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> and at least the .NET Framework version 3.0.","needQuote":true,"needEscape":true,"source":"The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0."},{"pos":[126203,126264],"content":"The status code is set after all HTTP headers have been sent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The status code is set after all HTTP headers have been sent.","pos":[0,61]}]},{"pos":[126628,126718],"content":"Gets a value that indicates whether the connection supports asynchronous flush operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the connection supports asynchronous flush operations.","pos":[0,90]}]},{"pos":[126730,126861],"content":"This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the value of the &lt;xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName&gt; property.","pos":[0,131],"source":"This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName> property."}]},{"pos":[126983,127176],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the connection supports asynchronous flush operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the connection supports asynchronous flush operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[127598,127673],"content":"Gets or sets a value indicating whether to send HTTP content to the client.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether to send HTTP content to the client.","pos":[0,75]}]},{"pos":[128266,128421],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to suppress output; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to suppress output; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[128931,129124],"content":"[Supported in the .NET Framework 4.5.2 and later versions]       Gets or sets a value indicating whether to suppress the default <ph id=\"ph1\">`Cache Control: private`</ph> header for the current HTTP response.","needQuote":false,"needEscape":true,"source":"[Supported in the .NET Framework 4.5.2 and later versions]       Gets or sets a value indicating whether to suppress the default `Cache Control: private` header for the current HTTP response."},{"pos":[129138,130111],"content":"By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response. This property allows suppressing this default response header on a per-request basis. The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee).       Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default. This treatment can lead to the inadvertent caching of sensitive information. See [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) for more information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, ASP.NET sends a <ph id=\"ph1\">`Cache-Control: private`</ph> response header unless an explicit cache policy has been specified for this response.","pos":[0,138],"source":"By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response."},{"content":"This property allows suppressing this default response header on a per-request basis.","pos":[139,224]},{"content":"The header can still be suppressed for the entire application by setting &lt;xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A&gt; in <bpt id=\"p1\">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> or <bpt id=\"p2\">[</bpt>outputCache Element for caching (ASP.NET Settings Schema)<ept id=\"p2\">](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>.","pos":[225,629],"source":" The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee)."},{"content":"Use caution when suppressing the default <ph id=\"ph1\">`Cache-Control: private`</ph> header, as proxies and other intermediaries may treat responses without this header as cacheable by default.","pos":[636,810],"source":"       Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default."},{"content":"This treatment can lead to the inadvertent caching of sensitive information.","pos":[811,887]},{"content":"See <bpt id=\"p1\">[</bpt>RFC 2616, Sec. 13.4<ept id=\"p1\">](http://tools.ietf.org/html/rfc2616)</ept> for more information.","pos":[888,971],"source":" See [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) for more information."}]},{"pos":[130255,130477],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to suppress the default <ph id=\"ph1\">`Cache Control: private`</ph> header for the current HTTP response; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to suppress the default `Cache Control: private` header for the current HTTP response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[131015,131131],"content":"Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.","pos":[0,116]}]},{"pos":[131143,131544],"content":"By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page. This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request. This property provides a way to suppress the redirect behavior and send the original status code to the client.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page. This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request. This property provides a way to suppress the redirect behavior and send the original status code to the client.","pos":[0,401],"nodes":[{"content":"By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.","pos":[0,110]},{"content":"This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.","pos":[111,289]},{"content":"This property provides a way to suppress the redirect behavior and send the original status code to the client.","pos":[290,401]}]}]},{"pos":[131688,131881],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if forms authentication redirection should be suppressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if forms authentication redirection should be suppressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[132357,132458],"content":"Writes the specified file directly to an HTTP response output stream, without buffering it in memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the specified file directly to an HTTP response output stream, without buffering it in memory.","pos":[0,101]}]},{"pos":[132606,132655],"content":"The name of the file to write to the HTTP output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to write to the HTTP output.","pos":[0,49]}]},{"pos":[132822,132921],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filename</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>"},{"pos":[133395,133505],"content":"Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.","pos":[0,110]}]},{"pos":[133517,133617],"content":"If you specify 0 as the <ph id=\"ph1\">`offset`</ph> parameter and -1 as the <ph id=\"ph2\">`length`</ph> parameter, the whole file is sent.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If you specify 0 as the `offset` parameter and -1 as the `length` parameter, the whole file is sent."},{"pos":[133791,133840],"content":"The name of the file to write to the HTTP output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to write to the HTTP output.","pos":[0,49]}]},{"pos":[133902,133964],"content":"The position in the file to begin to write to the HTTP output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position in the file to begin to write to the HTTP output.","pos":[0,62]}]},{"pos":[134026,134064],"content":"The number of bytes to be transmitted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to be transmitted.","pos":[0,38]}]},{"pos":[135525,135654],"content":"Gets or sets a value that specifies whether <ph id=\"ph1\">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> custom errors are disabled.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies whether [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] custom errors are disabled."},{"pos":[135666,135954],"content":"The TrySkipIisCustomErrors property is used only when your application is hosted in IIS 7.0. When running in Classic mode in IIS 7.0 the TrySkipIisCustomErrors property default value is `true`. When running in Integrated mode, the TrySkipIisCustomErrors property default value is `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TrySkipIisCustomErrors property is used only when your application is hosted in IIS 7.0.","pos":[0,92]},{"content":"When running in Classic mode in IIS 7.0 the TrySkipIisCustomErrors property default value is <ph id=\"ph1\">`true`</ph>.","pos":[93,193],"source":" When running in Classic mode in IIS 7.0 the TrySkipIisCustomErrors property default value is `true`."},{"content":"When running in Integrated mode, the TrySkipIisCustomErrors property default value is <ph id=\"ph1\">`false`</ph>.","pos":[194,288],"source":" When running in Integrated mode, the TrySkipIisCustomErrors property default value is `false`."}]},{"pos":[136085,136250],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to disable IIS custom errors; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to disable IIS custom errors; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[136668,136721],"content":"Writes a character to an HTTP response output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes a character to an HTTP response output stream.","pos":[0,53]}]},{"pos":[137317,137366],"content":"The character to write to the HTTP output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character to write to the HTTP output stream.","pos":[0,49]}]},{"pos":[137777,137835],"content":"Writes an <xref:System.Object> to an HTTP response stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes an &lt;xref:System.Object&gt; to an HTTP response stream.","pos":[0,58],"source":"Writes an <xref:System.Object> to an HTTP response stream."}]},{"pos":[137966,138026],"content":"The <xref:System.Object> to write to the HTTP output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to write to the HTTP output stream.","pos":[0,60],"source":"The <xref:System.Object> to write to the HTTP output stream."}]},{"pos":[138437,138487],"content":"Writes a string to an HTTP response output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes a string to an HTTP response output stream.","pos":[0,50]}]},{"pos":[138500,139924],"content":"Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client. Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source. This security risk is referred to as a cross-site scripting attack. You should always validate data that is received from a client when it will be transmitted from your site to client browsers.       Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing. This technique is useful for data that was not validated when it was received.       When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.       For more information about cross-site scripting attacks, see article Q252985, \"How to Prevent Cross-Site Scripting Security Issues\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.","pos":[0,198]},{"content":"Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.","pos":[199,356]},{"content":"This security risk is referred to as a cross-site scripting attack.","pos":[357,424]},{"content":"You should always validate data that is received from a client when it will be transmitted from your site to client browsers.","pos":[425,550]},{"content":"Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as &lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt; or &lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt; to prevent malicious script from executing.","pos":[557,827],"source":"       Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing."},{"content":"This technique is useful for data that was not validated when it was received.","pos":[828,906]},{"content":"When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.","pos":[913,1188]},{"content":"For more information about cross-site scripting attacks, see article Q252985, \"How to Prevent Cross-Site Scripting Security Issues\" on the <bpt id=\"p1\">[</bpt>Microsoft Knowledge Base<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=37115)</ept> Web site.","pos":[1195,1416],"source":"       For more information about cross-site scripting attacks, see article Q252985, \"How to Prevent Cross-Site Scripting Security Issues\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) Web site."}]},{"pos":[140537,140583],"content":"The string to write to the HTTP output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to write to the HTTP output stream.","pos":[0,46]}]},{"pos":[141082,141146],"content":"Writes an array of characters to an HTTP response output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes an array of characters to an HTTP response output stream.","pos":[0,64]}]},{"pos":[141778,141807],"content":"The character array to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character array to write.","pos":[0,29]}]},{"pos":[141868,141925],"content":"The position in the character array where writing starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position in the character array where writing starts.","pos":[0,57]}]},{"pos":[141986,142042],"content":"The number of characters to write, beginning at <ph id=\"ph1\">`index`</ph>.","needQuote":true,"needEscape":true,"source":"The number of characters to write, beginning at `index`."},{"pos":[142473,142574],"content":"Writes the contents of the specified file directly to an HTTP response output stream as a file block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the contents of the specified file directly to an HTTP response output stream as a file block.","pos":[0,101]}]},{"pos":[142587,142974],"content":"When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this method is used with large files, calling the method might throw an exception.","pos":[0,87]},{"content":"The size of the file that can be used with this method depends on the hardware configuration of the Web server.","pos":[88,199]},{"content":"For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the <bpt id=\"p1\">[</bpt>Microsoft Knowledge Base<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.","pos":[200,387],"source":" For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site."}]},{"pos":[143545,143594],"content":"The name of the file to write to the HTTP output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to write to the HTTP output.","pos":[0,49]}]},{"pos":[143758,143858],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filename</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[144283,144386],"content":"Writes the contents of the specified file directly to an HTTP response output stream as a memory block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the contents of the specified file directly to an HTTP response output stream as a memory block.","pos":[0,103]}]},{"pos":[144399,144786],"content":"When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this method is used with large files, calling the method might throw an exception.","pos":[0,87]},{"content":"The size of the file that can be used with this method depends on the hardware configuration of the Web server.","pos":[88,199]},{"content":"For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the <bpt id=\"p1\">[</bpt>Microsoft Knowledge Base<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.","pos":[200,387],"source":" For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site."}]},{"pos":[145256,145306],"content":"The name of the file to write into a memory block.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to write into a memory block.","pos":[0,50]}]},{"pos":[145378,145441],"content":"Indicates whether the file will be written into a memory block.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the file will be written into a memory block.","pos":[0,63]}]},{"pos":[145605,145705],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filename</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[146164,146233],"content":"Writes the specified file directly to an HTTP response output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the specified file directly to an HTTP response output stream.","pos":[0,69]}]},{"pos":[146246,146633],"content":"When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this method is used with large files, calling the method might throw an exception.","pos":[0,87]},{"content":"The size of the file that can be used with this method depends on the hardware configuration of the Web server.","pos":[88,199]},{"content":"For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the <bpt id=\"p1\">[</bpt>Microsoft Knowledge Base<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.","pos":[200,387],"source":" For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site."}]},{"pos":[147234,147297],"content":"The file handle of the file to write to the HTTP output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The file handle of the file to write to the HTTP output stream.","pos":[0,63]}]},{"pos":[147359,147414],"content":"The byte position in the file where writing will start.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte position in the file where writing will start.","pos":[0,55]}]},{"pos":[147474,147524],"content":"The number of bytes to write to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to write to the output stream.","pos":[0,50]}]},{"pos":[147688,147777],"content":"<ph id=\"ph1\">&lt;code&gt;fileHandler&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>fileHandler</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[148468,148537],"content":"Writes the specified file directly to an HTTP response output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes the specified file directly to an HTTP response output stream.","pos":[0,69]}]},{"pos":[148550,148937],"content":"When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When this method is used with large files, calling the method might throw an exception.","pos":[0,87]},{"content":"The size of the file that can be used with this method depends on the hardware configuration of the Web server.","pos":[88,199]},{"content":"For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the <bpt id=\"p1\">[</bpt>Microsoft Knowledge Base<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.","pos":[200,387],"source":" For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site."}]},{"pos":[149532,149588],"content":"The name of the file to write to the HTTP output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to write to the HTTP output stream.","pos":[0,56]}]},{"pos":[149650,149705],"content":"The byte position in the file where writing will start.","needQuote":true,"needEscape":true,"nodes":[{"content":"The byte position in the file where writing will start.","pos":[0,55]}]},{"pos":[149765,149815],"content":"The number of bytes to write to the output stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to write to the output stream.","pos":[0,50]}]},{"pos":[150211,150311],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filename</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[150860,151018],"content":"Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.","pos":[0,158]}]},{"pos":[151031,152370],"content":"You can use the WriteSubstitution method for post-cache substitution in your output-cached pages. By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache. To initiate the replacement, call the WriteSubstitution method, passing it the callback method, which must be thread safe and can be either of the following:      -   A static method on the container page or user control.      -   A static or instance method on another arbitrary object.       On the first request to the page, the WriteSubstitution calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output. Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests. Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.      > [!NOTE] >  Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level. This is also known as fragment caching. For more information, see [Caching Portions of an ASP.NET Page](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the WriteSubstitution method for post-cache substitution in your output-cached pages.","pos":[0,97]},{"content":"By passing a &lt;xref:System.Web.HttpContext&gt; object to a callback method with a prescribed &lt;xref:System.Web.HttpResponseSubstitutionCallback&gt; signature, you can replace output cached content at any given location in the page cache.","pos":[98,327],"source":" By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache."},{"content":"To initiate the replacement, call the WriteSubstitution method, passing it the callback method, which must be thread safe and can be either of the following:      -   A static method on the container page or user control.","pos":[328,549]},{"content":"-   A static or instance method on another arbitrary object.","pos":[555,615]},{"content":"On the first request to the page, the WriteSubstitution calls the &lt;xref:System.Web.HttpResponseSubstitutionCallback&gt; delegate to produce the output.","pos":[622,770],"source":"       On the first request to the page, the WriteSubstitution calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output."},{"content":"Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.","pos":[771,878]},{"content":"Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.","pos":[879,1042]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.","pos":[1048,1186],"source":"      > [!NOTE] >  Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level."},{"content":"This is also known as fragment caching.","pos":[1187,1226]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Caching Portions of an ASP.NET Page<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1227,1330],"source":" For more information, see [Caching Portions of an ASP.NET Page](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[152591,152641],"content":"The method, user control, or object to substitute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method, user control, or object to substitute.","pos":[0,50]}]},{"pos":[152805,152909],"content":"The target of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is of type <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.Control\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The target of the <code>callback</code> parameter is of type <xref href=\"System.Web.UI.Control\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpResponse\n  id: HttpResponse\n  children:\n  - System.Web.HttpResponse.#ctor(System.IO.TextWriter)\n  - System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])\n  - System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)\n  - System.Web.HttpResponse.AddCacheItemDependencies(System.String[])\n  - System.Web.HttpResponse.AddCacheItemDependency(System.String)\n  - System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)\n  - System.Web.HttpResponse.AddFileDependencies(System.String[])\n  - System.Web.HttpResponse.AddFileDependency(System.String)\n  - System.Web.HttpResponse.AddHeader(System.String,System.String)\n  - System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})\n  - System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)\n  - System.Web.HttpResponse.AppendHeader(System.String,System.String)\n  - System.Web.HttpResponse.AppendToLog(System.String)\n  - System.Web.HttpResponse.ApplyAppPathModifier(System.String)\n  - System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)\n  - System.Web.HttpResponse.BinaryWrite(System.Byte[])\n  - System.Web.HttpResponse.Buffer\n  - System.Web.HttpResponse.BufferOutput\n  - System.Web.HttpResponse.Cache\n  - System.Web.HttpResponse.CacheControl\n  - System.Web.HttpResponse.Charset\n  - System.Web.HttpResponse.Clear\n  - System.Web.HttpResponse.ClearContent\n  - System.Web.HttpResponse.ClearHeaders\n  - System.Web.HttpResponse.ClientDisconnectedToken\n  - System.Web.HttpResponse.Close\n  - System.Web.HttpResponse.ContentEncoding\n  - System.Web.HttpResponse.ContentType\n  - System.Web.HttpResponse.Cookies\n  - System.Web.HttpResponse.DisableKernelCache\n  - System.Web.HttpResponse.DisableUserCache\n  - System.Web.HttpResponse.End\n  - System.Web.HttpResponse.EndFlush(System.IAsyncResult)\n  - System.Web.HttpResponse.Expires\n  - System.Web.HttpResponse.ExpiresAbsolute\n  - System.Web.HttpResponse.Filter\n  - System.Web.HttpResponse.Flush\n  - System.Web.HttpResponse.FlushAsync\n  - System.Web.HttpResponse.HeaderEncoding\n  - System.Web.HttpResponse.Headers\n  - System.Web.HttpResponse.HeadersWritten\n  - System.Web.HttpResponse.IsClientConnected\n  - System.Web.HttpResponse.IsRequestBeingRedirected\n  - System.Web.HttpResponse.Output\n  - System.Web.HttpResponse.OutputStream\n  - System.Web.HttpResponse.Pics(System.String)\n  - System.Web.HttpResponse.PushPromise(System.String)\n  - System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.HttpResponse.Redirect(System.String)\n  - System.Web.HttpResponse.Redirect(System.String,System.Boolean)\n  - System.Web.HttpResponse.RedirectLocation\n  - System.Web.HttpResponse.RedirectPermanent(System.String)\n  - System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)\n  - System.Web.HttpResponse.RedirectToRoute(System.Object)\n  - System.Web.HttpResponse.RedirectToRoute(System.String)\n  - System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)\n  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)\n  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)\n  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String)\n  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)\n  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)\n  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String)\n  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)\n  - System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)\n  - System.Web.HttpResponse.Status\n  - System.Web.HttpResponse.StatusCode\n  - System.Web.HttpResponse.StatusDescription\n  - System.Web.HttpResponse.SubStatusCode\n  - System.Web.HttpResponse.SupportsAsyncFlush\n  - System.Web.HttpResponse.SuppressContent\n  - System.Web.HttpResponse.SuppressDefaultCacheControlHeader\n  - System.Web.HttpResponse.SuppressFormsAuthenticationRedirect\n  - System.Web.HttpResponse.TransmitFile(System.String)\n  - System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)\n  - System.Web.HttpResponse.TrySkipIisCustomErrors\n  - System.Web.HttpResponse.Write(System.Char)\n  - System.Web.HttpResponse.Write(System.Object)\n  - System.Web.HttpResponse.Write(System.String)\n  - System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)\n  - System.Web.HttpResponse.WriteFile(System.String)\n  - System.Web.HttpResponse.WriteFile(System.String,System.Boolean)\n  - System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)\n  - System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)\n  - System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)\n  langs:\n  - csharp\n  name: HttpResponse\n  nameWithType: HttpResponse\n  fullName: System.Web.HttpResponse\n  type: Class\n  summary: Encapsulates HTTP-response information from an ASP.NET operation.\n  remarks: \"The methods and properties of the HttpResponse class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.  \\n  \\n The following methods of the HttpResponse class are supported only in post back scenarios and not in asynchronous post back scenarios:  \\n  \\n-   <xref:System.Web.HttpResponse.BinaryWrite%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.Clear%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.ClearContent%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.ClearHeaders%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.Close%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.End%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.Flush%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.TransmitFile%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.Write%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.WriteFile%2A>  \\n  \\n-   <xref:System.Web.HttpResponse.WriteSubstitution%2A>  \\n  \\n Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back. For more information, see [UpdatePanel Control Overview](~/add/includes/ajax-current-ext-md.md) and [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example draws three overlapping rectangles when the page is requested. The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image. The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response. Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client. Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object. The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.  \\n  \\n When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG. The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects. Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.  \\n  \\n> [!NOTE]\\n>  In code, the HttpResponse object is referred to by the keyword `Response`. For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=fullName> method. The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of HttpResponse.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/t-system.web.httpresponse_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.httpresponse_1.aspx)]\"\n  syntax:\n    content: public sealed class HttpResponse\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: HttpResponse(TextWriter)\n  nameWithType: HttpResponse.HttpResponse(TextWriter)\n  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.HttpResponse\"></xref> class.\n  remarks: \"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.  \\n  \\n The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.\"\n  syntax:\n    content: public HttpResponse (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> object that enables custom HTTP output.\n  overload: System.Web.HttpResponse.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])\n  id: AddCacheDependency(System.Web.Caching.CacheDependency[])\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddCacheDependency(CacheDependency[])\n  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])\n  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.\n  remarks: The AddCacheDependency method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object.\n  example:\n  - \"The following example demonstrates how to create a cache dependency by using the AddCacheDependency method and a <xref:System.Web.Caching.CacheDependency> object.  \\n  \\n [!code-vb[HttpResponse.AddCacheDependency#1](~/add/codesnippet/visualbasic/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]\\n [!code-cs[HttpResponse.AddCacheDependency#1](~/add/codesnippet/csharp/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]\"\n  syntax:\n    content: public void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);\n    parameters:\n    - id: dependencies\n      type: System.Web.Caching.CacheDependency[]\n      description: A file, cache key, or <xref href=\"System.Web.Caching.CacheDependency\"></xref> to add to the list of application dependencies.\n  overload: System.Web.HttpResponse.AddCacheDependency*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>dependencies</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method was called too late in the cache processing pipeline, after the cached response was already created.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)\n  id: AddCacheItemDependencies(System.Collections.ArrayList)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddCacheItemDependencies(ArrayList)\n  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)\n  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Makes the validity of a cached response dependent on other items in the cache.\n  remarks: When the items referred to in the `cacheKeys` parameter are removed from the cache, the cached response of the current item is not valid.\n  example:\n  - \"The following example demonstrates how to use an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object. Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddCacheItemDependencies method. This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/csharp/m-system.web.httprespons_6_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_6_1.aspx)]\"\n  syntax:\n    content: public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);\n    parameters:\n    - id: cacheKeys\n      type: System.Collections.ArrayList\n      description: The <xref href=\"System.Collections.ArrayList\"></xref> that contains the keys of the items that the current cached response is dependent upon.\n  overload: System.Web.HttpResponse.AddCacheItemDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])\n  id: AddCacheItemDependencies(System.String[])\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddCacheItemDependencies(String[])\n  nameWithType: HttpResponse.AddCacheItemDependencies(String[])\n  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Makes the validity of a cached item dependent on another item in the cache.\n  remarks: When any of the `cacheKey`s are removed from the cache, the cached response of the current item is invalid.\n  syntax:\n    content: public void AddCacheItemDependencies (string[] cacheKeys);\n    parameters:\n    - id: cacheKeys\n      type: System.String[]\n      description: An array of item keys that the cached response is dependent upon.\n  overload: System.Web.HttpResponse.AddCacheItemDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)\n  id: AddCacheItemDependency(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddCacheItemDependency(String)\n  nameWithType: HttpResponse.AddCacheItemDependency(String)\n  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Makes the validity of a cached response dependent on another item in the cache.\n  remarks: When the item corresponding to the `cacheKey` parameter is removed from the cache, the cached response of the current item is invalid.\n  example:\n  - \"The following example is an ASP.NET user control that is output cached. The code for the control calls the AddCacheItemDependency method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter. If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated. This means that on the subsequent request, a new version of the control's response will be added to the output cache.  \\n  \\n Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result. Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/csharp/m-system.web.httprespons_13_1.ascx)]\\n [!code-vb[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/visualbasic/m-system.web.httprespons_13_1.ascx)]\"\n  syntax:\n    content: public void AddCacheItemDependency (string cacheKey);\n    parameters:\n    - id: cacheKey\n      type: System.String\n      description: The key of the item that the cached response is dependent upon.\n  overload: System.Web.HttpResponse.AddCacheItemDependency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)\n  id: AddFileDependencies(System.Collections.ArrayList)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddFileDependencies(ArrayList)\n  nameWithType: HttpResponse.AddFileDependencies(ArrayList)\n  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a group of file names to the collection of file names on which the current response is dependent.\n  remarks: ''\n  example:\n  - \"The following example is an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddFileDependencies method. This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.  \\n  \\n [!code-vb[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/visualbasic/m-system.web.httprespons_10_1.aspx)]\\n [!code-cs[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/csharp/m-system.web.httprespons_10_1.aspx)]\"\n  syntax:\n    content: public void AddFileDependencies (System.Collections.ArrayList filenames);\n    parameters:\n    - id: filenames\n      type: System.Collections.ArrayList\n      description: The collection of files to add.\n  overload: System.Web.HttpResponse.AddFileDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])\n  id: AddFileDependencies(System.String[])\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddFileDependencies(String[])\n  nameWithType: HttpResponse.AddFileDependencies(String[])\n  fullName: System.Web.HttpResponse.AddFileDependencies(String[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds an array of file names to the collection of file names on which the current response is dependent.\n  remarks: ''\n  example:\n  - \"The following example adds an array of file names to the AddFileDependencies file dependency list. If the files changes, the cached response is invalidated.  \\n  \\n [!code-cs[Response.AddFileDependency#1](~/add/codesnippet/csharp/m-system.web.httprespons_0_1.aspx)]\\n [!code-vb[Response.AddFileDependency#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_0_1.aspx)]\"\n  syntax:\n    content: public void AddFileDependencies (string[] filenames);\n    parameters:\n    - id: filenames\n      type: System.String[]\n      description: An array of files to add.\n  overload: System.Web.HttpResponse.AddFileDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddFileDependency(System.String)\n  id: AddFileDependency(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddFileDependency(String)\n  nameWithType: HttpResponse.AddFileDependency(String)\n  fullName: System.Web.HttpResponse.AddFileDependency(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a single file name to the collection of file names on which the current response is dependent.\n  remarks: 'When you use the AddFileDependency method to add a file dependency, you must also specify output caching programmatically or declaratively. For example, to specify output caching declaratively, use the  directive. For more information, see [How to: Cache Page Output with File Dependencies](~/add/includes/ajax-current-ext-md.md).'\n  example:\n  - \"The following example shows how to add a single file name to the AddFileDependency file dependency list. If the file changes, the cached response is invalidated.  \\n  \\n [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_11_1.vb)]\\n [!code-cs[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_11_1.cs)]\"\n  syntax:\n    content: public void AddFileDependency (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to add.\n  overload: System.Web.HttpResponse.AddFileDependency*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)\n  id: AddHeader(System.String,System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddHeader(String,String)\n  nameWithType: HttpResponse.AddHeader(String,String)\n  fullName: System.Web.HttpResponse.AddHeader(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds an HTTP header to the output stream. AddHeader is provided for compatibility with earlier versions of ASP.\n  remarks: AddHeader is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.\n  syntax:\n    content: public void AddHeader (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the HTTP header to add `value` to.\n    - id: value\n      type: System.String\n      description: The string to add to the header.\n  overload: System.Web.HttpResponse.AddHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})\n  id: AddOnSendingHeaders(System.Action{System.Web.HttpContext})\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AddOnSendingHeaders(Action<HttpContext>)\n  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)\n  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: \"[Supported in the .NET Framework 4.5.2 and later versions]  \\n  \\n Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.\"\n  remarks: \"> [!IMPORTANT]\\n>  The AddOnSendingHeaders method is not invoked if the native module flushes the response first.  \\n  \\n The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription. The intent is that the callback may modify the response status code or may set a response cookie or header. Other usage notes and caveats:  \\n  \\n-   This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.  \\n  \\n-   The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on. For example, the callback may be invoked synchronously in a background thread if a background flush is being performed. <xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.  \\n  \\n-   The callback must not call any method that manipulates the response entity body or that results in a flush. For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body.  \\n  \\n-   The callback must contain only short-running synchronous code. Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.  \\n  \\n-   The callback must not throw an exception; otherwise behavior is undefined.\"\n  syntax:\n    content: public System.Web.ISubscriptionToken AddOnSendingHeaders (Action<System.Web.HttpContext> callback);\n    parameters:\n    - id: callback\n      type: System.Action{System.Web.HttpContext}\n      description: The callback method.\n    return:\n      type: System.Web.ISubscriptionToken\n      description: An <xref href=\"System.Web.ISubscriptionToken\"></xref> object that represents the subscription to the OnSendingHeaders pseudo-event.\n  overload: System.Web.HttpResponse.AddOnSendingHeaders*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)\n  id: AppendCookie(System.Web.HttpCookie)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AppendCookie(HttpCookie)\n  nameWithType: HttpResponse.AppendCookie(HttpCookie)\n  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds an HTTP cookie to the intrinsic cookie collection.\n  remarks: ''\n  example:\n  - \"The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \\n  \\n [!code-cs[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_22_1.cs)]\\n [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_22_1.vb)]\"\n  syntax:\n    content: public void AppendCookie (System.Web.HttpCookie cookie);\n    parameters:\n    - id: cookie\n      type: System.Web.HttpCookie\n      description: The <xref href=\"System.Web.HttpCookie\"></xref> to add to the output stream.\n  overload: System.Web.HttpResponse.AppendCookie*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: A cookie is appended after the HTTP headers have been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)\n  id: AppendHeader(System.String,System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AppendHeader(String,String)\n  nameWithType: HttpResponse.AppendHeader(String,String)\n  fullName: System.Web.HttpResponse.AppendHeader(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds an HTTP header to the output stream.\n  remarks: \"If you use the AppendHeader method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used. This behavior enables ASP.NET to maintain the most restrictive settings. For example, consider a page that includes user controls. If those controls have conflicting cache policies, the most restrictive cache policy will be used. If one user control sets the header \\\"`Cache-Control: Public`\\\" and another user control sets the more restrictive header \\\"`Cache-Control: Private`\\\" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the \\\"`Cache-Control: Private`\\\" header will be sent with the response.  \\n  \\n For a list of standard HTTP/1.1 headers, see section 14, \\\"Header Field Definitions,\\\" in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.\"\n  example:\n  - \"The following example calls the AppendHeader method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.  \\n  \\n [!code-cs[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_19_1.aspx)]\\n [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_19_1.aspx)]\"\n  syntax:\n    content: public void AppendHeader (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the HTTP header to add to the output stream.\n    - id: value\n      type: System.String\n      description: The string to append to the header.\n  overload: System.Web.HttpResponse.AppendHeader*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The header is appended after the HTTP headers have been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.AppendToLog(System.String)\n  id: AppendToLog(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: AppendToLog(String)\n  nameWithType: HttpResponse.AppendToLog(String)\n  fullName: System.Web.HttpResponse.AppendToLog(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds custom log information to the Internet Information Services (IIS) log file.\n  remarks: \"To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS.  \\n  \\n To customize extended logging in IIS 6.0, follow these steps:  \\n  \\n1.  In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**.  \\n  \\n2.  Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected).  \\n  \\n3.  In the **Active log format** box, click **W3C Extended Log File Format**.  \\n  \\n4.  Click **Properties**.  \\n  \\n5.  Click the **Advanced** tab, select the properties that you want to log, and then click **OK**.\"\n  example:\n  - \"The following example shows how to append a string to the log.  \\n  \\n [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_15_1.vb)]\\n [!code-cs[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_15_1.cs)]\"\n  syntax:\n    content: public void AppendToLog (string param);\n    parameters:\n    - id: param\n      type: System.String\n      description: The text to add to the log file.\n  overload: System.Web.HttpResponse.AppendToLog*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)\n  id: ApplyAppPathModifier(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ApplyAppPathModifier(String)\n  nameWithType: HttpResponse.ApplyAppPathModifier(String)\n  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Adds a session ID to the virtual path if the session is using <xref:System.Web.Configuration.SessionStateSection.Cookieless*> session state and returns the combined path. If <xref:System.Web.Configuration.SessionStateSection.Cookieless*> session state is not used, ApplyAppPathModifier returns the original virtual path.\n  remarks: ApplyAppPathModifier is used only with cookieless sessions to construct absolute HREFs.\n  example:\n  - \"The following example declares a string variable named `urlConverted`, and sets it to the result of an ApplyAppPathModifier method call. The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/csharp/m-system.web.httprespons_4_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_4_1.aspx)]\"\n  syntax:\n    content: public string ApplyAppPathModifier (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to a resource.\n    return:\n      type: System.String\n      description: The <code>virtualPath</code> with the session ID inserted.\n  overload: System.Web.HttpResponse.ApplyAppPathModifier*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)\n  id: BeginFlush(System.AsyncCallback,System.Object)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: BeginFlush(AsyncCallback,Object)\n  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)\n  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sends the currently buffered response to the client.\n  remarks: If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously. Otherwise, the flush operation is performed synchronously. Asynchronous flush is supported for IIS 6.0 and later.\n  syntax:\n    content: public IAsyncResult BeginFlush (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback object.\n    - id: state\n      type: System.Object\n      description: The response state.\n    return:\n      type: System.IAsyncResult\n      description: The asynchronous result object.\n  overload: System.Web.HttpResponse.BeginFlush*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The response is already completed.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])\n  id: BinaryWrite(System.Byte[])\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: BinaryWrite(Byte[])\n  nameWithType: HttpResponse.BinaryWrite(Byte[])\n  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes a string of binary characters to the HTTP output stream.\n  remarks: ''\n  example:\n  - \"The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.  \\n  \\n [!code-cs[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_21_1.cs)]\\n [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_21_1.vb)]\"\n  syntax:\n    content: public void BinaryWrite (byte[] buffer);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The bytes to write to the output stream.\n  overload: System.Web.HttpResponse.BinaryWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Buffer\n  id: Buffer\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Buffer\n  nameWithType: HttpResponse.Buffer\n  fullName: System.Web.HttpResponse.Buffer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.\n  remarks: The Buffer property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.\n  syntax:\n    content: public bool Buffer { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the output to client is buffered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.Buffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.BufferOutput\n  id: BufferOutput\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: BufferOutput\n  nameWithType: HttpResponse.BufferOutput\n  fullName: System.Web.HttpResponse.BufferOutput\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.\n  remarks: ''\n  example:\n  - \"The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the BufferOutput property to true so that the entire page will be processed before any content is sent to the requesting client.  \\n  \\n For a complete example, see the <xref:System.Web.HttpResponse> class.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_3_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_3_1.aspx)]\"\n  syntax:\n    content: public bool BufferOutput { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the output to client is buffered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.BufferOutput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Cache\n  id: Cache\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Cache\n  nameWithType: HttpResponse.Cache\n  fullName: System.Web.HttpResponse.Cache\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.\n  remarks: ''\n  example:\n  - \"The following example writes properties of the current cache policy to the HTTP output stream.  \\n  \\n [!code-vb[Classic HttpResponse.Cache Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_4_1.vb)]\\n [!code-cs[Classic HttpResponse.Cache Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_4_1.cs)]\"\n  syntax:\n    content: public System.Web.HttpCachePolicy Cache { get; }\n    return:\n      type: System.Web.HttpCachePolicy\n      description: An <xref href=\"System.Web.HttpCachePolicy\"></xref> object that contains information about the caching policy of the current response.\n  overload: System.Web.HttpResponse.Cache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.CacheControl\n  id: CacheControl\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: CacheControl\n  nameWithType: HttpResponse.CacheControl\n  fullName: System.Web.HttpResponse.CacheControl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the <xref uid=\"langword_csharp_Cache-Control\" name=\"Cache-Control\" href=\"\"></xref> HTTP header that matches one of the <xref href=\"System.Web.HttpCacheability\"></xref> enumeration values.\n  remarks: \"The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (\\\" \\\"). If the CacheControl property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown. If the CacheControl property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability>.  \\n  \\n The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated. Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.\"\n  syntax:\n    content: public string CacheControl { get; set; }\n    return:\n      type: System.String\n      description: A string representation of the <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value.\n  overload: System.Web.HttpResponse.CacheControl*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The string value set does not match one of the <xref href=\"System.Web.HttpCacheability\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Charset\n  id: Charset\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Charset\n  nameWithType: HttpResponse.Charset\n  fullName: System.Web.HttpResponse.Charset\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the HTTP character set of the output stream.\n  remarks: The `Charset` property can be set to `null` to suppress the HTTP `Content-Type` header.\n  example:\n  - \"The following example checks whether the character set of the output stream is Central European (ISO).  \\n  \\n [!code-vb[System.Web.HttpResponse.Charset#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_7_1.aspx)]\\n [!code-cs[System.Web.HttpResponse.Charset#1](~/add/codesnippet/csharp/p-system.web.httprespons_7_1.aspx)]\"\n  syntax:\n    content: public string Charset { get; set; }\n    return:\n      type: System.String\n      description: The HTTP character set of the output stream.\n  overload: System.Web.HttpResponse.Charset*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The <xref uid=\"langword_csharp_Charset\" name=\"Charset\" href=\"\"></xref> property was set after headers were sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Clear\n  id: Clear\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HttpResponse.Clear()\n  fullName: System.Web.HttpResponse.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Clears all content output from the buffer stream.\n  remarks: The Clear method does not clear header information.\n  example:\n  - \"The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the Clear method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \\n  \\n For a complete example, see the <xref:System.Web.HttpResponse> class.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/m-system.web.httprespons_2_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_2_1.aspx)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.HttpResponse.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ClearContent\n  id: ClearContent\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ClearContent()\n  nameWithType: HttpResponse.ClearContent()\n  fullName: System.Web.HttpResponse.ClearContent()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Clears all content output from the buffer stream.\n  remarks: The ClearContent method does not clear header information.\n  example:\n  - \"The following example clears all content from the buffer stream.  \\n  \\n [!code-cs[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_17_1.cs)]\\n [!code-vb[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_17_1.vb)]\"\n  syntax:\n    content: public void ClearContent ();\n    parameters: []\n  overload: System.Web.HttpResponse.ClearContent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ClearHeaders\n  id: ClearHeaders\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ClearHeaders()\n  nameWithType: HttpResponse.ClearHeaders()\n  fullName: System.Web.HttpResponse.ClearHeaders()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Clears all headers from the buffer stream.\n  remarks: ''\n  example:\n  - \"The following example calls the ClearHeaders method to ensure that no headers are sent with the current response. This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file. In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/csharp/m-system.web.httprespons_14_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_14_1.aspx)]\"\n  syntax:\n    content: public void ClearHeaders ();\n    parameters: []\n  overload: System.Web.HttpResponse.ClearHeaders*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Headers are cleared after the HTTP headers have been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ClientDisconnectedToken\n  id: ClientDisconnectedToken\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ClientDisconnectedToken\n  nameWithType: HttpResponse.ClientDisconnectedToken\n  fullName: System.Web.HttpResponse.ClientDisconnectedToken\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a <xref:System.Threading.CancellationToken> object that is tripped when the client disconnects.\n  remarks: \"This API is thread-safe. However, there are some restrictions on how the cancellation token should be used. Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior. Keep in mind the following guidelines:  \\n  \\n-   Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request. There is no guarantee that the token will ever transition to a canceled state before it is disposed. For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.  \\n  \\n-   Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.  \\n  \\n-   Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.  \\n  \\n-   Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> method. The callback may be running concurrently with other ASP.NET or application code.  \\n  \\n-   Keep the callback methods short-running and non-blocking.  \\n  \\n-   Make every effort to avoid throwing exceptions from within the callback methods.  \\n  \\n This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode. If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown. To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>. To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.\"\n  syntax:\n    content: public System.Threading.CancellationToken ClientDisconnectedToken { get; }\n    return:\n      type: System.Threading.CancellationToken\n      description: The cancellation token.\n  overload: System.Web.HttpResponse.ClientDisconnectedToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Close\n  id: Close\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: HttpResponse.Close()\n  fullName: System.Web.HttpResponse.Close()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Closes the socket connection to a client.\n  remarks: \"This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing. The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.  \\n  \\n However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Web.HttpResponse.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ContentEncoding\n  id: ContentEncoding\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ContentEncoding\n  nameWithType: HttpResponse.ContentEncoding\n  fullName: System.Web.HttpResponse.ContentEncoding\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the HTTP character set of the output stream.\n  remarks: Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) section. If ContentEncoding is specified by the client, the default configuration settings are overridden.\n  example:\n  - \"The following example writes a human-readable description of the character set encoding to the output stream.  \\n  \\n [!code-cs[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_0_1.cs)]\\n [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_0_1.vb)]\"\n  syntax:\n    content: public System.Text.Encoding ContentEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: A <xref:System.Text.Encoding> object that contains information about the character set of the current response.\n  overload: System.Web.HttpResponse.ContentEncoding*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Attempted to set ContentEncoding to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ContentType\n  id: ContentType\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: HttpResponse.ContentType\n  fullName: System.Web.HttpResponse.ContentType\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the HTTP MIME type of the output stream.\n  remarks: ''\n  example:\n  - \"The following example sets the ContentType property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \\n  \\n For a complete example, see the <xref:System.Web.HttpResponse> class.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_2_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_2_1.aspx)]\"\n  syntax:\n    content: public string ContentType { get; set; }\n    return:\n      type: System.String\n      description: The HTTP MIME type of the output stream. The default value is \"<xref uid=\"langword_csharp_text/html\" name=\"text/html\" href=\"\"></xref>\".\n  overload: System.Web.HttpResponse.ContentType*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The ContentType property is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Cookies\n  id: Cookies\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Cookies\n  nameWithType: HttpResponse.Cookies\n  fullName: System.Web.HttpResponse.Cookies\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the response cookie collection.\n  remarks: \"ASP.NET includes two intrinsic cookie collections. The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header. The collection accessed through the Cookies collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.  \\n  \\n After you add a cookie by using the Cookies collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName> collection, even if the response has not been sent to the client.\"\n  example:\n  - \"The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \\n  \\n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_12_1.cs)]\\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_12_1.vb)]\"\n  syntax:\n    content: public System.Web.HttpCookieCollection Cookies { get; }\n    return:\n      type: System.Web.HttpCookieCollection\n      description: The response cookie collection.\n  overload: System.Web.HttpResponse.Cookies*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.DisableKernelCache\n  id: DisableKernelCache\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: DisableKernelCache()\n  nameWithType: HttpResponse.DisableKernelCache()\n  fullName: System.Web.HttpResponse.DisableKernelCache()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Disables kernel caching for the current response.\n  remarks: If kernel caching is not supported, this method has no effect.\n  syntax:\n    content: public void DisableKernelCache ();\n    parameters: []\n  overload: System.Web.HttpResponse.DisableKernelCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.DisableUserCache\n  id: DisableUserCache\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: DisableUserCache()\n  nameWithType: HttpResponse.DisableUserCache()\n  fullName: System.Web.HttpResponse.DisableUserCache()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Disables IIS user-mode caching for this response.\n  remarks: If IIS user-mode caching is not supported, this method returns without performing any action.\n  syntax:\n    content: public void DisableUserCache ();\n    parameters: []\n  overload: System.Web.HttpResponse.DisableUserCache*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.End\n  id: End\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: End()\n  nameWithType: HttpResponse.End()\n  fullName: System.Web.HttpResponse.End()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sends all currently buffered output to the client, stops execution of the page, and raises the <xref href=\"System.Web.HttpApplication.EndRequest\"></xref> event.\n  remarks: \"This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET. If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead.  \\n  \\n To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception. If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance. In that case, no code after the call to the End method is executed.  \\n  \\n If the End method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client. It does this synchronously, which can also be detrimental to your site's performance.  \\n  \\n In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event.  \\n  \\n The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed. If your intention is to avoid execution of subsequent code, and if the performance penalty of End is acceptable, you can call End instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>.\"\n  syntax:\n    content: public void End ();\n    parameters: []\n  overload: System.Web.HttpResponse.End*\n  exceptions:\n  - type: System.Threading.ThreadAbortException\n    commentId: T:System.Threading.ThreadAbortException\n    description: The call to End has terminated the current request.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)\n  id: EndFlush(System.IAsyncResult)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: EndFlush(IAsyncResult)\n  nameWithType: HttpResponse.EndFlush(IAsyncResult)\n  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Completes an asynchronous flush operation.\n  syntax:\n    content: public void EndFlush (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The asynchronous result object.\n  overload: System.Web.HttpResponse.EndFlush*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Asynchronous flush is not supported and the <code>asyncResult</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Asynchronous flush is not supported and the <code>asyncResult</code> parameter cannot be cast to a `FlushAsyncResult` object.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Expires\n  id: Expires\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Expires\n  nameWithType: HttpResponse.Expires\n  fullName: System.Web.HttpResponse.Expires\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. Expires is provided for compatibility with earlier versions of ASP.\n  remarks: The `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.\n  syntax:\n    content: public int Expires { get; set; }\n    return:\n      type: System.Int32\n      description: The number of minutes before the page expires.\n  overload: System.Web.HttpResponse.Expires*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.ExpiresAbsolute\n  id: ExpiresAbsolute\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: ExpiresAbsolute\n  nameWithType: HttpResponse.ExpiresAbsolute\n  fullName: System.Web.HttpResponse.ExpiresAbsolute\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the absolute date and time at which to remove cached information from the cache. ExpiresAbsolute is provided for compatibility with earlier versions of ASP.\n  remarks: The `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.\n  syntax:\n    content: public DateTime ExpiresAbsolute { get; set; }\n    return:\n      type: System.DateTime\n      description: The date and time at which the page expires.\n  overload: System.Web.HttpResponse.ExpiresAbsolute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Filter\n  id: Filter\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: HttpResponse.Filter\n  fullName: System.Web.HttpResponse.Filter\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.\n  remarks: When you create a `Stream` object and set the Filter property to the `Stream` object, all HTTP output sent by <xref:System.Web.HttpResponse.Write%2A> passes through the filter.\n  example:\n  - \"The following example is an ASP.NET page that sets the Filter property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase. The information about the request is saved to a text file, and then the Filter property is set. After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response. The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.  \\n  \\n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_8_1.aspx)]\\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/p-system.web.httprespons_8_1.aspx)]\"\n  syntax:\n    content: public System.IO.Stream Filter { get; set; }\n    return:\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> object that acts as the output filter.\n  overload: System.Web.HttpResponse.Filter*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Filtering is not allowed with the entity.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Flush\n  id: Flush\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: HttpResponse.Flush()\n  fullName: System.Web.HttpResponse.Flush()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sends all currently buffered output to the client.\n  remarks: Forces all currently buffered output to be sent to the client. The Flush method can be called multiple times during request processing.\n  example:\n  - \"The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format. The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. It then calls the Flush method to send the content of the response to the requesting client.  \\n  \\n For a complete example, see the <xref:System.Web.HttpResponse> class.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/m-system.web.httprespons_24_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_24_1.aspx)]\"\n  syntax:\n    content: public void Flush ();\n    parameters: []\n  overload: System.Web.HttpResponse.Flush*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The cache is flushed after the response has been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.FlushAsync\n  id: FlushAsync\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: FlushAsync()\n  nameWithType: HttpResponse.FlushAsync()\n  fullName: System.Web.HttpResponse.FlushAsync()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Asynchronously sends all currently buffered output to the client.\n  syntax:\n    content: public System.Threading.Tasks.Task FlushAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: A <xref:System.Threading.Tasks.Task> that represents the asynchronous operation.\n  overload: System.Web.HttpResponse.FlushAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.HeaderEncoding\n  id: HeaderEncoding\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: HeaderEncoding\n  nameWithType: HttpResponse.HeaderEncoding\n  fullName: System.Web.HttpResponse.HeaderEncoding\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets an <xref:System.Text.Encoding> object that represents the encoding for the current header output stream.\n  remarks: \"The HeaderEncoding property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object. The default encoding value is the <xref:System.Text.UTF8Encoding> class.  \\n  \\n By changing the type of the HeaderEncoding property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header. Header injection attacks can be avoided, in part, by leaving the HeaderEncoding property of a response to the default setting. An attack against a vulnerable application could echo back entrusted data as part of a response header. If the HeaderEncoding is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.\"\n  syntax:\n    content: public System.Text.Encoding HeaderEncoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: An <xref:System.Text.Encoding> that contains information about the character set for the current header.\n  overload: System.Web.HttpResponse.HeaderEncoding*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The encoding value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"The encoding value is <xref:System.Text.Encoding.Unicode*>.  \\n  \\n \\\\- or -  \\n  \\n The headers have already been sent.\"\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Headers\n  id: Headers\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Headers\n  nameWithType: HttpResponse.Headers\n  fullName: System.Web.HttpResponse.Headers\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the collection of response headers.\n  remarks: The Headers property is only supported with the [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] integrated pipeline mode and at least the .NET Framework 3.0. When you try to access the Headers property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown.\n  syntax:\n    content: public System.Collections.Specialized.NameValueCollection Headers { get; }\n    return:\n      type: System.Collections.Specialized.NameValueCollection\n      description: A <xref href=\"System.Collections.Specialized.NameValueCollection\"></xref> of response headers.\n  overload: System.Web.HttpResponse.Headers*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.HeadersWritten\n  id: HeadersWritten\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: HeadersWritten\n  nameWithType: HttpResponse.HeadersWritten\n  fullName: System.Web.HttpResponse.HeadersWritten\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: \"[Supported in the .NET Framework 4.5.2 and later versions]  \\n  \\n Gets a value indicating whether the response headers have been written.\"\n  syntax:\n    content: public bool HeadersWritten { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the response headers have been written; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.HeadersWritten*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.IsClientConnected\n  id: IsClientConnected\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: IsClientConnected\n  nameWithType: HttpResponse.IsClientConnected\n  fullName: System.Web.HttpResponse.IsClientConnected\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value indicating whether the client is still connected to the server.\n  remarks: \"The IsClientConnected property returns `false` when the following conditions are true:  \\n  \\n-   The connection to the client was terminated. This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page.  \\n  \\n-   The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> method returns `false`. If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> method might be set based on custom criteria. For example, the custom worker request might force a time-out after a period of time.\"\n  example:\n  - \"The following example uses the IsClientConnected property to check whether the client that is requesting the page remains connected to the server. If IsClientConnected is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page. If IsClientConnected is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/p-system.web.httprespons_1_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_1_1.aspx)]\"\n  syntax:\n    content: public bool IsClientConnected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the client is currently connected; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.IsClientConnected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.IsRequestBeingRedirected\n  id: IsRequestBeingRedirected\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: IsRequestBeingRedirected\n  nameWithType: HttpResponse.IsRequestBeingRedirected\n  fullName: System.Web.HttpResponse.IsRequestBeingRedirected\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a Boolean value indicating whether the client is being transferred to a new location.\n  remarks: Use the IsRequestBeingRedirected property with the <xref:System.Web.HttpResponse.RedirectLocation%2A> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP `Location` header is different than the current URI and what the new intended URI that is being transferred to will be.\n  syntax:\n    content: public bool IsRequestBeingRedirected { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of the location response header is different than the current location; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.IsRequestBeingRedirected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Output\n  id: Output\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Output\n  nameWithType: HttpResponse.Output\n  fullName: System.Web.HttpResponse.Output\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Enables output of text to the outgoing HTTP response stream.\n  remarks: ''\n  example:\n  - \"The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode>. The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the Output property to display the encoded string to the page.  \\n  \\n [!code-vb[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_5_1.aspx)]\\n [!code-cs[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/csharp/p-system.web.httprespons_5_1.aspx)]\"\n  syntax:\n    content: public System.IO.TextWriter Output { get; set; }\n    return:\n      type: System.IO.TextWriter\n      description: A <xref:System.IO.TextWriter> object that enables custom output to the client.\n  overload: System.Web.HttpResponse.Output*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.OutputStream\n  id: OutputStream\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: OutputStream\n  nameWithType: HttpResponse.OutputStream\n  fullName: System.Web.HttpResponse.OutputStream\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Enables binary output to the outgoing HTTP content body.\n  remarks: \"Starting with the .NET Framework version 2.0, when you use the [Stream.Write(Byte\\\\[\\\\], Int32, Int32)](assetId:///M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)?qualifyHint=True&autoUpgrade=False) method of the IO stream returned by the OutputStream property, the following exceptions might be thrown:  \\n  \\n-   <xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.  \\n  \\n-   <xref:System.ArgumentNullException>, if the `buffer` parameter is `null`.\"\n  example:\n  - \"The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the OutputStream property, and converts the image to the JPEG format. The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.  \\n  \\n For a complete example, see the <xref:System.Web.HttpResponse> class.  \\n  \\n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/p-system.web.httprespons_13_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_13_1.aspx)]\"\n  syntax:\n    content: public System.IO.Stream OutputStream { get; }\n    return:\n      type: System.IO.Stream\n      description: An IO <xref:System.IO.Stream> representing the raw contents of the outgoing HTTP content body.\n  overload: System.Web.HttpResponse.OutputStream*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: <code>OutputStream</code> is not available.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Pics(System.String)\n  id: Pics(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Pics(String)\n  nameWithType: HttpResponse.Pics(String)\n  fullName: System.Web.HttpResponse.Pics(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Appends a HTTP <xref uid=\"langword_csharp_PICS-Label\" name=\"PICS-Label\" href=\"\"></xref> header to the output stream.\n  remarks: \"Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling. PICS is essentially a language for creating a ratings system.  \\n  \\n Any value can be a PICS label; ASP.NET does not validate the label. The maximum length of the string is 255 characters. For more information about PICS standards and syntax, see the [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web site.\"\n  example:\n  - \"The following example is an ASP.NET page that displays an image. The page code calls the Pics method to set the HTTP `PICS-Label` header for the response. The string that is passed as the parameter to the Pics method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/csharp/m-system.web.httprespons_8_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_8_1.aspx)]\"\n  syntax:\n    content: public void Pics (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to add to the <xref uid=\"langword_csharp_PICS-Label\" name=\"PICS-Label\" href=\"\"></xref> header.\n  overload: System.Web.HttpResponse.Pics*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.PushPromise(System.String)\n  id: PushPromise(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: PushPromise(String)\n  nameWithType: HttpResponse.PushPromise(String)\n  fullName: System.Web.HttpResponse.PushPromise(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).'\n  remarks: PushPromise is non-deterministic and applications shouldn't have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.\n  syntax:\n    content: public void PushPromise (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.\n  overload: System.Web.HttpResponse.PushPromise*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)\n  id: PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: PushPromise(String,String,NameValueCollection)\n  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)\n  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](http://http2.github.io/http2-spec/#PushResources).'\n  remarks: PushPromise is non-deterministic and applications shouldn't have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.\n  syntax:\n    content: public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);\n    parameters:\n    - id: path\n      type: System.String\n      description: The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.\n    - id: method\n      type: System.String\n      description: Http request method that would be used by the push request.\n    - id: headers\n      type: System.Collections.Specialized.NameValueCollection\n      description: Http request header that would be used by the push request.\n  overload: System.Web.HttpResponse.PushPromise*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Redirect(System.String)\n  id: Redirect(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Redirect(String)\n  nameWithType: HttpResponse.Redirect(String)\n  fullName: System.Web.HttpResponse.Redirect(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a request to a new URL and specifies the new URL.\n  remarks: \"Calling Redirect is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`.  \\n  \\n Redirect calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion. This exception has a detrimental effect on Web application performance. Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method. For more information, see the <xref:System.Web.HttpResponse.End%2A> method.  \\n  \\n> [!NOTE]\\n>  For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data. To set a property on a mobile control with a path such as \\\"~/path\\\", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \\\"~/path\\\" before assigning it to the property.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code. An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method. The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client. For more information, see [How to: Redirect Users to Another Page](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example forces an unconditional redirection to another Web site.  \\n  \\n [!code-cs[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_9_1.cs)]\\n [!code-vb[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_9_1.vb)]\"\n  syntax:\n    content: public void Redirect (string url);\n    parameters:\n    - id: url\n      type: System.String\n      description: The target location.\n  overload: System.Web.HttpResponse.Redirect*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: A redirection is attempted after the HTTP headers have been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)\n  id: Redirect(System.String,System.Boolean)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Redirect(String,Boolean)\n  nameWithType: HttpResponse.Redirect(String,Boolean)\n  fullName: System.Web.HttpResponse.Redirect(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.\n  remarks: \"An absolute URL (for example, http://www.contoso.com/default.aspx) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.  \\n  \\n When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method. If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes. This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended. For more information, see the <xref:System.Web.HttpResponse.End%2A> method.  \\n  \\n> [!NOTE]\\n>  For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data. To set a property on a mobile control with a path such as \\\"~/path\\\", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> \\\"~/path\\\" before assigning it to the property.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code. An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method. The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client. For more information, see [How to: Redirect Users to Another Page](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the Redirect method, and the client will view another page. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/m-system.web.httprespons_16_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_16_1.aspx)]\"\n  syntax:\n    content: public void Redirect (string url, bool endResponse);\n    parameters:\n    - id: url\n      type: System.String\n      description: The location of the target.\n    - id: endResponse\n      type: System.Boolean\n      description: Indicates whether execution of the current page should terminate.\n  overload: System.Web.HttpResponse.Redirect*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>url</code> contains a newline character.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: A redirection is attempted after the HTTP headers have been sent.\n  - type: System.ApplicationException\n    commentId: T:System.ApplicationException\n    description: The page request is the result of a callback.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectLocation\n  id: RedirectLocation\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectLocation\n  nameWithType: HttpResponse.RedirectLocation\n  fullName: System.Web.HttpResponse.RedirectLocation\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the value of the HTTP <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header.\n  remarks: ''\n  example:\n  - \"The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.  \\n  \\n```c#  \\nResponse.StatusCode = 301;  \\nResponse.Status = \\\"301 Moved Permanently\\\";  \\nResponse.RedirectLocation = \\\"http://www.newurl.com \\\";  \\nResponse.End();  \\n```\"\n  syntax:\n    content: public string RedirectLocation { get; set; }\n    return:\n      type: System.String\n      description: The absolute URI that is transmitted to the client in the HTTP <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> header.\n  overload: System.Web.HttpResponse.RedirectLocation*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The HTTP headers have already been written.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectPermanent(System.String)\n  id: RedirectPermanent(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectPermanent(String)\n  nameWithType: HttpResponse.RedirectPermanent(String)\n  fullName: System.Web.HttpResponse.RedirectPermanent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from the requested URL to the specified URL.\n  remarks: \"The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.  \\n  \\n Calling the RedirectPermanent method overload terminates the response.\"\n  syntax:\n    content: public void RedirectPermanent (string url);\n    parameters:\n    - id: url\n      type: System.String\n      description: The location to redirect the request to.\n  overload: System.Web.HttpResponse.RedirectPermanent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>url</code> includes a newline character (`\\n`).\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)\n  id: RedirectPermanent(System.String,System.Boolean)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectPermanent(String,Boolean)\n  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)\n  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.\n  remarks: The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.\n  syntax:\n    content: public void RedirectPermanent (string url, bool endResponse);\n    parameters:\n    - id: url\n      type: System.String\n      description: The location to redirect the request to.\n    - id: endResponse\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to terminate the response; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.RedirectPermanent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>url</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>url</code> includes a newline character (`\\n`).\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)\n  id: RedirectToRoute(System.Object)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoute(Object)\n  nameWithType: HttpResponse.RedirectToRoute(Object)\n  fullName: System.Web.HttpResponse.RedirectToRoute(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a request to a new URL by using route parameter values.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoute(  \\n  New With {.productid = \\\"1\\\", .category = \\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoute(  \\n  new { productid = \\\"1\\\", category = \\\"widgets\\\" });  \\n```\"\n  syntax:\n    content: public void RedirectToRoute (object routeValues);\n    parameters:\n    - id: routeValues\n      type: System.Object\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoute*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoute(System.String)\n  id: RedirectToRoute(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoute(String)\n  nameWithType: HttpResponse.RedirectToRoute(String)\n  fullName: System.Web.HttpResponse.RedirectToRoute(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a request to a new URL by using a route name.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that is named `Products`.  \\n  \\n```vb#  \\nResponse.RedirectToRoute(\\\"Products\\\")  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoute(\\\"Products\\\");  \\n```\"\n  syntax:\n    content: public void RedirectToRoute (string routeName);\n    parameters:\n    - id: routeName\n      type: System.String\n      description: The name of the route.\n  overload: System.Web.HttpResponse.RedirectToRoute*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)\n  id: RedirectToRoute(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoute(RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a request to a new URL by using route parameter values.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoute(  \\n  new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoute(  \\n  (new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"});  \\n```\"\n  syntax:\n    content: public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);\n    parameters:\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoute*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)\n  id: RedirectToRoute(System.String,System.Object)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoute(String,Object)\n  nameWithType: HttpResponse.RedirectToRoute(String,Object)\n  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a request to a new URL by using route parameter values and a route name.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoute(\\\"Product\\\",  \\n  New With {.productid = \\\"1\\\", .category = \\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoute(\\\"Product\\\",  \\n  new { productid = \\\"1\\\", category = \\\"widgets\\\" });  \\n```\"\n  syntax:\n    content: public void RedirectToRoute (string routeName, object routeValues);\n    parameters:\n    - id: routeName\n      type: System.String\n      description: The name of the route.\n    - id: routeValues\n      type: System.Object\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoute*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)\n  id: RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoute(String,RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Redirects a request to a new URL by using route parameter values and a route name.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is called to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 302 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoute(\\\"Product\\\",  \\n  new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoute(\\\"Product\\\",  \\n  (new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"});  \\n```\"\n  syntax:\n    content: public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);\n    parameters:\n    - id: routeName\n      type: System.String\n      description: The name of the route.\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoute*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)\n  id: RedirectToRoutePermanent(System.Object)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoutePermanent(Object)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from a requested URL to a new URL by using route parameter values.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 301 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoutePermanent(  \\n  New With {.productid = \\\"1\\\", .category = \\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoutePermanent(  \\n  new { productid = \\\"1\\\", category = \\\"widgets\\\" });  \\n```\"\n  syntax:\n    content: public void RedirectToRoutePermanent (object routeValues);\n    parameters:\n    - id: routeValues\n      type: System.Object\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoutePermanent*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)\n  id: RedirectToRoutePermanent(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoutePermanent(String)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(String)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from a requested URL to a new URL by using a route name.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method.  \\n  \\n ASP.NET performs the redirection by returning a 301 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that is named `Products`.  \\n  \\n```vb#  \\nResponse.RedirectToRoutePermanent(\\\"Products\\\")  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoutePermanent(\\\"Products\\\");  \\n```\"\n  syntax:\n    content: public void RedirectToRoutePermanent (string routeName);\n    parameters:\n    - id: routeName\n      type: System.String\n      description: The name of the route.\n  overload: System.Web.HttpResponse.RedirectToRoutePermanent*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)\n  id: RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoutePermanent(RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from a requested URL to a new URL by using route parameter values.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 301 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoutePermanent(  \\n  new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoutePermanent(  \\n  new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"});  \\n```\"\n  syntax:\n    content: public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);\n    parameters:\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoutePermanent*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)\n  id: RedirectToRoutePermanent(System.String,System.Object)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoutePermanent(String,Object)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`.  \\n  \\n This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> constructor. The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method is then called to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 301 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoutePermanent(\\\"Product\\\",  \\n  New With {.productid = \\\"1\\\", .category = \\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoutePermanent(\\\"Product\\\",  \\n  new { productid = \\\"1\\\", category = \\\"widgets\\\" });  \\n```\"\n  syntax:\n    content: public void RedirectToRoutePermanent (string routeName, object routeValues);\n    parameters:\n    - id: routeName\n      type: System.String\n      description: The name of the route.\n    - id: routeValues\n      type: System.Object\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoutePermanent*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)\n  id: RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RedirectToRoutePermanent(String,RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.\n  remarks: \"This method is provided for coding convenience. It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.  \\n  \\n This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName> method to determine the URL.  \\n  \\n ASP.NET performs the redirection by returning a 301 HTTP status code.\"\n  example:\n  - \"The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \\n  \\n```vb#  \\nResponse.RedirectToRoutePermanent(\\\"Product\\\",  \\n  new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"})  \\n```  \\n  \\n```c#  \\nResponse.RedirectToRoutePermanent(\\\"Product\\\",  \\n  new RouteValueDictionary {productId=\\\"1\\\", category=\\\"widgets\\\"});  \\n```\"\n  syntax:\n    content: public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);\n    parameters:\n    - id: routeName\n      type: System.String\n      description: The name of the route.\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The route parameter values.\n  overload: System.Web.HttpResponse.RedirectToRoutePermanent*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No route corresponds to the specified route parameters.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Redirection was attempted after the HTTP headers had been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)\n  id: RemoveOutputCacheItem(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RemoveOutputCacheItem(String)\n  nameWithType: HttpResponse.RemoveOutputCacheItem(String)\n  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Removes from the cache all cached items that are associated with the default output-cache provider. This method is static.\n  remarks: Call this method to remove output-cache items that are associated with the default output-cache provider. Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.\n  syntax:\n    content: public static void RemoveOutputCacheItem (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The virtual absolute path to the items that are removed from the cache.\n  overload: System.Web.HttpResponse.RemoveOutputCacheItem*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is not an absolute virtual path.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)\n  id: RemoveOutputCacheItem(System.String,System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: RemoveOutputCacheItem(String,String)\n  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)\n  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.\n  remarks: Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file. To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.\n  syntax:\n    content: public static void RemoveOutputCacheItem (string path, string providerName);\n    parameters:\n    - id: path\n      type: System.String\n      description: The virtual absolute path of the items that are removed from the cache.\n    - id: providerName\n      type: System.String\n      description: The provider that is used to remove the output-cache artifacts that are associated with the specified path.\n  overload: System.Web.HttpResponse.RemoveOutputCacheItem*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is an invalid path.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)\n  id: SetCookie(System.Web.HttpCookie)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: SetCookie(HttpCookie)\n  nameWithType: HttpResponse.SetCookie(HttpCookie)\n  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Updates an existing cookie in the cookie collection.\n  remarks: ''\n  example:\n  - \"The following example updates the value of an existing cookie.  \\n  \\n [!code-cs[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_23_1.cs)]\\n [!code-vb[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_23_1.vb)]\"\n  syntax:\n    content: public void SetCookie (System.Web.HttpCookie cookie);\n    parameters:\n    - id: cookie\n      type: System.Web.HttpCookie\n      description: The cookie in the collection to be updated.\n  overload: System.Web.HttpResponse.SetCookie*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Attempted to set the cookie after the HTTP headers were sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Status\n  id: Status\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Status\n  nameWithType: HttpResponse.Status\n  fullName: System.Web.HttpResponse.Status\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the <xref uid=\"langword_csharp_Status\" name=\"Status\" href=\"\"></xref> line that is returned to the client.\n  remarks: Status has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.\n  syntax:\n    content: public string Status { get; set; }\n    return:\n      type: System.String\n      description: Setting the status code causes a string describing the status of the HTTP output to be returned to the client. The default value is 200 (OK).\n  overload: System.Web.HttpResponse.Status*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: Status is set to an invalid status code.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.StatusCode\n  id: StatusCode\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: StatusCode\n  nameWithType: HttpResponse.StatusCode\n  fullName: System.Web.HttpResponse.StatusCode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the HTTP status code of the output returned to the client.\n  remarks: ''\n  example:\n  - \"The following example checks the status code of the output stream. If the status code is not equal to 200, additional code is executed.  \\n  \\n [!code-vb[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_11_1.aspx)]\\n [!code-cs[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_11_1.aspx)]\"\n  syntax:\n    content: public int StatusCode { get; set; }\n    return:\n      type: System.Int32\n      description: An Integer representing the status of the HTTP output returned to the client. The default value is 200 (OK). For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).\n  overload: System.Web.HttpResponse.StatusCode*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: StatusCode is set after the HTTP headers have been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.StatusDescription\n  id: StatusDescription\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: StatusDescription\n  nameWithType: HttpResponse.StatusDescription\n  fullName: System.Web.HttpResponse.StatusDescription\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the HTTP status string of the output returned to the client.\n  remarks: ''\n  example:\n  - \"The following example checks the status string of the output stream. If the status is not equal to \\\"OK\\\", additional code is executed.  \\n  \\n [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_10_1.aspx)]\\n [!code-cs[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/csharp/p-system.web.httprespons_10_1.aspx)]\"\n  syntax:\n    content: public string StatusDescription { get; set; }\n    return:\n      type: System.String\n      description: A string that describes the status of the HTTP output returned to the client. The default value is \"OK\". For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).\n  overload: System.Web.HttpResponse.StatusDescription*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: <code>StatusDescription</code> is set after the HTTP headers have been sent.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The selected value has a length greater than 512.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.SubStatusCode\n  id: SubStatusCode\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: SubStatusCode\n  nameWithType: HttpResponse.SubStatusCode\n  fullName: System.Web.HttpResponse.SubStatusCode\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value qualifying the status code of the response.\n  remarks: The SubStatusCode property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0. When you set the SubStatusCode property, the status is logged on [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] if failed-request tracing is configured. Independent of whether tracing is configured, the code is never sent as part of the final response to the request. For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1).\n  example:\n  - \"The following example sets the SubStatusCode property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event. Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module. For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_9_1.cs)]\\n [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_9_1.vb)]\"\n  syntax:\n    content: public int SubStatusCode { get; set; }\n    return:\n      type: System.Int32\n      description: An integer value that represents the [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] sub status code.\n  overload: System.Web.HttpResponse.SubStatusCode*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] and at least the .NET Framework version 3.0.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: The status code is set after all HTTP headers have been sent.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.SupportsAsyncFlush\n  id: SupportsAsyncFlush\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: SupportsAsyncFlush\n  nameWithType: HttpResponse.SupportsAsyncFlush\n  fullName: System.Web.HttpResponse.SupportsAsyncFlush\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value that indicates whether the connection supports asynchronous flush operations.\n  remarks: This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName> property.\n  syntax:\n    content: public bool SupportsAsyncFlush { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the connection supports asynchronous flush operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.SupportsAsyncFlush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.SuppressContent\n  id: SuppressContent\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: SuppressContent\n  nameWithType: HttpResponse.SuppressContent\n  fullName: System.Web.HttpResponse.SuppressContent\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value indicating whether to send HTTP content to the client.\n  remarks: ''\n  example:\n  - \"The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false. If it is, the SuppressContent property is set to true to stop the response from being sent.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprespons_6_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprespons_6_1.aspx)]\"\n  syntax:\n    content: public bool SuppressContent { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to suppress output; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.SuppressContent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader\n  id: SuppressDefaultCacheControlHeader\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: SuppressDefaultCacheControlHeader\n  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader\n  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: \"[Supported in the .NET Framework 4.5.2 and later versions]  \\n  \\n Gets or sets a value indicating whether to suppress the default `Cache Control: private` header for the current HTTP response.\"\n  remarks: \"By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response. This property allows suppressing this default response header on a per-request basis. The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee).  \\n  \\n Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default. This treatment can lead to the inadvertent caching of sensitive information. See [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) for more information.\"\n  syntax:\n    content: public bool SuppressDefaultCacheControlHeader { get; set; }\n    return:\n      type: System.Boolean\n      description: '<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to suppress the default `Cache Control: private` header for the current HTTP response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.'\n  overload: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect\n  id: SuppressFormsAuthenticationRedirect\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: SuppressFormsAuthenticationRedirect\n  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect\n  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.\n  remarks: By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page. This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request. This property provides a way to suppress the redirect behavior and send the original status code to the client.\n  syntax:\n    content: public bool SuppressFormsAuthenticationRedirect { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if forms authentication redirection should be suppressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.TransmitFile(System.String)\n  id: TransmitFile(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: TransmitFile(String)\n  nameWithType: HttpResponse.TransmitFile(String)\n  fullName: System.Web.HttpResponse.TransmitFile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes the specified file directly to an HTTP response output stream, without buffering it in memory.\n  syntax:\n    content: public void TransmitFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write to the HTTP output.\n  overload: System.Web.HttpResponse.TransmitFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)\n  id: TransmitFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: TransmitFile(String,Int64,Int64)\n  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)\n  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.\n  remarks: If you specify 0 as the `offset` parameter and -1 as the `length` parameter, the whole file is sent.\n  syntax:\n    content: public void TransmitFile (string filename, long offset, long length);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write to the HTTP output.\n    - id: offset\n      type: System.Int64\n      description: The position in the file to begin to write to the HTTP output.\n    - id: length\n      type: System.Int64\n      description: The number of bytes to be transmitted.\n  overload: System.Web.HttpResponse.TransmitFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>offset</code> parameter is less than zero.  \\n  \\n \\\\- or -  \\n  \\n The <code>length</code> parameter is less than -1.  \\n  \\n \\\\- or -  \\n  \\n The <code>length</code> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"The out-of-process worker request is not supported.  \\n  \\n \\\\- or -  \\n  \\n The response is not using an <xref href=\\\"System.Web.HttpWriter\\\"></xref> object.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>offset</code> parameter is less than zero or greater than the file size.  \\n  \\n \\\\- or -  \\n  \\n The <code>length</code> parameter is less than -1 or greater than the value of the <code>offset</code> parameter plus the file size.\"\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.TrySkipIisCustomErrors\n  id: TrySkipIisCustomErrors\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: TrySkipIisCustomErrors\n  nameWithType: HttpResponse.TrySkipIisCustomErrors\n  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets a value that specifies whether [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] custom errors are disabled.\n  remarks: The TrySkipIisCustomErrors property is used only when your application is hosted in IIS 7.0. When running in Classic mode in IIS 7.0 the TrySkipIisCustomErrors property default value is `true`. When running in Integrated mode, the TrySkipIisCustomErrors property default value is `false`.\n  syntax:\n    content: public bool TrySkipIisCustomErrors { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to disable IIS custom errors; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.HttpResponse.TrySkipIisCustomErrors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Write(System.Char)\n  id: Write(System.Char)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Write(Char)\n  nameWithType: HttpResponse.Write(Char)\n  fullName: System.Web.HttpResponse.Write(Char)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes a character to an HTTP response output stream.\n  remarks: ''\n  example:\n  - \"The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_7_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_7_1.aspx)]\"\n  syntax:\n    content: public void Write (char ch);\n    parameters:\n    - id: ch\n      type: System.Char\n      description: The character to write to the HTTP output stream.\n  overload: System.Web.HttpResponse.Write*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Write(System.Object)\n  id: Write(System.Object)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Write(Object)\n  nameWithType: HttpResponse.Write(Object)\n  fullName: System.Web.HttpResponse.Write(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes an <xref:System.Object> to an HTTP response stream.\n  syntax:\n    content: public void Write (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to write to the HTTP output stream.\n  overload: System.Web.HttpResponse.Write*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Write(System.String)\n  id: Write(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: HttpResponse.Write(String)\n  fullName: System.Web.HttpResponse.Write(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes a string to an HTTP response output stream.\n  remarks: \"Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client. Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source. This security risk is referred to as a cross-site scripting attack. You should always validate data that is received from a client when it will be transmitted from your site to client browsers.  \\n  \\n Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing. This technique is useful for data that was not validated when it was received.  \\n  \\n When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.  \\n  \\n For more information about cross-site scripting attacks, see article Q252985, \\\"How to Prevent Cross-Site Scripting Security Issues\\\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) Web site.\"\n  example:\n  - \"The following example echoes the client's name back to the client's browser. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.  \\n  \\n [!code-vb[System.Web.HttpResponse.Write#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_1_1.vb)]\\n [!code-cs[System.Web.HttpResponse.Write#1](~/add/codesnippet/csharp/m-system.web.httprespons_1_1.cs)]\"\n  syntax:\n    content: public void Write (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string to write to the HTTP output stream.\n  overload: System.Web.HttpResponse.Write*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)\n  id: Write(System.Char[],System.Int32,System.Int32)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: Write(Char[],Int32,Int32)\n  nameWithType: HttpResponse.Write(Char[],Int32,Int32)\n  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes an array of characters to an HTTP response output stream.\n  remarks: ''\n  example:\n  - \"The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \\n  \\n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_20_1.aspx)]\\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_20_1.aspx)]\"\n  syntax:\n    content: public void Write (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: The character array to write.\n    - id: index\n      type: System.Int32\n      description: The position in the character array where writing starts.\n    - id: count\n      type: System.Int32\n      description: The number of characters to write, beginning at `index`.\n  overload: System.Web.HttpResponse.Write*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.WriteFile(System.String)\n  id: WriteFile(System.String)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: WriteFile(String)\n  nameWithType: HttpResponse.WriteFile(String)\n  fullName: System.Web.HttpResponse.WriteFile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes the contents of the specified file directly to an HTTP response output stream as a file block.\n  remarks: 'When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.'\n  example:\n  - \"The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \\n  \\n [!code-vb[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_18_1.vb)]\\n [!code-cs[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_18_1.cs)]\"\n  syntax:\n    content: public void WriteFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write to the HTTP output.\n  overload: System.Web.HttpResponse.WriteFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)\n  id: WriteFile(System.String,System.Boolean)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: WriteFile(String,Boolean)\n  nameWithType: HttpResponse.WriteFile(String,Boolean)\n  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes the contents of the specified file directly to an HTTP response output stream as a memory block.\n  remarks: 'When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.'\n  example:\n  - \"The following example writes a file to memory.  \\n  \\n [!code-cs[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_3_1.cs)]\\n [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_3_1.vb)]\"\n  syntax:\n    content: public void WriteFile (string filename, bool readIntoMemory);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write into a memory block.\n    - id: readIntoMemory\n      type: System.Boolean\n      description: Indicates whether the file will be written into a memory block.\n  overload: System.Web.HttpResponse.WriteFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)\n  id: WriteFile(System.IntPtr,System.Int64,System.Int64)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: WriteFile(IntPtr,Int64,Int64)\n  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)\n  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes the specified file directly to an HTTP response output stream.\n  remarks: 'When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.'\n  example:\n  - \"The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \\n  \\n [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_12_1.vb)]\\n [!code-cs[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_12_1.cs)]\"\n  syntax:\n    content: public void WriteFile (IntPtr fileHandle, long offset, long size);\n    parameters:\n    - id: fileHandle\n      type: System.IntPtr\n      description: The file handle of the file to write to the HTTP output stream.\n    - id: offset\n      type: System.Int64\n      description: The byte position in the file where writing will start.\n    - id: size\n      type: System.Int64\n      description: The number of bytes to write to the output stream.\n  overload: System.Web.HttpResponse.WriteFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileHandler</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"<code>offset</code> is less than 0.  \\n  \\n \\\\- or -  \\n  \\n <code>size</code> is greater than the file size minus <code>offset</code>.\"\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)\n  id: WriteFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: WriteFile(String,Int64,Int64)\n  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)\n  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Writes the specified file directly to an HTTP response output stream.\n  remarks: 'When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, \"PRB: Response.WriteFile Cannot Download a Large File\" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.'\n  example:\n  - \"The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.  \\n  \\n [!code-cs[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_5_1.cs)]\\n [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_5_1.vb)]\"\n  syntax:\n    content: public void WriteFile (string filename, long offset, long size);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The name of the file to write to the HTTP output stream.\n    - id: offset\n      type: System.Int64\n      description: The byte position in the file where writing will start.\n    - id: size\n      type: System.Int64\n      description: The number of bytes to write to the output stream.\n  overload: System.Web.HttpResponse.WriteFile*\n  exceptions:\n  - type: System.Web.HttpException\n    commentId: T:System.Web.HttpException\n    description: \"<code>offset</code> is less than 0.  \\n  \\n \\\\- or -  \\n  \\n <code>size</code> is greater than the file size minus <code>offset</code>.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>filename</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)\n  id: WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)\n  parent: System.Web.HttpResponse\n  langs:\n  - csharp\n  name: WriteSubstitution(HttpResponseSubstitutionCallback)\n  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)\n  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.\n  remarks: \"You can use the WriteSubstitution method for post-cache substitution in your output-cached pages. By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache. To initiate the replacement, call the WriteSubstitution method, passing it the callback method, which must be thread safe and can be either of the following:  \\n  \\n-   A static method on the container page or user control.  \\n  \\n-   A static or instance method on another arbitrary object.  \\n  \\n On the first request to the page, the WriteSubstitution calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output. Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests. Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.  \\n  \\n> [!NOTE]\\n>  Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level. This is also known as fragment caching. For more information, see [Caching Portions of an ASP.NET Page](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);\n    parameters:\n    - id: callback\n      type: System.Web.HttpResponseSubstitutionCallback\n      description: The method, user control, or object to substitute.\n  overload: System.Web.HttpResponse.WriteSubstitution*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The target of the <code>callback</code> parameter is of type <xref href=\"System.Web.UI.Control\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Web.HttpException\n  parent: System.Web\n  isExternal: false\n  name: HttpException\n  nameWithType: HttpException\n  fullName: System.Web.HttpException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Threading.ThreadAbortException\n  parent: System.Threading\n  isExternal: false\n  name: ThreadAbortException\n  nameWithType: ThreadAbortException\n  fullName: System.Threading.ThreadAbortException\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.ApplicationException\n  parent: System\n  isExternal: false\n  name: ApplicationException\n  nameWithType: ApplicationException\n  fullName: System.ApplicationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: HttpResponse(TextWriter)\n  nameWithType: HttpResponse.HttpResponse(TextWriter)\n  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheDependency(CacheDependency[])\n  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])\n  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])\n- uid: System.Web.Caching.CacheDependency[]\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheDependency\n  nameWithType: CacheDependency\n  fullName: System.Web.Caching.CacheDependency[]\n  spec.csharp:\n  - uid: System.Web.Caching.CacheDependency\n    name: CacheDependency\n    nameWithType: CacheDependency\n    fullName: CacheDependency[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheItemDependencies(ArrayList)\n  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)\n  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheItemDependencies(String[])\n  nameWithType: HttpResponse.AddCacheItemDependencies(String[])\n  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheItemDependency(String)\n  nameWithType: HttpResponse.AddCacheItemDependency(String)\n  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddFileDependencies(ArrayList)\n  nameWithType: HttpResponse.AddFileDependencies(ArrayList)\n  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)\n- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddFileDependencies(String[])\n  nameWithType: HttpResponse.AddFileDependencies(String[])\n  fullName: System.Web.HttpResponse.AddFileDependencies(String[])\n- uid: System.Web.HttpResponse.AddFileDependency(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddFileDependency(String)\n  nameWithType: HttpResponse.AddFileDependency(String)\n  fullName: System.Web.HttpResponse.AddFileDependency(String)\n- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddHeader(String,String)\n  nameWithType: HttpResponse.AddHeader(String,String)\n  fullName: System.Web.HttpResponse.AddHeader(String,String)\n- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddOnSendingHeaders(Action<HttpContext>)\n  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)\n  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)\n- uid: System.Web.ISubscriptionToken\n  parent: System.Web\n  isExternal: false\n  name: ISubscriptionToken\n  nameWithType: ISubscriptionToken\n  fullName: System.Web.ISubscriptionToken\n- uid: System.Action{System.Web.HttpContext}\n  parent: System\n  isExternal: true\n  name: Action<HttpContext>\n  nameWithType: Action<HttpContext>\n  fullName: System.Action<System.Web.HttpContext>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Web.HttpContext>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.HttpContext\n    name: HttpContext\n    nameWithType: HttpContext\n    fullName: HttpContext\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AppendCookie(HttpCookie)\n  nameWithType: HttpResponse.AppendCookie(HttpCookie)\n  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)\n- uid: System.Web.HttpCookie\n  parent: System.Web\n  isExternal: false\n  name: HttpCookie\n  nameWithType: HttpCookie\n  fullName: System.Web.HttpCookie\n- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AppendHeader(String,String)\n  nameWithType: HttpResponse.AppendHeader(String,String)\n  fullName: System.Web.HttpResponse.AppendHeader(String,String)\n- uid: System.Web.HttpResponse.AppendToLog(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AppendToLog(String)\n  nameWithType: HttpResponse.AppendToLog(String)\n  fullName: System.Web.HttpResponse.AppendToLog(String)\n- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ApplyAppPathModifier(String)\n  nameWithType: HttpResponse.ApplyAppPathModifier(String)\n  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)\n- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: BeginFlush(AsyncCallback,Object)\n  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)\n  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: BinaryWrite(Byte[])\n  nameWithType: HttpResponse.BinaryWrite(Byte[])\n  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpResponse.Buffer\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Buffer\n  nameWithType: HttpResponse.Buffer\n  fullName: System.Web.HttpResponse.Buffer\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpResponse.BufferOutput\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: BufferOutput\n  nameWithType: HttpResponse.BufferOutput\n  fullName: System.Web.HttpResponse.BufferOutput\n- uid: System.Web.HttpResponse.Cache\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Cache\n  nameWithType: HttpResponse.Cache\n  fullName: System.Web.HttpResponse.Cache\n- uid: System.Web.HttpCachePolicy\n  parent: System.Web\n  isExternal: false\n  name: HttpCachePolicy\n  nameWithType: HttpCachePolicy\n  fullName: System.Web.HttpCachePolicy\n- uid: System.Web.HttpResponse.CacheControl\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: CacheControl\n  nameWithType: HttpResponse.CacheControl\n  fullName: System.Web.HttpResponse.CacheControl\n- uid: System.Web.HttpResponse.Charset\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Charset\n  nameWithType: HttpResponse.Charset\n  fullName: System.Web.HttpResponse.Charset\n- uid: System.Web.HttpResponse.Clear\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Clear()\n  nameWithType: HttpResponse.Clear()\n  fullName: System.Web.HttpResponse.Clear()\n- uid: System.Web.HttpResponse.ClearContent\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ClearContent()\n  nameWithType: HttpResponse.ClearContent()\n  fullName: System.Web.HttpResponse.ClearContent()\n- uid: System.Web.HttpResponse.ClearHeaders\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ClearHeaders()\n  nameWithType: HttpResponse.ClearHeaders()\n  fullName: System.Web.HttpResponse.ClearHeaders()\n- uid: System.Web.HttpResponse.ClientDisconnectedToken\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ClientDisconnectedToken\n  nameWithType: HttpResponse.ClientDisconnectedToken\n  fullName: System.Web.HttpResponse.ClientDisconnectedToken\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: true\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Web.HttpResponse.Close\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Close()\n  nameWithType: HttpResponse.Close()\n  fullName: System.Web.HttpResponse.Close()\n- uid: System.Web.HttpResponse.ContentEncoding\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ContentEncoding\n  nameWithType: HttpResponse.ContentEncoding\n  fullName: System.Web.HttpResponse.ContentEncoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Web.HttpResponse.ContentType\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ContentType\n  nameWithType: HttpResponse.ContentType\n  fullName: System.Web.HttpResponse.ContentType\n- uid: System.Web.HttpResponse.Cookies\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Cookies\n  nameWithType: HttpResponse.Cookies\n  fullName: System.Web.HttpResponse.Cookies\n- uid: System.Web.HttpCookieCollection\n  parent: System.Web\n  isExternal: false\n  name: HttpCookieCollection\n  nameWithType: HttpCookieCollection\n  fullName: System.Web.HttpCookieCollection\n- uid: System.Web.HttpResponse.DisableKernelCache\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: DisableKernelCache()\n  nameWithType: HttpResponse.DisableKernelCache()\n  fullName: System.Web.HttpResponse.DisableKernelCache()\n- uid: System.Web.HttpResponse.DisableUserCache\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: DisableUserCache()\n  nameWithType: HttpResponse.DisableUserCache()\n  fullName: System.Web.HttpResponse.DisableUserCache()\n- uid: System.Web.HttpResponse.End\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: End()\n  nameWithType: HttpResponse.End()\n  fullName: System.Web.HttpResponse.End()\n- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: EndFlush(IAsyncResult)\n  nameWithType: HttpResponse.EndFlush(IAsyncResult)\n  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)\n- uid: System.Web.HttpResponse.Expires\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Expires\n  nameWithType: HttpResponse.Expires\n  fullName: System.Web.HttpResponse.Expires\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpResponse.ExpiresAbsolute\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ExpiresAbsolute\n  nameWithType: HttpResponse.ExpiresAbsolute\n  fullName: System.Web.HttpResponse.ExpiresAbsolute\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.HttpResponse.Filter\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Filter\n  nameWithType: HttpResponse.Filter\n  fullName: System.Web.HttpResponse.Filter\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Web.HttpResponse.Flush\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Flush()\n  nameWithType: HttpResponse.Flush()\n  fullName: System.Web.HttpResponse.Flush()\n- uid: System.Web.HttpResponse.FlushAsync\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: HttpResponse.FlushAsync()\n  fullName: System.Web.HttpResponse.FlushAsync()\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Web.HttpResponse.HeaderEncoding\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: HeaderEncoding\n  nameWithType: HttpResponse.HeaderEncoding\n  fullName: System.Web.HttpResponse.HeaderEncoding\n- uid: System.Web.HttpResponse.Headers\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Headers\n  nameWithType: HttpResponse.Headers\n  fullName: System.Web.HttpResponse.Headers\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Web.HttpResponse.HeadersWritten\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: HeadersWritten\n  nameWithType: HttpResponse.HeadersWritten\n  fullName: System.Web.HttpResponse.HeadersWritten\n- uid: System.Web.HttpResponse.IsClientConnected\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: IsClientConnected\n  nameWithType: HttpResponse.IsClientConnected\n  fullName: System.Web.HttpResponse.IsClientConnected\n- uid: System.Web.HttpResponse.IsRequestBeingRedirected\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: IsRequestBeingRedirected\n  nameWithType: HttpResponse.IsRequestBeingRedirected\n  fullName: System.Web.HttpResponse.IsRequestBeingRedirected\n- uid: System.Web.HttpResponse.Output\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Output\n  nameWithType: HttpResponse.Output\n  fullName: System.Web.HttpResponse.Output\n- uid: System.Web.HttpResponse.OutputStream\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: OutputStream\n  nameWithType: HttpResponse.OutputStream\n  fullName: System.Web.HttpResponse.OutputStream\n- uid: System.Web.HttpResponse.Pics(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Pics(String)\n  nameWithType: HttpResponse.Pics(String)\n  fullName: System.Web.HttpResponse.Pics(String)\n- uid: System.Web.HttpResponse.PushPromise(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: PushPromise(String)\n  nameWithType: HttpResponse.PushPromise(String)\n  fullName: System.Web.HttpResponse.PushPromise(String)\n- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: PushPromise(String,String,NameValueCollection)\n  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)\n  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)\n- uid: System.Web.HttpResponse.Redirect(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Redirect(String)\n  nameWithType: HttpResponse.Redirect(String)\n  fullName: System.Web.HttpResponse.Redirect(String)\n- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Redirect(String,Boolean)\n  nameWithType: HttpResponse.Redirect(String,Boolean)\n  fullName: System.Web.HttpResponse.Redirect(String,Boolean)\n- uid: System.Web.HttpResponse.RedirectLocation\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectLocation\n  nameWithType: HttpResponse.RedirectLocation\n  fullName: System.Web.HttpResponse.RedirectLocation\n- uid: System.Web.HttpResponse.RedirectPermanent(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectPermanent(String)\n  nameWithType: HttpResponse.RedirectPermanent(String)\n  fullName: System.Web.HttpResponse.RedirectPermanent(String)\n- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectPermanent(String,Boolean)\n  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)\n  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)\n- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoute(Object)\n  nameWithType: HttpResponse.RedirectToRoute(Object)\n  fullName: System.Web.HttpResponse.RedirectToRoute(Object)\n- uid: System.Web.HttpResponse.RedirectToRoute(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoute(String)\n  nameWithType: HttpResponse.RedirectToRoute(String)\n  fullName: System.Web.HttpResponse.RedirectToRoute(String)\n- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoute(RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)\n- uid: System.Web.Routing.RouteValueDictionary\n  parent: System.Web.Routing\n  isExternal: true\n  name: RouteValueDictionary\n  nameWithType: RouteValueDictionary\n  fullName: System.Web.Routing.RouteValueDictionary\n- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoute(String,Object)\n  nameWithType: HttpResponse.RedirectToRoute(String,Object)\n  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)\n- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoute(String,RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoutePermanent(Object)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoutePermanent(String)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(String)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoutePermanent(RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoutePermanent(String,Object)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoutePermanent(String,RouteValueDictionary)\n  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)\n  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)\n- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RemoveOutputCacheItem(String)\n  nameWithType: HttpResponse.RemoveOutputCacheItem(String)\n  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)\n- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RemoveOutputCacheItem(String,String)\n  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)\n  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)\n- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SetCookie(HttpCookie)\n  nameWithType: HttpResponse.SetCookie(HttpCookie)\n  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)\n- uid: System.Web.HttpResponse.Status\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Status\n  nameWithType: HttpResponse.Status\n  fullName: System.Web.HttpResponse.Status\n- uid: System.Web.HttpResponse.StatusCode\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: StatusCode\n  nameWithType: HttpResponse.StatusCode\n  fullName: System.Web.HttpResponse.StatusCode\n- uid: System.Web.HttpResponse.StatusDescription\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: StatusDescription\n  nameWithType: HttpResponse.StatusDescription\n  fullName: System.Web.HttpResponse.StatusDescription\n- uid: System.Web.HttpResponse.SubStatusCode\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SubStatusCode\n  nameWithType: HttpResponse.SubStatusCode\n  fullName: System.Web.HttpResponse.SubStatusCode\n- uid: System.Web.HttpResponse.SupportsAsyncFlush\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SupportsAsyncFlush\n  nameWithType: HttpResponse.SupportsAsyncFlush\n  fullName: System.Web.HttpResponse.SupportsAsyncFlush\n- uid: System.Web.HttpResponse.SuppressContent\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SuppressContent\n  nameWithType: HttpResponse.SuppressContent\n  fullName: System.Web.HttpResponse.SuppressContent\n- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SuppressDefaultCacheControlHeader\n  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader\n  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader\n- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SuppressFormsAuthenticationRedirect\n  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect\n  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect\n- uid: System.Web.HttpResponse.TransmitFile(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: TransmitFile(String)\n  nameWithType: HttpResponse.TransmitFile(String)\n  fullName: System.Web.HttpResponse.TransmitFile(String)\n- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: TransmitFile(String,Int64,Int64)\n  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)\n  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Web.HttpResponse.TrySkipIisCustomErrors\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: TrySkipIisCustomErrors\n  nameWithType: HttpResponse.TrySkipIisCustomErrors\n  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors\n- uid: System.Web.HttpResponse.Write(System.Char)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Write(Char)\n  nameWithType: HttpResponse.Write(Char)\n  fullName: System.Web.HttpResponse.Write(Char)\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Web.HttpResponse.Write(System.Object)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Write(Object)\n  nameWithType: HttpResponse.Write(Object)\n  fullName: System.Web.HttpResponse.Write(Object)\n- uid: System.Web.HttpResponse.Write(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Write(String)\n  nameWithType: HttpResponse.Write(String)\n  fullName: System.Web.HttpResponse.Write(String)\n- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Write(Char[],Int32,Int32)\n  nameWithType: HttpResponse.Write(Char[],Int32,Int32)\n  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)\n- uid: System.Char[]\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: Char[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.HttpResponse.WriteFile(System.String)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteFile(String)\n  nameWithType: HttpResponse.WriteFile(String)\n  fullName: System.Web.HttpResponse.WriteFile(String)\n- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteFile(String,Boolean)\n  nameWithType: HttpResponse.WriteFile(String,Boolean)\n  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)\n- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteFile(IntPtr,Int64,Int64)\n  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)\n  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteFile(String,Int64,Int64)\n  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)\n  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)\n- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteSubstitution(HttpResponseSubstitutionCallback)\n  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)\n  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)\n- uid: System.Web.HttpResponseSubstitutionCallback\n  parent: System.Web\n  isExternal: false\n  name: HttpResponseSubstitutionCallback\n  nameWithType: HttpResponseSubstitutionCallback\n  fullName: System.Web.HttpResponseSubstitutionCallback\n- uid: System.Web.HttpResponse.#ctor*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: HttpResponse\n  nameWithType: HttpResponse.HttpResponse\n- uid: System.Web.HttpResponse.AddCacheDependency*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheDependency\n  nameWithType: HttpResponse.AddCacheDependency\n- uid: System.Web.HttpResponse.AddCacheItemDependencies*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheItemDependencies\n  nameWithType: HttpResponse.AddCacheItemDependencies\n- uid: System.Web.HttpResponse.AddCacheItemDependency*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddCacheItemDependency\n  nameWithType: HttpResponse.AddCacheItemDependency\n- uid: System.Web.HttpResponse.AddFileDependencies*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddFileDependencies\n  nameWithType: HttpResponse.AddFileDependencies\n- uid: System.Web.HttpResponse.AddFileDependency*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddFileDependency\n  nameWithType: HttpResponse.AddFileDependency\n- uid: System.Web.HttpResponse.AddHeader*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddHeader\n  nameWithType: HttpResponse.AddHeader\n- uid: System.Web.HttpResponse.AddOnSendingHeaders*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AddOnSendingHeaders\n  nameWithType: HttpResponse.AddOnSendingHeaders\n- uid: System.Web.HttpResponse.AppendCookie*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AppendCookie\n  nameWithType: HttpResponse.AppendCookie\n- uid: System.Web.HttpResponse.AppendHeader*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AppendHeader\n  nameWithType: HttpResponse.AppendHeader\n- uid: System.Web.HttpResponse.AppendToLog*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: AppendToLog\n  nameWithType: HttpResponse.AppendToLog\n- uid: System.Web.HttpResponse.ApplyAppPathModifier*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ApplyAppPathModifier\n  nameWithType: HttpResponse.ApplyAppPathModifier\n- uid: System.Web.HttpResponse.BeginFlush*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: BeginFlush\n  nameWithType: HttpResponse.BeginFlush\n- uid: System.Web.HttpResponse.BinaryWrite*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: BinaryWrite\n  nameWithType: HttpResponse.BinaryWrite\n- uid: System.Web.HttpResponse.Buffer*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Buffer\n  nameWithType: HttpResponse.Buffer\n- uid: System.Web.HttpResponse.BufferOutput*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: BufferOutput\n  nameWithType: HttpResponse.BufferOutput\n- uid: System.Web.HttpResponse.Cache*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Cache\n  nameWithType: HttpResponse.Cache\n- uid: System.Web.HttpResponse.CacheControl*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: CacheControl\n  nameWithType: HttpResponse.CacheControl\n- uid: System.Web.HttpResponse.Charset*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Charset\n  nameWithType: HttpResponse.Charset\n- uid: System.Web.HttpResponse.Clear*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Clear\n  nameWithType: HttpResponse.Clear\n- uid: System.Web.HttpResponse.ClearContent*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ClearContent\n  nameWithType: HttpResponse.ClearContent\n- uid: System.Web.HttpResponse.ClearHeaders*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ClearHeaders\n  nameWithType: HttpResponse.ClearHeaders\n- uid: System.Web.HttpResponse.ClientDisconnectedToken*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ClientDisconnectedToken\n  nameWithType: HttpResponse.ClientDisconnectedToken\n- uid: System.Web.HttpResponse.Close*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Close\n  nameWithType: HttpResponse.Close\n- uid: System.Web.HttpResponse.ContentEncoding*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ContentEncoding\n  nameWithType: HttpResponse.ContentEncoding\n- uid: System.Web.HttpResponse.ContentType*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ContentType\n  nameWithType: HttpResponse.ContentType\n- uid: System.Web.HttpResponse.Cookies*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Cookies\n  nameWithType: HttpResponse.Cookies\n- uid: System.Web.HttpResponse.DisableKernelCache*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: DisableKernelCache\n  nameWithType: HttpResponse.DisableKernelCache\n- uid: System.Web.HttpResponse.DisableUserCache*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: DisableUserCache\n  nameWithType: HttpResponse.DisableUserCache\n- uid: System.Web.HttpResponse.End*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: End\n  nameWithType: HttpResponse.End\n- uid: System.Web.HttpResponse.EndFlush*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: EndFlush\n  nameWithType: HttpResponse.EndFlush\n- uid: System.Web.HttpResponse.Expires*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Expires\n  nameWithType: HttpResponse.Expires\n- uid: System.Web.HttpResponse.ExpiresAbsolute*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: ExpiresAbsolute\n  nameWithType: HttpResponse.ExpiresAbsolute\n- uid: System.Web.HttpResponse.Filter*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Filter\n  nameWithType: HttpResponse.Filter\n- uid: System.Web.HttpResponse.Flush*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Flush\n  nameWithType: HttpResponse.Flush\n- uid: System.Web.HttpResponse.FlushAsync*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: FlushAsync\n  nameWithType: HttpResponse.FlushAsync\n- uid: System.Web.HttpResponse.HeaderEncoding*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: HeaderEncoding\n  nameWithType: HttpResponse.HeaderEncoding\n- uid: System.Web.HttpResponse.Headers*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Headers\n  nameWithType: HttpResponse.Headers\n- uid: System.Web.HttpResponse.HeadersWritten*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: HeadersWritten\n  nameWithType: HttpResponse.HeadersWritten\n- uid: System.Web.HttpResponse.IsClientConnected*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: IsClientConnected\n  nameWithType: HttpResponse.IsClientConnected\n- uid: System.Web.HttpResponse.IsRequestBeingRedirected*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: IsRequestBeingRedirected\n  nameWithType: HttpResponse.IsRequestBeingRedirected\n- uid: System.Web.HttpResponse.Output*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Output\n  nameWithType: HttpResponse.Output\n- uid: System.Web.HttpResponse.OutputStream*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: OutputStream\n  nameWithType: HttpResponse.OutputStream\n- uid: System.Web.HttpResponse.Pics*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Pics\n  nameWithType: HttpResponse.Pics\n- uid: System.Web.HttpResponse.PushPromise*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: PushPromise\n  nameWithType: HttpResponse.PushPromise\n- uid: System.Web.HttpResponse.Redirect*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Redirect\n  nameWithType: HttpResponse.Redirect\n- uid: System.Web.HttpResponse.RedirectLocation*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectLocation\n  nameWithType: HttpResponse.RedirectLocation\n- uid: System.Web.HttpResponse.RedirectPermanent*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectPermanent\n  nameWithType: HttpResponse.RedirectPermanent\n- uid: System.Web.HttpResponse.RedirectToRoute*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoute\n  nameWithType: HttpResponse.RedirectToRoute\n- uid: System.Web.HttpResponse.RedirectToRoutePermanent*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RedirectToRoutePermanent\n  nameWithType: HttpResponse.RedirectToRoutePermanent\n- uid: System.Web.HttpResponse.RemoveOutputCacheItem*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: RemoveOutputCacheItem\n  nameWithType: HttpResponse.RemoveOutputCacheItem\n- uid: System.Web.HttpResponse.SetCookie*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SetCookie\n  nameWithType: HttpResponse.SetCookie\n- uid: System.Web.HttpResponse.Status*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Status\n  nameWithType: HttpResponse.Status\n- uid: System.Web.HttpResponse.StatusCode*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: StatusCode\n  nameWithType: HttpResponse.StatusCode\n- uid: System.Web.HttpResponse.StatusDescription*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: StatusDescription\n  nameWithType: HttpResponse.StatusDescription\n- uid: System.Web.HttpResponse.SubStatusCode*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SubStatusCode\n  nameWithType: HttpResponse.SubStatusCode\n- uid: System.Web.HttpResponse.SupportsAsyncFlush*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SupportsAsyncFlush\n  nameWithType: HttpResponse.SupportsAsyncFlush\n- uid: System.Web.HttpResponse.SuppressContent*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SuppressContent\n  nameWithType: HttpResponse.SuppressContent\n- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SuppressDefaultCacheControlHeader\n  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader\n- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: SuppressFormsAuthenticationRedirect\n  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect\n- uid: System.Web.HttpResponse.TransmitFile*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: TransmitFile\n  nameWithType: HttpResponse.TransmitFile\n- uid: System.Web.HttpResponse.TrySkipIisCustomErrors*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: TrySkipIisCustomErrors\n  nameWithType: HttpResponse.TrySkipIisCustomErrors\n- uid: System.Web.HttpResponse.Write*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: Write\n  nameWithType: HttpResponse.Write\n- uid: System.Web.HttpResponse.WriteFile*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteFile\n  nameWithType: HttpResponse.WriteFile\n- uid: System.Web.HttpResponse.WriteSubstitution*\n  parent: System.Web.HttpResponse\n  isExternal: false\n  name: WriteSubstitution\n  nameWithType: HttpResponse.WriteSubstitution\n"}