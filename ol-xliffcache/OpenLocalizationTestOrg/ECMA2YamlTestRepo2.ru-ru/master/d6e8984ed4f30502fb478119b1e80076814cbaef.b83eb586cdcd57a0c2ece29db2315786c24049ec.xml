{"nodes":[{"pos":[1247,1290],"content":"Specifies options for a dynamic update map.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies options for a dynamic update map.","pos":[0,43]}]},{"pos":[1303,2975],"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.       [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].       [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.       [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.       [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint.       [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.       [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation.","pos":[0,99]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> workflow versioning, workflow identity, and dynamic update, see the following topics.","pos":[100,244],"source":"[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics."},{"content":"<bpt id=\"p1\">[</bpt>Workflow Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=271561)</ept>    Describes the workflow versioning functionality introduced in <ph id=\"ph1\">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[251,444],"source":"[Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]."},{"content":"<bpt id=\"p1\">[</bpt>Dynamic Update<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271563)</ept>    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.","pos":[451,623],"source":"[Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update."},{"content":"<bpt id=\"p1\">[</bpt>Using WorkflowApplication Identity and Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271564)</ept>    Describes how to use &lt;xref:System.Activities.WorkflowIdentity&gt; to host multiple versions of a workflow side-by-side.","pos":[630,848],"source":"[Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side."},{"content":"<bpt id=\"p1\">[</bpt>Side by Side Versioning in WorkflowServiceHost<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271565)</ept>    Describes how to host multiple versions of a workflow on a single endpoint.","pos":[855,1029],"source":"[Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint."},{"content":"<bpt id=\"p1\">[</bpt>How to: Host Multiple Versions of a Workflow Side-by-Side<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271566)</ept>    This step in the <bpt id=\"p2\">[</bpt>Getting Started Tutorial<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.","pos":[1036,1359],"source":"[How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time."},{"content":"<bpt id=\"p1\">[</bpt>How to: Update the Definition of a Running Workflow Instance<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271567)</ept>    This step in the <bpt id=\"p2\">[</bpt>Getting Started Tutorial<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating persisted workflow instances to use a new workflow definition.","pos":[1366,1654],"source":"[How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition."}]},{"pos":[3896,4056],"content":"Calculates the map items used in the implementation of <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified activity definition.","needQuote":true,"needEscape":true,"source":"Calculates the map items used in the implementation of <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified activity definition."},{"pos":[4400,4438],"content":"The activity definition to be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity definition to be updated.","pos":[0,38]}]},{"pos":[4589,4614],"content":"The calculated map items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The calculated map items.","pos":[0,25]}]},{"pos":[5526,5703],"content":"Calculates the map items used in the implementation of <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified activity definition and environment..","needQuote":true,"needEscape":true,"source":"Calculates the map items used in the implementation of <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified activity definition and environment.."},{"pos":[6107,6145],"content":"The activity definition to be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity definition to be updated.","pos":[0,38]}]},{"pos":[6246,6262],"content":"The environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The environment.","pos":[0,16]}]},{"pos":[6413,6438],"content":"The calculated map items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The calculated map items.","pos":[0,25]}]},{"pos":[7099,7237],"content":"Calculates the map items used in <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified workflow definition.","needQuote":true,"needEscape":true,"source":"Calculates the map items used in <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified workflow definition."},{"pos":[7567,7605],"content":"The activity definition to be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity definition to be updated.","pos":[0,38]}]},{"pos":[7756,7781],"content":"The calculated map items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The calculated map items.","pos":[0,25]}]},{"pos":[8609,8763],"content":"Calculates the map items used in <bpt id=\"p1\">&lt;xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with specified workflow definition and environment.","needQuote":true,"needEscape":true,"source":"Calculates the map items used in <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified workflow definition and environment."},{"pos":[9153,9191],"content":"The activity definition to be updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity definition to be updated.","pos":[0,38]}]},{"pos":[9292,9308],"content":"The environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The environment.","pos":[0,16]}]},{"pos":[9459,9484],"content":"The calculated map items.","needQuote":true,"needEscape":true,"nodes":[{"content":"The calculated map items.","pos":[0,25]}]},{"pos":[10149,10179],"content":"Merges the dynamic update map.","needQuote":true,"needEscape":true,"nodes":[{"content":"Merges the dynamic update map.","pos":[0,30]}]},{"pos":[10444,10480],"content":"The collection of maps to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of maps to be merged.","pos":[0,36]}]},{"pos":[10573,10603],"content":"The merged dynamic update map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The merged dynamic update map.","pos":[0,30]}]},{"pos":[11365,11395],"content":"Merges the dynamic update map.","needQuote":true,"needEscape":true,"nodes":[{"content":"Merges the dynamic update map.","pos":[0,30]}]},{"pos":[11736,11758],"content":"The maps to be merged.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maps to be merged.","pos":[0,22]}]},{"pos":[11851,11881],"content":"The merged dynamic update map.","needQuote":true,"needEscape":true,"nodes":[{"content":"The merged dynamic update map.","pos":[0,30]}]},{"pos":[12392,12436],"content":"Gets the dynamic update map without changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the dynamic update map without changes.","pos":[0,44]}]},{"pos":[12634,12673],"content":"The dynamic update map without changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dynamic update map without changes.","pos":[0,39]}]},{"pos":[13333,13371],"content":"Displays the dynamic update map query.","needQuote":true,"needEscape":true,"nodes":[{"content":"Displays the dynamic update map query.","pos":[0,38]}]},{"pos":[13683,13716],"content":"The updated workflow information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The updated workflow information.","pos":[0,33]}]},{"pos":[13812,13845],"content":"The original workflow definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original workflow definition.","pos":[0,33]}]},{"pos":[13943,13972],"content":"The dynamic update map query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dynamic update map query.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap\n  id: DynamicUpdateMap\n  children:\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity)\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity)\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Activities.DynamicUpdate.DynamicUpdateMap[])\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap})\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges\n  - System.Activities.DynamicUpdate.DynamicUpdateMap.Query(System.Activities.Activity,System.Activities.Activity)\n  langs:\n  - csharp\n  name: DynamicUpdateMap\n  nameWithType: DynamicUpdateMap\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap\n  type: Class\n  summary: Specifies options for a dynamic update map.\n  remarks: \"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.  \\n  \\n [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)  \\n Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)  \\n Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.  \\n  \\n [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)  \\n Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.  \\n  \\n [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)  \\n Describes how to host multiple versions of a workflow on a single endpoint.  \\n  \\n [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.  \\n  \\n [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.DynamicUpdateMapConverter))]\n\n      [System.Runtime.Serialization.DataContract]\n\n      public class DynamicUpdateMap\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity)\n  id: CalculateImplementationMapItems(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: CalculateImplementationMapItems(Activity)\n  nameWithType: DynamicUpdateMap.CalculateImplementationMapItems(Activity)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Calculates the map items used in the implementation of <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified activity definition.\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<object,System.Activities.DynamicUpdate.DynamicUpdateMapItem> CalculateImplementationMapItems (System.Activities.Activity activityDefinitionToBeUpdated);\n    parameters:\n    - id: activityDefinitionToBeUpdated\n      type: System.Activities.Activity\n      description: The activity definition to be updated.\n    return:\n      type: System.Collections.Generic.IDictionary{System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem}\n      description: The calculated map items.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  id: CalculateImplementationMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: CalculateImplementationMapItems(Activity,LocationReferenceEnvironment)\n  nameWithType: DynamicUpdateMap.CalculateImplementationMapItems(Activity,LocationReferenceEnvironment)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(Activity,LocationReferenceEnvironment)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Calculates the map items used in the implementation of <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified activity definition and environment..\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<object,System.Activities.DynamicUpdate.DynamicUpdateMapItem> CalculateImplementationMapItems (System.Activities.Activity activityDefinitionToBeUpdated, System.Activities.LocationReferenceEnvironment environment);\n    parameters:\n    - id: activityDefinitionToBeUpdated\n      type: System.Activities.Activity\n      description: The activity definition to be updated.\n    - id: environment\n      type: System.Activities.LocationReferenceEnvironment\n      description: The environment.\n    return:\n      type: System.Collections.Generic.IDictionary{System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem}\n      description: The calculated map items.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity)\n  id: CalculateMapItems(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: CalculateMapItems(Activity)\n  nameWithType: DynamicUpdateMap.CalculateMapItems(Activity)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Calculates the map items used in <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified workflow definition.\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<object,System.Activities.DynamicUpdate.DynamicUpdateMapItem> CalculateMapItems (System.Activities.Activity workflowDefinitionToBeUpdated);\n    parameters:\n    - id: workflowDefinitionToBeUpdated\n      type: System.Activities.Activity\n      description: The activity definition to be updated.\n    return:\n      type: System.Collections.Generic.IDictionary{System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem}\n      description: The calculated map items.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  id: CalculateMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: CalculateMapItems(Activity,LocationReferenceEnvironment)\n  nameWithType: DynamicUpdateMap.CalculateMapItems(Activity,LocationReferenceEnvironment)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(Activity,LocationReferenceEnvironment)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Calculates the map items used in <xref href=\"System.Activities.DynamicUpdate.DynamicUpdateMap\"></xref> with specified workflow definition and environment.\n  syntax:\n    content: public static System.Collections.Generic.IDictionary<object,System.Activities.DynamicUpdate.DynamicUpdateMapItem> CalculateMapItems (System.Activities.Activity workflowDefinitionToBeUpdated, System.Activities.LocationReferenceEnvironment environment);\n    parameters:\n    - id: workflowDefinitionToBeUpdated\n      type: System.Activities.Activity\n      description: The activity definition to be updated.\n    - id: environment\n      type: System.Activities.LocationReferenceEnvironment\n      description: The environment.\n    return:\n      type: System.Collections.Generic.IDictionary{System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem}\n      description: The calculated map items.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Activities.DynamicUpdate.DynamicUpdateMap[])\n  id: Merge(System.Activities.DynamicUpdate.DynamicUpdateMap[])\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: Merge(DynamicUpdateMap[])\n  nameWithType: DynamicUpdateMap.Merge(DynamicUpdateMap[])\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(DynamicUpdateMap[])\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Merges the dynamic update map.\n  syntax:\n    content: public static System.Activities.DynamicUpdate.DynamicUpdateMap Merge (System.Activities.DynamicUpdate.DynamicUpdateMap[] maps);\n    parameters:\n    - id: maps\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap[]\n      description: The collection of maps to be merged.\n    return:\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap\n      description: The merged dynamic update map.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap})\n  id: Merge(System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap})\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: Merge(IEnumerable<DynamicUpdateMap>)\n  nameWithType: DynamicUpdateMap.Merge(IEnumerable<DynamicUpdateMap>)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(IEnumerable<DynamicUpdateMap>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Merges the dynamic update map.\n  syntax:\n    content: public static System.Activities.DynamicUpdate.DynamicUpdateMap Merge (System.Collections.Generic.IEnumerable<System.Activities.DynamicUpdate.DynamicUpdateMap> maps);\n    parameters:\n    - id: maps\n      type: System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap}\n      description: The maps to be merged.\n    return:\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap\n      description: The merged dynamic update map.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges\n  id: NoChanges\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: NoChanges\n  nameWithType: DynamicUpdateMap.NoChanges\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Gets the dynamic update map without changes.\n  syntax:\n    content: public static System.Activities.DynamicUpdate.DynamicUpdateMap NoChanges { get; }\n    return:\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap\n      description: The dynamic update map without changes.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Query(System.Activities.Activity,System.Activities.Activity)\n  id: Query(System.Activities.Activity,System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  langs:\n  - csharp\n  name: Query(Activity,Activity)\n  nameWithType: DynamicUpdateMap.Query(Activity,Activity)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.Query(Activity,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Displays the dynamic update map query.\n  syntax:\n    content: public System.Activities.DynamicUpdate.DynamicUpdateMapQuery Query (System.Activities.Activity updatedWorkflowDefinition, System.Activities.Activity originalWorkflowDefinition);\n    parameters:\n    - id: updatedWorkflowDefinition\n      type: System.Activities.Activity\n      description: The updated workflow information.\n    - id: originalWorkflowDefinition\n      type: System.Activities.Activity\n      description: The original workflow definition.\n    return:\n      type: System.Activities.DynamicUpdate.DynamicUpdateMapQuery\n      description: The dynamic update map query.\n  overload: System.Activities.DynamicUpdate.DynamicUpdateMap.Query*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: CalculateImplementationMapItems(Activity)\n  nameWithType: DynamicUpdateMap.CalculateImplementationMapItems(Activity)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(Activity)\n- uid: System.Collections.Generic.IDictionary{System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<Object,DynamicUpdateMapItem>\n  nameWithType: IDictionary<Object,DynamicUpdateMapItem>\n  fullName: System.Collections.Generic.IDictionary<System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.Object,System.Activities.DynamicUpdate.DynamicUpdateMapItem>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Activities.DynamicUpdate.DynamicUpdateMapItem\n    name: DynamicUpdateMapItem\n    nameWithType: DynamicUpdateMapItem\n    fullName: DynamicUpdateMapItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: CalculateImplementationMapItems(Activity,LocationReferenceEnvironment)\n  nameWithType: DynamicUpdateMap.CalculateImplementationMapItems(Activity,LocationReferenceEnvironment)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems(Activity,LocationReferenceEnvironment)\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: CalculateMapItems(Activity)\n  nameWithType: DynamicUpdateMap.CalculateMapItems(Activity)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(Activity)\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: CalculateMapItems(Activity,LocationReferenceEnvironment)\n  nameWithType: DynamicUpdateMap.CalculateMapItems(Activity,LocationReferenceEnvironment)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems(Activity,LocationReferenceEnvironment)\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Activities.DynamicUpdate.DynamicUpdateMap[])\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: Merge(DynamicUpdateMap[])\n  nameWithType: DynamicUpdateMap.Merge(DynamicUpdateMap[])\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(DynamicUpdateMap[])\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: DynamicUpdateMap\n  nameWithType: DynamicUpdateMap\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap[]\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: DynamicUpdateMap\n  nameWithType: DynamicUpdateMap\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap[]\n  spec.csharp:\n  - uid: System.Activities.DynamicUpdate.DynamicUpdateMap\n    name: DynamicUpdateMap\n    nameWithType: DynamicUpdateMap\n    fullName: DynamicUpdateMap[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap})\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: Merge(IEnumerable<DynamicUpdateMap>)\n  nameWithType: DynamicUpdateMap.Merge(IEnumerable<DynamicUpdateMap>)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge(IEnumerable<DynamicUpdateMap>)\n- uid: System.Collections.Generic.IEnumerable{System.Activities.DynamicUpdate.DynamicUpdateMap}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<DynamicUpdateMap>\n  nameWithType: IEnumerable<DynamicUpdateMap>\n  fullName: System.Collections.Generic.IEnumerable<System.Activities.DynamicUpdate.DynamicUpdateMap>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Activities.DynamicUpdate.DynamicUpdateMap>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.DynamicUpdate.DynamicUpdateMap\n    name: DynamicUpdateMap\n    nameWithType: DynamicUpdateMap\n    fullName: DynamicUpdateMap\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: NoChanges\n  nameWithType: DynamicUpdateMap.NoChanges\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Query(System.Activities.Activity,System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: Query(Activity,Activity)\n  nameWithType: DynamicUpdateMap.Query(Activity,Activity)\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap.Query(Activity,Activity)\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMapQuery\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: DynamicUpdateMapQuery\n  nameWithType: DynamicUpdateMapQuery\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMapQuery\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateImplementationMapItems*\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: CalculateImplementationMapItems\n  nameWithType: DynamicUpdateMap.CalculateImplementationMapItems\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.CalculateMapItems*\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: CalculateMapItems\n  nameWithType: DynamicUpdateMap.CalculateMapItems\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Merge*\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: Merge\n  nameWithType: DynamicUpdateMap.Merge\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.NoChanges*\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: NoChanges\n  nameWithType: DynamicUpdateMap.NoChanges\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap.Query*\n  parent: System.Activities.DynamicUpdate.DynamicUpdateMap\n  isExternal: false\n  name: Query\n  nameWithType: DynamicUpdateMap.Query\n"}