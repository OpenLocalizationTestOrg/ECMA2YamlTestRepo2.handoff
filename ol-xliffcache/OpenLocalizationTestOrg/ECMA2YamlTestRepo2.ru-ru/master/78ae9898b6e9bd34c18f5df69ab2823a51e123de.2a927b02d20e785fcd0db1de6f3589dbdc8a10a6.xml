{"nodes":[{"pos":[831,905],"content":"Provides the implementation for the binary client formatter sink provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the implementation for the binary client formatter sink provider.","pos":[0,74]}]},{"pos":[918,3071],"content":"A BinaryClientFormatterSinkProvider creates client formatter sinks that use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> to serialize messages for the client channel through which remoting messages flow.       The function of the formatter sink is to generate the necessary headers and serialize the message to the stream. After the formatter sink, the <xref:System.Runtime.Remoting.Messaging.IMessage> is forwarded to all sinks in the channel sink chain through the <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> or <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A> calls. At this stage, the message has already been serialized and is provided as information only. Sinks that need to create or modify the message must be placed in the sink chain before the formatter. You can do this by implementing both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces. The formatter sink can then be placed in the sink chain later.       Formatter sinks use sink configuration properties to configure the channel at run time. Sink properties can be specified in a configuration file, or programmatically, inside of a <xref:System.Collections.IDictionary>. In a configuration file all values are represented by strings, but when building a property <xref:System.Collections.IDictionary> programmatically, value types can be specified with their native values or with strings.       The following table shows the sink configuration properties that can be specified for the current sink provider.      |Property|Description|   |--------------|-----------------|   |`includeVersions`|Specifies whether the formatter will include versioning information. Values are `true` or `false`.|      > [!IMPORTANT] >  Using an instance of this object with untrusted data or across an unsecure channel is a security risk. Use this object only with trusted data and across a secure channel. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A BinaryClientFormatterSinkProvider creates client formatter sinks that use the &lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt; to serialize messages for the client channel through which remoting messages flow.","pos":[0,232],"source":"A BinaryClientFormatterSinkProvider creates client formatter sinks that use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> to serialize messages for the client channel through which remoting messages flow."},{"content":"The function of the formatter sink is to generate the necessary headers and serialize the message to the stream.","pos":[239,351]},{"content":"After the formatter sink, the &lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt; is forwarded to all sinks in the channel sink chain through the &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt; or &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A&gt; calls.","pos":[352,664],"source":" After the formatter sink, the <xref:System.Runtime.Remoting.Messaging.IMessage> is forwarded to all sinks in the channel sink chain through the <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> or <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A> calls."},{"content":"At this stage, the message has already been serialized and is provided as information only.","pos":[665,756]},{"content":"Sinks that need to create or modify the message must be placed in the sink chain before the formatter.","pos":[757,859]},{"content":"You can do this by implementing both the &lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt; and &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink&gt; interfaces.","pos":[860,1029],"source":" You can do this by implementing both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces."},{"content":"The formatter sink can then be placed in the sink chain later.","pos":[1030,1092]},{"content":"Formatter sinks use sink configuration properties to configure the channel at run time.","pos":[1099,1186]},{"content":"Sink properties can be specified in a configuration file, or programmatically, inside of a &lt;xref:System.Collections.IDictionary&gt;.","pos":[1187,1316],"source":" Sink properties can be specified in a configuration file, or programmatically, inside of a <xref:System.Collections.IDictionary>."},{"content":"In a configuration file all values are represented by strings, but when building a property &lt;xref:System.Collections.IDictionary&gt; programmatically, value types can be specified with their native values or with strings.","pos":[1317,1535],"source":" In a configuration file all values are represented by strings, but when building a property <xref:System.Collections.IDictionary> programmatically, value types can be specified with their native values or with strings."},{"content":"The following table shows the sink configuration properties that can be specified for the current sink provider.","pos":[1542,1654]},{"content":"|Property|Description|   |--------------|-----------------|   |<ph id=\"ph1\">`includeVersions`</ph>|Specifies whether the formatter will include versioning information.","pos":[1660,1809],"source":"      |Property|Description|   |--------------|-----------------|   |`includeVersions`|Specifies whether the formatter will include versioning information."},{"content":"Values are <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.|      &gt; <ph id=\"ph3\">[!IMPORTANT]</ph> &gt;  Using an instance of this object with untrusted data or across an unsecure channel is a security risk.","pos":[1810,1966],"source":" Values are `true` or `false`.|      > [!IMPORTANT] >  Using an instance of this object with untrusted data or across an unsecure channel is a security risk."},{"content":"Use this object only with trusted data and across a secure channel.","pos":[1967,2034]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Untrusted Data Security Risks<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.","pos":[2035,2140],"source":" For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)."}]},{"pos":[3923,4071],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref> class with default values."},{"pos":[5035,5207],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the given properties and provider data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref> class with the given properties and provider data."},{"pos":[5461,5649],"content":"A &lt;xref:System.Collections.IDictionary&gt; of configuration properties to use with the new instance of <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Collections.IDictionary> of configuration properties to use with the new instance of <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref>."},{"pos":[5735,6004],"content":"A &lt;xref:System.Collections.ICollection&gt; of <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.SinkProviderData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that contain provider data to use with the new instance of <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Collections.ICollection> of <xref href=\"System.Runtime.Remoting.Channels.SinkProviderData\"></xref> objects that contain provider data to use with the new instance of <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref>."},{"pos":[6858,6879],"content":"Creates a sink chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a sink chain.","pos":[0,21]}]},{"pos":[6891,7260],"content":"When the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> method is called, it creates its own channel sink, forwards the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A&gt; method is called, it creates its own channel sink, forwards the &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A&gt; call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.","pos":[0,369],"source":"When the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> method is called, it creates its own channel sink, forwards the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together."}]},{"pos":[7564,7619],"content":"Channel for which this sink chain is being constructed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Channel for which this sink chain is being constructed.","pos":[0,55]}]},{"pos":[7679,7748],"content":"URL of object to connect to or the channel URI for the target object.","needQuote":true,"needEscape":true,"nodes":[{"content":"URL of object to connect to or the channel URI for the target object.","pos":[0,69]}]},{"pos":[7822,7890],"content":"A channel data object that describes a channel on the remote server.","needQuote":true,"needEscape":true,"nodes":[{"content":"A channel data object that describes a channel on the remote server.","pos":[0,68]}]},{"pos":[7986,8199],"content":"The first sink of the newly formed channel sink chain, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this provider will not or cannot provide a connection for this endpoint.","needQuote":true,"needEscape":true,"source":"The first sink of the newly formed channel sink chain, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this provider will not or cannot provide a connection for this endpoint."},{"pos":[8786,8916],"content":"Gets or sets the next <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the sink provider chain.","needQuote":true,"needEscape":true,"source":"Gets or sets the next <xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"></xref> in the sink provider chain."},{"pos":[9129,9246],"content":"The next <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the sink provider chain.","needQuote":true,"needEscape":true,"source":"The next <xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"></xref> in the sink provider chain."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  id: BinaryClientFormatterSinkProvider\n  children:\n  - System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor\n  - System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)\n  - System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  - System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next\n  langs:\n  - csharp\n  name: BinaryClientFormatterSinkProvider\n  nameWithType: BinaryClientFormatterSinkProvider\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  type: Class\n  summary: Provides the implementation for the binary client formatter sink provider.\n  remarks: \"A BinaryClientFormatterSinkProvider creates client formatter sinks that use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> to serialize messages for the client channel through which remoting messages flow.  \\n  \\n The function of the formatter sink is to generate the necessary headers and serialize the message to the stream. After the formatter sink, the <xref:System.Runtime.Remoting.Messaging.IMessage> is forwarded to all sinks in the channel sink chain through the <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> or <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A> calls. At this stage, the message has already been serialized and is provided as information only. Sinks that need to create or modify the message must be placed in the sink chain before the formatter. You can do this by implementing both the <xref:System.Runtime.Remoting.Messaging.IMessageSink> and <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interfaces. The formatter sink can then be placed in the sink chain later.  \\n  \\n Formatter sinks use sink configuration properties to configure the channel at run time. Sink properties can be specified in a configuration file, or programmatically, inside of a <xref:System.Collections.IDictionary>. In a configuration file all values are represented by strings, but when building a property <xref:System.Collections.IDictionary> programmatically, value types can be specified with their native values or with strings.  \\n  \\n The following table shows the sink configuration properties that can be specified for the current sink provider.  \\n  \\n|Property|Description|  \\n|--------------|-----------------|  \\n|`includeVersions`|Specifies whether the formatter will include versioning information. Values are `true` or `false`.|  \\n  \\n> [!IMPORTANT]\\n>  Using an instance of this object with untrusted data or across an unsecure channel is a security risk. Use this object only with trusted data and across a secure channel. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).\"\n  syntax:\n    content: 'public class BinaryClientFormatterSinkProvider : System.Runtime.Remoting.Channels.IClientFormatterSinkProvider'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IClientFormatterSinkProvider\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  langs:\n  - csharp\n  name: BinaryClientFormatterSinkProvider()\n  nameWithType: BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider()\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref> class with default values.\n  syntax:\n    content: public BinaryClientFormatterSinkProvider ();\n    parameters: []\n  overload: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)\n  id: '#ctor(System.Collections.IDictionary,System.Collections.ICollection)'\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  langs:\n  - csharp\n  name: BinaryClientFormatterSinkProvider(IDictionary,ICollection)\n  nameWithType: BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider(IDictionary,ICollection)\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider(IDictionary,ICollection)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref> class with the given properties and provider data.\n  syntax:\n    content: public BinaryClientFormatterSinkProvider (System.Collections.IDictionary properties, System.Collections.ICollection providerData);\n    parameters:\n    - id: properties\n      type: System.Collections.IDictionary\n      description: A <xref:System.Collections.IDictionary> of configuration properties to use with the new instance of <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref>.\n    - id: providerData\n      type: System.Collections.ICollection\n      description: A <xref:System.Collections.ICollection> of <xref href=\"System.Runtime.Remoting.Channels.SinkProviderData\"></xref> objects that contain provider data to use with the new instance of <xref href=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\"></xref>.\n  overload: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  id: CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  langs:\n  - csharp\n  name: CreateSink(IChannelSender,String,Object)\n  nameWithType: BinaryClientFormatterSinkProvider.CreateSink(IChannelSender,String,Object)\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender,String,Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Creates a sink chain.\n  remarks: When the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> method is called, it creates its own channel sink, forwards the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A> call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IClientChannelSink CreateSink (System.Runtime.Remoting.Channels.IChannelSender channel, string url, object remoteChannelData);\n    parameters:\n    - id: channel\n      type: System.Runtime.Remoting.Channels.IChannelSender\n      description: Channel for which this sink chain is being constructed.\n    - id: url\n      type: System.String\n      description: URL of object to connect to or the channel URI for the target object.\n    - id: remoteChannelData\n      type: System.Object\n      description: A channel data object that describes a channel on the remote server.\n    return:\n      type: System.Runtime.Remoting.Channels.IClientChannelSink\n      description: The first sink of the newly formed channel sink chain, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this provider will not or cannot provide a connection for this endpoint.\n  overload: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next\n  id: Next\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  langs:\n  - csharp\n  name: Next\n  nameWithType: BinaryClientFormatterSinkProvider.Next\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets or sets the next <xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"></xref> in the sink provider chain.\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IClientChannelSinkProvider Next { get; set; }\n    return:\n      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n      description: The next <xref href=\"System.Runtime.Remoting.Channels.IClientChannelSinkProvider\"></xref> in the sink provider chain.\n  overload: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: BinaryClientFormatterSinkProvider()\n  nameWithType: BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider()\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider()\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: BinaryClientFormatterSinkProvider(IDictionary,ICollection)\n  nameWithType: BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider(IDictionary,ICollection)\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider(IDictionary,ICollection)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: CreateSink(IChannelSender,String,Object)\n  nameWithType: BinaryClientFormatterSinkProvider.CreateSink(IChannelSender,String,Object)\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(IChannelSender,String,Object)\n- uid: System.Runtime.Remoting.Channels.IClientChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSink\n  nameWithType: IClientChannelSink\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSink\n- uid: System.Runtime.Remoting.Channels.IChannelSender\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelSender\n  nameWithType: IChannelSender\n  fullName: System.Runtime.Remoting.Channels.IChannelSender\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: Next\n  nameWithType: BinaryClientFormatterSinkProvider.Next\n  fullName: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSinkProvider\n  nameWithType: IClientChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor*\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: BinaryClientFormatterSinkProvider\n  nameWithType: BinaryClientFormatterSinkProvider.BinaryClientFormatterSinkProvider\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink*\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: CreateSink\n  nameWithType: BinaryClientFormatterSinkProvider.CreateSink\n- uid: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next*\n  parent: System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider\n  isExternal: false\n  name: Next\n  nameWithType: BinaryClientFormatterSinkProvider.Next\n"}