{"nodes":[{"pos":[465,571],"content":"Determines whether an application should be executed and which set of permissions should be granted to it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an application should be executed and which set of permissions should be granted to it.","pos":[0,106]}]},{"pos":[584,1478],"content":"Trust managers must implement the IApplicationTrustManager interface. The host calls the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to determine whether an application should be executed and which permissions should be granted to the application.       In the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] and later, there is only one trust manager, which can be a custom implementation of the IApplicationTrustManager interface. The default trust manager implementation prompts the user for permission to install the application and to elevate the permissions granted to the application. Other trust manager implementations might provide different user experiences. For example, an implementation might check an enterprise list for trusted applications instead of prompting the user for that information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Trust managers must implement the IApplicationTrustManager interface.","pos":[0,69]},{"content":"The host calls the &lt;xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName&gt; method to determine whether an application should be executed and which permissions should be granted to the application.","pos":[70,319],"source":" The host calls the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to determine whether an application should be executed and which permissions should be granted to the application."},{"content":"In the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> and later, there is only one trust manager, which can be a custom implementation of the IApplicationTrustManager interface.","pos":[326,516],"source":"       In the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] and later, there is only one trust manager, which can be a custom implementation of the IApplicationTrustManager interface."},{"content":"The default trust manager implementation prompts the user for permission to install the application and to elevate the permissions granted to the application.","pos":[517,675]},{"content":"Other trust manager implementations might provide different user experiences.","pos":[676,753]},{"content":"For example, an implementation might check an enterprise list for trusted applications instead of prompting the user for that information.","pos":[754,892]}]},{"pos":[2799,2905],"content":"Determines whether an application should be executed and which set of permissions should be granted to it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an application should be executed and which set of permissions should be granted to it.","pos":[0,106]}]},{"pos":[2917,3940],"content":"The DetermineApplicationTrust method is called by the host to determine whether an application should be executed and which set of permissions it should be granted. DetermineApplicationTrust returns an <xref:System.Security.Policy.ApplicationTrust> object with a <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> property that contains a permission set representing the permissions to be granted to each assembly executing within the context of the application. The granted permissions do not apply to assemblies in the global assembly cache. The <xref:System.Security.Policy.ApplicationTrust> object also has an <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property that the trust manager sets to indicate whether the application should be trusted. If the trust manager indicates that the application can be trusted, the host activates the application and grants its assemblies the set of permissions provided in the <xref:System.Security.Policy.ApplicationTrust> collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DetermineApplicationTrust method is called by the host to determine whether an application should be executed and which set of permissions it should be granted. DetermineApplicationTrust returns an <xref:System.Security.Policy.ApplicationTrust> object with a <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> property that contains a permission set representing the permissions to be granted to each assembly executing within the context of the application. The granted permissions do not apply to assemblies in the global assembly cache. The <xref:System.Security.Policy.ApplicationTrust> object also has an <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property that the trust manager sets to indicate whether the application should be trusted. If the trust manager indicates that the application can be trusted, the host activates the application and grants its assemblies the set of permissions provided in the <xref:System.Security.Policy.ApplicationTrust> collection.","pos":[0,1023],"nodes":[{"content":"The DetermineApplicationTrust method is called by the host to determine whether an application should be executed and which set of permissions it should be granted.","pos":[0,164]},{"content":"DetermineApplicationTrust returns an &lt;xref:System.Security.Policy.ApplicationTrust&gt; object with a &lt;xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A&gt; property that contains a permission set representing the permissions to be granted to each assembly executing within the context of the application.","pos":[165,477],"source":" DetermineApplicationTrust returns an <xref:System.Security.Policy.ApplicationTrust> object with a <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> property that contains a permission set representing the permissions to be granted to each assembly executing within the context of the application."},{"content":"The granted permissions do not apply to assemblies in the global assembly cache.","pos":[478,558]},{"content":"The &lt;xref:System.Security.Policy.ApplicationTrust&gt; object also has an &lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt; property that the trust manager sets to indicate whether the application should be trusted.","pos":[559,796],"source":" The <xref:System.Security.Policy.ApplicationTrust> object also has an <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property that the trust manager sets to indicate whether the application should be trusted."},{"content":"If the trust manager indicates that the application can be trusted, the host activates the application and grants its assemblies the set of permissions provided in the &lt;xref:System.Security.Policy.ApplicationTrust&gt; collection.","pos":[797,1023],"source":" If the trust manager indicates that the application can be trusted, the host activates the application and grants its assemblies the set of permissions provided in the <xref:System.Security.Policy.ApplicationTrust> collection."}]}]},{"pos":[4739,4782],"content":"The activation context for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activation context for the application.","pos":[0,43]}]},{"pos":[4875,4921],"content":"The trust manager context for the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"The trust manager context for the application.","pos":[0,46]}]},{"pos":[5005,5070],"content":"An object that contains security decisions about the application.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains security decisions about the application.","pos":[0,65]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.IApplicationTrustManager\n  id: IApplicationTrustManager\n  children:\n  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)\n  langs:\n  - csharp\n  name: IApplicationTrustManager\n  nameWithType: IApplicationTrustManager\n  fullName: System.Security.Policy.IApplicationTrustManager\n  type: Interface\n  summary: Determines whether an application should be executed and which set of permissions should be granted to it.\n  remarks: \"Trust managers must implement the IApplicationTrustManager interface. The host calls the <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to determine whether an application should be executed and which permissions should be granted to the application.  \\n  \\n In the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] and later, there is only one trust manager, which can be a custom implementation of the IApplicationTrustManager interface. The default trust manager implementation prompts the user for permission to install the application and to elevate the permissions granted to the application. Other trust manager implementations might provide different user experiences. For example, an implementation might check an enterprise list for trusted applications instead of prompting the user for that information.\"\n  example:\n  - \"The following example shows a simple implementation of IApplicationTrustManager.  \\n  \\n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IApplicationTrustManager : System.Security.ISecurityEncodable\n  implements:\n  - System.Security.ISecurityEncodable\n  platform:\n  - net462\n- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)\n  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)\n  parent: System.Security.Policy.IApplicationTrustManager\n  langs:\n  - csharp\n  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)\n  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)\n  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  summary: Determines whether an application should be executed and which set of permissions should be granted to it.\n  remarks: The DetermineApplicationTrust method is called by the host to determine whether an application should be executed and which set of permissions it should be granted. DetermineApplicationTrust returns an <xref:System.Security.Policy.ApplicationTrust> object with a <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> property that contains a permission set representing the permissions to be granted to each assembly executing within the context of the application. The granted permissions do not apply to assemblies in the global assembly cache. The <xref:System.Security.Policy.ApplicationTrust> object also has an <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property that the trust manager sets to indicate whether the application should be trusted. If the trust manager indicates that the application can be trusted, the host activates the application and grants its assemblies the set of permissions provided in the <xref:System.Security.Policy.ApplicationTrust> collection.\n  example:\n  - \"The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \\n  \\n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]\"\n  syntax:\n    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);\n    parameters:\n    - id: activationContext\n      type: System.ActivationContext\n      description: The activation context for the application.\n    - id: context\n      type: System.Security.Policy.TrustManagerContext\n      description: The trust manager context for the application.\n    return:\n      type: System.Security.Policy.ApplicationTrust\n      description: An object that contains security decisions about the application.\n  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)\n  parent: System.Security.Policy.IApplicationTrustManager\n  isExternal: false\n  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)\n  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)\n  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)\n- uid: System.Security.Policy.ApplicationTrust\n  parent: System.Security.Policy\n  isExternal: false\n  name: ApplicationTrust\n  nameWithType: ApplicationTrust\n  fullName: System.Security.Policy.ApplicationTrust\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Security.Policy.TrustManagerContext\n  parent: System.Security.Policy\n  isExternal: false\n  name: TrustManagerContext\n  nameWithType: TrustManagerContext\n  fullName: System.Security.Policy.TrustManagerContext\n- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*\n  parent: System.Security.Policy.IApplicationTrustManager\n  isExternal: false\n  name: DetermineApplicationTrust\n  nameWithType: IApplicationTrustManager.DetermineApplicationTrust\n"}