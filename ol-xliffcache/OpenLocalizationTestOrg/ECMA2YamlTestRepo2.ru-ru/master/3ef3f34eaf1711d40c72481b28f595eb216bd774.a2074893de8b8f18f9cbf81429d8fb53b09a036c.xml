{"nodes":[{"pos":[803,861],"content":"Represents objects that support synchronized input events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents objects that support synchronized input events.","pos":[0,58]}]},{"pos":[1503,1529],"content":"Stops listening for input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops listening for input.","pos":[0,26]}]},{"pos":[1541,1622],"content":"If the provider is currently listening for input, it reverts to normal operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the provider is currently listening for input, it reverts to normal operation.","pos":[0,81]}]},{"pos":[2257,2309],"content":"Identifies the event raised when WPF discards input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the event raised when WPF discards input.","pos":[0,52]}]},{"pos":[2321,2512],"content":"This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.","pos":[0,191],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"A UI Automation provider should use the equivalent field in &lt;xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers&gt;.","pos":[62,191],"source":" A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>."}]}]},{"pos":[2707,2719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3268,3391],"content":"Identifies the event raised when the input was received by an element other than the one currently listening for the input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the event raised when the input was received by an element other than the one currently listening for the input.","pos":[0,123]}]},{"pos":[3403,3594],"content":"This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.","pos":[0,191],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"A UI Automation provider should use the equivalent field in &lt;xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers&gt;.","pos":[62,191],"source":" A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>."}]}]},{"pos":[3799,3811],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4330,4435],"content":"Identifies the event raised when the input was received by the element currently listening for the input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the event raised when the input was received by the element currently listening for the input.","pos":[0,105]}]},{"pos":[4447,4638],"content":"This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.","pos":[0,191],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"A UI Automation provider should use the equivalent field in &lt;xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers&gt;.","pos":[62,191],"source":" A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>."}]}]},{"pos":[4837,4849],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5288,5391],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.SynchronizedInputPattern\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control pattern.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Automation.SynchronizedInputPattern\"></xref> control pattern."},{"pos":[5404,5843],"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.       The pattern identifier is passed to methods, such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.       The pattern identifier is passed to methods, such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.","pos":[0,437],"nodes":[{"content":"This identifier is used by UI Automation client applications.","pos":[0,61]},{"content":"UI Automation providers should use the equivalent field in &lt;xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers&gt;.","pos":[62,190],"source":" UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>."},{"content":"The pattern identifier is passed to methods, such as &lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;, to retrieve the control pattern of interest from the specified &lt;xref:System.Windows.Automation.AutomationElement&gt;.","pos":[197,437],"source":"       The pattern identifier is passed to methods, such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>."}]}]},{"pos":[6031,6043],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6685,6762],"content":"Designates that the provider start listening for input of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Designates that the provider start listening for input of the specified type.","pos":[0,77]}]},{"pos":[6775,7440],"content":"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.       After receiving the input, the provider stops listening and continues normally.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.       After receiving the input, the provider stops listening and continues normally.","pos":[0,663],"nodes":[{"content":"When WPF finds matching input, it checks the route of the incoming event.","pos":[0,73]},{"content":"If the automation element that is listening for the input is not in the route, the input is discarded and the &lt;xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent&gt; event is raised.","pos":[74,278],"source":" If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised."},{"content":"If the input is received by the automation element listening for that type, the &lt;xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent&gt; event is raised; otherwise, the &lt;xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent&gt; event is raised.","pos":[279,577],"source":" If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised."},{"content":"After receiving the input, the provider stops listening and continues normally.","pos":[584,663]}]}]},{"pos":[7668,7700],"content":"The type of input to listen for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of input to listen for.","pos":[0,32]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.SynchronizedInputPattern\n  id: SynchronizedInputPattern\n  children:\n  - System.Windows.Automation.SynchronizedInputPattern.Cancel\n  - System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent\n  - System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent\n  - System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent\n  - System.Windows.Automation.SynchronizedInputPattern.Pattern\n  - System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)\n  langs:\n  - csharp\n  name: SynchronizedInputPattern\n  nameWithType: SynchronizedInputPattern\n  fullName: System.Windows.Automation.SynchronizedInputPattern\n  type: Class\n  summary: Represents objects that support synchronized input events.\n  syntax:\n    content: 'public class SynchronizedInputPattern : System.Windows.Automation.BasePattern'\n  inheritance:\n  - System.Object\n  - System.Windows.Automation.BasePattern\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.SynchronizedInputPattern.Cancel\n  id: Cancel\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: SynchronizedInputPattern.Cancel()\n  fullName: System.Windows.Automation.SynchronizedInputPattern.Cancel()\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Stops listening for input.\n  remarks: If the provider is currently listening for input, it reverts to normal operation.\n  syntax:\n    content: public void Cancel ();\n    parameters: []\n  overload: System.Windows.Automation.SynchronizedInputPattern.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent\n  id: InputDiscardedEvent\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  langs:\n  - csharp\n  name: InputDiscardedEvent\n  nameWithType: SynchronizedInputPattern.InputDiscardedEvent\n  fullName: System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the event raised when WPF discards input.\n  remarks: This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationEvent InputDiscardedEvent;\n    return:\n      type: System.Windows.Automation.AutomationEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent\n  id: InputReachedOtherElementEvent\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  langs:\n  - csharp\n  name: InputReachedOtherElementEvent\n  nameWithType: SynchronizedInputPattern.InputReachedOtherElementEvent\n  fullName: System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the event raised when the input was received by an element other than the one currently listening for the input.\n  remarks: This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationEvent InputReachedOtherElementEvent;\n    return:\n      type: System.Windows.Automation.AutomationEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent\n  id: InputReachedTargetEvent\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  langs:\n  - csharp\n  name: InputReachedTargetEvent\n  nameWithType: SynchronizedInputPattern.InputReachedTargetEvent\n  fullName: System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the event raised when the input was received by the element currently listening for the input.\n  remarks: This identifier is used by UI Automation client applications. A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationEvent InputReachedTargetEvent;\n    return:\n      type: System.Windows.Automation.AutomationEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.SynchronizedInputPattern.Pattern\n  id: Pattern\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  langs:\n  - csharp\n  name: Pattern\n  nameWithType: SynchronizedInputPattern.Pattern\n  fullName: System.Windows.Automation.SynchronizedInputPattern.Pattern\n  type: Field\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Identifies the <xref href=\"System.Windows.Automation.SynchronizedInputPattern\"></xref> control pattern.\n  remarks: \"This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.  \\n  \\n The pattern identifier is passed to methods, such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.\"\n  syntax:\n    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;\n    return:\n      type: System.Windows.Automation.AutomationPattern\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)\n  id: StartListening(System.Windows.Automation.SynchronizedInputType)\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  langs:\n  - csharp\n  name: StartListening(SynchronizedInputType)\n  nameWithType: SynchronizedInputPattern.StartListening(SynchronizedInputType)\n  fullName: System.Windows.Automation.SynchronizedInputPattern.StartListening(SynchronizedInputType)\n  type: Method\n  assemblies:\n  - UIAutomationClient\n  namespace: System.Windows.Automation\n  summary: Designates that the provider start listening for input of the specified type.\n  remarks: \"When WPF finds matching input, it checks the route of the incoming event. If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised. If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.  \\n  \\n After receiving the input, the provider stops listening and continues normally.\"\n  syntax:\n    content: public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);\n    parameters:\n    - id: inputType\n      type: System.Windows.Automation.SynchronizedInputType\n      description: The type of input to listen for.\n  overload: System.Windows.Automation.SynchronizedInputPattern.StartListening*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Automation.BasePattern\n  isExternal: false\n  name: System.Windows.Automation.BasePattern\n- uid: System.Windows.Automation.SynchronizedInputPattern.Cancel\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: Cancel()\n  nameWithType: SynchronizedInputPattern.Cancel()\n  fullName: System.Windows.Automation.SynchronizedInputPattern.Cancel()\n- uid: System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: InputDiscardedEvent\n  nameWithType: SynchronizedInputPattern.InputDiscardedEvent\n  fullName: System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent\n- uid: System.Windows.Automation.AutomationEvent\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationEvent\n  nameWithType: AutomationEvent\n  fullName: System.Windows.Automation.AutomationEvent\n- uid: System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: InputReachedOtherElementEvent\n  nameWithType: SynchronizedInputPattern.InputReachedOtherElementEvent\n  fullName: System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent\n- uid: System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: InputReachedTargetEvent\n  nameWithType: SynchronizedInputPattern.InputReachedTargetEvent\n  fullName: System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent\n- uid: System.Windows.Automation.SynchronizedInputPattern.Pattern\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: Pattern\n  nameWithType: SynchronizedInputPattern.Pattern\n  fullName: System.Windows.Automation.SynchronizedInputPattern.Pattern\n- uid: System.Windows.Automation.AutomationPattern\n  parent: System.Windows.Automation\n  isExternal: false\n  name: AutomationPattern\n  nameWithType: AutomationPattern\n  fullName: System.Windows.Automation.AutomationPattern\n- uid: System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: StartListening(SynchronizedInputType)\n  nameWithType: SynchronizedInputPattern.StartListening(SynchronizedInputType)\n  fullName: System.Windows.Automation.SynchronizedInputPattern.StartListening(SynchronizedInputType)\n- uid: System.Windows.Automation.SynchronizedInputType\n  parent: System.Windows.Automation\n  isExternal: false\n  name: SynchronizedInputType\n  nameWithType: SynchronizedInputType\n  fullName: System.Windows.Automation.SynchronizedInputType\n- uid: System.Windows.Automation.SynchronizedInputPattern.Cancel*\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: Cancel\n  nameWithType: SynchronizedInputPattern.Cancel\n- uid: System.Windows.Automation.SynchronizedInputPattern.StartListening*\n  parent: System.Windows.Automation.SynchronizedInputPattern\n  isExternal: false\n  name: StartListening\n  nameWithType: SynchronizedInputPattern.StartListening\n"}