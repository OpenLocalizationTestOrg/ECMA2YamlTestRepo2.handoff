{"nodes":[{"pos":[1045,1057],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4051,4063],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4991,5003],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5767,5779],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6558,6570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.DelegateArgumentReference`1\n  id: DelegateArgumentReference`1\n  children:\n  - System.Activities.Expressions.DelegateArgumentReference`1.#ctor\n  - System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)\n  - System.Activities.Expressions.DelegateArgumentReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument\n  - System.Activities.Expressions.DelegateArgumentReference`1.LocationReference\n  langs:\n  - csharp\n  name: DelegateArgumentReference<T>\n  nameWithType: DelegateArgumentReference<T>\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"DelegateArgument\")]\n\n      public sealed class DelegateArgumentReference<T> : System.Activities.Expressions.EnvironmentLocationReference<T>\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  - System.Activities.Expressions.EnvironmentLocationReference`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)\n  platform:\n  - net462\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  langs:\n  - csharp\n  name: DelegateArgumentReference()\n  nameWithType: DelegateArgumentReference<T>.DelegateArgumentReference()\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.DelegateArgumentReference()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public DelegateArgumentReference ();\n    parameters: []\n  overload: System.Activities.Expressions.DelegateArgumentReference`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)\n  id: '#ctor(System.Activities.DelegateArgument)'\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  langs:\n  - csharp\n  name: DelegateArgumentReference(DelegateArgument)\n  nameWithType: DelegateArgumentReference<T>.DelegateArgumentReference(DelegateArgument)\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.DelegateArgumentReference(DelegateArgument)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public DelegateArgumentReference (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: To be added.\n  overload: System.Activities.Expressions.DelegateArgumentReference`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: DelegateArgumentReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: To be added.\n  overload: System.Activities.Expressions.DelegateArgumentReference`1.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument\n  id: DelegateArgument\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  langs:\n  - csharp\n  name: DelegateArgument\n  nameWithType: DelegateArgumentReference<T>.DelegateArgument\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.DelegateArgument\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public System.Activities.DelegateArgument DelegateArgument { get; set; }\n    return:\n      type: System.Activities.DelegateArgument\n      description: To be added.\n  overload: System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.LocationReference\n  id: LocationReference\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  langs:\n  - csharp\n  name: LocationReference\n  nameWithType: DelegateArgumentReference<T>.LocationReference\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.LocationReference\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: public override System.Activities.LocationReference LocationReference { get; }\n    return:\n      type: System.Activities.LocationReference\n      description: To be added.\n  overload: System.Activities.Expressions.DelegateArgumentReference`1.LocationReference*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Expressions.EnvironmentLocationReference`1\n  isExternal: false\n  name: System.Activities.Expressions.EnvironmentLocationReference<T>\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.#ctor\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: DelegateArgumentReference()\n  nameWithType: DelegateArgumentReference<T>.DelegateArgumentReference()\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.DelegateArgumentReference()\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: DelegateArgumentReference(DelegateArgument)\n  nameWithType: DelegateArgumentReference<T>.DelegateArgumentReference(DelegateArgument)\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.DelegateArgumentReference(DelegateArgument)\n- uid: System.Activities.DelegateArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateArgument\n  nameWithType: DelegateArgument\n  fullName: System.Activities.DelegateArgument\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: DelegateArgumentReference<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: DelegateArgument\n  nameWithType: DelegateArgumentReference<T>.DelegateArgument\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.DelegateArgument\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.LocationReference\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: DelegateArgumentReference<T>.LocationReference\n  fullName: System.Activities.Expressions.DelegateArgumentReference<T>.LocationReference\n- uid: System.Activities.LocationReference\n  parent: System.Activities\n  isExternal: false\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.#ctor*\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: DelegateArgumentReference<T>\n  nameWithType: DelegateArgumentReference<T>.DelegateArgumentReference<T>\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.CacheMetadata*\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: DelegateArgumentReference<T>.CacheMetadata\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument*\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: DelegateArgument\n  nameWithType: DelegateArgumentReference<T>.DelegateArgument\n- uid: System.Activities.Expressions.DelegateArgumentReference`1.LocationReference*\n  parent: System.Activities.Expressions.DelegateArgumentReference`1\n  isExternal: false\n  name: LocationReference\n  nameWithType: DelegateArgumentReference<T>.LocationReference\n"}