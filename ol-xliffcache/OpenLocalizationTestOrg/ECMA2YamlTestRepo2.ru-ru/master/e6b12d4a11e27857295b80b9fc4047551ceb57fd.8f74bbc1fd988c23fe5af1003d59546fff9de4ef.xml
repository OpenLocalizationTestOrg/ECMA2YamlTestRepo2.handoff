{"nodes":[{"pos":[350,432],"content":"Defines the interface for extending properties to other components in a container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the interface for extending properties to other components in a container.","pos":[0,82]}]},{"pos":[445,1232],"content":"An extender provider is a component that provides properties to other components. For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider. When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.       Any component that provides extender properties must implement IExtenderProvider. A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.       For more information about extender providers, see [How to: Implement an Extender Provider](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An extender provider is a component that provides properties to other components.","pos":[0,81]},{"content":"For example, the &lt;xref:System.Windows.Forms.ToolTip&gt; control is an extender provider.","pos":[82,167],"source":" For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider."},{"content":"When you add a &lt;xref:System.Windows.Forms.ToolTip&gt; control to a &lt;xref:System.Windows.Forms.Form&gt;, all other controls on the form have a &lt;xref:System.Windows.Forms.ToolTip&gt; property added to their list of properties.","pos":[168,383],"source":" When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties."},{"content":"Any component that provides extender properties must implement IExtenderProvider.","pos":[390,471]},{"content":"A visual designer can then call &lt;xref:System.ComponentModel.IExtenderProvider.CanExtend%2A&gt; to determine which objects in a container should receive the extender properties.","pos":[472,645],"source":" A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties."},{"content":"For more information about extender providers, see <bpt id=\"p1\">[</bpt>How to: Implement an Extender Provider<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[652,783],"source":"       For more information about extender providers, see [How to: Implement an Extender Provider](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[2213,2303],"content":"Specifies whether this object can provide its extender properties to the specified object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether this object can provide its extender properties to the specified object.","pos":[0,90]}]},{"pos":[2316,2445],"content":"For more information on extender properties, see <bpt id=\"p1\">[</bpt>How to: Implement an Extender Provider<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"For more information on extender properties, see [How to: Implement an Extender Provider](~/add/includes/ajax-current-ext-md.md)."},{"pos":[3056,3116],"content":"The <xref:System.Object> to receive the extender properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to receive the extender properties.","pos":[0,60],"source":"The <xref:System.Object> to receive the extender properties."}]},{"pos":[3175,3382],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this object can provide extender properties to the specified object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can provide extender properties to the specified object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.IExtenderProvider\n  id: IExtenderProvider\n  children:\n  - System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  langs:\n  - csharp\n  name: IExtenderProvider\n  nameWithType: IExtenderProvider\n  fullName: System.ComponentModel.IExtenderProvider\n  type: Interface\n  summary: Defines the interface for extending properties to other components in a container.\n  remarks: \"An extender provider is a component that provides properties to other components. For example, the <xref:System.Windows.Forms.ToolTip> control is an extender provider. When you add a <xref:System.Windows.Forms.ToolTip> control to a <xref:System.Windows.Forms.Form>, all other controls on the form have a <xref:System.Windows.Forms.ToolTip> property added to their list of properties.  \\n  \\n Any component that provides extender properties must implement IExtenderProvider. A visual designer can then call <xref:System.ComponentModel.IExtenderProvider.CanExtend%2A> to determine which objects in a container should receive the extender properties.  \\n  \\n For more information about extender providers, see [How to: Implement an Extender Provider](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to implement the IExtenderProvider interface. This example is part of a larger example discussed in [How to: Implement a HelpLabel Extender Provider](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Windows.Forms.HelpLabel#1](~/add/codesnippet/visualbasic/t-system.componentmodel._74_1.vb)]\\n [!code-cs[System.Windows.Forms.HelpLabel#1](~/add/codesnippet/csharp/t-system.componentmodel._74_1.cs)]\"\n  syntax:\n    content: public interface IExtenderProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  id: CanExtend(System.Object)\n  parent: System.ComponentModel.IExtenderProvider\n  langs:\n  - csharp\n  name: CanExtend(Object)\n  nameWithType: IExtenderProvider.CanExtend(Object)\n  fullName: System.ComponentModel.IExtenderProvider.CanExtend(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel\n  summary: Specifies whether this object can provide its extender properties to the specified object.\n  remarks: 'For more information on extender properties, see [How to: Implement an Extender Provider](~/add/includes/ajax-current-ext-md.md).'\n  example:\n  - \"The following code example demonstrates how to implement the CanExtend property. This example is part of a larger example discussed in [How to: Implement a HelpLabel Extender Provider](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Windows.Forms.HelpLabel#1](~/add/codesnippet/visualbasic/m-system.componentmodel._33_1.vb)]\\n [!code-cs[System.Windows.Forms.HelpLabel#1](~/add/codesnippet/csharp/m-system.componentmodel._33_1.cs)]\"\n  syntax:\n    content: public bool CanExtend (object extendee);\n    parameters:\n    - id: extendee\n      type: System.Object\n      description: The <xref:System.Object> to receive the extender properties.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this object can provide extender properties to the specified object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.IExtenderProvider.CanExtend*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.IExtenderProvider.CanExtend(System.Object)\n  parent: System.ComponentModel.IExtenderProvider\n  isExternal: false\n  name: CanExtend(Object)\n  nameWithType: IExtenderProvider.CanExtend(Object)\n  fullName: System.ComponentModel.IExtenderProvider.CanExtend(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.IExtenderProvider.CanExtend*\n  parent: System.ComponentModel.IExtenderProvider\n  isExternal: false\n  name: CanExtend\n  nameWithType: IExtenderProvider.CanExtend\n"}