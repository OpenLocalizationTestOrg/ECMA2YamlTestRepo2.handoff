{"nodes":[{"pos":[1657,1739],"content":"Represents a class that is used to prepopulate the cache with DTDs or XML streams.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a class that is used to prepopulate the cache with DTDs or XML streams.","pos":[0,82]}]},{"pos":[1751,2275],"content":"The XmlPreloadedResolver type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use XmlPreloadedResolver to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, XmlPreloadedResolver includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The XmlPreloadedResolver type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use XmlPreloadedResolver to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, XmlPreloadedResolver includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","pos":[0,524],"nodes":[{"content":"The XmlPreloadedResolver type is used as a resolver when automatic calls to the network are not desired or are not possible.","pos":[0,124]},{"content":"For example, this type can be used for loading cached external DTDs.","pos":[125,193]},{"content":"Or, you might use XmlPreloadedResolver to preload well-known DTDs that are defined in XHTML 1.0.","pos":[194,290]},{"content":"Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly.","pos":[291,430]},{"content":"Currently, XmlPreloadedResolver includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","pos":[431,524]}]}]},{"pos":[2886,2989],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class."},{"pos":[3674,3822],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified preloaded well-known DTDs.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified preloaded well-known DTDs."},{"pos":[4030,4093],"content":"The well-known DTDs that should be prepopulated into the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known DTDs that should be prepopulated into the cache.","pos":[0,63]}]},{"pos":[4679,4819],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified fallback resolver.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver."},{"pos":[5011,5194],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or your own resolver.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"></xref>, <xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"></xref>, or your own resolver."},{"pos":[5887,6057],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified fallback resolver and preloaded well-known DTDs.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver and preloaded well-known DTDs."},{"pos":[6298,6481],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or your own resolver.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"></xref>, <xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"></xref>, or your own resolver."},{"pos":[6571,6634],"content":"The well-known DTDs that should be prepopulated into the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known DTDs that should be prepopulated into the cache.","pos":[0,63]}]},{"pos":[7510,7704],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer."},{"pos":[7716,7786],"content":"Use this constructor overload if you want to customize URI comparison.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this constructor overload if you want to customize URI comparison.","pos":[0,70]}]},{"pos":[8090,8273],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or your own resolver.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"></xref>, <xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"></xref>, or your own resolver."},{"pos":[8363,8422],"content":"The well-known DTDs that should be prepopulated into cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known DTDs that should be prepopulated into cache.","pos":[0,59]}]},{"pos":[8533,8668],"content":"The implementation of the &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; generic interface to use when you compare URIs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The implementation of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEqualityComparer%601<ph id=\"ph2\">&amp;gt;</ph> generic interface to use when you compare URIs.","pos":[0,135],"source":"The implementation of the &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; generic interface to use when you compare URIs."}]},{"pos":[9193,9402],"content":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a byte array to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store and maps it to a URI.","pos":[0,115],"source":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[116,209]}]},{"pos":[9539,9655],"content":"The URI of the data that is being added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store.","needQuote":true,"needEscape":true,"source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."},{"pos":[9717,9781],"content":"A byte array with the data that corresponds to the provided URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array with the data that corresponds to the provided URI.","pos":[0,64]}]},{"pos":[9957,10060],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10513,10735],"content":"Adds a <xref:System.IO.Stream> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a &lt;xref:System.IO.Stream&gt; to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store and maps it to a URI.","pos":[0,128],"source":"Adds a <xref:System.IO.Stream> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[129,222]}]},{"pos":[10882,10998],"content":"The URI of the data that is being added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store.","needQuote":true,"needEscape":true,"source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."},{"pos":[11063,11140],"content":"A <xref:System.IO.Stream> with the data that corresponds to the provided URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.Stream&gt; with the data that corresponds to the provided URI.","pos":[0,77],"source":"A <xref:System.IO.Stream> with the data that corresponds to the provided URI."}]},{"pos":[11316,11419],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11866,12091],"content":"Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a string with preloaded data to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store and maps it to a URI.","pos":[0,131],"source":"Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[132,225]}]},{"pos":[12228,12344],"content":"The URI of the data that is being added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store.","needQuote":true,"needEscape":true,"source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."},{"pos":[12406,12524],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the data that corresponds to the provided URI.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> with the data that corresponds to the provided URI."},{"pos":[12700,12803],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13338,13547],"content":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a byte array to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store and maps it to a URI.","pos":[0,115],"source":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[116,209]}]},{"pos":[13707,13823],"content":"The URI of the data that is being added to the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store.","needQuote":true,"needEscape":true,"source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."},{"pos":[13885,13949],"content":"A byte array with the data that corresponds to the provided URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array with the data that corresponds to the provided URI.","pos":[0,64]}]},{"pos":[14011,14071],"content":"The offset in the provided byte array where the data starts.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset in the provided byte array where the data starts.","pos":[0,60]}]},{"pos":[14132,14213],"content":"The number of bytes to read from the byte array, starting at the provided offset.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes to read from the byte array, starting at the provided offset.","pos":[0,81]}]},{"pos":[14389,14492],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14608,14782],"content":"<code>offset</code> or <code>count</code> is less than 0.       -or-       The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.","pos":[0,57],"source":"<code>offset</code> or <code>count</code> is less than 0."},{"content":"-or-       The length of the <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> minus <ph id=\"ph2\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than <ph id=\"ph3\">&lt;code&gt;count.&lt;/code&gt;</ph>","pos":[64,170],"source":"       -or-       The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>"}]},{"pos":[15184,15279],"content":"Sets the credentials that are used to authenticate the underlying <xref:System.Net.WebRequest>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the credentials that are used to authenticate the underlying &lt;xref:System.Net.WebRequest&gt;.","pos":[0,95],"source":"Sets the credentials that are used to authenticate the underlying <xref:System.Net.WebRequest>."}]},{"pos":[15431,15504],"content":"The credentials that are used to authenticate the underlying web request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The credentials that are used to authenticate the underlying web request.","pos":[0,73]}]},{"pos":[16104,16162],"content":"Maps a URI to an object that contains the actual resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a URI to an object that contains the actual resource.","pos":[0,58]}]},{"pos":[16174,16506],"content":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data. If it cannot find it, it will call the fallback resolver's `GetEntity` method. If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt; will first try to look up the resource in its store of preloaded data.","pos":[0,123],"source":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data."},{"content":"If it cannot find it, it will call the fallback resolver's <ph id=\"ph1\">`GetEntity`</ph> method.","pos":[124,202],"source":" If it cannot find it, it will call the fallback resolver's `GetEntity` method."},{"content":"If no fallback resolver was provided in the &lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt; constructor, an exception is thrown.","pos":[203,332],"source":" If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown."}]},{"pos":[16698,16762],"content":"The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.","pos":[0,64],"source":"The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>."}]},{"pos":[16823,17119],"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[0,296],"nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.","pos":[0,106]},{"content":"This parameter is provided for future extensibility purposes.","pos":[107,168]},{"content":"For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[169,296]}]}]},{"pos":[17190,17747],"content":"The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref:System.IO.Stream> objects and <xref:System.IO.TextReader> objects for URIs that were added as <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*> method to determine whether a certain <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> is supported by this resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supports &lt;xref:System.IO.Stream&gt; objects and &lt;xref:System.IO.TextReader&gt; objects for URIs that were added as <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[30,271],"source":" The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref:System.IO.Stream> objects and <xref:System.IO.TextReader> objects for URIs that were added as <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"If the requested type is not supported by the resolver, an exception will be thrown.","pos":[272,356]},{"content":"Use the &lt;xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*&gt; method to determine whether a certain <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is supported by this resolver.","pos":[357,557],"source":" Use the <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*> method to determine whether a certain <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> is supported by this resolver."}]},{"pos":[17805,17907],"content":"A <xref:System.IO.Stream> or <xref:System.IO.TextReader> object that corresponds to the actual source.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.Stream&gt; or &lt;xref:System.IO.TextReader&gt; object that corresponds to the actual source.","pos":[0,102],"source":"A <xref:System.IO.Stream> or <xref:System.IO.TextReader> object that corresponds to the actual source."}]},{"pos":[18089,18178],"content":"<ph id=\"ph1\">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>absoluteUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18272,18405],"content":"Cannot resolve URI passed in <code>absoluteUri</code>.       -or-       <code>ofObjectToReturn</code> is not of a supported type.","needQuote":false,"needEscape":true,"nodes":[{"content":"Cannot resolve URI passed in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">absoluteUri</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,54],"source":"Cannot resolve URI passed in <code>absoluteUri</code>."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ofObjectToReturn</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not of a supported type.","pos":[61,129],"source":"       -or-       <code>ofObjectToReturn</code> is not of a supported type."}]},{"pos":[18947,19020],"content":"Asynchronously maps a URI to an object that contains the actual resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Asynchronously maps a URI to an object that contains the actual resource.","pos":[0,73]}]},{"pos":[19246,19310],"content":"The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.","pos":[0,64],"source":"The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>."}]},{"pos":[19371,19667],"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[0,296],"nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.","pos":[0,106]},{"content":"This parameter is provided for future extensibility purposes.","pos":[107,168]},{"content":"For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[169,296]}]}]},{"pos":[19738,20295],"content":"The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref:System.IO.Stream> objects and <xref:System.IO.TextReader> objects for URIs that were added as <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*> method to determine whether a certain <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> is supported by this resolver.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supports &lt;xref:System.IO.Stream&gt; objects and &lt;xref:System.IO.TextReader&gt; objects for URIs that were added as <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[30,271],"source":" The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref:System.IO.Stream> objects and <xref:System.IO.TextReader> objects for URIs that were added as <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>."},{"content":"If the requested type is not supported by the resolver, an exception will be thrown.","pos":[272,356]},{"content":"Use the &lt;xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*&gt; method to determine whether a certain <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is supported by this resolver.","pos":[357,557],"source":" Use the <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*> method to determine whether a certain <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> is supported by this resolver."}]},{"pos":[20382,20484],"content":"A <xref:System.IO.Stream> or <xref:System.IO.TextReader> object that corresponds to the actual source.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.Stream&gt; or &lt;xref:System.IO.TextReader&gt; object that corresponds to the actual source.","pos":[0,102],"source":"A <xref:System.IO.Stream> or <xref:System.IO.TextReader> object that corresponds to the actual source."}]},{"pos":[20982,21018],"content":"Gets a collection of preloaded URIs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of preloaded URIs.","pos":[0,36]}]},{"pos":[21210,21243],"content":"The collection of preloaded URIs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of preloaded URIs.","pos":[0,33]}]},{"pos":[21742,21859],"content":"Removes the data that corresponds to the URI from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes the data that corresponds to the URI from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref>."},{"pos":[21871,21934],"content":"No exception is thrown if the data does not exist in the store.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"No exception is thrown if the data does not exist in the store.","pos":[0,63]}]},{"pos":[22060,22181],"content":"The URI of the data that should be removed from the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> store.","needQuote":true,"needEscape":true,"source":"The URI of the data that should be removed from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."},{"pos":[22360,22441],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[22923,22981],"content":"Resolves the absolute URI from the base and relative URIs.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolves the absolute URI from the base and relative URIs.","pos":[0,58]}]},{"pos":[23147,23193],"content":"The base URI used to resolve the relative URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base URI used to resolve the relative URI.","pos":[0,46]}]},{"pos":[23261,23452],"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the `baseUri` value. If relative, it combines with the `baseUri` to make an absolute URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URI to resolve.","pos":[0,19]},{"content":"The URI can be absolute or relative.","pos":[20,56]},{"content":"If absolute, this value effectively replaces the <ph id=\"ph1\">`baseUri`</ph> value.","pos":[57,122],"source":" If absolute, this value effectively replaces the `baseUri` value."},{"content":"If relative, it combines with the <ph id=\"ph1\">`baseUri`</ph> to make an absolute URI.","pos":[123,191],"source":" If relative, it combines with the `baseUri` to make an absolute URI."}]},{"pos":[23507,23662],"content":"The &lt;xref:System.Uri&gt; representing the absolute URI or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the relative URI cannot be resolved.","needQuote":true,"needEscape":true,"source":"The <xref:System.Uri> representing the absolute URI or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the relative URI cannot be resolved."},{"pos":[23845,23926],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24408,24509],"content":"Determines whether the resolver supports other <xref:System.Type>s than just <xref:System.IO.Stream>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the resolver supports other &lt;xref:System.Type&gt;s than just &lt;xref:System.IO.Stream&gt;.","pos":[0,101],"source":"Determines whether the resolver supports other <xref:System.Type>s than just <xref:System.IO.Stream>."}]},{"pos":[24677,24703],"content":"The absolute URI to check.","needQuote":true,"needEscape":true,"nodes":[{"content":"The absolute URI to check.","pos":[0,26]}]},{"pos":[24762,24795],"content":"The <xref:System.Type> to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to return.","pos":[0,33],"source":"The <xref:System.Type> to return."}]},{"pos":[24854,25029],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Type&gt; is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Type> is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25214,25295],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>uri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Resolvers.XmlPreloadedResolver\n  id: XmlPreloadedResolver\n  children:\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  - System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  - System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  - System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  - System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  - System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  langs:\n  - csharp\n  name: XmlPreloadedResolver\n  nameWithType: XmlPreloadedResolver\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver\n  type: Class\n  summary: Represents a class that is used to prepopulate the cache with DTDs or XML streams.\n  remarks: The XmlPreloadedResolver type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use XmlPreloadedResolver to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, XmlPreloadedResolver includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.\n  syntax:\n    content: 'public class XmlPreloadedResolver : System.Xml.XmlResolver'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlResolver\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  id: '#ctor'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver()\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class.\n  syntax:\n    content: public XmlPreloadedResolver ();\n    parameters: []\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  id: '#ctor(System.Xml.Resolvers.XmlKnownDtds)'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified preloaded well-known DTDs.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);\n    parameters:\n    - id: preloadedDtds\n      type: System.Xml.Resolvers.XmlKnownDtds\n      description: The well-known DTDs that should be prepopulated into the cache.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  id: '#ctor(System.Xml.XmlResolver)'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlResolver)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);\n    parameters:\n    - id: fallbackResolver\n      type: System.Xml.XmlResolver\n      description: The <xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"></xref>, <xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"></xref>, or your own resolver.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver and preloaded well-known DTDs.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);\n    parameters:\n    - id: fallbackResolver\n      type: System.Xml.XmlResolver\n      description: The <xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"></xref>, <xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"></xref>, or your own resolver.\n    - id: preloadedDtds\n      type: System.Xml.Resolvers.XmlKnownDtds\n      description: The well-known DTDs that should be prepopulated into the cache.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.\n  remarks: Use this constructor overload if you want to customize URI comparison.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer<Uri> uriComparer);\n    parameters:\n    - id: fallbackResolver\n      type: System.Xml.XmlResolver\n      description: The <xref uid=\"langword_csharp_XmlResolver\" name=\"XmlResolver\" href=\"\"></xref>, <xref uid=\"langword_csharp_XmlXapResolver\" name=\"XmlXapResolver\" href=\"\"></xref>, or your own resolver.\n    - id: preloadedDtds\n      type: System.Xml.Resolvers.XmlKnownDtds\n      description: The well-known DTDs that should be prepopulated into cache.\n    - id: uriComparer\n      type: System.Collections.Generic.IEqualityComparer{System.Uri}\n      description: The implementation of the &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; generic interface to use when you compare URIs.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  id: Add(System.Uri,System.Byte[])\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri,Byte[])\n  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, byte[] value);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.Byte[]\n      description: A byte array with the data that corresponds to the provided URI.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  id: Add(System.Uri,System.IO.Stream)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri,Stream)\n  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Adds a <xref:System.IO.Stream> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, System.IO.Stream value);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.IO.Stream\n      description: A <xref:System.IO.Stream> with the data that corresponds to the provided URI.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  id: Add(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri,String)\n  nameWithType: XmlPreloadedResolver.Add(Uri,String)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, string value);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.String\n      description: A <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> with the data that corresponds to the provided URI.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  id: Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri,Byte[],Int32,Int32)\n  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, byte[] value, int offset, int count);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.Byte[]\n      description: A byte array with the data that corresponds to the provided URI.\n    - id: offset\n      type: System.Int32\n      description: The offset in the provided byte array where the data starts.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to read from the byte array, starting at the provided offset.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>count</code> is less than 0.  \\n  \\n -or-  \\n  \\n The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>\"\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  id: Credentials\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: XmlPreloadedResolver.Credentials\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Sets the credentials that are used to authenticate the underlying <xref:System.Net.WebRequest>.\n  syntax:\n    content: public override System.Net.ICredentials Credentials { set; }\n    return:\n      type: System.Net.ICredentials\n      description: The credentials that are used to authenticate the underlying web request.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  id: GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: GetEntity(Uri,String,Type)\n  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Maps a URI to an object that contains the actual resource.\n  remarks: The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data. If it cannot find it, it will call the fallback resolver's `GetEntity` method. If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.\n  syntax:\n    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>.\n    - id: role\n      type: System.String\n      description: The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref:System.IO.Stream> objects and <xref:System.IO.TextReader> objects for URIs that were added as <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*> method to determine whether a certain <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> is supported by this resolver.\n    return:\n      type: System.Object\n      description: A <xref:System.IO.Stream> or <xref:System.IO.TextReader> object that corresponds to the actual source.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>absoluteUri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"Cannot resolve URI passed in <code>absoluteUri</code>.  \\n  \\n -or-  \\n  \\n <code>ofObjectToReturn</code> is not of a supported type.\"\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  id: GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: GetEntityAsync(Uri,String,Type)\n  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Asynchronously maps a URI to an object that contains the actual resource.\n  syntax:\n    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>.\n    - id: role\n      type: System.String\n      description: The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref:System.IO.Stream> objects and <xref:System.IO.TextReader> objects for URIs that were added as <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*> method to determine whether a certain <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> is supported by this resolver.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A <xref:System.IO.Stream> or <xref:System.IO.TextReader> object that corresponds to the actual source.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  id: PreloadedUris\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: PreloadedUris\n  nameWithType: XmlPreloadedResolver.PreloadedUris\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Gets a collection of preloaded URIs.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Uri> PreloadedUris { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The collection of preloaded URIs.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  id: Remove(System.Uri)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Remove(Uri)\n  nameWithType: XmlPreloadedResolver.Remove(Uri)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Removes the data that corresponds to the URI from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref>.\n  remarks: No exception is thrown if the data does not exist in the store.\n  syntax:\n    content: public void Remove (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that should be removed from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  id: ResolveUri(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: ResolveUri(Uri,String)\n  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Resolves the absolute URI from the base and relative URIs.\n  syntax:\n    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI used to resolve the relative URI.\n    - id: relativeUri\n      type: System.String\n      description: The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the `baseUri` value. If relative, it combines with the `baseUri` to make an absolute URI.\n    return:\n      type: System.Uri\n      description: The <xref:System.Uri> representing the absolute URI or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the relative URI cannot be resolved.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  id: SupportsType(System.Uri,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: SupportsType(Uri,Type)\n  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Resolvers\n  summary: Determines whether the resolver supports other <xref:System.Type>s than just <xref:System.IO.Stream>.\n  syntax:\n    content: public override bool SupportsType (Uri absoluteUri, Type type);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The absolute URI to check.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> to return.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Type> is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.XmlResolver\n  isExternal: false\n  name: System.Xml.XmlResolver\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver()\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n- uid: System.Xml.Resolvers.XmlKnownDtds\n  parent: System.Xml.Resolvers\n  isExternal: false\n  name: XmlKnownDtds\n  nameWithType: XmlKnownDtds\n  fullName: System.Xml.Resolvers.XmlKnownDtds\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlResolver)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)\n- uid: System.Collections.Generic.IEqualityComparer{System.Uri}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEqualityComparer<Uri>\n  nameWithType: IEqualityComparer<Uri>\n  fullName: System.Collections.Generic.IEqualityComparer<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    nameWithType: IEqualityComparer\n    fullName: IEqualityComparer<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri,Byte[])\n  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri,Stream)\n  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri,String)\n  nameWithType: XmlPreloadedResolver.Add(Uri,String)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri,Byte[],Int32,Int32)\n  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlPreloadedResolver.Credentials\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: true\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntity(Uri,String,Type)\n  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntityAsync(Uri,String,Type)\n  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: PreloadedUris\n  nameWithType: XmlPreloadedResolver.PreloadedUris\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n- uid: System.Collections.Generic.IEnumerable{System.Uri}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Uri>\n  nameWithType: IEnumerable<Uri>\n  fullName: System.Collections.Generic.IEnumerable<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Uri>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Remove(Uri)\n  nameWithType: XmlPreloadedResolver.Remove(Uri)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: ResolveUri(Uri,String)\n  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: SupportsType(Uri,Type)\n  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add\n  nameWithType: XmlPreloadedResolver.Add\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlPreloadedResolver.Credentials\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntity\n  nameWithType: XmlPreloadedResolver.GetEntity\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntityAsync\n  nameWithType: XmlPreloadedResolver.GetEntityAsync\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: PreloadedUris\n  nameWithType: XmlPreloadedResolver.PreloadedUris\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Remove\n  nameWithType: XmlPreloadedResolver.Remove\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: ResolveUri\n  nameWithType: XmlPreloadedResolver.ResolveUri\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: SupportsType\n  nameWithType: XmlPreloadedResolver.SupportsType\n"}