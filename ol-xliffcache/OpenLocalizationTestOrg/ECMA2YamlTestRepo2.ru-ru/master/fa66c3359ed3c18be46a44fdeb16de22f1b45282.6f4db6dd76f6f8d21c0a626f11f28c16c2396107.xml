{"nodes":[{"pos":[442,525],"content":"Specifies the impersonation behavior for a service operation on a service instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the impersonation behavior for a service operation on a service instance.","pos":[0,83]}]},{"pos":[538,872],"content":"Use the ImpersonationOption enumeration to control impersonation in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] applications.       This setting interacts with a configuration property on <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A> in the following table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ImpersonationOption enumeration to control impersonation in <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> applications.","pos":[0,140],"source":"Use the ImpersonationOption enumeration to control impersonation in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] applications."},{"content":"This setting interacts with a configuration property on &lt;xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A&gt; in the following table.","pos":[147,332],"source":"       This setting interacts with a configuration property on <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A> in the following table."}]},{"pos":[1799,2036],"content":"Impersonation is performed if credentials are available and &lt;xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*&gt; is equal to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Impersonation is performed if credentials are available and <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*> is equal to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[2151,2163],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2574,2841],"content":"Impersonation is not performed. If <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*> is equal to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, a validation exception occurs at service startup time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Impersonation is not performed.","pos":[0,31]},{"content":"If &lt;xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*&gt; is equal to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, a validation exception occurs at service startup time.","pos":[32,267],"source":" If <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*> is equal to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, a validation exception occurs at service startup time."}]},{"pos":[2959,2971],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3372,3398],"content":"Impersonation is required.","needQuote":true,"needEscape":true,"nodes":[{"content":"Impersonation is required.","pos":[0,26]}]},{"pos":[3514,3526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ImpersonationOption\n  id: ImpersonationOption\n  children:\n  - System.ServiceModel.ImpersonationOption.Allowed\n  - System.ServiceModel.ImpersonationOption.NotAllowed\n  - System.ServiceModel.ImpersonationOption.Required\n  langs:\n  - csharp\n  name: ImpersonationOption\n  nameWithType: ImpersonationOption\n  fullName: System.ServiceModel.ImpersonationOption\n  type: Enum\n  summary: Specifies the impersonation behavior for a service operation on a service instance.\n  remarks: \"Use the ImpersonationOption enumeration to control impersonation in [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] applications.  \\n  \\n This setting interacts with a configuration property on <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations%2A> in the following table.\"\n  example:\n  - \"The following code example on the service shows how to have a method impersonate the caller by using the <xref:System.ServiceModel.OperationBehaviorAttribute> to set the impersonation level.  \\n  \\n [!code-vb[S_Basic_Service_Behaviors_Security_Impersonation#2](~/add/codesnippet/visualbasic/t-system.servicemodel.im_1.vb)]\\n [!code-cs[S_Basic_Service_Behaviors_Security_Impersonation#2](~/add/codesnippet/csharp/t-system.servicemodel.im_1.cs)]\"\n  syntax:\n    content: public enum ImpersonationOption\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.ServiceModel.ImpersonationOption.Allowed\n  id: Allowed\n  parent: System.ServiceModel.ImpersonationOption\n  langs:\n  - csharp\n  name: Allowed\n  nameWithType: ImpersonationOption.Allowed\n  fullName: System.ServiceModel.ImpersonationOption.Allowed\n  type: Field\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Impersonation is performed if credentials are available and <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*> is equal to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  syntax:\n    content: Allowed\n    return:\n      type: System.ServiceModel.ImpersonationOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ImpersonationOption.NotAllowed\n  id: NotAllowed\n  parent: System.ServiceModel.ImpersonationOption\n  langs:\n  - csharp\n  name: NotAllowed\n  nameWithType: ImpersonationOption.NotAllowed\n  fullName: System.ServiceModel.ImpersonationOption.NotAllowed\n  type: Field\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Impersonation is not performed. If <xref:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*> is equal to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, a validation exception occurs at service startup time.\n  syntax:\n    content: NotAllowed\n    return:\n      type: System.ServiceModel.ImpersonationOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ImpersonationOption.Required\n  id: Required\n  parent: System.ServiceModel.ImpersonationOption\n  langs:\n  - csharp\n  name: Required\n  nameWithType: ImpersonationOption.Required\n  fullName: System.ServiceModel.ImpersonationOption.Required\n  type: Field\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Impersonation is required.\n  syntax:\n    content: Required\n    return:\n      type: System.ServiceModel.ImpersonationOption\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.ServiceModel.ImpersonationOption.Allowed\n  parent: System.ServiceModel.ImpersonationOption\n  isExternal: false\n  name: Allowed\n  nameWithType: ImpersonationOption.Allowed\n  fullName: System.ServiceModel.ImpersonationOption.Allowed\n- uid: System.ServiceModel.ImpersonationOption\n  parent: System.ServiceModel\n  isExternal: false\n  name: ImpersonationOption\n  nameWithType: ImpersonationOption\n  fullName: System.ServiceModel.ImpersonationOption\n- uid: System.ServiceModel.ImpersonationOption.NotAllowed\n  parent: System.ServiceModel.ImpersonationOption\n  isExternal: false\n  name: NotAllowed\n  nameWithType: ImpersonationOption.NotAllowed\n  fullName: System.ServiceModel.ImpersonationOption.NotAllowed\n- uid: System.ServiceModel.ImpersonationOption.Required\n  parent: System.ServiceModel.ImpersonationOption\n  isExternal: false\n  name: Required\n  nameWithType: ImpersonationOption.Required\n  fullName: System.ServiceModel.ImpersonationOption.Required\n"}