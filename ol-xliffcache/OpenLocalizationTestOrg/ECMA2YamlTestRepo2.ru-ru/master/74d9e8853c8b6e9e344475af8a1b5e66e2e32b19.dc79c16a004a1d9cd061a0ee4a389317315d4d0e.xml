{"nodes":[{"pos":[355,424],"content":"Provides the base functionality for reading data from resource files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the base functionality for reading data from resource files.","pos":[0,69]}]},{"pos":[436,1067],"content":"Resource readers are used to read a stream of data from resource files in a particular format. Implement this interface when you want to control the way in which a resource file is read (for example, if the resource file was written by using a customized <xref:System.Resources.ResourceWriter>) or if you are using a non-standard format or file type for storing resources. Otherwise, use the default <xref:System.Resources.ResourceReader> class, which reads resource information from binary .resources files, or the <xref:System.Resources.ResXResourceReader> class, which reads resource information from XML resource (.resx) files.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Resource readers are used to read a stream of data from resource files in a particular format. Implement this interface when you want to control the way in which a resource file is read (for example, if the resource file was written by using a customized <xref:System.Resources.ResourceWriter>) or if you are using a non-standard format or file type for storing resources. Otherwise, use the default <xref:System.Resources.ResourceReader> class, which reads resource information from binary .resources files, or the <xref:System.Resources.ResXResourceReader> class, which reads resource information from XML resource (.resx) files.","pos":[0,631],"nodes":[{"content":"Resource readers are used to read a stream of data from resource files in a particular format.","pos":[0,94]},{"content":"Implement this interface when you want to control the way in which a resource file is read (for example, if the resource file was written by using a customized &lt;xref:System.Resources.ResourceWriter&gt;) or if you are using a non-standard format or file type for storing resources.","pos":[95,372],"source":" Implement this interface when you want to control the way in which a resource file is read (for example, if the resource file was written by using a customized <xref:System.Resources.ResourceWriter>) or if you are using a non-standard format or file type for storing resources."},{"content":"Otherwise, use the default &lt;xref:System.Resources.ResourceReader&gt; class, which reads resource information from binary .resources files, or the &lt;xref:System.Resources.ResXResourceReader&gt; class, which reads resource information from XML resource (.resx) files.","pos":[373,631],"source":" Otherwise, use the default <xref:System.Resources.ResourceReader> class, which reads resource information from binary .resources files, or the <xref:System.Resources.ResXResourceReader> class, which reads resource information from XML resource (.resx) files."}]}]},{"pos":[1644,1720],"content":"Closes the resource reader after releasing any resources associated with it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the resource reader after releasing any resources associated with it.","pos":[0,76]}]},{"pos":[1732,1802],"content":"Use this method to close a network connection or a file, if necessary.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use this method to close a network connection or a file, if necessary.","pos":[0,70]}]},{"pos":[2312,2377],"content":"Returns a dictionary enumerator of the resources for this reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a dictionary enumerator of the resources for this reader.","pos":[0,65]}]},{"pos":[2389,2885],"content":"Because <xref:System.Resources.IResourceReader> inherits the <xref:System.Collections.IEnumerable> interface, it must also provide an implementation of the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> method, which returns an <xref:System.Collections.IEnumerator> object that can be used to enumerate a collection. Typically, <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> is implemented as an explicit interface implementation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because <xref:System.Resources.IResourceReader> inherits the <xref:System.Collections.IEnumerable> interface, it must also provide an implementation of the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> method, which returns an <xref:System.Collections.IEnumerator> object that can be used to enumerate a collection. Typically, <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> is implemented as an explicit interface implementation.","pos":[0,496],"nodes":[{"content":"Because &lt;xref:System.Resources.IResourceReader&gt; inherits the &lt;xref:System.Collections.IEnumerable&gt; interface, it must also provide an implementation of the &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; method, which returns an &lt;xref:System.Collections.IEnumerator&gt; object that can be used to enumerate a collection.","pos":[0,349],"source":"Because <xref:System.Resources.IResourceReader> inherits the <xref:System.Collections.IEnumerable> interface, it must also provide an implementation of the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> method, which returns an <xref:System.Collections.IEnumerator> object that can be used to enumerate a collection."},{"content":"Typically, &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; is implemented as an explicit interface implementation.","pos":[350,496],"source":" Typically, <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> is implemented as an explicit interface implementation."}]}]},{"pos":[3078,3136],"content":"A dictionary enumerator for the resources for this reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary enumerator for the resources for this reader.","pos":[0,58]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Resources.IResourceReader\n  id: IResourceReader\n  children:\n  - System.Resources.IResourceReader.Close\n  - System.Resources.IResourceReader.GetEnumerator\n  langs:\n  - csharp\n  name: IResourceReader\n  nameWithType: IResourceReader\n  fullName: System.Resources.IResourceReader\n  type: Interface\n  summary: Provides the base functionality for reading data from resource files.\n  remarks: Resource readers are used to read a stream of data from resource files in a particular format. Implement this interface when you want to control the way in which a resource file is read (for example, if the resource file was written by using a customized <xref:System.Resources.ResourceWriter>) or if you are using a non-standard format or file type for storing resources. Otherwise, use the default <xref:System.Resources.ResourceReader> class, which reads resource information from binary .resources files, or the <xref:System.Resources.ResXResourceReader> class, which reads resource information from XML resource (.resx) files.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IResourceReader : IDisposable, System.Collections.IEnumerable\n  implements:\n  - System.Collections.IEnumerable\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.Resources.IResourceReader.Close\n  id: Close\n  parent: System.Resources.IResourceReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: IResourceReader.Close()\n  fullName: System.Resources.IResourceReader.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Closes the resource reader after releasing any resources associated with it.\n  remarks: Use this method to close a network connection or a file, if necessary.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Resources.IResourceReader.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.IResourceReader.GetEnumerator\n  id: GetEnumerator\n  parent: System.Resources.IResourceReader\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: IResourceReader.GetEnumerator()\n  fullName: System.Resources.IResourceReader.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Returns a dictionary enumerator of the resources for this reader.\n  remarks: Because <xref:System.Resources.IResourceReader> inherits the <xref:System.Collections.IEnumerable> interface, it must also provide an implementation of the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> method, which returns an <xref:System.Collections.IEnumerator> object that can be used to enumerate a collection. Typically, <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName> is implemented as an explicit interface implementation.\n  syntax:\n    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: A dictionary enumerator for the resources for this reader.\n  overload: System.Resources.IResourceReader.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Resources.IResourceReader.Close\n  parent: System.Resources.IResourceReader\n  isExternal: false\n  name: Close()\n  nameWithType: IResourceReader.Close()\n  fullName: System.Resources.IResourceReader.Close()\n- uid: System.Resources.IResourceReader.GetEnumerator\n  parent: System.Resources.IResourceReader\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: IResourceReader.GetEnumerator()\n  fullName: System.Resources.IResourceReader.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Resources.IResourceReader.Close*\n  parent: System.Resources.IResourceReader\n  isExternal: false\n  name: Close\n  nameWithType: IResourceReader.Close\n- uid: System.Resources.IResourceReader.GetEnumerator*\n  parent: System.Resources.IResourceReader\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: IResourceReader.GetEnumerator\n"}