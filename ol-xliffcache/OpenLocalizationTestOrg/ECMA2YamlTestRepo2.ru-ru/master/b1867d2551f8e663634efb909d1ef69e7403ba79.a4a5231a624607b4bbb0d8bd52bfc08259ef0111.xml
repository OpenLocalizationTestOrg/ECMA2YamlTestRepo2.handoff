{"nodes":[{"pos":[1587,1632],"content":"Represents a customizable reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a customizable reflection context.","pos":[0,45]}]},{"pos":[1645,5525],"content":"CustomReflectionContext provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model. The default CustomReflectionContext simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.       For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes. You can use CustomReflectionContext to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.       To use CustomReflectionContext effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context. Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.       To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method. These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.      > [!WARNING] >  CustomReflectionContext methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.       To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method. The method accepts a parameter that specifies the reflected type, and returns a list of additional properties. You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return. You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property. Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.      > [!WARNING] >  Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts. You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.      > [!WARNING] >  A CustomReflectionContext object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method. It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"CustomReflectionContext provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.","pos":[0,203]},{"content":"The default CustomReflectionContext simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.","pos":[204,493]},{"content":"For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.","pos":[500,691]},{"content":"You can use CustomReflectionContext to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.","pos":[692,886]},{"content":"To use CustomReflectionContext effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.","pos":[893,1136]},{"content":"Many reflection methods in the .NET Framework provide a &lt;xref:System.Reflection.ReflectionContext&gt; parameter for this purpose.","pos":[1137,1263],"source":" Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose."},{"content":"To modify the attributes that are applied to a reflected parameter or member, override the &lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt; or &lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt; method.","pos":[1270,1716],"source":"       To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method."},{"content":"These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.","pos":[1717,1907]},{"content":"&gt; <ph id=\"ph1\">[!WARNING]</ph> &gt;  CustomReflectionContext methods should not access the list of attributes of a reflected object or method directly by calling the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method on the provided &lt;xref:System.Reflection.MemberInfo&gt; or &lt;xref:System.Reflection.ParameterInfo&gt; instance, but should instead use the <ph id=\"ph2\">`declaredAttributes`</ph> list, which is passed as a parameter to the &lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt; method overloads.","pos":[1913,2417],"source":"      > [!WARNING] >  CustomReflectionContext methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads."},{"content":"To add properties to a reflected type, override the &lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt; method.","pos":[2424,2557],"source":"       To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method."},{"content":"The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.","pos":[2558,2668]},{"content":"You should use the &lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt; method to create property objects to return.","pos":[2669,2807],"source":" You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return."},{"content":"You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.","pos":[2808,2986]},{"content":"Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.","pos":[2987,3082]},{"content":"&gt; <ph id=\"ph1\">[!WARNING]</ph> &gt;  Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.","pos":[3088,3272],"source":"      > [!WARNING] >  Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts."},{"content":"You can use the &lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt; method to obtain a particular reflection context's version of a reflected object.","pos":[3273,3438],"source":" You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object."},{"content":"&gt; <ph id=\"ph1\">[!WARNING]</ph> &gt;  A CustomReflectionContext object alters the attributes returned by a particular reflection object, such as those obtained by the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method.","pos":[3444,3655],"source":"      > [!WARNING] >  A CustomReflectionContext object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method."},{"content":"It does not alter the custom attribute data returned by the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt; method, and these two lists will not match when you use a custom reflection context.","pos":[3656,3863],"source":" It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context."}]},{"pos":[6708,6819],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Context.CustomReflectionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Reflection.Context.CustomReflectionContext\"></xref> class."},{"pos":[7593,7752],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Context.CustomReflectionContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified reflection context as a base.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Reflection.Context.CustomReflectionContext\"></xref> class with the specified reflection context as a base."},{"pos":[7956,7996],"content":"The reflection context to use as a base.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reflection context to use as a base.","pos":[0,40]}]},{"pos":[8582,8731],"content":"When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.","pos":[0,149]}]},{"pos":[8743,8941],"content":"Override this method to specify which properties should be added to a given type. To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Override this method to specify which properties should be added to a given type. To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.","pos":[0,198],"nodes":[{"content":"Override this method to specify which properties should be added to a given type.","pos":[0,81]},{"content":"To create the properties, use the &lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt; method.","pos":[82,198],"source":" To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method."}]}]},{"pos":[9155,9185],"content":"The type to add properties to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to add properties to.","pos":[0,30]}]},{"pos":[9300,9361],"content":"A collection of additional properties for the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of additional properties for the specified type.","pos":[0,61]}]},{"pos":[10303,10470],"content":"Creates an object that represents a property to be added to a type, to be used with the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that represents a property to be added to a type, to be used with the &lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties*&gt; method.","pos":[0,167],"source":"Creates an object that represents a property to be added to a type, to be used with the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*> method."}]},{"pos":[10482,10714],"content":"Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Objects that are returned by this method are not complete &lt;xref:System.Reflection.PropertyInfo&gt; objects, and should be used only in the context of the &lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt; method.","pos":[0,232],"source":"Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method."}]},{"pos":[10968,11003],"content":"The type of the property to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the property to create.","pos":[0,35]}]},{"pos":[11064,11099],"content":"The name of the property to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to create.","pos":[0,35]}]},{"pos":[11189,11298],"content":"An object that represents the property's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"An object that represents the property's <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor."},{"pos":[11390,11499],"content":"An object that represents the property's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"An object that represents the property's <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor."},{"pos":[11574,11613],"content":"An object that represents the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the property.","pos":[0,39]}]},{"pos":[13105,13314],"content":"Creates an object that represents a property to be added to a type, to be used with the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*> method and using the specified custom attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that represents a property to be added to a type, to be used with the &lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties*&gt; method and using the specified custom attributes.","pos":[0,209],"source":"Creates an object that represents a property to be added to a type, to be used with the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*> method and using the specified custom attributes."}]},{"pos":[13326,13558],"content":"Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Objects that are returned by this method are not complete &lt;xref:System.Reflection.PropertyInfo&gt; objects, and should be used only in the context of the &lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt; method.","pos":[0,232],"source":"Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method."}]},{"pos":[14036,14071],"content":"The type of the property to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the property to create.","pos":[0,35]}]},{"pos":[14132,14167],"content":"The name of the property to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to create.","pos":[0,35]}]},{"pos":[14257,14366],"content":"An object that represents the property's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"An object that represents the property's <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor."},{"pos":[14458,14567],"content":"An object that represents the property's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"An object that represents the property's <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor."},{"pos":[14691,14750],"content":"A collection of custom attributes to apply to the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of custom attributes to apply to the property.","pos":[0,59]}]},{"pos":[14872,15001],"content":"A collection of custom attributes to apply to the property's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"A collection of custom attributes to apply to the property's <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor."},{"pos":[15123,15252],"content":"A collection of custom attributes to apply to the property's <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"A collection of custom attributes to apply to the property's <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor."},{"pos":[15327,15366],"content":"An object that represents the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the property.","pos":[0,39]}]},{"pos":[16211,16352],"content":"When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.","pos":[0,141]}]},{"pos":[16660,16712],"content":"The member whose custom attributes will be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The member whose custom attributes will be returned.","pos":[0,52]}]},{"pos":[16827,16890],"content":"A collection of the member's attributes in its current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the member's attributes in its current context.","pos":[0,63]}]},{"pos":[16988,17090],"content":"A collection that represents the custom attributes of the specified member in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that represents the custom attributes of the specified member in this reflection context.","pos":[0,102]}]},{"pos":[17955,18099],"content":"When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.","pos":[0,144]}]},{"pos":[18419,18474],"content":"The parameter whose custom attributes will be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameter whose custom attributes will be returned.","pos":[0,55]}]},{"pos":[18589,18655],"content":"A collection of the parameter's attributes in its current context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the parameter's attributes in its current context.","pos":[0,66]}]},{"pos":[18753,18858],"content":"A collection that represents the custom attributes of the specified parameter in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that represents the custom attributes of the specified parameter in this reflection context.","pos":[0,105]}]},{"pos":[19490,19623],"content":"Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.","pos":[0,133]}]},{"pos":[19834,19907],"content":"The external representation of the assembly to represent in this context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The external representation of the assembly to represent in this context.","pos":[0,73]}]},{"pos":[19978,20040],"content":"The representation of the assembly in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The representation of the assembly in this reflection context.","pos":[0,62]}]},{"pos":[20644,20764],"content":"Gets the representation, in this reflection context, of a type represented by an object from another reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the representation, in this reflection context, of a type represented by an object from another reflection context.","pos":[0,120]}]},{"pos":[20963,21032],"content":"The external representation of the type to represent in this context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The external representation of the type to represent in this context.","pos":[0,69]}]},{"pos":[21103,21161],"content":"The representation of the type in this reflection context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The representation of the type in this reflection context.","pos":[0,58]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Context.CustomReflectionContext\n  id: CustomReflectionContext\n  children:\n  - System.Reflection.Context.CustomReflectionContext.#ctor\n  - System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)\n  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  langs:\n  - csharp\n  name: CustomReflectionContext\n  nameWithType: CustomReflectionContext\n  fullName: System.Reflection.Context.CustomReflectionContext\n  type: Class\n  summary: Represents a customizable reflection context.\n  remarks: \"CustomReflectionContext provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model. The default CustomReflectionContext simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.  \\n  \\n For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes. You can use CustomReflectionContext to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.  \\n  \\n To use CustomReflectionContext effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context. Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.  \\n  \\n To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method. These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.  \\n  \\n> [!WARNING]\\n>  CustomReflectionContext methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.  \\n  \\n To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method. The method accepts a parameter that specifies the reflected type, and returns a list of additional properties. You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return. You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property. Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.  \\n  \\n> [!WARNING]\\n>  Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts. You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.  \\n  \\n> [!WARNING]\\n>  A CustomReflectionContext object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method. It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.\"\n  example:\n  - \"The following example demonstrates how to subclass  CustomReflectionContext to add a custom attribute to all the members of a given type whose names begin with \\\"To\\\". To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.  \\n  \\n [!code-cs[System.Reflection.Context.CustomReflectionContext#1](~/add/codesnippet/csharp/system.reflection.context.customreflectioncontext.consoleapplication1/program.cs#1)]\"\n  syntax:\n    content: 'public abstract class CustomReflectionContext : System.Reflection.ReflectionContext'\n  inheritance:\n  - System.Reflection.ReflectionContext\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: CustomReflectionContext()\n  nameWithType: CustomReflectionContext.CustomReflectionContext()\n  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()\n  type: Constructor\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.Context.CustomReflectionContext\"></xref> class.\n  syntax:\n    content: protected CustomReflectionContext ();\n    parameters: []\n  overload: System.Reflection.Context.CustomReflectionContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)\n  id: '#ctor(System.Reflection.ReflectionContext)'\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: CustomReflectionContext(ReflectionContext)\n  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)\n  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)\n  type: Constructor\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.Context.CustomReflectionContext\"></xref> class with the specified reflection context as a base.\n  syntax:\n    content: protected CustomReflectionContext (System.Reflection.ReflectionContext source);\n    parameters:\n    - id: source\n      type: System.Reflection.ReflectionContext\n      description: The reflection context to use as a base.\n  overload: System.Reflection.Context.CustomReflectionContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  id: AddProperties(System.Type)\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: AddProperties(Type)\n  nameWithType: CustomReflectionContext.AddProperties(Type)\n  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.\n  remarks: Override this method to specify which properties should be added to a given type. To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.\n  syntax:\n    content: protected virtual System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> AddProperties (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to add properties to.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n      description: A collection of additional properties for the specified type.\n  overload: System.Reflection.Context.CustomReflectionContext.AddProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)\n  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: Creates an object that represents a property to be added to a type, to be used with the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*> method.\n  remarks: Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.\n  syntax:\n    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter);\n    parameters:\n    - id: propertyType\n      type: System.Type\n      description: The type of the property to create.\n    - id: name\n      type: System.String\n      description: The name of the property to create.\n    - id: getter\n      type: System.Func{System.Object,System.Object}\n      description: An object that represents the property's <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor.\n    - id: setter\n      type: System.Action{System.Object,System.Object}\n      description: An object that represents the property's <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: An object that represents the property.\n  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)\n  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)\n  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: Creates an object that represents a property to be added to a type, to be used with the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*> method and using the specified custom attributes.\n  remarks: Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.\n  syntax:\n    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter, System.Collections.Generic.IEnumerable<Attribute> propertyCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> getterCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> setterCustomAttributes);\n    parameters:\n    - id: propertyType\n      type: System.Type\n      description: The type of the property to create.\n    - id: name\n      type: System.String\n      description: The name of the property to create.\n    - id: getter\n      type: System.Func{System.Object,System.Object}\n      description: An object that represents the property's <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor.\n    - id: setter\n      type: System.Action{System.Object,System.Object}\n      description: An object that represents the property's <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.\n    - id: propertyCustomAttributes\n      type: System.Collections.Generic.IEnumerable{System.Attribute}\n      description: A collection of custom attributes to apply to the property.\n    - id: getterCustomAttributes\n      type: System.Collections.Generic.IEnumerable{System.Attribute}\n      description: A collection of custom attributes to apply to the property's <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor.\n    - id: setterCustomAttributes\n      type: System.Collections.Generic.IEnumerable{System.Attribute}\n      description: A collection of custom attributes to apply to the property's <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: An object that represents the property.\n  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)\n  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.\n  syntax:\n    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<object> declaredAttributes);\n    parameters:\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The member whose custom attributes will be returned.\n    - id: declaredAttributes\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection of the member's attributes in its current context.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection that represents the custom attributes of the specified member in this reflection context.\n  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)\n  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.\n  syntax:\n    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable<object> declaredAttributes);\n    parameters:\n    - id: parameter\n      type: System.Reflection.ParameterInfo\n      description: The parameter whose custom attributes will be returned.\n    - id: declaredAttributes\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection of the parameter's attributes in its current context.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection that represents the custom attributes of the specified parameter in this reflection context.\n  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  id: MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: MapAssembly(Assembly)\n  nameWithType: CustomReflectionContext.MapAssembly(Assembly)\n  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.\n  syntax:\n    content: public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The external representation of the assembly to represent in this context.\n    return:\n      type: System.Reflection.Assembly\n      description: The representation of the assembly in this reflection context.\n  overload: System.Reflection.Context.CustomReflectionContext.MapAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  id: MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.Context.CustomReflectionContext\n  langs:\n  - csharp\n  name: MapType(TypeInfo)\n  nameWithType: CustomReflectionContext.MapType(TypeInfo)\n  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)\n  type: Method\n  assemblies:\n  - System.Reflection.Context\n  namespace: System.Reflection.Context\n  summary: Gets the representation, in this reflection context, of a type represented by an object from another reflection context.\n  syntax:\n    content: public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);\n    parameters:\n    - id: type\n      type: System.Reflection.TypeInfo\n      description: The external representation of the type to represent in this context.\n    return:\n      type: System.Reflection.TypeInfo\n      description: The representation of the type in this reflection context.\n  overload: System.Reflection.Context.CustomReflectionContext.MapType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Reflection.ReflectionContext\n  isExternal: false\n  name: System.Reflection.ReflectionContext\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CustomReflectionContext()\n  nameWithType: CustomReflectionContext.CustomReflectionContext()\n  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CustomReflectionContext(ReflectionContext)\n  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)\n  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)\n- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: AddProperties(Type)\n  nameWithType: CustomReflectionContext.AddProperties(Type)\n  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<PropertyInfo>\n  nameWithType: IEnumerable<PropertyInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Reflection.PropertyInfo>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: PropertyInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)\n  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: true\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Func{System.Object,System.Object}\n  parent: System\n  isExternal: true\n  name: Func<Object,Object>\n  nameWithType: Func<Object,Object>\n  fullName: System.Func<System.Object,System.Object>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Object,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Action{System.Object,System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Object,Object>\n  nameWithType: Action<Object,Object>\n  fullName: System.Action<System.Object,System.Object>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Object,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)\n  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)\n  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)\n- uid: System.Collections.Generic.IEnumerable{System.Attribute}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Attribute>\n  nameWithType: IEnumerable<Attribute>\n  fullName: System.Collections.Generic.IEnumerable<System.Attribute>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Attribute>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: Attribute\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)\n  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Object>\n  nameWithType: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)\n  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)\n  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: true\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: MapAssembly(Assembly)\n  nameWithType: CustomReflectionContext.MapAssembly(Assembly)\n  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: MapType(TypeInfo)\n  nameWithType: CustomReflectionContext.MapType(TypeInfo)\n  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: true\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Reflection.Context.CustomReflectionContext.#ctor*\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CustomReflectionContext\n  nameWithType: CustomReflectionContext.CustomReflectionContext\n- uid: System.Reflection.Context.CustomReflectionContext.AddProperties*\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: AddProperties\n  nameWithType: CustomReflectionContext.AddProperties\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty*\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CreateProperty\n  nameWithType: CustomReflectionContext.CreateProperty\n- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: CustomReflectionContext.GetCustomAttributes\n- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly*\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: MapAssembly\n  nameWithType: CustomReflectionContext.MapAssembly\n- uid: System.Reflection.Context.CustomReflectionContext.MapType*\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: MapType\n  nameWithType: CustomReflectionContext.MapType\n"}