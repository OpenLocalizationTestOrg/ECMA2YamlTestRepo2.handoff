{"nodes":[{"pos":[2300,2424],"content":"Exposes the public members of the &lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt; class to unmanaged code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Exposes the public members of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.EventInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> class to unmanaged code.","pos":[0,124],"source":"Exposes the public members of the &lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt; class to unmanaged code."}]},{"pos":[2437,2726],"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.EventInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.EventInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.","pos":[0,287],"nodes":[{"content":"This interface is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,111]},{"content":"This interface preserves the vtable order of the &lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.","pos":[118,287],"source":"       This interface preserves the vtable order of the <xref:System.Reflection.EventInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."}]}]},{"pos":[3731,3850],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.AddEventHandler*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.AddEventHandler*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.AddEventHandler*> method."}]},{"pos":[3863,4086],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.AddEventHandler%2A> method adds an event handler to an event source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.AddEventHandler%2A> method adds an event handler to an event source.","pos":[0,221],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt; method adds an event handler to an event source.","pos":[115,221],"source":"       The <xref:System.Reflection.EventInfo.AddEventHandler%2A> method adds an event handler to an event source."}]}]},{"pos":[4252,4269],"content":"The event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event source.","pos":[0,17]}]},{"pos":[4335,4408],"content":"A method or methods to be invoked when the event is raised by the target.","needQuote":true,"needEscape":true,"nodes":[{"content":"A method or methods to be invoked when the event is raised by the target.","pos":[0,73]}]},{"pos":[4890,5006],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.Attributes*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.Attributes*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.Attributes*> property."}]},{"pos":[5019,5233],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.Attributes%2A> property gets the attributes for this event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.Attributes%2A> property gets the attributes for this event.","pos":[0,212],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.Attributes%2A&gt; property gets the attributes for this event.","pos":[115,212],"source":"       The <xref:System.Reflection.EventInfo.Attributes%2A> property gets the attributes for this event."}]}]},{"pos":[5396,5436],"content":"The read-only attributes for this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The read-only attributes for this event.","pos":[0,40]}]},{"pos":[5928,6048],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property."}]},{"pos":[6061,6285],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.","pos":[0,222],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.","pos":[115,222],"source":"       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."}]}]},{"pos":[6400,6512],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for the class that declares this member.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object for the class that declares this member."},{"pos":[7024,7120],"content":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.","pos":[0,96],"source":"Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method."}]},{"pos":[7133,7391],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.","pos":[0,256],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.","pos":[115,256],"source":"       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."}]}]},{"pos":[7528,7602],"content":"The <xref:System.Object> to compare with the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.","pos":[0,74],"source":"The <xref:System.Object> to compare with the current <xref:System.Object>."}]},{"pos":[7661,7880],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8383,8505],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.EventHandlerType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.EventHandlerType*&gt; property.","pos":[0,122],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.EventHandlerType*> property."}]},{"pos":[8518,8806],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.EventHandlerType%2A> property gets the <xref:System.Type> object of the underlying event-handler delegate associated with this event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.EventHandlerType%2A> property gets the <xref:System.Type> object of the underlying event-handler delegate associated with this event.","pos":[0,286],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.EventHandlerType%2A&gt; property gets the &lt;xref:System.Type&gt; object of the underlying event-handler delegate associated with this event.","pos":[115,286],"source":"       The <xref:System.Reflection.EventInfo.EventHandlerType%2A> property gets the <xref:System.Type> object of the underlying event-handler delegate associated with this event."}]}]},{"pos":[8924,9002],"content":"A read-only <xref:System.Type> object representing the delegate event handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read-only &lt;xref:System.Type&gt; object representing the delegate event handler.","pos":[0,78],"source":"A read-only <xref:System.Type> object representing the delegate event handler."}]},{"pos":[9499,9615],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetAddMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetAddMethod*&gt; method.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetAddMethod*> method."}]},{"pos":[9628,9884],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method returns the method used to add an event-handler delegate to the event source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method returns the method used to add an event-handler delegate to the event source.","pos":[0,254],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.GetAddMethod%2A&gt; method returns the method used to add an event-handler delegate to the event source.","pos":[115,254],"source":"       The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method returns the method used to add an event-handler delegate to the event source."}]}]},{"pos":[10053,10180],"content":"A <xref:System.Reflection.MethodInfo> object representing the method used to add an event-handler delegate to the event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to add an event-handler delegate to the event source.","pos":[0,127],"source":"A <xref:System.Reflection.MethodInfo> object representing the method used to add an event-handler delegate to the event source."}]},{"pos":[10726,10842],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetAddMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetAddMethod*&gt; method.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetAddMethod*> method."}]},{"pos":[10855,11223],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods","pos":[0,366],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.GetAddMethod%2A&gt; method retrieves the &lt;xref:System.Reflection.MethodInfo&gt; object for the &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt; method of the event and specifies whether to return non-public methods","pos":[115,366],"source":"       The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods"}]}]},{"pos":[11397,11562],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return non-public methods; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return non-public methods; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11635,11762],"content":"A <xref:System.Reflection.MethodInfo> object representing the method used to add an event-handler delegate to the event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to add an event-handler delegate to the event source.","pos":[0,127],"source":"A <xref:System.Reflection.MethodInfo> object representing the method used to add an event-handler delegate to the event source."}]},{"pos":[12343,12467],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[12480,12856],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods","pos":[0,374],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method retrieves the &lt;xref:System.Reflection.MethodInfo&gt; object for the &lt;xref:System.Reflection.EventInfo.AddEventHandler%2A&gt; method of the event and specifies whether to return non-public methods","pos":[115,374],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods"}]}]},{"pos":[13013,13154],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search a member's inheritance chain to find the attributes; otherwise, false.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to search a member's inheritance chain to find the attributes; otherwise, false."},{"pos":[13214,13328],"content":"An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.","pos":[0,114]}]},{"pos":[13955,14079],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.","pos":[0,124],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."}]},{"pos":[14092,14350],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.","pos":[0,256],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.","pos":[115,256],"source":"       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."}]}]},{"pos":[14530,14629],"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of attribute to search for. Only attributes that are assignable to this type are returned.","pos":[0,99],"nodes":[{"content":"The type of attribute to search for.","pos":[0,36]},{"content":"Only attributes that are assignable to this type are returned.","pos":[37,99]}]}]},{"pos":[14694,14895],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to search this member's inheritance chain to find the attributes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14955,15079],"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.","pos":[0,124]}]},{"pos":[15574,15675],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.","pos":[0,101],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method."}]},{"pos":[15688,16020],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,330],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.","pos":[115,210],"source":"       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type."},{"content":"&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[211,330],"source":" <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table."}]}]},{"pos":[16147,16186],"content":"The hash code for the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The hash code for the current instance.","pos":[0,39]}]},{"pos":[16919,16986],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]},{"pos":[16998,17183],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[109,185],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]},{"pos":[17383,17425],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[17491,17522],"content":"An array of names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of names to be mapped.","pos":[0,31]}]},{"pos":[17585,17621],"content":"The count of the names to be mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The count of the names to be mapped.","pos":[0,36]}]},{"pos":[17682,17733],"content":"The locale context in which to interpret the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]},{"pos":[17798,17888],"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array allocated by the caller that receives the identifiers corresponding to the names.","pos":[0,90]}]},{"pos":[18392,18510],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRaiseMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRaiseMethod*&gt; method.","pos":[0,118],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRaiseMethod*> method."}]},{"pos":[18523,18763],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised.","pos":[0,238],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt; method returns the method that is called when the event is raised.","pos":[115,238],"source":"       The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised."}]}]},{"pos":[18934,18985],"content":"The method that is called when the event is raised.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method that is called when the event is raised.","pos":[0,51]}]},{"pos":[19543,19661],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRaiseMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRaiseMethod*&gt; method.","pos":[0,118],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRaiseMethod*> method."}]},{"pos":[19674,19965],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised and specifies whether to return non-public methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised and specifies whether to return non-public methods.","pos":[0,289],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.GetRaiseMethod%2A&gt; method returns the method that is called when the event is raised and specifies whether to return non-public methods.","pos":[115,289],"source":"       The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised and specifies whether to return non-public methods."}]}]},{"pos":[20141,20306],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return non-public methods; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return non-public methods; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20379,20468],"content":"The <xref:System.Reflection.MethodInfo> object that was called when the event was raised.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Reflection.MethodInfo&gt; object that was called when the event was raised.","pos":[0,89],"source":"The <xref:System.Reflection.MethodInfo> object that was called when the event was raised."}]},{"pos":[20978,21097],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRemoveMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRemoveMethod*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRemoveMethod*> method."}]},{"pos":[21110,21374],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method returns the method used to remove an event-handler delegate from the event source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method returns the method used to remove an event-handler delegate from the event source.","pos":[0,262],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt; method returns the method used to remove an event-handler delegate from the event source.","pos":[115,262],"source":"       The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method returns the method used to remove an event-handler delegate from the event source."}]}]},{"pos":[21546,21678],"content":"A <xref:System.Reflection.MethodInfo> object representing the method used to remove an event-handler delegate from the event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to remove an event-handler delegate from the event source.","pos":[0,132],"source":"A <xref:System.Reflection.MethodInfo> object representing the method used to remove an event-handler delegate from the event source."}]},{"pos":[22242,22361],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRemoveMethod*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.GetRemoveMethod*&gt; method.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRemoveMethod*> method."}]},{"pos":[22374,22699],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for removing a method of the event and specifies whether to return non-public methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for removing a method of the event and specifies whether to return non-public methods.","pos":[0,323],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.GetRemoveMethod%2A&gt; method retrieves the &lt;xref:System.Reflection.MethodInfo&gt; object for removing a method of the event and specifies whether to return non-public methods.","pos":[115,323],"source":"       The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for removing a method of the event and specifies whether to return non-public methods."}]}]},{"pos":[22876,23041],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return non-public methods; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return non-public methods; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23114,23246],"content":"A <xref:System.Reflection.MethodInfo> object representing the method used to remove an event-handler delegate from the event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.MethodInfo&gt; object representing the method used to remove an event-handler delegate from the event source.","pos":[0,132],"source":"A <xref:System.Reflection.MethodInfo> object representing the method used to remove an event-handler delegate from the event source."}]},{"pos":[23717,23814],"content":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.","pos":[0,97],"source":"Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method."}]},{"pos":[23827,24025],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetType%2A> method gets the type of the current instance.","pos":[0,196],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.","pos":[115,196],"source":"       The <xref:System.Object.GetType%2A> method gets the type of the current instance."}]}]},{"pos":[24148,24176],"content":"A <xref:System.Type> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; object.","pos":[0,28],"source":"A <xref:System.Type> object."}]},{"pos":[24805,24914],"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the type information for an object, which can be used to get the type information for an interface.","pos":[0,109]}]},{"pos":[24926,25109],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[109,183],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]},{"pos":[25277,25308],"content":"The type information to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type information to return.","pos":[0,31]}]},{"pos":[25369,25416],"content":"The locale identifier for the type information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]},{"pos":[25480,25531],"content":"A pointer to the requested type information object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the requested type information object.","pos":[0,51]}]},{"pos":[26093,26185],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]},{"pos":[26197,26385],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[109,188],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]},{"pos":[26537,26715],"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.","pos":[0,178],"nodes":[{"content":"When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.","pos":[0,138]},{"content":"This parameter is passed uninitialized.","pos":[139,178]}]}]},{"pos":[27560,27623],"content":"Provides access to properties and methods exposed by an object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]},{"pos":[27635,27813],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[109,178],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]},{"pos":[28076,28105],"content":"An identifier for the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier for the member.","pos":[0,29]}]},{"pos":[28164,28206],"content":"Reserved for future use. Must be IID_NULL.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]},{"pos":[28267,28318],"content":"The locale context in which to interpret arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]},{"pos":[28380,28421],"content":"Flags describing the context of the call.","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]},{"pos":[28489,28650],"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,161]}]},{"pos":[28717,28775],"content":"A pointer to the location where the result will be stored.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to the location where the result will be stored.","pos":[0,58]}]},{"pos":[28842,28903],"content":"A pointer to a structure that contains exception information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A pointer to a structure that contains exception information.","pos":[0,61]}]},{"pos":[28968,29018],"content":"The index of the first argument that has an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]},{"pos":[29582,29696],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; method.","pos":[0,114],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method."}]},{"pos":[29709,29986],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instances of the `attributeType` parameter are applied to this member.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; method indicates whether one or more instances of the <ph id=\"ph1\">`attributeType`</ph> parameter are applied to this member.","pos":[115,275],"source":"       The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instances of the `attributeType` parameter are applied to this member."}]},{"pos":[30152,30267],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to which the custom attributes are applied.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object to which the custom attributes are applied."},{"pos":[30332,30533],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to search this member's inheritance chain to find the attributes; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to search this member's inheritance chain to find the attributes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[30592,30822],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one or more instance of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is applied to this member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instance of the <code>attributeType</code> parameter is applied to this member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[31303,31420],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.IsMulticast*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.IsMulticast*&gt; property.","pos":[0,117],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.IsMulticast*> property."}]},{"pos":[31433,31668],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.IsMulticast%2A> property gets a value indicating whether the event is multicast.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.IsMulticast%2A> property gets a value indicating whether the event is multicast.","pos":[0,233],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.IsMulticast%2A&gt; property gets a value indicating whether the event is multicast.","pos":[115,233],"source":"       The <xref:System.Reflection.EventInfo.IsMulticast%2A> property gets a value indicating whether the event is multicast."}]}]},{"pos":[31784,31975],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the delegate is an instance of a multicast delegate; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delegate is an instance of a multicast delegate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32468,32587],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.IsSpecialName*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.IsSpecialName*&gt; property.","pos":[0,119],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.IsSpecialName*> property."}]},{"pos":[32600,32894],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.IsSpecialName%2A> property gets a value indicating whether the <xref:System.Reflection.EventInfo> object has a name with a special meaning.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.IsSpecialName%2A> property gets a value indicating whether the <xref:System.Reflection.EventInfo> object has a name with a special meaning.","pos":[0,292],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.IsSpecialName%2A&gt; property gets a value indicating whether the &lt;xref:System.Reflection.EventInfo&gt; object has a name with a special meaning.","pos":[115,292],"source":"       The <xref:System.Reflection.EventInfo.IsSpecialName%2A> property gets a value indicating whether the <xref:System.Reflection.EventInfo> object has a name with a special meaning."}]}]},{"pos":[33012,33181],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this event has a special name; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this event has a special name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33661,33777],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.MemberType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.MemberType*&gt; property.","pos":[0,116],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.MemberType*> property."}]},{"pos":[33790,34059],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is an event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is an event.","pos":[0,267],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating that this member is an event.","pos":[115,267],"source":"       The <xref:System.Reflection.EventInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is an event."}]}]},{"pos":[34214,34313],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Reflection.MemberTypes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value indicating that this member is an event.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is an event."},{"pos":[34760,34871],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.","pos":[0,111],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property."}]},{"pos":[34884,35094],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.","pos":[0,208],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.","pos":[115,208],"source":"       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."}]}]},{"pos":[35204,35269],"content":"A <xref:System.String> object containing the name of this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; object containing the name of this member.","pos":[0,65],"source":"A <xref:System.String> object containing the name of this member."}]},{"pos":[35755,35875],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.","pos":[0,120],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property."}]},{"pos":[35888,36131],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance.","pos":[0,241],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance.","pos":[115,241],"source":"       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance."}]}]},{"pos":[36246,36312],"content":"The <xref:System.Type> object that was used to obtain this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; object that was used to obtain this object.","pos":[0,66],"source":"The <xref:System.Type> object that was used to obtain this object."}]},{"pos":[36943,37065],"content":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.RemoveEventHandler*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Reflection.EventInfo.RemoveEventHandler*&gt; method.","pos":[0,122],"source":"Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.RemoveEventHandler*> method."}]},{"pos":[37078,37309],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.RemoveEventHandler%2A> method removes an event handler from an event source.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.EventInfo.RemoveEventHandler%2A> method removes an event handler from an event source.","pos":[0,229],"nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]},{"content":"The &lt;xref:System.Reflection.EventInfo.RemoveEventHandler%2A&gt; method removes an event handler from an event source.","pos":[115,229],"source":"       The <xref:System.Reflection.EventInfo.RemoveEventHandler%2A> method removes an event handler from an event source."}]}]},{"pos":[37478,37495],"content":"The event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event source.","pos":[0,17]}]},{"pos":[37561,37627],"content":"The delegate to be disassociated from the events raised by target.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to be disassociated from the events raised by target.","pos":[0,66]}]},{"pos":[38106,38204],"content":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.","pos":[0,98],"source":"Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method."}]},{"pos":[38216,38324],"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is for access to managed classes from unmanaged code and should not be called from managed code.","pos":[0,108]}]},{"pos":[38451,38509],"content":"A string that represents the current <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current &lt;xref:System.Object&gt;.","pos":[0,58],"source":"A string that represents the current <xref:System.Object>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices._EventInfo\n  id: _EventInfo\n  children:\n  - System.Runtime.InteropServices._EventInfo.AddEventHandler(System.Object,System.Delegate)\n  - System.Runtime.InteropServices._EventInfo.Attributes\n  - System.Runtime.InteropServices._EventInfo.DeclaringType\n  - System.Runtime.InteropServices._EventInfo.Equals(System.Object)\n  - System.Runtime.InteropServices._EventInfo.EventHandlerType\n  - System.Runtime.InteropServices._EventInfo.GetAddMethod\n  - System.Runtime.InteropServices._EventInfo.GetAddMethod(System.Boolean)\n  - System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Boolean)\n  - System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._EventInfo.GetHashCode\n  - System.Runtime.InteropServices._EventInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._EventInfo.GetRaiseMethod\n  - System.Runtime.InteropServices._EventInfo.GetRaiseMethod(System.Boolean)\n  - System.Runtime.InteropServices._EventInfo.GetRemoveMethod\n  - System.Runtime.InteropServices._EventInfo.GetRemoveMethod(System.Boolean)\n  - System.Runtime.InteropServices._EventInfo.GetType\n  - System.Runtime.InteropServices._EventInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(System.UInt32@)\n  - System.Runtime.InteropServices._EventInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices._EventInfo.IsDefined(System.Type,System.Boolean)\n  - System.Runtime.InteropServices._EventInfo.IsMulticast\n  - System.Runtime.InteropServices._EventInfo.IsSpecialName\n  - System.Runtime.InteropServices._EventInfo.MemberType\n  - System.Runtime.InteropServices._EventInfo.Name\n  - System.Runtime.InteropServices._EventInfo.ReflectedType\n  - System.Runtime.InteropServices._EventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  - System.Runtime.InteropServices._EventInfo.ToString\n  langs:\n  - csharp\n  name: _EventInfo\n  nameWithType: _EventInfo\n  fullName: System.Runtime.InteropServices._EventInfo\n  type: Interface\n  summary: Exposes the public members of the &lt;xref:System.Reflection.EventInfo?displayProperty=fullName&gt; class to unmanaged code.\n  remarks: \"This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n This interface preserves the vtable order of the <xref:System.Reflection.EventInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"9DE59C64-D889-35A1-B897-587D74469E5B\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.EventInfo))]\n\n      public interface _EventInfo\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.AddEventHandler(System.Object,System.Delegate)\n  id: AddEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: AddEventHandler(Object,Delegate)\n  nameWithType: _EventInfo.AddEventHandler(Object,Delegate)\n  fullName: System.Runtime.InteropServices._EventInfo.AddEventHandler(Object,Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.AddEventHandler*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.AddEventHandler%2A> method adds an event handler to an event source.\"\n  syntax:\n    content: public void AddEventHandler (object target, Delegate handler);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The event source.\n    - id: handler\n      type: System.Delegate\n      description: A method or methods to be invoked when the event is raised by the target.\n  overload: System.Runtime.InteropServices._EventInfo.AddEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.Attributes\n  id: Attributes\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: _EventInfo.Attributes\n  fullName: System.Runtime.InteropServices._EventInfo.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.Attributes*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.Attributes%2A> property gets the attributes for this event.\"\n  syntax:\n    content: public System.Reflection.EventAttributes Attributes { get; }\n    return:\n      type: System.Reflection.EventAttributes\n      description: The read-only attributes for this event.\n  overload: System.Runtime.InteropServices._EventInfo.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: _EventInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._EventInfo.DeclaringType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.\"\n  syntax:\n    content: public Type DeclaringType { get; }\n    return:\n      type: System.Type\n      description: The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object for the class that declares this member.\n  overload: System.Runtime.InteropServices._EventInfo.DeclaringType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: _EventInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._EventInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.\"\n  syntax:\n    content: public bool Equals (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The <xref:System.Object> to compare with the current <xref:System.Object>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._EventInfo.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.EventHandlerType\n  id: EventHandlerType\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: EventHandlerType\n  nameWithType: _EventInfo.EventHandlerType\n  fullName: System.Runtime.InteropServices._EventInfo.EventHandlerType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.EventHandlerType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.EventHandlerType%2A> property gets the <xref:System.Type> object of the underlying event-handler delegate associated with this event.\"\n  syntax:\n    content: public Type EventHandlerType { get; }\n    return:\n      type: System.Type\n      description: A read-only <xref:System.Type> object representing the delegate event handler.\n  overload: System.Runtime.InteropServices._EventInfo.EventHandlerType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetAddMethod\n  id: GetAddMethod\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetAddMethod()\n  nameWithType: _EventInfo.GetAddMethod()\n  fullName: System.Runtime.InteropServices._EventInfo.GetAddMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetAddMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method returns the method used to add an event-handler delegate to the event source.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetAddMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref:System.Reflection.MethodInfo> object representing the method used to add an event-handler delegate to the event source.\n  overload: System.Runtime.InteropServices._EventInfo.GetAddMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetAddMethod(System.Boolean)\n  id: GetAddMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetAddMethod(Boolean)\n  nameWithType: _EventInfo.GetAddMethod(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetAddMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetAddMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetAddMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return non-public methods; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref:System.Reflection.MethodInfo> object representing the method used to add an event-handler delegate to the event source.\n  overload: System.Runtime.InteropServices._EventInfo.GetAddMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _EventInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods\"\n  syntax:\n    content: public object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to search a member's inheritance chain to find the attributes; otherwise, false.\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.\n  overload: System.Runtime.InteropServices._EventInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _EventInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.\"\n  syntax:\n    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.\n    - id: inherit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to search this member's inheritance chain to find the attributes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object[]\n      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.\n  overload: System.Runtime.InteropServices._EventInfo.GetCustomAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: _EventInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._EventInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current instance.\n  overload: System.Runtime.InteropServices._EventInfo.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _EventInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._EventInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: An array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: The count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: An array allocated by the caller that receives the identifiers corresponding to the names.\n  overload: System.Runtime.InteropServices._EventInfo.GetIDsOfNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetRaiseMethod\n  id: GetRaiseMethod\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetRaiseMethod()\n  nameWithType: _EventInfo.GetRaiseMethod()\n  fullName: System.Runtime.InteropServices._EventInfo.GetRaiseMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRaiseMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetRaiseMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The method that is called when the event is raised.\n  overload: System.Runtime.InteropServices._EventInfo.GetRaiseMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetRaiseMethod(System.Boolean)\n  id: GetRaiseMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetRaiseMethod(Boolean)\n  nameWithType: _EventInfo.GetRaiseMethod(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetRaiseMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRaiseMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised and specifies whether to return non-public methods.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return non-public methods; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> object that was called when the event was raised.\n  overload: System.Runtime.InteropServices._EventInfo.GetRaiseMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetRemoveMethod\n  id: GetRemoveMethod\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetRemoveMethod()\n  nameWithType: _EventInfo.GetRemoveMethod()\n  fullName: System.Runtime.InteropServices._EventInfo.GetRemoveMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRemoveMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method returns the method used to remove an event-handler delegate from the event source.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetRemoveMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref:System.Reflection.MethodInfo> object representing the method used to remove an event-handler delegate from the event source.\n  overload: System.Runtime.InteropServices._EventInfo.GetRemoveMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetRemoveMethod(System.Boolean)\n  id: GetRemoveMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetRemoveMethod(Boolean)\n  nameWithType: _EventInfo.GetRemoveMethod(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetRemoveMethod(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.GetRemoveMethod*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for removing a method of the event and specifies whether to return non-public methods.\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);\n    parameters:\n    - id: nonPublic\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return non-public methods; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref:System.Reflection.MethodInfo> object representing the method used to remove an event-handler delegate from the event source.\n  overload: System.Runtime.InteropServices._EventInfo.GetRemoveMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetType\n  id: GetType\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: _EventInfo.GetType()\n  fullName: System.Runtime.InteropServices._EventInfo.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.GetType*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Object.GetType%2A> method gets the type of the current instance.\"\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: A <xref:System.Type> object.\n  overload: System.Runtime.InteropServices._EventInfo.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _EventInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._EventInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: A pointer to the requested type information object.\n  overload: System.Runtime.InteropServices._EventInfo.GetTypeInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(System.UInt32@)\n  id: GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _EventInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: public void GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.\n  overload: System.Runtime.InteropServices._EventInfo.GetTypeInfoCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _EventInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._EventInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: An identifier for the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: A pointer to the location where the result will be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: A pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Runtime.InteropServices._EventInfo.Invoke*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: _EventInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instances of the `attributeType` parameter are applied to this member.\"\n  syntax:\n    content: public bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The <xref uid=\"langword_csharp_Type\" name=\"Type\" href=\"\"></xref> object to which the custom attributes are applied.\n    - id: inherit\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to search this member's inheritance chain to find the attributes; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if one or more instance of the <code>attributeType</code> parameter is applied to this member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._EventInfo.IsDefined*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.IsMulticast\n  id: IsMulticast\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: IsMulticast\n  nameWithType: _EventInfo.IsMulticast\n  fullName: System.Runtime.InteropServices._EventInfo.IsMulticast\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.IsMulticast*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.IsMulticast%2A> property gets a value indicating whether the event is multicast.\"\n  syntax:\n    content: public bool IsMulticast { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the delegate is an instance of a multicast delegate; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._EventInfo.IsMulticast*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: _EventInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._EventInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.IsSpecialName*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.IsSpecialName%2A> property gets a value indicating whether the <xref:System.Reflection.EventInfo> object has a name with a special meaning.\"\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this event has a special name; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Runtime.InteropServices._EventInfo.IsSpecialName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.MemberType\n  id: MemberType\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: _EventInfo.MemberType\n  fullName: System.Runtime.InteropServices._EventInfo.MemberType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.MemberType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is an event.\"\n  syntax:\n    content: public System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: A <xref href=\"System.Reflection.MemberTypes\"></xref> value indicating that this member is an event.\n  overload: System.Runtime.InteropServices._EventInfo.MemberType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.Name\n  id: Name\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: _EventInfo.Name\n  fullName: System.Runtime.InteropServices._EventInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> object containing the name of this member.\n  overload: System.Runtime.InteropServices._EventInfo.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.ReflectedType\n  id: ReflectedType\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: ReflectedType\n  nameWithType: _EventInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._EventInfo.ReflectedType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance.\"\n  syntax:\n    content: public Type ReflectedType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> object that was used to obtain this object.\n  overload: System.Runtime.InteropServices._EventInfo.ReflectedType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  id: RemoveEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: RemoveEventHandler(Object,Delegate)\n  nameWithType: _EventInfo.RemoveEventHandler(Object,Delegate)\n  fullName: System.Runtime.InteropServices._EventInfo.RemoveEventHandler(Object,Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Reflection.EventInfo.RemoveEventHandler*> method.\n  remarks: \"This method is for access to managed classes from unmanaged code and should not be called from managed code.  \\n  \\n The <xref:System.Reflection.EventInfo.RemoveEventHandler%2A> method removes an event handler from an event source.\"\n  syntax:\n    content: public void RemoveEventHandler (object target, Delegate handler);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The event source.\n    - id: handler\n      type: System.Delegate\n      description: The delegate to be disassociated from the events raised by target.\n  overload: System.Runtime.InteropServices._EventInfo.RemoveEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.InteropServices._EventInfo.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices._EventInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: _EventInfo.ToString()\n  fullName: System.Runtime.InteropServices._EventInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method.\n  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code.\n  syntax:\n    content: public string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref:System.Object>.\n  overload: System.Runtime.InteropServices._EventInfo.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices._EventInfo.AddEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: AddEventHandler(Object,Delegate)\n  nameWithType: _EventInfo.AddEventHandler(Object,Delegate)\n  fullName: System.Runtime.InteropServices._EventInfo.AddEventHandler(Object,Delegate)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Runtime.InteropServices._EventInfo.Attributes\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _EventInfo.Attributes\n  fullName: System.Runtime.InteropServices._EventInfo.Attributes\n- uid: System.Reflection.EventAttributes\n  parent: System.Reflection\n  isExternal: true\n  name: EventAttributes\n  nameWithType: EventAttributes\n  fullName: System.Reflection.EventAttributes\n- uid: System.Runtime.InteropServices._EventInfo.DeclaringType\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _EventInfo.DeclaringType\n  fullName: System.Runtime.InteropServices._EventInfo.DeclaringType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices._EventInfo.Equals(System.Object)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: _EventInfo.Equals(Object)\n  fullName: System.Runtime.InteropServices._EventInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices._EventInfo.EventHandlerType\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: EventHandlerType\n  nameWithType: _EventInfo.EventHandlerType\n  fullName: System.Runtime.InteropServices._EventInfo.EventHandlerType\n- uid: System.Runtime.InteropServices._EventInfo.GetAddMethod\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetAddMethod()\n  nameWithType: _EventInfo.GetAddMethod()\n  fullName: System.Runtime.InteropServices._EventInfo.GetAddMethod()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Runtime.InteropServices._EventInfo.GetAddMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetAddMethod(Boolean)\n  nameWithType: _EventInfo.GetAddMethod(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetAddMethod(Boolean)\n- uid: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: _EventInfo.GetCustomAttributes(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: _EventInfo.GetCustomAttributes(Type,Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetCustomAttributes(Type,Boolean)\n- uid: System.Runtime.InteropServices._EventInfo.GetHashCode\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: _EventInfo.GetHashCode()\n  fullName: System.Runtime.InteropServices._EventInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices._EventInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: _EventInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._EventInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Runtime.InteropServices._EventInfo.GetRaiseMethod\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetRaiseMethod()\n  nameWithType: _EventInfo.GetRaiseMethod()\n  fullName: System.Runtime.InteropServices._EventInfo.GetRaiseMethod()\n- uid: System.Runtime.InteropServices._EventInfo.GetRaiseMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetRaiseMethod(Boolean)\n  nameWithType: _EventInfo.GetRaiseMethod(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetRaiseMethod(Boolean)\n- uid: System.Runtime.InteropServices._EventInfo.GetRemoveMethod\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetRemoveMethod()\n  nameWithType: _EventInfo.GetRemoveMethod()\n  fullName: System.Runtime.InteropServices._EventInfo.GetRemoveMethod()\n- uid: System.Runtime.InteropServices._EventInfo.GetRemoveMethod(System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetRemoveMethod(Boolean)\n  nameWithType: _EventInfo.GetRemoveMethod(Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.GetRemoveMethod(Boolean)\n- uid: System.Runtime.InteropServices._EventInfo.GetType\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetType()\n  nameWithType: _EventInfo.GetType()\n  fullName: System.Runtime.InteropServices._EventInfo.GetType()\n- uid: System.Runtime.InteropServices._EventInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: _EventInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Runtime.InteropServices._EventInfo.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(System.UInt32@)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetTypeInfoCount(UInt32)\n  nameWithType: _EventInfo.GetTypeInfoCount(UInt32)\n  fullName: System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(UInt32)\n- uid: System.Runtime.InteropServices._EventInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: _EventInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Runtime.InteropServices._EventInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices._EventInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: _EventInfo.IsDefined(Type,Boolean)\n  fullName: System.Runtime.InteropServices._EventInfo.IsDefined(Type,Boolean)\n- uid: System.Runtime.InteropServices._EventInfo.IsMulticast\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: IsMulticast\n  nameWithType: _EventInfo.IsMulticast\n  fullName: System.Runtime.InteropServices._EventInfo.IsMulticast\n- uid: System.Runtime.InteropServices._EventInfo.IsSpecialName\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _EventInfo.IsSpecialName\n  fullName: System.Runtime.InteropServices._EventInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._EventInfo.MemberType\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _EventInfo.MemberType\n  fullName: System.Runtime.InteropServices._EventInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Runtime.InteropServices._EventInfo.Name\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Name\n  nameWithType: _EventInfo.Name\n  fullName: System.Runtime.InteropServices._EventInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices._EventInfo.ReflectedType\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _EventInfo.ReflectedType\n  fullName: System.Runtime.InteropServices._EventInfo.ReflectedType\n- uid: System.Runtime.InteropServices._EventInfo.RemoveEventHandler(System.Object,System.Delegate)\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: RemoveEventHandler(Object,Delegate)\n  nameWithType: _EventInfo.RemoveEventHandler(Object,Delegate)\n  fullName: System.Runtime.InteropServices._EventInfo.RemoveEventHandler(Object,Delegate)\n- uid: System.Runtime.InteropServices._EventInfo.ToString\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: _EventInfo.ToString()\n  fullName: System.Runtime.InteropServices._EventInfo.ToString()\n- uid: System.Runtime.InteropServices._EventInfo.AddEventHandler*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: AddEventHandler\n  nameWithType: _EventInfo.AddEventHandler\n- uid: System.Runtime.InteropServices._EventInfo.Attributes*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: _EventInfo.Attributes\n- uid: System.Runtime.InteropServices._EventInfo.DeclaringType*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: _EventInfo.DeclaringType\n- uid: System.Runtime.InteropServices._EventInfo.Equals*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Equals\n  nameWithType: _EventInfo.Equals\n- uid: System.Runtime.InteropServices._EventInfo.EventHandlerType*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: EventHandlerType\n  nameWithType: _EventInfo.EventHandlerType\n- uid: System.Runtime.InteropServices._EventInfo.GetAddMethod*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetAddMethod\n  nameWithType: _EventInfo.GetAddMethod\n- uid: System.Runtime.InteropServices._EventInfo.GetCustomAttributes*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: _EventInfo.GetCustomAttributes\n- uid: System.Runtime.InteropServices._EventInfo.GetHashCode*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: _EventInfo.GetHashCode\n- uid: System.Runtime.InteropServices._EventInfo.GetIDsOfNames*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetIDsOfNames\n  nameWithType: _EventInfo.GetIDsOfNames\n- uid: System.Runtime.InteropServices._EventInfo.GetRaiseMethod*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetRaiseMethod\n  nameWithType: _EventInfo.GetRaiseMethod\n- uid: System.Runtime.InteropServices._EventInfo.GetRemoveMethod*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetRemoveMethod\n  nameWithType: _EventInfo.GetRemoveMethod\n- uid: System.Runtime.InteropServices._EventInfo.GetType*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetType\n  nameWithType: _EventInfo.GetType\n- uid: System.Runtime.InteropServices._EventInfo.GetTypeInfo*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetTypeInfo\n  nameWithType: _EventInfo.GetTypeInfo\n- uid: System.Runtime.InteropServices._EventInfo.GetTypeInfoCount*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: GetTypeInfoCount\n  nameWithType: _EventInfo.GetTypeInfoCount\n- uid: System.Runtime.InteropServices._EventInfo.Invoke*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Invoke\n  nameWithType: _EventInfo.Invoke\n- uid: System.Runtime.InteropServices._EventInfo.IsDefined*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: _EventInfo.IsDefined\n- uid: System.Runtime.InteropServices._EventInfo.IsMulticast*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: IsMulticast\n  nameWithType: _EventInfo.IsMulticast\n- uid: System.Runtime.InteropServices._EventInfo.IsSpecialName*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: _EventInfo.IsSpecialName\n- uid: System.Runtime.InteropServices._EventInfo.MemberType*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: _EventInfo.MemberType\n- uid: System.Runtime.InteropServices._EventInfo.Name*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: Name\n  nameWithType: _EventInfo.Name\n- uid: System.Runtime.InteropServices._EventInfo.ReflectedType*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: _EventInfo.ReflectedType\n- uid: System.Runtime.InteropServices._EventInfo.RemoveEventHandler*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: RemoveEventHandler\n  nameWithType: _EventInfo.RemoveEventHandler\n- uid: System.Runtime.InteropServices._EventInfo.ToString*\n  parent: System.Runtime.InteropServices._EventInfo\n  isExternal: false\n  name: ToString\n  nameWithType: _EventInfo.ToString\n"}