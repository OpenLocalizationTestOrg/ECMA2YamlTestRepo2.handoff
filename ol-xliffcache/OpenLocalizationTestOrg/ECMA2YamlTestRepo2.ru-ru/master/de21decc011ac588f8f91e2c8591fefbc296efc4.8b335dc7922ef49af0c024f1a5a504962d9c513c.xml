{"nodes":[{"pos":[850,911],"content":"Represents the settings for an activity that sends a message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the settings for an activity that sends a message.","pos":[0,61]}]},{"pos":[1471,1576],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Activities.SendSettings\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.SendSettings\"></xref> class."},{"pos":[2136,2182],"content":"Gets or sets the endpoint to send messages to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the endpoint to send messages to.","pos":[0,46]}]},{"pos":[2337,2370],"content":"The endpoint to send messages to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint to send messages to.","pos":[0,33]}]},{"pos":[2902,2963],"content":"Gets or sets the address of the endpoint to send messages to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the address of the endpoint to send messages to.","pos":[0,61]}]},{"pos":[3082,3103],"content":"The endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint address.","pos":[0,21]}]},{"pos":[3692,3744],"content":"Gets or sets the name of the endpoint configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the endpoint configuration.","pos":[0,52]}]},{"pos":[3879,3911],"content":"The endpoint configuration name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The endpoint configuration name.","pos":[0,32]}]},{"pos":[4425,4494],"content":"Gets or sets a value that indicates whether communication is one-way.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether communication is one-way.","pos":[0,69]}]},{"pos":[4611,4792],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if communication is one-way; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if communication is two-way.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if communication is one-way; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if communication is two-way."},{"pos":[5329,5372],"content":"Gets or sets the display name of the owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the display name of the owner.","pos":[0,43]}]},{"pos":[5498,5528],"content":"The display name of the owner.","needQuote":true,"needEscape":true,"nodes":[{"content":"The display name of the owner.","pos":[0,30]}]},{"pos":[6068,6141],"content":"Gets or sets a value that indicates the protection level for the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the protection level for the message.","pos":[0,73]}]},{"pos":[6344,6450],"content":"One of the enumeration values of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","needQuote":true,"needEscape":true,"source":"One of the enumeration values of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> enumeration."},{"pos":[7034,7155],"content":"Gets or sets a value that indicates whether the workflow service instance should be persisted before sending the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the workflow service instance should be persisted before sending the message.","pos":[0,121]}]},{"pos":[7288,7495],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the workflow service should be persisted before sending the message; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow service should be persisted before sending the message; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8083,8189],"content":"Gets or sets a value that indicates the token impersonation level allowed for the receiver of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the token impersonation level allowed for the receiver of the message.","pos":[0,106]}]},{"pos":[8401,8507],"content":"One of the enumeration values of the <xref:System.Security.Principal.TokenImpersonationLevel> enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values of the &lt;xref:System.Security.Principal.TokenImpersonationLevel&gt; enumeration.","pos":[0,106],"source":"One of the enumeration values of the <xref:System.Security.Principal.TokenImpersonationLevel> enumeration."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activities.SendSettings\n  id: SendSettings\n  children:\n  - System.ServiceModel.Activities.SendSettings.#ctor\n  - System.ServiceModel.Activities.SendSettings.Endpoint\n  - System.ServiceModel.Activities.SendSettings.EndpointAddress\n  - System.ServiceModel.Activities.SendSettings.EndpointConfigurationName\n  - System.ServiceModel.Activities.SendSettings.IsOneWay\n  - System.ServiceModel.Activities.SendSettings.OwnerDisplayName\n  - System.ServiceModel.Activities.SendSettings.ProtectionLevel\n  - System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend\n  - System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel\n  langs:\n  - csharp\n  name: SendSettings\n  nameWithType: SendSettings\n  fullName: System.ServiceModel.Activities.SendSettings\n  type: Class\n  summary: Represents the settings for an activity that sends a message.\n  syntax:\n    content: public sealed class SendSettings\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: SendSettings()\n  nameWithType: SendSettings.SendSettings()\n  fullName: System.ServiceModel.Activities.SendSettings.SendSettings()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activities.SendSettings\"></xref> class.\n  syntax:\n    content: public SendSettings ();\n    parameters: []\n  overload: System.ServiceModel.Activities.SendSettings.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.Endpoint\n  id: Endpoint\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: Endpoint\n  nameWithType: SendSettings.Endpoint\n  fullName: System.ServiceModel.Activities.SendSettings.Endpoint\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets the endpoint to send messages to.\n  syntax:\n    content: public System.ServiceModel.Endpoint Endpoint { get; set; }\n    return:\n      type: System.ServiceModel.Endpoint\n      description: The endpoint to send messages to.\n  overload: System.ServiceModel.Activities.SendSettings.Endpoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.EndpointAddress\n  id: EndpointAddress\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: EndpointAddress\n  nameWithType: SendSettings.EndpointAddress\n  fullName: System.ServiceModel.Activities.SendSettings.EndpointAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets the address of the endpoint to send messages to.\n  syntax:\n    content: public Uri EndpointAddress { get; set; }\n    return:\n      type: System.Uri\n      description: The endpoint address.\n  overload: System.ServiceModel.Activities.SendSettings.EndpointAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.EndpointConfigurationName\n  id: EndpointConfigurationName\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: EndpointConfigurationName\n  nameWithType: SendSettings.EndpointConfigurationName\n  fullName: System.ServiceModel.Activities.SendSettings.EndpointConfigurationName\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets the name of the endpoint configuration.\n  syntax:\n    content: public string EndpointConfigurationName { get; set; }\n    return:\n      type: System.String\n      description: The endpoint configuration name.\n  overload: System.ServiceModel.Activities.SendSettings.EndpointConfigurationName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.IsOneWay\n  id: IsOneWay\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: IsOneWay\n  nameWithType: SendSettings.IsOneWay\n  fullName: System.ServiceModel.Activities.SendSettings.IsOneWay\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets a value that indicates whether communication is one-way.\n  syntax:\n    content: public bool IsOneWay { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if communication is one-way; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if communication is two-way.\n  overload: System.ServiceModel.Activities.SendSettings.IsOneWay*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.OwnerDisplayName\n  id: OwnerDisplayName\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: OwnerDisplayName\n  nameWithType: SendSettings.OwnerDisplayName\n  fullName: System.ServiceModel.Activities.SendSettings.OwnerDisplayName\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets the display name of the owner.\n  syntax:\n    content: public string OwnerDisplayName { get; set; }\n    return:\n      type: System.String\n      description: The display name of the owner.\n  overload: System.ServiceModel.Activities.SendSettings.OwnerDisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: SendSettings.ProtectionLevel\n  fullName: System.ServiceModel.Activities.SendSettings.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets a value that indicates the protection level for the message.\n  syntax:\n    content: public Nullable<System.Net.Security.ProtectionLevel> ProtectionLevel { get; set; }\n    return:\n      type: System.Nullable{System.Net.Security.ProtectionLevel}\n      description: One of the enumeration values of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> enumeration.\n  overload: System.ServiceModel.Activities.SendSettings.ProtectionLevel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend\n  id: RequirePersistBeforeSend\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: RequirePersistBeforeSend\n  nameWithType: SendSettings.RequirePersistBeforeSend\n  fullName: System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets a value that indicates whether the workflow service instance should be persisted before sending the message.\n  syntax:\n    content: public bool RequirePersistBeforeSend { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the workflow service should be persisted before sending the message; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel\n  id: TokenImpersonationLevel\n  parent: System.ServiceModel.Activities.SendSettings\n  langs:\n  - csharp\n  name: TokenImpersonationLevel\n  nameWithType: SendSettings.TokenImpersonationLevel\n  fullName: System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel.Activities\n  namespace: System.ServiceModel.Activities\n  summary: Gets or sets a value that indicates the token impersonation level allowed for the receiver of the message.\n  syntax:\n    content: public System.Security.Principal.TokenImpersonationLevel TokenImpersonationLevel { get; set; }\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: One of the enumeration values of the <xref:System.Security.Principal.TokenImpersonationLevel> enumeration.\n  overload: System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Activities.SendSettings.#ctor\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: SendSettings()\n  nameWithType: SendSettings.SendSettings()\n  fullName: System.ServiceModel.Activities.SendSettings.SendSettings()\n- uid: System.ServiceModel.Activities.SendSettings.Endpoint\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: Endpoint\n  nameWithType: SendSettings.Endpoint\n  fullName: System.ServiceModel.Activities.SendSettings.Endpoint\n- uid: System.ServiceModel.Endpoint\n  parent: System.ServiceModel\n  isExternal: false\n  name: Endpoint\n  nameWithType: Endpoint\n  fullName: System.ServiceModel.Endpoint\n- uid: System.ServiceModel.Activities.SendSettings.EndpointAddress\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: SendSettings.EndpointAddress\n  fullName: System.ServiceModel.Activities.SendSettings.EndpointAddress\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Activities.SendSettings.EndpointConfigurationName\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: EndpointConfigurationName\n  nameWithType: SendSettings.EndpointConfigurationName\n  fullName: System.ServiceModel.Activities.SendSettings.EndpointConfigurationName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Activities.SendSettings.IsOneWay\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: IsOneWay\n  nameWithType: SendSettings.IsOneWay\n  fullName: System.ServiceModel.Activities.SendSettings.IsOneWay\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Activities.SendSettings.OwnerDisplayName\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: OwnerDisplayName\n  nameWithType: SendSettings.OwnerDisplayName\n  fullName: System.ServiceModel.Activities.SendSettings.OwnerDisplayName\n- uid: System.ServiceModel.Activities.SendSettings.ProtectionLevel\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: SendSettings.ProtectionLevel\n  fullName: System.ServiceModel.Activities.SendSettings.ProtectionLevel\n- uid: System.Nullable{System.Net.Security.ProtectionLevel}\n  parent: System\n  isExternal: true\n  name: Nullable<ProtectionLevel>\n  nameWithType: Nullable<ProtectionLevel>\n  fullName: System.Nullable<System.Net.Security.ProtectionLevel>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Net.Security.ProtectionLevel>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Security.ProtectionLevel\n    name: ProtectionLevel\n    nameWithType: ProtectionLevel\n    fullName: ProtectionLevel\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: RequirePersistBeforeSend\n  nameWithType: SendSettings.RequirePersistBeforeSend\n  fullName: System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend\n- uid: System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: TokenImpersonationLevel\n  nameWithType: SendSettings.TokenImpersonationLevel\n  fullName: System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: true\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.ServiceModel.Activities.SendSettings.#ctor*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: SendSettings\n  nameWithType: SendSettings.SendSettings\n- uid: System.ServiceModel.Activities.SendSettings.Endpoint*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: Endpoint\n  nameWithType: SendSettings.Endpoint\n- uid: System.ServiceModel.Activities.SendSettings.EndpointAddress*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: SendSettings.EndpointAddress\n- uid: System.ServiceModel.Activities.SendSettings.EndpointConfigurationName*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: EndpointConfigurationName\n  nameWithType: SendSettings.EndpointConfigurationName\n- uid: System.ServiceModel.Activities.SendSettings.IsOneWay*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: IsOneWay\n  nameWithType: SendSettings.IsOneWay\n- uid: System.ServiceModel.Activities.SendSettings.OwnerDisplayName*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: OwnerDisplayName\n  nameWithType: SendSettings.OwnerDisplayName\n- uid: System.ServiceModel.Activities.SendSettings.ProtectionLevel*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: SendSettings.ProtectionLevel\n- uid: System.ServiceModel.Activities.SendSettings.RequirePersistBeforeSend*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: RequirePersistBeforeSend\n  nameWithType: SendSettings.RequirePersistBeforeSend\n- uid: System.ServiceModel.Activities.SendSettings.TokenImpersonationLevel*\n  parent: System.ServiceModel.Activities.SendSettings\n  isExternal: false\n  name: TokenImpersonationLevel\n  nameWithType: SendSettings.TokenImpersonationLevel\n"}