<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd0c4d92ec8d53b40181ad8eb9c66aeb78adf4a9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Drawing.Image.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e5dc55f0d91561d17a905f4e0cb50e2983fe3e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e57be0c93ec65e5ab9987766826531854f802d8c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An abstract base class that provides functionality for the <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Drawing.Imaging.Metafile"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> descended classes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To draw an Image on a Windows Form, you should use one of the &lt;xref:System.Drawing.Graphics.DrawImage%2A&gt; methods.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates an exact copy of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates, cast as an object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Releases all resources used by this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the Dispose method allows the resources used by this &lt;xref:System.Drawing.Image&gt; to be reallocated for other purposes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.Drawing.Image&gt; in an unusable state.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Drawing.Image&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.Image&gt; was occupying.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Drawing.Image&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets attribute flags for the pixel data of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The integer value returned from this method will correspond to a sum of &lt;xref:System.Drawing.Imaging.ImageFlags&gt;, as described in the following table.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>|ImageFlag value|Integer representation|   |---------------------|----------------------------|   |<ph id="ph1">`ImageFlagsNone`</ph>|0|   |<ph id="ph2">`ImageFlagsScalable`</ph>|1|   |<ph id="ph3">`ImageFlagsHasAlpha`</ph>|2|   |<ph id="ph4">`ImageFlagsHasTranslucent`</ph>|4|   |<ph id="ph5">`ImageFlagsPartiallyScalable`</ph>|8|   |<ph id="ph6">`ImageFlagsColorSpaceRGB`</ph>|16|   |<ph id="ph7">`ImageFlagsColorSpaceCMYK`</ph>|32|   |<ph id="ph8">`ImageFlagsColorSpaceGRAY`</ph>|64|   |<ph id="ph9">`ImageFlagsColorSpaceYCBCR`</ph>|128|   |<ph id="ph10">`ImageFlagsColorSpaceYCCK`</ph>|256|   |<ph id="ph11">`ImageFlagsHasRealDPI`</ph>|4096|   |<ph id="ph12">`ImageFlagsHasRealPixelSize`</ph>|8192|   |<ph id="ph13">`ImageFlagsReadOnly`</ph>|65536|   |<ph id="ph14">`ImageFlagsCaching`</ph>|131072|       For example, if the Flags property for an image returned 77960, the &lt;xref:System.Drawing.Imaging.ImageFlags&gt; for the image would be &lt;xref:System.Drawing.Imaging.ImageFlags&gt;, &lt;xref:System.Drawing.Imaging.ImageFlags&gt;, &lt;xref:System.Drawing.Imaging.ImageFlags&gt;, &lt;xref:System.Drawing.Imaging.ImageFlags&gt;, and &lt;xref:System.Drawing.Imaging.ImageFlags&gt;.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The integer representing a bitwise combination of <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ImageFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets an array of GUIDs that represent the dimensions of frames within this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>A multiple-page image is an image that contains more than one image.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each page contains a single image (or frame).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A multiple-resolution image is an image that contains more than one copy of an image at different resolutions.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The defined dimensions are properties of the &lt;xref:System.Drawing.Imaging.FrameDimension&gt;.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array of GUIDs that specify the dimensions of frames within this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from most significant to least significant.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified file.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Managed GDI+ has built-in encoders and decoders that support the following file types:      -   BMP      -   GIF      -   JPEG      -   PNG      -   TIFF       The file remains locked until the &lt;xref:System.Drawing.Image&gt; is disposed.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the file does not have a valid image format or if <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file, this method throws an &lt;xref:System.OutOfMemoryException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Drawing.Image&gt; class does not support alpha transparency in bitmaps.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable alpha transparency, use PNG images with 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the file from which to create the <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The file does not have a valid image format.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The specified file does not exist.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is a <ph id="ph2">&lt;xref:System.Uri&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified file using embedded color management information in that file.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Managed GDI+ has built-in encoders and decoders that support the following file types:      -   BMP      -   GIF      -   JPEG      -   PNG      -   TIFF       If the file does not have a valid image format or if <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file, this method throws an &lt;xref:System.OutOfMemoryException&gt; exception.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file remains locked until the &lt;xref:System.Drawing.Image&gt; is disposed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`useEmbeddedColorManagement`</ph> parameter specifies whether the new &lt;xref:System.Drawing.Image&gt; applies color correction according to color management information that is embedded in the image file.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Drawing.Image&gt; class does not support alpha transparency in bitmaps.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable alpha transparency, use PNG images with 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the file from which to create the <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use color management information embedded in the image file; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The file does not have a valid image format.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> does not support the pixel format of the file.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The specified file does not exist.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is a <ph id="ph2">&lt;xref:System.Uri&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a handle to a GDI bitmap.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FromHbitmap method makes a copy of the <ph id="ph1">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> bitmap; so you can release the incoming <ph id="ph2">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> bitmap using the <ph id="ph3">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> <ph id="ph4">`DeleteObject`</ph> method immediately after creating the new &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> bitmap handle from which to create the <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a handle to a GDI bitmap and a handle to a GDI palette.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FromHbitmap method makes a copy of the <ph id="ph1">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> bitmap; so you can release the incoming <ph id="ph2">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> bitmap using the <ph id="ph3">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> <ph id="ph4">`DeleteObject`</ph> method immediately after creating the new &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> bitmap handle from which to create the <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A handle to a <ph id="ph1">[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]</ph> palette used to define the bitmap colors if the bitmap specified in the <ph id="ph2">`hBitmap`</ph> parameter is not a device-independent bitmap (DIB).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Bitmap"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified data stream.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must keep the stream open for the lifetime of the &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is reset to zero if this method is called successively with the same stream.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Drawing.Image&gt; class does not support alpha transparency in bitmaps.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable alpha transparency, use PNG images with 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that contains the data for this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The stream does not have a valid image format       -or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified data stream, optionally using embedded color management information in that stream.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must keep the stream open for the lifetime of the &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`useEmbeddedColorManagement`</ph> parameter specifies whether the new &lt;xref:System.Drawing.Image&gt; applies color correction according to color management information that is embedded in the data stream.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is reset to zero if this method is called successively with the same stream.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Drawing.Image&gt; class does not support alpha transparency in bitmaps.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable alpha transparency, use PNG images with 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that contains the data for this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use color management information embedded in the data stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The stream does not have a valid image format       -or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stream</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified data stream, optionally using embedded color management information and validating the image data.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`useEmbeddedColorManagement`</ph> parameter specifies whether the new &lt;xref:System.Drawing.Image&gt; applies color correction according to color management information that is embedded in the data stream.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Drawing.Image&gt; class does not support alpha transparency in bitmaps.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable alpha transparency, use PNG images with 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; that contains the data for this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use color management information embedded in the data stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate the image data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method creates.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The stream does not have a valid image format.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the bounds of the image in the specified unit.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Drawing.GraphicsUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values indicating the unit of measure for the bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.RectangleF"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bounds of the image, in the specified unit.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns information about the parameters supported by the specified image encoder.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A GUID that specifies the image encoder.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Imaging.EncoderParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains an array of <bpt id="p2">&lt;xref href="System.Drawing.Imaging.EncoderParameter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">&lt;xref href="System.Drawing.Imaging.EncoderParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains information about one of the parameters supported by the specified image encoder.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Returns the number of frames of the specified dimension.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>A multiple-page image is an image that contains more than one image.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each page contains a single image (or frame).</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>A multiple-resolution image is an image that contains more than one copy of an image at different resolutions.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The defined dimensions are properties of the &lt;xref:System.Drawing.Imaging.FrameDimension&gt;.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Imaging.FrameDimension"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the identity of the dimension type.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The number of frames in the specified dimension.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns the color depth, in number of bits per pixel, of the specified pixel format.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PixelFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> member that specifies the format for which to find the size.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The color depth of the specified pixel format.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the specified property item from this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of property item IDs and links to more information, see &lt;xref:System.Drawing.Imaging.PropertyItem.Id%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is difficult to set property items, because the &lt;xref:System.Drawing.Imaging.PropertyItem&gt; class has no public constructors.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to work around this restriction is to obtain a &lt;xref:System.Drawing.Imaging.PropertyItem&gt; by retrieving the &lt;xref:System.Drawing.Image.PropertyItems%2A&gt; property value or calling the GetPropertyItem method of an &lt;xref:System.Drawing.Image&gt; that already has property items.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then you can set the fields of the &lt;xref:System.Drawing.Imaging.PropertyItem&gt; and pass it to &lt;xref:System.Drawing.Image.SetPropertyItem%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The ID of the property item to get.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PropertyItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> this method gets.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The image format of this image does not support property items.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To be added.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets the height, in pixels, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the horizontal resolution, in pixels per inch, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The horizontal resolution, in pixels per inch, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the pixel format for this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains alpha information.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PixelFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to test.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">pixfmt</ph><ept id="p2">&lt;/code&gt;</ept> contains alpha information; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the pixel format is 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The canonical pixel format indicates a pixel format of 32 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This format specifies 24-bit color depth and an 8-bit alpha channel.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PixelFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to test.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">pixfmt</ph><ept id="p2">&lt;/code&gt;</ept> is canonical; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the pixel format is 64 bits per pixel.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PixelFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration to test.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">pixfmt</ph><ept id="p2">&lt;/code&gt;</ept> is extended; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets the color palette used for this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns a copy of the &lt;xref:System.Drawing.Imaging.ColorPalette&gt; object used by this &lt;xref:System.Drawing.Image&gt;.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ColorPalette"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the color palette used for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets the width and height of this image.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the image is a bitmap, the width and height are returned in pixels.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the image is a metafile, the width and height are returned in 0.01 millimeter units.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.SizeF"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that represents the width and height of this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets the pixel format for this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PixelFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the pixel format for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets IDs of the property items stored in this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the image has no property items or if the image format does not support property items, the PropertyIdList property returns an empty array (that is, an array of length zero).</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An array of the property IDs, one for each property item stored in this image.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets all the property items (pieces of metadata) stored in this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the image has no property items or if the image format does not support property items, PropertyItems returns an empty array (that is, an array of length zero).</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PropertyItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects, one for each property item stored in the image.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets the file format of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ImageFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the file format of this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Removes the specified property item from this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is difficult to set property items, because the &lt;xref:System.Drawing.Imaging.PropertyItem&gt; class has no public constructors.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to work around this restriction is to obtain a &lt;xref:System.Drawing.Imaging.PropertyItem&gt; by retrieving the &lt;xref:System.Drawing.Image.PropertyItems%2A&gt; property value or calling the &lt;xref:System.Drawing.Image.GetPropertyItem%2A&gt; method of an &lt;xref:System.Drawing.Image&gt; that already has property items.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then you can set the fields of the &lt;xref:System.Drawing.Imaging.PropertyItem&gt; and pass it to &lt;xref:System.Drawing.Image.SetPropertyItem%2A&gt;.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The ID of the property item to remove.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The image does not contain the requested property item.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>-or-       The image format for this image does not support property items.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Rotates, flips, or rotates and flips the <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RotateFlip method rotates the image clockwise.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you wish to draw on an image once it has been rotated, you should always retrieve a new graphics object from the image, otherwise an exception could occur.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.RotateFlipType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> member that specifies the type of rotation and flip to apply to the image.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Saves this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file or stream.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no encoder exists for the file format of the image, the Portable Network Graphics (PNG) encoder is used.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the Save method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs because the <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]</ph> component of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> does not have an encoder that you can use to save files as .wmf or .emf files.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Saving the image to the same file it was constructed from is not allowed and throws an exception.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the file to which to save this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null." name="null." href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The image was saved with the wrong image format.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-or-       The image was saved to the same file it was created from.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Saves this image to the specified stream in the specified format.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should avoid saving an image to the same stream that was used to construct it.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Doing so might damage the stream.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The image must be saved to the stream at an offset of zero.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; where the image will be saved.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ImageFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the format of the saved image.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The image was saved with the wrong image format</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Saves this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file in the specified format.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the file to which to save this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ImageFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null." name="null." href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The image was saved with the wrong image format.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>-or-       The image was saved to the same file it was created from.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Saves this image to the specified stream, with the specified encoder and image encoder parameters.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not save an image to the same stream that was used to construct the image.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Doing so might damage the stream.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The image must be saved to the stream at an offset of zero.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; where the image will be saved.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ImageCodecInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Imaging.EncoderParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies parameters used by the image encoder.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The image was saved with the wrong image format.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Saves this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file, with the specified encoder and image-encoder parameters.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Saving the image to the same file it was constructed from is not allowed and throws an exception.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the file to which to save this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.ImageCodecInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Imaging.EncoderParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for this <bpt id="p2">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;encoder&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null." name="null." href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept></source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The image was saved with the wrong image format.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>-or-       The image was saved to the same file it was created from.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Adds a frame to the file or stream specified in a previous call to the &lt;xref:System.Drawing.Image.Save*&gt; method.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Use this method to save selected frames from a multiple-frame image to another multiple-frame image.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Imaging.EncoderParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds parameters required by the image encoder that is used by the save-add operation.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Adds a frame to the file or stream specified in a previous call to the &lt;xref:System.Drawing.Image.Save*&gt; method.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the frame to add.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Drawing.Imaging.EncoderParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds parameters required by the image encoder that is used by the save-add operation.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;image&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Selects the frame specified by the dimension and index.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The possible values of the <ph id="ph1">`dimensionID`</ph> parameter are properties of the &lt;xref:System.Drawing.Imaging.FrameDimension&gt;.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>These can be used to identify an image by its time, resolution, or page number.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method causes all changes made to the previous frame to be discarded.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the call to the SelectActiveFrame method is successful (an exception does not occur), the method will return 0.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Imaging.FrameDimension"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the identity of the dimension type.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The index of the active frame.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Always returns 0.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Stores a property item (piece of metadata) in this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the image format does not support property items, this method throws &lt;xref:System.ArgumentException&gt; with the message "Property not supported."</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is difficult to set property items, because the &lt;xref:System.Drawing.Imaging.PropertyItem&gt; class has no public constructors.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to work around this restriction is to obtain a &lt;xref:System.Drawing.Imaging.PropertyItem&gt; by retrieving the &lt;xref:System.Drawing.Image.PropertyItems%2A&gt; property value or calling the &lt;xref:System.Drawing.Image.GetPropertyItem%2A&gt; method of an &lt;xref:System.Drawing.Image&gt; that already has property items.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then you can set the fields of the &lt;xref:System.Drawing.Imaging.PropertyItem&gt; and pass it to SetPropertyItem.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Imaging.PropertyItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be stored.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The image format of this image does not support property items.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Gets the width and height, in pixels, of this image.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure that represents the width and height, in pixels, of this image.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Populates a <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the data needed to serialize the target object.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to populate with data.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The destination (see &lt;xref:System.Runtime.Serialization.StreamingContext&gt;) for this serialization.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that provides additional data about the image.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that provides additional data about the image.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the vertical resolution, in pixels per inch, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The vertical resolution, in pixels per inch, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets the width, in pixels, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of this <bpt id="p1">&lt;xref href="System.Drawing.Image"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>