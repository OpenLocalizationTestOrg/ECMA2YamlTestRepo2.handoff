{"nodes":[{"pos":[684,760],"content":"Represents a view of a memory-mapped file as a sequentially accessed stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a view of a memory-mapped file as a sequentially accessed stream.","pos":[0,76]}]},{"pos":[772,942],"content":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A&gt; method of a &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile&gt; object to get this stream.","pos":[0,170],"source":"Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream."}]},{"pos":[3566,3578],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4079,4180],"content":"Clears all buffers for this stream and causes any buffered data to be written to the underlying file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all buffers for this stream and causes any buffered data to be written to the underlying file.","pos":[0,101]}]},{"pos":[4193,4515],"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:      -   Any data that precedes the view up until the latest file offset.      -   Any data that follows the view up until the earliest file offset.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:      -   Any data that precedes the view up until the latest file offset.      -   Any data that follows the view up until the earliest file offset.","pos":[0,318],"nodes":[{"content":"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:      -   Any data that precedes the view up until the latest file offset.","pos":[0,243]},{"content":"-   Any data that follows the view up until the earliest file offset.","pos":[249,318]}]}]},{"pos":[5125,5316],"content":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","needQuote":false,"needEscape":true,"nodes":[{"content":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.","pos":[0,189]}]},{"pos":[5432,5539],"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes between the starting position of this view and the beginning of the memory-mapped file.","pos":[0,107]}]},{"pos":[5742,5854],"content":"The object from which this instance was created is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The object from which this instance was created is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6367,6417],"content":"Gets a handle to the view of a memory-mapped file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a handle to the view of a memory-mapped file.","pos":[0,50]}]},{"pos":[6637,6705],"content":"A wrapper for the operating system's handle to the view of the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A wrapper for the operating system's handle to the view of the file.","pos":[0,68]}]},{"pos":[7288,7326],"content":"Sets the length of the current stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the length of the current stream.","pos":[0,38]}]},{"pos":[7338,7443],"content":"This method is internal only, because a stream that represents a view is not considered to have a length.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is internal only, because a stream that represents a view is not considered to have a length.","pos":[0,105]}]},{"pos":[7588,7638],"content":"The desired length of the current stream in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired length of the current stream in bytes.","pos":[0,50]}]},{"pos":[7829,7858],"content":"This method is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not supported.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  id: MemoryMappedViewStream\n  children:\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  langs:\n  - csharp\n  name: MemoryMappedViewStream\n  nameWithType: MemoryMappedViewStream\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  type: Class\n  summary: Represents a view of a memory-mapped file as a sequentially accessed stream.\n  remarks: Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.\n  example:\n  - \"The following example obtains a MemoryMappedViewStream of a memory-mapped file and writes a value to the stream for inter-process communication.  \\n  \\n This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A?displayProperty=fullName> method.  \\n  \\n [!code-vb[system.io.memorymappedfiles_IPC_X#2](~/add/codesnippet/visualbasic/t-system.io.memorymapped_2_1.vb)]\\n [!code-cs[system.io.memorymappedfiles_IPC_X#2](~/add/codesnippet/csharp/t-system.io.memorymapped_2_1.cs)]\"\n  syntax:\n    content: 'public sealed class MemoryMappedViewStream : System.IO.UnmanagedMemoryStream'\n  inheritance:\n  - System.IO.Stream\n  - System.IO.UnmanagedMemoryStream\n  implements: []\n  inheritedMembers:\n  - System.IO.UnmanagedMemoryStream.CanRead\n  - System.IO.UnmanagedMemoryStream.CanSeek\n  - System.IO.UnmanagedMemoryStream.CanWrite\n  - System.IO.UnmanagedMemoryStream.Capacity\n  - System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)\n  - System.IO.UnmanagedMemoryStream.Length\n  - System.IO.UnmanagedMemoryStream.Position\n  - System.IO.UnmanagedMemoryStream.PositionPointer\n  - System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.ReadByte\n  - System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedViewStream.Dispose(Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  id: Flush\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: MemoryMappedViewStream.Flush()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Clears all buffers for this stream and causes any buffered data to be written to the underlying file.\n  remarks: \"If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:  \\n  \\n-   Any data that precedes the view up until the latest file offset.  \\n  \\n-   Any data that follows the view up until the earliest file offset.\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  id: PointerOffset\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: PointerOffset\n  nameWithType: MemoryMappedViewStream.PointerOffset\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: \"[Supported in the .NET Framework 4.5.1 and later versions]  \\n  \\n Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.\"\n  syntax:\n    content: public long PointerOffset { get; }\n    return:\n      type: System.Int64\n      description: The number of bytes between the starting position of this view and the beginning of the memory-mapped file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The object from which this instance was created is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  id: SafeMemoryMappedViewHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Gets a handle to the view of a memory-mapped file.\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n      description: A wrapper for the operating system's handle to the view of the file.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: MemoryMappedViewStream.SetLength(Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.IO.MemoryMappedFiles\n  summary: Sets the length of the current stream.\n  remarks: This method is internal only, because a stream that represents a view is not considered to have a length.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The desired length of the current stream in bytes.\n  overload: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not supported.\n  platform:\n  - net462\nreferences:\n- uid: System.IO.UnmanagedMemoryStream\n  isExternal: false\n  name: System.IO.UnmanagedMemoryStream\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MemoryMappedViewStream.Dispose(Boolean)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Flush()\n  nameWithType: MemoryMappedViewStream.Flush()\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush()\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: PointerOffset\n  nameWithType: MemoryMappedViewStream.PointerOffset\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle\n- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: SafeMemoryMappedViewHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: MemoryMappedViewStream.SetLength(Int64)\n  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(Int64)\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Dispose\n  nameWithType: MemoryMappedViewStream.Dispose\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: Flush\n  nameWithType: MemoryMappedViewStream.Flush\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: PointerOffset\n  nameWithType: MemoryMappedViewStream.PointerOffset\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SafeMemoryMappedViewHandle\n  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle\n- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength*\n  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream\n  isExternal: false\n  name: SetLength\n  nameWithType: MemoryMappedViewStream.SetLength\n"}