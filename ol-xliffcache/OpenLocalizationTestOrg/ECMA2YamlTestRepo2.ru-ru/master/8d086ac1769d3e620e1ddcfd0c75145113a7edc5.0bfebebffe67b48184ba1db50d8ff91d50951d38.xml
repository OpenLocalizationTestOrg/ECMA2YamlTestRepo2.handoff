{"nodes":[{"pos":[4600,4666],"content":"Uses a mask to distinguish between proper and improper user input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Uses a mask to distinguish between proper and improper user input.","pos":[0,66]}]},{"pos":[4679,11196],"content":"The MaskedTextBox class is an enhanced <xref:System.Windows.Forms.TextBox> control that supports a declarative syntax for accepting or rejecting user input. Using the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, you can specify the following input without writing any custom validation logic in your application:      -   Required input characters.      -   Optional input characters.      -   The type of input expected at a given position in the mask; for example, a digit, or an alphabetic or alphanumeric character.      -   Mask literals, or characters that should appear directly in the MaskedTextBox; for example, the hyphens (-) in a phone number, or the currency symbol in a price.      -   Special processing for input characters; for example, to convert alphabetic characters to uppercase.       When a MaskedTextBox control is displayed at run time, it represents the mask as a series of prompt characters and optional literal characters. Each editable mask position, representing a required or optional input, is shown with a single prompt character. For example, the number sign (#) is often used as a placeholder for a numeric character input. You can use the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property to specify a custom prompt character. The <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property determines if the user sees the prompt characters when the control loses input focus.       As the user types input into the masked text box, valid input characters replace their respective prompt characters in a sequential fashion. If the user types an invalid input character, no replacement occurs, but instead a beep is issued if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`, and the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised. You can provide your own custom error logic by handing this event.       When the current insertion point is at a literal character, the user has a number of options:      -   If a character other than the prompt character is typed, the literal will automatically be skipped and the input character will be applied to the next editable position, represented by the next prompt character.      -   If the prompt character is typed and the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property is true, the input will overtype the prompt character and insertion point will be moved to the next position in the mask.      -   As is always the case, the arrow keys can be used to navigate to a previous or subsequent position.       You can use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property to verify whether or not the user has entered all of the required input. The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property will always retrieve the user's input formatted according to the mask and the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.       The MaskedTextBox control actually defers all mask processing to the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class specified by the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property. This standard provider supports all Unicode characters except for surrogates and vertically combined characters; however, the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property can be used to restrict input to the characters sets a-z, A-Z, and 0-9.       Masks do not necessarily guarantee that a user's input will represent a valid value for a given type; for example, -9 could be entered for an age in years. You can verify that a user's input represents a valid value by assigning an instance of that value's type to the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property. You can detect whether the user removes focus from MaskedTextBox when it contains an invalid value by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event. If type validation succeeds, the object representing the value will be available through the <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.TypeValidationEventArgs> parameter.       As with the <xref:System.Windows.Forms.TextBox> control, several common keyboard shortcuts do not work with MaskedTextBox. In particular, CTRL-R (right justify text), CTRL-L (left justify text), and CTRL-L (center text) have no effect.      ## Compatibility with Visual Basic 6.0    MaskedTextBox was designed to retain most of the functionality of the Masked Edit control in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0. The following table lists common properties on the Masked Edit control and gives their equivalents on MaskedTextBox.      |Masked Edit control ([!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0) property|Equivalent MaskedTextBox ([!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]) property|   |-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|   |`AllowPrompt` property|<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>|   |`AutoTab` property|None|   |`ClipMode` property|<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>|   |`ClipText` property|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat>)|   |`Format` property|None|   |`FormattedText` property|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat>)|   |`Mask` property|<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>|   |`PromptChar` property|<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A>|   |`PromptInclude` property|<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>|   |`ValidationError` event|<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected>|      > [!CAUTION] >  The MaskedTextBox control does not support multiline configuration or undo functionality. However, while the members associated with these features have been retained for compatibility with the <xref:System.Windows.Forms.TextBoxBase> base class, their implementations perform no actions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaskedTextBox class is an enhanced &lt;xref:System.Windows.Forms.TextBox&gt; control that supports a declarative syntax for accepting or rejecting user input.","pos":[0,156],"source":"The MaskedTextBox class is an enhanced <xref:System.Windows.Forms.TextBox> control that supports a declarative syntax for accepting or rejecting user input."},{"content":"Using the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property, you can specify the following input without writing any custom validation logic in your application:      -   Required input characters.","pos":[157,363],"source":" Using the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, you can specify the following input without writing any custom validation logic in your application:      -   Required input characters."},{"content":"-   Optional input characters.","pos":[369,399]},{"content":"-   The type of input expected at a given position in the mask; for example, a digit, or an alphabetic or alphanumeric character.","pos":[405,534]},{"content":"-   Mask literals, or characters that should appear directly in the MaskedTextBox; for example, the hyphens (-) in a phone number, or the currency symbol in a price.","pos":[540,705]},{"content":"-   Special processing for input characters; for example, to convert alphabetic characters to uppercase.","pos":[711,815]},{"content":"When a MaskedTextBox control is displayed at run time, it represents the mask as a series of prompt characters and optional literal characters.","pos":[822,965]},{"content":"Each editable mask position, representing a required or optional input, is shown with a single prompt character.","pos":[966,1078]},{"content":"For example, the number sign (#) is often used as a placeholder for a numeric character input.","pos":[1079,1173]},{"content":"You can use the &lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt; property to specify a custom prompt character.","pos":[1174,1292],"source":" You can use the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property to specify a custom prompt character."},{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A&gt; property determines if the user sees the prompt characters when the control loses input focus.","pos":[1293,1454],"source":" The <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property determines if the user sees the prompt characters when the control loses input focus."},{"content":"As the user types input into the masked text box, valid input characters replace their respective prompt characters in a sequential fashion.","pos":[1461,1601]},{"content":"If the user types an invalid input character, no replacement occurs, but instead a beep is issued if the &lt;xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>, and the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event is raised.","pos":[1602,1875],"source":" If the user types an invalid input character, no replacement occurs, but instead a beep is issued if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`, and the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised."},{"content":"You can provide your own custom error logic by handing this event.","pos":[1876,1942]},{"content":"When the current insertion point is at a literal character, the user has a number of options:      -   If a character other than the prompt character is typed, the literal will automatically be skipped and the input character will be applied to the next editable position, represented by the next prompt character.","pos":[1949,2263]},{"content":"-   If the prompt character is typed and the &lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt; property is true, the input will overtype the prompt character and insertion point will be moved to the next position in the mask.","pos":[2269,2508],"source":"      -   If the prompt character is typed and the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property is true, the input will overtype the prompt character and insertion point will be moved to the next position in the mask."},{"content":"-   As is always the case, the arrow keys can be used to navigate to a previous or subsequent position.","pos":[2514,2617]},{"content":"You can use the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A&gt; property to verify whether or not the user has entered all of the required input.","pos":[2624,2775],"source":"       You can use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property to verify whether or not the user has entered all of the required input."},{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property will always retrieve the user's input formatted according to the mask and the &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt; property.","pos":[2776,2986],"source":" The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property will always retrieve the user's input formatted according to the mask and the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property."},{"content":"The MaskedTextBox control actually defers all mask processing to the &lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt; class specified by the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt; property.","pos":[2993,3231],"source":"       The MaskedTextBox control actually defers all mask processing to the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class specified by the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property."},{"content":"This standard provider supports all Unicode characters except for surrogates and vertically combined characters; however, the &lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt; property can be used to restrict input to the characters sets a-z, A-Z, and 0-9.","pos":[3232,3493],"source":" This standard provider supports all Unicode characters except for surrogates and vertically combined characters; however, the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property can be used to restrict input to the characters sets a-z, A-Z, and 0-9."},{"content":"Masks do not necessarily guarantee that a user's input will represent a valid value for a given type; for example, -9 could be entered for an age in years.","pos":[3500,3655]},{"content":"You can verify that a user's input represents a valid value by assigning an instance of that value's type to the &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt; property.","pos":[3656,3838],"source":" You can verify that a user's input represents a valid value by assigning an instance of that value's type to the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property."},{"content":"You can detect whether the user removes focus from MaskedTextBox when it contains an invalid value by monitoring for the &lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt; event.","pos":[3839,4032],"source":" You can detect whether the user removes focus from MaskedTextBox when it contains an invalid value by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event."},{"content":"If type validation succeeds, the object representing the value will be available through the &lt;xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.TypeValidationEventArgs&gt; parameter.","pos":[4033,4271],"source":" If type validation succeeds, the object representing the value will be available through the <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.TypeValidationEventArgs> parameter."},{"content":"As with the &lt;xref:System.Windows.Forms.TextBox&gt; control, several common keyboard shortcuts do not work with MaskedTextBox.","pos":[4278,4400],"source":"       As with the <xref:System.Windows.Forms.TextBox> control, several common keyboard shortcuts do not work with MaskedTextBox."},{"content":"In particular, CTRL-R (right justify text), CTRL-L (left justify text), and CTRL-L (center text) have no effect.","pos":[4401,4513]},{"content":"Compatibility with Visual Basic 6.0    MaskedTextBox was designed to retain most of the functionality of the Masked Edit control in <ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> 6.0.","pos":[4522,4706],"source":"      ## Compatibility with Visual Basic 6.0    MaskedTextBox was designed to retain most of the functionality of the Masked Edit control in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0."},{"content":"The following table lists common properties on the Masked Edit control and gives their equivalents on MaskedTextBox.","pos":[4707,4823]},{"content":"|Masked Edit control (<ph id=\"ph1\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> 6.0) property|Equivalent MaskedTextBox (<ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>) property|   |-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|   |<ph id=\"ph3\">`AllowPrompt`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;|   |<ph id=\"ph4\">`AutoTab`</ph> property|None|   |<ph id=\"ph5\">`ClipMode`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A&gt;|   |<ph id=\"ph6\">`ClipText`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; (when &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt; is set to &lt;xref:System.Windows.Forms.MaskFormat&gt;)|   |<ph id=\"ph7\">`Format`</ph> property|None|   |<ph id=\"ph8\">`FormattedText`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; (when &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt; is set to &lt;xref:System.Windows.Forms.MaskFormat&gt;)|   |<ph id=\"ph9\">`Mask`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;|   |<ph id=\"ph10\">`PromptChar`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt;|   |<ph id=\"ph11\">`PromptInclude`</ph> property|&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;|   |<ph id=\"ph12\">`ValidationError`</ph> event|&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;|      &gt; <ph id=\"ph13\">[!CAUTION]</ph> &gt;  The MaskedTextBox control does not support multiline configuration or undo functionality.","pos":[4829,6270],"source":"      |Masked Edit control ([!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0) property|Equivalent MaskedTextBox ([!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]) property|   |-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|   |`AllowPrompt` property|<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>|   |`AutoTab` property|None|   |`ClipMode` property|<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>|   |`ClipText` property|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat>)|   |`Format` property|None|   |`FormattedText` property|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat>)|   |`Mask` property|<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>|   |`PromptChar` property|<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A>|   |`PromptInclude` property|<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>|   |`ValidationError` event|<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected>|      > [!CAUTION] >  The MaskedTextBox control does not support multiline configuration or undo functionality."},{"content":"However, while the members associated with these features have been retained for compatibility with the &lt;xref:System.Windows.Forms.TextBoxBase&gt; base class, their implementations perform no actions.","pos":[6271,6468],"source":" However, while the members associated with these features have been retained for compatibility with the <xref:System.Windows.Forms.TextBoxBase> base class, their implementations perform no actions."}]},{"pos":[36358,36469],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using defaults.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> class using defaults."},{"pos":[36481,36712],"content":"The default MaskedTextBox constructor sets the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property to a null mask, represented by the string \"<>\". A null mask will accept any combination of characters as input.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The default MaskedTextBox constructor sets the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property to a null mask, represented by the string \"<>\". A null mask will accept any combination of characters as input.","pos":[0,231],"nodes":[{"content":"The default MaskedTextBox constructor sets the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt; property to a null mask, represented by the string \"&lt;&gt;\".","pos":[0,167],"source":"The default MaskedTextBox constructor sets the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property to a null mask, represented by the string \"<>\"."},{"content":"A null mask will accept any combination of characters as input.","pos":[168,231]}]}]},{"pos":[37376,37522],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified custom mask language provider.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> class using the specified custom mask language provider."},{"pos":[37535,38394],"content":"The `maskedTextProvider` parameter defines the masking language used by <xref:System.Windows.Forms.MaskedTextBox>. It is responsible for parsing the mask and determining whether user input conforms to the current mask position. You can derive a new class from <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> to define your own custom masking language, and use the MaskedTextBox constructor to replace the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName>.       If you want to use the default masking language and supply your own input mask, you do not need to use this constructor. Instead, you can either use the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> constructor, or use the default constructor then set the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`maskedTextProvider`</ph> parameter defines the masking language used by &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[0,114],"source":"The `maskedTextProvider` parameter defines the masking language used by <xref:System.Windows.Forms.MaskedTextBox>."},{"content":"It is responsible for parsing the mask and determining whether user input conforms to the current mask position.","pos":[115,227]},{"content":"You can derive a new class from &lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt; to define your own custom masking language, and use the MaskedTextBox constructor to replace the standard &lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt;.","pos":[228,512],"source":" You can derive a new class from <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> to define your own custom masking language, and use the MaskedTextBox constructor to replace the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName>."},{"content":"If you want to use the default masking language and supply your own input mask, you do not need to use this constructor.","pos":[519,639]},{"content":"Instead, you can either use the &lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29&gt; constructor, or use the default constructor then set the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property.","pos":[640,857],"source":" Instead, you can either use the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> constructor, or use the default constructor then set the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property."}]},{"pos":[38620,38738],"content":"A custom mask language provider, derived from the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"A custom mask language provider, derived from the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class."},{"pos":[38909,39005],"content":"<ph id=\"ph1\">&lt;code&gt;maskedTextProvider&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>maskedTextProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39441,39568],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified input mask.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> class using the specified input mask."},{"pos":[39581,39947],"content":"The MaskedTextBox constructor uses the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> with the input `mask` to parse user input into the <xref:System.Windows.Forms.MaskedTextBox>.       If you assign a new mask to the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, it will override the value set by this constructor.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaskedTextBox constructor uses the standard &lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt; with the input <ph id=\"ph1\">`mask`</ph> to parse user input into the &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[0,214],"source":"The MaskedTextBox constructor uses the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> with the input `mask` to parse user input into the <xref:System.Windows.Forms.MaskedTextBox>."},{"content":"If you assign a new mask to the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property, it will override the value set by this constructor.","pos":[221,364],"source":"       If you assign a new mask to the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, it will override the value set by this constructor."}]},{"pos":[40084,40218],"content":"A <xref:System.String> representing the input mask. The initial value of the <xref:System.Windows.Forms.MaskedTextBox.Mask*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> representing the input mask. The initial value of the <xref:System.Windows.Forms.MaskedTextBox.Mask*> property.","pos":[0,134],"nodes":[{"content":"A &lt;xref:System.String&gt; representing the input mask.","pos":[0,51],"source":"A <xref:System.String> representing the input mask."},{"content":"The initial value of the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask*&gt; property.","pos":[52,134],"source":" The initial value of the <xref:System.Windows.Forms.MaskedTextBox.Mask*> property."}]}]},{"pos":[40389,40471],"content":"<ph id=\"ph1\">&lt;code&gt;mask&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>mask</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[40849,41027],"content":"Gets or sets a value determining how TAB keys are handled for multiline configurations. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value determining how TAB keys are handled for multiline configurations.","pos":[0,87]},{"content":"This property is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[88,178],"source":" This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[41039,41281],"content":"The AcceptsTab property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AcceptsTab property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.","pos":[0,242],"nodes":[{"content":"The AcceptsTab property is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,97],"source":"The AcceptsTab property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this property is not supported.","pos":[98,242],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported."}]}]},{"pos":[41400,41476],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[41962,42151],"content":"Occurs when the value of the <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab*> property has changed. This event is not raised by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.MaskedTextBox.AcceptsTab*&gt; property has changed.","pos":[0,104],"source":"Occurs when the value of the <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab*> property has changed."},{"content":"This event is not raised by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[105,189],"source":" This event is not raised by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[42163,42406],"content":"The AcceptsTabChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AcceptsTabChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not supported.","pos":[0,243],"nodes":[{"content":"The AcceptsTabChanged event is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,101],"source":"The AcceptsTabChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this event is not supported.","pos":[102,243],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not supported."}]}]},{"pos":[42538,42550],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42985,43120],"content":"Gets or sets a value indicating whether <xref:System.Windows.Forms.MaskedTextBox.PromptChar*> can be entered as valid data by the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether &lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar*&gt; can be entered as valid data by the user.","pos":[0,135],"source":"Gets or sets a value indicating whether <xref:System.Windows.Forms.MaskedTextBox.PromptChar*> can be entered as valid data by the user."}]},{"pos":[43797,44070],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user can enter the prompt character into the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user can enter the prompt character into the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,196],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user can enter the prompt character into the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[197,273],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[44527,44689],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control accepts characters outside of the ASCII character set.","needQuote":true,"needEscape":true,"source":"Gets or sets a value indicating whether the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control accepts characters outside of the ASCII character set."},{"pos":[44701,44815],"content":"If `true`, AsciiOnly restricts user input to the characters a-z and A-Z. ASCII control characters are not allowed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, AsciiOnly restricts user input to the characters a-z and A-Z.","pos":[0,72],"source":"If `true`, AsciiOnly restricts user input to the characters a-z and A-Z."},{"content":"ASCII control characters are not allowed.","pos":[73,114]}]},{"pos":[44933,45277],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if only ASCII is accepted; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control can accept any arbitrary Unicode character. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if only ASCII is accepted; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> control can accept any arbitrary Unicode character.","pos":[0,265],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if only ASCII is accepted; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control can accept any arbitrary Unicode character."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[266,344],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[45735,45867],"content":"Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.","pos":[0,132]}]},{"pos":[45879,46011],"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event will still occur if the BeepOnError property is set to <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event will still occur if the BeepOnError property is set to `true`."},{"pos":[46131,46446],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control should beep on invalid input; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control should beep on invalid input; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,236],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control should beep on invalid input; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[237,315],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[46886,47050],"content":"Gets a value indicating whether the user can undo the previous operation. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the user can undo the previous operation.","pos":[0,73]},{"content":"This property is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[74,164],"source":" This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[47062,47297],"content":"The CanUndo property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality, this property always has a value of `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CanUndo property is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,94],"source":"The CanUndo property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because &lt;xref:System.Windows.Forms.MaskedTextBox&gt; does not support undo functionality, this property always has a value of <ph id=\"ph1\">`false`</ph>.","pos":[95,235],"source":" However, because <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality, this property always has a value of `false`."}]},{"pos":[47408,47484],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in all cases.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases."},{"pos":[47934,48111],"content":"Clears information about the most recent operation from the undo buffer of the text box. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears information about the most recent operation from the undo buffer of the text box.","pos":[0,88]},{"content":"This method is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,177],"source":" This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[48123,48305],"content":"The ClearUndo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ClearUndo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.","pos":[0,182],"nodes":[{"content":"The ClearUndo method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,94],"source":"The ClearUndo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, &lt;xref:System.Windows.Forms.MaskedTextBox&gt; does not support undo functionality.","pos":[95,182],"source":" However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality."}]}]},{"pos":[48840,48873],"content":"Creates a handle for the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a handle for the control.","pos":[0,33]}]},{"pos":[49422,49495],"content":"Gets the required creation parameters when the control handle is created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]},{"pos":[49671,49788],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the information needed when creating a control.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> representing the information needed when creating a control."},{"pos":[50229,50302],"content":"Gets or sets the culture information associated with the masked text box.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the culture information associated with the masked text box.","pos":[0,73]}]},{"pos":[50464,50604],"content":"A &lt;xref:System.Globalization.CultureInfo&gt; representing the culture supported by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Globalization.CultureInfo> representing the culture supported by the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."},{"pos":[50777,50857],"content":"Culture was set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Culture was set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[51270,51374],"content":"Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.","pos":[0,104]}]},{"pos":[51387,52090],"content":"The CutCopyMaskFormat property determines how text, selected within the <xref:System.Windows.Forms.MaskedTextBox> control, is interpreted when it is copied to the clipboard or retrieved through the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property. Specifically, it determines whether literal characters, prompt characters, or both are included when selected text is accessed. When prompt characters are excluded, they are transformed into spaces in the copied string.      > [!NOTE] >  The <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CutCopyMaskFormat property determines how text, selected within the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control, is interpreted when it is copied to the clipboard or retrieved through the &lt;xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A&gt; property.","pos":[0,265],"source":"The CutCopyMaskFormat property determines how text, selected within the <xref:System.Windows.Forms.MaskedTextBox> control, is interpreted when it is copied to the clipboard or retrieved through the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property."},{"content":"Specifically, it determines whether literal characters, prompt characters, or both are included when selected text is accessed.","pos":[266,393]},{"content":"When prompt characters are excluded, they are transformed into spaces in the copied string.","pos":[394,485]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt; property serves a similar purpose with respect to how the &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property is interpreted.","pos":[491,700],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted."}]},{"pos":[52261,52401],"content":"One of the <xref href=\"System.Windows.Forms.MaskFormat\"></xref> values. The default is <xref href=\"System.Windows.Forms.MaskFormat\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Windows.Forms.MaskFormat\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,140],"source":" The default is <xref href=\"System.Windows.Forms.MaskFormat\"></xref>."}]},{"pos":[52628,52725],"content":"Property set with a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that is not valid.","needQuote":true,"needEscape":true,"source":"Property set with a <xref href=\"System.Windows.Forms.MaskFormat\"></xref> value that is not valid."},{"pos":[53123,53209],"content":"Gets or sets the <xref:System.IFormatProvider> to use when performing type validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the &lt;xref:System.IFormatProvider&gt; to use when performing type validation.","pos":[0,86],"source":"Gets or sets the <xref:System.IFormatProvider> to use when performing type validation."}]},{"pos":[53221,53467],"content":"FormatProvider determines which symbols are used for the currency, date, and other culture-specific mask placeholders when type validation occurs and the control has a non-null <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"FormatProvider determines which symbols are used for the currency, date, and other culture-specific mask placeholders when type validation occurs and the control has a non-null &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt; property.","pos":[0,246],"source":"FormatProvider determines which symbols are used for the currency, date, and other culture-specific mask placeholders when type validation occurs and the control has a non-null <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property."}]},{"pos":[53609,53679],"content":"An object that implements the <xref:System.IFormatProvider> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements the &lt;xref:System.IFormatProvider&gt; interface.","pos":[0,70],"source":"An object that implements the <xref:System.IFormatProvider> interface."}]},{"pos":[54245,54330],"content":"Retrieves the character that is closest to the specified location within the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the character that is closest to the specified location within the control.","pos":[0,85]}]},{"pos":[54503,54557],"content":"The location from which to seek the nearest character.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location from which to seek the nearest character.","pos":[0,54]}]},{"pos":[54613,54653],"content":"The character at the specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The character at the specified location.","pos":[0,40]}]},{"pos":[55249,55320],"content":"Retrieves the index of the character nearest to the specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the index of the character nearest to the specified location.","pos":[0,71]}]},{"pos":[55497,55520],"content":"The location to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location to search.","pos":[0,23]}]},{"pos":[55577,55634],"content":"The zero-based character index at the specified location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based character index at the specified location.","pos":[0,57]}]},{"pos":[56224,56372],"content":"Retrieves the index of the first character of a given line. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the index of the first character of a given line.","pos":[0,59]},{"content":"This method is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[60,148],"source":" This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[56384,56637],"content":"The GetFirstCharIndexFromLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetFirstCharIndexFromLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.","pos":[0,253],"nodes":[{"content":"The GetFirstCharIndexFromLine method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,110],"source":"The GetFirstCharIndexFromLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this method is not supported.","pos":[111,253],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported."}]}]},{"pos":[56797,56824],"content":"This parameter is not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter is not used.","pos":[0,27]}]},{"pos":[56881,56914],"content":"This method will always return 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method will always return 0.","pos":[0,33]}]},{"pos":[57487,57639],"content":"Retrieves the index of the first character of the current line. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the index of the first character of the current line.","pos":[0,63]},{"content":"This method is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[64,152],"source":" This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[57651,57909],"content":"The GetFirstCharIndexOfCurrentLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetFirstCharIndexOfCurrentLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.","pos":[0,258],"nodes":[{"content":"The GetFirstCharIndexOfCurrentLine method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,115],"source":"The GetFirstCharIndexOfCurrentLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this method is not supported.","pos":[116,258],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported."}]}]},{"pos":[58054,58087],"content":"This method will always return 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method will always return 0.","pos":[0,33]}]},{"pos":[58658,58842],"content":"Retrieves the line number from the specified character position within the text of the control. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the line number from the specified character position within the text of the control.","pos":[0,95]},{"content":"This method is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[96,184],"source":" This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[58854,59102],"content":"The GetLineFromCharIndex method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetLineFromCharIndex method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.","pos":[0,248],"nodes":[{"content":"The GetLineFromCharIndex method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,105],"source":"The GetLineFromCharIndex method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this method is not supported.","pos":[106,248],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported."}]}]},{"pos":[59256,59283],"content":"This parameter is not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"This parameter is not used.","pos":[0,27]}]},{"pos":[59340,59373],"content":"This method will always return 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method will always return 0.","pos":[0,33]}]},{"pos":[59954,60029],"content":"Retrieves the location within the control at the specified character index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the location within the control at the specified character index.","pos":[0,75]}]},{"pos":[60204,60266],"content":"The index of the character for which to retrieve the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index of the character for which to retrieve the location.","pos":[0,62]}]},{"pos":[60331,60414],"content":"The location of the specified character within the client rectangle of the control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location of the specified character within the client rectangle of the control.","pos":[0,83]}]},{"pos":[60917,61045],"content":"Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.","pos":[0,128]}]},{"pos":[61171,61534],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Forms.MaskedTextBox.PromptChar*> is hidden when <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> does not have focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar*&gt; is hidden when <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> does not have focus; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,284],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Forms.MaskedTextBox.PromptChar*> is hidden when <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> does not have focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[285,363],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[62010,62078],"content":"Gets or sets the text insertion mode of the masked text box control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text insertion mode of the masked text box control.","pos":[0,68]}]},{"pos":[62091,63097],"content":"The InsertKeyMode property controls the character insertion behavior of the <xref:System.Windows.Forms.MaskedTextBox> control. The state of this property is defined by the <xref:System.Windows.Forms.InsertKeyMode> enumeration, which can be always on, always off or set to respect the setting of the user's keyboard. This property supersedes the insertion mode of the keyboard. For example, if the keyboard is set to overwrite, but InsertKeyMode is set to `Insert`, the <xref:System.Windows.Forms.MaskedTextBox> will operate in insert mode. The <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property will access the true insertion mode of the <xref:System.Windows.Forms.MaskedTextBox>.       If changing InsertKeyMode changes the value of <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>, <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event.       This property has no effect if no mask has been set.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InsertKeyMode property controls the character insertion behavior of the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control.","pos":[0,126],"source":"The InsertKeyMode property controls the character insertion behavior of the <xref:System.Windows.Forms.MaskedTextBox> control."},{"content":"The state of this property is defined by the &lt;xref:System.Windows.Forms.InsertKeyMode&gt; enumeration, which can be always on, always off or set to respect the setting of the user's keyboard.","pos":[127,315],"source":" The state of this property is defined by the <xref:System.Windows.Forms.InsertKeyMode> enumeration, which can be always on, always off or set to respect the setting of the user's keyboard."},{"content":"This property supersedes the insertion mode of the keyboard.","pos":[316,376]},{"content":"For example, if the keyboard is set to overwrite, but InsertKeyMode is set to <ph id=\"ph1\">`Insert`</ph>, the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; will operate in insert mode.","pos":[377,539],"source":" For example, if the keyboard is set to overwrite, but InsertKeyMode is set to `Insert`, the <xref:System.Windows.Forms.MaskedTextBox> will operate in insert mode."},{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt; property will access the true insertion mode of the &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[540,699],"source":" The <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property will access the true insertion mode of the <xref:System.Windows.Forms.MaskedTextBox>."},{"content":"If changing InsertKeyMode changes the value of &lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox&gt; will raise the &lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged&gt; event.","pos":[706,943],"source":"       If changing InsertKeyMode changes the value of <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>, <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event."},{"content":"This property has no effect if no mask has been set.","pos":[950,1002]}]},{"pos":[63270,63449],"content":"An <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref> value that indicates the current insertion mode. The default is <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InsertKeyMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that indicates the current insertion mode.","pos":[0,107],"source":"An <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref> value that indicates the current insertion mode."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InsertKeyMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[108,179],"source":" The default is <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref>."}]},{"pos":[63672,63785],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.InsertKeyMode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value was supplied when setting this property.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref> value was supplied when setting this property."},{"pos":[64233,64331],"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","pos":[0,98]}]},{"pos":[64518,64583],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values."},{"pos":[64642,64740],"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","pos":[0,98]}]},{"pos":[65219,65296],"content":"Gets a value that specifies whether new user input overwrites existing input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that specifies whether new user input overwrites existing input.","pos":[0,77]}]},{"pos":[65309,66215],"content":"IsOverwriteMode takes into account both the value of the <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property and the state of the user's keyboard. If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to either <xref:System.Windows.Forms.InsertKeyMode> or <xref:System.Windows.Forms.InsertKeyMode>, IsOverwriteMode will return `false` or `true`, respectively. If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to <xref:System.Windows.Forms.InsertKeyMode>, it will return the state of the INSERT key.       When IsOverwriteMode is `false`, <xref:System.Windows.Forms.MaskedTextBox> will reject as invalid any character entry that would result in a violation anywhere in the mask. In explanation, if inserting a character would cause a character to be shifted over into a mask position where it would not be valid, the character insertion will be rejected.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"IsOverwriteMode takes into account both the value of the &lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt; property and the state of the user's keyboard.","pos":[0,162],"source":"IsOverwriteMode takes into account both the value of the <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property and the state of the user's keyboard."},{"content":"If &lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt; is set to either &lt;xref:System.Windows.Forms.InsertKeyMode&gt; or &lt;xref:System.Windows.Forms.InsertKeyMode&gt;, IsOverwriteMode will return <ph id=\"ph1\">`false`</ph> or <ph id=\"ph2\">`true`</ph>, respectively.","pos":[163,390],"source":" If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to either <xref:System.Windows.Forms.InsertKeyMode> or <xref:System.Windows.Forms.InsertKeyMode>, IsOverwriteMode will return `false` or `true`, respectively."},{"content":"If &lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt; is set to &lt;xref:System.Windows.Forms.InsertKeyMode&gt;, it will return the state of the INSERT key.","pos":[391,549],"source":" If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to <xref:System.Windows.Forms.InsertKeyMode>, it will return the state of the INSERT key."},{"content":"When IsOverwriteMode is <ph id=\"ph1\">`false`</ph>, &lt;xref:System.Windows.Forms.MaskedTextBox&gt; will reject as invalid any character entry that would result in a violation anywhere in the mask.","pos":[556,728],"source":"       When IsOverwriteMode is `false`, <xref:System.Windows.Forms.MaskedTextBox> will reject as invalid any character entry that would result in a violation anywhere in the mask."},{"content":"In explanation, if inserting a character would cause a character to be shifted over into a mask position where it would not be valid, the character insertion will be rejected.","pos":[729,904]}]},{"pos":[66335,66759],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> will overwrite existing characters as the user enters new ones; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> will shift existing characters forward. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will overwrite existing characters as the user enters new ones; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if <bpt id=\"p4\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> will shift existing characters forward.","pos":[0,345],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> will overwrite existing characters as the user enters new ones; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> will shift existing characters forward."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[346,424],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[67275,67316],"content":"Occurs after the insert mode has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs after the insert mode has changed.","pos":[0,41]}]},{"pos":[67329,67581],"content":"The IsOverwriteModeChanged event is raised after value of the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is changed.       This event is required to properly bind data to a <xref:System.Windows.Forms.MaskedTextBox> control.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsOverwriteModeChanged event is raised after value of the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is changed.       This event is required to properly bind data to a <xref:System.Windows.Forms.MaskedTextBox> control.","pos":[0,250],"nodes":[{"content":"The IsOverwriteModeChanged event is raised after value of the &lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt; property is changed.","pos":[0,143],"source":"The IsOverwriteModeChanged event is raised after value of the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is changed."},{"content":"This event is required to properly bind data to a &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control.","pos":[150,250],"source":"       This event is required to properly bind data to a <xref:System.Windows.Forms.MaskedTextBox> control."}]}]},{"pos":[68758,68770],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[69140,69290],"content":"Gets or sets the lines of text in multiline configurations. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the lines of text in multiline configurations.","pos":[0,59]},{"content":"This property is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[60,150],"source":" This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[69302,69539],"content":"The Lines property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Lines property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.","pos":[0,237],"nodes":[{"content":"The Lines property is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,92],"source":"The Lines property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this property is not supported.","pos":[93,237],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported."}]}]},{"pos":[69658,69724],"content":"An array of type <xref:System.String> that contains a single line.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.String&gt; that contains a single line.","pos":[0,66],"source":"An array of type <xref:System.String> that contains a single line."}]},{"pos":[70143,70190],"content":"Gets or sets the input mask to use at run time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the input mask to use at run time.","pos":[0,47]}]},{"pos":[76380,76495],"content":"A <xref:System.String> representing the current mask. The default value is the empty string which allows any input.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> representing the current mask. The default value is the empty string which allows any input.","pos":[0,115],"nodes":[{"content":"A &lt;xref:System.String&gt; representing the current mask.","pos":[0,53],"source":"A <xref:System.String> representing the current mask."},{"content":"The default value is the empty string which allows any input.","pos":[54,115]}]}]},{"pos":[76657,76783],"content":"The string supplied to the Mask property is not a valid mask. Invalid masks include masks containing non-printable characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string supplied to the Mask property is not a valid mask. Invalid masks include masks containing non-printable characters.","pos":[0,126],"nodes":[{"content":"The string supplied to the Mask property is not a valid mask.","pos":[0,61]},{"content":"Invalid masks include masks containing non-printable characters.","pos":[62,126]}]}]},{"pos":[77163,77202],"content":"Occurs after the input mask is changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs after the input mask is changed.","pos":[0,39]}]},{"pos":[77214,77708],"content":"The MaskChanged event is raised after the value of the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property is changed. This event is also raised if the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> is indirectly altered by a member such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaskChanged event is raised after the value of the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property is changed. This event is also raised if the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> is indirectly altered by a member such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>.","pos":[0,494],"nodes":[{"content":"The MaskChanged event is raised after the value of the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property is changed.","pos":[0,125],"source":"The MaskChanged event is raised after the value of the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property is changed."},{"content":"This event is also raised if the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt; is indirectly altered by a member such as &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;, and &lt;xref:System.Windows.Forms.MaskedTextBox.Culture%2A&gt;.","pos":[126,494],"source":" This event is also raised if the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> is indirectly altered by a member such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>."}]}]},{"pos":[78851,78863],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79273,79363],"content":"Gets a value indicating whether all required inputs have been entered into the input mask.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether all required inputs have been entered into the input mask.","pos":[0,90]}]},{"pos":[79375,79588],"content":"MaskCompleted checks only required input elements. To determine whether all required and optional input elements have been filled in, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property instead.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"MaskCompleted checks only required input elements. To determine whether all required and optional input elements have been filled in, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property instead.","pos":[0,213],"nodes":[{"content":"MaskCompleted checks only required input elements.","pos":[0,50]},{"content":"To determine whether all required and optional input elements have been filled in, use the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A&gt; property instead.","pos":[51,213],"source":" To determine whether all required and optional input elements have been filled in, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property instead."}]}]},{"pos":[79705,79894],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all required input has been entered into the mask; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all required input has been entered into the mask; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[80391,80486],"content":"Gets a clone of the mask provider associated with this instance of the masked text box control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a clone of the mask provider associated with this instance of the masked text box control.","pos":[0,95]}]},{"pos":[80499,81357],"content":"The MaskedTextProvider property defines the mask-parsing engine and the masking language used by the <xref:System.Windows.Forms.MaskedTextBox> control. The default provider is the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class; however, a custom provider can be specified using the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> constructor.       MaskedTextProvider cannot be set directly. However, setting some of the properties of <xref:System.Windows.Forms.MaskedTextBox>—such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>—may internally cause the creation of a new MaskedTextProvider.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaskedTextProvider property defines the mask-parsing engine and the masking language used by the <xref:System.Windows.Forms.MaskedTextBox> control. The default provider is the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class; however, a custom provider can be specified using the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> constructor.       MaskedTextProvider cannot be set directly. However, setting some of the properties of <xref:System.Windows.Forms.MaskedTextBox>—such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>—may internally cause the creation of a new MaskedTextProvider.","pos":[0,856],"nodes":[{"content":"The MaskedTextProvider property defines the mask-parsing engine and the masking language used by the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control.","pos":[0,151],"source":"The MaskedTextProvider property defines the mask-parsing engine and the masking language used by the <xref:System.Windows.Forms.MaskedTextBox> control."},{"content":"The default provider is the &lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt; class; however, a custom provider can be specified using the &lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29&gt; constructor.","pos":[152,422],"source":" The default provider is the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class; however, a custom provider can be specified using the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> constructor."},{"content":"MaskedTextProvider cannot be set directly.","pos":[429,471]},{"content":"However, setting some of the properties of &lt;xref:System.Windows.Forms.MaskedTextBox&gt;—such as &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;, and &lt;xref:System.Windows.Forms.MaskedTextBox.Culture%2A&gt;—may internally cause the creation of a new MaskedTextProvider.","pos":[472,856],"source":" However, setting some of the properties of <xref:System.Windows.Forms.MaskedTextBox>—such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>—may internally cause the creation of a new MaskedTextProvider."}]}]},{"pos":[81542,81597],"content":"A masking language provider of type MaskedTextProvider.","needQuote":true,"needEscape":true,"nodes":[{"content":"A masking language provider of type MaskedTextProvider.","pos":[0,55]}]},{"pos":[82049,82152],"content":"Gets a value indicating whether all required and optional inputs have been entered into the input mask.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether all required and optional inputs have been entered into the input mask.","pos":[0,103]}]},{"pos":[82164,82525],"content":"You can use the MaskFull property within the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event handler to determine if the user's input was rejected because there are no remaining inputs in the mask. To determine whether only required input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the MaskFull property within the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event handler to determine if the user's input was rejected because there are no remaining inputs in the mask. To determine whether only required input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> property.","pos":[0,361],"nodes":[{"content":"You can use the MaskFull property within the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event handler to determine if the user's input was rejected because there are no remaining inputs in the mask.","pos":[0,215],"source":"You can use the MaskFull property within the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event handler to determine if the user's input was rejected because there are no remaining inputs in the mask."},{"content":"To determine whether only required input elements have been entered, use the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A&gt; property.","pos":[216,361],"source":" To determine whether only required input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> property."}]}]},{"pos":[83118,83308],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all required and optional inputs have been entered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all required and optional inputs have been entered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[83792,83909],"content":"Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.","pos":[0,117]}]},{"pos":[83922,86032],"content":"MaskInputRejected is the default event for the <xref:System.Windows.Forms.MaskedTextBox> class.       The MaskInputRejected event occurs when a character is rejected by the input mask. The input mask, represented by the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, is interpreted by the masked text provider associated with the control through the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property. MaskInputRejected is raised in the following situations:      -   An input character does not match the corresponding format element. For example, the user enters an alphabetic character when a digit is required. This is probably the most common reason why this event is raised.      -   The user is trying to input extraneous characters beyond the end of the mask either because the mask has already been filled or the current caret position has been moved to the very end of the displayed input mask string.      -   A paste operation either inserts a character that does not match its associated format element, or if the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, it shifts existing characters into new positions where they do not match their format elements.      -   A cut operation shifts existing characters to the left, and one or more characters do not match their newly associated format elements.      -   An assignment was made to the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property and the assigned string caused one or more mask violations.       If a string was assigned to the control that causes MaskInputRejected to occur, no part of the string will appear in <xref:System.Windows.Forms.MaskedTextBox>.       The default handling for MaskInputRejected will play a beep sound if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`. This event is often handled to implement custom error handling, for example, to move to the next user input control if the mask is full, or to display a custom error dialog box or ToolTip if the input character is invalid.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"MaskInputRejected is the default event for the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; class.","pos":[0,95],"source":"MaskInputRejected is the default event for the <xref:System.Windows.Forms.MaskedTextBox> class."},{"content":"The MaskInputRejected event occurs when a character is rejected by the input mask.","pos":[102,184]},{"content":"The input mask, represented by the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property, is interpreted by the masked text provider associated with the control through the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt; property.","pos":[185,436],"source":" The input mask, represented by the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, is interpreted by the masked text provider associated with the control through the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property."},{"content":"MaskInputRejected is raised in the following situations:      -   An input character does not match the corresponding format element.","pos":[437,570]},{"content":"For example, the user enters an alphabetic character when a digit is required.","pos":[571,649]},{"content":"This is probably the most common reason why this event is raised.","pos":[650,715]},{"content":"-   The user is trying to input extraneous characters beyond the end of the mask either because the mask has already been filled or the current caret position has been moved to the very end of the displayed input mask string.","pos":[721,946]},{"content":"-   A paste operation either inserts a character that does not match its associated format element, or if the &lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt; property is <ph id=\"ph1\">`false`</ph>, it shifts existing characters into new positions where they do not match their format elements.","pos":[952,1239],"source":"      -   A paste operation either inserts a character that does not match its associated format element, or if the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, it shifts existing characters into new positions where they do not match their format elements."},{"content":"-   A cut operation shifts existing characters to the left, and one or more characters do not match their newly associated format elements.","pos":[1245,1384]},{"content":"-   An assignment was made to the &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property and the assigned string caused one or more mask violations.","pos":[1390,1542],"source":"      -   An assignment was made to the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property and the assigned string caused one or more mask violations."},{"content":"If a string was assigned to the control that causes MaskInputRejected to occur, no part of the string will appear in &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[1549,1708],"source":"       If a string was assigned to the control that causes MaskInputRejected to occur, no part of the string will appear in <xref:System.Windows.Forms.MaskedTextBox>."},{"content":"The default handling for MaskInputRejected will play a beep sound if the &lt;xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A&gt; property is set to <ph id=\"ph1\">`true`</ph>.","pos":[1715,1871],"source":"       The default handling for MaskInputRejected will play a beep sound if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`."},{"content":"This event is often handled to implement custom error handling, for example, to move to the next user input control if the mask is full, or to display a custom error dialog box or ToolTip if the input character is invalid.","pos":[1872,2094]}]},{"pos":[87263,87275],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[87665,87855],"content":"Gets or sets the maximum number of characters the user can type or paste into the text box control. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of characters the user can type or paste into the text box control.","pos":[0,99]},{"content":"This property is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[100,190],"source":" This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[87867,88203],"content":"See the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property and the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> property in the <xref:System.Windows.Forms.MaskInputRejectedEventArgs> class for information about how to determine the maximum length of a string in a <xref:System.Windows.Forms.MaskedTextBox>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"See the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property and the &lt;xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A&gt; property in the &lt;xref:System.Windows.Forms.MaskInputRejectedEventArgs&gt; class for information about how to determine the maximum length of a string in a &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[0,336],"source":"See the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property and the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> property in the <xref:System.Windows.Forms.MaskInputRejectedEventArgs> class for information about how to determine the maximum length of a string in a <xref:System.Windows.Forms.MaskedTextBox>."}]},{"pos":[88327,88358],"content":"This property always returns 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns 0.","pos":[0,31]}]},{"pos":[88806,88980],"content":"Gets or sets a value indicating whether this is a multiline text box control. This property is not fully supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether this is a multiline text box control.","pos":[0,77]},{"content":"This property is not fully supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[78,174],"source":" This property is not fully supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[88992,89337],"content":"The <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not fully supported; it cannot be set and it always resolves to `false`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A&gt; property is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,142],"source":"The <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this property is not fully supported; it cannot be set and it always resolves to <ph id=\"ph1\">`false`</ph>.","pos":[143,345],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not fully supported; it cannot be set and it always resolves to `false`."}]},{"pos":[89464,89556],"content":"This property always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[90036,90243],"content":"Typically occurs when the value of the &lt;xref:System.Windows.Forms.MaskedTextBox.Multiline*&gt; property has changed; however, this event is not raised by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Typically occurs when the value of the <xref:System.Windows.Forms.MaskedTextBox.Multiline*> property has changed; however, this event is not raised by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."},{"pos":[90255,90544],"content":"The MultilineChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not implemented in <xref:System.Windows.Forms.MaskedTextBox>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MultilineChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not implemented in <xref:System.Windows.Forms.MaskedTextBox>.","pos":[0,289],"nodes":[{"content":"The MultilineChanged event is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,100],"source":"The MultilineChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this event is not implemented in &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[101,289],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not implemented in <xref:System.Windows.Forms.MaskedTextBox>."}]}]},{"pos":[90675,90687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[91189,91282],"content":"Occurs when the value of the <xref:System.Windows.Forms.Control.BackColor*> property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the value of the &lt;xref:System.Windows.Forms.Control.BackColor*&gt; property changes.","pos":[0,93],"source":"Occurs when the value of the <xref:System.Windows.Forms.Control.BackColor*> property changes."}]},{"pos":[91440,91496],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[92050,92131],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.HandleCreated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event."},{"pos":[92286,92342],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[92938,93034],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\"></xref> event."},{"pos":[93047,93381],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnIsOverwriteModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,137],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnIsOverwriteModeChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[144,257]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[258,332]}]},{"pos":[93545,93597],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[94170,94245],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event."},{"pos":[94435,94521],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."},{"pos":[95109,95185],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyPress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.KeyPress\"></xref> event."},{"pos":[95386,95477],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyPressEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.KeyPressEventArgs\"></xref> that contains the event data."},{"pos":[96026,96099],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."},{"pos":[96287,96373],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data."},{"pos":[96906,96991],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox.MaskChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.MaskedTextBox.MaskChanged\"></xref> event."},{"pos":[97004,97327],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnMaskChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,137],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnMaskChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[144,246]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[247,321]}]},{"pos":[97480,97532],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[98096,98270],"content":"Typically raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox.MultilineChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event, but disabled for <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Typically raises the <xref href=\"System.Windows.Forms.MaskedTextBox.MultilineChanged\"></xref> event, but disabled for <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."},{"pos":[98282,98547],"content":"The OnMultilineChanged method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnMultilineChanged method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.","pos":[0,265],"nodes":[{"content":"The OnMultilineChanged method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,103],"source":"The OnMultilineChanged method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this method is overridden to perform no actions.","pos":[104,265],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions."}]}]},{"pos":[98705,98757],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[99326,99416],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox.TextAlignChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.MaskedTextBox.TextAlignChanged\"></xref> event."},{"pos":[99429,99757],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnTextAlignChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,137],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnTextAlignChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[144,251]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[252,326]}]},{"pos":[99915,99967],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[100511,100590],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.TextChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event."},{"pos":[100603,100926],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[63,137],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnTextChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[144,246]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[247,321]}]},{"pos":[101080,101132],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[101726,101804],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event."},{"pos":[101817,102701],"content":"The OnValidating method causes the input string to be validated against the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property, if a <xref:System.Type> has been specified for this property. It will then also raise the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event.      > [!NOTE] >  To ensure consistency with text-based controls, validation will occur even if the <xref:System.Windows.Forms.MaskedTextBox> is read-only (its <xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> property is set to `true`).       Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The OnValidating method causes the input string to be validated against the &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt; property, if a &lt;xref:System.Type&gt; has been specified for this property.","pos":[0,207],"source":"The OnValidating method causes the input string to be validated against the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property, if a <xref:System.Type> has been specified for this property."},{"content":"It will then also raise the &lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt; event.","pos":[208,308],"source":" It will then also raise the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To ensure consistency with text-based controls, validation will occur even if the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; is read-only (its &lt;xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A&gt; property is set to <ph id=\"ph2\">`true`</ph>).","pos":[314,550],"source":"      > [!NOTE] >  To ensure consistency with text-based controls, validation will occur even if the <xref:System.Windows.Forms.MaskedTextBox> is read-only (its <xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> property is set to `true`)."},{"content":"Raising an event invokes the event handler through a delegate.","pos":[557,619]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[620,694],"source":" For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."},{"content":"The OnValidating method also allows derived classes to handle the event without attaching a delegate.","pos":[701,802]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[803,877]}]},{"pos":[102903,102975],"content":"A <xref:System.ComponentModel.CancelEventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.ComponentModel.CancelEventArgs&gt; that contains event data.","pos":[0,72],"source":"A <xref:System.ComponentModel.CancelEventArgs> that contains event data."}]},{"pos":[103129,103198],"content":"A critical exception occurred during the parsing of the input string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A critical exception occurred during the parsing of the input string.","pos":[0,69]}]},{"pos":[103586,103658],"content":"Gets or sets the character to be displayed in substitute for user input.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the character to be displayed in substitute for user input.","pos":[0,72]}]},{"pos":[103671,104529],"content":"For sensitive user input, it is common practice to conceal the actual information entered by the user. If the PasswordChar property is set to a non-null character, <xref:System.Windows.Forms.MaskedTextBox> will display this character for all input into the control. Setting this property to `null` will disable this functionality.       If you want to use the operating system supplied password character, which is defined in COMCTL32.dll, use the <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> property instead. If both the PasswordChar and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are activated, the latter takes precedence.      > [!IMPORTANT] >  As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For sensitive user input, it is common practice to conceal the actual information entered by the user.","pos":[0,102]},{"content":"If the PasswordChar property is set to a non-null character, &lt;xref:System.Windows.Forms.MaskedTextBox&gt; will display this character for all input into the control.","pos":[103,265],"source":" If the PasswordChar property is set to a non-null character, <xref:System.Windows.Forms.MaskedTextBox> will display this character for all input into the control."},{"content":"Setting this property to <ph id=\"ph1\">`null`</ph> will disable this functionality.","pos":[266,330],"source":" Setting this property to `null` will disable this functionality."},{"content":"If you want to use the operating system supplied password character, which is defined in COMCTL32.dll, use the &lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt; property instead.","pos":[337,532],"source":"       If you want to use the operating system supplied password character, which is defined in COMCTL32.dll, use the <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> property instead."},{"content":"If both the PasswordChar and &lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt; properties are activated, the latter takes precedence.","pos":[533,683],"source":" If both the PasswordChar and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are activated, the latter takes precedence."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  As a security consideration, the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control disables cut and copy operations on password-protected strings.","pos":[689,853],"source":"      > [!IMPORTANT] >  As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings."}]},{"pos":[104648,104708],"content":"The <xref:System.Char> value used as the password character.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Char&gt; value used as the password character.","pos":[0,60],"source":"The <xref:System.Char> value used as the password character."}]},{"pos":[104878,105136],"content":"The character specified when setting this property is not a valid password character, as determined by the &lt;xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*&gt; method of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The character specified when setting this property is not a valid password character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*> method of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class."},{"pos":[105247,105417],"content":"The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>. The two are required to be different.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>. The two are required to be different.","pos":[0,170],"nodes":[{"content":"The password character specified is the same as the current prompt character, &lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar*&gt;.","pos":[0,132],"source":"The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>."},{"content":"The two are required to be different.","pos":[133,170]}]}]},{"pos":[105964,105988],"content":"Processes a command key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes a command key.","pos":[0,24]}]},{"pos":[106215,106334],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, passed by reference that represents the window message to process.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process."},{"pos":[106410,106519],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that represents the shortcut key to process.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the shortcut key to process."},{"pos":[106578,106762],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the command key was processed by the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the command key was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[107341,107423],"content":"Overrides the base implementation of this method to handle input language changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides the base implementation of this method to handle input language changes.","pos":[0,82]}]},{"pos":[107435,108064],"content":"<xref:System.Windows.Forms.MaskedTextBox> overrides its base control's implementation of ProcessKeyMessage to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts. ProcessKeyMessage detects any WM_CHAR messages that occur after it receives a WM_IME_CHAR message and suppresses them in order to prevent these characters from showing up in the control. If you derive from this control and override this message, you should duplicate this behavior if you wish your new control to work with IMEs.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"<xref:System.Windows.Forms.MaskedTextBox> overrides its base control's implementation of ProcessKeyMessage to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts. ProcessKeyMessage detects any WM_CHAR messages that occur after it receives a WM_IME_CHAR message and suppresses them in order to prevent these characters from showing up in the control. If you derive from this control and override this message, you should duplicate this behavior if you wish your new control to work with IMEs.","pos":[0,629],"nodes":[{"content":"&lt;xref:System.Windows.Forms.MaskedTextBox&gt; overrides its base control's implementation of ProcessKeyMessage to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts.","pos":[0,300],"source":"<xref:System.Windows.Forms.MaskedTextBox> overrides its base control's implementation of ProcessKeyMessage to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts."},{"content":"ProcessKeyMessage detects any WM_CHAR messages that occur after it receives a WM_IME_CHAR message and suppresses them in order to prevent these characters from showing up in the control.","pos":[301,487]},{"content":"If you derive from this control and override this message, you should duplicate this behavior if you wish your new control to work with IMEs.","pos":[488,629]}]}]},{"pos":[108256,108375],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, passed by reference that represents the window message to process.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process."},{"pos":[108434,108614],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the message was processed by the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[109075,109205],"content":"Gets or sets the character used to represent the absence of user input in <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the character used to represent the absence of user input in <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."},{"pos":[109218,109549],"content":"PromptChar will be displayed in <xref:System.Windows.Forms.MaskedTextBox> for any mask position that the user has not yet filled in.       Use the <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property to specify whether the prompt is displayed when <xref:System.Windows.Forms.MaskedTextBox> does not have focus.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"PromptChar will be displayed in <xref:System.Windows.Forms.MaskedTextBox> for any mask position that the user has not yet filled in.       Use the <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property to specify whether the prompt is displayed when <xref:System.Windows.Forms.MaskedTextBox> does not have focus.","pos":[0,329],"nodes":[{"content":"PromptChar will be displayed in &lt;xref:System.Windows.Forms.MaskedTextBox&gt; for any mask position that the user has not yet filled in.","pos":[0,132],"source":"PromptChar will be displayed in <xref:System.Windows.Forms.MaskedTextBox> for any mask position that the user has not yet filled in."},{"content":"Use the &lt;xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A&gt; property to specify whether the prompt is displayed when &lt;xref:System.Windows.Forms.MaskedTextBox&gt; does not have focus.","pos":[139,329],"source":"       Use the <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property to specify whether the prompt is displayed when <xref:System.Windows.Forms.MaskedTextBox> does not have focus."}]}]},{"pos":[109666,109748],"content":"The character used to prompt the user for input. The default is an underscore (_).","needQuote":true,"needEscape":true,"nodes":[{"content":"The character used to prompt the user for input. The default is an underscore (_).","pos":[0,82],"nodes":[{"content":"The character used to prompt the user for input.","pos":[0,48]},{"content":"The default is an underscore (_).","pos":[49,82]}]}]},{"pos":[109916,110172],"content":"The character specified when setting this property is not a valid prompt character, as determined by the &lt;xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*&gt; method of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The character specified when setting this property is not a valid prompt character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*> method of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class."},{"pos":[110283,110455],"content":"The prompt character specified is the same as the current password character, <xref:System.Windows.Forms.MaskedTextBox.PasswordChar*>. The two are required to be different.","needQuote":true,"needEscape":true,"nodes":[{"content":"The prompt character specified is the same as the current password character, <xref:System.Windows.Forms.MaskedTextBox.PasswordChar*>. The two are required to be different.","pos":[0,172],"nodes":[{"content":"The prompt character specified is the same as the current password character, &lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar*&gt;.","pos":[0,134],"source":"The prompt character specified is the same as the current password character, <xref:System.Windows.Forms.MaskedTextBox.PasswordChar*>."},{"content":"The two are required to be different.","pos":[135,172]}]}]},{"pos":[110823,110897],"content":"Gets or sets a value indicating whether text in the text box is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether text in the text box is read-only.","pos":[0,74]}]},{"pos":[111014,111184],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate the text is read only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the text is read only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[111711,111834],"content":"Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.","pos":[0,123]}]},{"pos":[111847,113517],"content":"Sometimes the user will enter several characters into a <xref:System.Windows.Forms.MaskedTextBox> in a single input operation, typically by copying and pasting a string. If the entire string only contains valid characters, according to their paste position in the input mask, then the entire operation will succeed. However, when a parsing error occurs, the behavior of <xref:System.Windows.Forms.MaskedTextBox> depends on the value of RejectInputOnFirstFailure, as follows:      -   If this property is `true`, then processing of the input string stops at the invalid character. All subsequent characters are ignored. A single <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised.      -   If this property is `false`, then the invalid character is rejected, but parsing continues with the next character in the input string. A <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised for every invalid character in the input string.       The <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> properties can also influence the interpretation of the user input.       If the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, then any characters already in the input mask to the right of the insertion point will be displaced by the accepted number of characters. This shifting may cause additional parsing errors.       A pasting operation can be mimicked programmatically by setting the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Sometimes the user will enter several characters into a &lt;xref:System.Windows.Forms.MaskedTextBox&gt; in a single input operation, typically by copying and pasting a string.","pos":[0,169],"source":"Sometimes the user will enter several characters into a <xref:System.Windows.Forms.MaskedTextBox> in a single input operation, typically by copying and pasting a string."},{"content":"If the entire string only contains valid characters, according to their paste position in the input mask, then the entire operation will succeed.","pos":[170,315]},{"content":"However, when a parsing error occurs, the behavior of &lt;xref:System.Windows.Forms.MaskedTextBox&gt; depends on the value of RejectInputOnFirstFailure, as follows:      -   If this property is <ph id=\"ph1\">`true`</ph>, then processing of the input string stops at the invalid character.","pos":[316,579],"source":" However, when a parsing error occurs, the behavior of <xref:System.Windows.Forms.MaskedTextBox> depends on the value of RejectInputOnFirstFailure, as follows:      -   If this property is `true`, then processing of the input string stops at the invalid character."},{"content":"All subsequent characters are ignored.","pos":[580,618]},{"content":"A single &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event is raised.","pos":[619,704],"source":" A single <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised."},{"content":"-   If this property is <ph id=\"ph1\">`false`</ph>, then the invalid character is rejected, but parsing continues with the next character in the input string.","pos":[710,849],"source":"      -   If this property is `false`, then the invalid character is rejected, but parsing continues with the next character in the input string."},{"content":"A &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event is raised for every invalid character in the input string.","pos":[850,976],"source":" A <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised for every invalid character in the input string."},{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A&gt; and &lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt; properties can also influence the interpretation of the user input.","pos":[983,1234],"source":"       The <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> properties can also influence the interpretation of the user input."},{"content":"If the &lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt; property is <ph id=\"ph1\">`false`</ph>, then any characters already in the input mask to the right of the insertion point will be displaced by the accepted number of characters.","pos":[1241,1467],"source":"       If the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, then any characters already in the input mask to the right of the insertion point will be displaced by the accepted number of characters."},{"content":"This shifting may cause additional parsing errors.","pos":[1468,1518]},{"content":"A pasting operation can be mimicked programmatically by setting the &lt;xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A&gt; property.","pos":[1525,1660],"source":"       A pasting operation can be mimicked programmatically by setting the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property."}]},{"pos":[113652,113988],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if processing of the input string should be terminated at the first parsing error; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if processing should ignore all errors. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if processing of the input string should be terminated at the first parsing error; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if processing should ignore all errors.","pos":[0,257],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if processing of the input string should be terminated at the first parsing error; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if processing should ignore all errors."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[258,336],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[114472,114584],"content":"Gets or sets a value that determines how an input character that matches the prompt character should be handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines how an input character that matches the prompt character should be handled.","pos":[0,112]}]},{"pos":[114597,115995],"content":"The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters—spaces and prompt characters—specially. Typically, each input character will be tested against the mask and either accepted or rejected. Assuming that the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property is set to non-`null`, then setting the ResetOnPrompt property to `true` will result in special processing for the prompt character. When the user enters the prompt character into the mask, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.       ResetOnPrompt takes precedence over the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property, as shown in the following table.      |ResetOnPrompt value|AllowPromptAsInput value|Resulting behavior|   |-------------------------|------------------------------|------------------------|   |`true`|`true`|The prompt character can be entered and it causes the current mask position to be reset. This is the default.|   |`true`|`false`|The prompt character can be entered and it causes the current mask position to be reset.|   |`false`|`true`|The prompt character is processed as a standard input character.|   |`false`|`false`|The prompt character is not valid and raises a <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox&gt; can treat two categories of characters—spaces and prompt characters—specially.","pos":[0,124],"source":"The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters—spaces and prompt characters—specially."},{"content":"Typically, each input character will be tested against the mask and either accepted or rejected.","pos":[125,221]},{"content":"Assuming that the &lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt; property is set to non-<ph id=\"ph1\">`null`</ph>, then setting the ResetOnPrompt property to <ph id=\"ph2\">`true`</ph> will result in special processing for the prompt character.","pos":[222,436],"source":" Assuming that the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property is set to non-`null`, then setting the ResetOnPrompt property to `true` will result in special processing for the prompt character."},{"content":"When the user enters the prompt character into the mask, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.","pos":[437,625]},{"content":"ResetOnPrompt takes precedence over the &lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt; property, as shown in the following table.","pos":[632,778],"source":"       ResetOnPrompt takes precedence over the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property, as shown in the following table."},{"content":"|ResetOnPrompt value|AllowPromptAsInput value|Resulting behavior|   |-------------------------|------------------------------|------------------------|   |<ph id=\"ph1\">`true`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`true`</ph>|The prompt character can be entered and it causes the current mask position to be reset.","pos":[784,1041],"source":"      |ResetOnPrompt value|AllowPromptAsInput value|Resulting behavior|   |-------------------------|------------------------------|------------------------|   |`true`|`true`|The prompt character can be entered and it causes the current mask position to be reset."},{"content":"This is the default.|   |<ph id=\"ph1\">`true`</ph><ph id=\"ph2\">|</ph><ph id=\"ph3\">`false`</ph>|The prompt character can be entered and it causes the current mask position to be reset.|   |<ph id=\"ph4\">`false`</ph><ph id=\"ph5\">|</ph><ph id=\"ph6\">`true`</ph>|The prompt character is processed as a standard input character.|   |<ph id=\"ph7\">`false`</ph><ph id=\"ph8\">|</ph><ph id=\"ph9\">`false`</ph>|The prompt character is not valid and raises a &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event.|","pos":[1042,1389],"source":" This is the default.|   |`true`|`false`|The prompt character can be entered and it causes the current mask position to be reset.|   |`false`|`true`|The prompt character is processed as a standard input character.|   |`false`|`false`|The prompt character is not valid and raises a <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.|"}]},{"pos":[116118,116518],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that the prompt character is to be processed as a normal input character. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to indicate that the prompt character is to be processed as a normal input character.","pos":[0,323],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that the prompt character is to be processed as a normal input character."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[324,400],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[116985,117068],"content":"Gets or sets a value that determines how a space input character should be handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines how a space input character should be handled.","pos":[0,83]}]},{"pos":[117081,118076],"content":"The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters—spaces and prompt characters—specially. Typically, each input character will be tested against the mask and either accepted or rejected. Setting the ResetOnSpace property to `true` will result in the current mask character position to be cleared and the current position to be advanced to the next editable character.       The type of character input will determine whether the masking engine moves forward to the next character in the mask, or stays at the current position and waits for a matching character. If the input character is a space, and does not match the current non-editable character in the mask, the masking engine will skip ahead to the next character in the mask. If the input character is not a space, and does not match the current non-editable character in the mask, the masking engine will remain at the current mask position, and attempt to match the next input character against it.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox&gt; can treat two categories of characters—spaces and prompt characters—specially.","pos":[0,124],"source":"The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters—spaces and prompt characters—specially."},{"content":"Typically, each input character will be tested against the mask and either accepted or rejected.","pos":[125,221]},{"content":"Setting the ResetOnSpace property to <ph id=\"ph1\">`true`</ph> will result in the current mask character position to be cleared and the current position to be advanced to the next editable character.","pos":[222,402],"source":" Setting the ResetOnSpace property to `true` will result in the current mask character position to be cleared and the current position to be advanced to the next editable character."},{"content":"The type of character input will determine whether the masking engine moves forward to the next character in the mask, or stays at the current position and waits for a matching character.","pos":[409,596]},{"content":"If the input character is a space, and does not match the current non-editable character in the mask, the masking engine will skip ahead to the next character in the mask.","pos":[597,768]},{"content":"If the input character is not a space, and does not match the current non-editable character in the mask, the masking engine will remain at the current mask position, and attempt to match the next input character against it.","pos":[769,993]}]},{"pos":[118198,118568],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the space input character causes the current editable position in the mask to be reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that it is to be processed as a normal input character. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the space input character causes the current editable position in the mask to be reset; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to indicate that it is to be processed as a normal input character.","pos":[0,293],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the space input character causes the current editable position in the mask to be reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that it is to be processed as a normal input character."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[294,370],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[119043,119198],"content":"Scrolls the contents of the control to the current caret position. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Scrolls the contents of the control to the current caret position.","pos":[0,66]},{"content":"This method is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[67,155],"source":" This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[119210,119470],"content":"The ScrollToCaret method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ScrollToCaret method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.","pos":[0,260],"nodes":[{"content":"The ScrollToCaret method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,98],"source":"The ScrollToCaret method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, because the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control does not support multiline configuration, this method is overridden to perform no actions.","pos":[99,260],"source":" However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions."}]}]},{"pos":[120009,120115],"content":"Gets or sets the current selection in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the current selection in the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control."},{"pos":[121037,121168],"content":"The currently selected text as a <xref:System.String>. If no text is currently selected, this property resolves to an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The currently selected text as a <xref:System.String>. If no text is currently selected, this property resolves to an empty string.","pos":[0,131],"nodes":[{"content":"The currently selected text as a &lt;xref:System.String&gt;.","pos":[0,54],"source":"The currently selected text as a <xref:System.String>."},{"content":"If no text is currently selected, this property resolves to an empty string.","pos":[55,131]}]}]},{"pos":[121634,121720],"content":"Gets or sets a value indicating whether the user is allowed to reenter literal values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the user is allowed to reenter literal values.","pos":[0,86]}]},{"pos":[121733,123450],"content":"Input masks commonly contain literals. When the user enters characters into the <xref:System.Windows.Forms.MaskedTextBox> at runtime, the current character position will sometimes fall on a literal. The SkipLiterals property describes how user input for the next character is to be handled, as follows:      -   If this property is `true`, the user can either redundantly enter the same character as the literal at the current position, or can enter the next editable character, thereby jumping the current position to that position.      -   If this property is `false`, the user can only enter the next editable character. If the next position in the mask will not accept the literal character (for example, the user types \"/\" and the next position only accepts digits), the control will raise the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.       As an example, in the \"90/90/0000\" date entry mask, the forward slash characters are literals. Assume that the user has entered two initial digits, \"11\", so the current position in the mask is at the first forward slash (/) literal. If SkipLiterals is `true`, then the user has the following valid choices:      -   The user can enter a \"/\" character. This results in the position being moved to the next character, which in this example is the fourth position, a 9 masking element.      -   The user can enter the next editable character, which in this example is a digit. The digit would be validated and the current position would automatically be moved to the fifth position, which is a 0 masking element.       If SkipLiterals is `false`, then only a valid data input is allowed, which in this example would be a digit.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Input masks commonly contain literals.","pos":[0,38]},{"content":"When the user enters characters into the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; at runtime, the current character position will sometimes fall on a literal.","pos":[39,198],"source":" When the user enters characters into the <xref:System.Windows.Forms.MaskedTextBox> at runtime, the current character position will sometimes fall on a literal."},{"content":"The SkipLiterals property describes how user input for the next character is to be handled, as follows:      -   If this property is <ph id=\"ph1\">`true`</ph>, the user can either redundantly enter the same character as the literal at the current position, or can enter the next editable character, thereby jumping the current position to that position.","pos":[199,533],"source":" The SkipLiterals property describes how user input for the next character is to be handled, as follows:      -   If this property is `true`, the user can either redundantly enter the same character as the literal at the current position, or can enter the next editable character, thereby jumping the current position to that position."},{"content":"-   If this property is <ph id=\"ph1\">`false`</ph>, the user can only enter the next editable character.","pos":[539,624],"source":"      -   If this property is `false`, the user can only enter the next editable character."},{"content":"If the next position in the mask will not accept the literal character (for example, the user types \"/\" and the next position only accepts digits), the control will raise the &lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt; event.","pos":[625,866],"source":" If the next position in the mask will not accept the literal character (for example, the user types \"/\" and the next position only accepts digits), the control will raise the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event."},{"content":"As an example, in the \"90/90/0000\" date entry mask, the forward slash characters are literals.","pos":[873,967]},{"content":"Assume that the user has entered two initial digits, \"11\", so the current position in the mask is at the first forward slash (/) literal.","pos":[968,1105]},{"content":"If SkipLiterals is <ph id=\"ph1\">`true`</ph>, then the user has the following valid choices:      -   The user can enter a \"/\" character.","pos":[1106,1224],"source":" If SkipLiterals is `true`, then the user has the following valid choices:      -   The user can enter a \"/\" character."},{"content":"This results in the position being moved to the next character, which in this example is the fourth position, a 9 masking element.","pos":[1225,1355]},{"content":"-   The user can enter the next editable character, which in this example is a digit.","pos":[1361,1446]},{"content":"The digit would be validated and the current position would automatically be moved to the fifth position, which is a 0 masking element.","pos":[1447,1582]},{"content":"If SkipLiterals is <ph id=\"ph1\">`false`</ph>, then only a valid data input is allowed, which in this example would be a digit.","pos":[1589,1697],"source":"       If SkipLiterals is `false`, then only a valid data input is allowed, which in this example would be a digit."}]},{"pos":[123572,123875],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow literals to be reentered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to prevent the user from overwriting literal characters. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow literals to be reentered; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to prevent the user from overwriting literal characters.","pos":[0,226],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow literals to be reentered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to prevent the user from overwriting literal characters."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[227,303],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[124301,124364],"content":"Gets or sets the text as it is currently displayed to the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text as it is currently displayed to the user.","pos":[0,63]}]},{"pos":[124377,125554],"content":"Text is the default binding property for the <xref:System.Windows.Forms.MaskedTextBox> class.       Strings retrieved using this property are formatted according to the control's formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> and <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>.       You can assign a string with or without literal characters to Text depending on the values of <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>.       Text is the default binding property for <xref:System.Windows.Forms.MaskedTextBox>.       <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.Control.TextChanged> event whenever the formatted text value changes. Different properties may or may not cause this value to change. For example, changing the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property will not raise the <xref:System.Windows.Forms.Control.TextChanged> event, but changing the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property will.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Text is the default binding property for the <xref:System.Windows.Forms.MaskedTextBox> class.       Strings retrieved using this property are formatted according to the control's formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> and <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>.       You can assign a string with or without literal characters to Text depending on the values of <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>.       Text is the default binding property for <xref:System.Windows.Forms.MaskedTextBox>.       <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.Control.TextChanged> event whenever the formatted text value changes. Different properties may or may not cause this value to change. For example, changing the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property will not raise the <xref:System.Windows.Forms.Control.TextChanged> event, but changing the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property will.","pos":[0,1169],"nodes":[{"content":"Text is the default binding property for the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; class.","pos":[0,93],"source":"Text is the default binding property for the <xref:System.Windows.Forms.MaskedTextBox> class."},{"content":"Strings retrieved using this property are formatted according to the control's formatting properties, such as &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; and &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;.","pos":[100,324],"source":"       Strings retrieved using this property are formatted according to the control's formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> and <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>."},{"content":"You can assign a string with or without literal characters to Text depending on the values of &lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;, &lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A&gt;, and &lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;.","pos":[331,606],"source":"       You can assign a string with or without literal characters to Text depending on the values of <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>."},{"content":"Text is the default binding property for &lt;xref:System.Windows.Forms.MaskedTextBox&gt;.","pos":[613,696],"source":"       Text is the default binding property for <xref:System.Windows.Forms.MaskedTextBox>."},{"content":"&lt;xref:System.Windows.Forms.MaskedTextBox&gt; will raise the &lt;xref:System.Windows.Forms.Control.TextChanged&gt; event whenever the formatted text value changes.","pos":[703,856],"source":"       <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.Control.TextChanged> event whenever the formatted text value changes."},{"content":"Different properties may or may not cause this value to change.","pos":[857,920]},{"content":"For example, changing the &lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt; property will not raise the &lt;xref:System.Windows.Forms.Control.TextChanged&gt; event, but changing the &lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt; property will.","pos":[921,1169],"source":" For example, changing the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property will not raise the <xref:System.Windows.Forms.Control.TextChanged> event, but changing the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property will."}]}]},{"pos":[125869,125979],"content":"A <xref:System.String> containing the text currently displayed by the control. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <xref:System.String> containing the text currently displayed by the control. The default is an empty string.","pos":[0,110],"nodes":[{"content":"A &lt;xref:System.String&gt; containing the text currently displayed by the control.","pos":[0,78],"source":"A <xref:System.String> containing the text currently displayed by the control."},{"content":"The default is an empty string.","pos":[79,110]}]}]},{"pos":[126422,126484],"content":"Gets or sets how text is aligned in a masked text box control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets how text is aligned in a masked text box control.","pos":[0,62]}]},{"pos":[126496,126929],"content":"You can use the TextAlign property to align the displayed text within a <xref:System.Windows.Forms.MaskedTextBox> to match the layout of visual elements on your form. For example, if your controls are all located on the right side of the form, you can set the TextAlign property to <xref:System.Windows.Forms.HorizontalAlignment>, and the text will be aligned with the right side of the control instead of the default left alignment.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can use the TextAlign property to align the displayed text within a <xref:System.Windows.Forms.MaskedTextBox> to match the layout of visual elements on your form. For example, if your controls are all located on the right side of the form, you can set the TextAlign property to <xref:System.Windows.Forms.HorizontalAlignment>, and the text will be aligned with the right side of the control instead of the default left alignment.","pos":[0,433],"nodes":[{"content":"You can use the TextAlign property to align the displayed text within a &lt;xref:System.Windows.Forms.MaskedTextBox&gt; to match the layout of visual elements on your form.","pos":[0,166],"source":"You can use the TextAlign property to align the displayed text within a <xref:System.Windows.Forms.MaskedTextBox> to match the layout of visual elements on your form."},{"content":"For example, if your controls are all located on the right side of the form, you can set the TextAlign property to &lt;xref:System.Windows.Forms.HorizontalAlignment&gt;, and the text will be aligned with the right side of the control instead of the default left alignment.","pos":[167,433],"source":" For example, if your controls are all located on the right side of the form, you can set the TextAlign property to <xref:System.Windows.Forms.HorizontalAlignment>, and the text will be aligned with the right side of the control instead of the default left alignment."}]}]},{"pos":[127109,127338],"content":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> enumeration values that specifies how text is aligned relative to the control. The default is <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values that specifies how text is aligned relative to the control.","pos":[0,151],"source":"One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> enumeration values that specifies how text is aligned relative to the control."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[152,229],"source":" The default is <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref>."}]},{"pos":[127557,127670],"content":"The value assigned to this property is not of type <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.HorizontalAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value assigned to this property is not of type <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref>."},{"pos":[128075,128117],"content":"Occurs when the text alignment is changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the text alignment is changed.","pos":[0,42]}]},{"pos":[128129,128251],"content":"The TextAlignChanged event is raised after the <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> property is changed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TextAlignChanged event is raised after the &lt;xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A&gt; property is changed.","pos":[0,122],"source":"The TextAlignChanged event is raised after the <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> property is changed."}]},{"pos":[129409,129421],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[129816,129854],"content":"Gets the length of the displayed text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the length of the displayed text.","pos":[0,38]}]},{"pos":[129974,130283],"content":"An Int32 representing the number of characters in the &lt;xref:System.Windows.Forms.MaskedTextBox.Text<bpt id=\"p1\">*</bpt>&gt; property. TextLength respects properties such as &lt;xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave<ept id=\"p1\">*</ept>&gt;, which means that the return results may be different depending on whether the control has focus.","needQuote":true,"needEscape":true,"source":"An Int32 representing the number of characters in the <xref:System.Windows.Forms.MaskedTextBox.Text*> property. TextLength respects properties such as <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave*>, which means that the return results may be different depending on whether the control has focus."},{"pos":[130757,130870],"content":"Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.","pos":[0,113]}]},{"pos":[130883,131511],"content":"The TextMaskFormat property determines how the literal and prompt characters in the mask are processed when the generating the formatted string. More specifically, it determines whether literal characters, prompt characters, or both are included in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property. When prompt characters are excluded, they are transformed into spaces in the formatted string.      > [!NOTE] >  The <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TextMaskFormat property determines how the literal and prompt characters in the mask are processed when the generating the formatted string.","pos":[0,144]},{"content":"More specifically, it determines whether literal characters, prompt characters, or both are included in the &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property.","pos":[145,312],"source":" More specifically, it determines whether literal characters, prompt characters, or both are included in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property."},{"content":"When prompt characters are excluded, they are transformed into spaces in the formatted string.","pos":[313,407]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A&gt; property serves a similar purpose with respect to how the &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property is interpreted.","pos":[413,625],"source":"      > [!NOTE] >  The <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted."}]},{"pos":[131679,131819],"content":"One of the <xref href=\"System.Windows.Forms.MaskFormat\"></xref> values. The default is <xref href=\"System.Windows.Forms.MaskFormat\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,71],"source":"One of the <xref href=\"System.Windows.Forms.MaskFormat\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,140],"source":" The default is <xref href=\"System.Windows.Forms.MaskFormat\"></xref>."}]},{"pos":[132043,132140],"content":"Property set with a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that is not valid.","needQuote":true,"needEscape":true,"source":"Property set with a <xref href=\"System.Windows.Forms.MaskFormat\"></xref> value that is not valid."},{"pos":[132512,132646],"content":"Returns a string that represents the current masked text box. This method overrides <xref:System.Windows.Forms.TextBoxBase.ToString*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that represents the current masked text box. This method overrides <xref:System.Windows.Forms.TextBoxBase.ToString*>.","pos":[0,134],"nodes":[{"content":"Returns a string that represents the current masked text box.","pos":[0,61]},{"content":"This method overrides &lt;xref:System.Windows.Forms.TextBoxBase.ToString*&gt;.","pos":[62,134],"source":" This method overrides <xref:System.Windows.Forms.TextBoxBase.ToString*>."}]}]},{"pos":[132659,133462],"content":"This version of the ToString method calls the base class implementation of this method, <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName>, then appends the input string after processing by the mask. This method honors properties that alter the appearance of the formatted string, with the following exceptions:      -   The returned string always includes prompt and literal characters, regardless of the values of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.      -   Password characters are ignored, so that the actual user-typed characters are returned. In other words, the values of the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are ignored.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This version of the ToString method calls the base class implementation of this method, <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName>, then appends the input string after processing by the mask. This method honors properties that alter the appearance of the formatted string, with the following exceptions:      -   The returned string always includes prompt and literal characters, regardless of the values of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.      -   Password characters are ignored, so that the actual user-typed characters are returned. In other words, the values of the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are ignored.","pos":[0,799],"nodes":[{"content":"This version of the ToString method calls the base class implementation of this method, &lt;xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName&gt;, then appends the input string after processing by the mask.","pos":[0,225],"source":"This version of the ToString method calls the base class implementation of this method, <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName>, then appends the input string after processing by the mask."},{"content":"This method honors properties that alter the appearance of the formatted string, with the following exceptions:      -   The returned string always includes prompt and literal characters, regardless of the values of the &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt; property.","pos":[226,515],"source":" This method honors properties that alter the appearance of the formatted string, with the following exceptions:      -   The returned string always includes prompt and literal characters, regardless of the values of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property."},{"content":"-   Password characters are ignored, so that the actual user-typed characters are returned.","pos":[521,612]},{"content":"In other words, the values of the &lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt; and &lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt; properties are ignored.","pos":[613,799],"source":" In other words, the values of the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are ignored."}]}]},{"pos":[133599,133823],"content":"A <xref:System.String> that contains information about the current <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>. The string includes the type, a simplified view of the input string, and the formatted input string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains information about the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,123],"source":"A <xref:System.String> that contains information about the current <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."},{"content":"The string includes the type, a simplified view of the input string, and the formatted input string.","pos":[124,224]}]},{"pos":[134337,134521],"content":"Occurs when <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has finished parsing the current value using the &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType*&gt; property.","needQuote":true,"needEscape":true,"source":"Occurs when <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> has finished parsing the current value using the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType*> property."},{"pos":[134534,136820],"content":"The <xref:System.Windows.Forms.MaskedTextBox> control will optionally validate user input against the type defined by its <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName> property. When this property is not `null`, the following series of events occurs:      1.  The validation sequence begins when one of the following occurs:          -   <xref:System.Windows.Forms.MaskedTextBox> control looses focus.          -   The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is retrieved.          -   The <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> method is called.      2.  Any of these events result in a call to the `Parse` method of the type specified with the <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> property. `Parse` is responsible for the conversion of the formatted input string to the target type. A successful conversion equates to a successful validation.      3.  After `Parse` returns, the TypeValidationCompleted event is raised. The event handler for this event is most commonly implemented to perform type or mask validation processing. It receives a <xref:System.Windows.Forms.TypeValidationEventArgs> parameter containing information about the conversion; for example, the <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> member indicates whether the conversion was successful.      4.  After the event handler for the TypeValidationCompleted event returns, the standard validation event, <xref:System.Windows.Forms.Control.Validating>, is raised. A handler can be implemented to perform standard validation, perhaps including canceling the event.      5.  If the event is not canceled in step 3, the standard control validation event <xref:System.Windows.Forms.Control.Validated> is raised.       If the <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> property is set to `true` in the TypeValidationCompleted event handler, the event will be canceled and the <xref:System.Windows.Forms.MaskedTextBox> control retains focus, unless the subsequent <xref:System.Windows.Forms.Control.Validating> event sets its version of the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName> property back to `false`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control will optionally validate user input against the type defined by its &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName&gt; property.","pos":[0,216],"source":"The <xref:System.Windows.Forms.MaskedTextBox> control will optionally validate user input against the type defined by its <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName> property."},{"content":"When this property is not <ph id=\"ph1\">`null`</ph>, the following series of events occurs:      1.","pos":[217,297],"source":" When this property is not `null`, the following series of events occurs:      1."},{"content":"The validation sequence begins when one of the following occurs:          -   &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control looses focus.","pos":[299,440],"source":"  The validation sequence begins when one of the following occurs:          -   <xref:System.Windows.Forms.MaskedTextBox> control looses focus."},{"content":"-   The &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property is retrieved.","pos":[450,530],"source":"          -   The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is retrieved."},{"content":"-   The &lt;xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A&gt; method is called.","pos":[540,623],"source":"          -   The <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> method is called."},{"content":"2.","pos":[629,631]},{"content":"Any of these events result in a call to the <ph id=\"ph1\">`Parse`</ph> method of the type specified with the &lt;xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A&gt; property.","pos":[633,802],"source":"  Any of these events result in a call to the `Parse` method of the type specified with the <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> property."},{"content":"<ph id=\"ph1\">`Parse`</ph> is responsible for the conversion of the formatted input string to the target type.","pos":[803,894],"source":"`Parse` is responsible for the conversion of the formatted input string to the target type."},{"content":"A successful conversion equates to a successful validation.","pos":[895,954]},{"content":"3.","pos":[960,962]},{"content":"After <ph id=\"ph1\">`Parse`</ph> returns, the TypeValidationCompleted event is raised.","pos":[964,1031],"source":"  After `Parse` returns, the TypeValidationCompleted event is raised."},{"content":"The event handler for this event is most commonly implemented to perform type or mask validation processing.","pos":[1032,1140]},{"content":"It receives a &lt;xref:System.Windows.Forms.TypeValidationEventArgs&gt; parameter containing information about the conversion; for example, the &lt;xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A&gt; member indicates whether the conversion was successful.","pos":[1141,1402],"source":" It receives a <xref:System.Windows.Forms.TypeValidationEventArgs> parameter containing information about the conversion; for example, the <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> member indicates whether the conversion was successful."},{"content":"4.","pos":[1408,1410]},{"content":"After the event handler for the TypeValidationCompleted event returns, the standard validation event, &lt;xref:System.Windows.Forms.Control.Validating&gt;, is raised.","pos":[1412,1572],"source":"  After the event handler for the TypeValidationCompleted event returns, the standard validation event, <xref:System.Windows.Forms.Control.Validating>, is raised."},{"content":"A handler can be implemented to perform standard validation, perhaps including canceling the event.","pos":[1573,1672]},{"content":"5.","pos":[1678,1680]},{"content":"If the event is not canceled in step 3, the standard control validation event &lt;xref:System.Windows.Forms.Control.Validated&gt; is raised.","pos":[1682,1816],"source":"  If the event is not canceled in step 3, the standard control validation event <xref:System.Windows.Forms.Control.Validated> is raised."},{"content":"If the &lt;xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> in the TypeValidationCompleted event handler, the event will be canceled and the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control retains focus, unless the subsequent &lt;xref:System.Windows.Forms.Control.Validating&gt; event sets its version of the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName&gt; property back to <ph id=\"ph2\">`false`</ph>.","pos":[1823,2268],"source":"       If the <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> property is set to `true` in the TypeValidationCompleted event handler, the event will be canceled and the <xref:System.Windows.Forms.MaskedTextBox> control retains focus, unless the subsequent <xref:System.Windows.Forms.Control.Validating> event sets its version of the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName> property back to `false`."}]},{"pos":[137771,137783],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[138152,138288],"content":"Undoes the last edit operation in the text box. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Undoes the last edit operation in the text box.","pos":[0,47]},{"content":"This method is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[48,136],"source":" This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[138300,138477],"content":"The Undo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Undo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.","pos":[0,177],"nodes":[{"content":"The Undo method is inherited from the base &lt;xref:System.Windows.Forms.TextBoxBase&gt; class.","pos":[0,89],"source":"The Undo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class."},{"content":"However, &lt;xref:System.Windows.Forms.MaskedTextBox&gt; does not support undo functionality.","pos":[90,177],"source":" However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality."}]}]},{"pos":[139043,139147],"content":"Gets or sets a value indicating whether the operating system-supplied password character should be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the operating system-supplied password character should be used.","pos":[0,104]}]},{"pos":[139160,139904],"content":"The UseSystemPasswordChar property determines whether user-supplied input should be displayed in the <xref:System.Windows.Forms.MaskedTextBox> as multiple occurrences of a password character defined by the operating system. UseSystemPasswordChar functions similarly to the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property, but instead of using a programmer-supplied character for the prompt, UseSystemPasswordChar uses a prompt defined by the operating system. This property has precedence over <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>.      > [!IMPORTANT] >  As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The UseSystemPasswordChar property determines whether user-supplied input should be displayed in the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; as multiple occurrences of a password character defined by the operating system.","pos":[0,223],"source":"The UseSystemPasswordChar property determines whether user-supplied input should be displayed in the <xref:System.Windows.Forms.MaskedTextBox> as multiple occurrences of a password character defined by the operating system."},{"content":"UseSystemPasswordChar functions similarly to the &lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt; property, but instead of using a programmer-supplied character for the prompt, UseSystemPasswordChar uses a prompt defined by the operating system.","pos":[224,478],"source":" UseSystemPasswordChar functions similarly to the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property, but instead of using a programmer-supplied character for the prompt, UseSystemPasswordChar uses a prompt defined by the operating system."},{"content":"This property has precedence over &lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;.","pos":[479,571],"source":" This property has precedence over <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  As a security consideration, the &lt;xref:System.Windows.Forms.MaskedTextBox&gt; control disables cut and copy operations on password-protected strings.","pos":[577,741],"source":"      > [!IMPORTANT] >  As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings."}]},{"pos":[140035,140312],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the system password should be used as the prompt character; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the system password should be used as the prompt character; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,198],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the system password should be used as the prompt character; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[199,277],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[140507,140677],"content":"The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>. The two are required to be different.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>. The two are required to be different.","pos":[0,170],"nodes":[{"content":"The password character specified is the same as the current prompt character, &lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar*&gt;.","pos":[0,132],"source":"The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>."},{"content":"The two are required to be different.","pos":[133,170]}]}]},{"pos":[141069,141138],"content":"Converts the user input string to an instance of the validating type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the user input string to an instance of the validating type.","pos":[0,69]}]},{"pos":[141151,141773],"content":"The ValidateText method attempts to convert the formatted string contained in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property to an instance of the type that is specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property. Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.       ValidateText raises the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event after the conversion is attempted, regardless of its success.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ValidateText method attempts to convert the formatted string contained in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property to an instance of the type that is specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property. Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.       ValidateText raises the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event after the conversion is attempted, regardless of its success.","pos":[0,620],"nodes":[{"content":"The ValidateText method attempts to convert the formatted string contained in the &lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt; property to an instance of the type that is specified by the &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt; property.","pos":[0,262],"source":"The ValidateText method attempts to convert the formatted string contained in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property to an instance of the type that is specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property."},{"content":"Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the &lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt; property.","pos":[263,456],"source":" Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property."},{"content":"ValidateText raises the &lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt; event after the conversion is attempted, regardless of its success.","pos":[463,620],"source":"       ValidateText raises the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event after the conversion is attempted, regardless of its success."}]}]},{"pos":[141905,142144],"content":"If successful, an &lt;xref:System.Object&gt; of the type specified by the &lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType*&gt; property; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate conversion failure.","needQuote":true,"needEscape":true,"source":"If successful, an <xref:System.Object> of the type specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType*> property; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to indicate conversion failure."},{"pos":[142298,142367],"content":"A critical exception occurred during the parsing of the input string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A critical exception occurred during the parsing of the input string.","pos":[0,69]}]},{"pos":[142765,142834],"content":"Gets or sets the data type used to verify the data input by the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data type used to verify the data input by the user.","pos":[0,69]}]},{"pos":[142847,144380],"content":"Masks do not in themselves guarantee that a user's input will represent a valid value for a given type. The following C# code shows a mask:      ```   maskedTextBox1.Mask = \"99/99/9999\";   ```       The following [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] code shows a mask:       `MaskedTextBox1.Mask = \"99/99/9999\"`       This mask can demand that the user enter eight digits, but cannot verify that the user enters month, date, and year values in the correct range; \"12/20/2003\" and \"70/90/0000\" are equally valid as far as the mask is concerned.       You can use ValidatingType to verify whether the data entered by the user falls within the correct range—in the previously mentioned case, by assigning it an instance of the <xref:System.DateTime> type. The current text in the control will be validated either when the user leaves the control. You can determine whether or not the data fails validation by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event. <xref:System.Windows.Forms.MaskedTextBox> will only perform the check against ValidatingType if <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> is `true`.       If you want to use your own custom data types with ValidatingType, you must implement a static `Parse` method that takes a string as a parameter. This method must be implemented with one or both of the following signatures:       `public static Object Parse(string)`       `public static Object Parse(string, IFormatProvider)`","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Masks do not in themselves guarantee that a user's input will represent a valid value for a given type.","pos":[0,103]},{"content":"The following C# code shows a mask:      <ph id=\"ph1\">```   maskedTextBox1.Mask = \"99/99/9999\";   ```</ph>       The following <ph id=\"ph2\">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> code shows a mask:       <ph id=\"ph3\">`MaskedTextBox1.Mask = \"99/99/9999\"`</ph>       This mask can demand that the user enter eight digits, but cannot verify that the user enters month, date, and year values in the correct range; \"12/20/2003\" and \"70/90/0000\" are equally valid as far as the mask is concerned.","pos":[104,554],"source":" The following C# code shows a mask:      ```   maskedTextBox1.Mask = \"99/99/9999\";   ```       The following [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] code shows a mask:       `MaskedTextBox1.Mask = \"99/99/9999\"`       This mask can demand that the user enter eight digits, but cannot verify that the user enters month, date, and year values in the correct range; \"12/20/2003\" and \"70/90/0000\" are equally valid as far as the mask is concerned."},{"content":"You can use ValidatingType to verify whether the data entered by the user falls within the correct range—in the previously mentioned case, by assigning it an instance of the &lt;xref:System.DateTime&gt; type.","pos":[561,763],"source":"       You can use ValidatingType to verify whether the data entered by the user falls within the correct range—in the previously mentioned case, by assigning it an instance of the <xref:System.DateTime> type."},{"content":"The current text in the control will be validated either when the user leaves the control.","pos":[764,854]},{"content":"You can determine whether or not the data fails validation by monitoring for the &lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt; event.","pos":[855,1008],"source":" You can determine whether or not the data fails validation by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event."},{"content":"&lt;xref:System.Windows.Forms.MaskedTextBox&gt; will only perform the check against ValidatingType if &lt;xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A&gt; is <ph id=\"ph1\">`true`</ph>.","pos":[1009,1174],"source":" <xref:System.Windows.Forms.MaskedTextBox> will only perform the check against ValidatingType if <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> is `true`."},{"content":"If you want to use your own custom data types with ValidatingType, you must implement a static <ph id=\"ph1\">`Parse`</ph> method that takes a string as a parameter.","pos":[1181,1326],"source":"       If you want to use your own custom data types with ValidatingType, you must implement a static `Parse` method that takes a string as a parameter."},{"content":"This method must be implemented with one or both of the following signatures:       <ph id=\"ph1\">`public static Object Parse(string)`</ph>       <ph id=\"ph2\">`public static Object Parse(string, IFormatProvider)`</ph>","pos":[1327,1507],"source":" This method must be implemented with one or both of the following signatures:       `public static Object Parse(string)`       `public static Object Parse(string, IFormatProvider)`"}]},{"pos":[145312,145456],"content":"A <xref:System.Type> representing the data type used in validation. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; representing the data type used in validation.","pos":[0,67],"source":"A <xref:System.Type> representing the data type used in validation."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,144],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[145986,146013],"content":"Processes Windows messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Processes Windows messages.","pos":[0,27]}]},{"pos":[146195,146268],"content":"The Windows <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to process.","needQuote":true,"needEscape":true,"source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."},{"pos":[146709,146944],"content":"Gets or sets a value indicating whether a multiline text box control automatically wraps words to the beginning of the next line when necessary. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.","pos":[0,144]},{"content":"This property is not supported by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[145,235],"source":" This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>."}]},{"pos":[146956,147081],"content":"Because <xref:System.Windows.Forms.MaskedTextBox> does not support multiple lines of input, the WordWrap property is ignored.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because &lt;xref:System.Windows.Forms.MaskedTextBox&gt; does not support multiple lines of input, the WordWrap property is ignored.","pos":[0,125],"source":"Because <xref:System.Windows.Forms.MaskedTextBox> does not support multiple lines of input, the WordWrap property is ignored."}]},{"pos":[147198,147298],"content":"The WordWrap property always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The WordWrap property always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.MaskedTextBox\n  id: MaskedTextBox\n  children:\n  - System.Windows.Forms.MaskedTextBox.#ctor\n  - System.Windows.Forms.MaskedTextBox.#ctor(System.ComponentModel.MaskedTextProvider)\n  - System.Windows.Forms.MaskedTextBox.#ctor(System.String)\n  - System.Windows.Forms.MaskedTextBox.AcceptsTab\n  - System.Windows.Forms.MaskedTextBox.AcceptsTabChanged\n  - System.Windows.Forms.MaskedTextBox.AllowPromptAsInput\n  - System.Windows.Forms.MaskedTextBox.AsciiOnly\n  - System.Windows.Forms.MaskedTextBox.BeepOnError\n  - System.Windows.Forms.MaskedTextBox.CanUndo\n  - System.Windows.Forms.MaskedTextBox.ClearUndo\n  - System.Windows.Forms.MaskedTextBox.CreateHandle\n  - System.Windows.Forms.MaskedTextBox.CreateParams\n  - System.Windows.Forms.MaskedTextBox.Culture\n  - System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat\n  - System.Windows.Forms.MaskedTextBox.FormatProvider\n  - System.Windows.Forms.MaskedTextBox.GetCharFromPosition(System.Drawing.Point)\n  - System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)\n  - System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)\n  - System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine\n  - System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)\n  - System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)\n  - System.Windows.Forms.MaskedTextBox.HidePromptOnLeave\n  - System.Windows.Forms.MaskedTextBox.InsertKeyMode\n  - System.Windows.Forms.MaskedTextBox.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.MaskedTextBox.IsOverwriteMode\n  - System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\n  - System.Windows.Forms.MaskedTextBox.Lines\n  - System.Windows.Forms.MaskedTextBox.Mask\n  - System.Windows.Forms.MaskedTextBox.MaskChanged\n  - System.Windows.Forms.MaskedTextBox.MaskCompleted\n  - System.Windows.Forms.MaskedTextBox.MaskedTextProvider\n  - System.Windows.Forms.MaskedTextBox.MaskFull\n  - System.Windows.Forms.MaskedTextBox.MaskInputRejected\n  - System.Windows.Forms.MaskedTextBox.MaxLength\n  - System.Windows.Forms.MaskedTextBox.Multiline\n  - System.Windows.Forms.MaskedTextBox.MultilineChanged\n  - System.Windows.Forms.MaskedTextBox.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.MaskedTextBox.PasswordChar\n  - System.Windows.Forms.MaskedTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.MaskedTextBox.PromptChar\n  - System.Windows.Forms.MaskedTextBox.ReadOnly\n  - System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure\n  - System.Windows.Forms.MaskedTextBox.ResetOnPrompt\n  - System.Windows.Forms.MaskedTextBox.ResetOnSpace\n  - System.Windows.Forms.MaskedTextBox.ScrollToCaret\n  - System.Windows.Forms.MaskedTextBox.SelectedText\n  - System.Windows.Forms.MaskedTextBox.SkipLiterals\n  - System.Windows.Forms.MaskedTextBox.Text\n  - System.Windows.Forms.MaskedTextBox.TextAlign\n  - System.Windows.Forms.MaskedTextBox.TextAlignChanged\n  - System.Windows.Forms.MaskedTextBox.TextLength\n  - System.Windows.Forms.MaskedTextBox.TextMaskFormat\n  - System.Windows.Forms.MaskedTextBox.ToString\n  - System.Windows.Forms.MaskedTextBox.TypeValidationCompleted\n  - System.Windows.Forms.MaskedTextBox.Undo\n  - System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar\n  - System.Windows.Forms.MaskedTextBox.ValidateText\n  - System.Windows.Forms.MaskedTextBox.ValidatingType\n  - System.Windows.Forms.MaskedTextBox.WndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.MaskedTextBox.WordWrap\n  langs:\n  - csharp\n  name: MaskedTextBox\n  nameWithType: MaskedTextBox\n  fullName: System.Windows.Forms.MaskedTextBox\n  type: Class\n  summary: Uses a mask to distinguish between proper and improper user input.\n  remarks: \"The MaskedTextBox class is an enhanced <xref:System.Windows.Forms.TextBox> control that supports a declarative syntax for accepting or rejecting user input. Using the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, you can specify the following input without writing any custom validation logic in your application:  \\n  \\n-   Required input characters.  \\n  \\n-   Optional input characters.  \\n  \\n-   The type of input expected at a given position in the mask; for example, a digit, or an alphabetic or alphanumeric character.  \\n  \\n-   Mask literals, or characters that should appear directly in the MaskedTextBox; for example, the hyphens (-) in a phone number, or the currency symbol in a price.  \\n  \\n-   Special processing for input characters; for example, to convert alphabetic characters to uppercase.  \\n  \\n When a MaskedTextBox control is displayed at run time, it represents the mask as a series of prompt characters and optional literal characters. Each editable mask position, representing a required or optional input, is shown with a single prompt character. For example, the number sign (#) is often used as a placeholder for a numeric character input. You can use the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property to specify a custom prompt character. The <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property determines if the user sees the prompt characters when the control loses input focus.  \\n  \\n As the user types input into the masked text box, valid input characters replace their respective prompt characters in a sequential fashion. If the user types an invalid input character, no replacement occurs, but instead a beep is issued if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`, and the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised. You can provide your own custom error logic by handing this event.  \\n  \\n When the current insertion point is at a literal character, the user has a number of options:  \\n  \\n-   If a character other than the prompt character is typed, the literal will automatically be skipped and the input character will be applied to the next editable position, represented by the next prompt character.  \\n  \\n-   If the prompt character is typed and the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property is true, the input will overtype the prompt character and insertion point will be moved to the next position in the mask.  \\n  \\n-   As is always the case, the arrow keys can be used to navigate to a previous or subsequent position.  \\n  \\n You can use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property to verify whether or not the user has entered all of the required input. The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property will always retrieve the user's input formatted according to the mask and the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.  \\n  \\n The MaskedTextBox control actually defers all mask processing to the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class specified by the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property. This standard provider supports all Unicode characters except for surrogates and vertically combined characters; however, the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property can be used to restrict input to the characters sets a-z, A-Z, and 0-9.  \\n  \\n Masks do not necessarily guarantee that a user's input will represent a valid value for a given type; for example, -9 could be entered for an age in years. You can verify that a user's input represents a valid value by assigning an instance of that value's type to the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property. You can detect whether the user removes focus from MaskedTextBox when it contains an invalid value by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event. If type validation succeeds, the object representing the value will be available through the <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> property of the <xref:System.Windows.Forms.TypeValidationEventArgs> parameter.  \\n  \\n As with the <xref:System.Windows.Forms.TextBox> control, several common keyboard shortcuts do not work with MaskedTextBox. In particular, CTRL-R (right justify text), CTRL-L (left justify text), and CTRL-L (center text) have no effect.  \\n  \\n## Compatibility with Visual Basic 6.0  \\n MaskedTextBox was designed to retain most of the functionality of the Masked Edit control in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0. The following table lists common properties on the Masked Edit control and gives their equivalents on MaskedTextBox.  \\n  \\n|Masked Edit control ([!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0) property|Equivalent MaskedTextBox ([!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]) property|  \\n|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|  \\n|`AllowPrompt` property|<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>|  \\n|`AutoTab` property|None|  \\n|`ClipMode` property|<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>|  \\n|`ClipText` property|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat>)|  \\n|`Format` property|None|  \\n|`FormattedText` property|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (when <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> is set to <xref:System.Windows.Forms.MaskFormat>)|  \\n|`Mask` property|<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>|  \\n|`PromptChar` property|<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A>|  \\n|`PromptInclude` property|<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>|  \\n|`ValidationError` event|<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected>|  \\n  \\n> [!CAUTION]\\n>  The MaskedTextBox control does not support multiline configuration or undo functionality. However, while the members associated with these features have been retained for compatibility with the <xref:System.Windows.Forms.TextBoxBase> base class, their implementations perform no actions.\"\n  example:\n  - \"The following code example initializes the MaskedTextBox to accept a date, and uses both the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> and <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> events to alert the user to invalid input.  \\n  \\n [!code-cs[MaskInputRejectedSample#1](~/add/codesnippet/csharp/t-system.windows.forms.m_1_1.cs)]\\n [!code-vb[MaskInputRejectedSample#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultBindingProperty(\"Text\")]\n\n      [System.ComponentModel.DefaultEvent(\"MaskInputRejected\")]\n\n      [System.ComponentModel.DefaultProperty(\"Mask\")]\n\n      [System.ComponentModel.Designer(\"System.Windows.Forms.Design.MaskedTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MaskedTextBox : System.Windows.Forms.TextBoxBase\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Control\n  - System.Windows.Forms.TextBoxBase\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.AllowDrop\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContext\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSize\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateAccessibilityInstance\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.CreateControlsInstance\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultImeMode\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DisplayRectangle\n  - System.Windows.Forms.Control.Dispose(System.Boolean)\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleClick\n  - System.Windows.Forms.Control.DragDrop\n  - System.Windows.Forms.Control.DragEnter\n  - System.Windows.Forms.Control.DragLeave\n  - System.Windows.Forms.Control.DragOver\n  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.Font\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GiveFeedback\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeMode\n  - System.Windows.Forms.Control.ImeModeChanged\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.Location\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.Margin\n  - System.Windows.Forms.Control.MarginChanged\n  - System.Windows.Forms.Control.MaximumSize\n  - System.Windows.Forms.Control.MinimumSize\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseDoubleClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCreateControl\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnResize(System.EventArgs)\n  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.QueryContinueDrag\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.Size\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.TabIndex\n  - System.Windows.Forms.Control.TabIndexChanged\n  - System.Windows.Forms.Control.TabStop\n  - System.Windows.Forms.Control.TabStopChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  - System.Windows.Forms.TextBoxBase.AppendText(System.String)\n  - System.Windows.Forms.TextBoxBase.AutoSize\n  - System.Windows.Forms.TextBoxBase.AutoSizeChanged\n  - System.Windows.Forms.TextBoxBase.BackColor\n  - System.Windows.Forms.TextBoxBase.BackgroundImage\n  - System.Windows.Forms.TextBoxBase.BackgroundImageChanged\n  - System.Windows.Forms.TextBoxBase.BackgroundImageLayout\n  - System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged\n  - System.Windows.Forms.TextBoxBase.BorderStyle\n  - System.Windows.Forms.TextBoxBase.BorderStyleChanged\n  - System.Windows.Forms.TextBoxBase.CanEnableIme\n  - System.Windows.Forms.TextBoxBase.Clear\n  - System.Windows.Forms.TextBoxBase.Click\n  - System.Windows.Forms.TextBoxBase.Copy\n  - System.Windows.Forms.TextBoxBase.Cut\n  - System.Windows.Forms.TextBoxBase.DefaultCursor\n  - System.Windows.Forms.TextBoxBase.DefaultSize\n  - System.Windows.Forms.TextBoxBase.DeselectAll\n  - System.Windows.Forms.TextBoxBase.DoubleBuffered\n  - System.Windows.Forms.TextBoxBase.ForeColor\n  - System.Windows.Forms.TextBoxBase.HideSelection\n  - System.Windows.Forms.TextBoxBase.HideSelectionChanged\n  - System.Windows.Forms.TextBoxBase.ImeModeBase\n  - System.Windows.Forms.TextBoxBase.Modified\n  - System.Windows.Forms.TextBoxBase.ModifiedChanged\n  - System.Windows.Forms.TextBoxBase.MouseClick\n  - System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.Padding\n  - System.Windows.Forms.TextBoxBase.PaddingChanged\n  - System.Windows.Forms.TextBoxBase.Paint\n  - System.Windows.Forms.TextBoxBase.Paste\n  - System.Windows.Forms.TextBoxBase.PreferredHeight\n  - System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.TextBoxBase.ReadOnlyChanged\n  - System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)\n  - System.Windows.Forms.TextBoxBase.SelectAll\n  - System.Windows.Forms.TextBoxBase.SelectionLength\n  - System.Windows.Forms.TextBoxBase.SelectionStart\n  - System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.TextBoxBase.ShortcutsEnabled\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskedTextBox()\n  nameWithType: MaskedTextBox.MaskedTextBox()\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextBox()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> class using defaults.\n  remarks: The default MaskedTextBox constructor sets the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property to a null mask, represented by the string \"<>\". A null mask will accept any combination of characters as input.\n  syntax:\n    content: public MaskedTextBox ();\n    parameters: []\n  overload: System.Windows.Forms.MaskedTextBox.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.#ctor(System.ComponentModel.MaskedTextProvider)\n  id: '#ctor(System.ComponentModel.MaskedTextProvider)'\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskedTextBox(MaskedTextProvider)\n  nameWithType: MaskedTextBox.MaskedTextBox(MaskedTextProvider)\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextBox(MaskedTextProvider)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> class using the specified custom mask language provider.\n  remarks: \"The `maskedTextProvider` parameter defines the masking language used by <xref:System.Windows.Forms.MaskedTextBox>. It is responsible for parsing the mask and determining whether user input conforms to the current mask position. You can derive a new class from <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> to define your own custom masking language, and use the MaskedTextBox constructor to replace the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName>.  \\n  \\n If you want to use the default masking language and supply your own input mask, you do not need to use this constructor. Instead, you can either use the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> constructor, or use the default constructor then set the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.\"\n  syntax:\n    content: public MaskedTextBox (System.ComponentModel.MaskedTextProvider maskedTextProvider);\n    parameters:\n    - id: maskedTextProvider\n      type: System.ComponentModel.MaskedTextProvider\n      description: A custom mask language provider, derived from the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class.\n  overload: System.Windows.Forms.MaskedTextBox.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>maskedTextProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskedTextBox(String)\n  nameWithType: MaskedTextBox.MaskedTextBox(String)\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextBox(String)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> class using the specified input mask.\n  remarks: \"The MaskedTextBox constructor uses the standard <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> with the input `mask` to parse user input into the <xref:System.Windows.Forms.MaskedTextBox>.  \\n  \\n If you assign a new mask to the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, it will override the value set by this constructor.\"\n  syntax:\n    content: public MaskedTextBox (string mask);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref:System.String> representing the input mask. The initial value of the <xref:System.Windows.Forms.MaskedTextBox.Mask*> property.\n  overload: System.Windows.Forms.MaskedTextBox.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>mask</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.AcceptsTab\n  id: AcceptsTab\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: AcceptsTab\n  nameWithType: MaskedTextBox.AcceptsTab\n  fullName: System.Windows.Forms.MaskedTextBox.AcceptsTab\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value determining how TAB keys are handled for multiline configurations. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The AcceptsTab property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.\n  syntax:\n    content: public bool AcceptsTab { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Windows.Forms.MaskedTextBox.AcceptsTab*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.AcceptsTabChanged\n  id: AcceptsTabChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: AcceptsTabChanged\n  nameWithType: MaskedTextBox.AcceptsTabChanged\n  fullName: System.Windows.Forms.MaskedTextBox.AcceptsTabChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab*> property has changed. This event is not raised by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The AcceptsTabChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not supported.\n  syntax:\n    content: public event EventHandler AcceptsTabChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.AllowPromptAsInput\n  id: AllowPromptAsInput\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: AllowPromptAsInput\n  nameWithType: MaskedTextBox.AllowPromptAsInput\n  fullName: System.Windows.Forms.MaskedTextBox.AllowPromptAsInput\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether <xref:System.Windows.Forms.MaskedTextBox.PromptChar*> can be entered as valid data by the user.\n  remarks: \"Even when AllowPromptAsInput is `true`, the prompt character must be valid for the current location in the mask in order to be accepted. For example, if <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> is \\\"*\\\", and the current location in the mask demands the user enter a digit, entering an asterisk (\\\\*) will fail and cause the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event to occur.  \\n  \\n The <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> property takes precedence over AllowPromptAsInput.\"\n  syntax:\n    content: public bool AllowPromptAsInput { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user can enter the prompt character into the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.AllowPromptAsInput*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.AsciiOnly\n  id: AsciiOnly\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: AsciiOnly\n  nameWithType: MaskedTextBox.AsciiOnly\n  fullName: System.Windows.Forms.MaskedTextBox.AsciiOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control accepts characters outside of the ASCII character set.\n  remarks: If `true`, AsciiOnly restricts user input to the characters a-z and A-Z. ASCII control characters are not allowed.\n  syntax:\n    content: public bool AsciiOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if only ASCII is accepted; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control can accept any arbitrary Unicode character. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.AsciiOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.BeepOnError\n  id: BeepOnError\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: BeepOnError\n  nameWithType: MaskedTextBox.BeepOnError\n  fullName: System.Windows.Forms.MaskedTextBox.BeepOnError\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.\n  remarks: The <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event will still occur if the BeepOnError property is set to `true`.\n  syntax:\n    content: public bool BeepOnError { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control should beep on invalid input; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.BeepOnError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.CanUndo\n  id: CanUndo\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: CanUndo\n  nameWithType: MaskedTextBox.CanUndo\n  fullName: System.Windows.Forms.MaskedTextBox.CanUndo\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the user can undo the previous operation. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The CanUndo property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality, this property always has a value of `false`.\n  syntax:\n    content: public bool CanUndo { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> in all cases.\n  overload: System.Windows.Forms.MaskedTextBox.CanUndo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ClearUndo\n  id: ClearUndo\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ClearUndo()\n  nameWithType: MaskedTextBox.ClearUndo()\n  fullName: System.Windows.Forms.MaskedTextBox.ClearUndo()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Clears information about the most recent operation from the undo buffer of the text box. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The ClearUndo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.\n  syntax:\n    content: public void ClearUndo ();\n    parameters: []\n  overload: System.Windows.Forms.MaskedTextBox.ClearUndo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.CreateHandle\n  id: CreateHandle\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: CreateHandle()\n  nameWithType: MaskedTextBox.CreateHandle()\n  fullName: System.Windows.Forms.MaskedTextBox.CreateHandle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a handle for the control.\n  syntax:\n    content: protected override void CreateHandle ();\n    parameters: []\n  overload: System.Windows.Forms.MaskedTextBox.CreateHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: MaskedTextBox.CreateParams\n  fullName: System.Windows.Forms.MaskedTextBox.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  syntax:\n    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> representing the information needed when creating a control.\n  overload: System.Windows.Forms.MaskedTextBox.CreateParams*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.Culture\n  id: Culture\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: Culture\n  nameWithType: MaskedTextBox.Culture\n  fullName: System.Windows.Forms.MaskedTextBox.Culture\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the culture information associated with the masked text box.\n  syntax:\n    content: public System.Globalization.CultureInfo Culture { get; set; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: A <xref:System.Globalization.CultureInfo> representing the culture supported by the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.Culture*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Culture was set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat\n  id: CutCopyMaskFormat\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: CutCopyMaskFormat\n  nameWithType: MaskedTextBox.CutCopyMaskFormat\n  fullName: System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.\n  remarks: \"The CutCopyMaskFormat property determines how text, selected within the <xref:System.Windows.Forms.MaskedTextBox> control, is interpreted when it is copied to the clipboard or retrieved through the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property. Specifically, it determines whether literal characters, prompt characters, or both are included when selected text is accessed. When prompt characters are excluded, they are transformed into spaces in the copied string.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted.\"\n  syntax:\n    content: public System.Windows.Forms.MaskFormat CutCopyMaskFormat { get; set; }\n    return:\n      type: System.Windows.Forms.MaskFormat\n      description: One of the <xref href=\"System.Windows.Forms.MaskFormat\"></xref> values. The default is <xref href=\"System.Windows.Forms.MaskFormat\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: Property set with a <xref href=\"System.Windows.Forms.MaskFormat\"></xref> value that is not valid.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.FormatProvider\n  id: FormatProvider\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: FormatProvider\n  nameWithType: MaskedTextBox.FormatProvider\n  fullName: System.Windows.Forms.MaskedTextBox.FormatProvider\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the <xref:System.IFormatProvider> to use when performing type validation.\n  remarks: FormatProvider determines which symbols are used for the currency, date, and other culture-specific mask placeholders when type validation occurs and the control has a non-null <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property.\n  syntax:\n    content: public IFormatProvider FormatProvider { get; set; }\n    return:\n      type: System.IFormatProvider\n      description: An object that implements the <xref:System.IFormatProvider> interface.\n  overload: System.Windows.Forms.MaskedTextBox.FormatProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.GetCharFromPosition(System.Drawing.Point)\n  id: GetCharFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: GetCharFromPosition(Point)\n  nameWithType: MaskedTextBox.GetCharFromPosition(Point)\n  fullName: System.Windows.Forms.MaskedTextBox.GetCharFromPosition(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the character that is closest to the specified location within the control.\n  syntax:\n    content: public override char GetCharFromPosition (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The location from which to seek the nearest character.\n    return:\n      type: System.Char\n      description: The character at the specified location.\n  overload: System.Windows.Forms.MaskedTextBox.GetCharFromPosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)\n  id: GetCharIndexFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: GetCharIndexFromPosition(Point)\n  nameWithType: MaskedTextBox.GetCharIndexFromPosition(Point)\n  fullName: System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the character nearest to the specified location.\n  syntax:\n    content: public override int GetCharIndexFromPosition (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The location to search.\n    return:\n      type: System.Int32\n      description: The zero-based character index at the specified location.\n  overload: System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)\n  id: GetFirstCharIndexFromLine(System.Int32)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: GetFirstCharIndexFromLine(Int32)\n  nameWithType: MaskedTextBox.GetFirstCharIndexFromLine(Int32)\n  fullName: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the first character of a given line. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The GetFirstCharIndexFromLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.\n  syntax:\n    content: public int GetFirstCharIndexFromLine (int lineNumber);\n    parameters:\n    - id: lineNumber\n      type: System.Int32\n      description: This parameter is not used.\n    return:\n      type: System.Int32\n      description: This method will always return 0.\n  overload: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine\n  id: GetFirstCharIndexOfCurrentLine\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: GetFirstCharIndexOfCurrentLine()\n  nameWithType: MaskedTextBox.GetFirstCharIndexOfCurrentLine()\n  fullName: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the first character of the current line. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The GetFirstCharIndexOfCurrentLine method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.\n  syntax:\n    content: public int GetFirstCharIndexOfCurrentLine ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: This method will always return 0.\n  overload: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)\n  id: GetLineFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: GetLineFromCharIndex(Int32)\n  nameWithType: MaskedTextBox.GetLineFromCharIndex(Int32)\n  fullName: System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the line number from the specified character position within the text of the control. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The GetLineFromCharIndex method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is not supported.\n  syntax:\n    content: public override int GetLineFromCharIndex (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: This parameter is not used.\n    return:\n      type: System.Int32\n      description: This method will always return 0.\n  overload: System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)\n  id: GetPositionFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: GetPositionFromCharIndex(Int32)\n  nameWithType: MaskedTextBox.GetPositionFromCharIndex(Int32)\n  fullName: System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the location within the control at the specified character index.\n  syntax:\n    content: public override System.Drawing.Point GetPositionFromCharIndex (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the character for which to retrieve the location.\n    return:\n      type: System.Drawing.Point\n      description: The location of the specified character within the client rectangle of the control.\n  overload: System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.HidePromptOnLeave\n  id: HidePromptOnLeave\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: HidePromptOnLeave\n  nameWithType: MaskedTextBox.HidePromptOnLeave\n  fullName: System.Windows.Forms.MaskedTextBox.HidePromptOnLeave\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.\n  syntax:\n    content: public bool HidePromptOnLeave { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Forms.MaskedTextBox.PromptChar*> is hidden when <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> does not have focus; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.HidePromptOnLeave*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.InsertKeyMode\n  id: InsertKeyMode\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: InsertKeyMode\n  nameWithType: MaskedTextBox.InsertKeyMode\n  fullName: System.Windows.Forms.MaskedTextBox.InsertKeyMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text insertion mode of the masked text box control.\n  remarks: \"The InsertKeyMode property controls the character insertion behavior of the <xref:System.Windows.Forms.MaskedTextBox> control. The state of this property is defined by the <xref:System.Windows.Forms.InsertKeyMode> enumeration, which can be always on, always off or set to respect the setting of the user's keyboard. This property supersedes the insertion mode of the keyboard. For example, if the keyboard is set to overwrite, but InsertKeyMode is set to `Insert`, the <xref:System.Windows.Forms.MaskedTextBox> will operate in insert mode. The <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property will access the true insertion mode of the <xref:System.Windows.Forms.MaskedTextBox>.  \\n  \\n If changing InsertKeyMode changes the value of <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>, <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> event.  \\n  \\n This property has no effect if no mask has been set.\"\n  syntax:\n    content: public System.Windows.Forms.InsertKeyMode InsertKeyMode { get; set; }\n    return:\n      type: System.Windows.Forms.InsertKeyMode\n      description: An <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref> value that indicates the current insertion mode. The default is <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.InsertKeyMode*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: An invalid <xref href=\"System.Windows.Forms.InsertKeyMode\"></xref> value was supplied when setting this property.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.IsInputKey(System.Windows.Forms.Keys)\n  id: IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: IsInputKey(Keys)\n  nameWithType: MaskedTextBox.IsInputKey(Keys)\n  fullName: System.Windows.Forms.MaskedTextBox.IsInputKey(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines whether the specified key is an input key or a special key that requires preprocessing.\n  syntax:\n    content: protected override bool IsInputKey (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values.\n    return:\n      type: System.Boolean\n      description: Determines whether the specified key is an input key or a special key that requires preprocessing.\n  overload: System.Windows.Forms.MaskedTextBox.IsInputKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.IsOverwriteMode\n  id: IsOverwriteMode\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: IsOverwriteMode\n  nameWithType: MaskedTextBox.IsOverwriteMode\n  fullName: System.Windows.Forms.MaskedTextBox.IsOverwriteMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value that specifies whether new user input overwrites existing input.\n  remarks: \"IsOverwriteMode takes into account both the value of the <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property and the state of the user's keyboard. If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to either <xref:System.Windows.Forms.InsertKeyMode> or <xref:System.Windows.Forms.InsertKeyMode>, IsOverwriteMode will return `false` or `true`, respectively. If <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> is set to <xref:System.Windows.Forms.InsertKeyMode>, it will return the state of the INSERT key.  \\n  \\n When IsOverwriteMode is `false`, <xref:System.Windows.Forms.MaskedTextBox> will reject as invalid any character entry that would result in a violation anywhere in the mask. In explanation, if inserting a character would cause a character to be shifted over into a mask position where it would not be valid, the character insertion will be rejected.\"\n  syntax:\n    content: public bool IsOverwriteMode { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> will overwrite existing characters as the user enters new ones; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> will shift existing characters forward. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.IsOverwriteMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\n  id: IsOverwriteModeChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: IsOverwriteModeChanged\n  nameWithType: MaskedTextBox.IsOverwriteModeChanged\n  fullName: System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs after the insert mode has changed.\n  remarks: \"The IsOverwriteModeChanged event is raised after value of the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is changed.  \\n  \\n This event is required to properly bind data to a <xref:System.Windows.Forms.MaskedTextBox> control.\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the IsOverwriteModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the IsOverwriteModeChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#484](~/add/codesnippet/csharp/e-system.windows.forms.m_2_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#484](~/add/codesnippet/visualbasic/e-system.windows.forms.m_2_1.vb)]\"\n  syntax:\n    content: public event EventHandler IsOverwriteModeChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.Lines\n  id: Lines\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: Lines\n  nameWithType: MaskedTextBox.Lines\n  fullName: System.Windows.Forms.MaskedTextBox.Lines\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the lines of text in multiline configurations. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The Lines property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not supported.\n  syntax:\n    content: public string[] Lines { get; set; }\n    return:\n      type: System.String[]\n      description: An array of type <xref:System.String> that contains a single line.\n  overload: System.Windows.Forms.MaskedTextBox.Lines*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.Mask\n  id: Mask\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: Mask\n  nameWithType: MaskedTextBox.Mask\n  fullName: System.Windows.Forms.MaskedTextBox.Mask\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the input mask to use at run time.\n  remarks: \"Mask is the default property for the <xref:System.Windows.Forms.MaskedTextBox> class.  \\n  \\n Mask must be a string composed of one or more of the masking elements, as shown in the following table. The masking language used by <xref:System.Windows.Forms.MaskedTextBox> is defined by its associated <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>. The standard provider specifies a masking language based upon the one used by the Masked Edit control in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] 6.0, and should be very familiar to users migrating from that platform.  \\n  \\n|Masking element|Description|  \\n|---------------------|-----------------|  \\n|0|Digit, required. This element will accept any single digit between 0 and 9.|  \\n|9|Digit or space, optional.|  \\n|#|Digit or space, optional. If this position is blank in the mask, it will be rendered as a space in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property. Plus (+) and minus (-) signs are allowed.|  \\n|L|Letter, required. Restricts input to the ASCII letters a-z and A-Z. This mask element is equivalent to [a-zA-Z] in regular expressions.|  \\n|?|Letter, optional. Restricts input to the ASCII letters a-z and A-Z. This mask element is equivalent to [a-zA-Z]? in regular expressions.|  \\n|&|Character, required. If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to true, this element behaves like the \\\"L\\\" element.|  \\n|C|Character, optional. Any non-control character. If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to `true`, this element behaves like the \\\"?\\\" element.|  \\n|A|Alphanumeric, required. If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to `true`, the only characters it will accept are the ASCII letters a-z and A-Z. This mask element behaves like the \\\"a\\\" element.|  \\n|a|Alphanumeric, optional. If the <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> property is set to `true`, the only characters it will accept are the ASCII letters a-z and A-Z. This mask element behaves like the \\\"A\\\" element.|  \\n|.|Decimal placeholder. The actual display character used will be the decimal symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.|  \\n|,|Thousands placeholder. The actual display character used will be the thousands placeholder appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.|  \\n|:|Time separator. The actual display character used will be the time symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.|  \\n|/|Date separator. The actual display character used will be the date symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.|  \\n|$|Currency symbol. The actual character displayed will be the currency symbol appropriate to the format provider, as determined by the control's <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.|  \\n|\\\\<|Shift down. Converts all characters that follow to lowercase.|  \\n|>|Shift up. Converts all characters that follow to uppercase.|  \\n|&#124;|Disable a previous shift up or shift down.|  \\n|\\\\|Escape. Escapes a mask character, turning it into a literal. \\\"\\\\\\\\\\\\\\\\\\\" is the escape sequence for a backslash.|  \\n|All other characters|Literals. All non-mask elements will appear as themselves within <xref:System.Windows.Forms.MaskedTextBox>. Literals always occupy a static position in the mask at run time, and cannot be moved or deleted by the user.|  \\n  \\n If you change a mask when <xref:System.Windows.Forms.MaskedTextBox> already contains user input filtered by a previous mask, <xref:System.Windows.Forms.MaskedTextBox> will attempt to migrate that input into the new mask definition. If it fails, it will clear the existing input. Assigning a zero-length string as the mask will preserve any existing data in the control. When used with a zero-length mask, <xref:System.Windows.Forms.MaskedTextBox> behaves like a single-line <xref:System.Windows.Forms.TextBox> control.  \\n  \\n The decimal (.), thousandths (,), time (:), date (/), and currency ($) symbols default to displaying those symbols as defined by the application's culture. You can force them to display symbols for another culture by using the <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> property.  \\n  \\n Character insertion into the mask at run time is controlled by the <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> property. Users can navigate through the mask by using the left and right arrow keys or the mouse cursor, and can skip optional positions in the mask by entering a space.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Windows.Forms.MaskedTextBox> supports all Unicode characters except for surrogates and vertically combined characters.  \\n  \\n The following table shows example masks.  \\n  \\n|Mask|Behavior|  \\n|----------|--------------|  \\n|`00/00/0000`|A date (day, numeric month, year) in international date format. The \\\"/\\\" character is a logical date separator, and will appear to the user as the date separator appropriate to the application's current culture.|  \\n|`00->L<LL-0000`|A date (day, month abbreviation, and year) in United States format in which the three-letter month abbreviation is displayed with an initial uppercase letter followed by two lowercase letters.|  \\n|`(999)-000-0000`|United States phone number, area code optional. If users do not want to enter the optional characters, they can either enter spaces or place the mouse pointer directly at the position in the mask represented by the first 0.|  \\n|`$999,999.00`|A currency value in the range of 0 to 999999. The currency, thousandth, and decimal characters will be replaced at run time with their culture-specific equivalents.|\"\n  syntax:\n    content: public string Mask { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> representing the current mask. The default value is the empty string which allows any input.\n  overload: System.Windows.Forms.MaskedTextBox.Mask*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The string supplied to the Mask property is not a valid mask. Invalid masks include masks containing non-printable characters.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MaskChanged\n  id: MaskChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskChanged\n  nameWithType: MaskedTextBox.MaskChanged\n  fullName: System.Windows.Forms.MaskedTextBox.MaskChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs after the input mask is changed.\n  remarks: The MaskChanged event is raised after the value of the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property is changed. This event is also raised if the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> is indirectly altered by a member such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaskChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the MaskChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#485](~/add/codesnippet/csharp/e-system.windows.forms.m_5_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#485](~/add/codesnippet/visualbasic/e-system.windows.forms.m_5_1.vb)]\"\n  syntax:\n    content: public event EventHandler MaskChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MaskCompleted\n  id: MaskCompleted\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskCompleted\n  nameWithType: MaskedTextBox.MaskCompleted\n  fullName: System.Windows.Forms.MaskedTextBox.MaskCompleted\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether all required inputs have been entered into the input mask.\n  remarks: MaskCompleted checks only required input elements. To determine whether all required and optional input elements have been filled in, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> property instead.\n  syntax:\n    content: public bool MaskCompleted { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all required input has been entered into the mask; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.MaskCompleted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MaskedTextProvider\n  id: MaskedTextProvider\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskedTextProvider\n  nameWithType: MaskedTextBox.MaskedTextProvider\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextProvider\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a clone of the mask provider associated with this instance of the masked text box control.\n  remarks: \"The MaskedTextProvider property defines the mask-parsing engine and the masking language used by the <xref:System.Windows.Forms.MaskedTextBox> control. The default provider is the <xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName> class; however, a custom provider can be specified using the <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> constructor.  \\n  \\n MaskedTextProvider cannot be set directly. However, setting some of the properties of <xref:System.Windows.Forms.MaskedTextBox>—such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, and <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>—may internally cause the creation of a new MaskedTextProvider.\"\n  syntax:\n    content: public System.ComponentModel.MaskedTextProvider MaskedTextProvider { get; }\n    return:\n      type: System.ComponentModel.MaskedTextProvider\n      description: A masking language provider of type MaskedTextProvider.\n  overload: System.Windows.Forms.MaskedTextBox.MaskedTextProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MaskFull\n  id: MaskFull\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskFull\n  nameWithType: MaskedTextBox.MaskFull\n  fullName: System.Windows.Forms.MaskedTextBox.MaskFull\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether all required and optional inputs have been entered into the input mask.\n  remarks: You can use the MaskFull property within the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event handler to determine if the user's input was rejected because there are no remaining inputs in the mask. To determine whether only required input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> property.\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event, and uses a <xref:System.Windows.Forms.ToolTip> to alert the user if an attempt is made to enter data after all positions in the mask have been used.  \\n  \\n [!code-cs[MaskInputRejectedSample#1](~/add/codesnippet/csharp/p-system.windows.forms.m_16_1.cs)]\\n [!code-vb[MaskInputRejectedSample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_16_1.vb)]\"\n  syntax:\n    content: public bool MaskFull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all required and optional inputs have been entered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.MaskFull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MaskInputRejected\n  id: MaskInputRejected\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaskInputRejected\n  nameWithType: MaskedTextBox.MaskInputRejected\n  fullName: System.Windows.Forms.MaskedTextBox.MaskInputRejected\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.\n  remarks: \"MaskInputRejected is the default event for the <xref:System.Windows.Forms.MaskedTextBox> class.  \\n  \\n The MaskInputRejected event occurs when a character is rejected by the input mask. The input mask, represented by the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property, is interpreted by the masked text provider associated with the control through the <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> property. MaskInputRejected is raised in the following situations:  \\n  \\n-   An input character does not match the corresponding format element. For example, the user enters an alphabetic character when a digit is required. This is probably the most common reason why this event is raised.  \\n  \\n-   The user is trying to input extraneous characters beyond the end of the mask either because the mask has already been filled or the current caret position has been moved to the very end of the displayed input mask string.  \\n  \\n-   A paste operation either inserts a character that does not match its associated format element, or if the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, it shifts existing characters into new positions where they do not match their format elements.  \\n  \\n-   A cut operation shifts existing characters to the left, and one or more characters do not match their newly associated format elements.  \\n  \\n-   An assignment was made to the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property and the assigned string caused one or more mask violations.  \\n  \\n If a string was assigned to the control that causes MaskInputRejected to occur, no part of the string will appear in <xref:System.Windows.Forms.MaskedTextBox>.  \\n  \\n The default handling for MaskInputRejected will play a beep sound if the <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> property is set to `true`. This event is often handled to implement custom error handling, for example, to move to the next user input control if the mask is full, or to display a custom error dialog box or ToolTip if the input character is invalid.\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaskInputRejected event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the MaskInputRejected event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#486](~/add/codesnippet/csharp/e-system.windows.forms.m_6_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#486](~/add/codesnippet/visualbasic/e-system.windows.forms.m_6_1.vb)]\"\n  syntax:\n    content: public event System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected;\n    return:\n      type: System.Windows.Forms.MaskInputRejectedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MaxLength\n  id: MaxLength\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MaxLength\n  nameWithType: MaskedTextBox.MaxLength\n  fullName: System.Windows.Forms.MaskedTextBox.MaxLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the maximum number of characters the user can type or paste into the text box control. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: See the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property and the <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> property in the <xref:System.Windows.Forms.MaskInputRejectedEventArgs> class for information about how to determine the maximum length of a string in a <xref:System.Windows.Forms.MaskedTextBox>.\n  syntax:\n    content: public override int MaxLength { get; set; }\n    return:\n      type: System.Int32\n      description: This property always returns 0.\n  overload: System.Windows.Forms.MaskedTextBox.MaxLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.Multiline\n  id: Multiline\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: Multiline\n  nameWithType: MaskedTextBox.Multiline\n  fullName: System.Windows.Forms.MaskedTextBox.Multiline\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether this is a multiline text box control. This property is not fully supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> property is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this property is not fully supported; it cannot be set and it always resolves to `false`.\n  syntax:\n    content: public override bool Multiline { get; set; }\n    return:\n      type: System.Boolean\n      description: This property always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.Multiline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.MultilineChanged\n  id: MultilineChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: MultilineChanged\n  nameWithType: MaskedTextBox.MultilineChanged\n  fullName: System.Windows.Forms.MaskedTextBox.MultilineChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Typically occurs when the value of the <xref:System.Windows.Forms.MaskedTextBox.Multiline*> property has changed; however, this event is not raised by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The MultilineChanged event is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this event is not implemented in <xref:System.Windows.Forms.MaskedTextBox>.\n  syntax:\n    content: public event EventHandler MultilineChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnBackColorChanged(System.EventArgs)\n  id: OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnBackColorChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnBackColorChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref:System.Windows.Forms.Control.BackColor*> property changes.\n  syntax:\n    content: protected override void OnBackColorChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnBackColorChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnHandleCreated(System.EventArgs)\n  id: OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnHandleCreated(EventArgs)\n  nameWithType: MaskedTextBox.OnHandleCreated(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnHandleCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.\n  syntax:\n    content: protected override void OnHandleCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnHandleCreated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)\n  id: OnIsOverwriteModeChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnIsOverwriteModeChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnIsOverwriteModeChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnIsOverwriteModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnIsOverwriteModeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: MaskedTextBox.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnKeyDown(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> event.\n  syntax:\n    content: protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnKeyDown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  id: OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnKeyPress(KeyPressEventArgs)\n  nameWithType: MaskedTextBox.OnKeyPress(KeyPressEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnKeyPress(KeyPressEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.KeyPress\"></xref> event.\n  syntax:\n    content: protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyPressEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyPressEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnKeyPress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  id: OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: MaskedTextBox.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnKeyUp(KeyEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.\n  syntax:\n    content: protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.KeyEventArgs\n      description: A <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnKeyUp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)\n  id: OnMaskChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnMaskChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnMaskChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnMaskChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.MaskedTextBox.MaskChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnMaskChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMaskChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnMaskChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)\n  id: OnMultilineChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnMultilineChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnMultilineChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnMultilineChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Typically raises the <xref href=\"System.Windows.Forms.MaskedTextBox.MultilineChanged\"></xref> event, but disabled for <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The OnMultilineChanged method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.\n  syntax:\n    content: protected override void OnMultilineChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnMultilineChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)\n  id: OnTextAlignChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnTextAlignChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnTextAlignChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.MaskedTextBox.TextAlignChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnTextAlignChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnTextAlignChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnTextAlignChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)\n  id: OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnTextChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnTextChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnTextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnTextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnTextChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)\n  id: OnValidating(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: OnValidating(CancelEventArgs)\n  nameWithType: MaskedTextBox.OnValidating(CancelEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnValidating(CancelEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event.\n  remarks: \"The OnValidating method causes the input string to be validated against the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property, if a <xref:System.Type> has been specified for this property. It will then also raise the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event.  \\n  \\n> [!NOTE]\\n>  To ensure consistency with text-based controls, validation will occur even if the <xref:System.Windows.Forms.MaskedTextBox> is read-only (its <xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> property is set to `true`).  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The OnValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnValidating (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref:System.ComponentModel.CancelEventArgs> that contains event data.\n  overload: System.Windows.Forms.MaskedTextBox.OnValidating*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: A critical exception occurred during the parsing of the input string.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.PasswordChar\n  id: PasswordChar\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: PasswordChar\n  nameWithType: MaskedTextBox.PasswordChar\n  fullName: System.Windows.Forms.MaskedTextBox.PasswordChar\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the character to be displayed in substitute for user input.\n  remarks: \"For sensitive user input, it is common practice to conceal the actual information entered by the user. If the PasswordChar property is set to a non-null character, <xref:System.Windows.Forms.MaskedTextBox> will display this character for all input into the control. Setting this property to `null` will disable this functionality.  \\n  \\n If you want to use the operating system supplied password character, which is defined in COMCTL32.dll, use the <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> property instead. If both the PasswordChar and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are activated, the latter takes precedence.  \\n  \\n> [!IMPORTANT]\\n>  As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings.\"\n  syntax:\n    content: public char PasswordChar { get; set; }\n    return:\n      type: System.Char\n      description: The <xref:System.Char> value used as the password character.\n  overload: System.Windows.Forms.MaskedTextBox.PasswordChar*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The character specified when setting this property is not a valid password character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*> method of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>. The two are required to be different.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ProcessCmdKey(Message,Keys)\n  nameWithType: MaskedTextBox.ProcessCmdKey(Message,Keys)\n  fullName: System.Windows.Forms.MaskedTextBox.ProcessCmdKey(Message,Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a command key.\n  syntax:\n    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process.\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the shortcut key to process.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the command key was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.ProcessCmdKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)\n  id: ProcessKeyMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ProcessKeyMessage(Message)\n  nameWithType: MaskedTextBox.ProcessKeyMessage(Message)\n  fullName: System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Overrides the base implementation of this method to handle input language changes.\n  remarks: <xref:System.Windows.Forms.MaskedTextBox> overrides its base control's implementation of ProcessKeyMessage to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts. ProcessKeyMessage detects any WM_CHAR messages that occur after it receives a WM_IME_CHAR message and suppresses them in order to prevent these characters from showing up in the control. If you derive from this control and override this message, you should duplicate this behavior if you wish your new control to work with IMEs.\n  syntax:\n    content: protected override bool ProcessKeyMessage (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message was processed by the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.ProcessKeyMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.PromptChar\n  id: PromptChar\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: PromptChar\n  nameWithType: MaskedTextBox.PromptChar\n  fullName: System.Windows.Forms.MaskedTextBox.PromptChar\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the character used to represent the absence of user input in <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: \"PromptChar will be displayed in <xref:System.Windows.Forms.MaskedTextBox> for any mask position that the user has not yet filled in.  \\n  \\n Use the <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> property to specify whether the prompt is displayed when <xref:System.Windows.Forms.MaskedTextBox> does not have focus.\"\n  syntax:\n    content: public char PromptChar { get; set; }\n    return:\n      type: System.Char\n      description: The character used to prompt the user for input. The default is an underscore (_).\n  overload: System.Windows.Forms.MaskedTextBox.PromptChar*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The character specified when setting this property is not a valid prompt character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*> method of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The prompt character specified is the same as the current password character, <xref:System.Windows.Forms.MaskedTextBox.PasswordChar*>. The two are required to be different.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ReadOnly\n  id: ReadOnly\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ReadOnly\n  nameWithType: MaskedTextBox.ReadOnly\n  fullName: System.Windows.Forms.MaskedTextBox.ReadOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether text in the text box is read-only.\n  syntax:\n    content: public bool ReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate the text is read only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.ReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure\n  id: RejectInputOnFirstFailure\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: RejectInputOnFirstFailure\n  nameWithType: MaskedTextBox.RejectInputOnFirstFailure\n  fullName: System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.\n  remarks: \"Sometimes the user will enter several characters into a <xref:System.Windows.Forms.MaskedTextBox> in a single input operation, typically by copying and pasting a string. If the entire string only contains valid characters, according to their paste position in the input mask, then the entire operation will succeed. However, when a parsing error occurs, the behavior of <xref:System.Windows.Forms.MaskedTextBox> depends on the value of RejectInputOnFirstFailure, as follows:  \\n  \\n-   If this property is `true`, then processing of the input string stops at the invalid character. All subsequent characters are ignored. A single <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised.  \\n  \\n-   If this property is `false`, then the invalid character is rejected, but parsing continues with the next character in the input string. A <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised for every invalid character in the input string.  \\n  \\n The <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> properties can also influence the interpretation of the user input.  \\n  \\n If the <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> property is `false`, then any characters already in the input mask to the right of the insertion point will be displaced by the accepted number of characters. This shifting may cause additional parsing errors.  \\n  \\n A pasting operation can be mimicked programmatically by setting the <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> property.\"\n  syntax:\n    content: public bool RejectInputOnFirstFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if processing of the input string should be terminated at the first parsing error; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if processing should ignore all errors. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ResetOnPrompt\n  id: ResetOnPrompt\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ResetOnPrompt\n  nameWithType: MaskedTextBox.ResetOnPrompt\n  fullName: System.Windows.Forms.MaskedTextBox.ResetOnPrompt\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that determines how an input character that matches the prompt character should be handled.\n  remarks: \"The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters—spaces and prompt characters—specially. Typically, each input character will be tested against the mask and either accepted or rejected. Assuming that the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> property is set to non-`null`, then setting the ResetOnPrompt property to `true` will result in special processing for the prompt character. When the user enters the prompt character into the mask, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.  \\n  \\n ResetOnPrompt takes precedence over the <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> property, as shown in the following table.  \\n  \\n|ResetOnPrompt value|AllowPromptAsInput value|Resulting behavior|  \\n|-------------------------|------------------------------|------------------------|  \\n|`true`|`true`|The prompt character can be entered and it causes the current mask position to be reset. This is the default.|  \\n|`true`|`false`|The prompt character can be entered and it causes the current mask position to be reset.|  \\n|`false`|`true`|The prompt character is processed as a standard input character.|  \\n|`false`|`false`|The prompt character is not valid and raises a <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.|\"\n  syntax:\n    content: public bool ResetOnPrompt { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that the prompt character is to be processed as a normal input character. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.ResetOnPrompt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ResetOnSpace\n  id: ResetOnSpace\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ResetOnSpace\n  nameWithType: MaskedTextBox.ResetOnSpace\n  fullName: System.Windows.Forms.MaskedTextBox.ResetOnSpace\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that determines how a space input character should be handled.\n  remarks: \"The <xref:System.Windows.Forms.MaskedTextBox> can treat two categories of characters—spaces and prompt characters—specially. Typically, each input character will be tested against the mask and either accepted or rejected. Setting the ResetOnSpace property to `true` will result in the current mask character position to be cleared and the current position to be advanced to the next editable character.  \\n  \\n The type of character input will determine whether the masking engine moves forward to the next character in the mask, or stays at the current position and waits for a matching character. If the input character is a space, and does not match the current non-editable character in the mask, the masking engine will skip ahead to the next character in the mask. If the input character is not a space, and does not match the current non-editable character in the mask, the masking engine will remain at the current mask position, and attempt to match the next input character against it.\"\n  syntax:\n    content: public bool ResetOnSpace { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the space input character causes the current editable position in the mask to be reset; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to indicate that it is to be processed as a normal input character. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.ResetOnSpace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ScrollToCaret\n  id: ScrollToCaret\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ScrollToCaret()\n  nameWithType: MaskedTextBox.ScrollToCaret()\n  fullName: System.Windows.Forms.MaskedTextBox.ScrollToCaret()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scrolls the contents of the control to the current caret position. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The ScrollToCaret method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, because the <xref:System.Windows.Forms.MaskedTextBox> control does not support multiline configuration, this method is overridden to perform no actions.\n  syntax:\n    content: public void ScrollToCaret ();\n    parameters: []\n  overload: System.Windows.Forms.MaskedTextBox.ScrollToCaret*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.SelectedText\n  id: SelectedText\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: SelectedText\n  nameWithType: MaskedTextBox.SelectedText\n  fullName: System.Windows.Forms.MaskedTextBox.SelectedText\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current selection in the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control.\n  remarks: 'Selections retrieved using this property are formatted according to the control''s formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A>, <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> and <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>. Selections set using this property behave like a Paste operation: each character is matched against the mask, and the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event is raised for invalid characters. If <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> is `true`, literals and prompt characters are allowed when setting SelectedText, and will be removed silently unless they violate the mask.'\n  syntax:\n    content: public override string SelectedText { get; set; }\n    return:\n      type: System.String\n      description: The currently selected text as a <xref:System.String>. If no text is currently selected, this property resolves to an empty string.\n  overload: System.Windows.Forms.MaskedTextBox.SelectedText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.SkipLiterals\n  id: SkipLiterals\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: SkipLiterals\n  nameWithType: MaskedTextBox.SkipLiterals\n  fullName: System.Windows.Forms.MaskedTextBox.SkipLiterals\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the user is allowed to reenter literal values.\n  remarks: \"Input masks commonly contain literals. When the user enters characters into the <xref:System.Windows.Forms.MaskedTextBox> at runtime, the current character position will sometimes fall on a literal. The SkipLiterals property describes how user input for the next character is to be handled, as follows:  \\n  \\n-   If this property is `true`, the user can either redundantly enter the same character as the literal at the current position, or can enter the next editable character, thereby jumping the current position to that position.  \\n  \\n-   If this property is `false`, the user can only enter the next editable character. If the next position in the mask will not accept the literal character (for example, the user types \\\"/\\\" and the next position only accepts digits), the control will raise the <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> event.  \\n  \\n As an example, in the \\\"90/90/0000\\\" date entry mask, the forward slash characters are literals. Assume that the user has entered two initial digits, \\\"11\\\", so the current position in the mask is at the first forward slash (/) literal. If SkipLiterals is `true`, then the user has the following valid choices:  \\n  \\n-   The user can enter a \\\"/\\\" character. This results in the position being moved to the next character, which in this example is the fourth position, a 9 masking element.  \\n  \\n-   The user can enter the next editable character, which in this example is a digit. The digit would be validated and the current position would automatically be moved to the fifth position, which is a 0 masking element.  \\n  \\n If SkipLiterals is `false`, then only a valid data input is allowed, which in this example would be a digit.\"\n  syntax:\n    content: public bool SkipLiterals { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow literals to be reentered; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to prevent the user from overwriting literal characters. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.SkipLiterals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.Text\n  id: Text\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: Text\n  nameWithType: MaskedTextBox.Text\n  fullName: System.Windows.Forms.MaskedTextBox.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text as it is currently displayed to the user.\n  remarks: \"Text is the default binding property for the <xref:System.Windows.Forms.MaskedTextBox> class.  \\n  \\n Strings retrieved using this property are formatted according to the control's formatting properties, such as <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> and <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>.  \\n  \\n You can assign a string with or without literal characters to Text depending on the values of <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, and <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>.  \\n  \\n Text is the default binding property for <xref:System.Windows.Forms.MaskedTextBox>.  \\n  \\n <xref:System.Windows.Forms.MaskedTextBox> will raise the <xref:System.Windows.Forms.Control.TextChanged> event whenever the formatted text value changes. Different properties may or may not cause this value to change. For example, changing the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property will not raise the <xref:System.Windows.Forms.Control.TextChanged> event, but changing the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property will.\"\n  example:\n  - \"The following code example demonstrates the use of the Text property.  \\n  \\n [!code-vb[TestMaskedTextBox#3](~/add/codesnippet/visualbasic/p-system.windows.forms.m_33_1.vb)]\"\n  syntax:\n    content: public override string Text { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> containing the text currently displayed by the control. The default is an empty string.\n  overload: System.Windows.Forms.MaskedTextBox.Text*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.TextAlign\n  id: TextAlign\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: TextAlign\n  nameWithType: MaskedTextBox.TextAlign\n  fullName: System.Windows.Forms.MaskedTextBox.TextAlign\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets how text is aligned in a masked text box control.\n  remarks: You can use the TextAlign property to align the displayed text within a <xref:System.Windows.Forms.MaskedTextBox> to match the layout of visual elements on your form. For example, if your controls are all located on the right side of the form, you can set the TextAlign property to <xref:System.Windows.Forms.HorizontalAlignment>, and the text will be aligned with the right side of the control instead of the default left alignment.\n  syntax:\n    content: public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }\n    return:\n      type: System.Windows.Forms.HorizontalAlignment\n      description: One of the <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref> enumeration values that specifies how text is aligned relative to the control. The default is <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.TextAlign*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value assigned to this property is not of type <xref href=\"System.Windows.Forms.HorizontalAlignment\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.TextAlignChanged\n  id: TextAlignChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: TextAlignChanged\n  nameWithType: MaskedTextBox.TextAlignChanged\n  fullName: System.Windows.Forms.MaskedTextBox.TextAlignChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the text alignment is changed.\n  remarks: The TextAlignChanged event is raised after the <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> property is changed.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the TextAlignChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MaskedTextBox> named `MaskedTextBox1`. Then ensure that the event handler is associated with the TextAlignChanged event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#487](~/add/codesnippet/csharp/e-system.windows.forms.m_3_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#487](~/add/codesnippet/visualbasic/e-system.windows.forms.m_3_1.vb)]\"\n  syntax:\n    content: public event EventHandler TextAlignChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.TextLength\n  id: TextLength\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: TextLength\n  nameWithType: MaskedTextBox.TextLength\n  fullName: System.Windows.Forms.MaskedTextBox.TextLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the length of the displayed text.\n  syntax:\n    content: public override int TextLength { get; }\n    return:\n      type: System.Int32\n      description: An Int32 representing the number of characters in the <xref:System.Windows.Forms.MaskedTextBox.Text*> property. TextLength respects properties such as <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave*>, which means that the return results may be different depending on whether the control has focus.\n  overload: System.Windows.Forms.MaskedTextBox.TextLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.TextMaskFormat\n  id: TextMaskFormat\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: TextMaskFormat\n  nameWithType: MaskedTextBox.TextMaskFormat\n  fullName: System.Windows.Forms.MaskedTextBox.TextMaskFormat\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.\n  remarks: \"The TextMaskFormat property determines how the literal and prompt characters in the mask are processed when the generating the formatted string. More specifically, it determines whether literal characters, prompt characters, or both are included in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property. When prompt characters are excluded, they are transformed into spaces in the formatted string.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> property serves a similar purpose with respect to how the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is interpreted.\"\n  syntax:\n    content: public System.Windows.Forms.MaskFormat TextMaskFormat { get; set; }\n    return:\n      type: System.Windows.Forms.MaskFormat\n      description: One of the <xref href=\"System.Windows.Forms.MaskFormat\"></xref> values. The default is <xref href=\"System.Windows.Forms.MaskFormat\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.TextMaskFormat*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: Property set with a <xref href=\"System.Windows.Forms.MaskFormat\"></xref> value that is not valid.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ToString\n  id: ToString\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MaskedTextBox.ToString()\n  fullName: System.Windows.Forms.MaskedTextBox.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a string that represents the current masked text box. This method overrides <xref:System.Windows.Forms.TextBoxBase.ToString*>.\n  remarks: \"This version of the ToString method calls the base class implementation of this method, <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName>, then appends the input string after processing by the mask. This method honors properties that alter the appearance of the formatted string, with the following exceptions:  \\n  \\n-   The returned string always includes prompt and literal characters, regardless of the values of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.  \\n  \\n-   Password characters are ignored, so that the actual user-typed characters are returned. In other words, the values of the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> and <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> properties are ignored.\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains information about the current <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>. The string includes the type, a simplified view of the input string, and the formatted input string.\n  overload: System.Windows.Forms.MaskedTextBox.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.TypeValidationCompleted\n  id: TypeValidationCompleted\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: TypeValidationCompleted\n  nameWithType: MaskedTextBox.TypeValidationCompleted\n  fullName: System.Windows.Forms.MaskedTextBox.TypeValidationCompleted\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> has finished parsing the current value using the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType*> property.\n  remarks: \"The <xref:System.Windows.Forms.MaskedTextBox> control will optionally validate user input against the type defined by its <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName> property. When this property is not `null`, the following series of events occurs:  \\n  \\n1.  The validation sequence begins when one of the following occurs:  \\n  \\n    -   <xref:System.Windows.Forms.MaskedTextBox> control looses focus.  \\n  \\n    -   The <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property is retrieved.  \\n  \\n    -   The <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> method is called.  \\n  \\n2.  Any of these events result in a call to the `Parse` method of the type specified with the <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> property. `Parse` is responsible for the conversion of the formatted input string to the target type. A successful conversion equates to a successful validation.  \\n  \\n3.  After `Parse` returns, the TypeValidationCompleted event is raised. The event handler for this event is most commonly implemented to perform type or mask validation processing. It receives a <xref:System.Windows.Forms.TypeValidationEventArgs> parameter containing information about the conversion; for example, the <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> member indicates whether the conversion was successful.  \\n  \\n4.  After the event handler for the TypeValidationCompleted event returns, the standard validation event, <xref:System.Windows.Forms.Control.Validating>, is raised. A handler can be implemented to perform standard validation, perhaps including canceling the event.  \\n  \\n5.  If the event is not canceled in step 3, the standard control validation event <xref:System.Windows.Forms.Control.Validated> is raised.  \\n  \\n If the <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> property is set to `true` in the TypeValidationCompleted event handler, the event will be canceled and the <xref:System.Windows.Forms.MaskedTextBox> control retains focus, unless the subsequent <xref:System.Windows.Forms.Control.Validating> event sets its version of the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName> property back to `false`.\"\n  example:\n  - \"The following code example attempts to parse the user's input as a valid <xref:System.DateTime> object. If it fails, the TypeValidationCompleted event handler displays an error message to the user. If the value is a valid <xref:System.DateTime>, the code verifies that the date supplied is not prior to today's date. This code example requires  that your Windows Forms project contains a <xref:System.Windows.Forms.MaskedTextBox> control named `MaskedTextBox1` and a <xref:System.Windows.Forms.ToolTip> control named `ToolTip1`.  \\n  \\n [!code-cs[ValidatingTypeSample#1](~/add/codesnippet/csharp/e-system.windows.forms.m_13_1.cs)]\\n [!code-vb[ValidatingTypeSample#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_13_1.vb)]\"\n  syntax:\n    content: public event System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted;\n    return:\n      type: System.Windows.Forms.TypeValidationEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.Undo\n  id: Undo\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: Undo()\n  nameWithType: MaskedTextBox.Undo()\n  fullName: System.Windows.Forms.MaskedTextBox.Undo()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Undoes the last edit operation in the text box. This method is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: The Undo method is inherited from the base <xref:System.Windows.Forms.TextBoxBase> class. However, <xref:System.Windows.Forms.MaskedTextBox> does not support undo functionality.\n  syntax:\n    content: public void Undo ();\n    parameters: []\n  overload: System.Windows.Forms.MaskedTextBox.Undo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar\n  id: UseSystemPasswordChar\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: UseSystemPasswordChar\n  nameWithType: MaskedTextBox.UseSystemPasswordChar\n  fullName: System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the operating system-supplied password character should be used.\n  remarks: \"The UseSystemPasswordChar property determines whether user-supplied input should be displayed in the <xref:System.Windows.Forms.MaskedTextBox> as multiple occurrences of a password character defined by the operating system. UseSystemPasswordChar functions similarly to the <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> property, but instead of using a programmer-supplied character for the prompt, UseSystemPasswordChar uses a prompt defined by the operating system. This property has precedence over <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>.  \\n  \\n> [!IMPORTANT]\\n>  As a security consideration, the <xref:System.Windows.Forms.MaskedTextBox> control disables cut and copy operations on password-protected strings.\"\n  syntax:\n    content: public bool UseSystemPasswordChar { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the system password should be used as the prompt character; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The password character specified is the same as the current prompt character, <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>. The two are required to be different.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ValidateText\n  id: ValidateText\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ValidateText()\n  nameWithType: MaskedTextBox.ValidateText()\n  fullName: System.Windows.Forms.MaskedTextBox.ValidateText()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Converts the user input string to an instance of the validating type.\n  remarks: \"The ValidateText method attempts to convert the formatted string contained in the <xref:System.Windows.Forms.MaskedTextBox.Text%2A> property to an instance of the type that is specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> property. Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> property.  \\n  \\n ValidateText raises the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event after the conversion is attempted, regardless of its success.\"\n  syntax:\n    content: public object ValidateText ();\n    parameters: []\n    return:\n      type: System.Object\n      description: If successful, an <xref:System.Object> of the type specified by the <xref:System.Windows.Forms.MaskedTextBox.ValidatingType*> property; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to indicate conversion failure.\n  overload: System.Windows.Forms.MaskedTextBox.ValidateText*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: A critical exception occurred during the parsing of the input string.\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.ValidatingType\n  id: ValidatingType\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: ValidatingType\n  nameWithType: MaskedTextBox.ValidatingType\n  fullName: System.Windows.Forms.MaskedTextBox.ValidatingType\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the data type used to verify the data input by the user.\n  remarks: \"Masks do not in themselves guarantee that a user's input will represent a valid value for a given type. The following C# code shows a mask:  \\n  \\n```  \\nmaskedTextBox1.Mask = \\\"99/99/9999\\\";  \\n```  \\n  \\n The following [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] code shows a mask:  \\n  \\n `MaskedTextBox1.Mask = \\\"99/99/9999\\\"`  \\n  \\n This mask can demand that the user enter eight digits, but cannot verify that the user enters month, date, and year values in the correct range; \\\"12/20/2003\\\" and \\\"70/90/0000\\\" are equally valid as far as the mask is concerned.  \\n  \\n You can use ValidatingType to verify whether the data entered by the user falls within the correct range—in the previously mentioned case, by assigning it an instance of the <xref:System.DateTime> type. The current text in the control will be validated either when the user leaves the control. You can determine whether or not the data fails validation by monitoring for the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event. <xref:System.Windows.Forms.MaskedTextBox> will only perform the check against ValidatingType if <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> is `true`.  \\n  \\n If you want to use your own custom data types with ValidatingType, you must implement a static `Parse` method that takes a string as a parameter. This method must be implemented with one or both of the following signatures:  \\n  \\n `public static Object Parse(string)`  \\n  \\n `public static Object Parse(string, IFormatProvider)`\"\n  example:\n  - \"The following code example attempts to parse the user's input as a valid <xref:System.DateTime>. If it fails, the <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> event handler displays an error message to the user. If the value is a valid <xref:System.DateTime>, the code performs an additional check to ensure that the date supplied is not prior to today's date. This code example requires that your Windows Forms project contains a <xref:System.Windows.Forms.MaskedTextBox> control named `MaskedTextBox1` and a <xref:System.Windows.Forms.ToolTip> control named `ToolTip1`.  \\n  \\n [!code-cs[ValidatingTypeSample#1](~/add/codesnippet/csharp/p-system.windows.forms.m_0_1.cs)]\\n [!code-vb[ValidatingTypeSample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_0_1.vb)]\"\n  syntax:\n    content: public Type ValidatingType { get; set; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> representing the data type used in validation. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.ValidatingType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.WndProc(System.Windows.Forms.Message@)\n  id: WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: WndProc(Message)\n  nameWithType: MaskedTextBox.WndProc(Message)\n  fullName: System.Windows.Forms.MaskedTextBox.WndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes Windows messages.\n  syntax:\n    content: protected override void WndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.MaskedTextBox.WndProc*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.MaskedTextBox.WordWrap\n  id: WordWrap\n  parent: System.Windows.Forms.MaskedTextBox\n  langs:\n  - csharp\n  name: WordWrap\n  nameWithType: MaskedTextBox.WordWrap\n  fullName: System.Windows.Forms.MaskedTextBox.WordWrap\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether a multiline text box control automatically wraps words to the beginning of the next line when necessary. This property is not supported by <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref>.\n  remarks: Because <xref:System.Windows.Forms.MaskedTextBox> does not support multiple lines of input, the WordWrap property is ignored.\n  syntax:\n    content: public bool WordWrap { get; set; }\n    return:\n      type: System.Boolean\n      description: The WordWrap property always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.MaskedTextBox.WordWrap*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: System.Windows.Forms.TextBoxBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Exception\n  isExternal: true\n  name: System.Exception\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Forms.MaskedTextBox.#ctor\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskedTextBox()\n  nameWithType: MaskedTextBox.MaskedTextBox()\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextBox()\n- uid: System.Windows.Forms.MaskedTextBox.#ctor(System.ComponentModel.MaskedTextProvider)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskedTextBox(MaskedTextProvider)\n  nameWithType: MaskedTextBox.MaskedTextBox(MaskedTextProvider)\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextBox(MaskedTextProvider)\n- uid: System.ComponentModel.MaskedTextProvider\n  parent: System.ComponentModel\n  isExternal: false\n  name: MaskedTextProvider\n  nameWithType: MaskedTextProvider\n  fullName: System.ComponentModel.MaskedTextProvider\n- uid: System.Windows.Forms.MaskedTextBox.#ctor(System.String)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskedTextBox(String)\n  nameWithType: MaskedTextBox.MaskedTextBox(String)\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextBox(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.MaskedTextBox.AcceptsTab\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AcceptsTab\n  nameWithType: MaskedTextBox.AcceptsTab\n  fullName: System.Windows.Forms.MaskedTextBox.AcceptsTab\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.MaskedTextBox.AcceptsTabChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AcceptsTabChanged\n  nameWithType: MaskedTextBox.AcceptsTabChanged\n  fullName: System.Windows.Forms.MaskedTextBox.AcceptsTabChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.MaskedTextBox.AllowPromptAsInput\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AllowPromptAsInput\n  nameWithType: MaskedTextBox.AllowPromptAsInput\n  fullName: System.Windows.Forms.MaskedTextBox.AllowPromptAsInput\n- uid: System.Windows.Forms.MaskedTextBox.AsciiOnly\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AsciiOnly\n  nameWithType: MaskedTextBox.AsciiOnly\n  fullName: System.Windows.Forms.MaskedTextBox.AsciiOnly\n- uid: System.Windows.Forms.MaskedTextBox.BeepOnError\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: BeepOnError\n  nameWithType: MaskedTextBox.BeepOnError\n  fullName: System.Windows.Forms.MaskedTextBox.BeepOnError\n- uid: System.Windows.Forms.MaskedTextBox.CanUndo\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CanUndo\n  nameWithType: MaskedTextBox.CanUndo\n  fullName: System.Windows.Forms.MaskedTextBox.CanUndo\n- uid: System.Windows.Forms.MaskedTextBox.ClearUndo\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ClearUndo()\n  nameWithType: MaskedTextBox.ClearUndo()\n  fullName: System.Windows.Forms.MaskedTextBox.ClearUndo()\n- uid: System.Windows.Forms.MaskedTextBox.CreateHandle\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CreateHandle()\n  nameWithType: MaskedTextBox.CreateHandle()\n  fullName: System.Windows.Forms.MaskedTextBox.CreateHandle()\n- uid: System.Windows.Forms.MaskedTextBox.CreateParams\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CreateParams\n  nameWithType: MaskedTextBox.CreateParams\n  fullName: System.Windows.Forms.MaskedTextBox.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.MaskedTextBox.Culture\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Culture\n  nameWithType: MaskedTextBox.Culture\n  fullName: System.Windows.Forms.MaskedTextBox.Culture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CutCopyMaskFormat\n  nameWithType: MaskedTextBox.CutCopyMaskFormat\n  fullName: System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat\n- uid: System.Windows.Forms.MaskFormat\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MaskFormat\n  nameWithType: MaskFormat\n  fullName: System.Windows.Forms.MaskFormat\n- uid: System.Windows.Forms.MaskedTextBox.FormatProvider\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: FormatProvider\n  nameWithType: MaskedTextBox.FormatProvider\n  fullName: System.Windows.Forms.MaskedTextBox.FormatProvider\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: true\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Forms.MaskedTextBox.GetCharFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetCharFromPosition(Point)\n  nameWithType: MaskedTextBox.GetCharFromPosition(Point)\n  fullName: System.Windows.Forms.MaskedTextBox.GetCharFromPosition(Point)\n- uid: System.Char\n  parent: System\n  isExternal: true\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetCharIndexFromPosition(Point)\n  nameWithType: MaskedTextBox.GetCharIndexFromPosition(Point)\n  fullName: System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(Point)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetFirstCharIndexFromLine(Int32)\n  nameWithType: MaskedTextBox.GetFirstCharIndexFromLine(Int32)\n  fullName: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(Int32)\n- uid: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetFirstCharIndexOfCurrentLine()\n  nameWithType: MaskedTextBox.GetFirstCharIndexOfCurrentLine()\n  fullName: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine()\n- uid: System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetLineFromCharIndex(Int32)\n  nameWithType: MaskedTextBox.GetLineFromCharIndex(Int32)\n  fullName: System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(Int32)\n- uid: System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetPositionFromCharIndex(Int32)\n  nameWithType: MaskedTextBox.GetPositionFromCharIndex(Int32)\n  fullName: System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(Int32)\n- uid: System.Windows.Forms.MaskedTextBox.HidePromptOnLeave\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: HidePromptOnLeave\n  nameWithType: MaskedTextBox.HidePromptOnLeave\n  fullName: System.Windows.Forms.MaskedTextBox.HidePromptOnLeave\n- uid: System.Windows.Forms.MaskedTextBox.InsertKeyMode\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: InsertKeyMode\n  nameWithType: MaskedTextBox.InsertKeyMode\n  fullName: System.Windows.Forms.MaskedTextBox.InsertKeyMode\n- uid: System.Windows.Forms.InsertKeyMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InsertKeyMode\n  nameWithType: InsertKeyMode\n  fullName: System.Windows.Forms.InsertKeyMode\n- uid: System.Windows.Forms.MaskedTextBox.IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: IsInputKey(Keys)\n  nameWithType: MaskedTextBox.IsInputKey(Keys)\n  fullName: System.Windows.Forms.MaskedTextBox.IsInputKey(Keys)\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.MaskedTextBox.IsOverwriteMode\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: IsOverwriteMode\n  nameWithType: MaskedTextBox.IsOverwriteMode\n  fullName: System.Windows.Forms.MaskedTextBox.IsOverwriteMode\n- uid: System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: IsOverwriteModeChanged\n  nameWithType: MaskedTextBox.IsOverwriteModeChanged\n  fullName: System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged\n- uid: System.Windows.Forms.MaskedTextBox.Lines\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Lines\n  nameWithType: MaskedTextBox.Lines\n  fullName: System.Windows.Forms.MaskedTextBox.Lines\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.MaskedTextBox.Mask\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Mask\n  nameWithType: MaskedTextBox.Mask\n  fullName: System.Windows.Forms.MaskedTextBox.Mask\n- uid: System.Windows.Forms.MaskedTextBox.MaskChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskChanged\n  nameWithType: MaskedTextBox.MaskChanged\n  fullName: System.Windows.Forms.MaskedTextBox.MaskChanged\n- uid: System.Windows.Forms.MaskedTextBox.MaskCompleted\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskCompleted\n  nameWithType: MaskedTextBox.MaskCompleted\n  fullName: System.Windows.Forms.MaskedTextBox.MaskCompleted\n- uid: System.Windows.Forms.MaskedTextBox.MaskedTextProvider\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskedTextProvider\n  nameWithType: MaskedTextBox.MaskedTextProvider\n  fullName: System.Windows.Forms.MaskedTextBox.MaskedTextProvider\n- uid: System.Windows.Forms.MaskedTextBox.MaskFull\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskFull\n  nameWithType: MaskedTextBox.MaskFull\n  fullName: System.Windows.Forms.MaskedTextBox.MaskFull\n- uid: System.Windows.Forms.MaskedTextBox.MaskInputRejected\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskInputRejected\n  nameWithType: MaskedTextBox.MaskInputRejected\n  fullName: System.Windows.Forms.MaskedTextBox.MaskInputRejected\n- uid: System.Windows.Forms.MaskInputRejectedEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MaskInputRejectedEventHandler\n  nameWithType: MaskInputRejectedEventHandler\n  fullName: System.Windows.Forms.MaskInputRejectedEventHandler\n- uid: System.Windows.Forms.MaskedTextBox.MaxLength\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaxLength\n  nameWithType: MaskedTextBox.MaxLength\n  fullName: System.Windows.Forms.MaskedTextBox.MaxLength\n- uid: System.Windows.Forms.MaskedTextBox.Multiline\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Multiline\n  nameWithType: MaskedTextBox.Multiline\n  fullName: System.Windows.Forms.MaskedTextBox.Multiline\n- uid: System.Windows.Forms.MaskedTextBox.MultilineChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MultilineChanged\n  nameWithType: MaskedTextBox.MultilineChanged\n  fullName: System.Windows.Forms.MaskedTextBox.MultilineChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnBackColorChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnBackColorChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.MaskedTextBox.OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnHandleCreated(EventArgs)\n  nameWithType: MaskedTextBox.OnHandleCreated(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnHandleCreated(EventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnIsOverwriteModeChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnIsOverwriteModeChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(EventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: MaskedTextBox.OnKeyDown(KeyEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Forms.KeyEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Forms.KeyEventArgs\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnKeyPress(KeyPressEventArgs)\n  nameWithType: MaskedTextBox.OnKeyPress(KeyPressEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnKeyPress(KeyPressEventArgs)\n- uid: System.Windows.Forms.KeyPressEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: KeyPressEventArgs\n  nameWithType: KeyPressEventArgs\n  fullName: System.Windows.Forms.KeyPressEventArgs\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: MaskedTextBox.OnKeyUp(KeyEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnMaskChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnMaskChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnMaskChanged(EventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnMultilineChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnMultilineChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnMultilineChanged(EventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnTextAlignChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnTextAlignChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(EventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnTextChanged(EventArgs)\n  nameWithType: MaskedTextBox.OnTextChanged(EventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnTextChanged(EventArgs)\n- uid: System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnValidating(CancelEventArgs)\n  nameWithType: MaskedTextBox.OnValidating(CancelEventArgs)\n  fullName: System.Windows.Forms.MaskedTextBox.OnValidating(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: true\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.MaskedTextBox.PasswordChar\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: PasswordChar\n  nameWithType: MaskedTextBox.PasswordChar\n  fullName: System.Windows.Forms.MaskedTextBox.PasswordChar\n- uid: System.Windows.Forms.MaskedTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ProcessCmdKey(Message,Keys)\n  nameWithType: MaskedTextBox.ProcessCmdKey(Message,Keys)\n  fullName: System.Windows.Forms.MaskedTextBox.ProcessCmdKey(Message,Keys)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ProcessKeyMessage(Message)\n  nameWithType: MaskedTextBox.ProcessKeyMessage(Message)\n  fullName: System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(Message)\n- uid: System.Windows.Forms.MaskedTextBox.PromptChar\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: PromptChar\n  nameWithType: MaskedTextBox.PromptChar\n  fullName: System.Windows.Forms.MaskedTextBox.PromptChar\n- uid: System.Windows.Forms.MaskedTextBox.ReadOnly\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ReadOnly\n  nameWithType: MaskedTextBox.ReadOnly\n  fullName: System.Windows.Forms.MaskedTextBox.ReadOnly\n- uid: System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: RejectInputOnFirstFailure\n  nameWithType: MaskedTextBox.RejectInputOnFirstFailure\n  fullName: System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure\n- uid: System.Windows.Forms.MaskedTextBox.ResetOnPrompt\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ResetOnPrompt\n  nameWithType: MaskedTextBox.ResetOnPrompt\n  fullName: System.Windows.Forms.MaskedTextBox.ResetOnPrompt\n- uid: System.Windows.Forms.MaskedTextBox.ResetOnSpace\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ResetOnSpace\n  nameWithType: MaskedTextBox.ResetOnSpace\n  fullName: System.Windows.Forms.MaskedTextBox.ResetOnSpace\n- uid: System.Windows.Forms.MaskedTextBox.ScrollToCaret\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ScrollToCaret()\n  nameWithType: MaskedTextBox.ScrollToCaret()\n  fullName: System.Windows.Forms.MaskedTextBox.ScrollToCaret()\n- uid: System.Windows.Forms.MaskedTextBox.SelectedText\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: SelectedText\n  nameWithType: MaskedTextBox.SelectedText\n  fullName: System.Windows.Forms.MaskedTextBox.SelectedText\n- uid: System.Windows.Forms.MaskedTextBox.SkipLiterals\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: SkipLiterals\n  nameWithType: MaskedTextBox.SkipLiterals\n  fullName: System.Windows.Forms.MaskedTextBox.SkipLiterals\n- uid: System.Windows.Forms.MaskedTextBox.Text\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Text\n  nameWithType: MaskedTextBox.Text\n  fullName: System.Windows.Forms.MaskedTextBox.Text\n- uid: System.Windows.Forms.MaskedTextBox.TextAlign\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextAlign\n  nameWithType: MaskedTextBox.TextAlign\n  fullName: System.Windows.Forms.MaskedTextBox.TextAlign\n- uid: System.Windows.Forms.HorizontalAlignment\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HorizontalAlignment\n  nameWithType: HorizontalAlignment\n  fullName: System.Windows.Forms.HorizontalAlignment\n- uid: System.Windows.Forms.MaskedTextBox.TextAlignChanged\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextAlignChanged\n  nameWithType: MaskedTextBox.TextAlignChanged\n  fullName: System.Windows.Forms.MaskedTextBox.TextAlignChanged\n- uid: System.Windows.Forms.MaskedTextBox.TextLength\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextLength\n  nameWithType: MaskedTextBox.TextLength\n  fullName: System.Windows.Forms.MaskedTextBox.TextLength\n- uid: System.Windows.Forms.MaskedTextBox.TextMaskFormat\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextMaskFormat\n  nameWithType: MaskedTextBox.TextMaskFormat\n  fullName: System.Windows.Forms.MaskedTextBox.TextMaskFormat\n- uid: System.Windows.Forms.MaskedTextBox.ToString\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ToString()\n  nameWithType: MaskedTextBox.ToString()\n  fullName: System.Windows.Forms.MaskedTextBox.ToString()\n- uid: System.Windows.Forms.MaskedTextBox.TypeValidationCompleted\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TypeValidationCompleted\n  nameWithType: MaskedTextBox.TypeValidationCompleted\n  fullName: System.Windows.Forms.MaskedTextBox.TypeValidationCompleted\n- uid: System.Windows.Forms.TypeValidationEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: TypeValidationEventHandler\n  nameWithType: TypeValidationEventHandler\n  fullName: System.Windows.Forms.TypeValidationEventHandler\n- uid: System.Windows.Forms.MaskedTextBox.Undo\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Undo()\n  nameWithType: MaskedTextBox.Undo()\n  fullName: System.Windows.Forms.MaskedTextBox.Undo()\n- uid: System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: UseSystemPasswordChar\n  nameWithType: MaskedTextBox.UseSystemPasswordChar\n  fullName: System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar\n- uid: System.Windows.Forms.MaskedTextBox.ValidateText\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ValidateText()\n  nameWithType: MaskedTextBox.ValidateText()\n  fullName: System.Windows.Forms.MaskedTextBox.ValidateText()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.MaskedTextBox.ValidatingType\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ValidatingType\n  nameWithType: MaskedTextBox.ValidatingType\n  fullName: System.Windows.Forms.MaskedTextBox.ValidatingType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Forms.MaskedTextBox.WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: WndProc(Message)\n  nameWithType: MaskedTextBox.WndProc(Message)\n  fullName: System.Windows.Forms.MaskedTextBox.WndProc(Message)\n- uid: System.Windows.Forms.MaskedTextBox.WordWrap\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: WordWrap\n  nameWithType: MaskedTextBox.WordWrap\n  fullName: System.Windows.Forms.MaskedTextBox.WordWrap\n- uid: System.Windows.Forms.MaskedTextBox.#ctor*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskedTextBox\n  nameWithType: MaskedTextBox.MaskedTextBox\n- uid: System.Windows.Forms.MaskedTextBox.AcceptsTab*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AcceptsTab\n  nameWithType: MaskedTextBox.AcceptsTab\n- uid: System.Windows.Forms.MaskedTextBox.AllowPromptAsInput*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AllowPromptAsInput\n  nameWithType: MaskedTextBox.AllowPromptAsInput\n- uid: System.Windows.Forms.MaskedTextBox.AsciiOnly*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: AsciiOnly\n  nameWithType: MaskedTextBox.AsciiOnly\n- uid: System.Windows.Forms.MaskedTextBox.BeepOnError*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: BeepOnError\n  nameWithType: MaskedTextBox.BeepOnError\n- uid: System.Windows.Forms.MaskedTextBox.CanUndo*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CanUndo\n  nameWithType: MaskedTextBox.CanUndo\n- uid: System.Windows.Forms.MaskedTextBox.ClearUndo*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ClearUndo\n  nameWithType: MaskedTextBox.ClearUndo\n- uid: System.Windows.Forms.MaskedTextBox.CreateHandle*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CreateHandle\n  nameWithType: MaskedTextBox.CreateHandle\n- uid: System.Windows.Forms.MaskedTextBox.CreateParams*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CreateParams\n  nameWithType: MaskedTextBox.CreateParams\n- uid: System.Windows.Forms.MaskedTextBox.Culture*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Culture\n  nameWithType: MaskedTextBox.Culture\n- uid: System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: CutCopyMaskFormat\n  nameWithType: MaskedTextBox.CutCopyMaskFormat\n- uid: System.Windows.Forms.MaskedTextBox.FormatProvider*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: FormatProvider\n  nameWithType: MaskedTextBox.FormatProvider\n- uid: System.Windows.Forms.MaskedTextBox.GetCharFromPosition*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetCharFromPosition\n  nameWithType: MaskedTextBox.GetCharFromPosition\n- uid: System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetCharIndexFromPosition\n  nameWithType: MaskedTextBox.GetCharIndexFromPosition\n- uid: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetFirstCharIndexFromLine\n  nameWithType: MaskedTextBox.GetFirstCharIndexFromLine\n- uid: System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetFirstCharIndexOfCurrentLine\n  nameWithType: MaskedTextBox.GetFirstCharIndexOfCurrentLine\n- uid: System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetLineFromCharIndex\n  nameWithType: MaskedTextBox.GetLineFromCharIndex\n- uid: System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: GetPositionFromCharIndex\n  nameWithType: MaskedTextBox.GetPositionFromCharIndex\n- uid: System.Windows.Forms.MaskedTextBox.HidePromptOnLeave*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: HidePromptOnLeave\n  nameWithType: MaskedTextBox.HidePromptOnLeave\n- uid: System.Windows.Forms.MaskedTextBox.InsertKeyMode*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: InsertKeyMode\n  nameWithType: MaskedTextBox.InsertKeyMode\n- uid: System.Windows.Forms.MaskedTextBox.IsInputKey*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: IsInputKey\n  nameWithType: MaskedTextBox.IsInputKey\n- uid: System.Windows.Forms.MaskedTextBox.IsOverwriteMode*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: IsOverwriteMode\n  nameWithType: MaskedTextBox.IsOverwriteMode\n- uid: System.Windows.Forms.MaskedTextBox.Lines*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Lines\n  nameWithType: MaskedTextBox.Lines\n- uid: System.Windows.Forms.MaskedTextBox.Mask*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Mask\n  nameWithType: MaskedTextBox.Mask\n- uid: System.Windows.Forms.MaskedTextBox.MaskCompleted*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskCompleted\n  nameWithType: MaskedTextBox.MaskCompleted\n- uid: System.Windows.Forms.MaskedTextBox.MaskedTextProvider*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskedTextProvider\n  nameWithType: MaskedTextBox.MaskedTextProvider\n- uid: System.Windows.Forms.MaskedTextBox.MaskFull*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaskFull\n  nameWithType: MaskedTextBox.MaskFull\n- uid: System.Windows.Forms.MaskedTextBox.MaxLength*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: MaxLength\n  nameWithType: MaskedTextBox.MaxLength\n- uid: System.Windows.Forms.MaskedTextBox.Multiline*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Multiline\n  nameWithType: MaskedTextBox.Multiline\n- uid: System.Windows.Forms.MaskedTextBox.OnBackColorChanged*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnBackColorChanged\n  nameWithType: MaskedTextBox.OnBackColorChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnHandleCreated*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnHandleCreated\n  nameWithType: MaskedTextBox.OnHandleCreated\n- uid: System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnIsOverwriteModeChanged\n  nameWithType: MaskedTextBox.OnIsOverwriteModeChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyDown*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnKeyDown\n  nameWithType: MaskedTextBox.OnKeyDown\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyPress*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnKeyPress\n  nameWithType: MaskedTextBox.OnKeyPress\n- uid: System.Windows.Forms.MaskedTextBox.OnKeyUp*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnKeyUp\n  nameWithType: MaskedTextBox.OnKeyUp\n- uid: System.Windows.Forms.MaskedTextBox.OnMaskChanged*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnMaskChanged\n  nameWithType: MaskedTextBox.OnMaskChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnMultilineChanged*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnMultilineChanged\n  nameWithType: MaskedTextBox.OnMultilineChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnTextAlignChanged*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnTextAlignChanged\n  nameWithType: MaskedTextBox.OnTextAlignChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnTextChanged*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnTextChanged\n  nameWithType: MaskedTextBox.OnTextChanged\n- uid: System.Windows.Forms.MaskedTextBox.OnValidating*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: OnValidating\n  nameWithType: MaskedTextBox.OnValidating\n- uid: System.Windows.Forms.MaskedTextBox.PasswordChar*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: PasswordChar\n  nameWithType: MaskedTextBox.PasswordChar\n- uid: System.Windows.Forms.MaskedTextBox.ProcessCmdKey*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ProcessCmdKey\n  nameWithType: MaskedTextBox.ProcessCmdKey\n- uid: System.Windows.Forms.MaskedTextBox.ProcessKeyMessage*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ProcessKeyMessage\n  nameWithType: MaskedTextBox.ProcessKeyMessage\n- uid: System.Windows.Forms.MaskedTextBox.PromptChar*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: PromptChar\n  nameWithType: MaskedTextBox.PromptChar\n- uid: System.Windows.Forms.MaskedTextBox.ReadOnly*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ReadOnly\n  nameWithType: MaskedTextBox.ReadOnly\n- uid: System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: RejectInputOnFirstFailure\n  nameWithType: MaskedTextBox.RejectInputOnFirstFailure\n- uid: System.Windows.Forms.MaskedTextBox.ResetOnPrompt*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ResetOnPrompt\n  nameWithType: MaskedTextBox.ResetOnPrompt\n- uid: System.Windows.Forms.MaskedTextBox.ResetOnSpace*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ResetOnSpace\n  nameWithType: MaskedTextBox.ResetOnSpace\n- uid: System.Windows.Forms.MaskedTextBox.ScrollToCaret*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ScrollToCaret\n  nameWithType: MaskedTextBox.ScrollToCaret\n- uid: System.Windows.Forms.MaskedTextBox.SelectedText*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: SelectedText\n  nameWithType: MaskedTextBox.SelectedText\n- uid: System.Windows.Forms.MaskedTextBox.SkipLiterals*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: SkipLiterals\n  nameWithType: MaskedTextBox.SkipLiterals\n- uid: System.Windows.Forms.MaskedTextBox.Text*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Text\n  nameWithType: MaskedTextBox.Text\n- uid: System.Windows.Forms.MaskedTextBox.TextAlign*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextAlign\n  nameWithType: MaskedTextBox.TextAlign\n- uid: System.Windows.Forms.MaskedTextBox.TextLength*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextLength\n  nameWithType: MaskedTextBox.TextLength\n- uid: System.Windows.Forms.MaskedTextBox.TextMaskFormat*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: TextMaskFormat\n  nameWithType: MaskedTextBox.TextMaskFormat\n- uid: System.Windows.Forms.MaskedTextBox.ToString*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ToString\n  nameWithType: MaskedTextBox.ToString\n- uid: System.Windows.Forms.MaskedTextBox.Undo*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: Undo\n  nameWithType: MaskedTextBox.Undo\n- uid: System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: UseSystemPasswordChar\n  nameWithType: MaskedTextBox.UseSystemPasswordChar\n- uid: System.Windows.Forms.MaskedTextBox.ValidateText*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ValidateText\n  nameWithType: MaskedTextBox.ValidateText\n- uid: System.Windows.Forms.MaskedTextBox.ValidatingType*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: ValidatingType\n  nameWithType: MaskedTextBox.ValidatingType\n- uid: System.Windows.Forms.MaskedTextBox.WndProc*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: WndProc\n  nameWithType: MaskedTextBox.WndProc\n- uid: System.Windows.Forms.MaskedTextBox.WordWrap*\n  parent: System.Windows.Forms.MaskedTextBox\n  isExternal: false\n  name: WordWrap\n  nameWithType: MaskedTextBox.WordWrap\n"}