{"nodes":[{"pos":[1172,1209],"content":"Represents the value of a Via header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the value of a Via header.","pos":[0,37]}]},{"pos":[1866,1966],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> class."},{"pos":[2144,2190],"content":"The protocol version of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol version of the received protocol.","pos":[0,46]}]},{"pos":[2257,2320],"content":"The host and port that the request or response was received by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host and port that the request or response was received by.","pos":[0,63]}]},{"pos":[2943,3043],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> class."},{"pos":[3242,3288],"content":"The protocol version of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol version of the received protocol.","pos":[0,46]}]},{"pos":[3355,3418],"content":"The host and port that the request or response was received by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host and port that the request or response was received by.","pos":[0,63]}]},{"pos":[3487,3530],"content":"The protocol name of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol name of the received protocol.","pos":[0,43]}]},{"pos":[4202,4302],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> class."},{"pos":[4517,4563],"content":"The protocol version of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol version of the received protocol.","pos":[0,46]}]},{"pos":[4630,4693],"content":"The host and port that the request or response was received by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host and port that the request or response was received by.","pos":[0,63]}]},{"pos":[4762,4805],"content":"The protocol name of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol name of the received protocol.","pos":[0,43]}]},{"pos":[4869,4951],"content":"The comment field used to identify the software of the recipient proxy or gateway.","needQuote":true,"needEscape":true,"nodes":[{"content":"The comment field used to identify the software of the recipient proxy or gateway.","pos":[0,82]}]},{"pos":[5400,5487],"content":"Gets the comment field used to identify the software of the recipient proxy or gateway.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the comment field used to identify the software of the recipient proxy or gateway.","pos":[0,87]}]},{"pos":[5599,5681],"content":"The comment field used to identify the software of the recipient proxy or gateway.","needQuote":true,"needEscape":true,"nodes":[{"content":"The comment field used to identify the software of the recipient proxy or gateway.","pos":[0,82]}]},{"pos":[6179,6323],"content":"Determines whether the specified &lt;xref:System.Object&gt; is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>object.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref:System.Object> is equal to the current <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref>object."},{"pos":[6464,6510],"content":"The object to compare with the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with the current object.","pos":[0,46]}]},{"pos":[6569,6774],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7248,7348],"content":"Serves as a hash function for an <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Serves as a hash function for an <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> object."},{"pos":[7361,7627],"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.       The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[0,264],"nodes":[{"content":"A hash code is a numeric value that is used to identify an object during equality testing.","pos":[0,90]},{"content":"It can also serve as an index for an object in a collection.","pos":[91,151]},{"content":"The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.","pos":[158,264]}]}]},{"pos":[7763,7806],"content":"Returns a hash code for the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a hash code for the current object.","pos":[0,43]}]},{"pos":[8303,8396],"content":"Converts a string to an <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Converts a string to an <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> instance."},{"pos":[8572,8626],"content":"A string that represents via header value information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents via header value information.","pos":[0,54]}]},{"pos":[8709,8780],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> instance."},{"pos":[8955,9050],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference.","needQuote":true,"needEscape":true,"source":"<code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference."},{"pos":[9141,9202],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is not valid via header value information.","needQuote":true,"needEscape":true,"source":"<code>input</code> is not valid via header value information."},{"pos":[9601,9649],"content":"Gets the protocol name of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the protocol name of the received protocol.","pos":[0,48]}]},{"pos":[9766,9784],"content":"The protocol name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol name.","pos":[0,18]}]},{"pos":[10280,10331],"content":"Gets the protocol version of the received protocol.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the protocol version of the received protocol.","pos":[0,51]}]},{"pos":[10451,10472],"content":"The protocol version.","needQuote":true,"needEscape":true,"nodes":[{"content":"The protocol version.","pos":[0,21]}]},{"pos":[10946,11014],"content":"Gets the host and port that the request or response was received by.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the host and port that the request or response was received by.","pos":[0,68]}]},{"pos":[11026,11255],"content":"The Via general-header field must be used by gateways and proxies to indicate the intermediate protocols and recipients between the user agent and the server on requests, and between the origin server and the client on responses.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Via general-header field must be used by gateways and proxies to indicate the intermediate protocols and recipients between the user agent and the server on requests, and between the origin server and the client on responses.","pos":[0,229]}]},{"pos":[11370,11433],"content":"The host and port that the request or response was received by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The host and port that the request or response was received by.","pos":[0,63]}]},{"pos":[11985,12105],"content":"Creates a new object that is a copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> instance."},{"pos":[12233,12264],"content":"A copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current instance.","pos":[0,31]}]},{"pos":[12740,12852],"content":"Returns a string that represents the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a string that represents the current <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> object."},{"pos":[12988,13032],"content":"A string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the current object.","pos":[0,44]}]},{"pos":[13666,13775],"content":"Determines whether a string is valid <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Determines whether a string is valid <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> information."},{"pos":[13976,13999],"content":"The string to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to validate.","pos":[0,23]}]},{"pos":[14092,14178],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> version of the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> version of the string."},{"pos":[14237,14476],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p2\">&lt;/code&gt;</ept> is valid <bpt id=\"p3\">&lt;xref href=\"System.Net.Http.Headers.ViaHeaderValue\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.ViaHeaderValue\n  id: ViaHeaderValue\n  children:\n  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)\n  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)\n  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)\n  - System.Net.Http.Headers.ViaHeaderValue.Comment\n  - System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.ViaHeaderValue.GetHashCode\n  - System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.ViaHeaderValue.ProtocolName\n  - System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion\n  - System.Net.Http.Headers.ViaHeaderValue.ReceivedBy\n  - System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone\n  - System.Net.Http.Headers.ViaHeaderValue.ToString\n  - System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)\n  langs:\n  - csharp\n  name: ViaHeaderValue\n  nameWithType: ViaHeaderValue\n  fullName: System.Net.Http.Headers.ViaHeaderValue\n  type: Class\n  summary: Represents the value of a Via header.\n  syntax:\n    content: 'public class ViaHeaderValue : ICloneable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ViaHeaderValue(String,String)\n  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> class.\n  syntax:\n    content: public ViaHeaderValue (string protocolVersion, string receivedBy);\n    parameters:\n    - id: protocolVersion\n      type: System.String\n      description: The protocol version of the received protocol.\n    - id: receivedBy\n      type: System.String\n      description: The host and port that the request or response was received by.\n  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ViaHeaderValue(String,String,String)\n  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> class.\n  syntax:\n    content: public ViaHeaderValue (string protocolVersion, string receivedBy, string protocolName);\n    parameters:\n    - id: protocolVersion\n      type: System.String\n      description: The protocol version of the received protocol.\n    - id: receivedBy\n      type: System.String\n      description: The host and port that the request or response was received by.\n    - id: protocolName\n      type: System.String\n      description: The protocol name of the received protocol.\n  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String)'\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ViaHeaderValue(String,String,String,String)\n  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String,String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String,String)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> class.\n  syntax:\n    content: public ViaHeaderValue (string protocolVersion, string receivedBy, string protocolName, string comment);\n    parameters:\n    - id: protocolVersion\n      type: System.String\n      description: The protocol version of the received protocol.\n    - id: receivedBy\n      type: System.String\n      description: The host and port that the request or response was received by.\n    - id: protocolName\n      type: System.String\n      description: The protocol name of the received protocol.\n    - id: comment\n      type: System.String\n      description: The comment field used to identify the software of the recipient proxy or gateway.\n  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.Comment\n  id: Comment\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: Comment\n  nameWithType: ViaHeaderValue.Comment\n  fullName: System.Net.Http.Headers.ViaHeaderValue.Comment\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets the comment field used to identify the software of the recipient proxy or gateway.\n  syntax:\n    content: public string Comment { get; }\n    return:\n      type: System.String\n      description: The comment field used to identify the software of the recipient proxy or gateway.\n  overload: System.Net.Http.Headers.ViaHeaderValue.Comment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ViaHeaderValue.Equals(Object)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether the specified <xref:System.Object> is equal to the current <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref>object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref:System.Object> is equal to the current object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.ViaHeaderValue.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ViaHeaderValue.GetHashCode()\n  fullName: System.Net.Http.Headers.ViaHeaderValue.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Serves as a hash function for an <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> object.\n  remarks: \"A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.  \\n  \\n The GetHashCode method is suitable for use in hashing algorithms and data structures such as a hash table.\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Returns a hash code for the current object.\n  overload: System.Net.Http.Headers.ViaHeaderValue.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: ViaHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.Parse(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Converts a string to an <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> instance.\n  syntax:\n    content: public static System.Net.Http.Headers.ViaHeaderValue Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that represents via header value information.\n    return:\n      type: System.Net.Http.Headers.ViaHeaderValue\n      description: A <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> instance.\n  overload: System.Net.Http.Headers.ViaHeaderValue.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>input</code> is not valid via header value information.\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName\n  id: ProtocolName\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ProtocolName\n  nameWithType: ViaHeaderValue.ProtocolName\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolName\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets the protocol name of the received protocol.\n  syntax:\n    content: public string ProtocolName { get; }\n    return:\n      type: System.String\n      description: The protocol name.\n  overload: System.Net.Http.Headers.ViaHeaderValue.ProtocolName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion\n  id: ProtocolVersion\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ProtocolVersion\n  nameWithType: ViaHeaderValue.ProtocolVersion\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets the protocol version of the received protocol.\n  syntax:\n    content: public string ProtocolVersion { get; }\n    return:\n      type: System.String\n      description: The protocol version.\n  overload: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy\n  id: ReceivedBy\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ReceivedBy\n  nameWithType: ViaHeaderValue.ReceivedBy\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Gets the host and port that the request or response was received by.\n  remarks: The Via general-header field must be used by gateways and proxies to indicate the intermediate protocols and recipients between the user agent and the server on requests, and between the origin server and the client on responses.\n  syntax:\n    content: public string ReceivedBy { get; }\n    return:\n      type: System.String\n      description: The host and port that the request or response was received by.\n  overload: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: ViaHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> instance.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A copy of the current instance.\n  overload: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ViaHeaderValue.ToString()\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Returns a string that represents the current <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current object.\n  overload: System.Net.Http.Headers.ViaHeaderValue.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  langs:\n  - csharp\n  name: TryParse(String,ViaHeaderValue)\n  nameWithType: ViaHeaderValue.TryParse(String,ViaHeaderValue)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.TryParse(String,ViaHeaderValue)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether a string is valid <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> information.\n  syntax:\n    content: public static bool TryParse (string input, out System.Net.Http.Headers.ViaHeaderValue parsedValue);\n    parameters:\n    - id: input\n      type: System.String\n      description: The string to validate.\n    - id: parsedValue\n      type: System.Net.Http.Headers.ViaHeaderValue\n      description: The <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> version of the string.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.ViaHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.ViaHeaderValue.TryParse*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ViaHeaderValue(String,String)\n  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ViaHeaderValue(String,String,String)\n  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String)\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ViaHeaderValue(String,String,String,String)\n  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String,String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String,String)\n- uid: System.Net.Http.Headers.ViaHeaderValue.Comment\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: Comment\n  nameWithType: ViaHeaderValue.Comment\n  fullName: System.Net.Http.Headers.ViaHeaderValue.Comment\n- uid: System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ViaHeaderValue.Equals(Object)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ViaHeaderValue.GetHashCode()\n  fullName: System.Net.Http.Headers.ViaHeaderValue.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: Parse(String)\n  nameWithType: ViaHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.ViaHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: ViaHeaderValue\n  nameWithType: ViaHeaderValue\n  fullName: System.Net.Http.Headers.ViaHeaderValue\n- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ProtocolName\n  nameWithType: ViaHeaderValue.ProtocolName\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolName\n- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: ViaHeaderValue.ProtocolVersion\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion\n- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ReceivedBy\n  nameWithType: ViaHeaderValue.ReceivedBy\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy\n- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: ViaHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone()\n- uid: System.Net.Http.Headers.ViaHeaderValue.ToString\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ToString()\n  nameWithType: ViaHeaderValue.ToString()\n  fullName: System.Net.Http.Headers.ViaHeaderValue.ToString()\n- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: TryParse(String,ViaHeaderValue)\n  nameWithType: ViaHeaderValue.TryParse(String,ViaHeaderValue)\n  fullName: System.Net.Http.Headers.ViaHeaderValue.TryParse(String,ViaHeaderValue)\n- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ViaHeaderValue\n  nameWithType: ViaHeaderValue.ViaHeaderValue\n- uid: System.Net.Http.Headers.ViaHeaderValue.Comment*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: Comment\n  nameWithType: ViaHeaderValue.Comment\n- uid: System.Net.Http.Headers.ViaHeaderValue.Equals*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: Equals\n  nameWithType: ViaHeaderValue.Equals\n- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ViaHeaderValue.GetHashCode\n- uid: System.Net.Http.Headers.ViaHeaderValue.Parse*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: Parse\n  nameWithType: ViaHeaderValue.Parse\n- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ProtocolName\n  nameWithType: ViaHeaderValue.ProtocolName\n- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ProtocolVersion\n  nameWithType: ViaHeaderValue.ProtocolVersion\n- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ReceivedBy\n  nameWithType: ViaHeaderValue.ReceivedBy\n- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: ViaHeaderValue.System.ICloneable.Clone\n- uid: System.Net.Http.Headers.ViaHeaderValue.ToString*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: ToString\n  nameWithType: ViaHeaderValue.ToString\n- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse*\n  parent: System.Net.Http.Headers.ViaHeaderValue\n  isExternal: false\n  name: TryParse\n  nameWithType: ViaHeaderValue.TryParse\n"}