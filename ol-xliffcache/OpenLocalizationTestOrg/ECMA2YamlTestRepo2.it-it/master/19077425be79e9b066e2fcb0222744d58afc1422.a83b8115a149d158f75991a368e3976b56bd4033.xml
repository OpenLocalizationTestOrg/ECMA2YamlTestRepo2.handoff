{"nodes":[{"pos":[1731,1883],"content":"Configures the message-level security of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_WSFederationHttpBinding\" name=\"WSFederationHttpBinding\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> binding.","needQuote":true,"needEscape":true,"source":"Configures the message-level security of the <xref uid=\"langword_csharp_WSFederationHttpBinding\" name=\"WSFederationHttpBinding\" href=\"\"></xref> binding."},{"pos":[1895,2151],"content":"This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential.","pos":[0,256]}]},{"pos":[2816,2930],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.FederatedMessageSecurityOverHttp\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.FederatedMessageSecurityOverHttp\"></xref> class."},{"pos":[3574,3670],"content":"Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.","pos":[0,96]}]},{"pos":[3682,3925],"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions. It also describes various security capabilities of the service.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions. It also describes various security capabilities of the service.","pos":[0,243],"nodes":[{"content":"The &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt; object that is returned contains numerous properties that specify security algorithms to use in specific conditions.","pos":[0,179],"source":"The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions."},{"content":"It also describes various security capabilities of the service.","pos":[180,243]}]}]},{"pos":[4441,4601],"content":"A <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>. The default is <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,75],"source":"A <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>."},{"content":"The default is &lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*&gt;.","pos":[76,160],"source":" The default is <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>."}]},{"pos":[4799,4873],"content":"The value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5377,5507],"content":"Gets a collection of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for this binding.","needQuote":true,"needEscape":true,"source":"Gets a collection of the <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref> instances for this binding."},{"pos":[5520,6148],"content":"The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service. The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.  Services wishing to enforce required claim types are present should do using authorization policy.       On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the client’s request for an issued token.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service. The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.  Services wishing to enforce required claim types are present should do using authorization policy.       On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the client’s request for an issued token.","pos":[0,626],"nodes":[{"content":"The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service.","pos":[0,180]},{"content":"The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.","pos":[181,344]},{"content":"Services wishing to enforce required claim types are present should do using authorization policy.","pos":[346,444]},{"content":"On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the client’s request for an issued token.","pos":[451,626]}]}]},{"pos":[6765,6948],"content":"A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref>. The default is an empty collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,147],"source":"A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref>."},{"content":"The default is an empty collection.","pos":[148,183]}]},{"pos":[7572,7642],"content":"Gets or sets whether a security context requires being put into place.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets whether a security context requires being put into place.","pos":[0,70]}]},{"pos":[7775,7948],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if security context requires placing; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security context requires placing; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8520,8559],"content":"Specifies the type of key to be issued.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the type of key to be issued.","pos":[0,39]}]},{"pos":[8571,8748],"content":"Valid values of <xref:System.IdentityModel.Tokens.SecurityKeyType> are <xref:System.IdentityModel.Tokens.SecurityKeyType> and <xref:System.IdentityModel.Tokens.SecurityKeyType>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Valid values of &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt; are &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt; and &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;.","pos":[0,177],"source":"Valid values of <xref:System.IdentityModel.Tokens.SecurityKeyType> are <xref:System.IdentityModel.Tokens.SecurityKeyType> and <xref:System.IdentityModel.Tokens.SecurityKeyType>."}]},{"pos":[9247,9395],"content":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>. The default is <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,67],"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,148],"source":" The default is <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>."}]},{"pos":[9604,9694],"content":"The value is not a valid <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value is not a valid <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>."},{"pos":[10168,10249],"content":"Specifies the type of token which should be issued by the security token service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the type of token which should be issued by the security token service.","pos":[0,81]}]},{"pos":[10262,10588],"content":"This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service. On the client it controls the type which is sent to the security token service in the client’s request for an issued token.       The IssuedTokenType typically takes the form of a URI.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service. On the client it controls the type which is sent to the security token service in the client’s request for an issued token.       The IssuedTokenType typically takes the form of a URI.","pos":[0,324],"nodes":[{"content":"This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service.","pos":[0,139]},{"content":"On the client it controls the type which is sent to the security token service in the client’s request for an issued token.","pos":[140,263]},{"content":"The IssuedTokenType typically takes the form of a URI.","pos":[270,324]}]}]},{"pos":[11023,11195],"content":"The type of token to be issued. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which causes WCF to request a SAML security token from the STS.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of token to be issued.","pos":[0,31]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which causes WCF to request a SAML security token from the STS.","pos":[32,172],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which causes WCF to request a SAML security token from the STS."}]},{"pos":[11758,11862],"content":"Gets or sets the endpoint address of the security token service that issues credentials for the service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the endpoint address of the security token service that issues credentials for the service.","pos":[0,104]}]},{"pos":[11875,12547],"content":"This address is used as the endpoint for the security token service that issues credentials for the service. Services expose the issuer address in metadata if WSDL is enabled but make no other use of it. Clients use the issuer address to communicate with the security token service. If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.       Setting this value to `null` or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This address is used as the endpoint for the security token service that issues credentials for the service.","pos":[0,108]},{"content":"Services expose the issuer address in metadata if WSDL is enabled but make no other use of it.","pos":[109,203]},{"content":"Clients use the issuer address to communicate with the security token service.","pos":[204,282]},{"content":"If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.","pos":[283,472]},{"content":"Setting this value to <ph id=\"ph1\">`null`</ph> or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances.","pos":[479,670],"source":"       Setting this value to `null` or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances."}]},{"pos":[13031,13108],"content":"The <xref:System.ServiceModel.EndpointAddress> of the security token service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.EndpointAddress&gt; of the security token service.","pos":[0,77],"source":"The <xref:System.ServiceModel.EndpointAddress> of the security token service."}]},{"pos":[13669,13875],"content":"Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals &lt;xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*&gt;.","pos":[0,206],"source":"Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*>."}]},{"pos":[13888,14172],"content":"This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.       Note that this property does not need to be populated on the service, since it is only consumed by the client.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.       Note that this property does not need to be populated on the service, since it is only consumed by the client.","pos":[0,282],"nodes":[{"content":"This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.","pos":[0,165]},{"content":"Note that this property does not need to be populated on the service, since it is only consumed by the client.","pos":[172,282]}]}]},{"pos":[14658,14782],"content":"The <xref:System.ServiceModel.Channels.Binding> to be used by the client when communicating with the security token service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Binding&gt; to be used by the client when communicating with the security token service.","pos":[0,124],"source":"The <xref:System.ServiceModel.Channels.Binding> to be used by the client when communicating with the security token service."}]},{"pos":[15383,15479],"content":"Gets or sets the endpoint address for communicating with the security token service out of band.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the endpoint address for communicating with the security token service out of band.","pos":[0,96]}]},{"pos":[15491,15611],"content":"This address is used as the endpoint for the security token service that issues credentials for the service out of band.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This address is used as the endpoint for the security token service that issues credentials for the service out of band.","pos":[0,120]}]},{"pos":[16104,16226],"content":"The <xref:System.ServiceModel.Channels.Binding> to be used when communicating with the security token service out of band.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.ServiceModel.Channels.Binding&gt; to be used when communicating with the security token service out of band.","pos":[0,122],"source":"The <xref:System.ServiceModel.Channels.Binding> to be used when communicating with the security token service out of band."}]},{"pos":[16860,16954],"content":"Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.","pos":[0,94]}]},{"pos":[16967,17631],"content":"This property indicates whether the service certificate is negotiated automatically between the client and the service. If this property is `true`, then such negotiation occurs. If this property is `false`, then the service certificate must be specified at the client before communication with the service can occur.       Services must always specify a certificate.       If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property indicates whether the service certificate is negotiated automatically between the client and the service.","pos":[0,119]},{"content":"If this property is <ph id=\"ph1\">`true`</ph>, then such negotiation occurs.","pos":[120,177],"source":" If this property is `true`, then such negotiation occurs."},{"content":"If this property is <ph id=\"ph1\">`false`</ph>, then the service certificate must be specified at the client before communication with the service can occur.","pos":[178,316],"source":" If this property is `false`, then the service certificate must be specified at the client before communication with the service can occur."},{"content":"Services must always specify a certificate.","pos":[323,366]},{"content":"If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token.","pos":[373,660]}]},{"pos":[18072,18367],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service certificate is negotiated; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the service certificate is available out of band. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service certificate is negotiated; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the service certificate is available out of band.","pos":[0,218],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service certificate is negotiated; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the service certificate is available out of band."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[219,295],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[19025,19133],"content":"Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.","pos":[0,108]}]},{"pos":[19280,19460],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the algorithm suite should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the algorithm suite should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20156,20224],"content":"Returns that any existing claim type requirements can be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns that any existing claim type requirements can be serialized.","pos":[0,68]}]},{"pos":[20378,20553],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are requirements to serialize; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are requirements to serialize; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21271,21376],"content":"Returns an indication whether the security context is not the default and therefore should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an indication whether the security context is not the default and therefore should be serialized.","pos":[0,105]}]},{"pos":[21533,21705],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the context should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22371,22475],"content":"Returns an indication whether the issued key type is not the default and therefore should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an indication whether the issued key type is not the default and therefore should be serialized.","pos":[0,104]}]},{"pos":[22621,22790],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the type should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23510,23653],"content":"Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.","pos":[0,143]}]},{"pos":[23812,23984],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the process should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the process should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24697,24780],"content":"Returns an indication that any existing token request parameters can be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an indication that any existing token request parameters can be serialized.","pos":[0,83]}]},{"pos":[24935,25112],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there are parameters to be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are parameters to be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25742,25861],"content":"Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.","pos":[0,119]}]},{"pos":[25873,26046],"content":"The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token.","pos":[0,173]}]},{"pos":[26282,26394],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=\"System.Xml.XmlElement\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp\n  id: FederatedMessageSecurityOverHttp\n  children:\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters\n  - System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters\n  langs:\n  - csharp\n  name: FederatedMessageSecurityOverHttp\n  nameWithType: FederatedMessageSecurityOverHttp\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp\n  type: Class\n  summary: Configures the message-level security of the <xref uid=\"langword_csharp_WSFederationHttpBinding\" name=\"WSFederationHttpBinding\" href=\"\"></xref> binding.\n  remarks: This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential.\n  syntax:\n    content: public sealed class FederatedMessageSecurityOverHttp\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: FederatedMessageSecurityOverHttp()\n  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.FederatedMessageSecurityOverHttp\"></xref> class.\n  syntax:\n    content: public FederatedMessageSecurityOverHttp ();\n    parameters: []\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite\n  id: AlgorithmSuite\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: AlgorithmSuite\n  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.\n  remarks: The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions. It also describes various security capabilities of the service.\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#5](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_1_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#5](~/add/codesnippet/csharp/p-system.servicemodel.fe_1_1.cs)]\"\n  syntax:\n    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }\n    return:\n      type: System.ServiceModel.Security.SecurityAlgorithmSuite\n      description: A <xref href=\"System.ServiceModel.Security.SecurityAlgorithmSuite\"></xref>. The default is <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n  id: ClaimTypeRequirements\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ClaimTypeRequirements\n  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a collection of the <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref> instances for this binding.\n  remarks: \"The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service. The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.  Services wishing to enforce required claim types are present should do using authorization policy.  \\n  \\n On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the client’s request for an issued token.\"\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#11](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_5_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#11](~/add/codesnippet/csharp/p-system.servicemodel.fe_5_1.cs)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement> ClaimTypeRequirements { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.ClaimTypeRequirement}\n      description: A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=\"System.ServiceModel.Security.Tokens.ClaimTypeRequirement\"></xref>. The default is an empty collection.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext\n  id: EstablishSecurityContext\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: EstablishSecurityContext\n  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets whether a security context requires being put into place.\n  syntax:\n    content: public bool EstablishSecurityContext { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if security context requires placing; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType\n  id: IssuedKeyType\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: IssuedKeyType\n  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the type of key to be issued.\n  remarks: Valid values of <xref:System.IdentityModel.Tokens.SecurityKeyType> are <xref:System.IdentityModel.Tokens.SecurityKeyType> and <xref:System.IdentityModel.Tokens.SecurityKeyType>.\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#7](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_6_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#7](~/add/codesnippet/csharp/p-system.servicemodel.fe_6_1.cs)]\"\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyType IssuedKeyType { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyType\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>. The default is <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value is not a valid <xref href=\"System.IdentityModel.Tokens.SecurityKeyType\"></xref>.\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType\n  id: IssuedTokenType\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: IssuedTokenType\n  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the type of token which should be issued by the security token service.\n  remarks: \"This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service. On the client it controls the type which is sent to the security token service in the client’s request for an issued token.  \\n  \\n The IssuedTokenType typically takes the form of a URI.\"\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#4](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_2_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#4](~/add/codesnippet/csharp/p-system.servicemodel.fe_2_1.cs)]\"\n  syntax:\n    content: public string IssuedTokenType { get; set; }\n    return:\n      type: System.String\n      description: The type of token to be issued. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which causes WCF to request a SAML security token from the STS.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress\n  id: IssuerAddress\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: IssuerAddress\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the endpoint address of the security token service that issues credentials for the service.\n  remarks: \"This address is used as the endpoint for the security token service that issues credentials for the service. Services expose the issuer address in metadata if WSDL is enabled but make no other use of it. Clients use the issuer address to communicate with the security token service. If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.  \\n  \\n Setting this value to `null` or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances.\"\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_3_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.fe_3_1.cs)]\"\n  syntax:\n    content: public System.ServiceModel.EndpointAddress IssuerAddress { get; set; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref:System.ServiceModel.EndpointAddress> of the security token service.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding\n  id: IssuerBinding\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: IssuerBinding\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*>.\n  remarks: \"This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.  \\n  \\n Note that this property does not need to be populated on the service, since it is only consumed by the client.\"\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#9](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_4_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#9](~/add/codesnippet/csharp/p-system.servicemodel.fe_4_1.cs)]\"\n  syntax:\n    content: public System.ServiceModel.Channels.Binding IssuerBinding { get; set; }\n    return:\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref:System.ServiceModel.Channels.Binding> to be used by the client when communicating with the security token service.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n  id: IssuerMetadataAddress\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: IssuerMetadataAddress\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the endpoint address for communicating with the security token service out of band.\n  remarks: This address is used as the endpoint for the security token service that issues credentials for the service out of band.\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#10](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_0_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#10](~/add/codesnippet/csharp/p-system.servicemodel.fe_0_1.cs)]\"\n  syntax:\n    content: public System.ServiceModel.EndpointAddress IssuerMetadataAddress { get; set; }\n    return:\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref:System.ServiceModel.Channels.Binding> to be used when communicating with the security token service out of band.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n  id: NegotiateServiceCredential\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: NegotiateServiceCredential\n  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.\n  remarks: \"This property indicates whether the service certificate is negotiated automatically between the client and the service. If this property is `true`, then such negotiation occurs. If this property is `false`, then the service certificate must be specified at the client before communication with the service can occur.  \\n  \\n Services must always specify a certificate.  \\n  \\n If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token.\"\n  example:\n  - \"The following code shows how to access this property from the binding, and set it.  \\n  \\n [!code-vb[WSFederationHttpSecurity#6](~/add/codesnippet/visualbasic/a9c91759-1874-4a3e-b7d4-_1.vb)]\\n [!code-cs[WSFederationHttpSecurity#6](~/add/codesnippet/csharp/a9c91759-1874-4a3e-b7d4-_1.cs)]\"\n  syntax:\n    content: public bool NegotiateServiceCredential { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service certificate is negotiated; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the service certificate is available out of band. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\n  id: ShouldSerializeAlgorithmSuite\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ShouldSerializeAlgorithmSuite()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.\n  syntax:\n    content: public bool ShouldSerializeAlgorithmSuite ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the algorithm suite should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements\n  id: ShouldSerializeClaimTypeRequirements\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ShouldSerializeClaimTypeRequirements()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns that any existing claim type requirements can be serialized.\n  syntax:\n    content: public bool ShouldSerializeClaimTypeRequirements ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are requirements to serialize; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext\n  id: ShouldSerializeEstablishSecurityContext\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ShouldSerializeEstablishSecurityContext()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns an indication whether the security context is not the default and therefore should be serialized.\n  syntax:\n    content: public bool ShouldSerializeEstablishSecurityContext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the context should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType\n  id: ShouldSerializeIssuedKeyType\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ShouldSerializeIssuedKeyType()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns an indication whether the issued key type is not the default and therefore should be serialized.\n  syntax:\n    content: public bool ShouldSerializeIssuedKeyType ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\n  id: ShouldSerializeNegotiateServiceCredential\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ShouldSerializeNegotiateServiceCredential()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.\n  syntax:\n    content: public bool ShouldSerializeNegotiateServiceCredential ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the process should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters\n  id: ShouldSerializeTokenRequestParameters\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: ShouldSerializeTokenRequestParameters()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Returns an indication that any existing token request parameters can be serialized.\n  syntax:\n    content: public bool ShouldSerializeTokenRequestParameters ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there are parameters to be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters\n  id: TokenRequestParameters\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: TokenRequestParameters\n  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.\n  remarks: The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlElement> TokenRequestParameters { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}\n      description: A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=\"System.Xml.XmlElement\"></xref>.\n  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: FederatedMessageSecurityOverHttp()\n  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ClaimTypeRequirements\n  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.ClaimTypeRequirement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ClaimTypeRequirement>\n  nameWithType: Collection<ClaimTypeRequirement>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement\n    name: ClaimTypeRequirement\n    nameWithType: ClaimTypeRequirement\n    fullName: ClaimTypeRequirement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: EstablishSecurityContext\n  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuedKeyType\n  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType\n- uid: System.IdentityModel.Tokens.SecurityKeyType\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyType\n  nameWithType: SecurityKeyType\n  fullName: System.IdentityModel.Tokens.SecurityKeyType\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuedTokenType\n  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuerAddress\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: true\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuerBinding\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuerMetadataAddress\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: NegotiateServiceCredential\n  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeAlgorithmSuite()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeClaimTypeRequirements()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeEstablishSecurityContext()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeIssuedKeyType()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeNegotiateServiceCredential()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeTokenRequestParameters()\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: TokenRequestParameters\n  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters\n  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters\n- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<XmlElement>\n  nameWithType: Collection<XmlElement>\n  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlElement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Xml.XmlElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlElement\n    name: XmlElement\n    nameWithType: XmlElement\n    fullName: XmlElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: FederatedMessageSecurityOverHttp\n  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ClaimTypeRequirements\n  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: EstablishSecurityContext\n  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuedKeyType\n  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuedTokenType\n  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuerAddress\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuerBinding\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: IssuerMetadataAddress\n  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: NegotiateServiceCredential\n  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeAlgorithmSuite\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeClaimTypeRequirements\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeEstablishSecurityContext\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeIssuedKeyType\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeNegotiateServiceCredential\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeTokenRequestParameters\n  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters\n- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters*\n  parent: System.ServiceModel.FederatedMessageSecurityOverHttp\n  isExternal: false\n  name: TokenRequestParameters\n  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters\n"}