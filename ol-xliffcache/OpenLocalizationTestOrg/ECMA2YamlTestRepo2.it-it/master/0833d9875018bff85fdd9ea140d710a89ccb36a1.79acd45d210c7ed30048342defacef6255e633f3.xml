{"nodes":[{"pos":[553,635],"content":"Provides a description of the results of the query and its effect on the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a description of the results of the query and its effect on the database.","pos":[0,82]}]},{"pos":[648,1324],"content":"The CommandBehavior values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it.       A bitwise combination of these values may be used.       CommandBehavior is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used. Use the constructor that does not require a `CommandBehavior` parameter in these two cases.      > [!NOTE] >  Use SequentialAccess to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CommandBehavior values are used by the &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt; method of &lt;xref:System.Data.IDbCommand&gt; and any classes derived from it.","pos":[0,162],"source":"The CommandBehavior values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it."},{"content":"A bitwise combination of these values may be used.","pos":[169,219]},{"content":"CommandBehavior is ignored when used to define a &lt;xref:System.Data.Sql.SqlNotificationRequest&gt; or &lt;xref:System.Data.SqlClient.SqlDependency&gt; and should therefore not be used.","pos":[226,400],"source":"       CommandBehavior is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used."},{"content":"Use the constructor that does not require a <ph id=\"ph1\">`CommandBehavior`</ph> parameter in these two cases.","pos":[401,492],"source":" Use the constructor that does not require a `CommandBehavior` parameter in these two cases."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Use SequentialAccess to retrieve large values and binary data.","pos":[498,573],"source":"      > [!NOTE] >  Use SequentialAccess to retrieve large values and binary data."},{"content":"Otherwise, an &lt;xref:System.OutOfMemoryException&gt; might occur and the connection will be closed.","pos":[574,669],"source":" Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed."}]},{"pos":[1801,2046],"content":"When the command is executed, the associated <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Connection\" name=\"Connection\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed when the associated <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is closed.","needQuote":true,"needEscape":true,"source":"When the command is executed, the associated <xref uid=\"langword_csharp_Connection\" name=\"Connection\" href=\"\"></xref> object is closed when the associated <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> object is closed."},{"pos":[2157,2169],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2509,2965],"content":"The query may return multiple result sets. Execution of the query may affect the database state. <xref uid=\"langword_csharp_Default\" name=\"Default\" href=\"\"></xref> sets no CommandBehavior flags, so calling <xref uid=\"langword_csharp_ExecuteReader(CommandBehavior.Default)\" name=\"ExecuteReader(CommandBehavior.Default)\" href=\"\"></xref> is functionally equivalent to calling <xref uid=\"langword_csharp_ExecuteReader()\" name=\"ExecuteReader()\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query may return multiple result sets.","pos":[0,42]},{"content":"Execution of the query may affect the database state.","pos":[43,96]},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Default\" name=\"Default\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sets no CommandBehavior flags, so calling <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_ExecuteReader(CommandBehavior.Default)\" name=\"ExecuteReader(CommandBehavior.Default)\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is functionally equivalent to calling <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_ExecuteReader()\" name=\"ExecuteReader()\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[97,456],"source":"<xref uid=\"langword_csharp_Default\" name=\"Default\" href=\"\"></xref> sets no CommandBehavior flags, so calling <xref uid=\"langword_csharp_ExecuteReader(CommandBehavior.Default)\" name=\"ExecuteReader(CommandBehavior.Default)\" href=\"\"></xref> is functionally equivalent to calling <xref uid=\"langword_csharp_ExecuteReader()\" name=\"ExecuteReader()\" href=\"\"></xref>."}]},{"pos":[3068,3080],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3420,3473],"content":"The query returns column and primary key information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query returns column and primary key information.","pos":[0,53]}]},{"pos":[3486,3962],"content":"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.       When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.       When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.","pos":[0,474],"nodes":[{"content":"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.","pos":[0,148]},{"content":"When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON.","pos":[155,308]},{"content":"The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.","pos":[309,424]},{"content":"See SQL Server Books Online for more information.","pos":[425,474]}]}]},{"pos":[4066,4078],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4433,4605],"content":"The query returns column information only. When using SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query returns column information only. When using SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.","pos":[0,172],"nodes":[{"content":"The query returns column information only.","pos":[0,42]},{"content":"When using SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.","pos":[43,172]}]}]},{"pos":[4711,4723],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5108,5777],"content":"Provides a way for the <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> to handle rows that contain columns with large binary values. Rather than loading the entire row, <xref uid=\"langword_csharp_SequentialAccess\" name=\"SequentialAccess\" href=\"\"></xref> enables the <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> to load data as a stream. You can then use the <xref uid=\"langword_csharp_GetBytes\" name=\"GetBytes\" href=\"\"></xref> or <xref uid=\"langword_csharp_GetChars\" name=\"GetChars\" href=\"\"></xref> method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a way for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to handle rows that contain columns with large binary values.","pos":[0,157],"source":"Provides a way for the <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> to handle rows that contain columns with large binary values."},{"content":"Rather than loading the entire row, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SequentialAccess\" name=\"SequentialAccess\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enables the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to load data as a stream.","pos":[158,389],"source":" Rather than loading the entire row, <xref uid=\"langword_csharp_SequentialAccess\" name=\"SequentialAccess\" href=\"\"></xref> enables the <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> to load data as a stream."},{"content":"You can then use the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_GetBytes\" name=\"GetBytes\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_GetChars\" name=\"GetChars\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.","pos":[390,669],"source":" You can then use the <xref uid=\"langword_csharp_GetBytes\" name=\"GetBytes\" href=\"\"></xref> or <xref uid=\"langword_csharp_GetChars\" name=\"GetChars\" href=\"\"></xref> method to specify a byte location to start the read operation, and a limited buffer size for the data being returned."}]},{"pos":[5789,6312],"content":"When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column. Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`. When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it. When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you specify <ph id=\"ph1\">`SequentialAccess`</ph>, you are required to read from the columns in the order they are returned, although you are not required to read each column.","pos":[0,161],"source":"When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column."},{"content":"Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the <ph id=\"ph1\">`DataReader`</ph>.","pos":[162,305],"source":" Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`."},{"content":"When using the &lt;xref:System.Data.OleDb.OleDbDataReader&gt;, you can reread the current column value until reading past it.","pos":[306,425],"source":" When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it."},{"content":"When using the &lt;xref:System.Data.SqlClient.SqlDataReader&gt;, you can read a column value only once.","pos":[426,523],"source":" When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once."}]},{"pos":[6424,6436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6801,6839],"content":"The query returns a single result set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query returns a single result set.","pos":[0,38]}]},{"pos":[6947,6959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7309,8510],"content":"The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify SingleRow with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader*> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <xref uid=\"langword_csharp_IRow\" name=\"IRow\" href=\"\"></xref> interface if it is available. Otherwise, it uses the <xref uid=\"langword_csharp_IRowset\" name=\"IRowset\" href=\"\"></xref> interface. If your SQL statement is expected to return only a single row, specifying SingleRow can also improve application performance. It is possible to specify <xref uid=\"langword_csharp_SingleRow\" name=\"SingleRow\" href=\"\"></xref> when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query is expected to return a single row of the first result set.","pos":[0,69]},{"content":"Execution of the query may affect the database state.","pos":[70,123]},{"content":"Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command.","pos":[124,253]},{"content":"When you specify SingleRow with the &lt;xref:System.Data.OleDb.OleDbCommand.ExecuteReader*&gt; method of the <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_IRow\" name=\"IRow\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> interface if it is available.","pos":[254,585],"source":" When you specify SingleRow with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader*> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <xref uid=\"langword_csharp_IRow\" name=\"IRow\" href=\"\"></xref> interface if it is available."},{"content":"Otherwise, it uses the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IRowset\" name=\"IRowset\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface.","pos":[586,686],"source":" Otherwise, it uses the <xref uid=\"langword_csharp_IRowset\" name=\"IRowset\" href=\"\"></xref> interface."},{"content":"If your SQL statement is expected to return only a single row, specifying SingleRow can also improve application performance.","pos":[687,812]},{"content":"It is possible to specify <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SingleRow\" name=\"SingleRow\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when executing queries that are expected to return multiple result sets.","pos":[813,982],"source":" It is possible to specify <xref uid=\"langword_csharp_SingleRow\" name=\"SingleRow\" href=\"\"></xref> when executing queries that are expected to return multiple result sets."},{"content":"In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set.","pos":[984,1144]},{"content":"The other result sets of the query will not be returned.","pos":[1145,1201]}]},{"pos":[8615,8627],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.CommandBehavior\n  id: CommandBehavior\n  children:\n  - System.Data.CommandBehavior.CloseConnection\n  - System.Data.CommandBehavior.Default\n  - System.Data.CommandBehavior.KeyInfo\n  - System.Data.CommandBehavior.SchemaOnly\n  - System.Data.CommandBehavior.SequentialAccess\n  - System.Data.CommandBehavior.SingleResult\n  - System.Data.CommandBehavior.SingleRow\n  langs:\n  - csharp\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n  type: Enum\n  summary: Provides a description of the results of the query and its effect on the database.\n  remarks: \"The CommandBehavior values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it.  \\n  \\n A bitwise combination of these values may be used.  \\n  \\n CommandBehavior is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used. Use the constructor that does not require a `CommandBehavior` parameter in these two cases.  \\n  \\n> [!NOTE]\\n>  Use SequentialAccess to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum CommandBehavior\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.CloseConnection\n  id: CloseConnection\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: CloseConnection\n  nameWithType: CommandBehavior.CloseConnection\n  fullName: System.Data.CommandBehavior.CloseConnection\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: When the command is executed, the associated <xref uid=\"langword_csharp_Connection\" name=\"Connection\" href=\"\"></xref> object is closed when the associated <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> object is closed.\n  syntax:\n    content: CloseConnection\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.Default\n  id: Default\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: Default\n  nameWithType: CommandBehavior.Default\n  fullName: System.Data.CommandBehavior.Default\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: The query may return multiple result sets. Execution of the query may affect the database state. <xref uid=\"langword_csharp_Default\" name=\"Default\" href=\"\"></xref> sets no CommandBehavior flags, so calling <xref uid=\"langword_csharp_ExecuteReader(CommandBehavior.Default)\" name=\"ExecuteReader(CommandBehavior.Default)\" href=\"\"></xref> is functionally equivalent to calling <xref uid=\"langword_csharp_ExecuteReader()\" name=\"ExecuteReader()\" href=\"\"></xref>.\n  syntax:\n    content: Default\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.KeyInfo\n  id: KeyInfo\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: KeyInfo\n  nameWithType: CommandBehavior.KeyInfo\n  fullName: System.Data.CommandBehavior.KeyInfo\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: The query returns column and primary key information.\n  remarks: \"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.  \\n  \\n When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.\"\n  syntax:\n    content: KeyInfo\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.SchemaOnly\n  id: SchemaOnly\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SchemaOnly\n  nameWithType: CommandBehavior.SchemaOnly\n  fullName: System.Data.CommandBehavior.SchemaOnly\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: The query returns column information only. When using SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.\n  syntax:\n    content: SchemaOnly\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.SequentialAccess\n  id: SequentialAccess\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SequentialAccess\n  nameWithType: CommandBehavior.SequentialAccess\n  fullName: System.Data.CommandBehavior.SequentialAccess\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: Provides a way for the <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> to handle rows that contain columns with large binary values. Rather than loading the entire row, <xref uid=\"langword_csharp_SequentialAccess\" name=\"SequentialAccess\" href=\"\"></xref> enables the <xref uid=\"langword_csharp_DataReader\" name=\"DataReader\" href=\"\"></xref> to load data as a stream. You can then use the <xref uid=\"langword_csharp_GetBytes\" name=\"GetBytes\" href=\"\"></xref> or <xref uid=\"langword_csharp_GetChars\" name=\"GetChars\" href=\"\"></xref> method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.\n  remarks: When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column. Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`. When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it. When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once.\n  syntax:\n    content: SequentialAccess\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.SingleResult\n  id: SingleResult\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SingleResult\n  nameWithType: CommandBehavior.SingleResult\n  fullName: System.Data.CommandBehavior.SingleResult\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: The query returns a single result set.\n  syntax:\n    content: SingleResult\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.CommandBehavior.SingleRow\n  id: SingleRow\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SingleRow\n  nameWithType: CommandBehavior.SingleRow\n  fullName: System.Data.CommandBehavior.SingleRow\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data\n  summary: The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify SingleRow with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader*> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <xref uid=\"langword_csharp_IRow\" name=\"IRow\" href=\"\"></xref> interface if it is available. Otherwise, it uses the <xref uid=\"langword_csharp_IRowset\" name=\"IRowset\" href=\"\"></xref> interface. If your SQL statement is expected to return only a single row, specifying SingleRow can also improve application performance. It is possible to specify <xref uid=\"langword_csharp_SingleRow\" name=\"SingleRow\" href=\"\"></xref> when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.\n  syntax:\n    content: SingleRow\n    return:\n      type: System.Data.CommandBehavior\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Data.CommandBehavior.CloseConnection\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: CloseConnection\n  nameWithType: CommandBehavior.CloseConnection\n  fullName: System.Data.CommandBehavior.CloseConnection\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n- uid: System.Data.CommandBehavior.Default\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: Default\n  nameWithType: CommandBehavior.Default\n  fullName: System.Data.CommandBehavior.Default\n- uid: System.Data.CommandBehavior.KeyInfo\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: KeyInfo\n  nameWithType: CommandBehavior.KeyInfo\n  fullName: System.Data.CommandBehavior.KeyInfo\n- uid: System.Data.CommandBehavior.SchemaOnly\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SchemaOnly\n  nameWithType: CommandBehavior.SchemaOnly\n  fullName: System.Data.CommandBehavior.SchemaOnly\n- uid: System.Data.CommandBehavior.SequentialAccess\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SequentialAccess\n  nameWithType: CommandBehavior.SequentialAccess\n  fullName: System.Data.CommandBehavior.SequentialAccess\n- uid: System.Data.CommandBehavior.SingleResult\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SingleResult\n  nameWithType: CommandBehavior.SingleResult\n  fullName: System.Data.CommandBehavior.SingleResult\n- uid: System.Data.CommandBehavior.SingleRow\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SingleRow\n  nameWithType: CommandBehavior.SingleRow\n  fullName: System.Data.CommandBehavior.SingleRow\n"}