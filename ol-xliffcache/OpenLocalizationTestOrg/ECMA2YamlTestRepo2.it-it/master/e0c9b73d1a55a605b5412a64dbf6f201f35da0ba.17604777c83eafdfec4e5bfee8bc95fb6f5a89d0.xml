{"nodes":[{"pos":[5927,5939],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7855,7867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9007,9019],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9949,9961],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10020,10032],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10997,11009],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11068,11080],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12859,12871],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12930,12942],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13865,13877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13936,13948],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15182,15194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15260,15272],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15922,15934],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16908,16920],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18027,18039],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18133,18145],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18204,18216],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19381,19393],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19487,19499],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19558,19570],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20798,20810],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20904,20916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20975,20987],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22103,22115],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22209,22221],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22280,22292],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23563,23575],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23710,23722],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23781,23793],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25119,25131],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25266,25278],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25337,25349],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26738,26750],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26885,26897],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26956,26968],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28245,28257],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28392,28404],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28463,28475],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29456,29468],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29527,29539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29598,29610],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30643,30655],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30714,30726],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30785,30797],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31893,31905],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31964,31976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32035,32047],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33031,33043],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33102,33114],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33173,33185],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34326,34338],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34440,34452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34511,34523],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35719,35731],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35833,35845],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35904,35916],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37175,37187],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37289,37301],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37360,37372],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38519,38531],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38633,38645],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38704,38716],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39410,39422],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40326,40338],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40394,40406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41201,41213],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41890,41902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43064,43076],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43135,43147],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44038,44050],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44109,44121],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45047,45059],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45118,45130],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46065,46077],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47748,47760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47819,47831],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47890,47902],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48650,48662],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  id: XPathMessageFilterTable`1\n  children:\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  - System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  langs:\n  - csharp\n  name: XPathMessageFilterTable<TFilterData>\n  nameWithType: XPathMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public class XPathMessageFilterTable<TFilterData> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n    typeParameters:\n    - id: TFilterData\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: XPathMessageFilterTable()\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public XPathMessageFilterTable ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: XPathMessageFilterTable(Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable(Int32)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable(Int32)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public XPathMessageFilterTable (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  id: Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(MessageFilter,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  id: Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(XPathMessageFilter,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.XPathMessageFilter filter, TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.XPathMessageFilter\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  id: Clear\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: XPathMessageFilterTable<TFilterData>.Clear()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  id: ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: ContainsKey(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  id: Count\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: XPathMessageFilterTable<TFilterData>.Count\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Count\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(Message,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(MessageBuffer,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(SeekableXPathNavigator,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(XPathNavigator,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.Xml.XPath.XPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(Message,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(SeekableXPathNavigator,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(XPathNavigator,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(Message,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(MessageBuffer,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData data);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  id: GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(SeekableXPathNavigator,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out TFilterData data);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  id: GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(XPathNavigator,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.Xml.XPath.XPathNavigator navigator, out TFilterData data);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(Message,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: messageBuffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(SeekableXPathNavigator,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: navigator\n      type: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(XPathNavigator,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: navigator\n      type: System.Xml.XPath.XPathNavigator\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Item(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: TFilterData\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  id: Keys\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: XPathMessageFilterTable<TFilterData>.Keys\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Keys\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  id: NodeQuota\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: NodeQuota\n  nameWithType: XPathMessageFilterTable<TFilterData>.NodeQuota\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.NodeQuota\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public int NodeQuota { get; set; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  id: Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(XPathMessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Remove (System.ServiceModel.Dispatcher.XPathMessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.XPathMessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  id: TrimToSize\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: TrimToSize()\n  nameWithType: XPathMessageFilterTable<TFilterData>.TrimToSize()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.TrimToSize()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void TrimToSize ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  id: TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: TryGetValue(MessageFilter,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  id: Values\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  langs:\n  - csharp\n  name: Values\n  nameWithType: XPathMessageFilterTable<TFilterData>.Values\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Values\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public System.Collections.Generic.ICollection<TFilterData> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: XPathMessageFilterTable()\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable()\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: XPathMessageFilterTable(Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable(Int32)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<MessageFilter,TFilterData>\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add(MessageFilter,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n- uid: TFilterData\n  isExternal: true\n  name: TFilterData\n  nameWithType: TFilterData\n  fullName: TFilterData\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add(XPathMessageFilter,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Add(XPathMessageFilter,TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: XPathMessageFilter\n  nameWithType: XPathMessageFilter\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilter\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Clear()\n  nameWithType: XPathMessageFilterTable<TFilterData>.Clear()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Clear()\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: ContainsKey(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  nameWithType: XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<MessageFilter,TFilterData>\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[]\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: XPathMessageFilterTable<TFilterData>.Count\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Count\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(Message,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(MessageBuffer,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(SeekableXPathNavigator,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(SeekableXPathNavigator,MessageFilter)\n- uid: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: SeekableXPathNavigator\n  nameWithType: SeekableXPathNavigator\n  fullName: System.ServiceModel.Dispatcher.SeekableXPathNavigator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(XPathNavigator,MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilter(XPathNavigator,MessageFilter)\n- uid: System.Xml.XPath.XPathNavigator\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator\n  nameWithType: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(Message,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<MessageFilter>\n  nameWithType: ICollection<MessageFilter>\n  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(SeekableXPathNavigator,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(SeekableXPathNavigator,ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(XPathNavigator,ICollection<MessageFilter>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingFilters(XPathNavigator,ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(Message,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(MessageBuffer,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(SeekableXPathNavigator,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(SeekableXPathNavigator,TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(XPathNavigator,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValue(XPathNavigator,TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(Message,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n- uid: System.Collections.Generic.ICollection{TFilterData}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<TFilterData>\n  nameWithType: ICollection<TFilterData>\n  fullName: System.Collections.Generic.ICollection<TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(SeekableXPathNavigator,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(SeekableXPathNavigator,ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(XPathNavigator,ICollection<TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.GetMatchingValues(XPathNavigator,ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XPathMessageFilterTable<TFilterData>.IsReadOnly\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.IsReadOnly\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Item(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Item(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: XPathMessageFilterTable<TFilterData>.Keys\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Keys\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: NodeQuota\n  nameWithType: XPathMessageFilterTable<TFilterData>.NodeQuota\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.NodeQuota\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove(MessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Remove(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove(XPathMessageFilter)\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Remove(XPathMessageFilter)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TrimToSize()\n  nameWithType: XPathMessageFilterTable<TFilterData>.TrimToSize()\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.TrimToSize()\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TryGetValue(MessageFilter,TFilterData)\n  nameWithType: XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: XPathMessageFilterTable<TFilterData>.Values\n  fullName: System.ServiceModel.Dispatcher.XPathMessageFilterTable<TFilterData>.Values\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: XPathMessageFilterTable<TFilterData>\n  nameWithType: XPathMessageFilterTable<TFilterData>.XPathMessageFilterTable<TFilterData>\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Add\n  nameWithType: XPathMessageFilterTable<TFilterData>.Add\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Clear\n  nameWithType: XPathMessageFilterTable<TFilterData>.Clear\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Contains\n  nameWithType: XPathMessageFilterTable<TFilterData>.Contains\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: ContainsKey\n  nameWithType: XPathMessageFilterTable<TFilterData>.ContainsKey\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: XPathMessageFilterTable<TFilterData>.CopyTo\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: XPathMessageFilterTable<TFilterData>.Count\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetEnumerator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilter\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingFilters\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValue\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues\n  nameWithType: XPathMessageFilterTable<TFilterData>.GetMatchingValues\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XPathMessageFilterTable<TFilterData>.IsReadOnly\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Item\n  nameWithType: XPathMessageFilterTable<TFilterData>.Item\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: XPathMessageFilterTable<TFilterData>.Keys\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: NodeQuota\n  nameWithType: XPathMessageFilterTable<TFilterData>.NodeQuota\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Remove\n  nameWithType: XPathMessageFilterTable<TFilterData>.Remove\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: XPathMessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TrimToSize\n  nameWithType: XPathMessageFilterTable<TFilterData>.TrimToSize\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: TryGetValue\n  nameWithType: XPathMessageFilterTable<TFilterData>.TryGetValue\n- uid: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values*\n  parent: System.ServiceModel.Dispatcher.XPathMessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: XPathMessageFilterTable<TFilterData>.Values\n"}