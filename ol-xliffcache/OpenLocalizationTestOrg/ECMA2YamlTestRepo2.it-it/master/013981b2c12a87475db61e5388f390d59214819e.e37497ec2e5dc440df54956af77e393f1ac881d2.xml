{"nodes":[{"pos":[577,671],"content":"Defines the configuration file mappings for a Web application. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the configuration file mappings for a Web application. This class cannot be inherited.","pos":[0,94],"nodes":[{"content":"Defines the configuration file mappings for a Web application.","pos":[0,62]},{"content":"This class cannot be inherited.","pos":[63,94]}]}]},{"pos":[684,1219],"content":"The WebConfigurationFileMap class is used to specify the Web configuration file hierarchy. By default, the configuration system uses the IIS metabase to determine the Web file hierarchy. If IIS is not installed, or if an application targets a version of the .NET Framework that is not the latest version that is installed on the server, the WebConfigurationFileMap class provides a means to define a custom hierarchy.       The WebConfigurationFileMap class can specify a single path or multiple paths related to configuration files.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The WebConfigurationFileMap class is used to specify the Web configuration file hierarchy. By default, the configuration system uses the IIS metabase to determine the Web file hierarchy. If IIS is not installed, or if an application targets a version of the .NET Framework that is not the latest version that is installed on the server, the WebConfigurationFileMap class provides a means to define a custom hierarchy.       The WebConfigurationFileMap class can specify a single path or multiple paths related to configuration files.","pos":[0,533],"nodes":[{"content":"The WebConfigurationFileMap class is used to specify the Web configuration file hierarchy.","pos":[0,90]},{"content":"By default, the configuration system uses the IIS metabase to determine the Web file hierarchy.","pos":[91,186]},{"content":"If IIS is not installed, or if an application targets a version of the .NET Framework that is not the latest version that is installed on the server, the WebConfigurationFileMap class provides a means to define a custom hierarchy.","pos":[187,417]},{"content":"The WebConfigurationFileMap class can specify a single path or multiple paths related to configuration files.","pos":[424,533]}]}]},{"pos":[1981,2087],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.WebConfigurationFileMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class."},{"pos":[2761,2926],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.WebConfigurationFileMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified machine configuration file name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class by using the specified machine configuration file name."},{"pos":[2939,3543],"content":"You use this constructor when you are targeting a version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that is earlier than the latest one that is installed on the computer. The method enables you to specify a machine configuration file that is appropriate to the version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that you are targeting.      > [!NOTE] >  Even though the constructor only accepts the path to the Machine.config file, the configuration system will also read the root Web.config file in the same directory where the Machine.config file exists.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use this constructor when you are targeting a version of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> that is earlier than the latest one that is installed on the computer.","pos":[0,193],"source":"You use this constructor when you are targeting a version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that is earlier than the latest one that is installed on the computer."},{"content":"The method enables you to specify a machine configuration file that is appropriate to the version of the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> that you are targeting.","pos":[194,380],"source":" The method enables you to specify a machine configuration file that is appropriate to the version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that you are targeting."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Even though the constructor only accepts the path to the Machine.config file, the configuration system will also read the root Web.config file in the same directory where the Machine.config file exists.","pos":[386,601],"source":"      > [!NOTE] >  Even though the constructor only accepts the path to the Machine.config file, the configuration system will also read the root Web.config file in the same directory where the Machine.config file exists."}]},{"pos":[3724,3877],"content":"The machine configuration file name with the complete physical path (for example, <ph id=\"ph1\">`c:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\CONFIG\\machine.config`</ph>).","needQuote":true,"needEscape":true,"source":"The machine configuration file name with the complete physical path (for example, `c:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\CONFIG\\machine.config`)."},{"pos":[4365,4514],"content":"Creates a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.WebConfigurationFileMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the same value as the existing instance.","needQuote":true,"needEscape":true,"source":"Creates a new instance of a <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class with the same value as the existing instance."},{"pos":[4647,4743],"content":"A new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.WebConfigurationFileMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"A new instance of a <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class."},{"pos":[5292,5364],"content":"Gets the listed collection of virtual directories for a Web application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the listed collection of virtual directories for a Web application.","pos":[0,72]}]},{"pos":[5376,5576],"content":"The virtual directories of a Web application may not necessarily map to the physical directories on the server. The <xref:System.Web.Configuration.VirtualDirectoryMapping> class is independent of IIS.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The virtual directories of a Web application may not necessarily map to the physical directories on the server. The <xref:System.Web.Configuration.VirtualDirectoryMapping> class is independent of IIS.","pos":[0,200],"nodes":[{"content":"The virtual directories of a Web application may not necessarily map to the physical directories on the server.","pos":[0,111]},{"content":"The &lt;xref:System.Web.Configuration.VirtualDirectoryMapping&gt; class is independent of IIS.","pos":[112,200],"source":" The <xref:System.Web.Configuration.VirtualDirectoryMapping> class is independent of IIS."}]}]},{"pos":[5796,5890],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"></xref> objects."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.WebConfigurationFileMap\n  id: WebConfigurationFileMap\n  children:\n  - System.Web.Configuration.WebConfigurationFileMap.#ctor\n  - System.Web.Configuration.WebConfigurationFileMap.#ctor(System.String)\n  - System.Web.Configuration.WebConfigurationFileMap.Clone\n  - System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories\n  langs:\n  - csharp\n  name: WebConfigurationFileMap\n  nameWithType: WebConfigurationFileMap\n  fullName: System.Web.Configuration.WebConfigurationFileMap\n  type: Class\n  summary: Defines the configuration file mappings for a Web application. This class cannot be inherited.\n  remarks: \"The WebConfigurationFileMap class is used to specify the Web configuration file hierarchy. By default, the configuration system uses the IIS metabase to determine the Web file hierarchy. If IIS is not installed, or if an application targets a version of the .NET Framework that is not the latest version that is installed on the server, the WebConfigurationFileMap class provides a means to define a custom hierarchy.  \\n  \\n The WebConfigurationFileMap class can specify a single path or multiple paths related to configuration files.\"\n  syntax:\n    content: 'public sealed class WebConfigurationFileMap : System.Configuration.ConfigurationFileMap'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationFileMap\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationFileMap.MachineConfigFilename\n  platform:\n  - net462\n- uid: System.Web.Configuration.WebConfigurationFileMap.#ctor\n  id: '#ctor'\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  langs:\n  - csharp\n  name: WebConfigurationFileMap()\n  nameWithType: WebConfigurationFileMap.WebConfigurationFileMap()\n  fullName: System.Web.Configuration.WebConfigurationFileMap.WebConfigurationFileMap()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Creates a new instance of the <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class.\n  syntax:\n    content: public WebConfigurationFileMap ();\n    parameters: []\n  overload: System.Web.Configuration.WebConfigurationFileMap.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.WebConfigurationFileMap.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  langs:\n  - csharp\n  name: WebConfigurationFileMap(String)\n  nameWithType: WebConfigurationFileMap.WebConfigurationFileMap(String)\n  fullName: System.Web.Configuration.WebConfigurationFileMap.WebConfigurationFileMap(String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class by using the specified machine configuration file name.\n  remarks: \"You use this constructor when you are targeting a version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that is earlier than the latest one that is installed on the computer. The method enables you to specify a machine configuration file that is appropriate to the version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] that you are targeting.  \\n  \\n> [!NOTE]\\n>  Even though the constructor only accepts the path to the Machine.config file, the configuration system will also read the root Web.config file in the same directory where the Machine.config file exists.\"\n  syntax:\n    content: public WebConfigurationFileMap (string machineConfigFileName);\n    parameters:\n    - id: machineConfigFileName\n      type: System.String\n      description: The machine configuration file name with the complete physical path (for example, `c:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\CONFIG\\machine.config`).\n  overload: System.Web.Configuration.WebConfigurationFileMap.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.WebConfigurationFileMap.Clone\n  id: Clone\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: WebConfigurationFileMap.Clone()\n  fullName: System.Web.Configuration.WebConfigurationFileMap.Clone()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Creates a new instance of a <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class with the same value as the existing instance.\n  syntax:\n    content: public override object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new instance of a <xref href=\"System.Web.Configuration.WebConfigurationFileMap\"></xref> class.\n  overload: System.Web.Configuration.WebConfigurationFileMap.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories\n  id: VirtualDirectories\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  langs:\n  - csharp\n  name: VirtualDirectories\n  nameWithType: WebConfigurationFileMap.VirtualDirectories\n  fullName: System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets the listed collection of virtual directories for a Web application.\n  remarks: The virtual directories of a Web application may not necessarily map to the physical directories on the server. The <xref:System.Web.Configuration.VirtualDirectoryMapping> class is independent of IIS.\n  syntax:\n    content: public System.Web.Configuration.VirtualDirectoryMappingCollection VirtualDirectories { get; }\n    return:\n      type: System.Web.Configuration.VirtualDirectoryMappingCollection\n      description: A collection of <xref href=\"System.Web.Configuration.VirtualDirectoryMapping\"></xref> objects.\n  overload: System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationFileMap\n  isExternal: false\n  name: System.Configuration.ConfigurationFileMap\n- uid: System.Web.Configuration.WebConfigurationFileMap.#ctor\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: WebConfigurationFileMap()\n  nameWithType: WebConfigurationFileMap.WebConfigurationFileMap()\n  fullName: System.Web.Configuration.WebConfigurationFileMap.WebConfigurationFileMap()\n- uid: System.Web.Configuration.WebConfigurationFileMap.#ctor(System.String)\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: WebConfigurationFileMap(String)\n  nameWithType: WebConfigurationFileMap.WebConfigurationFileMap(String)\n  fullName: System.Web.Configuration.WebConfigurationFileMap.WebConfigurationFileMap(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.WebConfigurationFileMap.Clone\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: Clone()\n  nameWithType: WebConfigurationFileMap.Clone()\n  fullName: System.Web.Configuration.WebConfigurationFileMap.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: VirtualDirectories\n  nameWithType: WebConfigurationFileMap.VirtualDirectories\n  fullName: System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories\n- uid: System.Web.Configuration.VirtualDirectoryMappingCollection\n  parent: System.Web.Configuration\n  isExternal: false\n  name: VirtualDirectoryMappingCollection\n  nameWithType: VirtualDirectoryMappingCollection\n  fullName: System.Web.Configuration.VirtualDirectoryMappingCollection\n- uid: System.Web.Configuration.WebConfigurationFileMap.#ctor*\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: WebConfigurationFileMap\n  nameWithType: WebConfigurationFileMap.WebConfigurationFileMap\n- uid: System.Web.Configuration.WebConfigurationFileMap.Clone*\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: Clone\n  nameWithType: WebConfigurationFileMap.Clone\n- uid: System.Web.Configuration.WebConfigurationFileMap.VirtualDirectories*\n  parent: System.Web.Configuration.WebConfigurationFileMap\n  isExternal: false\n  name: VirtualDirectories\n  nameWithType: WebConfigurationFileMap.VirtualDirectories\n"}