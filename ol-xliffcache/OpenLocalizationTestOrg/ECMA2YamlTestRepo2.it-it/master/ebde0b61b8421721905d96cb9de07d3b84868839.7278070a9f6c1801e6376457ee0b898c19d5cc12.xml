{"nodes":[{"pos":[682,733],"content":"Defines base methods for custom request validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines base methods for custom request validation.","pos":[0,51]}]},{"pos":[746,2401],"content":"By default, ASP.NET does not validate requests until code explicitly requests a value from the request. For example, ASP.NET does not validate query-string values until code accesses the <xref:System.Web.HttpRequest.QueryString%2A> collection. By default, ASP.NET also does not validate some types of request data, such as form values, cookies, the names of files that have been uploaded using HTTP, and the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property.       The RequestValidator class is a base class that you can implement in order to provide custom request validation. By implementing this class, you can determine when validation occurs and what type of request data to perform validation on.       By default, ASP.NET provides cross-site scripting (XSS) checks. However, you can supplement or replace the request validation logic that is provided in ASP.NET by creating a custom implementation of the XSS. For example, you can write a custom request validation implementation that scans for SQL injection attacks in addition to checking for XSS attacks.       To create custom request validation, you write a custom class that derives from the RequestValidator base class. You then configure ASP.NET to use the custom request validator in the application-level Web.config file. You can put the custom class in the App_Code folder, in a compiled class library in the Bin folder, or in a compiled class library in the GAC.      > [!NOTE] >  Only one custom request validation type can be configured for an application. It is not possible to configure a different request validation type for individual virtual paths or pages.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, ASP.NET does not validate requests until code explicitly requests a value from the request.","pos":[0,103]},{"content":"For example, ASP.NET does not validate query-string values until code accesses the &lt;xref:System.Web.HttpRequest.QueryString%2A&gt; collection.","pos":[104,243],"source":" For example, ASP.NET does not validate query-string values until code accesses the <xref:System.Web.HttpRequest.QueryString%2A> collection."},{"content":"By default, ASP.NET also does not validate some types of request data, such as form values, cookies, the names of files that have been uploaded using HTTP, and the value of the &lt;xref:System.Web.HttpRequest.RawUrl%2A&gt; property.","pos":[244,470],"source":" By default, ASP.NET also does not validate some types of request data, such as form values, cookies, the names of files that have been uploaded using HTTP, and the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property."},{"content":"The RequestValidator class is a base class that you can implement in order to provide custom request validation.","pos":[477,589]},{"content":"By implementing this class, you can determine when validation occurs and what type of request data to perform validation on.","pos":[590,714]},{"content":"By default, ASP.NET provides cross-site scripting (XSS) checks.","pos":[721,784]},{"content":"However, you can supplement or replace the request validation logic that is provided in ASP.NET by creating a custom implementation of the XSS.","pos":[785,928]},{"content":"For example, you can write a custom request validation implementation that scans for SQL injection attacks in addition to checking for XSS attacks.","pos":[929,1076]},{"content":"To create custom request validation, you write a custom class that derives from the RequestValidator base class.","pos":[1083,1195]},{"content":"You then configure ASP.NET to use the custom request validator in the application-level Web.config file.","pos":[1196,1300]},{"content":"You can put the custom class in the App_Code folder, in a compiled class library in the Bin folder, or in a compiled class library in the GAC.","pos":[1301,1443]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Only one custom request validation type can be configured for an application.","pos":[1449,1539],"source":"      > [!NOTE] >  Only one custom request validation type can be configured for an application."},{"content":"It is not possible to configure a different request validation type for individual virtual paths or pages.","pos":[1540,1646]}]},{"pos":[3539,3633],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Util.RequestValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Util.RequestValidator\"></xref> class."},{"pos":[3646,4628],"content":"The <xref:System.Web.Util.RequestValidator> class has a default constructor. When a new instance of the class is initialized, an internal method retrieves custom validation details from the application's configuration information. The configuration details are contained in the <xref:System.Web.Configuration.HttpRuntimeSection> section. For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) and the <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A> attribute.       During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is maintained in the <xref:System.Web.Util.RequestValidator.Current%2A> property. ASP.NET does not create a new request validator instance per request. Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.Util.RequestValidator&gt; class has a default constructor.","pos":[0,76],"source":"The <xref:System.Web.Util.RequestValidator> class has a default constructor."},{"content":"When a new instance of the class is initialized, an internal method retrieves custom validation details from the application's configuration information.","pos":[77,230]},{"content":"The configuration details are contained in the &lt;xref:System.Web.Configuration.HttpRuntimeSection&gt; section.","pos":[231,337],"source":" The configuration details are contained in the <xref:System.Web.Configuration.HttpRuntimeSection> section."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> and the &lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A&gt; attribute.","pos":[338,576],"source":" For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) and the <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A> attribute."},{"content":"During initialization, a single instance of the &lt;xref:System.Web.Util.RequestValidator&gt; class is created, and a reference to the instance is maintained in the &lt;xref:System.Web.Util.RequestValidator.Current%2A&gt; property.","pos":[583,802],"source":"       During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is maintained in the <xref:System.Web.Util.RequestValidator.Current%2A> property."},{"content":"ASP.NET does not create a new request validator instance per request.","pos":[803,872]},{"content":"Therefore, custom implementations of the &lt;xref:System.Web.Util.RequestValidator&gt; class must be thread-safe.","pos":[873,980],"source":" Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe."}]},{"pos":[5113,5252],"content":"Gets or sets a reference to the current <bpt id=\"p1\">&lt;xref href=\"System.Web.Util.RequestValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance that will be used in an application.","needQuote":true,"needEscape":true,"source":"Gets or sets a reference to the current <xref href=\"System.Web.Util.RequestValidator\"></xref> instance that will be used in an application."},{"pos":[5265,6034],"content":"The Current property maintains a reference to the single allowed instance of the <xref:System.Web.Util.RequestValidator> class. If no instance exists, a new one is created. If an instance already exists, the current instance is returned.       During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is made available in the Current property. ASP.NET does not create a new request validator instance per request. Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe.      > [!NOTE] >  The Current property is not thread-safe while the property is setting a reference to the current <xref:System.Web.Util.RequestValidator> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Current property maintains a reference to the single allowed instance of the &lt;xref:System.Web.Util.RequestValidator&gt; class.","pos":[0,127],"source":"The Current property maintains a reference to the single allowed instance of the <xref:System.Web.Util.RequestValidator> class."},{"content":"If no instance exists, a new one is created.","pos":[128,172]},{"content":"If an instance already exists, the current instance is returned.","pos":[173,237]},{"content":"During initialization, a single instance of the &lt;xref:System.Web.Util.RequestValidator&gt; class is created, and a reference to the instance is made available in the Current property.","pos":[244,424],"source":"       During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is made available in the Current property."},{"content":"ASP.NET does not create a new request validator instance per request.","pos":[425,494]},{"content":"Therefore, custom implementations of the &lt;xref:System.Web.Util.RequestValidator&gt; class must be thread-safe.","pos":[495,602],"source":" Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The Current property is not thread-safe while the property is setting a reference to the current &lt;xref:System.Web.Util.RequestValidator&gt; class.","pos":[608,764],"source":"      > [!NOTE] >  The Current property is not thread-safe while the property is setting a reference to the current <xref:System.Web.Util.RequestValidator> class."}]},{"pos":[6204,6283],"content":"An instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Util.RequestValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"An instance of the <xref href=\"System.Web.Util.RequestValidator\"></xref> class."},{"pos":[6454,6531],"content":"The property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7352,7510],"content":"Provides a public method that calls the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString*> method in order to validate HTTP request data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a public method that calls the protected &lt;xref:System.Web.Util.RequestValidator.IsValidRequestString*&gt; method in order to validate HTTP request data.","pos":[0,158],"source":"Provides a public method that calls the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString*> method in order to validate HTTP request data."}]},{"pos":[7523,8034],"content":"The InvokeIsValidRequestString method provides public access to the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method. This lets you create a custom wrapper class for the <xref:System.Web.Util.RequestValidator> class and call the <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method without having to inherit from the <xref:System.Web.Util.RequestValidator> class.       For information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The InvokeIsValidRequestString method provides public access to the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method. This lets you create a custom wrapper class for the <xref:System.Web.Util.RequestValidator> class and call the <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method without having to inherit from the <xref:System.Web.Util.RequestValidator> class.       For information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.","pos":[0,509],"nodes":[{"content":"The InvokeIsValidRequestString method provides public access to the protected &lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt; method.","pos":[0,149],"source":"The InvokeIsValidRequestString method provides public access to the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method."},{"content":"This lets you create a custom wrapper class for the &lt;xref:System.Web.Util.RequestValidator&gt; class and call the &lt;xref:System.Web.Util.RequestValidator.IsValidRequestString%2A&gt; method without having to inherit from the &lt;xref:System.Web.Util.RequestValidator&gt; class.","pos":[150,413],"source":" This lets you create a custom wrapper class for the <xref:System.Web.Util.RequestValidator> class and call the <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method without having to inherit from the <xref:System.Web.Util.RequestValidator> class."},{"content":"For information about request validation, see &lt;xref:System.Web.UnvalidatedRequestValues&gt;.","pos":[420,509],"source":"       For information about request validation, see <xref:System.Web.UnvalidatedRequestValues>."}]}]},{"pos":[8353,8385],"content":"The HTTP context of the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP context of the request.","pos":[0,32]}]},{"pos":[8447,8481],"content":"The HTTP request data to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request data to validate.","pos":[0,34]}]},{"pos":[8588,9309],"content":"An enumeration that represents the source of request data that is being validated. The following are possible values for the enumeration:      -   <xref uid=\"langword_csharp_QueryString\" name=\"QueryString\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Form \" name=\"Form \" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Cookies\" name=\"Cookies\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Files\" name=\"Files\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Path\" name=\"Path\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_PathInfo\" name=\"PathInfo\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Headers\" name=\"Headers\" href=\"\"></xref>","needQuote":false,"needEscape":true,"nodes":[{"content":"An enumeration that represents the source of request data that is being validated.","pos":[0,82]},{"content":"The following are possible values for the enumeration:      -   <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_QueryString\" name=\"QueryString\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><ph id=\"ph1\">      -   </ph><bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Form \" name=\"Form \" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept><ph id=\"ph2\">      -   </ph><bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Cookies\" name=\"Cookies\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept><ph id=\"ph3\">      -   </ph><bpt id=\"p4\">&lt;xref uid=\"langword_csharp_Files\" name=\"Files\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept><ph id=\"ph4\">      -   </ph><bpt id=\"p5\">&lt;xref uid=\"langword_csharp_Path\" name=\"Path\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept><ph id=\"ph5\">      -   </ph><bpt id=\"p6\">&lt;xref uid=\"langword_csharp_PathInfo\" name=\"PathInfo\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept><ph id=\"ph6\">      -   </ph><bpt id=\"p7\">&lt;xref uid=\"langword_csharp_Headers\" name=\"Headers\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept>","pos":[83,665],"source":" The following are possible values for the enumeration:      -   <xref uid=\"langword_csharp_QueryString\" name=\"QueryString\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Form \" name=\"Form \" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Cookies\" name=\"Cookies\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Files\" name=\"Files\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Path\" name=\"Path\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_PathInfo\" name=\"PathInfo\" href=\"\"></xref>      -   <xref uid=\"langword_csharp_Headers\" name=\"Headers\" href=\"\"></xref>"}]},{"pos":[9380,9661],"content":"(Optional) The key in the request collection of the item to validate. This parameter is used if the data to validate is obtained from a collection. If the data to validate is not from a collection, this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"(Optional) The key in the request collection of the item to validate.","pos":[0,69]},{"content":"This parameter is used if the data to validate is obtained from a collection.","pos":[70,147]},{"content":"If the data to validate is not from a collection, this parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[148,281],"source":" If the data to validate is not from a collection, this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9739,9906],"content":"When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.","pos":[0,167],"nodes":[{"content":"When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection.","pos":[0,127]},{"content":"This parameter is passed uninitialized.","pos":[128,167]}]}]},{"pos":[9965,10216],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the string to validate does not contain unencoded characters that could be used in a malicious scripting attack; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the string to validate does not contain unencoded characters that could be used in a malicious scripting attack; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11097,11148],"content":"Validates a string that contains HTTP request data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates a string that contains HTTP request data.","pos":[0,51]}]},{"pos":[11161,12388],"content":"You implement this method to perform custom validation of request data. The base behavior of the IsValidRequestString method is like the behavior that ASP.NET implements internally to check for dangerous strings in cross-site scripting validation. For more information, see [How To: Prevent Cross-Site Scripting in ASP.NET](http://go.microsoft.com/fwlink/?LinkID=178708).       If custom validation logic detects an error, this method should return `false` and provide a value in `validationFailureIndex` to indicate the starting point of the text that caused the error. The value in `validationFailureIndex` must be 0 or a positive integer.       The logic in a request validation check proceeds as follows:      -   The <xref:System.Web.HttpRequest> class performs a null-character removal check on the incoming data.      -   The <xref:System.Web.HttpRequest> class calls either the IsValidRequestString method (the default implementation of the base method) or calls a derived version of the method.      -   If IsValidRequestString method returns `false` to indicate a validation failure, ASP.NET constructs an error string (if necessary) and throws an <xref:System.Web.HttpRequestValidationException> exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You implement this method to perform custom validation of request data.","pos":[0,71]},{"content":"The base behavior of the IsValidRequestString method is like the behavior that ASP.NET implements internally to check for dangerous strings in cross-site scripting validation.","pos":[72,247]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How To: Prevent Cross-Site Scripting in ASP.NET<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=178708)</ept>.","pos":[248,371],"source":" For more information, see [How To: Prevent Cross-Site Scripting in ASP.NET](http://go.microsoft.com/fwlink/?LinkID=178708)."},{"content":"If custom validation logic detects an error, this method should return <ph id=\"ph1\">`false`</ph> and provide a value in <ph id=\"ph2\">`validationFailureIndex`</ph> to indicate the starting point of the text that caused the error.","pos":[378,570],"source":"       If custom validation logic detects an error, this method should return `false` and provide a value in `validationFailureIndex` to indicate the starting point of the text that caused the error."},{"content":"The value in <ph id=\"ph1\">`validationFailureIndex`</ph> must be 0 or a positive integer.","pos":[571,641],"source":" The value in `validationFailureIndex` must be 0 or a positive integer."},{"content":"The logic in a request validation check proceeds as follows:      -   The &lt;xref:System.Web.HttpRequest&gt; class performs a null-character removal check on the incoming data.","pos":[648,819],"source":"       The logic in a request validation check proceeds as follows:      -   The <xref:System.Web.HttpRequest> class performs a null-character removal check on the incoming data."},{"content":"-   The &lt;xref:System.Web.HttpRequest&gt; class calls either the IsValidRequestString method (the default implementation of the base method) or calls a derived version of the method.","pos":[825,1003],"source":"      -   The <xref:System.Web.HttpRequest> class calls either the IsValidRequestString method (the default implementation of the base method) or calls a derived version of the method."},{"content":"-   If IsValidRequestString method returns <ph id=\"ph1\">`false`</ph> to indicate a validation failure, ASP.NET constructs an error string (if necessary) and throws an &lt;xref:System.Web.HttpRequestValidationException&gt; exception.","pos":[1009,1217],"source":"      -   If IsValidRequestString method returns `false` to indicate a validation failure, ASP.NET constructs an error string (if necessary) and throws an <xref:System.Web.HttpRequestValidationException> exception."}]},{"pos":[12712,12747],"content":"The context of the current request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context of the current request.","pos":[0,35]}]},{"pos":[12809,12843],"content":"The HTTP request data to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request data to validate.","pos":[0,34]}]},{"pos":[12950,13666],"content":"An enumeration that represents the source of request data that is being validated. The following are possible values for the enumeration:       <xref uid=\"langword_csharp_QueryString\" name=\"QueryString\" href=\"\"></xref><xref uid=\"langword_csharp_Form \" name=\"Form \" href=\"\"></xref><xref uid=\"langword_csharp_Cookies\" name=\"Cookies\" href=\"\"></xref><xref uid=\"langword_csharp_Files\" name=\"Files\" href=\"\"></xref><xref uid=\"langword_csharp_RawUrl\" name=\"RawUrl\" href=\"\"></xref><xref uid=\"langword_csharp_Path\" name=\"Path\" href=\"\"></xref><xref uid=\"langword_csharp_PathInfo\" name=\"PathInfo\" href=\"\"></xref><xref uid=\"langword_csharp_Headers\" name=\"Headers\" href=\"\"></xref>","needQuote":false,"needEscape":true,"nodes":[{"content":"An enumeration that represents the source of request data that is being validated.","pos":[0,82]},{"content":"The following are possible values for the enumeration:       <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_QueryString\" name=\"QueryString\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Form \" name=\"Form \" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept><bpt id=\"p3\">&lt;xref uid=\"langword_csharp_Cookies\" name=\"Cookies\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept><bpt id=\"p4\">&lt;xref uid=\"langword_csharp_Files\" name=\"Files\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept><bpt id=\"p5\">&lt;xref uid=\"langword_csharp_RawUrl\" name=\"RawUrl\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept><bpt id=\"p6\">&lt;xref uid=\"langword_csharp_Path\" name=\"Path\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept><bpt id=\"p7\">&lt;xref uid=\"langword_csharp_PathInfo\" name=\"PathInfo\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept><bpt id=\"p8\">&lt;xref uid=\"langword_csharp_Headers\" name=\"Headers\" href=\"\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>","pos":[83,666],"source":" The following are possible values for the enumeration:       <xref uid=\"langword_csharp_QueryString\" name=\"QueryString\" href=\"\"></xref><xref uid=\"langword_csharp_Form \" name=\"Form \" href=\"\"></xref><xref uid=\"langword_csharp_Cookies\" name=\"Cookies\" href=\"\"></xref><xref uid=\"langword_csharp_Files\" name=\"Files\" href=\"\"></xref><xref uid=\"langword_csharp_RawUrl\" name=\"RawUrl\" href=\"\"></xref><xref uid=\"langword_csharp_Path\" name=\"Path\" href=\"\"></xref><xref uid=\"langword_csharp_PathInfo\" name=\"PathInfo\" href=\"\"></xref><xref uid=\"langword_csharp_Headers\" name=\"Headers\" href=\"\"></xref>"}]},{"pos":[13737,14036],"content":"The key in the request collection of the item to validate. This parameter is optional. This parameter is used if the data to validate is obtained from a collection. If the data to validate is not from a collection, `collectionKey` can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key in the request collection of the item to validate.","pos":[0,58]},{"content":"This parameter is optional.","pos":[59,86]},{"content":"This parameter is used if the data to validate is obtained from a collection.","pos":[87,164]},{"content":"If the data to validate is not from a collection, <ph id=\"ph1\">`collectionKey`</ph> can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[165,299],"source":" If the data to validate is not from a collection, `collectionKey` can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14114,14281],"content":"When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.","pos":[0,167],"nodes":[{"content":"When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection.","pos":[0,127]},{"content":"This parameter is passed uninitialized.","pos":[128,167]}]}]},{"pos":[14340,14515],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the string to be validated is valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the string to be validated is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Util.RequestValidator\n  id: RequestValidator\n  children:\n  - System.Web.Util.RequestValidator.#ctor\n  - System.Web.Util.RequestValidator.Current\n  - System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  - System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  langs:\n  - csharp\n  name: RequestValidator\n  nameWithType: RequestValidator\n  fullName: System.Web.Util.RequestValidator\n  type: Class\n  summary: Defines base methods for custom request validation.\n  remarks: \"By default, ASP.NET does not validate requests until code explicitly requests a value from the request. For example, ASP.NET does not validate query-string values until code accesses the <xref:System.Web.HttpRequest.QueryString%2A> collection. By default, ASP.NET also does not validate some types of request data, such as form values, cookies, the names of files that have been uploaded using HTTP, and the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property.  \\n  \\n The RequestValidator class is a base class that you can implement in order to provide custom request validation. By implementing this class, you can determine when validation occurs and what type of request data to perform validation on.  \\n  \\n By default, ASP.NET provides cross-site scripting (XSS) checks. However, you can supplement or replace the request validation logic that is provided in ASP.NET by creating a custom implementation of the XSS. For example, you can write a custom request validation implementation that scans for SQL injection attacks in addition to checking for XSS attacks.  \\n  \\n To create custom request validation, you write a custom class that derives from the RequestValidator base class. You then configure ASP.NET to use the custom request validator in the application-level Web.config file. You can put the custom class in the App_Code folder, in a compiled class library in the Bin folder, or in a compiled class library in the GAC.  \\n  \\n> [!NOTE]\\n>  Only one custom request validation type can be configured for an application. It is not possible to configure a different request validation type for individual virtual paths or pages.\"\n  example:\n  - \"The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.  \\n  \\n [!code-cs[System.Web.Util.RequestValidator#1](~/add/codesnippet/csharp/t-system.web.util.reques_1.cs)]\\n [!code-vb[System.Web.Util.RequestValidator#1](~/add/codesnippet/visualbasic/t-system.web.util.reques_1.vb)]  \\n  \\n The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.  \\n  \\n```  \\n<system.web>  \\n  <httpRuntime requestValidationType=\\\"CustomRequestValidation\\\" />  \\n</system.web>  \\n```\"\n  syntax:\n    content: public class RequestValidator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Util.RequestValidator.#ctor\n  id: '#ctor'\n  parent: System.Web.Util.RequestValidator\n  langs:\n  - csharp\n  name: RequestValidator()\n  nameWithType: RequestValidator.RequestValidator()\n  fullName: System.Web.Util.RequestValidator.RequestValidator()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Util\n  summary: Initializes a new instance of the <xref href=\"System.Web.Util.RequestValidator\"></xref> class.\n  remarks: \"The <xref:System.Web.Util.RequestValidator> class has a default constructor. When a new instance of the class is initialized, an internal method retrieves custom validation details from the application's configuration information. The configuration details are contained in the <xref:System.Web.Configuration.HttpRuntimeSection> section. For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) and the <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A> attribute.  \\n  \\n During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is maintained in the <xref:System.Web.Util.RequestValidator.Current%2A> property. ASP.NET does not create a new request validator instance per request. Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe.\"\n  syntax:\n    content: public RequestValidator ();\n    parameters: []\n  overload: System.Web.Util.RequestValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Util.RequestValidator.Current\n  id: Current\n  parent: System.Web.Util.RequestValidator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: RequestValidator.Current\n  fullName: System.Web.Util.RequestValidator.Current\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Util\n  summary: Gets or sets a reference to the current <xref href=\"System.Web.Util.RequestValidator\"></xref> instance that will be used in an application.\n  remarks: \"The Current property maintains a reference to the single allowed instance of the <xref:System.Web.Util.RequestValidator> class. If no instance exists, a new one is created. If an instance already exists, the current instance is returned.  \\n  \\n During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is made available in the Current property. ASP.NET does not create a new request validator instance per request. Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe.  \\n  \\n> [!NOTE]\\n>  The Current property is not thread-safe while the property is setting a reference to the current <xref:System.Web.Util.RequestValidator> class.\"\n  syntax:\n    content: public static System.Web.Util.RequestValidator Current { get; set; }\n    return:\n      type: System.Web.Util.RequestValidator\n      description: An instance of the <xref href=\"System.Web.Util.RequestValidator\"></xref> class.\n  overload: System.Web.Util.RequestValidator.Current*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  id: InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  parent: System.Web.Util.RequestValidator\n  langs:\n  - csharp\n  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Util\n  summary: Provides a public method that calls the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString*> method in order to validate HTTP request data.\n  remarks: \"The InvokeIsValidRequestString method provides public access to the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method. This lets you create a custom wrapper class for the <xref:System.Web.Util.RequestValidator> class and call the <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method without having to inherit from the <xref:System.Web.Util.RequestValidator> class.  \\n  \\n For information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.\"\n  syntax:\n    content: public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The HTTP context of the request.\n    - id: value\n      type: System.String\n      description: The HTTP request data to validate.\n    - id: requestValidationSource\n      type: System.Web.Util.RequestValidationSource\n      description: \"An enumeration that represents the source of request data that is being validated. The following are possible values for the enumeration:  \\n  \\n-   <xref uid=\\\"langword_csharp_QueryString\\\" name=\\\"QueryString\\\" href=\\\"\\\"></xref>  \\n  \\n-   <xref uid=\\\"langword_csharp_Form \\\" name=\\\"Form \\\" href=\\\"\\\"></xref>  \\n  \\n-   <xref uid=\\\"langword_csharp_Cookies\\\" name=\\\"Cookies\\\" href=\\\"\\\"></xref>  \\n  \\n-   <xref uid=\\\"langword_csharp_Files\\\" name=\\\"Files\\\" href=\\\"\\\"></xref>  \\n  \\n-   <xref uid=\\\"langword_csharp_Path\\\" name=\\\"Path\\\" href=\\\"\\\"></xref>  \\n  \\n-   <xref uid=\\\"langword_csharp_PathInfo\\\" name=\\\"PathInfo\\\" href=\\\"\\\"></xref>  \\n  \\n-   <xref uid=\\\"langword_csharp_Headers\\\" name=\\\"Headers\\\" href=\\\"\\\"></xref>\"\n    - id: collectionKey\n      type: System.String\n      description: (Optional) The key in the request collection of the item to validate. This parameter is used if the data to validate is obtained from a collection. If the data to validate is not from a collection, this parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: validationFailureIndex\n      type: System.Int32\n      description: When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the string to validate does not contain unencoded characters that could be used in a malicious scripting attack; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Util.RequestValidator.InvokeIsValidRequestString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  id: IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  parent: System.Web.Util.RequestValidator\n  langs:\n  - csharp\n  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Util\n  summary: Validates a string that contains HTTP request data.\n  remarks: \"You implement this method to perform custom validation of request data. The base behavior of the IsValidRequestString method is like the behavior that ASP.NET implements internally to check for dangerous strings in cross-site scripting validation. For more information, see [How To: Prevent Cross-Site Scripting in ASP.NET](http://go.microsoft.com/fwlink/?LinkID=178708).  \\n  \\n If custom validation logic detects an error, this method should return `false` and provide a value in `validationFailureIndex` to indicate the starting point of the text that caused the error. The value in `validationFailureIndex` must be 0 or a positive integer.  \\n  \\n The logic in a request validation check proceeds as follows:  \\n  \\n-   The <xref:System.Web.HttpRequest> class performs a null-character removal check on the incoming data.  \\n  \\n-   The <xref:System.Web.HttpRequest> class calls either the IsValidRequestString method (the default implementation of the base method) or calls a derived version of the method.  \\n  \\n-   If IsValidRequestString method returns `false` to indicate a validation failure, ASP.NET constructs an error string (if necessary) and throws an <xref:System.Web.HttpRequestValidationException> exception.\"\n  syntax:\n    content: protected virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The context of the current request.\n    - id: value\n      type: System.String\n      description: The HTTP request data to validate.\n    - id: requestValidationSource\n      type: System.Web.Util.RequestValidationSource\n      description: \"An enumeration that represents the source of request data that is being validated. The following are possible values for the enumeration:  \\n  \\n <xref uid=\\\"langword_csharp_QueryString\\\" name=\\\"QueryString\\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_Form \\\" name=\\\"Form \\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_Cookies\\\" name=\\\"Cookies\\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_Files\\\" name=\\\"Files\\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_RawUrl\\\" name=\\\"RawUrl\\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_Path\\\" name=\\\"Path\\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_PathInfo\\\" name=\\\"PathInfo\\\" href=\\\"\\\"></xref><xref uid=\\\"langword_csharp_Headers\\\" name=\\\"Headers\\\" href=\\\"\\\"></xref>\"\n    - id: collectionKey\n      type: System.String\n      description: The key in the request collection of the item to validate. This parameter is optional. This parameter is used if the data to validate is obtained from a collection. If the data to validate is not from a collection, `collectionKey` can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: validationFailureIndex\n      type: System.Int32\n      description: When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the string to be validated is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Util.RequestValidator.IsValidRequestString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.Util.RequestValidator.#ctor\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: RequestValidator()\n  nameWithType: RequestValidator.RequestValidator()\n  fullName: System.Web.Util.RequestValidator.RequestValidator()\n- uid: System.Web.Util.RequestValidator.Current\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: Current\n  nameWithType: RequestValidator.Current\n  fullName: System.Web.Util.RequestValidator.Current\n- uid: System.Web.Util.RequestValidator\n  parent: System.Web.Util\n  isExternal: false\n  name: RequestValidator\n  nameWithType: RequestValidator\n  fullName: System.Web.Util.RequestValidator\n- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Util.RequestValidationSource\n  parent: System.Web.Util\n  isExternal: false\n  name: RequestValidationSource\n  nameWithType: RequestValidationSource\n  fullName: System.Web.Util.RequestValidationSource\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)\n- uid: System.Web.Util.RequestValidator.#ctor*\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: RequestValidator\n  nameWithType: RequestValidator.RequestValidator\n- uid: System.Web.Util.RequestValidator.Current*\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: Current\n  nameWithType: RequestValidator.Current\n- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString*\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: InvokeIsValidRequestString\n  nameWithType: RequestValidator.InvokeIsValidRequestString\n- uid: System.Web.Util.RequestValidator.IsValidRequestString*\n  parent: System.Web.Util.RequestValidator\n  isExternal: false\n  name: IsValidRequestString\n  nameWithType: RequestValidator.IsValidRequestString\n"}