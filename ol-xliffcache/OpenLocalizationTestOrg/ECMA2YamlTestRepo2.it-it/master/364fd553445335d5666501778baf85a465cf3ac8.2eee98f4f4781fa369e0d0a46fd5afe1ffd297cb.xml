{"nodes":[{"pos":[2096,2197],"content":"When overridden in a derived class, represents a data store for writing and reading user annotations.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, represents a data store for writing and reading user annotations.","pos":[0,101]}]},{"pos":[2826,2938],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"></xref> class."},{"pos":[3667,3750],"content":"Adds a new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the store.","needQuote":true,"needEscape":true,"source":"Adds a new <xref href=\"System.Windows.Annotations.Annotation\"></xref> to the store."},{"pos":[3762,4427],"content":"When a new <xref:System.Windows.Annotations.Annotation> is added to the store its [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id%2A> property is set to a new value.  When AddAnnotation is called, its <xref:System.Windows.Annotations.Annotation.Id%2A> property is checked to see if the <xref:System.Windows.Annotations.Annotation> already has been added to the store.  If the <xref:System.Windows.Annotations.Annotation> already has been added and exists in the store (as determined by its <xref:System.Windows.Annotations.Annotation.Id%2A> property) an <xref:System.ArgumentException> error is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a new &lt;xref:System.Windows.Annotations.Annotation&gt; is added to the store its <ph id=\"ph1\">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.Windows.Annotations.Annotation.Id%2A&gt; property is set to a new value.","pos":[0,228],"source":"When a new <xref:System.Windows.Annotations.Annotation> is added to the store its [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id%2A> property is set to a new value."},{"content":"When AddAnnotation is called, its &lt;xref:System.Windows.Annotations.Annotation.Id%2A&gt; property is checked to see if the &lt;xref:System.Windows.Annotations.Annotation&gt; already has been added to the store.","pos":[230,430],"source":"  When AddAnnotation is called, its <xref:System.Windows.Annotations.Annotation.Id%2A> property is checked to see if the <xref:System.Windows.Annotations.Annotation> already has been added to the store."},{"content":"If the &lt;xref:System.Windows.Annotations.Annotation&gt; already has been added and exists in the store (as determined by its &lt;xref:System.Windows.Annotations.Annotation.Id%2A&gt; property) an &lt;xref:System.ArgumentException&gt; error is thrown.","pos":[432,665],"source":"  If the <xref:System.Windows.Annotations.Annotation> already has been added and exists in the store (as determined by its <xref:System.Windows.Annotations.Annotation.Id%2A> property) an <xref:System.ArgumentException> error is thrown."}]},{"pos":[4650,4685],"content":"The annotation to add to the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The annotation to add to the store.","pos":[0,35]}]},{"pos":[4880,4971],"content":"<ph id=\"ph1\">&lt;code&gt;newAnnotation&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>newAnnotation</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5066,5234],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the same &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; property value already exists in the store.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Annotations.Annotation\"></xref> with the same <xref:System.Windows.Annotations.Annotation.Id*> property value already exists in the store."},{"pos":[5341,5437],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[5892,6001],"content":"Occurs when an anchor on any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the store changes.","needQuote":true,"needEscape":true,"source":"Occurs when an anchor on any <xref href=\"System.Windows.Annotations.Annotation\"></xref> in the store changes."},{"pos":[6013,6260],"content":"The AnchorChanged event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Anchors%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AnchorChanged event can be used to monitor changes to the annotation &lt;xref:System.Windows.Annotations.Annotation.Anchors%2A&gt; contained in the store without the need to register on each &lt;xref:System.Windows.Annotations.Annotation&gt; individually.","pos":[0,247],"source":"The AnchorChanged event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Anchors%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually."}]},{"pos":[6485,6497],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6969,7078],"content":"Occurs when an author on any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the store changes.","needQuote":true,"needEscape":true,"source":"Occurs when an author on any <xref href=\"System.Windows.Annotations.Annotation\"></xref> in the store changes."},{"pos":[7090,7395],"content":"The <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Authors%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged&gt; event can be used to monitor changes to the annotation &lt;xref:System.Windows.Annotations.Annotation.Authors%2A&gt; contained in the store without the need to register on each &lt;xref:System.Windows.Annotations.Annotation&gt; individually.","pos":[0,305],"source":"The <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Authors%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually."}]},{"pos":[7616,7628],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8083,8210],"content":"Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.","pos":[0,127]}]},{"pos":[8223,8637],"content":"Applications that use an explicit-save model can set AutoFlush to `false` and call <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> directly when appropriate.       Applications that use an implicit-save model can set AutoFlush to `true` to cause <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> to be called automatically after every store operation (add, delete, or modify).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Applications that use an explicit-save model can set AutoFlush to <ph id=\"ph1\">`false`</ph> and call &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A&gt; directly when appropriate.","pos":[0,176],"source":"Applications that use an explicit-save model can set AutoFlush to `false` and call <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> directly when appropriate."},{"content":"Applications that use an implicit-save model can set AutoFlush to <ph id=\"ph1\">`true`</ph> to cause &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A&gt; to be called automatically after every store operation (add, delete, or modify).","pos":[183,412],"source":"       Applications that use an implicit-save model can set AutoFlush to `true` to cause <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> to be called automatically after every store operation (add, delete, or modify)."}]},{"pos":[8765,9160],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if data in the annotation buffers is to be written when the application explicitly calls &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Flush*&gt;.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if data in the annotation buffers is to be written when the application explicitly calls <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush*>."},{"pos":[9701,9808],"content":"Occurs when a cargo on any <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the store changes.","needQuote":true,"needEscape":true,"source":"Occurs when a cargo on any <xref href=\"System.Windows.Annotations.Annotation\"></xref> in the store changes."},{"pos":[9820,10065],"content":"The CargoChanged event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Cargos%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CargoChanged event can be used to monitor changes to the annotation &lt;xref:System.Windows.Annotations.Annotation.Cargos%2A&gt; contained in the store without the need to register on each &lt;xref:System.Windows.Annotations.Annotation&gt; individually.","pos":[0,245],"source":"The CargoChanged event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Cargos%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually."}]},{"pos":[10289,10301],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10833,10939],"content":"Deletes the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the annotation with the specified &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; from the store.","pos":[0,106],"source":"Deletes the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store."}]},{"pos":[11427,11585],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; property of the annotation to be deleted.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be deleted."},{"pos":[11667,11861],"content":"The annotation that was deleted; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an annotation with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">annotationId</ph><ept id=\"p2\">&lt;/code&gt;</ept> was not found in the store.","needQuote":true,"needEscape":true,"source":"The annotation that was deleted; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an annotation with the specified <code>annotationId</code> was not found in the store."},{"pos":[12063,12159],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[12591,12654],"content":"Releases all managed and unmanaged resources used by the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases all managed and unmanaged resources used by the store.","pos":[0,63]}]},{"pos":[12667,13828],"content":"Applications should call Dispose when finished with the <xref:System.Windows.Annotations.Storage.AnnotationStore>.  After calling Dispose the application can release all references to the <xref:System.Windows.Annotations.Storage.AnnotationStore> to allow the garbage collector to reclaim the memory that the <xref:System.Windows.Annotations.Storage.AnnotationStore> was occupying.  For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).       The public Dispose method calls the protected <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A>`(Boolean)` method with the `disposing` parameter of `true` to release all managed and unmanaged resources.      > [!NOTE] >  Call Dispose before the last reference to the <xref:System.Windows.Annotations.Storage.AnnotationStore> is released.  If Dispose is not called, <xref:System.Windows.Annotations.Storage.AnnotationStore> resources will not be freed until the garbage collector calls the store's <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Applications should call Dispose when finished with the &lt;xref:System.Windows.Annotations.Storage.AnnotationStore&gt;.","pos":[0,114],"source":"Applications should call Dispose when finished with the <xref:System.Windows.Annotations.Storage.AnnotationStore>."},{"content":"After calling Dispose the application can release all references to the &lt;xref:System.Windows.Annotations.Storage.AnnotationStore&gt; to allow the garbage collector to reclaim the memory that the &lt;xref:System.Windows.Annotations.Storage.AnnotationStore&gt; was occupying.","pos":[116,380],"source":"  After calling Dispose the application can release all references to the <xref:System.Windows.Annotations.Storage.AnnotationStore> to allow the garbage collector to reclaim the memory that the <xref:System.Windows.Annotations.Storage.AnnotationStore> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[382,556],"source":"  For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"The public Dispose method calls the protected &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A&gt;<ph id=\"ph1\">`(Boolean)`</ph> method with the <ph id=\"ph2\">`disposing`</ph> parameter of <ph id=\"ph3\">`true`</ph> to release all managed and unmanaged resources.","pos":[563,784],"source":"       The public Dispose method calls the protected <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A>`(Boolean)` method with the `disposing` parameter of `true` to release all managed and unmanaged resources."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Call Dispose before the last reference to the &lt;xref:System.Windows.Annotations.Storage.AnnotationStore&gt; is released.","pos":[790,919],"source":"      > [!NOTE] >  Call Dispose before the last reference to the <xref:System.Windows.Annotations.Storage.AnnotationStore> is released."},{"content":"If Dispose is not called, &lt;xref:System.Windows.Annotations.Storage.AnnotationStore&gt; resources will not be freed until the garbage collector calls the store's &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A&gt; method.","pos":[921,1156],"source":"  If Dispose is not called, <xref:System.Windows.Annotations.Storage.AnnotationStore> resources will not be freed until the garbage collector calls the store's <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> method."}]},{"pos":[14469,14566],"content":"Releases the unmanaged resources used by the store and optionally releases the managed resources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Releases the unmanaged resources used by the store and optionally releases the managed resources.","pos":[0,97]}]},{"pos":[14579,15264],"content":"This protected Dispose method is called by the public <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A>and <xref:System.Object.Finalize%2A> methods.  The public <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> invokes the protected Dispose`(Boolean)` method with the `disposing` parameter set to `true`.  <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to `false`.       When the `disposing` parameter is `true`, Dispose releases all resources held by any managed objects that the <xref:System.Windows.Annotations.Storage.AnnotationStore> references.  Dispose also invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This protected Dispose method is called by the public &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A&gt;and &lt;xref:System.Object.Finalize%2A&gt; methods.","pos":[0,167],"source":"This protected Dispose method is called by the public <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A>and <xref:System.Object.Finalize%2A> methods."},{"content":"The public &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A&gt; invokes the protected Dispose<ph id=\"ph1\">`(Boolean)`</ph> method with the <ph id=\"ph2\">`disposing`</ph> parameter set to <ph id=\"ph3\">`true`</ph>.","pos":[169,342],"source":"  The public <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> invokes the protected Dispose`(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id=\"ph1\">`disposing`</ph> set to <ph id=\"ph2\">`false`</ph>.","pos":[344,425],"source":"  <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, Dispose releases all resources held by any managed objects that the &lt;xref:System.Windows.Annotations.Storage.AnnotationStore&gt; references.","pos":[432,611],"source":"       When the `disposing` parameter is `true`, Dispose releases all resources held by any managed objects that the <xref:System.Windows.Annotations.Storage.AnnotationStore> references."},{"content":"Dispose also invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[613,683],"source":"  Dispose also invokes the `Dispose()` method of each referenced object."}]},{"pos":[15420,15629],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[16155,16279],"content":"Guarantees that <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> will eventually be called for this store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Guarantees that &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; will eventually be called for this store.","pos":[0,124],"source":"Guarantees that <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> will eventually be called for this store."}]},{"pos":[16292,16880],"content":"This method overrides base <xref:System.Object.Finalize%2A> method.  The application program should not call Finalize directly.  Finalize is automatically invoked during garbage collection unless disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method overrides base &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[0,67],"source":"This method overrides base <xref:System.Object.Finalize%2A> method."},{"content":"The application program should not call Finalize directly.","pos":[69,127]},{"content":"Finalize is automatically invoked during garbage collection unless disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A&gt; method.","pos":[129,266],"source":"  Finalize is automatically invoked during garbage collection unless disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Finalize Methods and Destructors<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id=\"p2\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id=\"p3\">[</bpt>Overriding the Finalize Method<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","pos":[273,586],"source":"       For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}]},{"pos":[17456,17559],"content":"Forces any annotation data retained in internal buffers to be written to the underlying storage device.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces any annotation data retained in internal buffers to be written to the underlying storage device.","pos":[0,103]}]},{"pos":[17572,17990],"content":"Applications that use an explicit-save model can set <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> to `false` and call Flush directly when appropriate.       Applications that use an implicit-save model can set the <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> to `true` to cause Flush to be called automatically after every store operation (add, delete, or modify).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Applications that use an explicit-save model can set &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A&gt; to <ph id=\"ph1\">`false`</ph> and call Flush directly when appropriate.","pos":[0,176],"source":"Applications that use an explicit-save model can set <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> to `false` and call Flush directly when appropriate."},{"content":"Applications that use an implicit-save model can set the &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A&gt; to <ph id=\"ph1\">`true`</ph> to cause Flush to be called automatically after every store operation (add, delete, or modify).","pos":[183,416],"source":"       Applications that use an implicit-save model can set the <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> to `true` to cause Flush to be called automatically after every store operation (add, delete, or modify)."}]},{"pos":[18979,19075],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[19575,19681],"content":"Returns the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the annotation with the specified &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; from the store.","pos":[0,106],"source":"Returns the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store."}]},{"pos":[19876,20035],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.Windows.Annotations.Annotation.Id*&gt; property of the annotation to be returned.","needQuote":true,"needEscape":true,"source":"The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be returned."},{"pos":[20117,20328],"content":"The annotation with the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">annotationId</ph><ept id=\"p1\">&lt;/code&gt;</ept>; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if an annotation with the specified <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">annotationId</ph><ept id=\"p3\">&lt;/code&gt;</ept> was not found in the store.","needQuote":true,"needEscape":true,"source":"The annotation with the given <code>annotationId</code>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if an annotation with the specified <code>annotationId</code> was not found in the store."},{"pos":[20527,20623],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[21090,21141],"content":"Returns a list of all the annotations in the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of all the annotations in the store.","pos":[0,51]}]},{"pos":[21697,21758],"content":"The list of all annotations currently contained in the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of all annotations currently contained in the store.","pos":[0,61]}]},{"pos":[21958,22054],"content":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called on the store.","pos":[0,96],"source":"<xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store."}]},{"pos":[22649,22860],"content":"Returns a list of annotations that have &lt;xref:System.Windows.Annotations.Annotation.Anchors*&gt; with locators that begin with a matching <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.ContentLocatorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sequence.","needQuote":true,"needEscape":true,"source":"Returns a list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that begin with a matching <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence."},{"pos":[22872,23101],"content":"This GetAnnotations method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This GetAnnotations method internally uses the &lt;xref:System.Windows.Annotations.ContentLocator.StartsWith%2A&gt; method of the &lt;xref:System.Windows.Annotations.ContentLocator&gt; class to search and match for the annotations to return.","pos":[0,229],"source":"This GetAnnotations method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return."}]},{"pos":[23400,23524],"content":"The starting <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.ContentLocatorPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> sequence to return matching annotations for.","needQuote":true,"needEscape":true,"source":"The starting <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence to return matching annotations for."},{"pos":[23640,23911],"content":"The list of annotations that have &lt;xref:System.Windows.Annotations.Annotation.Anchors*&gt; with locators that start and match the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">anchorLocator</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if no matching annotations were found.","needQuote":true,"needEscape":true,"source":"The list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that start and match the given <code>anchorLocator</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no matching annotations were found."},{"pos":[24450,24569],"content":"Gets a value that indicates whether <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called.","pos":[0,119],"source":"Gets a value that indicates whether <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called."}]},{"pos":[24686,24988],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if &lt;xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*&gt; has been called; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,222],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[224,302],"source":"  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[25780,25883],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\"></xref> event."},{"pos":[26140,26155],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[26942,27045],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\"></xref> event."},{"pos":[27298,27313],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[28105,28207],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\"></xref> event."},{"pos":[28463,28478],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[29290,29399],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\"></xref> event."},{"pos":[29660,29675],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[30263,30375],"content":"Occurs when an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Annotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is added to or deleted from the store.","needQuote":true,"needEscape":true,"source":"Occurs when an <xref href=\"System.Windows.Annotations.Annotation\"></xref> is added to or deleted from the store."},{"pos":[31090,31102],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31552,31695],"content":"Gets the object to use as a synchronization lock for <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> critical sections.","needQuote":true,"needEscape":true,"source":"Gets the object to use as a synchronization lock for <xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"></xref> critical sections."},{"pos":[31811,31949],"content":"The object to use as a synchronization lock for <bpt id=\"p1\">&lt;xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> critical sections.","needQuote":true,"needEscape":true,"source":"The object to use as a synchronization lock for <xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"></xref> critical sections."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Annotations.Storage.AnnotationStore\n  id: AnnotationStore\n  children:\n  - System.Windows.Annotations.Storage.AnnotationStore.#ctor\n  - System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)\n  - System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.AutoFlush\n  - System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)\n  - System.Windows.Annotations.Storage.AnnotationStore.Dispose\n  - System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)\n  - System.Windows.Annotations.Storage.AnnotationStore.Finalize\n  - System.Windows.Annotations.Storage.AnnotationStore.Flush\n  - System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)\n  - System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations\n  - System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)\n  - System.Windows.Annotations.Storage.AnnotationStore.IsDisposed\n  - System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  - System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\n  - System.Windows.Annotations.Storage.AnnotationStore.SyncRoot\n  langs:\n  - csharp\n  name: AnnotationStore\n  nameWithType: AnnotationStore\n  fullName: System.Windows.Annotations.Storage.AnnotationStore\n  type: Class\n  summary: When overridden in a derived class, represents a data store for writing and reading user annotations.\n  syntax:\n    content: 'public abstract class AnnotationStore : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.#ctor\n  id: '#ctor'\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: AnnotationStore()\n  nameWithType: AnnotationStore.AnnotationStore()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AnnotationStore()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"></xref> class.\n  syntax:\n    content: protected AnnotationStore ();\n    parameters: []\n  overload: System.Windows.Annotations.Storage.AnnotationStore.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)\n  id: AddAnnotation(System.Windows.Annotations.Annotation)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: AddAnnotation(Annotation)\n  nameWithType: AnnotationStore.AddAnnotation(Annotation)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(Annotation)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Adds a new <xref href=\"System.Windows.Annotations.Annotation\"></xref> to the store.\n  remarks: When a new <xref:System.Windows.Annotations.Annotation> is added to the store its [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id%2A> property is set to a new value.  When AddAnnotation is called, its <xref:System.Windows.Annotations.Annotation.Id%2A> property is checked to see if the <xref:System.Windows.Annotations.Annotation> already has been added to the store.  If the <xref:System.Windows.Annotations.Annotation> already has been added and exists in the store (as determined by its <xref:System.Windows.Annotations.Annotation.Id%2A> property) an <xref:System.ArgumentException> error is thrown.\n  syntax:\n    content: public abstract void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);\n    parameters:\n    - id: newAnnotation\n      type: System.Windows.Annotations.Annotation\n      description: The annotation to add to the store.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>newAnnotation</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An <xref href=\"System.Windows.Annotations.Annotation\"></xref> with the same <xref:System.Windows.Annotations.Annotation.Id*> property value already exists in the store.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\n  id: AnchorChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: AnchorChanged\n  nameWithType: AnnotationStore.AnchorChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Occurs when an anchor on any <xref href=\"System.Windows.Annotations.Annotation\"></xref> in the store changes.\n  remarks: The AnchorChanged event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Anchors%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually.\n  syntax:\n    content: public event System.Windows.Annotations.AnnotationResourceChangedEventHandler AnchorChanged;\n    return:\n      type: System.Windows.Annotations.AnnotationResourceChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\n  id: AuthorChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: AuthorChanged\n  nameWithType: AnnotationStore.AuthorChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Occurs when an author on any <xref href=\"System.Windows.Annotations.Annotation\"></xref> in the store changes.\n  remarks: The <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Authors%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually.\n  syntax:\n    content: public event System.Windows.Annotations.AnnotationAuthorChangedEventHandler AuthorChanged;\n    return:\n      type: System.Windows.Annotations.AnnotationAuthorChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AutoFlush\n  id: AutoFlush\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: AutoFlush\n  nameWithType: AnnotationStore.AutoFlush\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AutoFlush\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.\n  remarks: \"Applications that use an explicit-save model can set AutoFlush to `false` and call <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> directly when appropriate.  \\n  \\n Applications that use an implicit-save model can set AutoFlush to `true` to cause <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> to be called automatically after every store operation (add, delete, or modify).\"\n  syntax:\n    content: public abstract bool AutoFlush { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if data in the annotation buffers is to be written when the application explicitly calls <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush*>.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.AutoFlush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\n  id: CargoChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: CargoChanged\n  nameWithType: AnnotationStore.CargoChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Occurs when a cargo on any <xref href=\"System.Windows.Annotations.Annotation\"></xref> in the store changes.\n  remarks: The CargoChanged event can be used to monitor changes to the annotation <xref:System.Windows.Annotations.Annotation.Cargos%2A> contained in the store without the need to register on each <xref:System.Windows.Annotations.Annotation> individually.\n  syntax:\n    content: public event System.Windows.Annotations.AnnotationResourceChangedEventHandler CargoChanged;\n    return:\n      type: System.Windows.Annotations.AnnotationResourceChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)\n  id: DeleteAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: DeleteAnnotation(Guid)\n  nameWithType: AnnotationStore.DeleteAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(Guid)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Deletes the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.\n  remarks: ''\n  example:\n  - \"The following example shows use of the DeleteAnnotation and <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> methods.  \\n  \\n [!code-cs[DocumentSerialize#DocSerDelete](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserdelete)]\"\n  syntax:\n    content: public abstract System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);\n    parameters:\n    - id: annotationId\n      type: System.Guid\n      description: The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be deleted.\n    return:\n      type: System.Windows.Annotations.Annotation\n      description: The annotation that was deleted; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an annotation with the specified <code>annotationId</code> was not found in the store.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Dispose\n  id: Dispose\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: AnnotationStore.Dispose()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Dispose()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Releases all managed and unmanaged resources used by the store.\n  remarks: \"Applications should call Dispose when finished with the <xref:System.Windows.Annotations.Storage.AnnotationStore>.  After calling Dispose the application can release all references to the <xref:System.Windows.Annotations.Storage.AnnotationStore> to allow the garbage collector to reclaim the memory that the <xref:System.Windows.Annotations.Storage.AnnotationStore> was occupying.  For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The public Dispose method calls the protected <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A>`(Boolean)` method with the `disposing` parameter of `true` to release all managed and unmanaged resources.  \\n  \\n> [!NOTE]\\n>  Call Dispose before the last reference to the <xref:System.Windows.Annotations.Storage.AnnotationStore> is released.  If Dispose is not called, <xref:System.Windows.Annotations.Storage.AnnotationStore> resources will not be freed until the garbage collector calls the store's <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Windows.Annotations.Storage.AnnotationStore.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AnnotationStore.Dispose(Boolean)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Releases the unmanaged resources used by the store and optionally releases the managed resources.\n  remarks: \"This protected Dispose method is called by the public <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A>and <xref:System.Object.Finalize%2A> methods.  The public <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> invokes the protected Dispose`(Boolean)` method with the `disposing` parameter set to `true`.  <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, Dispose releases all resources held by any managed objects that the <xref:System.Windows.Annotations.Storage.AnnotationStore> references.  Dispose also invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Finalize\n  id: Finalize\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: AnnotationStore.Finalize()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Finalize()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Guarantees that <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> will eventually be called for this store.\n  remarks: \"This method overrides base <xref:System.Object.Finalize%2A> method.  The application program should not call Finalize directly.  Finalize is automatically invoked during garbage collection unless disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.  \\n  \\n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: ~AnnotationStore ();\n    parameters: []\n  overload: System.Windows.Annotations.Storage.AnnotationStore.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Flush\n  id: Flush\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: AnnotationStore.Flush()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Flush()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Forces any annotation data retained in internal buffers to be written to the underlying storage device.\n  remarks: \"Applications that use an explicit-save model can set <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> to `false` and call Flush directly when appropriate.  \\n  \\n Applications that use an implicit-save model can set the <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> to `true` to cause Flush to be called automatically after every store operation (add, delete, or modify).\"\n  example:\n  - \"The following example shows how to use the Flush method when the application closes the <xref:System.Windows.Annotations.AnnotationService>.  \\n  \\n [!code-cs[DocViewerAnnotationsXps#StopAnnotations](~/add/codesnippet/csharp/DocViewerAnnotationsXps/AnnotationsHelperXps.cs#stopannotations)]\\n [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/add/codesnippet/visualbasic/docviewerannotationsxps/annotationshelperxps.vb#stopannotations)]  \\n  \\n The following example shows use of the <xref:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation%2A> and Flush methods.  \\n  \\n [!code-cs[DocumentSerialize#DocSerDelete](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserdelete)]\"\n  syntax:\n    content: public abstract void Flush ();\n    parameters: []\n  overload: System.Windows.Annotations.Storage.AnnotationStore.Flush*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)\n  id: GetAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: GetAnnotation(Guid)\n  nameWithType: AnnotationStore.GetAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(Guid)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns the annotation with the specified <xref:System.Windows.Annotations.Annotation.Id*> from the store.\n  syntax:\n    content: public abstract System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);\n    parameters:\n    - id: annotationId\n      type: System.Guid\n      description: The [!INCLUDE[TLA#tla_guid](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Annotations.Annotation.Id*> property of the annotation to be returned.\n    return:\n      type: System.Windows.Annotations.Annotation\n      description: The annotation with the given <code>annotationId</code>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, if an annotation with the specified <code>annotationId</code> was not found in the store.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations\n  id: GetAnnotations\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: GetAnnotations()\n  nameWithType: AnnotationStore.GetAnnotations()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns a list of all the annotations in the store.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the GetAnnotations method to determine if there are any annotations contained in the store.  \\n  \\n [!code-cs[DocumentSerialize#DocSerCloseFile](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserclosefile)]\"\n  syntax:\n    content: public abstract System.Collections.Generic.IList<System.Windows.Annotations.Annotation> GetAnnotations ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Annotations.Annotation}\n      description: The list of all annotations currently contained in the store.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called on the store.\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)\n  id: GetAnnotations(System.Windows.Annotations.ContentLocator)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: GetAnnotations(ContentLocator)\n  nameWithType: AnnotationStore.GetAnnotations(ContentLocator)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(ContentLocator)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Returns a list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that begin with a matching <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence.\n  remarks: This GetAnnotations method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.\n  syntax:\n    content: public abstract System.Collections.Generic.IList<System.Windows.Annotations.Annotation> GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);\n    parameters:\n    - id: anchorLocator\n      type: System.Windows.Annotations.ContentLocator\n      description: The starting <xref href=\"System.Windows.Annotations.ContentLocatorPart\"></xref> sequence to return matching annotations for.\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Annotations.Annotation}\n      description: The list of annotations that have <xref:System.Windows.Annotations.Annotation.Anchors*> with locators that start and match the given <code>anchorLocator</code>; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no matching annotations were found.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.IsDisposed\n  id: IsDisposed\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: IsDisposed\n  nameWithType: AnnotationStore.IsDisposed\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.IsDisposed\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Gets a value that indicates whether <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called.\n  syntax:\n    content: protected bool IsDisposed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose*> has been called; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.IsDisposed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  id: OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: OnAnchorChanged(AnnotationResourceChangedEventArgs)\n  nameWithType: AnnotationStore.OnAnchorChanged(AnnotationResourceChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(AnnotationResourceChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnAnchorChanged (System.Windows.Annotations.AnnotationResourceChangedEventArgs args);\n    parameters:\n    - id: args\n      type: System.Windows.Annotations.AnnotationResourceChangedEventArgs\n      description: The event data.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)\n  id: OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: OnAuthorChanged(AnnotationAuthorChangedEventArgs)\n  nameWithType: AnnotationStore.OnAuthorChanged(AnnotationAuthorChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(AnnotationAuthorChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnAuthorChanged (System.Windows.Annotations.AnnotationAuthorChangedEventArgs args);\n    parameters:\n    - id: args\n      type: System.Windows.Annotations.AnnotationAuthorChangedEventArgs\n      description: The event data.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  id: OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: OnCargoChanged(AnnotationResourceChangedEventArgs)\n  nameWithType: AnnotationStore.OnCargoChanged(AnnotationResourceChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(AnnotationResourceChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnCargoChanged (System.Windows.Annotations.AnnotationResourceChangedEventArgs args);\n    parameters:\n    - id: args\n      type: System.Windows.Annotations.AnnotationResourceChangedEventArgs\n      description: The event data.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  id: OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: OnStoreContentChanged(StoreContentChangedEventArgs)\n  nameWithType: AnnotationStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Raises the <xref href=\"System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Annotations.Storage.StoreContentChangedEventArgs\n      description: The event data.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\n  id: StoreContentChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: StoreContentChanged\n  nameWithType: AnnotationStore.StoreContentChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Occurs when an <xref href=\"System.Windows.Annotations.Annotation\"></xref> is added to or deleted from the store.\n  remarks: ''\n  example:\n  - \"The following example shows how to add an event delegate for the StoreContentChanged event.  \\n  \\n [!code-cs[DocumentSerialize#DocSerEnableAnn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserenableann)]  \\n  \\n The following example shows operation of the StoreContentChanged event delegate.  \\n  \\n [!code-cs[DocumentSerialize#DocSerContentChanged](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docsercontentchanged)]\"\n  syntax:\n    content: public event System.Windows.Annotations.Storage.StoreContentChangedEventHandler StoreContentChanged;\n    return:\n      type: System.Windows.Annotations.Storage.StoreContentChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Annotations.Storage.AnnotationStore.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: AnnotationStore.SyncRoot\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Annotations.Storage\n  summary: Gets the object to use as a synchronization lock for <xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"></xref> critical sections.\n  syntax:\n    content: protected object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: The object to use as a synchronization lock for <xref href=\"System.Windows.Annotations.Storage.AnnotationStore\"></xref> critical sections.\n  overload: System.Windows.Annotations.Storage.AnnotationStore.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.Windows.Annotations.Storage.AnnotationStore.#ctor\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AnnotationStore()\n  nameWithType: AnnotationStore.AnnotationStore()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AnnotationStore()\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AddAnnotation(Annotation)\n  nameWithType: AnnotationStore.AddAnnotation(Annotation)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(Annotation)\n- uid: System.Windows.Annotations.Annotation\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: Annotation\n  nameWithType: Annotation\n  fullName: System.Windows.Annotations.Annotation\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AnchorChanged\n  nameWithType: AnnotationStore.AnchorChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged\n- uid: System.Windows.Annotations.AnnotationResourceChangedEventHandler\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: AnnotationResourceChangedEventHandler\n  nameWithType: AnnotationResourceChangedEventHandler\n  fullName: System.Windows.Annotations.AnnotationResourceChangedEventHandler\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AuthorChanged\n  nameWithType: AnnotationStore.AuthorChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged\n- uid: System.Windows.Annotations.AnnotationAuthorChangedEventHandler\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: AnnotationAuthorChangedEventHandler\n  nameWithType: AnnotationAuthorChangedEventHandler\n  fullName: System.Windows.Annotations.AnnotationAuthorChangedEventHandler\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AutoFlush\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AutoFlush\n  nameWithType: AnnotationStore.AutoFlush\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.AutoFlush\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: CargoChanged\n  nameWithType: AnnotationStore.CargoChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.CargoChanged\n- uid: System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: DeleteAnnotation(Guid)\n  nameWithType: AnnotationStore.DeleteAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: true\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Dispose\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Dispose()\n  nameWithType: AnnotationStore.Dispose()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Dispose()\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AnnotationStore.Dispose(Boolean)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Dispose(Boolean)\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Finalize\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Finalize()\n  nameWithType: AnnotationStore.Finalize()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Finalize()\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Flush\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Flush()\n  nameWithType: AnnotationStore.Flush()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.Flush()\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: GetAnnotation(Guid)\n  nameWithType: AnnotationStore.GetAnnotation(Guid)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(Guid)\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: GetAnnotations()\n  nameWithType: AnnotationStore.GetAnnotations()\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations()\n- uid: System.Collections.Generic.IList{System.Windows.Annotations.Annotation}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Annotation>\n  nameWithType: IList<Annotation>\n  fullName: System.Collections.Generic.IList<System.Windows.Annotations.Annotation>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Windows.Annotations.Annotation>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Annotations.Annotation\n    name: Annotation\n    nameWithType: Annotation\n    fullName: Annotation\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: GetAnnotations(ContentLocator)\n  nameWithType: AnnotationStore.GetAnnotations(ContentLocator)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(ContentLocator)\n- uid: System.Windows.Annotations.ContentLocator\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: ContentLocator\n  nameWithType: ContentLocator\n  fullName: System.Windows.Annotations.ContentLocator\n- uid: System.Windows.Annotations.Storage.AnnotationStore.IsDisposed\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: IsDisposed\n  nameWithType: AnnotationStore.IsDisposed\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.IsDisposed\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnAnchorChanged(AnnotationResourceChangedEventArgs)\n  nameWithType: AnnotationStore.OnAnchorChanged(AnnotationResourceChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(AnnotationResourceChangedEventArgs)\n- uid: System.Windows.Annotations.AnnotationResourceChangedEventArgs\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: AnnotationResourceChangedEventArgs\n  nameWithType: AnnotationResourceChangedEventArgs\n  fullName: System.Windows.Annotations.AnnotationResourceChangedEventArgs\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnAuthorChanged(AnnotationAuthorChangedEventArgs)\n  nameWithType: AnnotationStore.OnAuthorChanged(AnnotationAuthorChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(AnnotationAuthorChangedEventArgs)\n- uid: System.Windows.Annotations.AnnotationAuthorChangedEventArgs\n  parent: System.Windows.Annotations\n  isExternal: false\n  name: AnnotationAuthorChangedEventArgs\n  nameWithType: AnnotationAuthorChangedEventArgs\n  fullName: System.Windows.Annotations.AnnotationAuthorChangedEventArgs\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnCargoChanged(AnnotationResourceChangedEventArgs)\n  nameWithType: AnnotationStore.OnCargoChanged(AnnotationResourceChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(AnnotationResourceChangedEventArgs)\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnStoreContentChanged(StoreContentChangedEventArgs)\n  nameWithType: AnnotationStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(StoreContentChangedEventArgs)\n- uid: System.Windows.Annotations.Storage.StoreContentChangedEventArgs\n  parent: System.Windows.Annotations.Storage\n  isExternal: false\n  name: StoreContentChangedEventArgs\n  nameWithType: StoreContentChangedEventArgs\n  fullName: System.Windows.Annotations.Storage.StoreContentChangedEventArgs\n- uid: System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: StoreContentChanged\n  nameWithType: AnnotationStore.StoreContentChanged\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged\n- uid: System.Windows.Annotations.Storage.StoreContentChangedEventHandler\n  parent: System.Windows.Annotations.Storage\n  isExternal: false\n  name: StoreContentChangedEventHandler\n  nameWithType: StoreContentChangedEventHandler\n  fullName: System.Windows.Annotations.Storage.StoreContentChangedEventHandler\n- uid: System.Windows.Annotations.Storage.AnnotationStore.SyncRoot\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: SyncRoot\n  nameWithType: AnnotationStore.SyncRoot\n  fullName: System.Windows.Annotations.Storage.AnnotationStore.SyncRoot\n- uid: System.Windows.Annotations.Storage.AnnotationStore.#ctor*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AnnotationStore\n  nameWithType: AnnotationStore.AnnotationStore\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AddAnnotation\n  nameWithType: AnnotationStore.AddAnnotation\n- uid: System.Windows.Annotations.Storage.AnnotationStore.AutoFlush*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: AutoFlush\n  nameWithType: AnnotationStore.AutoFlush\n- uid: System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: DeleteAnnotation\n  nameWithType: AnnotationStore.DeleteAnnotation\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Dispose*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Dispose\n  nameWithType: AnnotationStore.Dispose\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Finalize*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Finalize\n  nameWithType: AnnotationStore.Finalize\n- uid: System.Windows.Annotations.Storage.AnnotationStore.Flush*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: Flush\n  nameWithType: AnnotationStore.Flush\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: GetAnnotation\n  nameWithType: AnnotationStore.GetAnnotation\n- uid: System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: GetAnnotations\n  nameWithType: AnnotationStore.GetAnnotations\n- uid: System.Windows.Annotations.Storage.AnnotationStore.IsDisposed*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: IsDisposed\n  nameWithType: AnnotationStore.IsDisposed\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnAnchorChanged\n  nameWithType: AnnotationStore.OnAnchorChanged\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnAuthorChanged\n  nameWithType: AnnotationStore.OnAuthorChanged\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnCargoChanged\n  nameWithType: AnnotationStore.OnCargoChanged\n- uid: System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: OnStoreContentChanged\n  nameWithType: AnnotationStore.OnStoreContentChanged\n- uid: System.Windows.Annotations.Storage.AnnotationStore.SyncRoot*\n  parent: System.Windows.Annotations.Storage.AnnotationStore\n  isExternal: false\n  name: SyncRoot\n  nameWithType: AnnotationStore.SyncRoot\n"}