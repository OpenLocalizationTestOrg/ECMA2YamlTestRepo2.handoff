{"nodes":[{"pos":[4606,4669],"content":"Provides a base class for objects that define geometric shapes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a base class for objects that define geometric shapes.","pos":[0,63]}]},{"pos":[5239,5379],"content":"Gets a nullable double value that indicates the area of this DbGeometry value, which may be null if this value does not represent a surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable double value that indicates the area of this DbGeometry value, which may be null if this value does not represent a surface.","pos":[0,140]}]},{"pos":[5515,5588],"content":"A nullable double value that indicates the area of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A nullable double value that indicates the area of this DbGeometry value.","pos":[0,73]}]},{"pos":[6008,6080],"content":"Generates the well known binary representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the well known binary representation of this DbGeometry value.","pos":[0,72]}]},{"pos":[6207,6269],"content":"The well-known binary representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known binary representation of this DbGeometry value.","pos":[0,62]}]},{"pos":[6678,6764],"content":"Generates the Geography Markup Language (GML) representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the Geography Markup Language (GML) representation of this DbGeometry value.","pos":[0,86]}]},{"pos":[6888,6956],"content":"A string containing the GML representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the GML representation of this DbGeometry value.","pos":[0,68]}]},{"pos":[7367,7484],"content":"Generates the well known text representation of this DbGeometry value.  Includes only X and Y coordinates for points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the well known text representation of this DbGeometry value.  Includes only X and Y coordinates for points.","pos":[0,117],"nodes":[{"content":"Generates the well known text representation of this DbGeometry value.","pos":[0,70]},{"content":"Includes only X and Y coordinates for points.","pos":[72,117]}]}]},{"pos":[7609,7689],"content":"A string containing the well known text representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the well known text representation of this DbGeometry value.","pos":[0,80]}]},{"pos":[8107,8151],"content":"Gets the boundary of the DbGeometry objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the boundary of the DbGeometry objects.","pos":[0,44]}]},{"pos":[8305,8344],"content":"The boundary of the DbGeometry objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The boundary of the DbGeometry objects.","pos":[0,39]}]},{"pos":[8870,9019],"content":"Returns a geometry object that represents the union of all points whose distance from a geometry instance is less than or equal to a specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a geometry object that represents the union of all points whose distance from a geometry instance is less than or equal to a specified value.","pos":[0,149]}]},{"pos":[9214,9227],"content":"The distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance.","pos":[0,13]}]},{"pos":[9302,9360],"content":"A geometry object that represents the union of all points.","needQuote":true,"needEscape":true,"nodes":[{"content":"A geometry object that represents the union of all points.","pos":[0,58]}]},{"pos":[9778,9920],"content":"Gets the DbGeometry value that represents the centroid of this DbGeometry value, which may be null if this value does not represent a surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the DbGeometry value that represents the centroid of this DbGeometry value, which may be null if this value does not represent a surface.","pos":[0,142]}]},{"pos":[10074,10149],"content":"The DbGeometry value that represents the centroid of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DbGeometry value that represents the centroid of this DbGeometry value.","pos":[0,75]}]},{"pos":[10667,10761],"content":"Determines whether this DbGeometry value spatially contains the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value spatially contains the specified DbGeometry argument.","pos":[0,94]}]},{"pos":[10940,11024],"content":"The geometry value that should be compared with this geometry value for containment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for containment.","pos":[0,84]}]},{"pos":[11083,11269],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this geometry value contains <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value contains <code>other</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11817,11891],"content":"Gets the convex hull of this DbGeometry value as another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the convex hull of this DbGeometry value as another DbGeometry value.","pos":[0,74]}]},{"pos":[12047,12116],"content":"The convex hull of this DbGeometry value as another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The convex hull of this DbGeometry value as another DbGeometry value.","pos":[0,69]}]},{"pos":[12588,12651],"content":"Gets the coordinate system identifier of the DbGeometry object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the coordinate system identifier of the DbGeometry object.","pos":[0,63]}]},{"pos":[12770,12828],"content":"The coordinate system identifier of the DbGeometry object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier of the DbGeometry object.","pos":[0,58]}]},{"pos":[13351,13444],"content":"Determines whether this DbGeometry value spatially crosses the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value spatially crosses the specified DbGeometry argument.","pos":[0,93]}]},{"pos":[13622,13690],"content":"The geometry value that should be compared with this geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value.","pos":[0,68]}]},{"pos":[13749,13934],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> crosses this geometry value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> crosses this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14556,14621],"content":"Gets the default coordinate system id (SRID) for geometry values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default coordinate system id (SRID) for geometry values.","pos":[0,65]}]},{"pos":[14754,14814],"content":"The default coordinate system id (SRID) for geometry values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default coordinate system id (SRID) for geometry values.","pos":[0,60]}]},{"pos":[15359,15442],"content":"Computes the difference between this DbGeometry value and another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the difference between this DbGeometry value and another DbGeometry value.","pos":[0,83]}]},{"pos":[15649,15728],"content":"The geometry value for which the difference with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value for which the difference with this value should be computed.","pos":[0,79]}]},{"pos":[15803,15905],"content":"A new DbGeometry value representing the difference between this geometry value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeometry value representing the difference between this geometry value and <code>other</code>."},{"pos":[16450,16611],"content":"Gets the dimension of the given <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value or, if the value is a collection, the dimension of its largest element.","needQuote":true,"needEscape":true,"source":"Gets the dimension of the given <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value or, if the value is a collection, the dimension of its largest element."},{"pos":[16721,16806],"content":"The dimension of the given <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The dimension of the given <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value."},{"pos":[17325,17421],"content":"Determines whether this DbGeometry is spatially disjoint from the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry is spatially disjoint from the specified DbGeometry argument.","pos":[0,96]}]},{"pos":[17600,17685],"content":"The geometry value that should be compared with this geometry value for disjointness.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for disjointness.","pos":[0,85]}]},{"pos":[17744,17938],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is disjoint from this geometry value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is disjoint from this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18574,18677],"content":"Computes the distance between the closest points in this DbGeometry value and another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the distance between the closest points in this DbGeometry value and another DbGeometry value.","pos":[0,103]}]},{"pos":[18868,18945],"content":"The geometry value for which the distance from this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value for which the distance from this value should be computed.","pos":[0,77]}]},{"pos":[19020,19140],"content":"A double value that specifies the distance between the two closest points in this geometry value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A double value that specifies the distance between the two closest points in this geometry value and <code>other</code>."},{"pos":[19730,20179],"content":"Returns an element of this DbGeometry value from a specific position, if it represents a geometry collection. &lt;param name=\"index\"&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a collection of other geometry values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an element of this DbGeometry value from a specific position, if it represents a geometry collection.","pos":[0,109]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>param name=\"index\"<ph id=\"ph2\">&amp;gt;</ph>The position within this geometry value from which the element should be taken.<ph id=\"ph3\">&amp;lt;</ph>/param<ph id=\"ph4\">&amp;gt;</ph><ph id=\"ph5\">&amp;lt;</ph>returns<ph id=\"ph6\">&amp;gt;</ph>The element in this geometry value at the specified position, if it represents a collection of other geometry values; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph7\">&amp;lt;</ph>/returns<ph id=\"ph8\">&amp;gt;</ph>","pos":[110,449],"source":"&lt;param name=\"index\"&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a collection of other geometry values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[20340,20350],"content":"The index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index.","pos":[0,10]}]},{"pos":[20425,20486],"content":"An element of this DbGeometry value from a specific position.","needQuote":true,"needEscape":true,"nodes":[{"content":"An element of this DbGeometry value from a specific position.","pos":[0,61]}]},{"pos":[20927,21226],"content":"Gets the number of elements in this DbGeometry value, if it represents a geometry collection. &lt;returns&gt;The number of elements in this geometry value, if it represents a collection of other geometry values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements in this DbGeometry value, if it represents a geometry collection.","pos":[0,93]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The number of elements in this geometry value, if it represents a collection of other geometry values; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[94,299],"source":"&lt;returns&gt;The number of elements in this geometry value, if it represents a collection of other geometry values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[21366,21414],"content":"The number of elements in this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements in this DbGeometry value.","pos":[0,48]}]},{"pos":[21843,22110],"content":"Gets the elevation (Z coordinate) of this DbGeometry value, if it represents a point. &lt;returns&gt;The elevation (Z coordinate) of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the elevation (Z coordinate) of this DbGeometry value, if it represents a point.","pos":[0,85]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The elevation (Z coordinate) of this geometry value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[86,267],"source":"&lt;returns&gt;The elevation (Z coordinate) of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[22251,22305],"content":"The elevation (Z coordinate) of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The elevation (Z coordinate) of this DbGeometry value.","pos":[0,54]}]},{"pos":[22726,22864],"content":"Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve.","pos":[0,138]}]},{"pos":[23018,23080],"content":"A DbGeometry value representing the start point of this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A DbGeometry value representing the start point of this value.","pos":[0,62]}]},{"pos":[23500,23587],"content":"Gets the envelope (minimum bounding box) of this DbGeometry value, as a geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the envelope (minimum bounding box) of this DbGeometry value, as a geometry value.","pos":[0,87]}]},{"pos":[23741,23802],"content":"The envelope (minimum bounding box) of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The envelope (minimum bounding box) of this DbGeometry value.","pos":[0,61]}]},{"pos":[24242,24389],"content":"Gets the DbGeometry value that represents the exterior ring of this DbGeometry value, which may be null if this value does not represent a polygon.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the DbGeometry value that represents the exterior ring of this DbGeometry value, which may be null if this value does not represent a polygon.","pos":[0,147]}]},{"pos":[24547,24627],"content":"The DbGeometry value that represents the exterior ring of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DbGeometry value that represents the exterior ring of this DbGeometry value.","pos":[0,80]}]},{"pos":[25113,25232],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known binary value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known binary value."},{"pos":[25425,25509],"content":"A byte array that contains a well known binary representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geometry value.","pos":[0,84]}]},{"pos":[25584,25771],"content":"A new DbGeometry value as defined by the well known binary value with the default geometry coordinate system identifier (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>).","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known binary value with the default geometry coordinate system identifier (&lt;xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*&gt;).","pos":[0,187],"source":"A new DbGeometry value as defined by the well known binary value with the default geometry coordinate system identifier (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>)."}]},{"pos":[26427,26586],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[26803,26887],"content":"A byte array that contains a well known binary representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geometry value.","pos":[0,84]}]},{"pos":[26961,27042],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[27117,27230],"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,113]}]},{"pos":[27953,28086],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified Geography Markup Language (GML) value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified Geography Markup Language (GML) value."},{"pos":[28274,28368],"content":"A string that contains a Geography Markup Language (GML) representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a Geography Markup Language (GML) representation of the geometry value.","pos":[0,94]}]},{"pos":[28443,28623],"content":"A new DbGeometry value as defined by the GML value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>).","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the GML value with the default geometry coordinate system identifier (SRID) (&lt;xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*&gt;).","pos":[0,180],"source":"A new DbGeometry value as defined by the GML value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>)."}]},{"pos":[29260,29433],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID)."},{"pos":[29645,29739],"content":"A string that contains a Geography Markup Language (GML) representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a Geography Markup Language (GML) representation of the geometry value.","pos":[0,94]}]},{"pos":[29813,29894],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[29969,30068],"content":"A new DbGeometry value as defined by the GML value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the GML value with the specified coordinate system identifier.","pos":[0,99]}]},{"pos":[30792,30909],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known text value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known text value."},{"pos":[31096,31174],"content":"A string that contains a well known text representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geometry value.","pos":[0,78]}]},{"pos":[31249,31441],"content":"A new DbGeometry value as defined by the well known text value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>).","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known text value with the default geometry coordinate system identifier (SRID) (&lt;xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*&gt;).","pos":[0,192],"source":"A new DbGeometry value as defined by the well known text value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>)."}]},{"pos":[32083,32240],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[32451,32529],"content":"A string that contains a well known text representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geometry value.","pos":[0,78]}]},{"pos":[32603,32684],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[32759,32870],"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,111]}]},{"pos":[33738,33908],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> collection value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[34179,34263],"content":"A byte array that contains a well known binary representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geometry value.","pos":[0,84]}]},{"pos":[34337,34418],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[34493,34606],"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,113]}]},{"pos":[35504,35672],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> collection value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[35937,36015],"content":"A string that contains a well known text representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geometry value.","pos":[0,78]}]},{"pos":[36089,36170],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[36245,36356],"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,111]}]},{"pos":[37141,37568],"content":"Returns an interior ring from this DbGeometry value at a specific position, if it represents a polygon. &lt;param name=\"index\"&gt;The position within this geometry value from which the interior ring should be taken.&lt;/param&gt;&lt;returns&gt;The interior ring in this geometry value at the specified position, if it represents a polygon; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an interior ring from this DbGeometry value at a specific position, if it represents a polygon.","pos":[0,103]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>param name=\"index\"<ph id=\"ph2\">&amp;gt;</ph>The position within this geometry value from which the interior ring should be taken.<ph id=\"ph3\">&amp;lt;</ph>/param<ph id=\"ph4\">&amp;gt;</ph><ph id=\"ph5\">&amp;lt;</ph>returns<ph id=\"ph6\">&amp;gt;</ph>The interior ring in this geometry value at the specified position, if it represents a polygon; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph7\">&amp;lt;</ph>/returns<ph id=\"ph8\">&amp;gt;</ph>","pos":[104,427],"source":"&lt;param name=\"index\"&gt;The position within this geometry value from which the interior ring should be taken.&lt;/param&gt;&lt;returns&gt;The interior ring in this geometry value at the specified position, if it represents a polygon; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[37734,37744],"content":"The index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index.","pos":[0,10]}]},{"pos":[37819,37886],"content":"An interior ring from this DbGeometry value at a specific position.","needQuote":true,"needEscape":true,"nodes":[{"content":"An interior ring from this DbGeometry value at a specific position.","pos":[0,67]}]},{"pos":[38357,38622],"content":"Gets the number of interior rings in this DbGeometry value, if it represents a polygon. &lt;returns&gt;The number of elements in this geometry value, if it represents a polygon; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of interior rings in this DbGeometry value, if it represents a polygon.","pos":[0,87]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The number of elements in this geometry value, if it represents a polygon; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[88,265],"source":"&lt;returns&gt;The number of elements in this geometry value, if it represents a polygon; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[38767,38821],"content":"The number of interior rings in this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of interior rings in this DbGeometry value.","pos":[0,54]}]},{"pos":[39368,39448],"content":"Computes the intersection of this DbGeometry value and another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the intersection of this DbGeometry value and another DbGeometry value.","pos":[0,80]}]},{"pos":[39657,39738],"content":"The geometry value for which the intersection with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value for which the intersection with this value should be computed.","pos":[0,81]}]},{"pos":[39813,39917],"content":"A new DbGeometry value representing the intersection between this geometry value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeometry value representing the intersection between this geometry value and <code>other</code>."},{"pos":[40567,40663],"content":"Determines whether this DbGeometry value spatially intersects the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value spatially intersects the specified DbGeometry argument.","pos":[0,96]}]},{"pos":[40844,40929],"content":"The geometry value that should be compared with this geometry value for intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for intersection.","pos":[0,85]}]},{"pos":[40988,41176],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> intersects this geometry value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> intersects this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[41716,41857],"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is closed, which may be null if this value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is closed, which may be null if this value does not represent a curve.","pos":[0,141]}]},{"pos":[41996,42167],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeometry value is closed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42582,42722],"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is empty, which may be null if this value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is empty, which may be null if this value does not represent a curve.","pos":[0,140]}]},{"pos":[42833,43003],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeometry value is empty; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is empty; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43412,43553],"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is a ring, which may be null if this value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is a ring, which may be null if this value does not represent a curve.","pos":[0,141]}]},{"pos":[43690,43861],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeometry value is a ring; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is a ring; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44279,44360],"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is simple.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is simple.","pos":[0,81]}]},{"pos":[44472,44643],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeometry value is simple; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is simple; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45058,45138],"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeometry value is valid.","pos":[0,80]}]},{"pos":[45249,45419],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeometry value is valid; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45828,45968],"content":"Gets a nullable double value that indicates the length of this DbGeometry value, which may be null if this value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable double value that indicates the length of this DbGeometry value, which may be null if this value does not represent a curve.","pos":[0,140]}]},{"pos":[46106,46142],"content":"The length of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The length of this DbGeometry value.","pos":[0,36]}]},{"pos":[46686,46850],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> line value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> line value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[47079,47163],"content":"A byte array that contains a well known binary representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geometry value.","pos":[0,84]}]},{"pos":[47237,47318],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[47393,47506],"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,113]}]},{"pos":[48306,48468],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> line value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> line value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[48691,48769],"content":"A string that contains a well known text representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geometry value.","pos":[0,78]}]},{"pos":[48843,48924],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[48999,49110],"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,111]}]},{"pos":[49785,50054],"content":"Gets the Measure (M coordinate) of this DbGeometry value, if it represents a point. &lt;returns&gt;The Measure (M coordinate) value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Measure (M coordinate) of this DbGeometry value, if it represents a point.","pos":[0,83]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The Measure (M coordinate) value of this geometry value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[84,269],"source":"&lt;returns&gt;The Measure (M coordinate) value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[50193,50245],"content":"The Measure (M coordinate) of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Measure (M coordinate) of this DbGeometry value.","pos":[0,52]}]},{"pos":[50815,50863],"content":"Returns the multiline value from a binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multiline value from a binary value.","pos":[0,48]}]},{"pos":[51107,51135],"content":"The well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known binary value.","pos":[0,28]}]},{"pos":[51209,51242],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[51317,51357],"content":"The multiline value from a binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multiline value from a binary value.","pos":[0,40]}]},{"pos":[51929,51986],"content":"Returns the multiline value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multiline value from a well-known text value.","pos":[0,57]}]},{"pos":[52224,52244],"content":"The well-known text.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known text.","pos":[0,20]}]},{"pos":[52318,52351],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[52426,52475],"content":"The multiline value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multiline value from a well-known text value.","pos":[0,49]}]},{"pos":[53060,53120],"content":"Returns the multipoint value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multipoint value from a well-known binary value.","pos":[0,60]}]},{"pos":[53367,53395],"content":"The well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known binary value.","pos":[0,28]}]},{"pos":[53469,53502],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[53577,53629],"content":"The multipoint value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multipoint value from a well-known binary value.","pos":[0,52]}]},{"pos":[54207,54265],"content":"Returns the multipoint value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multipoint value from a well-known text value.","pos":[0,58]}]},{"pos":[54506,54532],"content":"The well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known text value.","pos":[0,26]}]},{"pos":[54606,54639],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[54714,54764],"content":"The multipoint value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multipoint value from a well-known text value.","pos":[0,50]}]},{"pos":[55360,55423],"content":"Returns the multi polygon value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multi polygon value from a well-known binary value.","pos":[0,63]}]},{"pos":[55676,55716],"content":"The multi polygon well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon well-known text value.","pos":[0,40]}]},{"pos":[55790,55823],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[55898,55948],"content":"The multipoint value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multipoint value from a well-known text value.","pos":[0,50]}]},{"pos":[56538,56601],"content":"Returns the multi polygon value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multi polygon value from a well-known binary value.","pos":[0,63]}]},{"pos":[56848,56888],"content":"The multi polygon well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon well-known text value.","pos":[0,40]}]},{"pos":[56962,56995],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[57070,57125],"content":"The multi polygon value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon value from a well-known binary value.","pos":[0,55]}]},{"pos":[57655,57749],"content":"Determines whether this DbGeometry value spatially overlaps the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value spatially overlaps the specified DbGeometry argument.","pos":[0,94]}]},{"pos":[57928,58008],"content":"The geometry value that should be compared with this geometry value for overlap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for overlap.","pos":[0,80]}]},{"pos":[58067,58253],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this geometry value overlaps <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value overlaps <code>other</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[58833,59278],"content":"Returns an element of this DbGeometry value from a specific position, if it represents a linestring or linear ring. &lt;param name=\"index\"&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an element of this DbGeometry value from a specific position, if it represents a linestring or linear ring.","pos":[0,115]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>param name=\"index\"<ph id=\"ph2\">&amp;gt;</ph>The position within this geometry value from which the element should be taken.<ph id=\"ph3\">&amp;lt;</ph>/param<ph id=\"ph4\">&amp;gt;</ph><ph id=\"ph5\">&amp;lt;</ph>returns<ph id=\"ph6\">&amp;gt;</ph>The element in this geometry value at the specified position, if it represents a linestring or linear ring; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph7\">&amp;lt;</ph>/returns<ph id=\"ph8\">&amp;gt;</ph>","pos":[116,445],"source":"&lt;param name=\"index\"&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[59437,59447],"content":"The index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index.","pos":[0,10]}]},{"pos":[59522,59583],"content":"An element of this DbGeometry value from a specific position.","needQuote":true,"needEscape":true,"nodes":[{"content":"An element of this DbGeometry value from a specific position.","pos":[0,61]}]},{"pos":[60012,60305],"content":"Gets the number of points in this DbGeometry value, if it represents a linestring or linear ring. &lt;returns&gt;The number of elements in this geometry value, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of points in this DbGeometry value, if it represents a linestring or linear ring.","pos":[0,97]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The number of elements in this geometry value, if it represents a linestring or linear ring; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[98,293],"source":"&lt;returns&gt;The number of elements in this geometry value, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[60443,60489],"content":"The number of points in this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of points in this DbGeometry value.","pos":[0,46]}]},{"pos":[61042,61207],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> point value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> point value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[61439,61523],"content":"A byte array that contains a well known binary representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geometry value.","pos":[0,84]}]},{"pos":[61597,61678],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[61753,61866],"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,113]}]},{"pos":[62673,62836],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> point value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> point value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[63062,63140],"content":"A string that contains a well known text representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geometry value.","pos":[0,78]}]},{"pos":[63214,63295],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[63370,63481],"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,111]}]},{"pos":[64193,64308],"content":"Gets a point on the surface of this DbGeometry value, which may be null if this value does not represent a surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a point on the surface of this DbGeometry value, which may be null if this value does not represent a surface.","pos":[0,115]}]},{"pos":[64468,64516],"content":"A point on the surface of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A point on the surface of this DbGeometry value.","pos":[0,48]}]},{"pos":[65083,65250],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> polygon value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> polygon value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[65488,65572],"content":"A byte array that contains a well known binary representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geometry value.","pos":[0,84]}]},{"pos":[65646,65727],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[65802,65915],"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,113]}]},{"pos":[66736,66901],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeometry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> polygon value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> polygon value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[67133,67211],"content":"A string that contains a well known text representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geometry value.","pos":[0,78]}]},{"pos":[67285,67366],"content":"The identifier of the coordinate system that the new DbGeometry value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeometry value should use.","pos":[0,81]}]},{"pos":[67441,67552],"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,111]}]},{"pos":[68263,68374],"content":"Gets a representation of this DbGeometry value that is specific to the underlying provider that constructed it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a representation of this DbGeometry value that is specific to the underlying provider that constructed it.","pos":[0,111]}]},{"pos":[68492,68534],"content":"A representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A representation of this DbGeometry value.","pos":[0,42]}]},{"pos":[69096,69292],"content":"Determines whether this DbGeometry value spatially relates to the specified DbGeometry argument according to the given Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value spatially relates to the specified DbGeometry argument according to the given Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern.","pos":[0,196]}]},{"pos":[69484,69565],"content":"The geometry value that should be compared with this geometry value for relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for relation.","pos":[0,81]}]},{"pos":[69628,69738],"content":"A string that contains the text representation of the (DE-9IM) intersection pattern that defines the relation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the text representation of the (DE-9IM) intersection pattern that defines the relation.","pos":[0,110]}]},{"pos":[69797,70040],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this geometry value relates to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> according to the specified intersection pattern matrix; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value relates to <code>other</code> according to the specified intersection pattern matrix; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[70738,70829],"content":"Determines whether this DbGeometry is spatially equal to the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry is spatially equal to the specified DbGeometry argument.","pos":[0,91]}]},{"pos":[71013,71094],"content":"The geometry value that should be compared with this geometry value for equality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for equality.","pos":[0,81]}]},{"pos":[71153,71352],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is spatially equal to this geometry value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is spatially equal to this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[71930,71995],"content":"Gets a spatial type name representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a spatial type name representation of this DbGeometry value.","pos":[0,65]}]},{"pos":[72115,72175],"content":"A spatial type name representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A spatial type name representation of this DbGeometry value.","pos":[0,60]}]},{"pos":[72612,72750],"content":"Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve.","pos":[0,138]}]},{"pos":[72906,72968],"content":"A DbGeometry value representing the start point of this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A DbGeometry value representing the start point of this value.","pos":[0,62]}]},{"pos":[73543,73636],"content":"Computes the symmetric difference between this DbGeometry value and another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the symmetric difference between this DbGeometry value and another DbGeometry value.","pos":[0,93]}]},{"pos":[73852,73941],"content":"The geometry value for which the symmetric difference with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value for which the symmetric difference with this value should be computed.","pos":[0,89]}]},{"pos":[74016,74128],"content":"A new DbGeometry value representing the symmetric difference between this geometry value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeometry value representing the symmetric difference between this geometry value and <code>other</code>."},{"pos":[74681,74735],"content":"Returns a string representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representation of the geometry value.","pos":[0,54]}]},{"pos":[74871,74917],"content":"A string representation of the geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representation of the geometry value.","pos":[0,46]}]},{"pos":[75430,75523],"content":"Determines whether this DbGeometry value spatially touches the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value spatially touches the specified DbGeometry argument.","pos":[0,93]}]},{"pos":[75701,75769],"content":"The geometry value that should be compared with this geometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value.","pos":[0,68]}]},{"pos":[75828,76013],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> touches this geometry value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> touches this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[76633,76706],"content":"Computes the union of this DbGeometry value and another DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the union of this DbGeometry value and another DbGeometry value.","pos":[0,73]}]},{"pos":[76908,76982],"content":"The geometry value for which the union with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value for which the union with this value should be computed.","pos":[0,74]}]},{"pos":[77057,77154],"content":"A new DbGeometry value representing the union between this geometry value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeometry value representing the union between this geometry value and <code>other</code>."},{"pos":[77719,77812],"content":"Gets or sets a data contract serializable well known representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a data contract serializable well known representation of this DbGeometry value.","pos":[0,93]}]},{"pos":[78005,78085],"content":"A data contract serializable well known representation of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data contract serializable well known representation of this DbGeometry value.","pos":[0,80]}]},{"pos":[78599,78694],"content":"Determines whether this DbGeometry value is spatially within the specified DbGeometry argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeometry value is spatially within the specified DbGeometry argument.","pos":[0,95]}]},{"pos":[78871,78955],"content":"The geometry value that should be compared with this geometry value for containment.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geometry value that should be compared with this geometry value for containment.","pos":[0,84]}]},{"pos":[79014,79201],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this geometry value is within <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value is within <code>other</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[79752,80001],"content":"Gets the X coordinate of this DbGeometry value, if it represents a point. &lt;returns&gt;The X coordinate value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the X coordinate of this DbGeometry value, if it represents a point.","pos":[0,73]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The X coordinate value of this geometry value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[74,249],"source":"&lt;returns&gt;The X coordinate value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[80144,80186],"content":"The X coordinate of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The X coordinate of this DbGeometry value.","pos":[0,42]}]},{"pos":[80624,80873],"content":"Gets the Y coordinate of this DbGeometry value, if it represents a point. &lt;returns&gt;The Y coordinate value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Y coordinate of this DbGeometry value, if it represents a point.","pos":[0,73]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The Y coordinate value of this geometry value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[74,249],"source":"&lt;returns&gt;The Y coordinate value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[81016,81058],"content":"The Y coordinate of this DbGeometry value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Y coordinate of this DbGeometry value.","pos":[0,42]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Spatial.DbGeometry\n  id: DbGeometry\n  children:\n  - System.Data.Spatial.DbGeometry.Area\n  - System.Data.Spatial.DbGeometry.AsBinary\n  - System.Data.Spatial.DbGeometry.AsGml\n  - System.Data.Spatial.DbGeometry.AsText\n  - System.Data.Spatial.DbGeometry.Boundary\n  - System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})\n  - System.Data.Spatial.DbGeometry.Centroid\n  - System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.ConvexHull\n  - System.Data.Spatial.DbGeometry.CoordinateSystemId\n  - System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId\n  - System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.Dimension\n  - System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.ElementAt(System.Int32)\n  - System.Data.Spatial.DbGeometry.ElementCount\n  - System.Data.Spatial.DbGeometry.Elevation\n  - System.Data.Spatial.DbGeometry.EndPoint\n  - System.Data.Spatial.DbGeometry.Envelope\n  - System.Data.Spatial.DbGeometry.ExteriorRing\n  - System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])\n  - System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.FromGml(System.String)\n  - System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.FromText(System.String)\n  - System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)\n  - System.Data.Spatial.DbGeometry.InteriorRingCount\n  - System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.IsClosed\n  - System.Data.Spatial.DbGeometry.IsEmpty\n  - System.Data.Spatial.DbGeometry.IsRing\n  - System.Data.Spatial.DbGeometry.IsSimple\n  - System.Data.Spatial.DbGeometry.IsValid\n  - System.Data.Spatial.DbGeometry.Length\n  - System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.Measure\n  - System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.PointAt(System.Int32)\n  - System.Data.Spatial.DbGeometry.PointCount\n  - System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.PointOnSurface\n  - System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeometry.ProviderValue\n  - System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)\n  - System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.SpatialTypeName\n  - System.Data.Spatial.DbGeometry.StartPoint\n  - System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.ToString\n  - System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.WellKnownValue\n  - System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)\n  - System.Data.Spatial.DbGeometry.XCoordinate\n  - System.Data.Spatial.DbGeometry.YCoordinate\n  langs:\n  - csharp\n  name: DbGeometry\n  nameWithType: DbGeometry\n  fullName: System.Data.Spatial.DbGeometry\n  type: Class\n  summary: Provides a base class for objects that define geometric shapes.\n  syntax:\n    content: >-\n      [System.ComponentModel.DataAnnotations.BindableType]\n\n      [System.Runtime.Serialization.DataContract]\n\n      public class DbGeometry\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Area\n  id: Area\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Area\n  nameWithType: DbGeometry.Area\n  fullName: System.Data.Spatial.DbGeometry.Area\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable double value that indicates the area of this DbGeometry value, which may be null if this value does not represent a surface.\n  syntax:\n    content: public Nullable<double> Area { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: A nullable double value that indicates the area of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.Area*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.AsBinary\n  id: AsBinary\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: AsBinary()\n  nameWithType: DbGeometry.AsBinary()\n  fullName: System.Data.Spatial.DbGeometry.AsBinary()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Generates the well known binary representation of this DbGeometry value.\n  syntax:\n    content: public byte[] AsBinary ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The well-known binary representation of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.AsBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.AsGml\n  id: AsGml\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: AsGml()\n  nameWithType: DbGeometry.AsGml()\n  fullName: System.Data.Spatial.DbGeometry.AsGml()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Generates the Geography Markup Language (GML) representation of this DbGeometry value.\n  syntax:\n    content: public string AsGml ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the GML representation of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.AsGml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.AsText\n  id: AsText\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: AsText()\n  nameWithType: DbGeometry.AsText()\n  fullName: System.Data.Spatial.DbGeometry.AsText()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Generates the well known text representation of this DbGeometry value.  Includes only X and Y coordinates for points.\n  syntax:\n    content: public string AsText ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the well known text representation of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.AsText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Boundary\n  id: Boundary\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Boundary\n  nameWithType: DbGeometry.Boundary\n  fullName: System.Data.Spatial.DbGeometry.Boundary\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the boundary of the DbGeometry objects.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Boundary { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The boundary of the DbGeometry objects.\n  overload: System.Data.Spatial.DbGeometry.Boundary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})\n  id: Buffer(System.Nullable{System.Double})\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Buffer(Nullable<Double>)\n  nameWithType: DbGeometry.Buffer(Nullable<Double>)\n  fullName: System.Data.Spatial.DbGeometry.Buffer(Nullable<Double>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns a geometry object that represents the union of all points whose distance from a geometry instance is less than or equal to a specified value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Buffer (Nullable<double> distance);\n    parameters:\n    - id: distance\n      type: System.Nullable{System.Double}\n      description: The distance.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A geometry object that represents the union of all points.\n  overload: System.Data.Spatial.DbGeometry.Buffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Centroid\n  id: Centroid\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Centroid\n  nameWithType: DbGeometry.Centroid\n  fullName: System.Data.Spatial.DbGeometry.Centroid\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the DbGeometry value that represents the centroid of this DbGeometry value, which may be null if this value does not represent a surface.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Centroid { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The DbGeometry value that represents the centroid of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.Centroid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)\n  id: Contains(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Contains(DbGeometry)\n  nameWithType: DbGeometry.Contains(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Contains(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value spatially contains the specified DbGeometry argument.\n  syntax:\n    content: public bool Contains (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for containment.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value contains <code>other</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.ConvexHull\n  id: ConvexHull\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: ConvexHull\n  nameWithType: DbGeometry.ConvexHull\n  fullName: System.Data.Spatial.DbGeometry.ConvexHull\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the convex hull of this DbGeometry value as another DbGeometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry ConvexHull { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The convex hull of this DbGeometry value as another DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.ConvexHull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.CoordinateSystemId\n  id: CoordinateSystemId\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: CoordinateSystemId\n  nameWithType: DbGeometry.CoordinateSystemId\n  fullName: System.Data.Spatial.DbGeometry.CoordinateSystemId\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the coordinate system identifier of the DbGeometry object.\n  syntax:\n    content: public int CoordinateSystemId { get; }\n    return:\n      type: System.Int32\n      description: The coordinate system identifier of the DbGeometry object.\n  overload: System.Data.Spatial.DbGeometry.CoordinateSystemId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)\n  id: Crosses(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Crosses(DbGeometry)\n  nameWithType: DbGeometry.Crosses(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Crosses(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value spatially crosses the specified DbGeometry argument.\n  syntax:\n    content: public bool Crosses (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> crosses this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Crosses*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId\n  id: DefaultCoordinateSystemId\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeometry.DefaultCoordinateSystemId\n  fullName: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the default coordinate system id (SRID) for geometry values.\n  syntax:\n    content: public static int DefaultCoordinateSystemId { get; }\n    return:\n      type: System.Int32\n      description: The default coordinate system id (SRID) for geometry values.\n  overload: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)\n  id: Difference(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Difference(DbGeometry)\n  nameWithType: DbGeometry.Difference(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Difference(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the difference between this DbGeometry value and another DbGeometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Difference (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value for which the difference with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value representing the difference between this geometry value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeometry.Difference*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Dimension\n  id: Dimension\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Dimension\n  nameWithType: DbGeometry.Dimension\n  fullName: System.Data.Spatial.DbGeometry.Dimension\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the dimension of the given <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value or, if the value is a collection, the dimension of its largest element.\n  syntax:\n    content: public int Dimension { get; }\n    return:\n      type: System.Int32\n      description: The dimension of the given <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value.\n  overload: System.Data.Spatial.DbGeometry.Dimension*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)\n  id: Disjoint(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Disjoint(DbGeometry)\n  nameWithType: DbGeometry.Disjoint(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Disjoint(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry is spatially disjoint from the specified DbGeometry argument.\n  syntax:\n    content: public bool Disjoint (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for disjointness.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is disjoint from this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Disjoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)\n  id: Distance(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Distance(DbGeometry)\n  nameWithType: DbGeometry.Distance(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Distance(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the distance between the closest points in this DbGeometry value and another DbGeometry value.\n  syntax:\n    content: public Nullable<double> Distance (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value for which the distance from this value should be computed.\n    return:\n      type: System.Nullable{System.Double}\n      description: A double value that specifies the distance between the two closest points in this geometry value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeometry.Distance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.ElementAt(System.Int32)\n  id: ElementAt(System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: ElementAt(Int32)\n  nameWithType: DbGeometry.ElementAt(Int32)\n  fullName: System.Data.Spatial.DbGeometry.ElementAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns an element of this DbGeometry value from a specific position, if it represents a geometry collection. &lt;param name=\"index\"&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a collection of other geometry values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public System.Data.Spatial.DbGeometry ElementAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: An element of this DbGeometry value from a specific position.\n  overload: System.Data.Spatial.DbGeometry.ElementAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.ElementCount\n  id: ElementCount\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: ElementCount\n  nameWithType: DbGeometry.ElementCount\n  fullName: System.Data.Spatial.DbGeometry.ElementCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the number of elements in this DbGeometry value, if it represents a geometry collection. &lt;returns&gt;The number of elements in this geometry value, if it represents a collection of other geometry values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<int> ElementCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The number of elements in this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.ElementCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Elevation\n  id: Elevation\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Elevation\n  nameWithType: DbGeometry.Elevation\n  fullName: System.Data.Spatial.DbGeometry.Elevation\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the elevation (Z coordinate) of this DbGeometry value, if it represents a point. &lt;returns&gt;The elevation (Z coordinate) of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> Elevation { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The elevation (Z coordinate) of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.Elevation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.EndPoint\n  id: EndPoint\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: EndPoint\n  nameWithType: DbGeometry.EndPoint\n  fullName: System.Data.Spatial.DbGeometry.EndPoint\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry EndPoint { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A DbGeometry value representing the start point of this value.\n  overload: System.Data.Spatial.DbGeometry.EndPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Envelope\n  id: Envelope\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Envelope\n  nameWithType: DbGeometry.Envelope\n  fullName: System.Data.Spatial.DbGeometry.Envelope\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the envelope (minimum bounding box) of this DbGeometry value, as a geometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Envelope { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The envelope (minimum bounding box) of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.Envelope*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.ExteriorRing\n  id: ExteriorRing\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: ExteriorRing\n  nameWithType: DbGeometry.ExteriorRing\n  fullName: System.Data.Spatial.DbGeometry.ExteriorRing\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the DbGeometry value that represents the exterior ring of this DbGeometry value, which may be null if this value does not represent a polygon.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry ExteriorRing { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The DbGeometry value that represents the exterior ring of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.ExteriorRing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])\n  id: FromBinary(System.Byte[])\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: FromBinary(Byte[])\n  nameWithType: DbGeometry.FromBinary(Byte[])\n  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry FromBinary (byte[] wellKnownBinary);\n    parameters:\n    - id: wellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geometry value.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known binary value with the default geometry coordinate system identifier (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>).\n  overload: System.Data.Spatial.DbGeometry.FromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownBinary</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)\n  id: FromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: FromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.FromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry FromBinary (byte[] wellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: wellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.FromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.FromGml(System.String)\n  id: FromGml(System.String)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: FromGml(String)\n  nameWithType: DbGeometry.FromGml(String)\n  fullName: System.Data.Spatial.DbGeometry.FromGml(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified Geography Markup Language (GML) value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry FromGml (string geometryMarkup);\n    parameters:\n    - id: geometryMarkup\n      type: System.String\n      description: A string that contains a Geography Markup Language (GML) representation of the geometry value.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the GML value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>).\n  overload: System.Data.Spatial.DbGeometry.FromGml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geometryMarkup</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)\n  id: FromGml(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: FromGml(String,Int32)\n  nameWithType: DbGeometry.FromGml(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.FromGml(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry FromGml (string geometryMarkup, int coordinateSystemId);\n    parameters:\n    - id: geometryMarkup\n      type: System.String\n      description: A string that contains a Geography Markup Language (GML) representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the GML value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.FromGml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geometryMarkup</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.FromText(System.String)\n  id: FromText(System.String)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: FromText(String)\n  nameWithType: DbGeometry.FromText(String)\n  fullName: System.Data.Spatial.DbGeometry.FromText(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry FromText (string wellKnownText);\n    parameters:\n    - id: wellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geometry value.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known text value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>).\n  overload: System.Data.Spatial.DbGeometry.FromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownText</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)\n  id: FromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: FromText(String,Int32)\n  nameWithType: DbGeometry.FromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.FromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry FromText (string wellKnownText, int coordinateSystemId);\n    parameters:\n    - id: wellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.FromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)\n  id: GeometryCollectionFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: GeometryCollectionFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> collection value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry GeometryCollectionFromBinary (byte[] geometryCollectionWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: geometryCollectionWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geometryCollectionWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)\n  id: GeometryCollectionFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: GeometryCollectionFromText(String,Int32)\n  nameWithType: DbGeometry.GeometryCollectionFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> collection value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry GeometryCollectionFromText (string geometryCollectionWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: geometryCollectionWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.GeometryCollectionFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geometryCollectionWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)\n  id: InteriorRingAt(System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: InteriorRingAt(Int32)\n  nameWithType: DbGeometry.InteriorRingAt(Int32)\n  fullName: System.Data.Spatial.DbGeometry.InteriorRingAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns an interior ring from this DbGeometry value at a specific position, if it represents a polygon. &lt;param name=\"index\"&gt;The position within this geometry value from which the interior ring should be taken.&lt;/param&gt;&lt;returns&gt;The interior ring in this geometry value at the specified position, if it represents a polygon; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public System.Data.Spatial.DbGeometry InteriorRingAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: An interior ring from this DbGeometry value at a specific position.\n  overload: System.Data.Spatial.DbGeometry.InteriorRingAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.InteriorRingCount\n  id: InteriorRingCount\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: InteriorRingCount\n  nameWithType: DbGeometry.InteriorRingCount\n  fullName: System.Data.Spatial.DbGeometry.InteriorRingCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the number of interior rings in this DbGeometry value, if it represents a polygon. &lt;returns&gt;The number of elements in this geometry value, if it represents a polygon; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<int> InteriorRingCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The number of interior rings in this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.InteriorRingCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)\n  id: Intersection(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Intersection(DbGeometry)\n  nameWithType: DbGeometry.Intersection(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Intersection(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the intersection of this DbGeometry value and another DbGeometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Intersection (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value for which the intersection with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value representing the intersection between this geometry value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeometry.Intersection*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)\n  id: Intersects(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Intersects(DbGeometry)\n  nameWithType: DbGeometry.Intersects(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Intersects(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value spatially intersects the specified DbGeometry argument.\n  syntax:\n    content: public bool Intersects (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for intersection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> intersects this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Intersects*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.IsClosed\n  id: IsClosed\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: DbGeometry.IsClosed\n  fullName: System.Data.Spatial.DbGeometry.IsClosed\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeometry value is closed, which may be null if this value does not represent a curve.\n  syntax:\n    content: public Nullable<bool> IsClosed { get; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.IsClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.IsEmpty\n  id: IsEmpty\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: DbGeometry.IsEmpty\n  fullName: System.Data.Spatial.DbGeometry.IsEmpty\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeometry value is empty, which may be null if this value does not represent a curve.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is empty; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.IsRing\n  id: IsRing\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: IsRing\n  nameWithType: DbGeometry.IsRing\n  fullName: System.Data.Spatial.DbGeometry.IsRing\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeometry value is a ring, which may be null if this value does not represent a curve.\n  syntax:\n    content: public Nullable<bool> IsRing { get; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is a ring; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.IsRing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.IsSimple\n  id: IsSimple\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: IsSimple\n  nameWithType: DbGeometry.IsSimple\n  fullName: System.Data.Spatial.DbGeometry.IsSimple\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeometry value is simple.\n  syntax:\n    content: public bool IsSimple { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is simple; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.IsSimple*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.IsValid\n  id: IsValid\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: IsValid\n  nameWithType: DbGeometry.IsValid\n  fullName: System.Data.Spatial.DbGeometry.IsValid\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeometry value is valid.\n  syntax:\n    content: public bool IsValid { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeometry value is valid; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.IsValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Length\n  id: Length\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Length\n  nameWithType: DbGeometry.Length\n  fullName: System.Data.Spatial.DbGeometry.Length\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable double value that indicates the length of this DbGeometry value, which may be null if this value does not represent a curve.\n  syntax:\n    content: public Nullable<double> Length { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The length of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)\n  id: LineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: LineFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.LineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.LineFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> line value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry LineFromBinary (byte[] lineWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: lineWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.LineFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>lineWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)\n  id: LineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: LineFromText(String,Int32)\n  nameWithType: DbGeometry.LineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.LineFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> line value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry LineFromText (string lineWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: lineWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.LineFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>lineWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Measure\n  id: Measure\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Measure\n  nameWithType: DbGeometry.Measure\n  fullName: System.Data.Spatial.DbGeometry.Measure\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the Measure (M coordinate) of this DbGeometry value, if it represents a point. &lt;returns&gt;The Measure (M coordinate) value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> Measure { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The Measure (M coordinate) of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.Measure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)\n  id: MultiLineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: MultiLineFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.MultiLineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiLineFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multiline value from a binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MultiLineFromBinary (byte[] multiLineWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiLineWellKnownBinary\n      type: System.Byte[]\n      description: The well-known binary value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The multiline value from a binary value.\n  overload: System.Data.Spatial.DbGeometry.MultiLineFromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)\n  id: MultiLineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: MultiLineFromText(String,Int32)\n  nameWithType: DbGeometry.MultiLineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiLineFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multiline value from a well-known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MultiLineFromText (string multiLineWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiLineWellKnownText\n      type: System.String\n      description: The well-known text.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The multiline value from a well-known text value.\n  overload: System.Data.Spatial.DbGeometry.MultiLineFromText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)\n  id: MultiPointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: MultiPointFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.MultiPointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPointFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multipoint value from a well-known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MultiPointFromBinary (byte[] multiPointWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiPointWellKnownBinary\n      type: System.Byte[]\n      description: The well-known binary value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The multipoint value from a well-known binary value.\n  overload: System.Data.Spatial.DbGeometry.MultiPointFromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)\n  id: MultiPointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: MultiPointFromText(String,Int32)\n  nameWithType: DbGeometry.MultiPointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPointFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multipoint value from a well-known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MultiPointFromText (string multiPointWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiPointWellKnownText\n      type: System.String\n      description: The well-known text value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The multipoint value from a well-known text value.\n  overload: System.Data.Spatial.DbGeometry.MultiPointFromText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  id: MultiPolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: MultiPolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.MultiPolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multi polygon value from a well-known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MultiPolygonFromBinary (byte[] multiPolygonWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiPolygonWellKnownBinary\n      type: System.Byte[]\n      description: The multi polygon well-known text value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The multipoint value from a well-known text value.\n  overload: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)\n  id: MultiPolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: MultiPolygonFromText(String,Int32)\n  nameWithType: DbGeometry.MultiPolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multi polygon value from a well-known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry MultiPolygonFromText (string multiPolygonWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiPolygonWellKnownText\n      type: System.String\n      description: The multi polygon well-known text value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: The multi polygon value from a well-known binary value.\n  overload: System.Data.Spatial.DbGeometry.MultiPolygonFromText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)\n  id: Overlaps(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Overlaps(DbGeometry)\n  nameWithType: DbGeometry.Overlaps(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Overlaps(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value spatially overlaps the specified DbGeometry argument.\n  syntax:\n    content: public bool Overlaps (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for overlap.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value overlaps <code>other</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Overlaps*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PointAt(System.Int32)\n  id: PointAt(System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PointAt(Int32)\n  nameWithType: DbGeometry.PointAt(Int32)\n  fullName: System.Data.Spatial.DbGeometry.PointAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns an element of this DbGeometry value from a specific position, if it represents a linestring or linear ring. &lt;param name=\"index\"&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public System.Data.Spatial.DbGeometry PointAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: An element of this DbGeometry value from a specific position.\n  overload: System.Data.Spatial.DbGeometry.PointAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PointCount\n  id: PointCount\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PointCount\n  nameWithType: DbGeometry.PointCount\n  fullName: System.Data.Spatial.DbGeometry.PointCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the number of points in this DbGeometry value, if it represents a linestring or linear ring. &lt;returns&gt;The number of elements in this geometry value, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<int> PointCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The number of points in this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.PointCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)\n  id: PointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PointFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.PointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.PointFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> point value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry PointFromBinary (byte[] pointWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: pointWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.PointFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pointWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)\n  id: PointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PointFromText(String,Int32)\n  nameWithType: DbGeometry.PointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.PointFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> point value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry PointFromText (string pointWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: pointWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.PointFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pointWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PointOnSurface\n  id: PointOnSurface\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PointOnSurface\n  nameWithType: DbGeometry.PointOnSurface\n  fullName: System.Data.Spatial.DbGeometry.PointOnSurface\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a point on the surface of this DbGeometry value, which may be null if this value does not represent a surface.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry PointOnSurface { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A point on the surface of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.PointOnSurface*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)\n  id: PolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.PolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.PolygonFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> polygon value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry PolygonFromBinary (byte[] polygonWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: polygonWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.PolygonFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>polygonWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)\n  id: PolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: PolygonFromText(String,Int32)\n  nameWithType: DbGeometry.PolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.PolygonFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeometry\"></xref> polygon value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeometry PolygonFromText (string polygonWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: polygonWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geometry value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeometry value should use.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeometry.PolygonFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>polygonWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.ProviderValue\n  id: ProviderValue\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: ProviderValue\n  nameWithType: DbGeometry.ProviderValue\n  fullName: System.Data.Spatial.DbGeometry.ProviderValue\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a representation of this DbGeometry value that is specific to the underlying provider that constructed it.\n  syntax:\n    content: public object ProviderValue { get; }\n    return:\n      type: System.Object\n      description: A representation of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.ProviderValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)\n  id: Relate(System.Data.Spatial.DbGeometry,System.String)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Relate(DbGeometry,String)\n  nameWithType: DbGeometry.Relate(DbGeometry,String)\n  fullName: System.Data.Spatial.DbGeometry.Relate(DbGeometry,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value spatially relates to the specified DbGeometry argument according to the given Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern.\n  syntax:\n    content: public bool Relate (System.Data.Spatial.DbGeometry other, string matrix);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for relation.\n    - id: matrix\n      type: System.String\n      description: A string that contains the text representation of the (DE-9IM) intersection pattern that defines the relation.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value relates to <code>other</code> according to the specified intersection pattern matrix; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Relate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: >-\n      <code>other</code>\n          <code>matrix</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)\n  id: SpatialEquals(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: SpatialEquals(DbGeometry)\n  nameWithType: DbGeometry.SpatialEquals(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.SpatialEquals(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry is spatially equal to the specified DbGeometry argument.\n  syntax:\n    content: public bool SpatialEquals (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for equality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is spatially equal to this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.SpatialEquals*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.SpatialTypeName\n  id: SpatialTypeName\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: SpatialTypeName\n  nameWithType: DbGeometry.SpatialTypeName\n  fullName: System.Data.Spatial.DbGeometry.SpatialTypeName\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a spatial type name representation of this DbGeometry value.\n  syntax:\n    content: public string SpatialTypeName { get; }\n    return:\n      type: System.String\n      description: A spatial type name representation of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.SpatialTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.StartPoint\n  id: StartPoint\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: StartPoint\n  nameWithType: DbGeometry.StartPoint\n  fullName: System.Data.Spatial.DbGeometry.StartPoint\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry StartPoint { get; }\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A DbGeometry value representing the start point of this value.\n  overload: System.Data.Spatial.DbGeometry.StartPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)\n  id: SymmetricDifference(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: SymmetricDifference(DbGeometry)\n  nameWithType: DbGeometry.SymmetricDifference(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.SymmetricDifference(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the symmetric difference between this DbGeometry value and another DbGeometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry SymmetricDifference (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value for which the symmetric difference with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value representing the symmetric difference between this geometry value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeometry.SymmetricDifference*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.ToString\n  id: ToString\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DbGeometry.ToString()\n  fullName: System.Data.Spatial.DbGeometry.ToString()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns a string representation of the geometry value.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the geometry value.\n  overload: System.Data.Spatial.DbGeometry.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)\n  id: Touches(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Touches(DbGeometry)\n  nameWithType: DbGeometry.Touches(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Touches(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value spatially touches the specified DbGeometry argument.\n  syntax:\n    content: public bool Touches (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> touches this geometry value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Touches*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)\n  id: Union(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Union(DbGeometry)\n  nameWithType: DbGeometry.Union(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Union(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the union of this DbGeometry value and another DbGeometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometry Union (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value for which the union with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeometry\n      description: A new DbGeometry value representing the union between this geometry value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeometry.Union*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.WellKnownValue\n  id: WellKnownValue\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: WellKnownValue\n  nameWithType: DbGeometry.WellKnownValue\n  fullName: System.Data.Spatial.DbGeometry.WellKnownValue\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets or sets a data contract serializable well known representation of this DbGeometry value.\n  syntax:\n    content: public System.Data.Spatial.DbGeometryWellKnownValue WellKnownValue { get; set; }\n    return:\n      type: System.Data.Spatial.DbGeometryWellKnownValue\n      description: A data contract serializable well known representation of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.WellKnownValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)\n  id: Within(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: Within(DbGeometry)\n  nameWithType: DbGeometry.Within(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Within(DbGeometry)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeometry value is spatially within the specified DbGeometry argument.\n  syntax:\n    content: public bool Within (System.Data.Spatial.DbGeometry other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeometry\n      description: The geometry value that should be compared with this geometry value for containment.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this geometry value is within <code>other</code>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeometry.Within*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.XCoordinate\n  id: XCoordinate\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: XCoordinate\n  nameWithType: DbGeometry.XCoordinate\n  fullName: System.Data.Spatial.DbGeometry.XCoordinate\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the X coordinate of this DbGeometry value, if it represents a point. &lt;returns&gt;The X coordinate value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> XCoordinate { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The X coordinate of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.XCoordinate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeometry.YCoordinate\n  id: YCoordinate\n  parent: System.Data.Spatial.DbGeometry\n  langs:\n  - csharp\n  name: YCoordinate\n  nameWithType: DbGeometry.YCoordinate\n  fullName: System.Data.Spatial.DbGeometry.YCoordinate\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the Y coordinate of this DbGeometry value, if it represents a point. &lt;returns&gt;The Y coordinate value of this geometry value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> YCoordinate { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The Y coordinate of this DbGeometry value.\n  overload: System.Data.Spatial.DbGeometry.YCoordinate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Spatial.DbGeometry.Area\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Area\n  nameWithType: DbGeometry.Area\n  fullName: System.Data.Spatial.DbGeometry.Area\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: true\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Double>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Spatial.DbGeometry.AsBinary\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: AsBinary()\n  nameWithType: DbGeometry.AsBinary()\n  fullName: System.Data.Spatial.DbGeometry.AsBinary()\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Spatial.DbGeometry.AsGml\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: AsGml()\n  nameWithType: DbGeometry.AsGml()\n  fullName: System.Data.Spatial.DbGeometry.AsGml()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeometry.AsText\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: AsText()\n  nameWithType: DbGeometry.AsText()\n  fullName: System.Data.Spatial.DbGeometry.AsText()\n- uid: System.Data.Spatial.DbGeometry.Boundary\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Boundary\n  nameWithType: DbGeometry.Boundary\n  fullName: System.Data.Spatial.DbGeometry.Boundary\n- uid: System.Data.Spatial.DbGeometry\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeometry\n  nameWithType: DbGeometry\n  fullName: System.Data.Spatial.DbGeometry\n- uid: System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Buffer(Nullable<Double>)\n  nameWithType: DbGeometry.Buffer(Nullable<Double>)\n  fullName: System.Data.Spatial.DbGeometry.Buffer(Nullable<Double>)\n- uid: System.Data.Spatial.DbGeometry.Centroid\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Centroid\n  nameWithType: DbGeometry.Centroid\n  fullName: System.Data.Spatial.DbGeometry.Centroid\n- uid: System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Contains(DbGeometry)\n  nameWithType: DbGeometry.Contains(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Contains(DbGeometry)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Spatial.DbGeometry.ConvexHull\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ConvexHull\n  nameWithType: DbGeometry.ConvexHull\n  fullName: System.Data.Spatial.DbGeometry.ConvexHull\n- uid: System.Data.Spatial.DbGeometry.CoordinateSystemId\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: CoordinateSystemId\n  nameWithType: DbGeometry.CoordinateSystemId\n  fullName: System.Data.Spatial.DbGeometry.CoordinateSystemId\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Crosses(DbGeometry)\n  nameWithType: DbGeometry.Crosses(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Crosses(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeometry.DefaultCoordinateSystemId\n  fullName: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId\n- uid: System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Difference(DbGeometry)\n  nameWithType: DbGeometry.Difference(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Difference(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.Dimension\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Dimension\n  nameWithType: DbGeometry.Dimension\n  fullName: System.Data.Spatial.DbGeometry.Dimension\n- uid: System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Disjoint(DbGeometry)\n  nameWithType: DbGeometry.Disjoint(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Disjoint(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Distance(DbGeometry)\n  nameWithType: DbGeometry.Distance(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Distance(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.ElementAt(System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ElementAt(Int32)\n  nameWithType: DbGeometry.ElementAt(Int32)\n  fullName: System.Data.Spatial.DbGeometry.ElementAt(Int32)\n- uid: System.Data.Spatial.DbGeometry.ElementCount\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ElementCount\n  nameWithType: DbGeometry.ElementCount\n  fullName: System.Data.Spatial.DbGeometry.ElementCount\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Spatial.DbGeometry.Elevation\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Elevation\n  nameWithType: DbGeometry.Elevation\n  fullName: System.Data.Spatial.DbGeometry.Elevation\n- uid: System.Data.Spatial.DbGeometry.EndPoint\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: EndPoint\n  nameWithType: DbGeometry.EndPoint\n  fullName: System.Data.Spatial.DbGeometry.EndPoint\n- uid: System.Data.Spatial.DbGeometry.Envelope\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Envelope\n  nameWithType: DbGeometry.Envelope\n  fullName: System.Data.Spatial.DbGeometry.Envelope\n- uid: System.Data.Spatial.DbGeometry.ExteriorRing\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ExteriorRing\n  nameWithType: DbGeometry.ExteriorRing\n  fullName: System.Data.Spatial.DbGeometry.ExteriorRing\n- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromBinary(Byte[])\n  nameWithType: DbGeometry.FromBinary(Byte[])\n  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[])\n- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.FromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.FromGml(System.String)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromGml(String)\n  nameWithType: DbGeometry.FromGml(String)\n  fullName: System.Data.Spatial.DbGeometry.FromGml(String)\n- uid: System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromGml(String,Int32)\n  nameWithType: DbGeometry.FromGml(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.FromGml(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.FromText(System.String)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromText(String)\n  nameWithType: DbGeometry.FromText(String)\n  fullName: System.Data.Spatial.DbGeometry.FromText(String)\n- uid: System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromText(String,Int32)\n  nameWithType: DbGeometry.FromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.FromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: GeometryCollectionFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: GeometryCollectionFromText(String,Int32)\n  nameWithType: DbGeometry.GeometryCollectionFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: InteriorRingAt(Int32)\n  nameWithType: DbGeometry.InteriorRingAt(Int32)\n  fullName: System.Data.Spatial.DbGeometry.InteriorRingAt(Int32)\n- uid: System.Data.Spatial.DbGeometry.InteriorRingCount\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: InteriorRingCount\n  nameWithType: DbGeometry.InteriorRingCount\n  fullName: System.Data.Spatial.DbGeometry.InteriorRingCount\n- uid: System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Intersection(DbGeometry)\n  nameWithType: DbGeometry.Intersection(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Intersection(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Intersects(DbGeometry)\n  nameWithType: DbGeometry.Intersects(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Intersects(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.IsClosed\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbGeometry.IsClosed\n  fullName: System.Data.Spatial.DbGeometry.IsClosed\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: true\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Spatial.DbGeometry.IsEmpty\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbGeometry.IsEmpty\n  fullName: System.Data.Spatial.DbGeometry.IsEmpty\n- uid: System.Data.Spatial.DbGeometry.IsRing\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsRing\n  nameWithType: DbGeometry.IsRing\n  fullName: System.Data.Spatial.DbGeometry.IsRing\n- uid: System.Data.Spatial.DbGeometry.IsSimple\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsSimple\n  nameWithType: DbGeometry.IsSimple\n  fullName: System.Data.Spatial.DbGeometry.IsSimple\n- uid: System.Data.Spatial.DbGeometry.IsValid\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsValid\n  nameWithType: DbGeometry.IsValid\n  fullName: System.Data.Spatial.DbGeometry.IsValid\n- uid: System.Data.Spatial.DbGeometry.Length\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Length\n  nameWithType: DbGeometry.Length\n  fullName: System.Data.Spatial.DbGeometry.Length\n- uid: System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: LineFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.LineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.LineFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: LineFromText(String,Int32)\n  nameWithType: DbGeometry.LineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.LineFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.Measure\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Measure\n  nameWithType: DbGeometry.Measure\n  fullName: System.Data.Spatial.DbGeometry.Measure\n- uid: System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiLineFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.MultiLineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiLineFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiLineFromText(String,Int32)\n  nameWithType: DbGeometry.MultiLineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiLineFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPointFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.MultiPointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPointFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPointFromText(String,Int32)\n  nameWithType: DbGeometry.MultiPointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPointFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.MultiPolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPolygonFromText(String,Int32)\n  nameWithType: DbGeometry.MultiPolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Overlaps(DbGeometry)\n  nameWithType: DbGeometry.Overlaps(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Overlaps(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.PointAt(System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointAt(Int32)\n  nameWithType: DbGeometry.PointAt(Int32)\n  fullName: System.Data.Spatial.DbGeometry.PointAt(Int32)\n- uid: System.Data.Spatial.DbGeometry.PointCount\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointCount\n  nameWithType: DbGeometry.PointCount\n  fullName: System.Data.Spatial.DbGeometry.PointCount\n- uid: System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.PointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.PointFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointFromText(String,Int32)\n  nameWithType: DbGeometry.PointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.PointFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.PointOnSurface\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointOnSurface\n  nameWithType: DbGeometry.PointOnSurface\n  fullName: System.Data.Spatial.DbGeometry.PointOnSurface\n- uid: System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeometry.PolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeometry.PolygonFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PolygonFromText(String,Int32)\n  nameWithType: DbGeometry.PolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeometry.PolygonFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeometry.ProviderValue\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ProviderValue\n  nameWithType: DbGeometry.ProviderValue\n  fullName: System.Data.Spatial.DbGeometry.ProviderValue\n- uid: System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Relate(DbGeometry,String)\n  nameWithType: DbGeometry.Relate(DbGeometry,String)\n  fullName: System.Data.Spatial.DbGeometry.Relate(DbGeometry,String)\n- uid: System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: SpatialEquals(DbGeometry)\n  nameWithType: DbGeometry.SpatialEquals(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.SpatialEquals(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.SpatialTypeName\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: SpatialTypeName\n  nameWithType: DbGeometry.SpatialTypeName\n  fullName: System.Data.Spatial.DbGeometry.SpatialTypeName\n- uid: System.Data.Spatial.DbGeometry.StartPoint\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: StartPoint\n  nameWithType: DbGeometry.StartPoint\n  fullName: System.Data.Spatial.DbGeometry.StartPoint\n- uid: System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: SymmetricDifference(DbGeometry)\n  nameWithType: DbGeometry.SymmetricDifference(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.SymmetricDifference(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.ToString\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ToString()\n  nameWithType: DbGeometry.ToString()\n  fullName: System.Data.Spatial.DbGeometry.ToString()\n- uid: System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Touches(DbGeometry)\n  nameWithType: DbGeometry.Touches(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Touches(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Union(DbGeometry)\n  nameWithType: DbGeometry.Union(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Union(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.WellKnownValue\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: WellKnownValue\n  nameWithType: DbGeometry.WellKnownValue\n  fullName: System.Data.Spatial.DbGeometry.WellKnownValue\n- uid: System.Data.Spatial.DbGeometryWellKnownValue\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeometryWellKnownValue\n  nameWithType: DbGeometryWellKnownValue\n  fullName: System.Data.Spatial.DbGeometryWellKnownValue\n- uid: System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Within(DbGeometry)\n  nameWithType: DbGeometry.Within(DbGeometry)\n  fullName: System.Data.Spatial.DbGeometry.Within(DbGeometry)\n- uid: System.Data.Spatial.DbGeometry.XCoordinate\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: XCoordinate\n  nameWithType: DbGeometry.XCoordinate\n  fullName: System.Data.Spatial.DbGeometry.XCoordinate\n- uid: System.Data.Spatial.DbGeometry.YCoordinate\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: YCoordinate\n  nameWithType: DbGeometry.YCoordinate\n  fullName: System.Data.Spatial.DbGeometry.YCoordinate\n- uid: System.Data.Spatial.DbGeometry.Area*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Area\n  nameWithType: DbGeometry.Area\n- uid: System.Data.Spatial.DbGeometry.AsBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: AsBinary\n  nameWithType: DbGeometry.AsBinary\n- uid: System.Data.Spatial.DbGeometry.AsGml*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: AsGml\n  nameWithType: DbGeometry.AsGml\n- uid: System.Data.Spatial.DbGeometry.AsText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: AsText\n  nameWithType: DbGeometry.AsText\n- uid: System.Data.Spatial.DbGeometry.Boundary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Boundary\n  nameWithType: DbGeometry.Boundary\n- uid: System.Data.Spatial.DbGeometry.Buffer*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Buffer\n  nameWithType: DbGeometry.Buffer\n- uid: System.Data.Spatial.DbGeometry.Centroid*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Centroid\n  nameWithType: DbGeometry.Centroid\n- uid: System.Data.Spatial.DbGeometry.Contains*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Contains\n  nameWithType: DbGeometry.Contains\n- uid: System.Data.Spatial.DbGeometry.ConvexHull*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ConvexHull\n  nameWithType: DbGeometry.ConvexHull\n- uid: System.Data.Spatial.DbGeometry.CoordinateSystemId*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: CoordinateSystemId\n  nameWithType: DbGeometry.CoordinateSystemId\n- uid: System.Data.Spatial.DbGeometry.Crosses*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Crosses\n  nameWithType: DbGeometry.Crosses\n- uid: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeometry.DefaultCoordinateSystemId\n- uid: System.Data.Spatial.DbGeometry.Difference*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Difference\n  nameWithType: DbGeometry.Difference\n- uid: System.Data.Spatial.DbGeometry.Dimension*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Dimension\n  nameWithType: DbGeometry.Dimension\n- uid: System.Data.Spatial.DbGeometry.Disjoint*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Disjoint\n  nameWithType: DbGeometry.Disjoint\n- uid: System.Data.Spatial.DbGeometry.Distance*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Distance\n  nameWithType: DbGeometry.Distance\n- uid: System.Data.Spatial.DbGeometry.ElementAt*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ElementAt\n  nameWithType: DbGeometry.ElementAt\n- uid: System.Data.Spatial.DbGeometry.ElementCount*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ElementCount\n  nameWithType: DbGeometry.ElementCount\n- uid: System.Data.Spatial.DbGeometry.Elevation*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Elevation\n  nameWithType: DbGeometry.Elevation\n- uid: System.Data.Spatial.DbGeometry.EndPoint*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: EndPoint\n  nameWithType: DbGeometry.EndPoint\n- uid: System.Data.Spatial.DbGeometry.Envelope*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Envelope\n  nameWithType: DbGeometry.Envelope\n- uid: System.Data.Spatial.DbGeometry.ExteriorRing*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ExteriorRing\n  nameWithType: DbGeometry.ExteriorRing\n- uid: System.Data.Spatial.DbGeometry.FromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromBinary\n  nameWithType: DbGeometry.FromBinary\n- uid: System.Data.Spatial.DbGeometry.FromGml*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromGml\n  nameWithType: DbGeometry.FromGml\n- uid: System.Data.Spatial.DbGeometry.FromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: FromText\n  nameWithType: DbGeometry.FromText\n- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: GeometryCollectionFromBinary\n  nameWithType: DbGeometry.GeometryCollectionFromBinary\n- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: GeometryCollectionFromText\n  nameWithType: DbGeometry.GeometryCollectionFromText\n- uid: System.Data.Spatial.DbGeometry.InteriorRingAt*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: InteriorRingAt\n  nameWithType: DbGeometry.InteriorRingAt\n- uid: System.Data.Spatial.DbGeometry.InteriorRingCount*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: InteriorRingCount\n  nameWithType: DbGeometry.InteriorRingCount\n- uid: System.Data.Spatial.DbGeometry.Intersection*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Intersection\n  nameWithType: DbGeometry.Intersection\n- uid: System.Data.Spatial.DbGeometry.Intersects*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Intersects\n  nameWithType: DbGeometry.Intersects\n- uid: System.Data.Spatial.DbGeometry.IsClosed*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbGeometry.IsClosed\n- uid: System.Data.Spatial.DbGeometry.IsEmpty*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbGeometry.IsEmpty\n- uid: System.Data.Spatial.DbGeometry.IsRing*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsRing\n  nameWithType: DbGeometry.IsRing\n- uid: System.Data.Spatial.DbGeometry.IsSimple*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsSimple\n  nameWithType: DbGeometry.IsSimple\n- uid: System.Data.Spatial.DbGeometry.IsValid*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: IsValid\n  nameWithType: DbGeometry.IsValid\n- uid: System.Data.Spatial.DbGeometry.Length*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Length\n  nameWithType: DbGeometry.Length\n- uid: System.Data.Spatial.DbGeometry.LineFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: LineFromBinary\n  nameWithType: DbGeometry.LineFromBinary\n- uid: System.Data.Spatial.DbGeometry.LineFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: LineFromText\n  nameWithType: DbGeometry.LineFromText\n- uid: System.Data.Spatial.DbGeometry.Measure*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Measure\n  nameWithType: DbGeometry.Measure\n- uid: System.Data.Spatial.DbGeometry.MultiLineFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiLineFromBinary\n  nameWithType: DbGeometry.MultiLineFromBinary\n- uid: System.Data.Spatial.DbGeometry.MultiLineFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiLineFromText\n  nameWithType: DbGeometry.MultiLineFromText\n- uid: System.Data.Spatial.DbGeometry.MultiPointFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPointFromBinary\n  nameWithType: DbGeometry.MultiPointFromBinary\n- uid: System.Data.Spatial.DbGeometry.MultiPointFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPointFromText\n  nameWithType: DbGeometry.MultiPointFromText\n- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPolygonFromBinary\n  nameWithType: DbGeometry.MultiPolygonFromBinary\n- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: MultiPolygonFromText\n  nameWithType: DbGeometry.MultiPolygonFromText\n- uid: System.Data.Spatial.DbGeometry.Overlaps*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Overlaps\n  nameWithType: DbGeometry.Overlaps\n- uid: System.Data.Spatial.DbGeometry.PointAt*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointAt\n  nameWithType: DbGeometry.PointAt\n- uid: System.Data.Spatial.DbGeometry.PointCount*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointCount\n  nameWithType: DbGeometry.PointCount\n- uid: System.Data.Spatial.DbGeometry.PointFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointFromBinary\n  nameWithType: DbGeometry.PointFromBinary\n- uid: System.Data.Spatial.DbGeometry.PointFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointFromText\n  nameWithType: DbGeometry.PointFromText\n- uid: System.Data.Spatial.DbGeometry.PointOnSurface*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PointOnSurface\n  nameWithType: DbGeometry.PointOnSurface\n- uid: System.Data.Spatial.DbGeometry.PolygonFromBinary*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PolygonFromBinary\n  nameWithType: DbGeometry.PolygonFromBinary\n- uid: System.Data.Spatial.DbGeometry.PolygonFromText*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: PolygonFromText\n  nameWithType: DbGeometry.PolygonFromText\n- uid: System.Data.Spatial.DbGeometry.ProviderValue*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ProviderValue\n  nameWithType: DbGeometry.ProviderValue\n- uid: System.Data.Spatial.DbGeometry.Relate*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Relate\n  nameWithType: DbGeometry.Relate\n- uid: System.Data.Spatial.DbGeometry.SpatialEquals*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: SpatialEquals\n  nameWithType: DbGeometry.SpatialEquals\n- uid: System.Data.Spatial.DbGeometry.SpatialTypeName*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: SpatialTypeName\n  nameWithType: DbGeometry.SpatialTypeName\n- uid: System.Data.Spatial.DbGeometry.StartPoint*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: StartPoint\n  nameWithType: DbGeometry.StartPoint\n- uid: System.Data.Spatial.DbGeometry.SymmetricDifference*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: SymmetricDifference\n  nameWithType: DbGeometry.SymmetricDifference\n- uid: System.Data.Spatial.DbGeometry.ToString*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: ToString\n  nameWithType: DbGeometry.ToString\n- uid: System.Data.Spatial.DbGeometry.Touches*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Touches\n  nameWithType: DbGeometry.Touches\n- uid: System.Data.Spatial.DbGeometry.Union*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Union\n  nameWithType: DbGeometry.Union\n- uid: System.Data.Spatial.DbGeometry.WellKnownValue*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: WellKnownValue\n  nameWithType: DbGeometry.WellKnownValue\n- uid: System.Data.Spatial.DbGeometry.Within*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: Within\n  nameWithType: DbGeometry.Within\n- uid: System.Data.Spatial.DbGeometry.XCoordinate*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: XCoordinate\n  nameWithType: DbGeometry.XCoordinate\n- uid: System.Data.Spatial.DbGeometry.YCoordinate*\n  parent: System.Data.Spatial.DbGeometry\n  isExternal: false\n  name: YCoordinate\n  nameWithType: DbGeometry.YCoordinate\n"}