{"nodes":[{"pos":[680,692],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[725,737],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[775,787],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2333,2345],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2974,2986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3682,3694],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4325,4337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ActivityFunc`3\n  id: ActivityFunc`3\n  children:\n  - System.Activities.ActivityFunc`3.#ctor\n  - System.Activities.ActivityFunc`3.Argument1\n  - System.Activities.ActivityFunc`3.Argument2\n  - System.Activities.ActivityFunc`3.GetResultArgument\n  - System.Activities.ActivityFunc`3.Result\n  langs:\n  - csharp\n  name: ActivityFunc<T1,T2,TResult>\n  nameWithType: ActivityFunc<T1,T2,TResult>\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>\n  type: Class\n  syntax:\n    content: 'public sealed class ActivityFunc<T1,T2,TResult> : System.Activities.ActivityDelegate'\n    typeParameters:\n    - id: T1\n      description: To be added.\n    - id: T2\n      description: To be added.\n    - id: TResult\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityDelegate\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityDelegate.DisplayName\n  - System.Activities.ActivityDelegate.Handler\n  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})\n  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName\n  - System.Activities.ActivityDelegate.ToString\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`3.#ctor\n  id: '#ctor'\n  parent: System.Activities.ActivityFunc`3\n  langs:\n  - csharp\n  name: ActivityFunc()\n  nameWithType: ActivityFunc<T1,T2,TResult>.ActivityFunc()\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.ActivityFunc()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public ActivityFunc ();\n    parameters: []\n  overload: System.Activities.ActivityFunc`3.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`3.Argument1\n  id: Argument1\n  parent: System.Activities.ActivityFunc`3\n  langs:\n  - csharp\n  name: Argument1\n  nameWithType: ActivityFunc<T1,T2,TResult>.Argument1\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.Argument1\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateInArgument<T1> Argument1 { get; set; }\n    return:\n      type: System.Activities.DelegateInArgument{T1}\n      description: To be added.\n  overload: System.Activities.ActivityFunc`3.Argument1*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`3.Argument2\n  id: Argument2\n  parent: System.Activities.ActivityFunc`3\n  langs:\n  - csharp\n  name: Argument2\n  nameWithType: ActivityFunc<T1,T2,TResult>.Argument2\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.Argument2\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateInArgument<T2> Argument2 { get; set; }\n    return:\n      type: System.Activities.DelegateInArgument{T2}\n      description: To be added.\n  overload: System.Activities.ActivityFunc`3.Argument2*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`3.GetResultArgument\n  id: GetResultArgument\n  parent: System.Activities.ActivityFunc`3\n  langs:\n  - csharp\n  name: GetResultArgument()\n  nameWithType: ActivityFunc<T1,T2,TResult>.GetResultArgument()\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.GetResultArgument()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override System.Activities.DelegateOutArgument GetResultArgument ();\n    parameters: []\n    return:\n      type: System.Activities.DelegateOutArgument\n      description: To be added.\n  overload: System.Activities.ActivityFunc`3.GetResultArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.ActivityFunc`3.Result\n  id: Result\n  parent: System.Activities.ActivityFunc`3\n  langs:\n  - csharp\n  name: Result\n  nameWithType: ActivityFunc<T1,T2,TResult>.Result\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.Result\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.DelegateOutArgument<TResult> Result { get; set; }\n    return:\n      type: System.Activities.DelegateOutArgument{TResult}\n      description: To be added.\n  overload: System.Activities.ActivityFunc`3.Result*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.ActivityDelegate\n  isExternal: false\n  name: System.Activities.ActivityDelegate\n- uid: System.Activities.ActivityFunc`3.#ctor\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: ActivityFunc()\n  nameWithType: ActivityFunc<T1,T2,TResult>.ActivityFunc()\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.ActivityFunc()\n- uid: System.Activities.ActivityFunc`3.Argument1\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: Argument1\n  nameWithType: ActivityFunc<T1,T2,TResult>.Argument1\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.Argument1\n- uid: System.Activities.DelegateInArgument{T1}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateInArgument<T1>\n  nameWithType: DelegateInArgument<T1>\n  fullName: System.Activities.DelegateInArgument<T1>\n  spec.csharp:\n  - uid: System.Activities.DelegateInArgument`1\n    name: DelegateInArgument\n    nameWithType: DelegateInArgument\n    fullName: DelegateInArgument<T1>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityFunc`3.Argument2\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: Argument2\n  nameWithType: ActivityFunc<T1,T2,TResult>.Argument2\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.Argument2\n- uid: System.Activities.DelegateInArgument{T2}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateInArgument<T2>\n  nameWithType: DelegateInArgument<T2>\n  fullName: System.Activities.DelegateInArgument<T2>\n  spec.csharp:\n  - uid: System.Activities.DelegateInArgument`1\n    name: DelegateInArgument\n    nameWithType: DelegateInArgument\n    fullName: DelegateInArgument<T2>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T2\n    name: T2\n    nameWithType: T2\n    fullName: T2\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityFunc`3.GetResultArgument\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: GetResultArgument()\n  nameWithType: ActivityFunc<T1,T2,TResult>.GetResultArgument()\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.GetResultArgument()\n- uid: System.Activities.DelegateOutArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateOutArgument\n  nameWithType: DelegateOutArgument\n  fullName: System.Activities.DelegateOutArgument\n- uid: System.Activities.ActivityFunc`3.Result\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: Result\n  nameWithType: ActivityFunc<T1,T2,TResult>.Result\n  fullName: System.Activities.ActivityFunc<T1,T2,TResult>.Result\n- uid: System.Activities.DelegateOutArgument{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: DelegateOutArgument<TResult>\n  nameWithType: DelegateOutArgument<TResult>\n  fullName: System.Activities.DelegateOutArgument<TResult>\n  spec.csharp:\n  - uid: System.Activities.DelegateOutArgument`1\n    name: DelegateOutArgument\n    nameWithType: DelegateOutArgument\n    fullName: DelegateOutArgument<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityFunc`3.#ctor*\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: ActivityFunc<T1,T2,TResult>\n  nameWithType: ActivityFunc<T1,T2,TResult>.ActivityFunc<T1,T2,TResult>\n- uid: System.Activities.ActivityFunc`3.Argument1*\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: Argument1\n  nameWithType: ActivityFunc<T1,T2,TResult>.Argument1\n- uid: System.Activities.ActivityFunc`3.Argument2*\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: Argument2\n  nameWithType: ActivityFunc<T1,T2,TResult>.Argument2\n- uid: System.Activities.ActivityFunc`3.GetResultArgument*\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: GetResultArgument\n  nameWithType: ActivityFunc<T1,T2,TResult>.GetResultArgument\n- uid: System.Activities.ActivityFunc`3.Result*\n  parent: System.Activities.ActivityFunc`3\n  isExternal: false\n  name: Result\n  nameWithType: ActivityFunc<T1,T2,TResult>.Result\n"}