{"nodes":[{"pos":[1330,1390],"content":"Represents a collection of configuration-element properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of configuration-element properties.","pos":[0,60]}]},{"pos":[1403,2024],"content":"The ConfigurationPropertyCollection class represents the collection of the <xref:System.Configuration.ConfigurationProperty> objects that can be attributes or <xref:System.Configuration.ConfigurationElement> objects of a configuration element.       The <xref:System.Configuration.ConfigurationProperty> class represents an individual configuration setting. It allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element). Additional options allow you to specify whether the attribute is required, is an element key, or represents a default element collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConfigurationPropertyCollection class represents the collection of the <xref:System.Configuration.ConfigurationProperty> objects that can be attributes or <xref:System.Configuration.ConfigurationElement> objects of a configuration element.       The <xref:System.Configuration.ConfigurationProperty> class represents an individual configuration setting. It allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element). Additional options allow you to specify whether the attribute is required, is an element key, or represents a default element collection.","pos":[0,619],"nodes":[{"content":"The ConfigurationPropertyCollection class represents the collection of the &lt;xref:System.Configuration.ConfigurationProperty&gt; objects that can be attributes or &lt;xref:System.Configuration.ConfigurationElement&gt; objects of a configuration element.","pos":[0,243],"source":"The ConfigurationPropertyCollection class represents the collection of the <xref:System.Configuration.ConfigurationProperty> objects that can be attributes or <xref:System.Configuration.ConfigurationElement> objects of a configuration element."},{"content":"The &lt;xref:System.Configuration.ConfigurationProperty&gt; class represents an individual configuration setting.","pos":[250,357],"source":"       The <xref:System.Configuration.ConfigurationProperty> class represents an individual configuration setting."},{"content":"It allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element).","pos":[358,481]},{"content":"Additional options allow you to specify whether the attribute is required, is an element key, or represents a default element collection.","pos":[482,619]}]}]},{"pos":[3677,3791],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> class."},{"pos":[3803,3998],"content":"You use the ConfigurationPropertyCollection to create a new collection that will contain the <xref:System.Configuration.ConfigurationProperty> objects as they apply to your configuration element.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You use the ConfigurationPropertyCollection to create a new collection that will contain the &lt;xref:System.Configuration.ConfigurationProperty&gt; objects as they apply to your configuration element.","pos":[0,195],"source":"You use the ConfigurationPropertyCollection to create a new collection that will contain the <xref:System.Configuration.ConfigurationProperty> objects as they apply to your configuration element."}]},{"pos":[4972,5020],"content":"Adds a configuration property to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a configuration property to the collection.","pos":[0,48]}]},{"pos":[5032,5193],"content":"By default, the Add method will add the specified <xref:System.Configuration.ConfigurationProperty> object, if it is not already contained within the collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By default, the Add method will add the specified &lt;xref:System.Configuration.ConfigurationProperty&gt; object, if it is not already contained within the collection.","pos":[0,161],"source":"By default, the Add method will add the specified <xref:System.Configuration.ConfigurationProperty> object, if it is not already contained within the collection."}]},{"pos":[5594,5669],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to add."},{"pos":[6185,6248],"content":"Removes all configuration property objects from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all configuration property objects from the collection.","pos":[0,63]}]},{"pos":[7344,7421],"content":"Specifies whether the configuration property is contained in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies whether the configuration property is contained in this collection.","pos":[0,77]}]},{"pos":[7773,7869],"content":"An identifier for the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to verify.","needQuote":true,"needEscape":true,"source":"An identifier for the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to verify."},{"pos":[7928,8176],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is contained in the collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Configuration.ConfigurationProperty\"></xref> is contained in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8907,8963],"content":"Copies this ConfigurationPropertyCollection to an array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies this ConfigurationPropertyCollection to an array.","pos":[0,56]}]},{"pos":[9393,9416],"content":"Array to which to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Array to which to copy.","pos":[0,23]}]},{"pos":[9477,9509],"content":"Index at which to begin copying.","needQuote":true,"needEscape":true,"nodes":[{"content":"Index at which to begin copying.","pos":[0,32]}]},{"pos":[10024,10072],"content":"Gets the number of properties in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of properties in the collection.","pos":[0,48]}]},{"pos":[10178,10221],"content":"The number of properties in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of properties in the collection.","pos":[0,43]}]},{"pos":[10779,10865],"content":"Gets the <xref:System.Collections.IEnumerator> object as it applies to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Collections.IEnumerator&gt; object as it applies to the collection.","pos":[0,86],"source":"Gets the <xref:System.Collections.IEnumerator> object as it applies to the collection."}]},{"pos":[11543,11623],"content":"The <xref:System.Collections.IEnumerator> object as it applies to the collection","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Collections.IEnumerator&gt; object as it applies to the collection","pos":[0,80],"source":"The <xref:System.Collections.IEnumerator> object as it applies to the collection"}]},{"pos":[12190,12277],"content":"Gets a value indicating whether access to the collection is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether access to the collection is synchronized (thread safe).","pos":[0,87]}]},{"pos":[12625,12868],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationPropertyCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is synchronized; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> is synchronized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13440,13489],"content":"Gets the collection item with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection item with the specified name.","pos":[0,49]}]},{"pos":[13944,14022],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to return."},{"pos":[14109,14214],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> with the specified <code>name</code>."},{"pos":[14784,14837],"content":"Removes a configuration property from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes a configuration property from the collection.","pos":[0,53]}]},{"pos":[14849,15001],"content":"A return value of <ph id=\"ph1\">`false`</ph> indicates that the specified &lt;xref:System.Configuration.ConfigurationProperty&gt; object was not contained within the collection.","needQuote":true,"needEscape":true,"extradata":"MT","source":"A return value of `false` indicates that the specified <xref:System.Configuration.ConfigurationProperty> object was not contained within the collection."},{"pos":[15573,15651],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to remove."},{"pos":[15710,15939],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> was removed; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Configuration.ConfigurationProperty\"></xref> was removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16469,16525],"content":"Gets the object to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object to synchronize access to the collection.","pos":[0,56]}]},{"pos":[16862,16913],"content":"The object to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to synchronize access to the collection.","pos":[0,51]}]},{"pos":[17695,17730],"content":"Copies this collection to an array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies this collection to an array.","pos":[0,35]}]},{"pos":[17880,17907],"content":"The array to which to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array to which to copy.","pos":[0,27]}]},{"pos":[17968,18013],"content":"The index location at which to begin copying.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index location at which to begin copying.","pos":[0,45]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationPropertyCollection\n  id: ConfigurationPropertyCollection\n  children:\n  - System.Configuration.ConfigurationPropertyCollection.#ctor\n  - System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationPropertyCollection.Clear\n  - System.Configuration.ConfigurationPropertyCollection.Contains(System.String)\n  - System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)\n  - System.Configuration.ConfigurationPropertyCollection.Count\n  - System.Configuration.ConfigurationPropertyCollection.GetEnumerator\n  - System.Configuration.ConfigurationPropertyCollection.IsSynchronized\n  - System.Configuration.ConfigurationPropertyCollection.Item(System.String)\n  - System.Configuration.ConfigurationPropertyCollection.Remove(System.String)\n  - System.Configuration.ConfigurationPropertyCollection.SyncRoot\n  - System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  langs:\n  - csharp\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n  type: Class\n  summary: Represents a collection of configuration-element properties.\n  remarks: \"The ConfigurationPropertyCollection class represents the collection of the <xref:System.Configuration.ConfigurationProperty> objects that can be attributes or <xref:System.Configuration.ConfigurationElement> objects of a configuration element.  \\n  \\n The <xref:System.Configuration.ConfigurationProperty> class represents an individual configuration setting. It allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element). Additional options allow you to specify whether the attribute is required, is an element key, or represents a default element collection.\"\n  example:\n  - \"The following example shows one possible use of the ConfigurationPropertyCollection. Refer to the example of the related type <xref:System.Configuration.ConfigurationProperty>.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following is an excerpt from the configuration used by the above example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n  <configSections>  \\n    <section name=\\\"CustomSection\\\" type=\\\"Samples.AspNet, ConfigurationProperty, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\\\" allowDefinition=\\\"Everywhere\\\" allowExeDefinition=\\\"MachineToApplication\\\" restartOnExternalChanges=\\\"true\\\" />  \\n    </configSections>  \\n    <CustomSection fileName=\\\"default.txt\\\" alias=\\\"alias.txt\\\" maxUsers=\\\"1000\\\"  \\n      maxIdleTime=\\\"00:05:00\\\" />  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public class ConfigurationPropertyCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.#ctor\n  id: '#ctor'\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: ConfigurationPropertyCollection()\n  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection()\n  fullName: System.Configuration.ConfigurationPropertyCollection.ConfigurationPropertyCollection()\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> class.\n  remarks: You use the ConfigurationPropertyCollection to create a new collection that will contain the <xref:System.Configuration.ConfigurationProperty> objects as they apply to your configuration element.\n  example:\n  - \"The following example shows how to use the ConfigurationPropertyCollection constructor.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public ConfigurationPropertyCollection ();\n    parameters: []\n  overload: System.Configuration.ConfigurationPropertyCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)\n  id: Add(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: Add(ConfigurationProperty)\n  nameWithType: ConfigurationPropertyCollection.Add(ConfigurationProperty)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Add(ConfigurationProperty)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Adds a configuration property to the collection.\n  remarks: By default, the Add method will add the specified <xref:System.Configuration.ConfigurationProperty> object, if it is not already contained within the collection.\n  example:\n  - \"The following example shows how to use the Add method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public void Add (System.Configuration.ConfigurationProperty property);\n    parameters:\n    - id: property\n      type: System.Configuration.ConfigurationProperty\n      description: The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to add.\n  overload: System.Configuration.ConfigurationPropertyCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.Clear\n  id: Clear\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ConfigurationPropertyCollection.Clear()\n  fullName: System.Configuration.ConfigurationPropertyCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Removes all configuration property objects from the collection.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Clear method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following example shows how to call the above method and save the changes to the configuration file.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Configuration.ConfigurationPropertyCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: ConfigurationPropertyCollection.Contains(String)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Specifies whether the configuration property is contained in this collection.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Contains method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public bool Contains (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: An identifier for the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to verify.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Configuration.ConfigurationProperty\"></xref> is contained in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPropertyCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)\n  id: CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: CopyTo(ConfigurationProperty[],Int32)\n  nameWithType: ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)\n  fullName: System.Configuration.ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Copies this ConfigurationPropertyCollection to an array.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the CopyTo method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public void CopyTo (System.Configuration.ConfigurationProperty[] array, int index);\n    parameters:\n    - id: array\n      type: System.Configuration.ConfigurationProperty[]\n      description: Array to which to copy.\n    - id: index\n      type: System.Int32\n      description: Index at which to begin copying.\n  overload: System.Configuration.ConfigurationPropertyCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.Count\n  id: Count\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ConfigurationPropertyCollection.Count\n  fullName: System.Configuration.ConfigurationPropertyCollection.Count\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the number of properties in the collection.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of properties in the collection.\n  overload: System.Configuration.ConfigurationPropertyCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ConfigurationPropertyCollection.GetEnumerator()\n  fullName: System.Configuration.ConfigurationPropertyCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the <xref:System.Collections.IEnumerator> object as it applies to the collection.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the GetEnumerator method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following example shows how to call the above method to enumerate the <xref:System.Configuration.ConfigurationProperty> objects in the collection.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: The <xref:System.Collections.IEnumerator> object as it applies to the collection\n  overload: System.Configuration.ConfigurationPropertyCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: ConfigurationPropertyCollection.IsSynchronized\n  fullName: System.Configuration.ConfigurationPropertyCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets a value indicating whether access to the collection is synchronized (thread safe).\n  remarks: ''\n  example:\n  - \"The following example shows how to get the IsSynchronized property value.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref href=\"System.Configuration.ConfigurationPropertyCollection\"></xref> is synchronized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPropertyCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ConfigurationPropertyCollection.Item(String)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the collection item with the specified name.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyCollection.Count%2A> property.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Configuration.ConfigurationProperty this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to return.\n    return:\n      type: System.Configuration.ConfigurationProperty\n      description: The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> with the specified <code>name</code>.\n  overload: System.Configuration.ConfigurationPropertyCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: ConfigurationPropertyCollection.Remove(String)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Removes a configuration property from the collection.\n  remarks: A return value of `false` indicates that the specified <xref:System.Configuration.ConfigurationProperty> object was not contained within the collection.\n  example:\n  - \"The following example shows how to use the Remove method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \\n  \\n The following example shows how to call the above method and save the changes to the configuration file.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public bool Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The <xref href=\"System.Configuration.ConfigurationProperty\"></xref> to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Configuration.ConfigurationProperty\"></xref> was removed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationPropertyCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: ConfigurationPropertyCollection.SyncRoot\n  fullName: System.Configuration.ConfigurationPropertyCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Gets the object to synchronize access to the collection.\n  remarks: ''\n  example:\n  - \"The following example shows how to get the SyncRoot property value.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: The object to synchronize access to the collection.\n  overload: System.Configuration.ConfigurationPropertyCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Configuration.ConfigurationPropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Copies this collection to an array.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The array to which to copy.\n    - id: index\n      type: System.Int32\n      description: The index location at which to begin copying.\n  overload: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Configuration.ConfigurationPropertyCollection.#ctor\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: ConfigurationPropertyCollection()\n  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection()\n  fullName: System.Configuration.ConfigurationPropertyCollection.ConfigurationPropertyCollection()\n- uid: System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Add(ConfigurationProperty)\n  nameWithType: ConfigurationPropertyCollection.Add(ConfigurationProperty)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Add(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationProperty\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationProperty\n  nameWithType: ConfigurationProperty\n  fullName: System.Configuration.ConfigurationProperty\n- uid: System.Configuration.ConfigurationPropertyCollection.Clear\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ConfigurationPropertyCollection.Clear()\n  fullName: System.Configuration.ConfigurationPropertyCollection.Clear()\n- uid: System.Configuration.ConfigurationPropertyCollection.Contains(System.String)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: ConfigurationPropertyCollection.Contains(String)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: CopyTo(ConfigurationProperty[],Int32)\n  nameWithType: ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)\n  fullName: System.Configuration.ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)\n- uid: System.Configuration.ConfigurationProperty[]\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationProperty\n  nameWithType: ConfigurationProperty\n  fullName: System.Configuration.ConfigurationProperty[]\n  spec.csharp:\n  - uid: System.Configuration.ConfigurationProperty\n    name: ConfigurationProperty\n    nameWithType: ConfigurationProperty\n    fullName: ConfigurationProperty[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Configuration.ConfigurationPropertyCollection.Count\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Count\n  nameWithType: ConfigurationPropertyCollection.Count\n  fullName: System.Configuration.ConfigurationPropertyCollection.Count\n- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ConfigurationPropertyCollection.GetEnumerator()\n  fullName: System.Configuration.ConfigurationPropertyCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ConfigurationPropertyCollection.IsSynchronized\n  fullName: System.Configuration.ConfigurationPropertyCollection.IsSynchronized\n- uid: System.Configuration.ConfigurationPropertyCollection.Item(System.String)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationPropertyCollection.Item(String)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Item(String)\n- uid: System.Configuration.ConfigurationPropertyCollection.Remove(System.String)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: ConfigurationPropertyCollection.Remove(String)\n  fullName: System.Configuration.ConfigurationPropertyCollection.Remove(String)\n- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ConfigurationPropertyCollection.SyncRoot\n  fullName: System.Configuration.ConfigurationPropertyCollection.SyncRoot\n- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Configuration.ConfigurationPropertyCollection.#ctor*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection\n- uid: System.Configuration.ConfigurationPropertyCollection.Add*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Add\n  nameWithType: ConfigurationPropertyCollection.Add\n- uid: System.Configuration.ConfigurationPropertyCollection.Clear*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ConfigurationPropertyCollection.Clear\n- uid: System.Configuration.ConfigurationPropertyCollection.Contains*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ConfigurationPropertyCollection.Contains\n- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ConfigurationPropertyCollection.CopyTo\n- uid: System.Configuration.ConfigurationPropertyCollection.Count*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Count\n  nameWithType: ConfigurationPropertyCollection.Count\n- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ConfigurationPropertyCollection.GetEnumerator\n- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ConfigurationPropertyCollection.IsSynchronized\n- uid: System.Configuration.ConfigurationPropertyCollection.Item*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Item\n  nameWithType: ConfigurationPropertyCollection.Item\n- uid: System.Configuration.ConfigurationPropertyCollection.Remove*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ConfigurationPropertyCollection.Remove\n- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ConfigurationPropertyCollection.SyncRoot\n- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Configuration.ConfigurationPropertyCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo\n"}