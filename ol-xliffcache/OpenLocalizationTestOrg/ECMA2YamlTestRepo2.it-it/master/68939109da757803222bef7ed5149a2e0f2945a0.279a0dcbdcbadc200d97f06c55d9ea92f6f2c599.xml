{"nodes":[{"pos":[1004,1185],"content":"Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows security actions for <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be applied to code using declarative security.","pos":[0,149],"source":"Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[150,181]}]},{"pos":[1198,1655],"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. KeyContainerPermissionAttribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. KeyContainerPermissionAttribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.","pos":[0,455],"nodes":[{"content":"The scope of the declaration that is allowed depends on the &lt;xref:System.Security.Permissions.SecurityAction&gt; value that is used.","pos":[0,129],"source":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used."},{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[136,286]},{"content":"KeyContainerPermissionAttribute is used only for declarative security.","pos":[287,357]},{"content":"For imperative security, use the &lt;xref:System.Security.Permissions.KeyContainerPermission&gt; class.","pos":[358,455],"source":" For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class."}]}]},{"pos":[3056,3212],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified security action.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"></xref> class with the specified security action."},{"pos":[3435,3517],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[4113,4211],"content":"Creates and returns a new <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a new <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>."},{"pos":[4224,4485],"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","pos":[0,259],"nodes":[{"content":"This method should only be called by the security system, never by application code.","pos":[0,84]},{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[91,182]},{"content":"The metadata is created from the permission object that this method returns.","pos":[183,259]}]}]},{"pos":[4665,4773],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to the attribute.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> that corresponds to the attribute."},{"pos":[5321,5364],"content":"Gets or sets the key container permissions.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key container permissions.","pos":[0,43]}]},{"pos":[5377,6097],"content":"> [!CAUTION] >  Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.       The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!CAUTION]</ph> &gt;  Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.","pos":[0,136],"source":"> [!CAUTION] >  Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code."},{"content":"The most powerful of the flags are &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;, and &lt;xref:System.Security.Permissions.KeyContainerPermissionFlags&gt;.","pos":[143,629],"source":"       The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags>."},{"content":"For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[630,717]}]},{"pos":[6304,6510],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,113],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[114,206],"source":" The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref>."}]},{"pos":[7102,7145],"content":"Gets or sets the name of the key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the key container.","pos":[0,43]}]},{"pos":[7157,7277],"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","pos":[0,120]}]},{"pos":[7403,7433],"content":"The name of the key container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key container.","pos":[0,30]}]},{"pos":[7991,8026],"content":"Gets or sets the key specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the key specification.","pos":[0,35]}]},{"pos":[8038,8177],"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","pos":[0,139],"nodes":[{"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used.","pos":[0,63]},{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","pos":[64,139]}]}]},{"pos":[8290,8350],"content":"One of the AT_ values defined in the Wincrypt.h header file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the AT_ values defined in the Wincrypt.h header file.","pos":[0,60]}]},{"pos":[8904,8943],"content":"Gets or sets the name of the key store.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the key store.","pos":[0,39]}]},{"pos":[8955,9049],"content":"Valid values are \"User\", \"Machine\", and \"*\". If `null` is specified, the value is set to \"\\*\".","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Valid values are \"User\", \"Machine\", and \"*\".","pos":[0,44]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the value is set to \"<ph id=\"ph2\">\\*</ph>\".","pos":[45,94],"source":" If `null` is specified, the value is set to \"\\*\"."}]},{"pos":[9167,9213],"content":"The name of the key store. The default is \"*\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the key store. The default is \"*\".","pos":[0,46],"nodes":[{"content":"The name of the key store.","pos":[0,26]},{"content":"The default is \"*\".","pos":[27,46]}]}]},{"pos":[9788,9819],"content":"Gets or sets the provider name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the provider name.","pos":[0,31]}]},{"pos":[9831,9982],"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\".","pos":[0,77]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the enhanced cryptographic provider name is used.","pos":[78,151],"source":" If `null` is specified, the enhanced cryptographic provider name is used."}]},{"pos":[10104,10129],"content":"The name of the provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the provider.","pos":[0,25]}]},{"pos":[10708,10739],"content":"Gets or sets the provider type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the provider type.","pos":[0,31]}]},{"pos":[11690,11752],"content":"One of the PROV_ values defined in the Wincrypt.h header file.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the PROV_ values defined in the Wincrypt.h header file.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute\n  id: KeyContainerPermissionAttribute\n  children:\n  - System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  - System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  - System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  langs:\n  - csharp\n  name: KeyContainerPermissionAttribute\n  nameWithType: KeyContainerPermissionAttribute\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute\n  type: Class\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. KeyContainerPermissionAttribute is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeyContainerPermissionAttribute(SecurityAction)\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"></xref> class with the specified security action.\n  syntax:\n    content: public KeyContainerPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: KeyContainerPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>.\n  remarks: \"This method should only be called by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> that corresponds to the attribute.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermissionAttribute.Flags\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key container permissions.\n  remarks: \"> [!CAUTION]\\n>  Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.  \\n  \\n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.\"\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref>.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerName\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the name of the key container.\n  remarks: Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.\n  syntax:\n    content: public string KeyContainerName { get; set; }\n    return:\n      type: System.String\n      description: The name of the key container.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  id: KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAttribute.KeySpec\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key specification.\n  remarks: If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).\n  syntax:\n    content: public int KeySpec { get; set; }\n    return:\n      type: System.Int32\n      description: One of the AT_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  id: KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAttribute.KeyStore\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the name of the key store.\n  remarks: Valid values are \"User\", \"Machine\", and \"*\". If `null` is specified, the value is set to \"\\*\".\n  syntax:\n    content: public string KeyStore { get; set; }\n    return:\n      type: System.String\n      description: The name of the key store. The default is \"*\".\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  id: ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAttribute.ProviderName\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider name.\n  remarks: An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.\n  syntax:\n    content: public string ProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the provider.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  id: ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAttribute.ProviderType\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider type.\n  remarks: \"If no value is specified, PROV_RSA_FULL (1) is used.  \\n  \\n The following values are defined in the Wincrypt.h header file:  \\n  \\n-   \\\\#define PROV_RSA_FULL 1  \\n  \\n-   \\\\#define PROV_RSA_SIG 2  \\n  \\n-   \\\\#define PROV_DSS 3  \\n  \\n-   \\\\#define PROV_FORTEZZA 4  \\n  \\n-   \\\\#define PROV_MS_EXCHANGE 5  \\n  \\n-   \\\\#define PROV_SSL 6  \\n  \\n-   \\\\#define PROV_RSA_SCHANNEL 12  \\n  \\n-   \\\\#define PROV_DSS_DH 13  \\n  \\n-   \\\\#define PROV_EC_ECDSA_SIG 14  \\n  \\n-   \\\\#define PROV_EC_ECNRA_SIG 15  \\n  \\n-   \\\\#define PROV_EC_ECDSA_FULL 16  \\n  \\n-   \\\\#define PROV_EC_ECNRA_FULL 17  \\n  \\n-   \\\\#define PROV_DH_SCHANNEL 18  \\n  \\n-   \\\\#define PROV_SPYRUS_LYNKS 20  \\n  \\n-   \\\\#define PROV_RNG 21  \\n  \\n-   \\\\#define PROV_INTEL_SEC 22  \\n  \\n-   \\\\#define PROV_REPLACE_OWF 23  \\n  \\n-   \\\\#define PROV_RSA_AES 24\"\n  syntax:\n    content: public int ProviderType { get; set; }\n    return:\n      type: System.Int32\n      description: One of the PROV_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerPermissionAttribute(SecurityAction)\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: KeyContainerPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAttribute.Flags\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerName\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAttribute.KeySpec\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAttribute.KeyStore\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAttribute.ProviderName\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAttribute.ProviderType\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerPermissionAttribute\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: KeyContainerPermissionAttribute.CreatePermission\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAttribute.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerName\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAttribute.KeySpec\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAttribute.KeyStore\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAttribute.ProviderName\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAttribute.ProviderType\n"}