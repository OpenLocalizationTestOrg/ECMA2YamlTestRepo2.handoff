{"nodes":[{"pos":[3683,3745],"content":"Represents data in a geodetic (round earth) coordinate system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents data in a geodetic (round earth) coordinate system.","pos":[0,62]}]},{"pos":[4320,4461],"content":"Gets a nullable double value that indicates the area of this DbGeography value, which may be null if this value does not represent a surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable double value that indicates the area of this DbGeography value, which may be null if this value does not represent a surface.","pos":[0,141]}]},{"pos":[4597,4671],"content":"A nullable double value that indicates the area of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A nullable double value that indicates the area of this DbGeography value.","pos":[0,74]}]},{"pos":[5096,5169],"content":"Generates the well known binary representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the well known binary representation of this DbGeography value.","pos":[0,73]}]},{"pos":[5296,5359],"content":"The well-known binary representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known binary representation of this DbGeography value.","pos":[0,63]}]},{"pos":[5773,5860],"content":"Generates the Geography Markup Language (GML) representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the Geography Markup Language (GML) representation of this DbGeography value.","pos":[0,87]}]},{"pos":[5984,6053],"content":"A string containing the GML representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the GML representation of this DbGeography value.","pos":[0,69]}]},{"pos":[6469,6590],"content":"Generates the well known text representation of this DbGeography value.  Includes only Longitude and Latitude for points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generates the well known text representation of this DbGeography value.  Includes only Longitude and Latitude for points.","pos":[0,121],"nodes":[{"content":"Generates the well known text representation of this DbGeography value.","pos":[0,71]},{"content":"Includes only Longitude and Latitude for points.","pos":[73,121]}]}]},{"pos":[6715,6796],"content":"A string containing the well known text representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string containing the well known text representation of this DbGeography value.","pos":[0,81]}]},{"pos":[7325,7476],"content":"Returns a geography object that represents the union of all points whose distance from a geography instance is less than or equal to a specified value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a geography object that represents the union of all points whose distance from a geography instance is less than or equal to a specified value.","pos":[0,151]}]},{"pos":[7672,7685],"content":"The distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The distance.","pos":[0,13]}]},{"pos":[7761,7819],"content":"A geography object that represents the union of all points","needQuote":true,"needEscape":true,"nodes":[{"content":"A geography object that represents the union of all points","pos":[0,58]}]},{"pos":[8292,8350],"content":"Gets the identifier associated with the coordinate system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the identifier associated with the coordinate system.","pos":[0,58]}]},{"pos":[8469,8522],"content":"The identifier associated with the coordinate system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier associated with the coordinate system.","pos":[0,53]}]},{"pos":[9042,9117],"content":"Gets the default coordinate system id (SRID) for geography values (WGS 84).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the default coordinate system id (SRID) for geography values (WGS 84).","pos":[0,75]}]},{"pos":[9250,9320],"content":"The default coordinate system id (SRID) for geography values (WGS 84).","needQuote":true,"needEscape":true,"nodes":[{"content":"The default coordinate system id (SRID) for geography values (WGS 84).","pos":[0,70]}]},{"pos":[9875,9955],"content":"Computes the difference of this DbGeography value and another DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the difference of this DbGeography value and another DbGeography value.","pos":[0,80]}]},{"pos":[10165,10245],"content":"The geography value for which the difference with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value for which the difference with this value should be computed.","pos":[0,80]}]},{"pos":[10321,10425],"content":"A new DbGeography value representing the difference between this geography value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeography value representing the difference between this geography value and <code>other</code>."},{"pos":[10975,11131],"content":"Gets the dimension of the given <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value or, if the value is a collections, the largest element dimension.","needQuote":true,"needEscape":true,"source":"Gets the dimension of the given <xref href=\"System.Data.Spatial.DbGeography\"></xref> value or, if the value is a collections, the largest element dimension."},{"pos":[11241,11327],"content":"The dimension of the given <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"The dimension of the given <xref href=\"System.Data.Spatial.DbGeography\"></xref> value."},{"pos":[11856,11954],"content":"Determines whether this DbGeography is spatially disjoint from the specified DbGeography argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeography is spatially disjoint from the specified DbGeography argument.","pos":[0,98]}]},{"pos":[12135,12222],"content":"The geography value that should be compared with this geography value for disjointness.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value that should be compared with this geography value for disjointness.","pos":[0,87]}]},{"pos":[12281,12476],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is disjoint from this geography value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is disjoint from this geography value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13122,13227],"content":"Computes the distance between the closest points in this DbGeography value and another DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the distance between the closest points in this DbGeography value and another DbGeography value.","pos":[0,105]}]},{"pos":[13420,13498],"content":"The geography value for which the distance from this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value for which the distance from this value should be computed.","pos":[0,78]}]},{"pos":[13573,13694],"content":"A double value that specifies the distance between the two closest points in this geography value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A double value that specifies the distance between the two closest points in this geography value and <code>other</code>."},{"pos":[14289,14743],"content":"Returns an element of this DbGeography value from a specific position, if it represents a geography collection. &lt;param name=\"index\"&gt;The position within this geography value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geography value at the specified position, if it represents a collection of other geography values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an element of this DbGeography value from a specific position, if it represents a geography collection.","pos":[0,111]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>param name=\"index\"<ph id=\"ph2\">&amp;gt;</ph>The position within this geography value from which the element should be taken.<ph id=\"ph3\">&amp;lt;</ph>/param<ph id=\"ph4\">&amp;gt;</ph><ph id=\"ph5\">&amp;lt;</ph>returns<ph id=\"ph6\">&amp;gt;</ph>The element in this geography value at the specified position, if it represents a collection of other geography values; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph7\">&amp;lt;</ph>/returns<ph id=\"ph8\">&amp;gt;</ph>","pos":[112,454],"source":"&lt;param name=\"index\"&gt;The position within this geography value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geography value at the specified position, if it represents a collection of other geography values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[14905,14915],"content":"The index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index.","pos":[0,10]}]},{"pos":[14991,15052],"content":"An element of this DbGeography value from a specific position","needQuote":true,"needEscape":true,"nodes":[{"content":"An element of this DbGeography value from a specific position","pos":[0,61]}]},{"pos":[15498,15801],"content":"Gets the number of elements in this DbGeography value, if it represents a geography collection. &lt;returns&gt;The number of elements in this geography value, if it represents a collection of other geography values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements in this DbGeography value, if it represents a geography collection.","pos":[0,95]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The number of elements in this geography value, if it represents a collection of other geography values; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[96,303],"source":"&lt;returns&gt;The number of elements in this geography value, if it represents a collection of other geography values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[15941,15990],"content":"The number of elements in this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements in this DbGeography value.","pos":[0,49]}]},{"pos":[16424,16699],"content":"Gets the elevation (Z coordinate) of this DbGeography value, if it represents a point. &lt;returns&gt;The elevation (Z coordinate) value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the elevation (Z coordinate) of this DbGeography value, if it represents a point.","pos":[0,86]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The elevation (Z coordinate) value of this geography value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[87,275],"source":"&lt;returns&gt;The elevation (Z coordinate) value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[16840,16895],"content":"The elevation (Z coordinate) of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The elevation (Z coordinate) of this DbGeography value.","pos":[0,55]}]},{"pos":[17321,17461],"content":"Gets a DbGeography value representing the start point of this value, which may be null if this DbGeography value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a DbGeography value representing the start point of this value, which may be null if this DbGeography value does not represent a curve.","pos":[0,140]}]},{"pos":[17617,17680],"content":"A DbGeography value representing the start point of this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A DbGeography value representing the start point of this value.","pos":[0,63]}]},{"pos":[18167,18287],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known binary value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known binary value."},{"pos":[18481,18566],"content":"A byte array that contains a well known binary representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geography value.","pos":[0,85]}]},{"pos":[18642,18838],"content":"A new DbGeography value as defined by the well known binary value with the default geography coordinate system identifier (SRID)(<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>).","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known binary value with the default geography coordinate system identifier (SRID)(&lt;xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*&gt;).","pos":[0,196],"source":"A new DbGeography value as defined by the well known binary value with the default geography coordinate system identifier (SRID)(<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>)."}]},{"pos":[19499,19659],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[19877,19962],"content":"A byte array that contains a well known binary representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geography value.","pos":[0,85]}]},{"pos":[20036,20118],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[20194,20308],"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,114]}]},{"pos":[21036,21170],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified Geography Markup Language (GML) value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified Geography Markup Language (GML) value."},{"pos":[21361,21456],"content":"A string that contains a Geography Markup Language (GML) representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a Geography Markup Language (GML) representation of the geography value.","pos":[0,95]}]},{"pos":[21532,21715],"content":"A new DbGeography value as defined by the GML value with the default geography coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>).","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the GML value with the default geography coordinate system identifier (SRID) (&lt;xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*&gt;).","pos":[0,183],"source":"A new DbGeography value as defined by the GML value with the default geography coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>)."}]},{"pos":[22358,22532],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID)."},{"pos":[22747,22842],"content":"A string that contains a Geography Markup Language (GML) representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a Geography Markup Language (GML) representation of the geography value.","pos":[0,95]}]},{"pos":[22916,22998],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[23074,23174],"content":"A new DbGeography value as defined by the GML value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the GML value with the specified coordinate system identifier.","pos":[0,100]}]},{"pos":[23904,24022],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known text value.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known text value."},{"pos":[24210,24289],"content":"A string that contains a well known text representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geography value.","pos":[0,79]}]},{"pos":[24365,24560],"content":"A new DbGeography value as defined by the well known text value with the default geography coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>).","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known text value with the default geography coordinate system identifier (SRID) (&lt;xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*&gt;).","pos":[0,195],"source":"A new DbGeography value as defined by the well known text value with the default geography coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>)."}]},{"pos":[25207,25365],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[25577,25656],"content":"A string that contains a well known text representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geography value.","pos":[0,79]}]},{"pos":[25730,25812],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[25888,26000],"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,112]}]},{"pos":[26878,27049],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> collection value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[27324,27409],"content":"A byte array that contains a well known binary representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geography value.","pos":[0,85]}]},{"pos":[27483,27565],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[27641,27755],"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,114]}]},{"pos":[28665,28834],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> collection value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[29103,29182],"content":"A string that contains a well known text representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geography value.","pos":[0,79]}]},{"pos":[29256,29338],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[29414,29526],"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,112]}]},{"pos":[30364,30446],"content":"Computes the intersection of this DbGeography value and another DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the intersection of this DbGeography value and another DbGeography value.","pos":[0,82]}]},{"pos":[30658,30740],"content":"The geography value for which the intersection with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value for which the intersection with this value should be computed.","pos":[0,82]}]},{"pos":[30816,30922],"content":"A new DbGeography value representing the intersection between this geography value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeography value representing the intersection between this geography value and <code>other</code>."},{"pos":[31582,31680],"content":"Determines whether this DbGeography value spatially intersects the specified DbGeography argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeography value spatially intersects the specified DbGeography argument.","pos":[0,98]}]},{"pos":[31863,31950],"content":"The geography value that should be compared with this geography value for intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value that should be compared with this geography value for intersection.","pos":[0,87]}]},{"pos":[32009,32198],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> intersects this geography value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> intersects this geography value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32743,32885],"content":"Gets a nullable Boolean value indicating whether this DbGeography value is closed, which may be null if this value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeography value is closed, which may be null if this value does not represent a curve.","pos":[0,142]}]},{"pos":[33024,33196],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeography value is closed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeography value is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33616,33697],"content":"Gets a nullable Boolean value indicating whether this DbGeography value is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable Boolean value indicating whether this DbGeography value is empty.","pos":[0,81]}]},{"pos":[33808,33979],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this DbGeography value is empty; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeography value is empty; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34403,34668],"content":"Gets the Latitude coordinate of this DbGeography value, if it represents a point. &lt;returns&gt;The Latitude coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Latitude coordinate of this DbGeography value, if it represents a point.","pos":[0,81]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The Latitude coordinate value of this geography value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[82,265],"source":"&lt;returns&gt;The Latitude coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[34808,34858],"content":"The Latitude coordinate of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Latitude coordinate of this DbGeography value.","pos":[0,50]}]},{"pos":[35273,35414],"content":"Gets a nullable double value that indicates the length of this DbGeography value, which may be null if this value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a nullable double value that indicates the length of this DbGeography value, which may be null if this value does not represent a curve.","pos":[0,141]}]},{"pos":[35552,35628],"content":"A nullable double value that indicates the length of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A nullable double value that indicates the length of this DbGeography value.","pos":[0,76]}]},{"pos":[36177,36342],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> line value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> line value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[36572,36657],"content":"A byte array that contains a well known binary representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geography value.","pos":[0,85]}]},{"pos":[36731,36813],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[36889,37003],"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,114]}]},{"pos":[37808,37971],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> line value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> line value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[38195,38274],"content":"A string that contains a well known text representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geography value.","pos":[0,79]}]},{"pos":[38348,38430],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[38506,38618],"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,112]}]},{"pos":[39308,39575],"content":"Gets the Longitude coordinate of this DbGeography value, if it represents a point. &lt;returns&gt;The Longitude coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the Longitude coordinate of this DbGeography value, if it represents a point.","pos":[0,82]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The Longitude coordinate value of this geography value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[83,267],"source":"&lt;returns&gt;The Longitude coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[39716,39767],"content":"The Longitude coordinate of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Longitude coordinate of this DbGeography value.","pos":[0,51]}]},{"pos":[40188,40459],"content":"Gets the M (Measure) coordinate of this DbGeography value, if it represents a point. &lt;returns&gt;The M (Measure) coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the M (Measure) coordinate of this DbGeography value, if it represents a point.","pos":[0,84]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The M (Measure) coordinate value of this geography value, if it represents a point; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[85,271],"source":"&lt;returns&gt;The M (Measure) coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[40598,40651],"content":"The M (Measure) coordinate of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The M (Measure) coordinate of this DbGeography value.","pos":[0,53]}]},{"pos":[41226,41274],"content":"Returns the multiline value from a binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multiline value from a binary value.","pos":[0,48]}]},{"pos":[41519,41547],"content":"The well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known binary value.","pos":[0,28]}]},{"pos":[41621,41654],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[41730,41770],"content":"The multiline value from a binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multiline value from a binary value.","pos":[0,40]}]},{"pos":[42347,42404],"content":"Returns the multiline value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multiline value from a well-known text value.","pos":[0,57]}]},{"pos":[42643,42663],"content":"The well-known text.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known text.","pos":[0,20]}]},{"pos":[42737,42770],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[42846,42895],"content":"The multiline value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multiline value from a well-known text value.","pos":[0,49]}]},{"pos":[43485,43545],"content":"Returns the multipoint value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multipoint value from a well-known binary value.","pos":[0,60]}]},{"pos":[43793,43821],"content":"The well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known binary value.","pos":[0,28]}]},{"pos":[43895,43928],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[44004,44056],"content":"The multipoint value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multipoint value from a well-known binary value.","pos":[0,52]}]},{"pos":[44639,44697],"content":"Returns the multipoint value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multipoint value from a well-known text value.","pos":[0,58]}]},{"pos":[44939,44965],"content":"The well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The well-known text value.","pos":[0,26]}]},{"pos":[45039,45072],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[45148,45198],"content":"The multipoint value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multipoint value from a well-known text value.","pos":[0,50]}]},{"pos":[45799,45862],"content":"Returns the multi polygon value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multi polygon value from a well-known binary value.","pos":[0,63]}]},{"pos":[46116,46158],"content":"The multi polygon well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon well-known binary value.","pos":[0,42]}]},{"pos":[46232,46265],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[46341,46396],"content":"The multi polygon value from a well-known binary value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon value from a well-known binary value.","pos":[0,55]}]},{"pos":[46991,47052],"content":"Returns the multi polygon value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the multi polygon value from a well-known text value.","pos":[0,61]}]},{"pos":[47300,47340],"content":"The multi polygon well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon well-known text value.","pos":[0,40]}]},{"pos":[47414,47447],"content":"The coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The coordinate system identifier.","pos":[0,33]}]},{"pos":[47523,47576],"content":"The multi polygon value from a well-known text value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The multi polygon value from a well-known text value.","pos":[0,53]}]},{"pos":[48055,48503],"content":"Returns an element of this DbGeography value from a specific position, if it represents a linestring or linear ring. &lt;param name=\"index\"&gt;The position within this geography value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geography value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an element of this DbGeography value from a specific position, if it represents a linestring or linear ring.","pos":[0,116]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>param name=\"index\"<ph id=\"ph2\">&amp;gt;</ph>The position within this geography value from which the element should be taken.<ph id=\"ph3\">&amp;lt;</ph>/param<ph id=\"ph4\">&amp;gt;</ph><ph id=\"ph5\">&amp;lt;</ph>returns<ph id=\"ph6\">&amp;gt;</ph>The element in this geography value at the specified position, if it represents a linestring or linear ring; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph7\">&amp;lt;</ph>/returns<ph id=\"ph8\">&amp;gt;</ph>","pos":[117,448],"source":"&lt;param name=\"index\"&gt;The position within this geography value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geography value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[48663,48673],"content":"The index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The index.","pos":[0,10]}]},{"pos":[48749,48810],"content":"An element of this DbGeography value from a specific position","needQuote":true,"needEscape":true,"nodes":[{"content":"An element of this DbGeography value from a specific position","pos":[0,61]}]},{"pos":[49244,49539],"content":"Gets the number of points in this DbGeography value, if it represents a linestring or linear ring. &lt;returns&gt;The number of elements in this geography value, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of points in this DbGeography value, if it represents a linestring or linear ring.","pos":[0,98]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>returns<ph id=\"ph2\">&amp;gt;</ph>The number of elements in this geography value, if it represents a linestring or linear ring; otherwise <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.<ph id=\"ph3\">&amp;lt;</ph>/returns<ph id=\"ph4\">&amp;gt;</ph>","pos":[99,295],"source":"&lt;returns&gt;The number of elements in this geography value, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;"}]},{"pos":[49677,49724],"content":"The number of points in this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of points in this DbGeography value.","pos":[0,47]}]},{"pos":[50282,50448],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> point value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> point value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[50681,50766],"content":"A byte array that contains a well known binary representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geography value.","pos":[0,85]}]},{"pos":[50840,50922],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[50998,51112],"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,114]}]},{"pos":[51924,52088],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> point value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> point value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[52315,52394],"content":"A string that contains a well known text representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geography value.","pos":[0,79]}]},{"pos":[52468,52550],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[52626,52738],"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,112]}]},{"pos":[53566,53734],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> polygon value based on the specified well known binary value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> polygon value based on the specified well known binary value and coordinate system identifier (SRID)."},{"pos":[53973,54058],"content":"A byte array that contains a well known binary representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte array that contains a well known binary representation of the geography value.","pos":[0,85]}]},{"pos":[54132,54214],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[54290,54404],"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.","pos":[0,114]}]},{"pos":[55230,55396],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Data.Spatial.DbGeography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> polygon value based on the specified well known text value and coordinate system identifier (SRID).","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> polygon value based on the specified well known text value and coordinate system identifier (SRID)."},{"pos":[55629,55708],"content":"A string that contains a well known text representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains a well known text representation of the geography value.","pos":[0,79]}]},{"pos":[55782,55864],"content":"The identifier of the coordinate system that the new DbGeography value should use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier of the coordinate system that the new DbGeography value should use.","pos":[0,82]}]},{"pos":[55940,56052],"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.","pos":[0,112]}]},{"pos":[56768,56880],"content":"Gets a representation of this DbGeography value that is specific to the underlying provider that constructed it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a representation of this DbGeography value that is specific to the underlying provider that constructed it.","pos":[0,112]}]},{"pos":[56998,57041],"content":"A representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A representation of this DbGeography value.","pos":[0,43]}]},{"pos":[57599,57692],"content":"Determines whether this DbGeography is spatially equal to the specified DbGeography argument.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether this DbGeography is spatially equal to the specified DbGeography argument.","pos":[0,93]}]},{"pos":[57878,57961],"content":"The geography value that should be compared with this geography value for equality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value that should be compared with this geography value for equality.","pos":[0,83]}]},{"pos":[58020,58220],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> is spatially equal to this geography value; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is spatially equal to this geography value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[58803,58849],"content":"Gets the spatial type name of the DBGeography.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the spatial type name of the DBGeography.","pos":[0,46]}]},{"pos":[58969,59010],"content":"The spatial type name of the DBGeography.","needQuote":true,"needEscape":true,"nodes":[{"content":"The spatial type name of the DBGeography.","pos":[0,41]}]},{"pos":[59452,59592],"content":"Gets a DbGeography value representing the start point of this value, which may be null if this DbGeography value does not represent a curve.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a DbGeography value representing the start point of this value, which may be null if this DbGeography value does not represent a curve.","pos":[0,140]}]},{"pos":[59750,59813],"content":"A DbGeography value representing the start point of this value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A DbGeography value representing the start point of this value.","pos":[0,63]}]},{"pos":[60398,60488],"content":"Computes the symmetric difference of this DbGeography value and another DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the symmetric difference of this DbGeography value and another DbGeography value.","pos":[0,90]}]},{"pos":[60707,60797],"content":"The geography value for which the symmetric difference with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value for which the symmetric difference with this value should be computed.","pos":[0,90]}]},{"pos":[60873,60987],"content":"A new DbGeography value representing the symmetric difference between this geography value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeography value representing the symmetric difference between this geography value and <code>other</code>."},{"pos":[61545,61600],"content":"Returns a string representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representation of the geography value.","pos":[0,55]}]},{"pos":[61736,61783],"content":"A string representation of the geography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representation of the geography value.","pos":[0,47]}]},{"pos":[62296,62371],"content":"Computes the union of this DbGeography value and another DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Computes the union of this DbGeography value and another DbGeography value.","pos":[0,75]}]},{"pos":[62576,62651],"content":"The geography value for which the union with this value should be computed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The geography value for which the union with this value should be computed.","pos":[0,75]}]},{"pos":[62727,62826],"content":"A new DbGeography value representing the union between this geography value and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new DbGeography value representing the union between this geography value and <code>other</code>."},{"pos":[63396,63490],"content":"Gets or sets a data contract serializable well known representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a data contract serializable well known representation of this DbGeography value.","pos":[0,94]}]},{"pos":[63685,63766],"content":"A data contract serializable well known representation of this DbGeography value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data contract serializable well known representation of this DbGeography value.","pos":[0,81]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Spatial.DbGeography\n  id: DbGeography\n  children:\n  - System.Data.Spatial.DbGeography.Area\n  - System.Data.Spatial.DbGeography.AsBinary\n  - System.Data.Spatial.DbGeography.AsGml\n  - System.Data.Spatial.DbGeography.AsText\n  - System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})\n  - System.Data.Spatial.DbGeography.CoordinateSystemId\n  - System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  - System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.Dimension\n  - System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.ElementAt(System.Int32)\n  - System.Data.Spatial.DbGeography.ElementCount\n  - System.Data.Spatial.DbGeography.Elevation\n  - System.Data.Spatial.DbGeography.EndPoint\n  - System.Data.Spatial.DbGeography.FromBinary(System.Byte[])\n  - System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.FromGml(System.String)\n  - System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.FromText(System.String)\n  - System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.IsClosed\n  - System.Data.Spatial.DbGeography.IsEmpty\n  - System.Data.Spatial.DbGeography.Latitude\n  - System.Data.Spatial.DbGeography.Length\n  - System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.Longitude\n  - System.Data.Spatial.DbGeography.Measure\n  - System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.PointAt(System.Int32)\n  - System.Data.Spatial.DbGeography.PointCount\n  - System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)\n  - System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)\n  - System.Data.Spatial.DbGeography.ProviderValue\n  - System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.SpatialTypeName\n  - System.Data.Spatial.DbGeography.StartPoint\n  - System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.ToString\n  - System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)\n  - System.Data.Spatial.DbGeography.WellKnownValue\n  langs:\n  - csharp\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n  type: Class\n  summary: Represents data in a geodetic (round earth) coordinate system.\n  syntax:\n    content: >-\n      [System.ComponentModel.DataAnnotations.BindableType]\n\n      [System.Runtime.Serialization.DataContract]\n\n      public class DbGeography\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Area\n  id: Area\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Area\n  nameWithType: DbGeography.Area\n  fullName: System.Data.Spatial.DbGeography.Area\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable double value that indicates the area of this DbGeography value, which may be null if this value does not represent a surface.\n  syntax:\n    content: public Nullable<double> Area { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: A nullable double value that indicates the area of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.Area*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.AsBinary\n  id: AsBinary\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: AsBinary()\n  nameWithType: DbGeography.AsBinary()\n  fullName: System.Data.Spatial.DbGeography.AsBinary()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Generates the well known binary representation of this DbGeography value.\n  syntax:\n    content: public byte[] AsBinary ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The well-known binary representation of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.AsBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.AsGml\n  id: AsGml\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: AsGml()\n  nameWithType: DbGeography.AsGml()\n  fullName: System.Data.Spatial.DbGeography.AsGml()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Generates the Geography Markup Language (GML) representation of this DbGeography value.\n  syntax:\n    content: public string AsGml ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the GML representation of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.AsGml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.AsText\n  id: AsText\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: AsText()\n  nameWithType: DbGeography.AsText()\n  fullName: System.Data.Spatial.DbGeography.AsText()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Generates the well known text representation of this DbGeography value.  Includes only Longitude and Latitude for points.\n  syntax:\n    content: public string AsText ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the well known text representation of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.AsText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})\n  id: Buffer(System.Nullable{System.Double})\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Buffer(Nullable<Double>)\n  nameWithType: DbGeography.Buffer(Nullable<Double>)\n  fullName: System.Data.Spatial.DbGeography.Buffer(Nullable<Double>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns a geography object that represents the union of all points whose distance from a geography instance is less than or equal to a specified value.\n  syntax:\n    content: public System.Data.Spatial.DbGeography Buffer (Nullable<double> distance);\n    parameters:\n    - id: distance\n      type: System.Nullable{System.Double}\n      description: The distance.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A geography object that represents the union of all points\n  overload: System.Data.Spatial.DbGeography.Buffer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.CoordinateSystemId\n  id: CoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: CoordinateSystemId\n  nameWithType: DbGeography.CoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.CoordinateSystemId\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the identifier associated with the coordinate system.\n  syntax:\n    content: public int CoordinateSystemId { get; }\n    return:\n      type: System.Int32\n      description: The identifier associated with the coordinate system.\n  overload: System.Data.Spatial.DbGeography.CoordinateSystemId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  id: DefaultCoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeography.DefaultCoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the default coordinate system id (SRID) for geography values (WGS 84).\n  syntax:\n    content: public static int DefaultCoordinateSystemId { get; }\n    return:\n      type: System.Int32\n      description: The default coordinate system id (SRID) for geography values (WGS 84).\n  overload: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)\n  id: Difference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Difference(DbGeography)\n  nameWithType: DbGeography.Difference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Difference(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the difference of this DbGeography value and another DbGeography value.\n  syntax:\n    content: public System.Data.Spatial.DbGeography Difference (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value for which the difference with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value representing the difference between this geography value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeography.Difference*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Dimension\n  id: Dimension\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Dimension\n  nameWithType: DbGeography.Dimension\n  fullName: System.Data.Spatial.DbGeography.Dimension\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the dimension of the given <xref href=\"System.Data.Spatial.DbGeography\"></xref> value or, if the value is a collections, the largest element dimension.\n  syntax:\n    content: public int Dimension { get; }\n    return:\n      type: System.Int32\n      description: The dimension of the given <xref href=\"System.Data.Spatial.DbGeography\"></xref> value.\n  overload: System.Data.Spatial.DbGeography.Dimension*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)\n  id: Disjoint(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Disjoint(DbGeography)\n  nameWithType: DbGeography.Disjoint(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Disjoint(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeography is spatially disjoint from the specified DbGeography argument.\n  syntax:\n    content: public bool Disjoint (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value that should be compared with this geography value for disjointness.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is disjoint from this geography value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeography.Disjoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)\n  id: Distance(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Distance(DbGeography)\n  nameWithType: DbGeography.Distance(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Distance(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the distance between the closest points in this DbGeography value and another DbGeography value.\n  syntax:\n    content: public Nullable<double> Distance (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value for which the distance from this value should be computed.\n    return:\n      type: System.Nullable{System.Double}\n      description: A double value that specifies the distance between the two closest points in this geography value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeography.Distance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.ElementAt(System.Int32)\n  id: ElementAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ElementAt(Int32)\n  nameWithType: DbGeography.ElementAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.ElementAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns an element of this DbGeography value from a specific position, if it represents a geography collection. &lt;param name=\"index\"&gt;The position within this geography value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geography value at the specified position, if it represents a collection of other geography values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public System.Data.Spatial.DbGeography ElementAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: An element of this DbGeography value from a specific position\n  overload: System.Data.Spatial.DbGeography.ElementAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.ElementCount\n  id: ElementCount\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ElementCount\n  nameWithType: DbGeography.ElementCount\n  fullName: System.Data.Spatial.DbGeography.ElementCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the number of elements in this DbGeography value, if it represents a geography collection. &lt;returns&gt;The number of elements in this geography value, if it represents a collection of other geography values; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<int> ElementCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The number of elements in this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.ElementCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Elevation\n  id: Elevation\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Elevation\n  nameWithType: DbGeography.Elevation\n  fullName: System.Data.Spatial.DbGeography.Elevation\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the elevation (Z coordinate) of this DbGeography value, if it represents a point. &lt;returns&gt;The elevation (Z coordinate) value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> Elevation { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The elevation (Z coordinate) of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.Elevation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.EndPoint\n  id: EndPoint\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: EndPoint\n  nameWithType: DbGeography.EndPoint\n  fullName: System.Data.Spatial.DbGeography.EndPoint\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a DbGeography value representing the start point of this value, which may be null if this DbGeography value does not represent a curve.\n  syntax:\n    content: public System.Data.Spatial.DbGeography EndPoint { get; }\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A DbGeography value representing the start point of this value.\n  overload: System.Data.Spatial.DbGeography.EndPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[])\n  id: FromBinary(System.Byte[])\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromBinary(Byte[])\n  nameWithType: DbGeography.FromBinary(Byte[])\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromBinary (byte[] wellKnownBinary);\n    parameters:\n    - id: wellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geography value.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known binary value with the default geography coordinate system identifier (SRID)(<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>).\n  overload: System.Data.Spatial.DbGeography.FromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownBinary</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)\n  id: FromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromBinary(Byte[],Int32)\n  nameWithType: DbGeography.FromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromBinary (byte[] wellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: wellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.FromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String)\n  id: FromGml(System.String)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromGml(String)\n  nameWithType: DbGeography.FromGml(String)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified Geography Markup Language (GML) value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromGml (string geographyMarkup);\n    parameters:\n    - id: geographyMarkup\n      type: System.String\n      description: A string that contains a Geography Markup Language (GML) representation of the geography value.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the GML value with the default geography coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>).\n  overload: System.Data.Spatial.DbGeography.FromGml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geographyMarkup</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)\n  id: FromGml(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromGml(String,Int32)\n  nameWithType: DbGeography.FromGml(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromGml (string geographyMarkup, int coordinateSystemId);\n    parameters:\n    - id: geographyMarkup\n      type: System.String\n      description: A string that contains a Geography Markup Language (GML) representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the GML value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.FromGml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geographyMarkup</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.FromText(System.String)\n  id: FromText(System.String)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromText(String)\n  nameWithType: DbGeography.FromText(String)\n  fullName: System.Data.Spatial.DbGeography.FromText(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromText (string wellKnownText);\n    parameters:\n    - id: wellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geography value.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known text value with the default geography coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*>).\n  overload: System.Data.Spatial.DbGeography.FromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownText</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)\n  id: FromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: FromText(String,Int32)\n  nameWithType: DbGeography.FromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography FromText (string wellKnownText, int coordinateSystemId);\n    parameters:\n    - id: wellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.FromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>wellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  id: GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: GeographyCollectionFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> collection value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography GeographyCollectionFromBinary (byte[] geographyCollectionWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: geographyCollectionWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geographyCollectionWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)\n  id: GeographyCollectionFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: GeographyCollectionFromText(String,Int32)\n  nameWithType: DbGeography.GeographyCollectionFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> collection value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography GeographyCollectionFromText (string geographyCollectionWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: geographyCollectionWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.GeographyCollectionFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>geographyCollectionWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)\n  id: Intersection(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Intersection(DbGeography)\n  nameWithType: DbGeography.Intersection(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersection(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the intersection of this DbGeography value and another DbGeography value.\n  syntax:\n    content: public System.Data.Spatial.DbGeography Intersection (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value for which the intersection with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value representing the intersection between this geography value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeography.Intersection*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)\n  id: Intersects(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Intersects(DbGeography)\n  nameWithType: DbGeography.Intersects(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersects(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeography value spatially intersects the specified DbGeography argument.\n  syntax:\n    content: public bool Intersects (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value that should be compared with this geography value for intersection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> intersects this geography value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeography.Intersects*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.IsClosed\n  id: IsClosed\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: IsClosed\n  nameWithType: DbGeography.IsClosed\n  fullName: System.Data.Spatial.DbGeography.IsClosed\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeography value is closed, which may be null if this value does not represent a curve.\n  syntax:\n    content: public Nullable<bool> IsClosed { get; }\n    return:\n      type: System.Nullable{System.Boolean}\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeography value is closed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeography.IsClosed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.IsEmpty\n  id: IsEmpty\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: DbGeography.IsEmpty\n  fullName: System.Data.Spatial.DbGeography.IsEmpty\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable Boolean value indicating whether this DbGeography value is empty.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if this DbGeography value is empty; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeography.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Latitude\n  id: Latitude\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Latitude\n  nameWithType: DbGeography.Latitude\n  fullName: System.Data.Spatial.DbGeography.Latitude\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the Latitude coordinate of this DbGeography value, if it represents a point. &lt;returns&gt;The Latitude coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> Latitude { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The Latitude coordinate of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.Latitude*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Length\n  id: Length\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Length\n  nameWithType: DbGeography.Length\n  fullName: System.Data.Spatial.DbGeography.Length\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a nullable double value that indicates the length of this DbGeography value, which may be null if this value does not represent a curve.\n  syntax:\n    content: public Nullable<double> Length { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: A nullable double value that indicates the length of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)\n  id: LineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: LineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.LineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> line value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography LineFromBinary (byte[] lineWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: lineWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.LineFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>lineWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)\n  id: LineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: LineFromText(String,Int32)\n  nameWithType: DbGeography.LineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> line value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography LineFromText (string lineWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: lineWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.LineFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>lineWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Longitude\n  id: Longitude\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Longitude\n  nameWithType: DbGeography.Longitude\n  fullName: System.Data.Spatial.DbGeography.Longitude\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the Longitude coordinate of this DbGeography value, if it represents a point. &lt;returns&gt;The Longitude coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> Longitude { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The Longitude coordinate of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.Longitude*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Measure\n  id: Measure\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Measure\n  nameWithType: DbGeography.Measure\n  fullName: System.Data.Spatial.DbGeography.Measure\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the M (Measure) coordinate of this DbGeography value, if it represents a point. &lt;returns&gt;The M (Measure) coordinate value of this geography value, if it represents a point; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<double> Measure { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The M (Measure) coordinate of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.Measure*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)\n  id: MultiLineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiLineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiLineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multiline value from a binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiLineFromBinary (byte[] multiLineWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiLineWellKnownBinary\n      type: System.Byte[]\n      description: The well-known binary value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The multiline value from a binary value.\n  overload: System.Data.Spatial.DbGeography.MultiLineFromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)\n  id: MultiLineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiLineFromText(String,Int32)\n  nameWithType: DbGeography.MultiLineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multiline value from a well-known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiLineFromText (string multiLineWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiLineWellKnownText\n      type: System.String\n      description: The well-known text.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The multiline value from a well-known text value.\n  overload: System.Data.Spatial.DbGeography.MultiLineFromText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)\n  id: MultiPointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multipoint value from a well-known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPointFromBinary (byte[] multiPointWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiPointWellKnownBinary\n      type: System.Byte[]\n      description: The well-known binary value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The multipoint value from a well-known binary value.\n  overload: System.Data.Spatial.DbGeography.MultiPointFromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)\n  id: MultiPointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPointFromText(String,Int32)\n  nameWithType: DbGeography.MultiPointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multipoint value from a well-known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPointFromText (string multiPointWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiPointWellKnownText\n      type: System.String\n      description: The well-known text value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The multipoint value from a well-known text value.\n  overload: System.Data.Spatial.DbGeography.MultiPointFromText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  id: MultiPolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multi polygon value from a well-known binary value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPolygonFromBinary (byte[] multiPolygonWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: multiPolygonWellKnownBinary\n      type: System.Byte[]\n      description: The multi polygon well-known binary value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The multi polygon value from a well-known binary value.\n  overload: System.Data.Spatial.DbGeography.MultiPolygonFromBinary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)\n  id: MultiPolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: MultiPolygonFromText(String,Int32)\n  nameWithType: DbGeography.MultiPolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns the multi polygon value from a well-known text value.\n  syntax:\n    content: public static System.Data.Spatial.DbGeography MultiPolygonFromText (string multiPolygonWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: multiPolygonWellKnownText\n      type: System.String\n      description: The multi polygon well-known text value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The coordinate system identifier.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: The multi polygon value from a well-known text value.\n  overload: System.Data.Spatial.DbGeography.MultiPolygonFromText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.PointAt(System.Int32)\n  id: PointAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointAt(Int32)\n  nameWithType: DbGeography.PointAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.PointAt(Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns an element of this DbGeography value from a specific position, if it represents a linestring or linear ring. &lt;param name=\"index\"&gt;The position within this geography value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geography value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public System.Data.Spatial.DbGeography PointAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: An element of this DbGeography value from a specific position\n  overload: System.Data.Spatial.DbGeography.PointAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.PointCount\n  id: PointCount\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointCount\n  nameWithType: DbGeography.PointCount\n  fullName: System.Data.Spatial.DbGeography.PointCount\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the number of points in this DbGeography value, if it represents a linestring or linear ring. &lt;returns&gt;The number of elements in this geography value, if it represents a linestring or linear ring; otherwise <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.&lt;/returns&gt;\n  syntax:\n    content: public Nullable<int> PointCount { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: The number of points in this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.PointCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)\n  id: PointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> point value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PointFromBinary (byte[] pointWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: pointWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.PointFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pointWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)\n  id: PointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PointFromText(String,Int32)\n  nameWithType: DbGeography.PointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> point value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PointFromText (string pointWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: pointWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.PointFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>pointWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)\n  id: PolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromBinary(Byte[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> polygon value based on the specified well known binary value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PolygonFromBinary (byte[] polygonWellKnownBinary, int coordinateSystemId);\n    parameters:\n    - id: polygonWellKnownBinary\n      type: System.Byte[]\n      description: A byte array that contains a well known binary representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known binary value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.PolygonFromBinary*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>polygonWellKnownBinary</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)\n  id: PolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: PolygonFromText(String,Int32)\n  nameWithType: DbGeography.PolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromText(String,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Creates a new <xref href=\"System.Data.Spatial.DbGeography\"></xref> polygon value based on the specified well known text value and coordinate system identifier (SRID).\n  syntax:\n    content: public static System.Data.Spatial.DbGeography PolygonFromText (string polygonWellKnownText, int coordinateSystemId);\n    parameters:\n    - id: polygonWellKnownText\n      type: System.String\n      description: A string that contains a well known text representation of the geography value.\n    - id: coordinateSystemId\n      type: System.Int32\n      description: The identifier of the coordinate system that the new DbGeography value should use.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value as defined by the well known text value with the specified coordinate system identifier.\n  overload: System.Data.Spatial.DbGeography.PolygonFromText*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>polygonWellKnownText</code>\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>coordinateSystemId</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.ProviderValue\n  id: ProviderValue\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ProviderValue\n  nameWithType: DbGeography.ProviderValue\n  fullName: System.Data.Spatial.DbGeography.ProviderValue\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a representation of this DbGeography value that is specific to the underlying provider that constructed it.\n  syntax:\n    content: public object ProviderValue { get; }\n    return:\n      type: System.Object\n      description: A representation of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.ProviderValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)\n  id: SpatialEquals(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: SpatialEquals(DbGeography)\n  nameWithType: DbGeography.SpatialEquals(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SpatialEquals(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Determines whether this DbGeography is spatially equal to the specified DbGeography argument.\n  syntax:\n    content: public bool SpatialEquals (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value that should be compared with this geography value for equality.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>other</code> is spatially equal to this geography value; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Spatial.DbGeography.SpatialEquals*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.SpatialTypeName\n  id: SpatialTypeName\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: SpatialTypeName\n  nameWithType: DbGeography.SpatialTypeName\n  fullName: System.Data.Spatial.DbGeography.SpatialTypeName\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets the spatial type name of the DBGeography.\n  syntax:\n    content: public string SpatialTypeName { get; }\n    return:\n      type: System.String\n      description: The spatial type name of the DBGeography.\n  overload: System.Data.Spatial.DbGeography.SpatialTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.StartPoint\n  id: StartPoint\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: StartPoint\n  nameWithType: DbGeography.StartPoint\n  fullName: System.Data.Spatial.DbGeography.StartPoint\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets a DbGeography value representing the start point of this value, which may be null if this DbGeography value does not represent a curve.\n  syntax:\n    content: public System.Data.Spatial.DbGeography StartPoint { get; }\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A DbGeography value representing the start point of this value.\n  overload: System.Data.Spatial.DbGeography.StartPoint*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)\n  id: SymmetricDifference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: SymmetricDifference(DbGeography)\n  nameWithType: DbGeography.SymmetricDifference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SymmetricDifference(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the symmetric difference of this DbGeography value and another DbGeography value.\n  syntax:\n    content: public System.Data.Spatial.DbGeography SymmetricDifference (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value for which the symmetric difference with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value representing the symmetric difference between this geography value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeography.SymmetricDifference*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.ToString\n  id: ToString\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DbGeography.ToString()\n  fullName: System.Data.Spatial.DbGeography.ToString()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Returns a string representation of the geography value.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the geography value.\n  overload: System.Data.Spatial.DbGeography.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)\n  id: Union(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: Union(DbGeography)\n  nameWithType: DbGeography.Union(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Union(DbGeography)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Computes the union of this DbGeography value and another DbGeography value.\n  syntax:\n    content: public System.Data.Spatial.DbGeography Union (System.Data.Spatial.DbGeography other);\n    parameters:\n    - id: other\n      type: System.Data.Spatial.DbGeography\n      description: The geography value for which the union with this value should be computed.\n    return:\n      type: System.Data.Spatial.DbGeography\n      description: A new DbGeography value representing the union between this geography value and <code>other</code>.\n  overload: System.Data.Spatial.DbGeography.Union*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>other</code>\n  platform:\n  - net462\n- uid: System.Data.Spatial.DbGeography.WellKnownValue\n  id: WellKnownValue\n  parent: System.Data.Spatial.DbGeography\n  langs:\n  - csharp\n  name: WellKnownValue\n  nameWithType: DbGeography.WellKnownValue\n  fullName: System.Data.Spatial.DbGeography.WellKnownValue\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Spatial\n  summary: Gets or sets a data contract serializable well known representation of this DbGeography value.\n  syntax:\n    content: public System.Data.Spatial.DbGeographyWellKnownValue WellKnownValue { get; set; }\n    return:\n      type: System.Data.Spatial.DbGeographyWellKnownValue\n      description: A data contract serializable well known representation of this DbGeography value.\n  overload: System.Data.Spatial.DbGeography.WellKnownValue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Spatial.DbGeography.Area\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Area\n  nameWithType: DbGeography.Area\n  fullName: System.Data.Spatial.DbGeography.Area\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: true\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Double>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Spatial.DbGeography.AsBinary\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsBinary()\n  nameWithType: DbGeography.AsBinary()\n  fullName: System.Data.Spatial.DbGeography.AsBinary()\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Spatial.DbGeography.AsGml\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsGml()\n  nameWithType: DbGeography.AsGml()\n  fullName: System.Data.Spatial.DbGeography.AsGml()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Spatial.DbGeography.AsText\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsText()\n  nameWithType: DbGeography.AsText()\n  fullName: System.Data.Spatial.DbGeography.AsText()\n- uid: System.Data.Spatial.DbGeography.Buffer(System.Nullable{System.Double})\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Buffer(Nullable<Double>)\n  nameWithType: DbGeography.Buffer(Nullable<Double>)\n  fullName: System.Data.Spatial.DbGeography.Buffer(Nullable<Double>)\n- uid: System.Data.Spatial.DbGeography\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeography\n  nameWithType: DbGeography\n  fullName: System.Data.Spatial.DbGeography\n- uid: System.Data.Spatial.DbGeography.CoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: CoordinateSystemId\n  nameWithType: DbGeography.CoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.CoordinateSystemId\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeography.DefaultCoordinateSystemId\n  fullName: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId\n- uid: System.Data.Spatial.DbGeography.Difference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Difference(DbGeography)\n  nameWithType: DbGeography.Difference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Difference(DbGeography)\n- uid: System.Data.Spatial.DbGeography.Dimension\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Dimension\n  nameWithType: DbGeography.Dimension\n  fullName: System.Data.Spatial.DbGeography.Dimension\n- uid: System.Data.Spatial.DbGeography.Disjoint(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Disjoint(DbGeography)\n  nameWithType: DbGeography.Disjoint(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Disjoint(DbGeography)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Spatial.DbGeography.Distance(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Distance(DbGeography)\n  nameWithType: DbGeography.Distance(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Distance(DbGeography)\n- uid: System.Data.Spatial.DbGeography.ElementAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ElementAt(Int32)\n  nameWithType: DbGeography.ElementAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.ElementAt(Int32)\n- uid: System.Data.Spatial.DbGeography.ElementCount\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ElementCount\n  nameWithType: DbGeography.ElementCount\n  fullName: System.Data.Spatial.DbGeography.ElementCount\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Spatial.DbGeography.Elevation\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Elevation\n  nameWithType: DbGeography.Elevation\n  fullName: System.Data.Spatial.DbGeography.Elevation\n- uid: System.Data.Spatial.DbGeography.EndPoint\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: EndPoint\n  nameWithType: DbGeography.EndPoint\n  fullName: System.Data.Spatial.DbGeography.EndPoint\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[])\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromBinary(Byte[])\n  nameWithType: DbGeography.FromBinary(Byte[])\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[])\n- uid: System.Data.Spatial.DbGeography.FromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromBinary(Byte[],Int32)\n  nameWithType: DbGeography.FromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.FromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromGml(String)\n  nameWithType: DbGeography.FromGml(String)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String)\n- uid: System.Data.Spatial.DbGeography.FromGml(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromGml(String,Int32)\n  nameWithType: DbGeography.FromGml(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromGml(String,Int32)\n- uid: System.Data.Spatial.DbGeography.FromText(System.String)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromText(String)\n  nameWithType: DbGeography.FromText(String)\n  fullName: System.Data.Spatial.DbGeography.FromText(String)\n- uid: System.Data.Spatial.DbGeography.FromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromText(String,Int32)\n  nameWithType: DbGeography.FromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.FromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: GeographyCollectionFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: GeographyCollectionFromText(String,Int32)\n  nameWithType: DbGeography.GeographyCollectionFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.GeographyCollectionFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.Intersection(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Intersection(DbGeography)\n  nameWithType: DbGeography.Intersection(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersection(DbGeography)\n- uid: System.Data.Spatial.DbGeography.Intersects(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Intersects(DbGeography)\n  nameWithType: DbGeography.Intersects(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Intersects(DbGeography)\n- uid: System.Data.Spatial.DbGeography.IsClosed\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbGeography.IsClosed\n  fullName: System.Data.Spatial.DbGeography.IsClosed\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: true\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Spatial.DbGeography.IsEmpty\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbGeography.IsEmpty\n  fullName: System.Data.Spatial.DbGeography.IsEmpty\n- uid: System.Data.Spatial.DbGeography.Latitude\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Latitude\n  nameWithType: DbGeography.Latitude\n  fullName: System.Data.Spatial.DbGeography.Latitude\n- uid: System.Data.Spatial.DbGeography.Length\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Length\n  nameWithType: DbGeography.Length\n  fullName: System.Data.Spatial.DbGeography.Length\n- uid: System.Data.Spatial.DbGeography.LineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: LineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.LineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.LineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: LineFromText(String,Int32)\n  nameWithType: DbGeography.LineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.LineFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.Longitude\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Longitude\n  nameWithType: DbGeography.Longitude\n  fullName: System.Data.Spatial.DbGeography.Longitude\n- uid: System.Data.Spatial.DbGeography.Measure\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Measure\n  nameWithType: DbGeography.Measure\n  fullName: System.Data.Spatial.DbGeography.Measure\n- uid: System.Data.Spatial.DbGeography.MultiLineFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiLineFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiLineFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.MultiLineFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiLineFromText(String,Int32)\n  nameWithType: DbGeography.MultiLineFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiLineFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.MultiPointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.MultiPointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPointFromText(String,Int32)\n  nameWithType: DbGeography.MultiPointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPointFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPolygonFromText(String,Int32)\n  nameWithType: DbGeography.MultiPolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.MultiPolygonFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.PointAt(System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointAt(Int32)\n  nameWithType: DbGeography.PointAt(Int32)\n  fullName: System.Data.Spatial.DbGeography.PointAt(Int32)\n- uid: System.Data.Spatial.DbGeography.PointCount\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointCount\n  nameWithType: DbGeography.PointCount\n  fullName: System.Data.Spatial.DbGeography.PointCount\n- uid: System.Data.Spatial.DbGeography.PointFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PointFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.PointFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointFromText(String,Int32)\n  nameWithType: DbGeography.PointFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PointFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.PolygonFromBinary(System.Byte[],System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PolygonFromBinary(Byte[],Int32)\n  nameWithType: DbGeography.PolygonFromBinary(Byte[],Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromBinary(Byte[],Int32)\n- uid: System.Data.Spatial.DbGeography.PolygonFromText(System.String,System.Int32)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PolygonFromText(String,Int32)\n  nameWithType: DbGeography.PolygonFromText(String,Int32)\n  fullName: System.Data.Spatial.DbGeography.PolygonFromText(String,Int32)\n- uid: System.Data.Spatial.DbGeography.ProviderValue\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ProviderValue\n  nameWithType: DbGeography.ProviderValue\n  fullName: System.Data.Spatial.DbGeography.ProviderValue\n- uid: System.Data.Spatial.DbGeography.SpatialEquals(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SpatialEquals(DbGeography)\n  nameWithType: DbGeography.SpatialEquals(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SpatialEquals(DbGeography)\n- uid: System.Data.Spatial.DbGeography.SpatialTypeName\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SpatialTypeName\n  nameWithType: DbGeography.SpatialTypeName\n  fullName: System.Data.Spatial.DbGeography.SpatialTypeName\n- uid: System.Data.Spatial.DbGeography.StartPoint\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: StartPoint\n  nameWithType: DbGeography.StartPoint\n  fullName: System.Data.Spatial.DbGeography.StartPoint\n- uid: System.Data.Spatial.DbGeography.SymmetricDifference(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SymmetricDifference(DbGeography)\n  nameWithType: DbGeography.SymmetricDifference(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.SymmetricDifference(DbGeography)\n- uid: System.Data.Spatial.DbGeography.ToString\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ToString()\n  nameWithType: DbGeography.ToString()\n  fullName: System.Data.Spatial.DbGeography.ToString()\n- uid: System.Data.Spatial.DbGeography.Union(System.Data.Spatial.DbGeography)\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Union(DbGeography)\n  nameWithType: DbGeography.Union(DbGeography)\n  fullName: System.Data.Spatial.DbGeography.Union(DbGeography)\n- uid: System.Data.Spatial.DbGeography.WellKnownValue\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: WellKnownValue\n  nameWithType: DbGeography.WellKnownValue\n  fullName: System.Data.Spatial.DbGeography.WellKnownValue\n- uid: System.Data.Spatial.DbGeographyWellKnownValue\n  parent: System.Data.Spatial\n  isExternal: false\n  name: DbGeographyWellKnownValue\n  nameWithType: DbGeographyWellKnownValue\n  fullName: System.Data.Spatial.DbGeographyWellKnownValue\n- uid: System.Data.Spatial.DbGeography.Area*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Area\n  nameWithType: DbGeography.Area\n- uid: System.Data.Spatial.DbGeography.AsBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsBinary\n  nameWithType: DbGeography.AsBinary\n- uid: System.Data.Spatial.DbGeography.AsGml*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsGml\n  nameWithType: DbGeography.AsGml\n- uid: System.Data.Spatial.DbGeography.AsText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: AsText\n  nameWithType: DbGeography.AsText\n- uid: System.Data.Spatial.DbGeography.Buffer*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Buffer\n  nameWithType: DbGeography.Buffer\n- uid: System.Data.Spatial.DbGeography.CoordinateSystemId*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: CoordinateSystemId\n  nameWithType: DbGeography.CoordinateSystemId\n- uid: System.Data.Spatial.DbGeography.DefaultCoordinateSystemId*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: DefaultCoordinateSystemId\n  nameWithType: DbGeography.DefaultCoordinateSystemId\n- uid: System.Data.Spatial.DbGeography.Difference*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Difference\n  nameWithType: DbGeography.Difference\n- uid: System.Data.Spatial.DbGeography.Dimension*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Dimension\n  nameWithType: DbGeography.Dimension\n- uid: System.Data.Spatial.DbGeography.Disjoint*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Disjoint\n  nameWithType: DbGeography.Disjoint\n- uid: System.Data.Spatial.DbGeography.Distance*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Distance\n  nameWithType: DbGeography.Distance\n- uid: System.Data.Spatial.DbGeography.ElementAt*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ElementAt\n  nameWithType: DbGeography.ElementAt\n- uid: System.Data.Spatial.DbGeography.ElementCount*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ElementCount\n  nameWithType: DbGeography.ElementCount\n- uid: System.Data.Spatial.DbGeography.Elevation*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Elevation\n  nameWithType: DbGeography.Elevation\n- uid: System.Data.Spatial.DbGeography.EndPoint*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: EndPoint\n  nameWithType: DbGeography.EndPoint\n- uid: System.Data.Spatial.DbGeography.FromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromBinary\n  nameWithType: DbGeography.FromBinary\n- uid: System.Data.Spatial.DbGeography.FromGml*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromGml\n  nameWithType: DbGeography.FromGml\n- uid: System.Data.Spatial.DbGeography.FromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: FromText\n  nameWithType: DbGeography.FromText\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: GeographyCollectionFromBinary\n  nameWithType: DbGeography.GeographyCollectionFromBinary\n- uid: System.Data.Spatial.DbGeography.GeographyCollectionFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: GeographyCollectionFromText\n  nameWithType: DbGeography.GeographyCollectionFromText\n- uid: System.Data.Spatial.DbGeography.Intersection*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Intersection\n  nameWithType: DbGeography.Intersection\n- uid: System.Data.Spatial.DbGeography.Intersects*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Intersects\n  nameWithType: DbGeography.Intersects\n- uid: System.Data.Spatial.DbGeography.IsClosed*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: IsClosed\n  nameWithType: DbGeography.IsClosed\n- uid: System.Data.Spatial.DbGeography.IsEmpty*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbGeography.IsEmpty\n- uid: System.Data.Spatial.DbGeography.Latitude*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Latitude\n  nameWithType: DbGeography.Latitude\n- uid: System.Data.Spatial.DbGeography.Length*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Length\n  nameWithType: DbGeography.Length\n- uid: System.Data.Spatial.DbGeography.LineFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: LineFromBinary\n  nameWithType: DbGeography.LineFromBinary\n- uid: System.Data.Spatial.DbGeography.LineFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: LineFromText\n  nameWithType: DbGeography.LineFromText\n- uid: System.Data.Spatial.DbGeography.Longitude*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Longitude\n  nameWithType: DbGeography.Longitude\n- uid: System.Data.Spatial.DbGeography.Measure*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Measure\n  nameWithType: DbGeography.Measure\n- uid: System.Data.Spatial.DbGeography.MultiLineFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiLineFromBinary\n  nameWithType: DbGeography.MultiLineFromBinary\n- uid: System.Data.Spatial.DbGeography.MultiLineFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiLineFromText\n  nameWithType: DbGeography.MultiLineFromText\n- uid: System.Data.Spatial.DbGeography.MultiPointFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPointFromBinary\n  nameWithType: DbGeography.MultiPointFromBinary\n- uid: System.Data.Spatial.DbGeography.MultiPointFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPointFromText\n  nameWithType: DbGeography.MultiPointFromText\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPolygonFromBinary\n  nameWithType: DbGeography.MultiPolygonFromBinary\n- uid: System.Data.Spatial.DbGeography.MultiPolygonFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: MultiPolygonFromText\n  nameWithType: DbGeography.MultiPolygonFromText\n- uid: System.Data.Spatial.DbGeography.PointAt*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointAt\n  nameWithType: DbGeography.PointAt\n- uid: System.Data.Spatial.DbGeography.PointCount*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointCount\n  nameWithType: DbGeography.PointCount\n- uid: System.Data.Spatial.DbGeography.PointFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointFromBinary\n  nameWithType: DbGeography.PointFromBinary\n- uid: System.Data.Spatial.DbGeography.PointFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PointFromText\n  nameWithType: DbGeography.PointFromText\n- uid: System.Data.Spatial.DbGeography.PolygonFromBinary*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PolygonFromBinary\n  nameWithType: DbGeography.PolygonFromBinary\n- uid: System.Data.Spatial.DbGeography.PolygonFromText*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: PolygonFromText\n  nameWithType: DbGeography.PolygonFromText\n- uid: System.Data.Spatial.DbGeography.ProviderValue*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ProviderValue\n  nameWithType: DbGeography.ProviderValue\n- uid: System.Data.Spatial.DbGeography.SpatialEquals*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SpatialEquals\n  nameWithType: DbGeography.SpatialEquals\n- uid: System.Data.Spatial.DbGeography.SpatialTypeName*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SpatialTypeName\n  nameWithType: DbGeography.SpatialTypeName\n- uid: System.Data.Spatial.DbGeography.StartPoint*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: StartPoint\n  nameWithType: DbGeography.StartPoint\n- uid: System.Data.Spatial.DbGeography.SymmetricDifference*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: SymmetricDifference\n  nameWithType: DbGeography.SymmetricDifference\n- uid: System.Data.Spatial.DbGeography.ToString*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: ToString\n  nameWithType: DbGeography.ToString\n- uid: System.Data.Spatial.DbGeography.Union*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: Union\n  nameWithType: DbGeography.Union\n- uid: System.Data.Spatial.DbGeography.WellKnownValue*\n  parent: System.Data.Spatial.DbGeography\n  isExternal: false\n  name: WellKnownValue\n  nameWithType: DbGeography.WellKnownValue\n"}