{"nodes":[{"pos":[757,973],"content":"Contains detailed information about input that was recognized by instances of <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Contains detailed information about input that was recognized by instances of <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref>."},{"pos":[986,4196],"content":"This class derives from <xref:System.Speech.Recognition.RecognizedPhrase> and provides detailed information about speech recognition, including the following:      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> property references the <xref:System.Speech.Recognition.Grammar> that the recognizer used to identify the speech.      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the normalized text for the phrase. For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property references the semantic information contained in the result. The semantic information is a dictionary of the key names and associated semantic data.      -   The <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property contains a collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects that represent other candidate interpretations of the audio input. See <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> for additional information.      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedWordUnit> objects that represent each recognized word in the input. Each <xref:System.Speech.Recognition.RecognizedWordUnit> contains display format, lexical format, and pronunciation information for the corresponding word.       Certain members of the <xref:System.Speech.Recognition.SpeechRecognitionEngine>, <xref:System.Speech.Recognition.SpeechRecognizer>, and <xref:System.Speech.Recognition.Grammar> classes can generate a RecognitionResult. For more information, see the following methods and events.      -   Methods and events of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class:          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized>      -   Methods and events of the <xref:System.Speech.Recognition.SpeechRecognizer> class:          -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A>          -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A>          -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized>          -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected>          -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized>      -   The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event of the <xref:System.Speech.Recognition.Grammar> class.       For more information about recognition events, see [Using Speech Recognition Events](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class derives from &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt; and provides detailed information about speech recognition, including the following:      -   The &lt;xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A&gt; property references the &lt;xref:System.Speech.Recognition.Grammar&gt; that the recognizer used to identify the speech.","pos":[0,346],"source":"This class derives from <xref:System.Speech.Recognition.RecognizedPhrase> and provides detailed information about speech recognition, including the following:      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> property references the <xref:System.Speech.Recognition.Grammar> that the recognizer used to identify the speech."},{"content":"-   The &lt;xref:System.Speech.Recognition.RecognizedPhrase.Text%2A&gt; property contains the normalized text for the phrase.","pos":[352,471],"source":"      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the normalized text for the phrase."},{"content":"For more information about text normalization, see &lt;xref:System.Speech.Recognition.ReplacementText&gt;.","pos":[472,572],"source":" For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>."},{"content":"-   The &lt;xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A&gt; property references the semantic information contained in the result.","pos":[578,718],"source":"      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property references the semantic information contained in the result."},{"content":"The semantic information is a dictionary of the key names and associated semantic data.","pos":[719,806]},{"content":"-   The &lt;xref:System.Speech.Recognition.RecognitionResult.Alternates%2A&gt; property contains a collection of &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt; objects that represent other candidate interpretations of the audio input.","pos":[812,1043],"source":"      -   The <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property contains a collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects that represent other candidate interpretations of the audio input."},{"content":"See &lt;xref:System.Speech.Recognition.RecognitionResult.Alternates%2A&gt; for additional information.","pos":[1044,1140],"source":" See <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> for additional information."},{"content":"-   The &lt;xref:System.Speech.Recognition.RecognizedPhrase.Words%2A&gt; property contains an ordered collection of &lt;xref:System.Speech.Recognition.RecognizedWordUnit&gt; objects that represent each recognized word in the input.","pos":[1146,1365],"source":"      -   The <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedWordUnit> objects that represent each recognized word in the input."},{"content":"Each &lt;xref:System.Speech.Recognition.RecognizedWordUnit&gt; contains display format, lexical format, and pronunciation information for the corresponding word.","pos":[1366,1521],"source":" Each <xref:System.Speech.Recognition.RecognizedWordUnit> contains display format, lexical format, and pronunciation information for the corresponding word."},{"content":"Certain members of the &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt;, &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt;, and &lt;xref:System.Speech.Recognition.Grammar&gt; classes can generate a RecognitionResult.","pos":[1528,1746],"source":"       Certain members of the <xref:System.Speech.Recognition.SpeechRecognitionEngine>, <xref:System.Speech.Recognition.SpeechRecognizer>, and <xref:System.Speech.Recognition.Grammar> classes can generate a RecognitionResult."},{"content":"For more information, see the following methods and events.","pos":[1747,1806]},{"content":"-   Methods and events of the &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; class:          -   &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized&gt;      -   Methods and events of the &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; class:          -   &lt;xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected&gt;          -   &lt;xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized&gt;      -   The &lt;xref:System.Speech.Recognition.Grammar.SpeechRecognized&gt; event of the &lt;xref:System.Speech.Recognition.Grammar&gt; class.","pos":[1812,3008],"source":"      -   Methods and events of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class:          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected>          -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized>      -   Methods and events of the <xref:System.Speech.Recognition.SpeechRecognizer> class:          -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A>          -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A>          -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized>          -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected>          -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized>      -   The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event of the <xref:System.Speech.Recognition.Grammar> class."},{"content":"For more information about recognition events, see <bpt id=\"p1\">[</bpt>Using Speech Recognition Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482)</ept>.","pos":[3015,3170],"source":"       For more information about recognition events, see [Using Speech Recognition Events](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482)."}]},{"pos":[7168,7243],"content":"Gets the collection of possible matches for input to the speech recognizer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of possible matches for input to the speech recognizer.","pos":[0,75]}]},{"pos":[7256,8746],"content":"Recognition Alternates are ordered by the values of their <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> properties. The confidence value of a given phrase indicates the probability that the phrase matches the input. The phrase with the highest confidence value is the phrase that most likely matches the input.       Each <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> value should be evaluated individually and without reference to the confidence values of other Alternates. The properties that the <xref:System.Speech.Recognition.RecognitionResult> inherits from <xref:System.Speech.Recognition.RecognizedPhrase> provide detailed information about the phrase with the highest confidence score.       One use for the Alternates collection is for automated error correction. For example, when designing a directory dialog, an application could prompt the user to check if the application has the correct information from a recognition event, as in, \"Did you say 'Anna'?\" If the user says \"no\", then the application could query the user about any alternates that had a high enough <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> score.       For more information about speech recognition and the use of recognition alternates, see [Speech Recognition](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Using Speech Recognition Events](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Recognition Alternates are ordered by the values of their &lt;xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A&gt; properties.","pos":[0,133],"source":"Recognition Alternates are ordered by the values of their <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> properties."},{"content":"The confidence value of a given phrase indicates the probability that the phrase matches the input.","pos":[134,233]},{"content":"The phrase with the highest confidence value is the phrase that most likely matches the input.","pos":[234,328]},{"content":"Each &lt;xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A&gt; value should be evaluated individually and without reference to the confidence values of other Alternates.","pos":[335,510],"source":"       Each <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> value should be evaluated individually and without reference to the confidence values of other Alternates."},{"content":"The properties that the &lt;xref:System.Speech.Recognition.RecognitionResult&gt; inherits from &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt; provide detailed information about the phrase with the highest confidence score.","pos":[511,730],"source":" The properties that the <xref:System.Speech.Recognition.RecognitionResult> inherits from <xref:System.Speech.Recognition.RecognizedPhrase> provide detailed information about the phrase with the highest confidence score."},{"content":"One use for the Alternates collection is for automated error correction.","pos":[737,809]},{"content":"For example, when designing a directory dialog, an application could prompt the user to check if the application has the correct information from a recognition event, as in, \"Did you say 'Anna'?\" If the user says \"no\", then the application could query the user about any alternates that had a high enough &lt;xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A&gt; score.","pos":[810,1185],"source":" For example, when designing a directory dialog, an application could prompt the user to check if the application has the correct information from a recognition event, as in, \"Did you say 'Anna'?\" If the user says \"no\", then the application could query the user about any alternates that had a high enough <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> score."},{"content":"For more information about speech recognition and the use of recognition alternates, see <bpt id=\"p1\">[</bpt>Speech Recognition<ept id=\"p1\">](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919)</ept> and <bpt id=\"p2\">[</bpt>Using Speech Recognition Events<ept id=\"p2\">](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482)</ept>.","pos":[1192,1480],"source":"       For more information about speech recognition and the use of recognition alternates, see [Speech Recognition](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Using Speech Recognition Events](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482)."}]},{"pos":[10571,10624],"content":"A read-only collection of the recognition alternates.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read-only collection of the recognition alternates.","pos":[0,53]}]},{"pos":[11091,11145],"content":"Gets the audio associated with the recognition result.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the audio associated with the recognition result.","pos":[0,54]}]},{"pos":[11157,11354],"content":"To get a section of the audio that is associated with a specific range of words in the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange%2A> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To get a section of the audio that is associated with a specific range of words in the recognition result, use the &lt;xref:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange%2A&gt; method.","pos":[0,197],"source":"To get a section of the audio that is associated with a specific range of words in the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange%2A> method."}]},{"pos":[13318,13832],"content":"The audio associated with the recognition result or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the recognizer generated the result from a call to the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_EmulateRecognize\" name=\"EmulateRecognize\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_EmulateRecognizeAsync\" name=\"EmulateRecognizeAsync\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> methods of a <bpt id=\"p4\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> or <bpt id=\"p5\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The audio associated with the recognition result or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the recognizer generated the result from a call to the <xref uid=\"langword_csharp_EmulateRecognize\" name=\"EmulateRecognize\" href=\"\"></xref> or <xref uid=\"langword_csharp_EmulateRecognizeAsync\" name=\"EmulateRecognizeAsync\" href=\"\"></xref> methods of a <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> instance."},{"pos":[14666,14770],"content":"Gets a section of the audio that is associated with a specific range of words in the recognition result.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a section of the audio that is associated with a specific range of words in the recognition result.","pos":[0,104]}]},{"pos":[14782,14925],"content":"To get the complete audio associated with the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.Audio%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To get the complete audio associated with the recognition result, use the &lt;xref:System.Speech.Recognition.RecognitionResult.Audio%2A&gt; property.","pos":[0,143],"source":"To get the complete audio associated with the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.Audio%2A> property."}]},{"pos":[17291,17319],"content":"The first word in the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first word in the range.","pos":[0,28]}]},{"pos":[17415,17442],"content":"The last word in the range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The last word in the range.","pos":[0,27]}]},{"pos":[17528,17580],"content":"The section of audio associated with the word range.","needQuote":true,"needEscape":true,"nodes":[{"content":"The section of audio associated with the word range.","pos":[0,52]}]},{"pos":[17777,18172],"content":"The recognizer generated the result from a call to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_EmulateRecognize\" name=\"EmulateRecognize\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_EmulateRecognizeAsync\" name=\"EmulateRecognizeAsync\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> methods of the <bpt id=\"p3\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or <bpt id=\"p4\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"The recognizer generated the result from a call to <xref uid=\"langword_csharp_EmulateRecognize\" name=\"EmulateRecognize\" href=\"\"></xref> or <xref uid=\"langword_csharp_EmulateRecognizeAsync\" name=\"EmulateRecognizeAsync\" href=\"\"></xref> methods of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> objects."},{"pos":[19117,19258],"content":"Populates a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance with the data needed to serialize the target object.","needQuote":true,"needEscape":true,"source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> instance with the data needed to serialize the target object."},{"pos":[19270,19493],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Speech.Recognition.RecognitionResult> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Speech.Recognition.RecognitionResult> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","pos":[0,223],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Speech.Recognition.RecognitionResult&gt; instance is cast to an &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.","pos":[60,223],"source":" It can be used only when the <xref:System.Speech.Recognition.RecognitionResult> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface."}]}]},{"pos":[19769,19802],"content":"The object to populate with data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to populate with data.","pos":[0,33]}]},{"pos":[19898,19936],"content":"The destination for the serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination for the serialization.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.RecognitionResult\n  id: RecognitionResult\n  children:\n  - System.Speech.Recognition.RecognitionResult.Alternates\n  - System.Speech.Recognition.RecognitionResult.Audio\n  - System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)\n  - System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: RecognitionResult\n  nameWithType: RecognitionResult\n  fullName: System.Speech.Recognition.RecognitionResult\n  type: Class\n  summary: Contains detailed information about input that was recognized by instances of <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref>.\n  remarks: \"This class derives from <xref:System.Speech.Recognition.RecognizedPhrase> and provides detailed information about speech recognition, including the following:  \\n  \\n-   The <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> property references the <xref:System.Speech.Recognition.Grammar> that the recognizer used to identify the speech.  \\n  \\n-   The <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the normalized text for the phrase. For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.  \\n  \\n-   The <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property references the semantic information contained in the result. The semantic information is a dictionary of the key names and associated semantic data.  \\n  \\n-   The <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property contains a collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects that represent other candidate interpretations of the audio input. See <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> for additional information.  \\n  \\n-   The <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedWordUnit> objects that represent each recognized word in the input. Each <xref:System.Speech.Recognition.RecognizedWordUnit> contains display format, lexical format, and pronunciation information for the corresponding word.  \\n  \\n Certain members of the <xref:System.Speech.Recognition.SpeechRecognitionEngine>, <xref:System.Speech.Recognition.SpeechRecognizer>, and <xref:System.Speech.Recognition.Grammar> classes can generate a RecognitionResult. For more information, see the following methods and events.  \\n  \\n-   Methods and events of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class:  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized>  \\n  \\n-   Methods and events of the <xref:System.Speech.Recognition.SpeechRecognizer> class:  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected>  \\n  \\n    -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized>  \\n  \\n-   The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event of the <xref:System.Speech.Recognition.Grammar> class.  \\n  \\n For more information about recognition events, see [Using Speech Recognition Events](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482).\"\n  example:\n  - \"The following example shows a handler for the `SpeechRecognized` event of a <xref:System.Speech.Recognition.SpeechRecognitionEngine> or <xref:System.Speech.Recognition.SpeechRecognizer> object, and some of the information about the associated RecognitionResult.  \\n  \\n```c#  \\n  \\n// Handle the SpeechRecognized event.   \\nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \\n{  \\n  if (e.Result == null) return;  \\n  \\n  // Add event handler code here.  \\n  \\n  // The following code illustrates some of the information available  \\n  // in the recognition result.  \\n  Console.WriteLine(\\\"Grammar({0}), {1}: {2}\\\",  \\n    e.Result.Grammar.Name, e.Result.Audio.Duration, e.Result.Text);  \\n  \\n  // Display the semantic values in the recognition result.  \\n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \\n  {  \\n    Console.WriteLine(\\\" {0} key: {1}\\\",  \\n      child.Key, child.Value.Value ?? \\\"null\\\");  \\n  }  \\n  Console.WriteLine();  \\n  \\n  // Display information about the words in the recognition result.  \\n  foreach (RecognizedWordUnit word in e.Result.Words)  \\n  {  \\n    RecognizedAudio audio = e.Result.GetAudioForWordRange(word, word);  \\n    Console.WriteLine(\\\" {0,-10} {1,-10} {2,-10} {3} ({4})\\\",  \\n      word.Text, word.LexicalForm, word.Pronunciation,  \\n      audio.Duration, word.DisplayAttributes);  \\n  }  \\n  \\n  // Display the recognition alternates for the result.  \\n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \\n  {  \\n    Console.WriteLine(\\\" alt({0}) {1}\\\", phrase.Confidence, phrase.Text);  \\n  }  \\n}  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{DebuggerDisplayString ()}\")]\n\n      public sealed class RecognitionResult : System.Speech.Recognition.RecognizedPhrase, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  - System.Speech.Recognition.RecognizedPhrase\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Speech.Recognition.RecognizedPhrase.Confidence\n  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics\n  - System.Speech.Recognition.RecognizedPhrase.Grammar\n  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId\n  - System.Speech.Recognition.RecognizedPhrase.Homophones\n  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits\n  - System.Speech.Recognition.RecognizedPhrase.Semantics\n  - System.Speech.Recognition.RecognizedPhrase.Text\n  - System.Speech.Recognition.RecognizedPhrase.Words\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognitionResult.Alternates\n  id: Alternates\n  parent: System.Speech.Recognition.RecognitionResult\n  langs:\n  - csharp\n  name: Alternates\n  nameWithType: RecognitionResult.Alternates\n  fullName: System.Speech.Recognition.RecognitionResult.Alternates\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the collection of possible matches for input to the speech recognizer.\n  remarks: \"Recognition Alternates are ordered by the values of their <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> properties. The confidence value of a given phrase indicates the probability that the phrase matches the input. The phrase with the highest confidence value is the phrase that most likely matches the input.  \\n  \\n Each <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> value should be evaluated individually and without reference to the confidence values of other Alternates. The properties that the <xref:System.Speech.Recognition.RecognitionResult> inherits from <xref:System.Speech.Recognition.RecognizedPhrase> provide detailed information about the phrase with the highest confidence score.  \\n  \\n One use for the Alternates collection is for automated error correction. For example, when designing a directory dialog, an application could prompt the user to check if the application has the correct information from a recognition event, as in, \\\"Did you say 'Anna'?\\\" If the user says \\\"no\\\", then the application could query the user about any alternates that had a high enough <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> score.  \\n  \\n For more information about speech recognition and the use of recognition alternates, see [Speech Recognition](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Using Speech Recognition Events](http://msdn.microsoft.com/en-us/01c598ca-2e0e-4e89-b303-cd1cef9e8482).\"\n  example:\n  - \"The following example shows a handler for the `SpeechRecognized` event and some of the information about the associated <xref:System.Speech.Recognition.RecognitionResult>.  \\n  \\n```c#  \\n  \\n// Handle the SpeechRecognized event.   \\nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \\n{  \\n  if (e.Result == null) return;  \\n  \\n  // Add event handler code here.  \\n  \\n  // The following code illustrates some of the information available  \\n  // in the recognition result.  \\n  Console.WriteLine(\\\"Grammar({0}), {1}: {2}\\\",  \\n    e.Result.Grammar.Name, e.Result.Audio.Duration, e.Result.Text);  \\n  \\n  // Display the semantic values in the recognition result.  \\n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \\n  {  \\n    Console.WriteLine(\\\" {0} key: {1}\\\",  \\n      child.Key, child.Value.Value ?? \\\"null\\\");  \\n  }  \\n  Console.WriteLine();  \\n  \\n  // Display information about the words in the recognition result.  \\n  foreach (RecognizedWordUnit word in e.Result.Words)  \\n  {  \\n    RecognizedAudio audio = e.Result.GetAudioForWordRange(word, word);  \\n    Console.WriteLine(\\\" {0,-10} {1,-10} {2,-10} {3} ({4})\\\",  \\n      word.Text, word.LexicalForm, word.Pronunciation,  \\n      audio.Duration, word.DisplayAttributes);  \\n  }  \\n  \\n  // Display the recognition alternates for the result.  \\n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \\n  {  \\n    Console.WriteLine(\\\" alt({0}) {1}\\\", phrase.Confidence, phrase.Text);  \\n  }  \\n}  \\n```\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Alternates { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}\n      description: A read-only collection of the recognition alternates.\n  overload: System.Speech.Recognition.RecognitionResult.Alternates*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognitionResult.Audio\n  id: Audio\n  parent: System.Speech.Recognition.RecognitionResult\n  langs:\n  - csharp\n  name: Audio\n  nameWithType: RecognitionResult.Audio\n  fullName: System.Speech.Recognition.RecognitionResult.Audio\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the audio associated with the recognition result.\n  remarks: To get a section of the audio that is associated with a specific range of words in the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange%2A> method.\n  example:\n  - \"The following example shows a handler for the **SpeechRecognized** event and some of the information about the associated <xref:System.Speech.Recognition.RecognitionResult>.  \\n  \\n```c#  \\n  \\n// Handle the SpeechRecognized event.   \\nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \\n{  \\n  if (e.Result == null) return;  \\n  \\n  // Add event handler code here.  \\n  \\n  // The following code illustrates some of the information available  \\n  // in the recognition result.  \\n      Console.WriteLine(\\\"Grammar({0}): {1}\\\", e.Result.Grammar.Name, e.Result.Text);  \\n      Console.WriteLine(\\\"Audio for result:\\\");  \\n      Console.WriteLine(\\\"  Start time: \\\"+ e.Result.Audio.StartTime);  \\n      Console.WriteLine(\\\"  Duration: \\\" + e.Result.Audio.Duration);  \\n      Console.WriteLine(\\\"  Format: \\\" + e.Result.Audio.Format.EncodingFormat);  \\n  \\n  // Display the semantic values in the recognition result.  \\n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \\n  {  \\n    Console.WriteLine(\\\" {0} key: {1}\\\",  \\n      child.Key, child.Value.Value ?? \\\"null\\\");  \\n  }  \\n  Console.WriteLine();  \\n  \\n  // Display information about the words in the recognition result.  \\n  foreach (RecognizedWordUnit word in e.Result.Words)  \\n  {  \\n    RecognizedAudio audio = e.Result.GetAudioForWordRange(word, word);  \\n    Console.WriteLine(\\\" {0,-10} {1,-10} {2,-10} {3} ({4})\\\",  \\n      word.Text, word.LexicalForm, word.Pronunciation,  \\n      audio.Duration, word.DisplayAttributes);  \\n  }  \\n  \\n  // Display the recognition alternates for the result.  \\n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \\n  {  \\n    Console.WriteLine(\\\" alt({0}) {1}\\\", phrase.Confidence, phrase.Text);  \\n  }  \\n}  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.RecognizedAudio Audio { get; }\n    return:\n      type: System.Speech.Recognition.RecognizedAudio\n      description: The audio associated with the recognition result or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the recognizer generated the result from a call to the <xref uid=\"langword_csharp_EmulateRecognize\" name=\"EmulateRecognize\" href=\"\"></xref> or <xref uid=\"langword_csharp_EmulateRecognizeAsync\" name=\"EmulateRecognizeAsync\" href=\"\"></xref> methods of a <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> instance.\n  overload: System.Speech.Recognition.RecognitionResult.Audio*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)\n  id: GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)\n  parent: System.Speech.Recognition.RecognitionResult\n  langs:\n  - csharp\n  name: GetAudioForWordRange(RecognizedWordUnit,RecognizedWordUnit)\n  nameWithType: RecognitionResult.GetAudioForWordRange(RecognizedWordUnit,RecognizedWordUnit)\n  fullName: System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(RecognizedWordUnit,RecognizedWordUnit)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets a section of the audio that is associated with a specific range of words in the recognition result.\n  remarks: To get the complete audio associated with the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.Audio%2A> property.\n  example:\n  - \"The following example creates a grammar to accept name input and attaches to it a handler for the `SpeechRecognized` event. The grammar uses a wildcard for the name element of the phrase. The event handler uses the audio from the wildcard to create and play a greeting prompt.  \\n  \\n```c#  \\n  \\nprivate Grammar CreateNameInputGrammar()  \\n{  \\n  GrammarBuilder wildcardBuilder = new GrammarBuilder();  \\n  wildcardBuilder.AppendWildcard();  \\n  SemanticResultKey nameKey =  \\n    new SemanticResultKey(\\\"Name\\\", wildcardBuilder);  \\n  \\n  GrammarBuilder nameBuilder =  \\n    new GrammarBuilder(\\\"My name is\\\");  \\n  nameBuilder.Append(nameKey);  \\n  \\n  Grammar nameGrammar = new Grammar(nameBuilder);  \\n  nameGrammar.Name = \\\"Name input\\\";  \\n  \\n  nameGrammar.SpeechRecognized +=  \\n    new EventHandler<SpeechRecognizedEventArgs>(  \\n      NameInputHandler);  \\n  \\n  return nameGrammar;  \\n}  \\n  \\n// Handle the SpeechRecognized event for the name grammar.  \\nprivate void NameInputHandler(object sender, SpeechRecognizedEventArgs e)  \\n{  \\n  if (e.Result == null) return;  \\n  \\n  RecognitionResult result = e.Result;  \\n  SemanticValue semantics = e.Result.Semantics;  \\n  \\n  if (semantics.ContainsKey(\\\"Name\\\"))  \\n  {  \\n    RecognizedAudio nameAudio =  \\n      result.GetAudioForWordRange(  \\n        result.Words[3], result.Words[result.Words.Count - 1]);  \\n  \\n    // Save the audio. Create a directory and file as necessary.  \\n    FileInfo fi = new FileInfo(@\\\"C:\\\\temp\\\\temp.wav\\\");  \\n    if (!fi.Directory.Exists)  \\n    {  \\n      fi.Directory.Create();  \\n    }  \\n    FileStream stream = new FileStream(fi.FullName, FileMode.Create);  \\n    nameAudio.WriteToWaveStream(stream);  \\n    stream.Close();  \\n  \\n    // Greet the person using the saved audio.  \\n    SpeechSynthesizer synthesizer = new SpeechSynthesizer();  \\n    PromptBuilder builder = new PromptBuilder();  \\n    builder.AppendText(\\\"Hello\\\");  \\n    builder.AppendAudio(fi.FullName);  \\n    synthesizer.Speak(builder);  \\n  }  \\n}  \\n```\"\n  syntax:\n    content: public System.Speech.Recognition.RecognizedAudio GetAudioForWordRange (System.Speech.Recognition.RecognizedWordUnit firstWord, System.Speech.Recognition.RecognizedWordUnit lastWord);\n    parameters:\n    - id: firstWord\n      type: System.Speech.Recognition.RecognizedWordUnit\n      description: The first word in the range.\n    - id: lastWord\n      type: System.Speech.Recognition.RecognizedWordUnit\n      description: The last word in the range.\n    return:\n      type: System.Speech.Recognition.RecognizedAudio\n      description: The section of audio associated with the word range.\n  overload: System.Speech.Recognition.RecognitionResult.GetAudioForWordRange*\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: The recognizer generated the result from a call to <xref uid=\"langword_csharp_EmulateRecognize\" name=\"EmulateRecognize\" href=\"\"></xref> or <xref uid=\"langword_csharp_EmulateRecognizeAsync\" name=\"EmulateRecognizeAsync\" href=\"\"></xref> methods of the <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> objects.\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Speech.Recognition.RecognitionResult\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: RecognitionResult.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Speech.Recognition.RecognitionResult.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> instance with the data needed to serialize the target object.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Speech.Recognition.RecognitionResult> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination for the serialization.\n  overload: System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Speech.Recognition.RecognizedPhrase\n  isExternal: false\n  name: System.Speech.Recognition.RecognizedPhrase\n- uid: System.NullReferenceException\n  isExternal: true\n  name: System.NullReferenceException\n- uid: System.Speech.Recognition.RecognitionResult.Alternates\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: Alternates\n  nameWithType: RecognitionResult.Alternates\n  fullName: System.Speech.Recognition.RecognitionResult.Alternates\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<RecognizedPhrase>\n  nameWithType: ReadOnlyCollection<RecognizedPhrase>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Speech.Recognition.RecognizedPhrase\n    name: RecognizedPhrase\n    nameWithType: RecognizedPhrase\n    fullName: RecognizedPhrase\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.RecognitionResult.Audio\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: Audio\n  nameWithType: RecognitionResult.Audio\n  fullName: System.Speech.Recognition.RecognitionResult.Audio\n- uid: System.Speech.Recognition.RecognizedAudio\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: RecognizedAudio\n  nameWithType: RecognizedAudio\n  fullName: System.Speech.Recognition.RecognizedAudio\n- uid: System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: GetAudioForWordRange(RecognizedWordUnit,RecognizedWordUnit)\n  nameWithType: RecognitionResult.GetAudioForWordRange(RecognizedWordUnit,RecognizedWordUnit)\n  fullName: System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(RecognizedWordUnit,RecognizedWordUnit)\n- uid: System.Speech.Recognition.RecognizedWordUnit\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: RecognizedWordUnit\n  nameWithType: RecognizedWordUnit\n  fullName: System.Speech.Recognition.RecognizedWordUnit\n- uid: System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: RecognitionResult.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Speech.Recognition.RecognitionResult.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Speech.Recognition.RecognitionResult.Alternates*\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: Alternates\n  nameWithType: RecognitionResult.Alternates\n- uid: System.Speech.Recognition.RecognitionResult.Audio*\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: Audio\n  nameWithType: RecognitionResult.Audio\n- uid: System.Speech.Recognition.RecognitionResult.GetAudioForWordRange*\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: GetAudioForWordRange\n  nameWithType: RecognitionResult.GetAudioForWordRange\n- uid: System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Speech.Recognition.RecognitionResult\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: RecognitionResult.System.Runtime.Serialization.ISerializable.GetObjectData\n"}