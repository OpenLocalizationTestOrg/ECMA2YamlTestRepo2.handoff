{"nodes":[{"pos":[697,779],"content":"The exception that is thrown if a Microsoft Message Queuing internal error occurs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown if a Microsoft Message Queuing internal error occurs.","pos":[0,82]}]},{"pos":[792,2042],"content":"Exceptions associated with the MessageQueueException class are generated by internal errors within Message Queuing that should be dealt with through your code.       Every exception consists of an error code and a text string that describes the source of the error. See the <xref:System.Messaging.MessageQueueErrorCode> class for a list of these error codes and their descriptions.       If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to true, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a MessageQueueException exception because of a sharing violation. The same exception is thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has nonexclusive access to the queue.      > **alert tag is not supported!!!!**   > <xref:System.Messaging.MessageQueueTransaction> is threading-apartment–aware. Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine. Otherwise, sending a transactional message using another thread throws a MessageQueueException exception.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Exceptions associated with the MessageQueueException class are generated by internal errors within Message Queuing that should be dealt with through your code.","pos":[0,159]},{"content":"Every exception consists of an error code and a text string that describes the source of the error.","pos":[166,265]},{"content":"See the &lt;xref:System.Messaging.MessageQueueErrorCode&gt; class for a list of these error codes and their descriptions.","pos":[266,381],"source":" See the <xref:System.Messaging.MessageQueueErrorCode> class for a list of these error codes and their descriptions."},{"content":"If a &lt;xref:System.Messaging.MessageQueue&gt; opens a queue with the <ph id=\"ph1\">`sharedModeDenyReceive`</ph> parameter set to true, any &lt;xref:System.Messaging.MessageQueue&gt; that subsequently tries to read from the queue generates a MessageQueueException exception because of a sharing violation.","pos":[388,663],"source":"       If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to true, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a MessageQueueException exception because of a sharing violation."},{"content":"The same exception is thrown if a &lt;xref:System.Messaging.MessageQueue&gt; tries to access the queue in exclusive mode while another &lt;xref:System.Messaging.MessageQueue&gt; already has nonexclusive access to the queue.","pos":[664,875],"source":" The same exception is thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has nonexclusive access to the queue."},{"content":"&gt; <bpt id=\"p1\">**</bpt>alert tag is not supported!!!!<ept id=\"p1\">**</ept>","pos":[881,917],"source":"      > **alert tag is not supported!!!!**"},{"content":"&gt; &lt;xref:System.Messaging.MessageQueueTransaction&gt; is threading-apartment–aware.","pos":[920,999],"source":"   > <xref:System.Messaging.MessageQueueTransaction> is threading-apartment–aware."},{"content":"Visual Basic sets the state of the main thread to <ph id=\"ph1\">`STA`</ph>, so you must apply the &lt;xref:System.MTAThreadAttribute&gt; in the <ph id=\"ph2\">`Main`</ph> subroutine.","pos":[1000,1137],"source":" Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine."},{"content":"Otherwise, sending a transactional message using another thread throws a MessageQueueException exception.","pos":[1138,1243]}]},{"pos":[3476,3597],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with serialized data.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueException\"></xref> class with serialized data."},{"pos":[3872,4053],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the serialized data associated with the <bpt id=\"p2\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized data associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>."},{"pos":[4149,4350],"content":"A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>."},{"pos":[5124,5267],"content":"Populates a serialization information object with the data needed to serialize the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Populates a serialization information object with the data needed to serialize the <xref href=\"System.Messaging.MessageQueueException\"></xref>."},{"pos":[5545,5726],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the serialized data associated with the <bpt id=\"p2\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized data associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>."},{"pos":[5822,6023],"content":"A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream associated with the <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>."},{"pos":[6206,6302],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>info</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6677,6731],"content":"Gets a value that describes the Message Queuing error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that describes the Message Queuing error.","pos":[0,54]}]},{"pos":[6743,7055],"content":"When you get this property, the method attempts to retrieve the text string associated with the <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> property. If the method is unable to interpret the error code that Message Queuing generated, the Message property gets the value `UnknownError`.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you get this property, the method attempts to retrieve the text string associated with the &lt;xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A&gt; property.","pos":[0,176],"source":"When you get this property, the method attempts to retrieve the text string associated with the <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> property."},{"content":"If the method is unable to interpret the error code that Message Queuing generated, the Message property gets the value <ph id=\"ph1\">`UnknownError`</ph>.","pos":[177,312],"source":" If the method is unable to interpret the error code that Message Queuing generated, the Message property gets the value `UnknownError`."}]},{"pos":[7176,7310],"content":"The description of the Message Queuing internal error that generated this <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueueException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The description of the Message Queuing internal error that generated this <xref href=\"System.Messaging.MessageQueueException\"></xref>."},{"pos":[7832,7906],"content":"Gets a value that indicates the error code associated with this exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates the error code associated with this exception.","pos":[0,74]}]},{"pos":[7918,8099],"content":"The <xref:System.Messaging.MessageQueueException.Message%2A> property contains a string associated with this MessageQueueErrorCode that more fully describes the source of the error.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Messaging.MessageQueueException.Message%2A&gt; property contains a string associated with this MessageQueueErrorCode that more fully describes the source of the error.","pos":[0,181],"source":"The <xref:System.Messaging.MessageQueueException.Message%2A> property contains a string associated with this MessageQueueErrorCode that more fully describes the source of the error."}]},{"pos":[8282,8404],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Messaging.MessageQueueErrorCode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that identifies the type of error Message Queuing generated.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Messaging.MessageQueueErrorCode\"></xref> that identifies the type of error Message Queuing generated."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.MessageQueueException\n  id: MessageQueueException\n  children:\n  - System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Messaging.MessageQueueException.Message\n  - System.Messaging.MessageQueueException.MessageQueueErrorCode\n  langs:\n  - csharp\n  name: MessageQueueException\n  nameWithType: MessageQueueException\n  fullName: System.Messaging.MessageQueueException\n  type: Class\n  summary: The exception that is thrown if a Microsoft Message Queuing internal error occurs.\n  remarks: \"Exceptions associated with the MessageQueueException class are generated by internal errors within Message Queuing that should be dealt with through your code.  \\n  \\n Every exception consists of an error code and a text string that describes the source of the error. See the <xref:System.Messaging.MessageQueueErrorCode> class for a list of these error codes and their descriptions.  \\n  \\n If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to true, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a MessageQueueException exception because of a sharing violation. The same exception is thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has nonexclusive access to the queue.  \\n  \\n> **alert tag is not supported!!!!**  \\n> <xref:System.Messaging.MessageQueueTransaction> is threading-apartment–aware. Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine. Otherwise, sending a transactional message using another thread throws a MessageQueueException exception.\"\n  example:\n  - >-\n    [!code-vb[MessageQueue.ExistsDelete#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_3_1.vb)]\n     [!code-cs[MessageQueue.ExistsDelete#1](~/add/codesnippet/csharp/t-system.messaging.messa_3_1.cs)]\n     [!code-cpp[MessageQueue.ExistsDelete#1](~/add/codesnippet/cpp/t-system.messaging.messa_3_1.cpp)]\n  syntax:\n    content: 'public class MessageQueueException : System.Runtime.InteropServices.ExternalException'\n  inheritance:\n  - System.Exception\n  - System.SystemException\n  - System.Runtime.InteropServices.ExternalException\n  implements: []\n  inheritedMembers:\n  - System.Runtime.InteropServices.ExternalException.ErrorCode\n  - System.Runtime.InteropServices.ExternalException.ToString\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Messaging.MessageQueueException\n  langs:\n  - csharp\n  name: MessageQueueException(SerializationInfo,StreamingContext)\n  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)\n  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Messaging.MessageQueueException\"></xref> class with serialized data.\n  syntax:\n    content: protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized data associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>.\n  overload: System.Messaging.MessageQueueException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Messaging.MessageQueueException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Populates a serialization information object with the data needed to serialize the <xref href=\"System.Messaging.MessageQueueException\"></xref>.\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized data associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream associated with the <xref href=\"System.Messaging.MessageQueueException\"></xref>.\n  overload: System.Messaging.MessageQueueException.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>info</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueueException.Message\n  id: Message\n  parent: System.Messaging.MessageQueueException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: MessageQueueException.Message\n  fullName: System.Messaging.MessageQueueException.Message\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets a value that describes the Message Queuing error.\n  remarks: When you get this property, the method attempts to retrieve the text string associated with the <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> property. If the method is unable to interpret the error code that Message Queuing generated, the Message property gets the value `UnknownError`.\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: The description of the Message Queuing internal error that generated this <xref href=\"System.Messaging.MessageQueueException\"></xref>.\n  overload: System.Messaging.MessageQueueException.Message*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode\n  id: MessageQueueErrorCode\n  parent: System.Messaging.MessageQueueException\n  langs:\n  - csharp\n  name: MessageQueueErrorCode\n  nameWithType: MessageQueueException.MessageQueueErrorCode\n  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode\n  type: Property\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Gets a value that indicates the error code associated with this exception.\n  remarks: The <xref:System.Messaging.MessageQueueException.Message%2A> property contains a string associated with this MessageQueueErrorCode that more fully describes the source of the error.\n  syntax:\n    content: public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }\n    return:\n      type: System.Messaging.MessageQueueErrorCode\n      description: A <xref href=\"System.Messaging.MessageQueueErrorCode\"></xref> that identifies the type of error Message Queuing generated.\n  overload: System.Messaging.MessageQueueException.MessageQueueErrorCode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.ExternalException\n  isExternal: false\n  name: System.Runtime.InteropServices.ExternalException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: MessageQueueException(SerializationInfo,StreamingContext)\n  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)\n  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Messaging.MessageQueueException.Message\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: Message\n  nameWithType: MessageQueueException.Message\n  fullName: System.Messaging.MessageQueueException.Message\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: MessageQueueErrorCode\n  nameWithType: MessageQueueException.MessageQueueErrorCode\n  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode\n- uid: System.Messaging.MessageQueueErrorCode\n  parent: System.Messaging\n  isExternal: false\n  name: MessageQueueErrorCode\n  nameWithType: MessageQueueErrorCode\n  fullName: System.Messaging.MessageQueueErrorCode\n- uid: System.Messaging.MessageQueueException.#ctor*\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: MessageQueueException\n  nameWithType: MessageQueueException.MessageQueueException\n- uid: System.Messaging.MessageQueueException.GetObjectData*\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: MessageQueueException.GetObjectData\n- uid: System.Messaging.MessageQueueException.Message*\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: Message\n  nameWithType: MessageQueueException.Message\n- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode*\n  parent: System.Messaging.MessageQueueException\n  isExternal: false\n  name: MessageQueueErrorCode\n  nameWithType: MessageQueueException.MessageQueueErrorCode\n"}