{"nodes":[{"pos":[4988,5000],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6863,6875],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7980,7992],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8781,8793],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9496,9508],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10236,10248],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11288,11300],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11357,11369],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12404,12416],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12473,12485],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13476,13488],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13547,13559],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14595,14607],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14666,14678],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15435,15447],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15498,15510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16552,16564],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16623,16635],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17678,17690],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17749,17761],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18516,18528],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18585,18597],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20428,20440],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20502,20514],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20622,20634],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22116,22128],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22189,22201],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22311,22323],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22431,22443],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23546,23558],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23663,23675],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24824,24836],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24944,24956],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26161,26173],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26232,26244],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26352,26364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27424,27436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27495,27507],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28584,28596],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28655,28667],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29789,29801],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29860,29872],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30715,30727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31878,31890],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31998,32010],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33215,33227],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33286,33298],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33406,33418],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34490,34502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34561,34573],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35634,35646],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35705,35717],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36818,36830],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36889,36901],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38016,38028],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38080,38092],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39225,39237],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39289,39301],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40383,40395],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40452,40464],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41686,41698],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41760,41772],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41880,41892],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43241,43253],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  id: ReverseRandomAccessIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid\n  langs:\n  - csharp\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ReverseRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ReverseRandomAccessIterator()\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseRandomAccessIterator ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base\n  id: base\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: base()\n  nameWithType: ReverseRandomAccessIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.base()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> base ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ReverseRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ReverseRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int distance (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: To be added.\n    return:\n      type: TValue\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)\n  id: move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: move(Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.move(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int move (int _Offset);\n    parameters:\n    - id: _Offset\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ReverseRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ReverseRandomAccessIterator<TValue>,Int32,ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32,ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32,ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    - id: _Left\n      type: System.Int32\n      description: To be added.\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ReverseRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ReverseRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    - id: A_0\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: To be added.\n    return:\n      type: TValue@\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n      description: To be added.\n    - id: _Right\n      type: System.Int32\n      description: To be added.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ReverseRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ReverseRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: ReverseRandomAccessIterator()\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: ReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: ReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseRandomAccessIterator\n  nameWithType: ReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: base()\n  nameWithType: ReverseRandomAccessIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.base()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ReverseRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.Clone()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ReverseRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: distance(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.Item(Int32)\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: less_than(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: move(Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.move(Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ReverseRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ReverseRandomAccessIterator<TValue>,Int32,ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32,ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>,Int32,ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ReverseRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ReverseRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference(ReverseRandomAccessIterator)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(ReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ReverseRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ReverseRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>.valid()\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: ReverseRandomAccessIterator<TValue>\n  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: base\n  nameWithType: ReverseRandomAccessIterator<TValue>.base\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: Clone\n  nameWithType: ReverseRandomAccessIterator<TValue>.Clone\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: container\n  nameWithType: ReverseRandomAccessIterator<TValue>.container\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: distance\n  nameWithType: ReverseRandomAccessIterator<TValue>.distance\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: equal_to\n  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: Item\n  nameWithType: ReverseRandomAccessIterator<TValue>.Item\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: less_than\n  nameWithType: ReverseRandomAccessIterator<TValue>.less_than\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: move\n  nameWithType: ReverseRandomAccessIterator<TValue>.move\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: next\n  nameWithType: ReverseRandomAccessIterator<TValue>.next\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Assign\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Equality\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThan\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Inequality\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThan\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_MemberSelection\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_PointerDereference\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: ReverseRandomAccessIterator<TValue>.prev\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: ReverseRandomAccessIterator<TValue>.valid\n"}