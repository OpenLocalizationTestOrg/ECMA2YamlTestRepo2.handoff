{"nodes":[{"pos":[2995,3075],"content":"Provides an abstract class for supporting formatting services to a line of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an abstract class for supporting formatting services to a line of text.","pos":[0,80]}]},{"pos":[3647,3753],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> class."},{"pos":[4356,4462],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> class."},{"pos":[4474,4597],"content":"This constructor must be called for every class that is inherited from <xref:System.Windows.Media.TextFormatting.TextLine>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This constructor must be called for every class that is inherited from &lt;xref:System.Windows.Media.TextFormatting.TextLine&gt;.","pos":[0,123],"source":"This constructor must be called for every class that is inherited from <xref:System.Windows.Media.TextFormatting.TextLine>."}]},{"pos":[5303,5438],"content":"Gets the distance from the top to the baseline of the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the distance from the top to the baseline of the current <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> object."},{"pos":[5560,5621],"content":"A <xref:System.Double> that represents the baseline distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the baseline distance.","pos":[0,61],"source":"A <xref:System.Double> that represents the baseline distance."}]},{"pos":[6319,6378],"content":"Create a collapsed line based on collapsed text properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"Create a collapsed line based on collapsed text properties.","pos":[0,59]}]},{"pos":[6708,6853],"content":"A list of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextCollapsingProperties\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the collapsed text properties.","needQuote":true,"needEscape":true,"source":"A list of <xref href=\"System.Windows.Media.TextFormatting.TextCollapsingProperties\"></xref> objects that represent the collapsed text properties."},{"pos":[6942,7071],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents a collapsed line that can be displayed.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> value that represents a collapsed line that can be displayed."},{"pos":[7594,7715],"content":"Gets the number of characters following the last character of the line that may trigger reformatting of the current line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of characters following the last character of the line that may trigger reformatting of the current line.","pos":[0,121]}]},{"pos":[7840,7910],"content":"An <xref:System.Int32> value that represents the number of characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that represents the number of characters.","pos":[0,70],"source":"An <xref:System.Int32> value that represents the number of characters."}]},{"pos":[8404,8539],"content":"Releases all managed and unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextFormatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Releases all managed and unmanaged resources used by the <xref href=\"System.Windows.Media.TextFormatting.TextFormatter\"></xref> object."},{"pos":[9388,9555],"content":"Renders the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based upon the specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Renders the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> object based upon the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref>."},{"pos":[9854,10015],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object onto which the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is rendered.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> is rendered."},{"pos":[10085,10170],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the drawing origin.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Point\"></xref> value that represents the drawing origin."},{"pos":[10269,10445],"content":"An enumerated <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.InvertAxes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that indicates the inversion of the horizontal and vertical axes of the drawing surface.","needQuote":true,"needEscape":true,"source":"An enumerated <xref href=\"System.Windows.Media.TextFormatting.InvertAxes\"></xref> value that indicates the inversion of the horizontal and vertical axes of the drawing surface."},{"pos":[10919,10992],"content":"Gets the distance from the top-most to bottom-most black pixel in a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance from the top-most to bottom-most black pixel in a line.","pos":[0,73]}]},{"pos":[11112,11171],"content":"A <xref:System.Double> that represents the extent distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the extent distance.","pos":[0,59],"source":"A <xref:System.Double> that represents the extent distance."}]},{"pos":[11902,11952],"content":"Gets the previous character hit after backspacing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the previous character hit after backspacing.","pos":[0,50]}]},{"pos":[12255,12344],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object."},{"pos":[12437,12536],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object after backspacing.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object after backspacing."},{"pos":[13192,13286],"content":"Gets the character hit corresponding to the specified distance from the beginning of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the character hit corresponding to the specified distance from the beginning of the line.","pos":[0,94]}]},{"pos":[13298,13362],"content":"The text flow direction determines how the distance is measured.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The text flow direction determines how the distance is measured.","pos":[0,64]}]},{"pos":[13578,13667],"content":"A <xref:System.Double> value that represents the distance from the beginning of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; value that represents the distance from the beginning of the line.","pos":[0,89],"source":"A <xref:System.Double> value that represents the distance from the beginning of the line."}]},{"pos":[13760,13911],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">distance</ph><ept id=\"p2\">&lt;/code&gt;</ept> from the beginning of the line.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object at the specified <code>distance</code> from the beginning of the line."},{"pos":[14653,14733],"content":"Gets the distance from the beginning of the line to the specified character hit.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance from the beginning of the line to the specified character hit.","pos":[0,80]}]},{"pos":[14745,14809],"content":"The text flow direction determines how the distance is measured.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The text flow direction determines how the distance is measured.","pos":[0,64]}]},{"pos":[15068,15182],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object whose distance you want to query.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object whose distance you want to query."},{"pos":[15240,15323],"content":"A <xref:System.Double> that represents the distance from the beginning of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the distance from the beginning of the line.","pos":[0,83],"source":"A <xref:System.Double> that represents the distance from the beginning of the line."}]},{"pos":[15889,16078],"content":"Gets an enumerator for enumerating <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.IndexedGlyphRun\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator for enumerating <xref href=\"System.Windows.Media.TextFormatting.IndexedGlyphRun\"></xref> objects in the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref>."},{"pos":[16090,16276],"content":"By enumerating through the list of <xref:System.Windows.Media.TextFormatting.IndexedGlyphRun> objects, the text layout client can obtain glyph information for each text source character.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"By enumerating through the list of &lt;xref:System.Windows.Media.TextFormatting.IndexedGlyphRun&gt; objects, the text layout client can obtain glyph information for each text source character.","pos":[0,186],"source":"By enumerating through the list of <xref:System.Windows.Media.TextFormatting.IndexedGlyphRun> objects, the text layout client can obtain glyph information for each text source character."}]},{"pos":[16586,16787],"content":"An enumerator that allows you to enumerate each <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.IndexedGlyphRun\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerator that allows you to enumerate each <xref href=\"System.Windows.Media.TextFormatting.IndexedGlyphRun\"></xref> object in the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref>."},{"pos":[17506,17555],"content":"Gets the next character hit for caret navigation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the next character hit for caret navigation.","pos":[0,49]}]},{"pos":[17853,17942],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object."},{"pos":[18035,18147],"content":"The next <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based on caret navigation.","needQuote":true,"needEscape":true,"source":"The next <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object based on caret navigation."},{"pos":[18891,18944],"content":"Gets the previous character hit for caret navigation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the previous character hit for caret navigation.","pos":[0,53]}]},{"pos":[19246,19335],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object."},{"pos":[19428,19544],"content":"The previous <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object based on caret navigation.","needQuote":true,"needEscape":true,"source":"The previous <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object based on caret navigation."},{"pos":[20168,20263],"content":"Gets an array of bounding rectangles that represent the range of characters within a text line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of bounding rectangles that represent the range of characters within a text line.","pos":[0,95]}]},{"pos":[20551,20644],"content":"An <xref:System.Int32> value that represents the index of first character of specified range.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that represents the index of first character of specified range.","pos":[0,93],"source":"An <xref:System.Int32> value that represents the index of first character of specified range."}]},{"pos":[20710,20803],"content":"An <xref:System.Int32> value that represents the number of characters of the specified range.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that represents the number of characters of the specified range.","pos":[0,93],"source":"An <xref:System.Int32> value that represents the number of characters of the specified range."}]},{"pos":[20928,21050],"content":"A list of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextBounds\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects representing the bounding rectangle.","needQuote":true,"needEscape":true,"source":"A list of <xref href=\"System.Windows.Media.TextFormatting.TextBounds\"></xref> objects representing the bounding rectangle."},{"pos":[21617,21692],"content":"Gets a collection of collapsed text ranges after a line has been collapsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of collapsed text ranges after a line has been collapsed.","pos":[0,75]}]},{"pos":[21999,22127],"content":"A list of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextCollapsedRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that represent the collapsed text.","needQuote":true,"needEscape":true,"source":"A list of <xref href=\"System.Windows.Media.TextFormatting.TextCollapsedRange\"></xref> objects that represent the collapsed text."},{"pos":[22673,22737],"content":"Gets the state of the line when broken by line breaking process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the state of the line when broken by line breaking process.","pos":[0,64]}]},{"pos":[22750,23081],"content":"The return value is `null` when the line ends at the end of the paragraph.       The text formatter client may pass the return value back as a parameter to the <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> method, which allows the value to be used when formatting the next line within the same paragraph.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The return value is <ph id=\"ph1\">`null`</ph> when the line ends at the end of the paragraph.","pos":[0,74],"source":"The return value is `null` when the line ends at the end of the paragraph."},{"content":"The text formatter client may pass the return value back as a parameter to the &lt;xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A&gt; method, which allows the value to be used when formatting the next line within the same paragraph.","pos":[81,329],"source":"       The text formatter client may pass the return value back as a parameter to the <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> method, which allows the value to be used when formatting the next line within the same paragraph."}]},{"pos":[23305,23415],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextLineBreak\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that represents the line break.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.TextFormatting.TextLineBreak\"></xref> value that represents the line break."},{"pos":[23950,24092],"content":"Gets a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextRun\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in a text span that are contained within a line.","needQuote":true,"needEscape":true,"source":"Gets a collection of <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> objects in a text span that are contained within a line."},{"pos":[24462,24579],"content":"Gets a list of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextRun\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects contained within a text span.","needQuote":true,"needEscape":true,"source":"Gets a list of <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> objects contained within a text span."},{"pos":[25094,25152],"content":"Gets a value that indicates whether the line is collapsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the line is collapsed.","pos":[0,58]}]},{"pos":[25277,25439],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the line is collapsed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the line is collapsed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25956,26052],"content":"Gets a value that indicates whether content of the line overflows the specified paragraph width.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether content of the line overflows the specified paragraph width.","pos":[0,96]}]},{"pos":[26178,26367],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, it the line overflows the specified paragraph width; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, it the line overflows the specified paragraph width; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[26850,26884],"content":"Gets the height of a line of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the height of a line of text.","pos":[0,34]}]},{"pos":[27004,27064],"content":"A <xref:System.Double> that represents the text line height.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the text line height.","pos":[0,60],"source":"A <xref:System.Double> that represents the text line height."}]},{"pos":[27565,27635],"content":"Determines whether the text line is truncated in the middle of a word.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the text line is truncated in the middle of a word.","pos":[0,70]}]},{"pos":[27647,28130],"content":"The IsTruncated property value is set only when the <xref:System.Windows.TextWrapping> property of <xref:System.Windows.Media.TextFormatting.TextParagraphProperties> is set to <xref:System.Windows.TextWrapping>, and a single word is wider than the formatting paragraph width. In such situation, <xref:System.Windows.Media.TextFormatting.TextFormatter> truncates the line in the middle of the word to honor the desired behavior specified by <xref:System.Windows.TextWrapping> setting.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The IsTruncated property value is set only when the <xref:System.Windows.TextWrapping> property of <xref:System.Windows.Media.TextFormatting.TextParagraphProperties> is set to <xref:System.Windows.TextWrapping>, and a single word is wider than the formatting paragraph width. In such situation, <xref:System.Windows.Media.TextFormatting.TextFormatter> truncates the line in the middle of the word to honor the desired behavior specified by <xref:System.Windows.TextWrapping> setting.","pos":[0,483],"nodes":[{"content":"The IsTruncated property value is set only when the &lt;xref:System.Windows.TextWrapping&gt; property of &lt;xref:System.Windows.Media.TextFormatting.TextParagraphProperties&gt; is set to &lt;xref:System.Windows.TextWrapping&gt;, and a single word is wider than the formatting paragraph width.","pos":[0,275],"source":"The IsTruncated property value is set only when the <xref:System.Windows.TextWrapping> property of <xref:System.Windows.Media.TextFormatting.TextParagraphProperties> is set to <xref:System.Windows.TextWrapping>, and a single word is wider than the formatting paragraph width."},{"content":"In such situation, &lt;xref:System.Windows.Media.TextFormatting.TextFormatter&gt; truncates the line in the middle of the word to honor the desired behavior specified by &lt;xref:System.Windows.TextWrapping&gt; setting.","pos":[276,483],"source":" In such situation, <xref:System.Windows.Media.TextFormatting.TextFormatter> truncates the line in the middle of the word to honor the desired behavior specified by <xref:System.Windows.TextWrapping> setting."}]}]},{"pos":[28253,28443],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the text line is truncated in the middle of a word; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text line is truncated in the middle of a word; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28924,29047],"content":"Gets the total number of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> positions of the current line.","needQuote":true,"needEscape":true,"source":"Gets the total number of <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> positions of the current line."},{"pos":[29163,29326],"content":"An &lt;xref:System.Int32&gt; value that represents the total number of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextFormatting.TextSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> positions of the current line.","needQuote":true,"needEscape":true,"source":"An <xref:System.Int32> value that represents the total number of <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> positions of the current line."},{"pos":[29842,29937],"content":"Gets the distance from the edge of the line's highest point to the baseline marker of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance from the edge of the line's highest point to the baseline marker of the line.","pos":[0,95]}]},{"pos":[30065,30140],"content":"A <xref:System.Double> that represents the baseline distance of the marker.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the baseline distance of the marker.","pos":[0,75],"source":"A <xref:System.Double> that represents the baseline distance of the marker."}]},{"pos":[30654,30698],"content":"Gets the height of a marker for a list item.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the height of a marker for a list item.","pos":[0,44]}]},{"pos":[30824,30888],"content":"A <xref:System.Double> that represents the height of the marker.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the height of the marker.","pos":[0,64],"source":"A <xref:System.Double> that represents the height of the marker."}]},{"pos":[31405,31464],"content":"Gets the number of newline characters at the end of a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of newline characters at the end of a line.","pos":[0,59]}]},{"pos":[31587,31665],"content":"An <xref:System.Int32> value that represents the number of newline characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that represents the number of newline characters.","pos":[0,78],"source":"An <xref:System.Int32> value that represents the number of newline characters."}]},{"pos":[32183,32269],"content":"Gets the distance that black pixels extend beyond the bottom alignment edge of a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance that black pixels extend beyond the bottom alignment edge of a line.","pos":[0,86]}]},{"pos":[32396,32463],"content":"A <xref:System.Double> that represents the overhang after distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the overhang after distance.","pos":[0,67],"source":"A <xref:System.Double> that represents the overhang after distance."}]},{"pos":[32991,33087],"content":"Gets the distance that black pixels extend prior to the left leading alignment edge of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance that black pixels extend prior to the left leading alignment edge of the line.","pos":[0,96]}]},{"pos":[33216,33285],"content":"A <xref:System.Double> that represents the overhang leading distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the overhang leading distance.","pos":[0,69],"source":"A <xref:System.Double> that represents the overhang leading distance."}]},{"pos":[33820,33919],"content":"Gets the distance that black pixels extend following the right trailing alignment edge of the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance that black pixels extend following the right trailing alignment edge of the line.","pos":[0,99]}]},{"pos":[34049,34119],"content":"A <xref:System.Double> that represents the overhang trailing distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the overhang trailing distance.","pos":[0,70],"source":"A <xref:System.Double> that represents the overhang trailing distance."}]},{"pos":[34635,34701],"content":"Get or sets the PixelsPerDip at which the text should be rendered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get or sets the PixelsPerDip at which the text should be rendered.","pos":[0,66]}]},{"pos":[34823,34854],"content":"The current PixelsPerDip value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current PixelsPerDip value.","pos":[0,31]}]},{"pos":[35331,35411],"content":"Gets the distance from the start of a paragraph to the starting point of a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance from the start of a paragraph to the starting point of a line.","pos":[0,80]}]},{"pos":[35530,35650],"content":"A <xref:System.Double> value that represents the distance from the start of a paragraph to the starting point of a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; value that represents the distance from the start of a paragraph to the starting point of a line.","pos":[0,120],"source":"A <xref:System.Double> value that represents the distance from the start of a paragraph to the starting point of a line."}]},{"pos":[36155,36222],"content":"Gets the distance from the top to the baseline of the line of text.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the distance from the top to the baseline of the line of text.","pos":[0,67]}]},{"pos":[36348,36420],"content":"A <xref:System.Double> value that represents the text baseline distance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; value that represents the text baseline distance.","pos":[0,72],"source":"A <xref:System.Double> value that represents the text baseline distance."}]},{"pos":[36922,36984],"content":"Gets the height of the text and any other content in the line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the height of the text and any other content in the line.","pos":[0,62]}]},{"pos":[36996,37142],"content":"The TextHeight may differ from the <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> property if the client specified the line height.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TextHeight may differ from the &lt;xref:System.Windows.Media.TextFormatting.TextLine.Height%2A&gt; property if the client specified the line height.","pos":[0,146],"source":"The TextHeight may differ from the <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> property if the client specified the line height."}]},{"pos":[37266,37295],"content":"A <xref:System.Double> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; value.","pos":[0,29],"source":"A <xref:System.Double> value."}]},{"pos":[37865,37953],"content":"Gets the number of whitespace code points beyond the last non-blank character in a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of whitespace code points beyond the last non-blank character in a line.","pos":[0,88]}]},{"pos":[38087,38215],"content":"An <xref:System.Int32> value that represents the number of whitespace code points beyond the last non-blank character in a line.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value that represents the number of whitespace code points beyond the last non-blank character in a line.","pos":[0,128],"source":"An <xref:System.Int32> value that represents the number of whitespace code points beyond the last non-blank character in a line."}]},{"pos":[38704,38779],"content":"Gets the width of a line of text, excluding trailing whitespace characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the width of a line of text, excluding trailing whitespace characters.","pos":[0,75]}]},{"pos":[38898,38999],"content":"A <xref:System.Double> that represents the text line width, excluding trailing whitespace characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the text line width, excluding trailing whitespace characters.","pos":[0,101],"source":"A <xref:System.Double> that represents the text line width, excluding trailing whitespace characters."}]},{"pos":[39604,39679],"content":"Gets the width of a line of text, including trailing whitespace characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the width of a line of text, including trailing whitespace characters.","pos":[0,75]}]},{"pos":[39825,39926],"content":"A <xref:System.Double> that represents the text line width, including trailing whitespace characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Double&gt; that represents the text line width, including trailing whitespace characters.","pos":[0,101],"source":"A <xref:System.Double> that represents the text line width, including trailing whitespace characters."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TextFormatting.TextLine\n  id: TextLine\n  children:\n  - System.Windows.Media.TextFormatting.TextLine.#ctor\n  - System.Windows.Media.TextFormatting.TextLine.#ctor(System.Double)\n  - System.Windows.Media.TextFormatting.TextLine.Baseline\n  - System.Windows.Media.TextFormatting.TextLine.Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])\n  - System.Windows.Media.TextFormatting.TextLine.DependentLength\n  - System.Windows.Media.TextFormatting.TextLine.Dispose\n  - System.Windows.Media.TextFormatting.TextLine.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Windows.Media.TextFormatting.InvertAxes)\n  - System.Windows.Media.TextFormatting.TextLine.Extent\n  - System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  - System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(System.Double)\n  - System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  - System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns\n  - System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  - System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  - System.Windows.Media.TextFormatting.TextLine.GetTextBounds(System.Int32,System.Int32)\n  - System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges\n  - System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak\n  - System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans\n  - System.Windows.Media.TextFormatting.TextLine.HasCollapsed\n  - System.Windows.Media.TextFormatting.TextLine.HasOverflowed\n  - System.Windows.Media.TextFormatting.TextLine.Height\n  - System.Windows.Media.TextFormatting.TextLine.IsTruncated\n  - System.Windows.Media.TextFormatting.TextLine.Length\n  - System.Windows.Media.TextFormatting.TextLine.MarkerBaseline\n  - System.Windows.Media.TextFormatting.TextLine.MarkerHeight\n  - System.Windows.Media.TextFormatting.TextLine.NewlineLength\n  - System.Windows.Media.TextFormatting.TextLine.OverhangAfter\n  - System.Windows.Media.TextFormatting.TextLine.OverhangLeading\n  - System.Windows.Media.TextFormatting.TextLine.OverhangTrailing\n  - System.Windows.Media.TextFormatting.TextLine.PixelsPerDip\n  - System.Windows.Media.TextFormatting.TextLine.Start\n  - System.Windows.Media.TextFormatting.TextLine.TextBaseline\n  - System.Windows.Media.TextFormatting.TextLine.TextHeight\n  - System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength\n  - System.Windows.Media.TextFormatting.TextLine.Width\n  - System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace\n  langs:\n  - csharp\n  name: TextLine\n  nameWithType: TextLine\n  fullName: System.Windows.Media.TextFormatting.TextLine\n  type: Class\n  summary: Provides an abstract class for supporting formatting services to a line of text.\n  syntax:\n    content: 'public abstract class TextLine : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: TextLine()\n  nameWithType: TextLine.TextLine()\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextLine()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> class.\n  syntax:\n    content: protected TextLine ();\n    parameters: []\n  overload: System.Windows.Media.TextFormatting.TextLine.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: TextLine(Double)\n  nameWithType: TextLine.TextLine(Double)\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextLine(Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> class.\n  remarks: This constructor must be called for every class that is inherited from <xref:System.Windows.Media.TextFormatting.TextLine>.\n  syntax:\n    content: protected TextLine (double pixelsPerDip);\n    parameters:\n    - id: pixelsPerDip\n      type: System.Double\n      description: '`pixelsPerDip` should be set to the TextSource''s PixelsPerDip value.'\n  overload: System.Windows.Media.TextFormatting.TextLine.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Baseline\n  id: Baseline\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Baseline\n  nameWithType: TextLine.Baseline\n  fullName: System.Windows.Media.TextFormatting.TextLine.Baseline\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance from the top to the baseline of the current <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> object.\n  syntax:\n    content: public abstract double Baseline { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the baseline distance.\n  overload: System.Windows.Media.TextFormatting.TextLine.Baseline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])\n  id: Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Collapse(TextCollapsingProperties[])\n  nameWithType: TextLine.Collapse(TextCollapsingProperties[])\n  fullName: System.Windows.Media.TextFormatting.TextLine.Collapse(TextCollapsingProperties[])\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Create a collapsed line based on collapsed text properties.\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.TextLine Collapse (System.Windows.Media.TextFormatting.TextCollapsingProperties[] collapsingPropertiesList);\n    parameters:\n    - id: collapsingPropertiesList\n      type: System.Windows.Media.TextFormatting.TextCollapsingProperties[]\n      description: A list of <xref href=\"System.Windows.Media.TextFormatting.TextCollapsingProperties\"></xref> objects that represent the collapsed text properties.\n    return:\n      type: System.Windows.Media.TextFormatting.TextLine\n      description: A <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> value that represents a collapsed line that can be displayed.\n  overload: System.Windows.Media.TextFormatting.TextLine.Collapse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.DependentLength\n  id: DependentLength\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: DependentLength\n  nameWithType: TextLine.DependentLength\n  fullName: System.Windows.Media.TextFormatting.TextLine.DependentLength\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the number of characters following the last character of the line that may trigger reformatting of the current line.\n  syntax:\n    content: public abstract int DependentLength { get; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the number of characters.\n  overload: System.Windows.Media.TextFormatting.TextLine.DependentLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Dispose\n  id: Dispose\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: TextLine.Dispose()\n  fullName: System.Windows.Media.TextFormatting.TextLine.Dispose()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Releases all managed and unmanaged resources used by the <xref href=\"System.Windows.Media.TextFormatting.TextFormatter\"></xref> object.\n  syntax:\n    content: public abstract void Dispose ();\n    parameters: []\n  overload: System.Windows.Media.TextFormatting.TextLine.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Windows.Media.TextFormatting.InvertAxes)\n  id: Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Windows.Media.TextFormatting.InvertAxes)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Draw(DrawingContext,Point,InvertAxes)\n  nameWithType: TextLine.Draw(DrawingContext,Point,InvertAxes)\n  fullName: System.Windows.Media.TextFormatting.TextLine.Draw(DrawingContext,Point,InvertAxes)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Renders the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> object based upon the specified <xref href=\"System.Windows.Media.DrawingContext\"></xref>.\n  syntax:\n    content: public abstract void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Point origin, System.Windows.Media.TextFormatting.InvertAxes inversion);\n    parameters:\n    - id: drawingContext\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> object onto which the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref> is rendered.\n    - id: origin\n      type: System.Windows.Point\n      description: A <xref href=\"System.Windows.Point\"></xref> value that represents the drawing origin.\n    - id: inversion\n      type: System.Windows.Media.TextFormatting.InvertAxes\n      description: An enumerated <xref href=\"System.Windows.Media.TextFormatting.InvertAxes\"></xref> value that indicates the inversion of the horizontal and vertical axes of the drawing surface.\n  overload: System.Windows.Media.TextFormatting.TextLine.Draw*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Extent\n  id: Extent\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Extent\n  nameWithType: TextLine.Extent\n  fullName: System.Windows.Media.TextFormatting.TextLine.Extent\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance from the top-most to bottom-most black pixel in a line.\n  syntax:\n    content: public abstract double Extent { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the extent distance.\n  overload: System.Windows.Media.TextFormatting.TextLine.Extent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  id: GetBackspaceCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetBackspaceCaretCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetBackspaceCaretCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(CharacterHit)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the previous character hit after backspacing.\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.CharacterHit GetBackspaceCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);\n    parameters:\n    - id: characterHit\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The current <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object.\n    return:\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object after backspacing.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(System.Double)\n  id: GetCharacterHitFromDistance(System.Double)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetCharacterHitFromDistance(Double)\n  nameWithType: TextLine.GetCharacterHitFromDistance(Double)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the character hit corresponding to the specified distance from the beginning of the line.\n  remarks: The text flow direction determines how the distance is measured.\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.CharacterHit GetCharacterHitFromDistance (double distance);\n    parameters:\n    - id: distance\n      type: System.Double\n      description: A <xref:System.Double> value that represents the distance from the beginning of the line.\n    return:\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object at the specified <code>distance</code> from the beginning of the line.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  id: GetDistanceFromCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetDistanceFromCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetDistanceFromCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(CharacterHit)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance from the beginning of the line to the specified character hit.\n  remarks: The text flow direction determines how the distance is measured.\n  syntax:\n    content: public abstract double GetDistanceFromCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);\n    parameters:\n    - id: characterHit\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object whose distance you want to query.\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the distance from the beginning of the line.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns\n  id: GetIndexedGlyphRuns\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetIndexedGlyphRuns()\n  nameWithType: TextLine.GetIndexedGlyphRuns()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets an enumerator for enumerating <xref href=\"System.Windows.Media.TextFormatting.IndexedGlyphRun\"></xref> objects in the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref>.\n  remarks: By enumerating through the list of <xref:System.Windows.Media.TextFormatting.IndexedGlyphRun> objects, the text layout client can obtain glyph information for each text source character.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.Windows.Media.TextFormatting.IndexedGlyphRun> GetIndexedGlyphRuns ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.TextFormatting.IndexedGlyphRun}\n      description: An enumerator that allows you to enumerate each <xref href=\"System.Windows.Media.TextFormatting.IndexedGlyphRun\"></xref> object in the <xref href=\"System.Windows.Media.TextFormatting.TextLine\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  id: GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetNextCaretCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetNextCaretCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(CharacterHit)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the next character hit for caret navigation.\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);\n    parameters:\n    - id: characterHit\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The current <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object.\n    return:\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The next <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object based on caret navigation.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  id: GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetPreviousCaretCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetPreviousCaretCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(CharacterHit)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the previous character hit for caret navigation.\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);\n    parameters:\n    - id: characterHit\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The current <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object.\n    return:\n      type: System.Windows.Media.TextFormatting.CharacterHit\n      description: The previous <xref href=\"System.Windows.Media.TextFormatting.CharacterHit\"></xref> object based on caret navigation.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextBounds(System.Int32,System.Int32)\n  id: GetTextBounds(System.Int32,System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetTextBounds(Int32,Int32)\n  nameWithType: TextLine.GetTextBounds(Int32,Int32)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextBounds(Int32,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets an array of bounding rectangles that represent the range of characters within a text line.\n  syntax:\n    content: public abstract System.Collections.Generic.IList<System.Windows.Media.TextFormatting.TextBounds> GetTextBounds (int firstTextSourceCharacterIndex, int textLength);\n    parameters:\n    - id: firstTextSourceCharacterIndex\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the index of first character of specified range.\n    - id: textLength\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the number of characters of the specified range.\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Media.TextFormatting.TextBounds}\n      description: A list of <xref href=\"System.Windows.Media.TextFormatting.TextBounds\"></xref> objects representing the bounding rectangle.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetTextBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges\n  id: GetTextCollapsedRanges\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetTextCollapsedRanges()\n  nameWithType: TextLine.GetTextCollapsedRanges()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets a collection of collapsed text ranges after a line has been collapsed.\n  syntax:\n    content: public abstract System.Collections.Generic.IList<System.Windows.Media.TextFormatting.TextCollapsedRange> GetTextCollapsedRanges ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Media.TextFormatting.TextCollapsedRange}\n      description: A list of <xref href=\"System.Windows.Media.TextFormatting.TextCollapsedRange\"></xref> objects that represent the collapsed text.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak\n  id: GetTextLineBreak\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetTextLineBreak()\n  nameWithType: TextLine.GetTextLineBreak()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the state of the line when broken by line breaking process.\n  remarks: \"The return value is `null` when the line ends at the end of the paragraph.  \\n  \\n The text formatter client may pass the return value back as a parameter to the <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> method, which allows the value to be used when formatting the next line within the same paragraph.\"\n  syntax:\n    content: public abstract System.Windows.Media.TextFormatting.TextLineBreak GetTextLineBreak ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TextFormatting.TextLineBreak\n      description: A <xref href=\"System.Windows.Media.TextFormatting.TextLineBreak\"></xref> value that represents the line break.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans\n  id: GetTextRunSpans\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: GetTextRunSpans()\n  nameWithType: TextLine.GetTextRunSpans()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets a collection of <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> objects in a text span that are contained within a line.\n  syntax:\n    content: public abstract System.Collections.Generic.IList<System.Windows.Media.TextFormatting.TextSpan<System.Windows.Media.TextFormatting.TextRun>> GetTextRunSpans ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Windows.Media.TextFormatting.TextSpan{System.Windows.Media.TextFormatting.TextRun}}\n      description: Gets a list of <xref href=\"System.Windows.Media.TextFormatting.TextRun\"></xref> objects contained within a text span.\n  overload: System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.HasCollapsed\n  id: HasCollapsed\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: HasCollapsed\n  nameWithType: TextLine.HasCollapsed\n  fullName: System.Windows.Media.TextFormatting.TextLine.HasCollapsed\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets a value that indicates whether the line is collapsed.\n  syntax:\n    content: public abstract bool HasCollapsed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the line is collapsed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextLine.HasCollapsed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.HasOverflowed\n  id: HasOverflowed\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: HasOverflowed\n  nameWithType: TextLine.HasOverflowed\n  fullName: System.Windows.Media.TextFormatting.TextLine.HasOverflowed\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets a value that indicates whether content of the line overflows the specified paragraph width.\n  syntax:\n    content: public abstract bool HasOverflowed { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, it the line overflows the specified paragraph width; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextLine.HasOverflowed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Height\n  id: Height\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Height\n  nameWithType: TextLine.Height\n  fullName: System.Windows.Media.TextFormatting.TextLine.Height\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the height of a line of text.\n  syntax:\n    content: public abstract double Height { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the text line height.\n  overload: System.Windows.Media.TextFormatting.TextLine.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.IsTruncated\n  id: IsTruncated\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: IsTruncated\n  nameWithType: TextLine.IsTruncated\n  fullName: System.Windows.Media.TextFormatting.TextLine.IsTruncated\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Determines whether the text line is truncated in the middle of a word.\n  remarks: The IsTruncated property value is set only when the <xref:System.Windows.TextWrapping> property of <xref:System.Windows.Media.TextFormatting.TextParagraphProperties> is set to <xref:System.Windows.TextWrapping>, and a single word is wider than the formatting paragraph width. In such situation, <xref:System.Windows.Media.TextFormatting.TextFormatter> truncates the line in the middle of the word to honor the desired behavior specified by <xref:System.Windows.TextWrapping> setting.\n  syntax:\n    content: public virtual bool IsTruncated { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the text line is truncated in the middle of a word; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.TextFormatting.TextLine.IsTruncated*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Length\n  id: Length\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Length\n  nameWithType: TextLine.Length\n  fullName: System.Windows.Media.TextFormatting.TextLine.Length\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the total number of <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> positions of the current line.\n  syntax:\n    content: public abstract int Length { get; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the total number of <xref href=\"System.Windows.Media.TextFormatting.TextSource\"></xref> positions of the current line.\n  overload: System.Windows.Media.TextFormatting.TextLine.Length*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.MarkerBaseline\n  id: MarkerBaseline\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: MarkerBaseline\n  nameWithType: TextLine.MarkerBaseline\n  fullName: System.Windows.Media.TextFormatting.TextLine.MarkerBaseline\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance from the edge of the line's highest point to the baseline marker of the line.\n  syntax:\n    content: public abstract double MarkerBaseline { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the baseline distance of the marker.\n  overload: System.Windows.Media.TextFormatting.TextLine.MarkerBaseline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.MarkerHeight\n  id: MarkerHeight\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: MarkerHeight\n  nameWithType: TextLine.MarkerHeight\n  fullName: System.Windows.Media.TextFormatting.TextLine.MarkerHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the height of a marker for a list item.\n  syntax:\n    content: public abstract double MarkerHeight { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the height of the marker.\n  overload: System.Windows.Media.TextFormatting.TextLine.MarkerHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.NewlineLength\n  id: NewlineLength\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: NewlineLength\n  nameWithType: TextLine.NewlineLength\n  fullName: System.Windows.Media.TextFormatting.TextLine.NewlineLength\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the number of newline characters at the end of a line.\n  syntax:\n    content: public abstract int NewlineLength { get; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the number of newline characters.\n  overload: System.Windows.Media.TextFormatting.TextLine.NewlineLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangAfter\n  id: OverhangAfter\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: OverhangAfter\n  nameWithType: TextLine.OverhangAfter\n  fullName: System.Windows.Media.TextFormatting.TextLine.OverhangAfter\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance that black pixels extend beyond the bottom alignment edge of a line.\n  syntax:\n    content: public abstract double OverhangAfter { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the overhang after distance.\n  overload: System.Windows.Media.TextFormatting.TextLine.OverhangAfter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangLeading\n  id: OverhangLeading\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: OverhangLeading\n  nameWithType: TextLine.OverhangLeading\n  fullName: System.Windows.Media.TextFormatting.TextLine.OverhangLeading\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance that black pixels extend prior to the left leading alignment edge of the line.\n  syntax:\n    content: public abstract double OverhangLeading { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the overhang leading distance.\n  overload: System.Windows.Media.TextFormatting.TextLine.OverhangLeading*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangTrailing\n  id: OverhangTrailing\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: OverhangTrailing\n  nameWithType: TextLine.OverhangTrailing\n  fullName: System.Windows.Media.TextFormatting.TextLine.OverhangTrailing\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance that black pixels extend following the right trailing alignment edge of the line.\n  syntax:\n    content: public abstract double OverhangTrailing { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the overhang trailing distance.\n  overload: System.Windows.Media.TextFormatting.TextLine.OverhangTrailing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.PixelsPerDip\n  id: PixelsPerDip\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: PixelsPerDip\n  nameWithType: TextLine.PixelsPerDip\n  fullName: System.Windows.Media.TextFormatting.TextLine.PixelsPerDip\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Get or sets the PixelsPerDip at which the text should be rendered.\n  syntax:\n    content: public double PixelsPerDip { get; set; }\n    return:\n      type: System.Double\n      description: The current PixelsPerDip value.\n  overload: System.Windows.Media.TextFormatting.TextLine.PixelsPerDip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Start\n  id: Start\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Start\n  nameWithType: TextLine.Start\n  fullName: System.Windows.Media.TextFormatting.TextLine.Start\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance from the start of a paragraph to the starting point of a line.\n  syntax:\n    content: public abstract double Start { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> value that represents the distance from the start of a paragraph to the starting point of a line.\n  overload: System.Windows.Media.TextFormatting.TextLine.Start*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.TextBaseline\n  id: TextBaseline\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: TextBaseline\n  nameWithType: TextLine.TextBaseline\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextBaseline\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the distance from the top to the baseline of the line of text.\n  syntax:\n    content: public abstract double TextBaseline { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> value that represents the text baseline distance.\n  overload: System.Windows.Media.TextFormatting.TextLine.TextBaseline*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.TextHeight\n  id: TextHeight\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: TextHeight\n  nameWithType: TextLine.TextHeight\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the height of the text and any other content in the line.\n  remarks: The TextHeight may differ from the <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> property if the client specified the line height.\n  syntax:\n    content: public abstract double TextHeight { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> value.\n  overload: System.Windows.Media.TextFormatting.TextLine.TextHeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength\n  id: TrailingWhitespaceLength\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: TrailingWhitespaceLength\n  nameWithType: TextLine.TrailingWhitespaceLength\n  fullName: System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the number of whitespace code points beyond the last non-blank character in a line.\n  syntax:\n    content: public abstract int TrailingWhitespaceLength { get; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value that represents the number of whitespace code points beyond the last non-blank character in a line.\n  overload: System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.Width\n  id: Width\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: Width\n  nameWithType: TextLine.Width\n  fullName: System.Windows.Media.TextFormatting.TextLine.Width\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the width of a line of text, excluding trailing whitespace characters.\n  syntax:\n    content: public abstract double Width { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the text line width, excluding trailing whitespace characters.\n  overload: System.Windows.Media.TextFormatting.TextLine.Width*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace\n  id: WidthIncludingTrailingWhitespace\n  parent: System.Windows.Media.TextFormatting.TextLine\n  langs:\n  - csharp\n  name: WidthIncludingTrailingWhitespace\n  nameWithType: TextLine.WidthIncludingTrailingWhitespace\n  fullName: System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  summary: Gets the width of a line of text, including trailing whitespace characters.\n  syntax:\n    content: public abstract double WidthIncludingTrailingWhitespace { get; }\n    return:\n      type: System.Double\n      description: A <xref:System.Double> that represents the text line width, including trailing whitespace characters.\n  overload: System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.TextFormatting.TextLine.#ctor\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextLine()\n  nameWithType: TextLine.TextLine()\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextLine()\n- uid: System.Windows.Media.TextFormatting.TextLine.#ctor(System.Double)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextLine(Double)\n  nameWithType: TextLine.TextLine(Double)\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextLine(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.TextFormatting.TextLine.Baseline\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Baseline\n  nameWithType: TextLine.Baseline\n  fullName: System.Windows.Media.TextFormatting.TextLine.Baseline\n- uid: System.Windows.Media.TextFormatting.TextLine.Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Collapse(TextCollapsingProperties[])\n  nameWithType: TextLine.Collapse(TextCollapsingProperties[])\n  fullName: System.Windows.Media.TextFormatting.TextLine.Collapse(TextCollapsingProperties[])\n- uid: System.Windows.Media.TextFormatting.TextLine\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: TextLine\n  nameWithType: TextLine\n  fullName: System.Windows.Media.TextFormatting.TextLine\n- uid: System.Windows.Media.TextFormatting.TextCollapsingProperties[]\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: TextCollapsingProperties\n  nameWithType: TextCollapsingProperties\n  fullName: System.Windows.Media.TextFormatting.TextCollapsingProperties[]\n  spec.csharp:\n  - uid: System.Windows.Media.TextFormatting.TextCollapsingProperties\n    name: TextCollapsingProperties\n    nameWithType: TextCollapsingProperties\n    fullName: TextCollapsingProperties[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Media.TextFormatting.TextLine.DependentLength\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: DependentLength\n  nameWithType: TextLine.DependentLength\n  fullName: System.Windows.Media.TextFormatting.TextLine.DependentLength\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextFormatting.TextLine.Dispose\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Dispose()\n  nameWithType: TextLine.Dispose()\n  fullName: System.Windows.Media.TextFormatting.TextLine.Dispose()\n- uid: System.Windows.Media.TextFormatting.TextLine.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Windows.Media.TextFormatting.InvertAxes)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Draw(DrawingContext,Point,InvertAxes)\n  nameWithType: TextLine.Draw(DrawingContext,Point,InvertAxes)\n  fullName: System.Windows.Media.TextFormatting.TextLine.Draw(DrawingContext,Point,InvertAxes)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.TextFormatting.InvertAxes\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: InvertAxes\n  nameWithType: InvertAxes\n  fullName: System.Windows.Media.TextFormatting.InvertAxes\n- uid: System.Windows.Media.TextFormatting.TextLine.Extent\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Extent\n  nameWithType: TextLine.Extent\n  fullName: System.Windows.Media.TextFormatting.TextLine.Extent\n- uid: System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetBackspaceCaretCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetBackspaceCaretCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit(CharacterHit)\n- uid: System.Windows.Media.TextFormatting.CharacterHit\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: CharacterHit\n  nameWithType: CharacterHit\n  fullName: System.Windows.Media.TextFormatting.CharacterHit\n- uid: System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(System.Double)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetCharacterHitFromDistance(Double)\n  nameWithType: TextLine.GetCharacterHitFromDistance(Double)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance(Double)\n- uid: System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetDistanceFromCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetDistanceFromCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit(CharacterHit)\n- uid: System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetIndexedGlyphRuns()\n  nameWithType: TextLine.GetIndexedGlyphRuns()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns()\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.TextFormatting.IndexedGlyphRun}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<IndexedGlyphRun>\n  nameWithType: IEnumerable<IndexedGlyphRun>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.TextFormatting.IndexedGlyphRun>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Media.TextFormatting.IndexedGlyphRun>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.TextFormatting.IndexedGlyphRun\n    name: IndexedGlyphRun\n    nameWithType: IndexedGlyphRun\n    fullName: IndexedGlyphRun\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetNextCaretCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetNextCaretCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit(CharacterHit)\n- uid: System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetPreviousCaretCharacterHit(CharacterHit)\n  nameWithType: TextLine.GetPreviousCaretCharacterHit(CharacterHit)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit(CharacterHit)\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextBounds(System.Int32,System.Int32)\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextBounds(Int32,Int32)\n  nameWithType: TextLine.GetTextBounds(Int32,Int32)\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextBounds(Int32,Int32)\n- uid: System.Collections.Generic.IList{System.Windows.Media.TextFormatting.TextBounds}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<TextBounds>\n  nameWithType: IList<TextBounds>\n  fullName: System.Collections.Generic.IList<System.Windows.Media.TextFormatting.TextBounds>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Windows.Media.TextFormatting.TextBounds>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.TextFormatting.TextBounds\n    name: TextBounds\n    nameWithType: TextBounds\n    fullName: TextBounds\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextCollapsedRanges()\n  nameWithType: TextLine.GetTextCollapsedRanges()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges()\n- uid: System.Collections.Generic.IList{System.Windows.Media.TextFormatting.TextCollapsedRange}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<TextCollapsedRange>\n  nameWithType: IList<TextCollapsedRange>\n  fullName: System.Collections.Generic.IList<System.Windows.Media.TextFormatting.TextCollapsedRange>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Windows.Media.TextFormatting.TextCollapsedRange>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.TextFormatting.TextCollapsedRange\n    name: TextCollapsedRange\n    nameWithType: TextCollapsedRange\n    fullName: TextCollapsedRange\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextLineBreak()\n  nameWithType: TextLine.GetTextLineBreak()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak()\n- uid: System.Windows.Media.TextFormatting.TextLineBreak\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: TextLineBreak\n  nameWithType: TextLineBreak\n  fullName: System.Windows.Media.TextFormatting.TextLineBreak\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextRunSpans()\n  nameWithType: TextLine.GetTextRunSpans()\n  fullName: System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans()\n- uid: System.Collections.Generic.IList{System.Windows.Media.TextFormatting.TextSpan{System.Windows.Media.TextFormatting.TextRun}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<TextSpan<TextRun>>\n  nameWithType: IList<TextSpan<TextRun>>\n  fullName: System.Collections.Generic.IList<System.Windows.Media.TextFormatting.TextSpan<System.Windows.Media.TextFormatting.TextRun>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Windows.Media.TextFormatting.TextSpan<System.Windows.Media.TextFormatting.TextRun>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.TextFormatting.TextSpan`1\n    name: TextSpan\n    nameWithType: TextSpan\n    fullName: TextSpan<System.Windows.Media.TextFormatting.TextRun>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Media.TextFormatting.TextRun\n    name: TextRun\n    nameWithType: TextRun\n    fullName: TextRun\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.TextFormatting.TextLine.HasCollapsed\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: HasCollapsed\n  nameWithType: TextLine.HasCollapsed\n  fullName: System.Windows.Media.TextFormatting.TextLine.HasCollapsed\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextFormatting.TextLine.HasOverflowed\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: HasOverflowed\n  nameWithType: TextLine.HasOverflowed\n  fullName: System.Windows.Media.TextFormatting.TextLine.HasOverflowed\n- uid: System.Windows.Media.TextFormatting.TextLine.Height\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Height\n  nameWithType: TextLine.Height\n  fullName: System.Windows.Media.TextFormatting.TextLine.Height\n- uid: System.Windows.Media.TextFormatting.TextLine.IsTruncated\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: IsTruncated\n  nameWithType: TextLine.IsTruncated\n  fullName: System.Windows.Media.TextFormatting.TextLine.IsTruncated\n- uid: System.Windows.Media.TextFormatting.TextLine.Length\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Length\n  nameWithType: TextLine.Length\n  fullName: System.Windows.Media.TextFormatting.TextLine.Length\n- uid: System.Windows.Media.TextFormatting.TextLine.MarkerBaseline\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: MarkerBaseline\n  nameWithType: TextLine.MarkerBaseline\n  fullName: System.Windows.Media.TextFormatting.TextLine.MarkerBaseline\n- uid: System.Windows.Media.TextFormatting.TextLine.MarkerHeight\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: MarkerHeight\n  nameWithType: TextLine.MarkerHeight\n  fullName: System.Windows.Media.TextFormatting.TextLine.MarkerHeight\n- uid: System.Windows.Media.TextFormatting.TextLine.NewlineLength\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: NewlineLength\n  nameWithType: TextLine.NewlineLength\n  fullName: System.Windows.Media.TextFormatting.TextLine.NewlineLength\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangAfter\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: OverhangAfter\n  nameWithType: TextLine.OverhangAfter\n  fullName: System.Windows.Media.TextFormatting.TextLine.OverhangAfter\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangLeading\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: OverhangLeading\n  nameWithType: TextLine.OverhangLeading\n  fullName: System.Windows.Media.TextFormatting.TextLine.OverhangLeading\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangTrailing\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: OverhangTrailing\n  nameWithType: TextLine.OverhangTrailing\n  fullName: System.Windows.Media.TextFormatting.TextLine.OverhangTrailing\n- uid: System.Windows.Media.TextFormatting.TextLine.PixelsPerDip\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: PixelsPerDip\n  nameWithType: TextLine.PixelsPerDip\n  fullName: System.Windows.Media.TextFormatting.TextLine.PixelsPerDip\n- uid: System.Windows.Media.TextFormatting.TextLine.Start\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Start\n  nameWithType: TextLine.Start\n  fullName: System.Windows.Media.TextFormatting.TextLine.Start\n- uid: System.Windows.Media.TextFormatting.TextLine.TextBaseline\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextBaseline\n  nameWithType: TextLine.TextBaseline\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextBaseline\n- uid: System.Windows.Media.TextFormatting.TextLine.TextHeight\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextHeight\n  nameWithType: TextLine.TextHeight\n  fullName: System.Windows.Media.TextFormatting.TextLine.TextHeight\n- uid: System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TrailingWhitespaceLength\n  nameWithType: TextLine.TrailingWhitespaceLength\n  fullName: System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength\n- uid: System.Windows.Media.TextFormatting.TextLine.Width\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Width\n  nameWithType: TextLine.Width\n  fullName: System.Windows.Media.TextFormatting.TextLine.Width\n- uid: System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: WidthIncludingTrailingWhitespace\n  nameWithType: TextLine.WidthIncludingTrailingWhitespace\n  fullName: System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace\n- uid: System.Windows.Media.TextFormatting.TextLine.#ctor*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextLine\n  nameWithType: TextLine.TextLine\n- uid: System.Windows.Media.TextFormatting.TextLine.Baseline*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Baseline\n  nameWithType: TextLine.Baseline\n- uid: System.Windows.Media.TextFormatting.TextLine.Collapse*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Collapse\n  nameWithType: TextLine.Collapse\n- uid: System.Windows.Media.TextFormatting.TextLine.DependentLength*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: DependentLength\n  nameWithType: TextLine.DependentLength\n- uid: System.Windows.Media.TextFormatting.TextLine.Dispose*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Dispose\n  nameWithType: TextLine.Dispose\n- uid: System.Windows.Media.TextFormatting.TextLine.Draw*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Draw\n  nameWithType: TextLine.Draw\n- uid: System.Windows.Media.TextFormatting.TextLine.Extent*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Extent\n  nameWithType: TextLine.Extent\n- uid: System.Windows.Media.TextFormatting.TextLine.GetBackspaceCaretCharacterHit*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetBackspaceCaretCharacterHit\n  nameWithType: TextLine.GetBackspaceCaretCharacterHit\n- uid: System.Windows.Media.TextFormatting.TextLine.GetCharacterHitFromDistance*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetCharacterHitFromDistance\n  nameWithType: TextLine.GetCharacterHitFromDistance\n- uid: System.Windows.Media.TextFormatting.TextLine.GetDistanceFromCharacterHit*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetDistanceFromCharacterHit\n  nameWithType: TextLine.GetDistanceFromCharacterHit\n- uid: System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetIndexedGlyphRuns\n  nameWithType: TextLine.GetIndexedGlyphRuns\n- uid: System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetNextCaretCharacterHit\n  nameWithType: TextLine.GetNextCaretCharacterHit\n- uid: System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetPreviousCaretCharacterHit\n  nameWithType: TextLine.GetPreviousCaretCharacterHit\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextBounds*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextBounds\n  nameWithType: TextLine.GetTextBounds\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextCollapsedRanges\n  nameWithType: TextLine.GetTextCollapsedRanges\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextLineBreak\n  nameWithType: TextLine.GetTextLineBreak\n- uid: System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: GetTextRunSpans\n  nameWithType: TextLine.GetTextRunSpans\n- uid: System.Windows.Media.TextFormatting.TextLine.HasCollapsed*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: HasCollapsed\n  nameWithType: TextLine.HasCollapsed\n- uid: System.Windows.Media.TextFormatting.TextLine.HasOverflowed*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: HasOverflowed\n  nameWithType: TextLine.HasOverflowed\n- uid: System.Windows.Media.TextFormatting.TextLine.Height*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Height\n  nameWithType: TextLine.Height\n- uid: System.Windows.Media.TextFormatting.TextLine.IsTruncated*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: IsTruncated\n  nameWithType: TextLine.IsTruncated\n- uid: System.Windows.Media.TextFormatting.TextLine.Length*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Length\n  nameWithType: TextLine.Length\n- uid: System.Windows.Media.TextFormatting.TextLine.MarkerBaseline*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: MarkerBaseline\n  nameWithType: TextLine.MarkerBaseline\n- uid: System.Windows.Media.TextFormatting.TextLine.MarkerHeight*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: MarkerHeight\n  nameWithType: TextLine.MarkerHeight\n- uid: System.Windows.Media.TextFormatting.TextLine.NewlineLength*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: NewlineLength\n  nameWithType: TextLine.NewlineLength\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangAfter*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: OverhangAfter\n  nameWithType: TextLine.OverhangAfter\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangLeading*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: OverhangLeading\n  nameWithType: TextLine.OverhangLeading\n- uid: System.Windows.Media.TextFormatting.TextLine.OverhangTrailing*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: OverhangTrailing\n  nameWithType: TextLine.OverhangTrailing\n- uid: System.Windows.Media.TextFormatting.TextLine.PixelsPerDip*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: PixelsPerDip\n  nameWithType: TextLine.PixelsPerDip\n- uid: System.Windows.Media.TextFormatting.TextLine.Start*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Start\n  nameWithType: TextLine.Start\n- uid: System.Windows.Media.TextFormatting.TextLine.TextBaseline*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextBaseline\n  nameWithType: TextLine.TextBaseline\n- uid: System.Windows.Media.TextFormatting.TextLine.TextHeight*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TextHeight\n  nameWithType: TextLine.TextHeight\n- uid: System.Windows.Media.TextFormatting.TextLine.TrailingWhitespaceLength*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: TrailingWhitespaceLength\n  nameWithType: TextLine.TrailingWhitespaceLength\n- uid: System.Windows.Media.TextFormatting.TextLine.Width*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: Width\n  nameWithType: TextLine.Width\n- uid: System.Windows.Media.TextFormatting.TextLine.WidthIncludingTrailingWhitespace*\n  parent: System.Windows.Media.TextFormatting.TextLine\n  isExternal: false\n  name: WidthIncludingTrailingWhitespace\n  nameWithType: TextLine.WidthIncludingTrailingWhitespace\n"}