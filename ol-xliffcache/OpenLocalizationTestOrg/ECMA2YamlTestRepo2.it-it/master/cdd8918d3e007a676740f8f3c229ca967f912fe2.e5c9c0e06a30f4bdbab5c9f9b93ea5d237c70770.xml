{"nodes":[{"pos":[341,507],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Process.OutputDataReceived\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.Process.ErrorDataReceived\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> events.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Diagnostics.Process.OutputDataReceived\"></xref> and <xref href=\"System.Diagnostics.Process.ErrorDataReceived\"></xref> events."},{"pos":[519,1081],"content":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of DataReceivedEventArgs. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of DataReceivedEventArgs. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.","pos":[0,562],"nodes":[{"content":"To asynchronously collect the redirected &lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt; or &lt;xref:System.Diagnostics.Process.StandardError%2A&gt; stream output of a process, you must create a method that handles the redirected stream output events.","pos":[0,249],"source":"To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events."},{"content":"The event-handler method is called when the process writes to the redirected stream.","pos":[250,334]},{"content":"The event delegate calls your event handler with an instance of DataReceivedEventArgs.","pos":[335,421]},{"content":"The &lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt; property contains the text line that the process wrote to the redirected stream.","pos":[422,562],"source":" The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream."}]}]},{"pos":[2505,2628],"content":"Gets the line of characters that was written to a redirected <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Process\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> output stream.","needQuote":true,"needEscape":true,"source":"Gets the line of characters that was written to a redirected <xref href=\"System.Diagnostics.Process\"></xref> output stream."},{"pos":[4633,4851],"content":"The line that was written by an associated <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.Process\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to its redirected &lt;xref:System.Diagnostics.Process.StandardOutput<bpt id=\"p2\">*</bpt>&gt; or &lt;xref:System.Diagnostics.Process.StandardError<ept id=\"p2\">*</ept>&gt; stream.","needQuote":true,"needEscape":true,"source":"The line that was written by an associated <xref href=\"System.Diagnostics.Process\"></xref> to its redirected <xref:System.Diagnostics.Process.StandardOutput*> or <xref:System.Diagnostics.Process.StandardError*> stream."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DataReceivedEventArgs\n  id: DataReceivedEventArgs\n  children:\n  - System.Diagnostics.DataReceivedEventArgs.Data\n  langs:\n  - csharp\n  name: DataReceivedEventArgs\n  nameWithType: DataReceivedEventArgs\n  fullName: System.Diagnostics.DataReceivedEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Diagnostics.Process.OutputDataReceived\"></xref> and <xref href=\"System.Diagnostics.Process.ErrorDataReceived\"></xref> events.\n  remarks: To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of DataReceivedEventArgs. The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.\n  example:\n  - \"The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command. The `sort` command is a console application that reads and sorts text input.  \\n  \\n The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \\n  \\n [!code-cpp[Process_AsyncStreams#1](~/add/codesnippet/cpp/t-system.diagnostics.dat_0_1.cpp)]\\n [!code-vb[Process_AsyncStreams#1](~/add/codesnippet/visualbasic/t-system.diagnostics.dat_0_1.vb)]\\n [!code-cs[Process_AsyncStreams#1](~/add/codesnippet/csharp/t-system.diagnostics.dat_0_1.cs)]\"\n  syntax:\n    content: 'public class DataReceivedEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.DataReceivedEventArgs.Data\n  id: Data\n  parent: System.Diagnostics.DataReceivedEventArgs\n  langs:\n  - csharp\n  name: Data\n  nameWithType: DataReceivedEventArgs.Data\n  fullName: System.Diagnostics.DataReceivedEventArgs.Data\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the line of characters that was written to a redirected <xref href=\"System.Diagnostics.Process\"></xref> output stream.\n  remarks: \"When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream. The Data property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream. Your event handler can use the Data property to filter process output or write output to an alternate location. For example, you might create an event handler that stores all error output lines into a designated error log file.  \\n  \\n A line is defined as a sequence of characters followed by a line feed (\\\"\\\\n\\\") or a carriage return immediately followed by a line feed (\\\"\\\\r\\\\n\\\"). The line characters are encoded using the default system ANSI code page. The Data property does not include the terminating carriage return or line feed.  \\n  \\n When the redirected stream is closed, a null line is sent to the event handler. Ensure your event handler checks the Data property appropriately before accessing it. For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName> to validate the Data property in your event handler.\"\n  example:\n  - \"The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \\n  \\n [!code-cpp[Process_AsyncStreams#4](~/add/codesnippet/cpp/p-system.diagnostics.dat_1.cpp)]\\n [!code-cs[Process_AsyncStreams#4](~/add/codesnippet/csharp/p-system.diagnostics.dat_1.cs)]\\n [!code-vb[Process_AsyncStreams#4](~/add/codesnippet/visualbasic/p-system.diagnostics.dat_1.vb)]\"\n  syntax:\n    content: public string Data { get; }\n    return:\n      type: System.String\n      description: The line that was written by an associated <xref href=\"System.Diagnostics.Process\"></xref> to its redirected <xref:System.Diagnostics.Process.StandardOutput*> or <xref:System.Diagnostics.Process.StandardError*> stream.\n  overload: System.Diagnostics.DataReceivedEventArgs.Data*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Diagnostics.DataReceivedEventArgs.Data\n  parent: System.Diagnostics.DataReceivedEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DataReceivedEventArgs.Data\n  fullName: System.Diagnostics.DataReceivedEventArgs.Data\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.DataReceivedEventArgs.Data*\n  parent: System.Diagnostics.DataReceivedEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DataReceivedEventArgs.Data\n"}