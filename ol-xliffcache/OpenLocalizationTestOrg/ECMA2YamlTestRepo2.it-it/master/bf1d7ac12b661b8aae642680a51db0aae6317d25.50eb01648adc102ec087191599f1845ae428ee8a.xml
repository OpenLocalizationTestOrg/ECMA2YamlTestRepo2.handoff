{"nodes":[{"pos":[244,346],"content":"Supports cloning, which creates a new instance of a class with the same value as an existing instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Supports cloning, which creates a new instance of a class with the same value as an existing instance.","pos":[0,102]}]},{"pos":[358,863],"content":"The ICloneable interface enables you to provide a customized implementation that creates a copy of an existing object. The ICloneable interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>.  For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ICloneable interface enables you to provide a customized implementation that creates a copy of an existing object. The ICloneable interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>.  For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> method.","pos":[0,505],"nodes":[{"content":"The ICloneable interface enables you to provide a customized implementation that creates a copy of an existing object.","pos":[0,118]},{"content":"The ICloneable interface contains one member, the &lt;xref:System.ICloneable.Clone%2A&gt; method, which is intended to provide cloning support beyond that supplied by &lt;xref:System.Object.MemberwiseClone%2A?displayProperty=fullName&gt;.","pos":[119,345],"source":" The ICloneable interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>."},{"content":"For more information about cloning, deep versus shallow copies, and examples, see the &lt;xref:System.Object.MemberwiseClone%2A?displayProperty=fullName&gt; method.","pos":[347,505],"source":"  For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> method."}]}]},{"pos":[1274,1334],"content":"Creates a new object that is a copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new object that is a copy of the current instance.","pos":[0,60]}]},{"pos":[1347,1996],"content":"The resulting clone must be of the same type as, or compatible with, the original instance.       An implementation of Clone can perform either a deep copy or a shallow copy. In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references. Because callers of Clone cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.       See <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> for more information on cloning, deep versus shallow copies, and examples.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The resulting clone must be of the same type as, or compatible with, the original instance.       An implementation of Clone can perform either a deep copy or a shallow copy. In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references. Because callers of Clone cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.       See <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> for more information on cloning, deep versus shallow copies, and examples.","pos":[0,645],"nodes":[{"content":"The resulting clone must be of the same type as, or compatible with, the original instance.","pos":[0,91]},{"content":"An implementation of Clone can perform either a deep copy or a shallow copy.","pos":[98,174]},{"content":"In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references.","pos":[175,320]},{"content":"Because callers of Clone cannot depend on the method performing a predictable cloning operation, we recommend that &lt;xref:System.ICloneable&gt; not be implemented in public APIs.","pos":[321,495],"source":" Because callers of Clone cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs."},{"content":"See &lt;xref:System.Object.MemberwiseClone%2A?displayProperty=fullName&gt; for more information on cloning, deep versus shallow copies, and examples.","pos":[502,645],"source":"       See <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> for more information on cloning, deep versus shallow copies, and examples."}]}]},{"pos":[2121,2166],"content":"A new object that is a copy of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new object that is a copy of this instance.","pos":[0,45]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ICloneable\n  id: ICloneable\n  children:\n  - System.ICloneable.Clone\n  langs:\n  - csharp\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n  type: Interface\n  summary: Supports cloning, which creates a new instance of a class with the same value as an existing instance.\n  remarks: The ICloneable interface enables you to provide a customized implementation that creates a copy of an existing object. The ICloneable interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName>.  For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> method.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ICloneable\n  implements: []\n  platform:\n  - net462\n- uid: System.ICloneable.Clone\n  id: Clone\n  parent: System.ICloneable\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ICloneable.Clone()\n  fullName: System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  summary: Creates a new object that is a copy of the current instance.\n  remarks: \"The resulting clone must be of the same type as, or compatible with, the original instance.  \\n  \\n An implementation of Clone can perform either a deep copy or a shallow copy. In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references. Because callers of Clone cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.  \\n  \\n See <xref:System.Object.MemberwiseClone%2A?displayProperty=fullName> for more information on cloning, deep versus shallow copies, and examples.\"\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new object that is a copy of this instance.\n  overload: System.ICloneable.Clone*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ICloneable.Clone\n  parent: System.ICloneable\n  isExternal: false\n  name: Clone()\n  nameWithType: ICloneable.Clone()\n  fullName: System.ICloneable.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ICloneable.Clone*\n  parent: System.ICloneable\n  isExternal: false\n  name: Clone\n  nameWithType: ICloneable.Clone\n"}