{"nodes":[{"pos":[750,835],"content":"Provides methods for creating graphics buffers that can be used for double buffering.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides methods for creating graphics buffers that can be used for double buffering.","pos":[0,85]}]},{"pos":[848,2615],"content":"The BufferedGraphicsContext class allows you to implement custom double buffering for your graphics. Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.      > [!NOTE] >  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.       The BufferedGraphicsContext class provides methods for creating and configuring a graphics buffer. The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.       You can retrieve the BufferedGraphicsContext for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property. For graphically intensive applications such as animation, you can create a dedicated BufferedGraphicsContext using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient.       For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/add/includes/ajax-current-ext-md.md) and [How to: Manually Manage Buffered Graphics](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The BufferedGraphicsContext class allows you to implement custom double buffering for your graphics.","pos":[0,100]},{"content":"Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.","pos":[101,214]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The simplest way to use double buffering is to set the &lt;xref:System.Windows.Forms.ControlStyles&gt; control style flag on a control using the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method.","pos":[220,427],"source":"      > [!NOTE] >  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method."},{"content":"Setting the &lt;xref:System.Windows.Forms.ControlStyles&gt; control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.","pos":[428,628],"source":" Setting the <xref:System.Windows.Forms.ControlStyles> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code."},{"content":"This flag is set to <ph id=\"ph1\">`true`</ph> by default.","pos":[629,667],"source":" This flag is set to `true` by default."},{"content":"The BufferedGraphicsContext class provides methods for creating and configuring a graphics buffer.","pos":[674,772]},{"content":"The &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method creates a &lt;xref:System.Drawing.BufferedGraphics&gt;, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.","pos":[773,1039],"source":" The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device."},{"content":"You can retrieve the BufferedGraphicsContext for the current application domain from the static &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property.","pos":[1046,1233],"source":"       You can retrieve the BufferedGraphicsContext for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property."},{"content":"For graphically intensive applications such as animation, you can create a dedicated BufferedGraphicsContext using the constructor, but for most applications the &lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName&gt; property will be sufficient.","pos":[1234,1506],"source":" For graphically intensive applications such as animation, you can create a dedicated BufferedGraphicsContext using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient."},{"content":"For more information on drawing buffered graphics and custom buffering implementations, see <bpt id=\"p1\">[</bpt>Double Buffered Graphics<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Manually Manage Buffered Graphics<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1513,1758],"source":"       For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/add/includes/ajax-current-ext-md.md) and [How to: Manually Manage Buffered Graphics](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3743,3843],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.BufferedGraphicsContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref> class."},{"pos":[3856,4514],"content":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>. This allows you to create and manage graphics buffers individually.      > [!NOTE] >  You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.       For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated &lt;xref:System.Drawing.BufferedGraphicsContext&gt; instead of the default instance provided by the &lt;xref:System.Drawing.BufferedGraphicsManager&gt;.","pos":[0,257],"source":"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>."},{"content":"This allows you to create and manage graphics buffers individually.","pos":[258,325]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  You should always call &lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt; when you finish using a dedicated &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.","pos":[331,504],"source":"      > [!NOTE] >  You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>."},{"content":"For more information about dedicated graphics buffers, see <bpt id=\"p1\">[</bpt>How to: Manually Manage Buffered Graphics<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[511,653],"source":"       For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[5203,5336],"content":"Creates a graphics buffer of the specified size using the pixel format of the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>."},{"pos":[5348,5921],"content":"When you call the Allocate method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the Allocate method is disposed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you call the Allocate method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the Allocate method is disposed.","pos":[0,573],"nodes":[{"content":"When you call the Allocate method with a rectangle whose size exceeds the value of the &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; property, a temporary &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is created to allocate the buffer and provide a temporary context for the buffer.","pos":[0,299],"source":"When you call the Allocate method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer."},{"content":"The new &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is distinct from the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the application domain and it is disposed automatically when the &lt;xref:System.Drawing.BufferedGraphics&gt; returned by the Allocate method is disposed.","pos":[300,573],"source":" The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the Allocate method is disposed."}]}]},{"pos":[6665,6762],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to match the pixel format for the new buffer to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Graphics\"></xref> to match the pixel format for the new buffer to."},{"pos":[6845,6937],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating the size of the buffer to create.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create."},{"pos":[7013,7133],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.BufferedGraphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to draw to a buffer of the specified dimensions.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions."},{"pos":[7721,7854],"content":"Creates a graphics buffer of the specified size using the pixel format of the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Graphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>."},{"pos":[7866,8537],"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.","pos":[0,671],"nodes":[{"content":"When you call the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method with a rectangle whose size exceeds the value of the &lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt; property, a temporary &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is created to allocate the buffer and provide a temporary context for the buffer.","pos":[0,348],"source":"When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer."},{"content":"The new &lt;xref:System.Drawing.BufferedGraphicsContext&gt; is distinct from the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; for the application domain and it is disposed automatically when the &lt;xref:System.Drawing.BufferedGraphics&gt; returned by the &lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt; method is disposed.","pos":[349,671],"source":" The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed."}]}]},{"pos":[9291,9382],"content":"An <xref:System.IntPtr> to a device context to match the pixel format of the new buffer to.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; to a device context to match the pixel format of the new buffer to.","pos":[0,91],"source":"An <xref:System.IntPtr> to a device context to match the pixel format of the new buffer to."}]},{"pos":[9465,9557],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating the size of the buffer to create.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create."},{"pos":[9633,9753],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.BufferedGraphics\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to draw to a buffer of the specified dimensions.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions."},{"pos":[10208,10303],"content":"Releases all resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.BufferedGraphicsContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref>."},{"pos":[10316,11227],"content":"Call Dispose when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>. The Dispose method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Call Dispose when you are finished using the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.","pos":[0,91],"source":"Call Dispose when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>."},{"content":"The Dispose method leaves the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; in an unusable state.","pos":[92,189],"source":" The Dispose method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Drawing.BufferedGraphicsContext&gt; was occupying.","pos":[190,415],"source":" After calling Dispose, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[416,590],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.","pos":[596,721],"source":"      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Object.Finalize%2A&gt; method of the &lt;xref:System.Drawing.BufferedGraphicsContext&gt;.","pos":[722,908],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>."}]},{"pos":[11753,11877],"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","pos":[0,124]}]},{"pos":[12418,12520],"content":"Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.","pos":[0,102]}]},{"pos":[12532,12663],"content":"If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.","pos":[0,131]}]},{"pos":[13215,13266],"content":"Gets or sets the maximum size of the buffer to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size of the buffer to use.","pos":[0,51]}]},{"pos":[13278,13609],"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.","pos":[0,331],"nodes":[{"content":"This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.","pos":[0,109]},{"content":"You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the &lt;xref:System.Drawing.BufferedGraphics&gt; object is released.","pos":[110,331],"source":" You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released."}]}]},{"pos":[14283,14379],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating the maximum size of the buffer dimensions.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> indicating the maximum size of the buffer dimensions."},{"pos":[14554,14616],"content":"The height or width of the size is less than or equal to zero.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height or width of the size is less than or equal to zero.","pos":[0,62]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.BufferedGraphicsContext\n  id: BufferedGraphicsContext\n  children:\n  - System.Drawing.BufferedGraphicsContext.#ctor\n  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  - System.Drawing.BufferedGraphicsContext.Dispose\n  - System.Drawing.BufferedGraphicsContext.Finalize\n  - System.Drawing.BufferedGraphicsContext.Invalidate\n  - System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  langs:\n  - csharp\n  name: BufferedGraphicsContext\n  nameWithType: BufferedGraphicsContext\n  fullName: System.Drawing.BufferedGraphicsContext\n  type: Class\n  summary: Provides methods for creating graphics buffers that can be used for double buffering.\n  remarks: \"The BufferedGraphicsContext class allows you to implement custom double buffering for your graphics. Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.  \\n  \\n> [!NOTE]\\n>  The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method. Setting the <xref:System.Windows.Forms.ControlStyles> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code. This flag is set to `true` by default.  \\n  \\n The BufferedGraphicsContext class provides methods for creating and configuring a graphics buffer. The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.  \\n  \\n You can retrieve the BufferedGraphicsContext for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property. For graphically intensive applications such as animation, you can create a dedicated BufferedGraphicsContext using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> property will be sufficient.  \\n  \\n For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/add/includes/ajax-current-ext-md.md) and [How to: Manually Manage Buffered Graphics](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code example demonstrates how to acquire the BufferedGraphicsContext for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cs[BufferingExamples#1](~/add/codesnippet/csharp/t-system.drawing.buffere_2_1.cs)]\\n [!code-cpp[BufferingExamples#1](~/add/codesnippet/cpp/t-system.drawing.buffere_2_1.cpp)]\\n [!code-vb[BufferingExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_2_1.vb)]\"\n  syntax:\n    content: 'public sealed class BufferedGraphicsContext : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.#ctor\n  id: '#ctor'\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: BufferedGraphicsContext()\n  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()\n  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref> class.\n  remarks: \"For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>. This allows you to create and manage graphics buffers individually.  \\n  \\n> [!NOTE]\\n>  You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.  \\n  \\n For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public BufferedGraphicsContext ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Allocate(Graphics,Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)\n  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>.\n  remarks: When you call the Allocate method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the Allocate method is disposed.\n  example:\n  - \"The following code example demonstrates creating a graphics buffer using the Allocate method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cs[BufferingExamples#3](~/add/codesnippet/csharp/99d851e4-d9e2-4d32-8fa3-_1.cs)]\\n [!code-cpp[BufferingExamples#3](~/add/codesnippet/cpp/99d851e4-d9e2-4d32-8fa3-_1.cpp)]\\n [!code-vb[BufferingExamples#3](~/add/codesnippet/visualbasic/99d851e4-d9e2-4d32-8fa3-_1.vb)]\"\n  syntax:\n    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);\n    parameters:\n    - id: targetGraphics\n      type: System.Drawing.Graphics\n      description: The <xref href=\"System.Drawing.Graphics\"></xref> to match the pixel format for the new buffer to.\n    - id: targetRectangle\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create.\n    return:\n      type: System.Drawing.BufferedGraphics\n      description: A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions.\n  overload: System.Drawing.BufferedGraphicsContext.Allocate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  id: Allocate(System.IntPtr,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Allocate(IntPtr,Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)\n  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a graphics buffer of the specified size using the pixel format of the specified <xref href=\"System.Drawing.Graphics\"></xref>.\n  remarks: When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer. The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.\n  example:\n  - \"The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cs[BufferingExamples#4](~/add/codesnippet/csharp/5334a85f-cb42-4a29-8bd2-_1.cs)]\\n [!code-cpp[BufferingExamples#4](~/add/codesnippet/cpp/5334a85f-cb42-4a29-8bd2-_1.cpp)]\\n [!code-vb[BufferingExamples#4](~/add/codesnippet/visualbasic/5334a85f-cb42-4a29-8bd2-_1.vb)]\"\n  syntax:\n    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);\n    parameters:\n    - id: targetDC\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> to a device context to match the pixel format of the new buffer to.\n    - id: targetRectangle\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> indicating the size of the buffer to create.\n    return:\n      type: System.Drawing.BufferedGraphics\n      description: A <xref href=\"System.Drawing.BufferedGraphics\"></xref> that can be used to draw to a buffer of the specified dimensions.\n  overload: System.Drawing.BufferedGraphicsContext.Allocate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.Dispose\n  id: Dispose\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: BufferedGraphicsContext.Dispose()\n  fullName: System.Drawing.BufferedGraphicsContext.Dispose()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Releases all resources used by the <xref href=\"System.Drawing.BufferedGraphicsContext\"></xref>.\n  remarks: \"Call Dispose when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>. The Dispose method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call Dispose before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.Finalize\n  id: Finalize\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: BufferedGraphicsContext.Finalize()\n  fullName: System.Drawing.BufferedGraphicsContext.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~BufferedGraphicsContext ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.Invalidate\n  id: Invalidate\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: Invalidate()\n  nameWithType: BufferedGraphicsContext.Invalidate()\n  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.\n  remarks: If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.\n  syntax:\n    content: public void Invalidate ();\n    parameters: []\n  overload: System.Drawing.BufferedGraphicsContext.Invalidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  id: MaximumBuffer\n  parent: System.Drawing.BufferedGraphicsContext\n  langs:\n  - csharp\n  name: MaximumBuffer\n  nameWithType: BufferedGraphicsContext.MaximumBuffer\n  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the maximum size of the buffer to use.\n  remarks: This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory. You can allocate a buffer of any size, however any buffer with dimensions greater than the MaximumBuffer size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.\n  example:\n  - \"The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \\n  \\n [!code-cs[BufferingExamples#2](~/add/codesnippet/csharp/p-system.drawing.buffere_0_1.cs)]\\n [!code-cpp[BufferingExamples#2](~/add/codesnippet/cpp/p-system.drawing.buffere_0_1.cpp)]\\n [!code-vb[BufferingExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.buffere_0_1.vb)]\"\n  syntax:\n    content: public System.Drawing.Size MaximumBuffer { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> indicating the maximum size of the buffer dimensions.\n  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The height or width of the size is less than or equal to zero.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Drawing.BufferedGraphicsContext.#ctor\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: BufferedGraphicsContext()\n  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()\n  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Allocate(Graphics,Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)\n  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)\n- uid: System.Drawing.BufferedGraphics\n  parent: System.Drawing\n  isExternal: false\n  name: BufferedGraphics\n  nameWithType: BufferedGraphics\n  fullName: System.Drawing.BufferedGraphics\n- uid: System.Drawing.Graphics\n  parent: System.Drawing\n  isExternal: false\n  name: Graphics\n  nameWithType: Graphics\n  fullName: System.Drawing.Graphics\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Allocate(IntPtr,Rectangle)\n  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)\n  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.BufferedGraphicsContext.Dispose\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Dispose()\n  nameWithType: BufferedGraphicsContext.Dispose()\n  fullName: System.Drawing.BufferedGraphicsContext.Dispose()\n- uid: System.Drawing.BufferedGraphicsContext.Finalize\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Finalize()\n  nameWithType: BufferedGraphicsContext.Finalize()\n  fullName: System.Drawing.BufferedGraphicsContext.Finalize()\n- uid: System.Drawing.BufferedGraphicsContext.Invalidate\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Invalidate()\n  nameWithType: BufferedGraphicsContext.Invalidate()\n  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()\n- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: MaximumBuffer\n  nameWithType: BufferedGraphicsContext.MaximumBuffer\n  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Drawing.BufferedGraphicsContext.#ctor*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: BufferedGraphicsContext\n  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext\n- uid: System.Drawing.BufferedGraphicsContext.Allocate*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Allocate\n  nameWithType: BufferedGraphicsContext.Allocate\n- uid: System.Drawing.BufferedGraphicsContext.Dispose*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Dispose\n  nameWithType: BufferedGraphicsContext.Dispose\n- uid: System.Drawing.BufferedGraphicsContext.Finalize*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Finalize\n  nameWithType: BufferedGraphicsContext.Finalize\n- uid: System.Drawing.BufferedGraphicsContext.Invalidate*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: Invalidate\n  nameWithType: BufferedGraphicsContext.Invalidate\n- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*\n  parent: System.Drawing.BufferedGraphicsContext\n  isExternal: false\n  name: MaximumBuffer\n  nameWithType: BufferedGraphicsContext.MaximumBuffer\n"}