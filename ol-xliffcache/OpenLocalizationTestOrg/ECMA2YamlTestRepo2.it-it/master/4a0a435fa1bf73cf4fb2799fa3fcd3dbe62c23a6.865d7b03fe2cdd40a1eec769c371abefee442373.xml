{"nodes":[{"pos":[619,651],"content":"Provides validation of a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides validation of a string.","pos":[0,32]}]},{"pos":[664,1958],"content":"The StringValidator class is used to ensure that a string meets specific criteria. The criteria for validation is established when an instance of the StringValidator class is created. There are three constructor overloads for the StringValidator class. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName> constructor with one parameter verifies the minimum acceptable length of the string being validated. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.       The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The StringValidator class is used to ensure that a string meets specific criteria. The criteria for validation is established when an instance of the StringValidator class is created. There are three constructor overloads for the StringValidator class. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName> constructor with one parameter verifies the minimum acceptable length of the string being validated. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.       The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.","pos":[0,1292],"nodes":[{"content":"The StringValidator class is used to ensure that a string meets specific criteria.","pos":[0,82]},{"content":"The criteria for validation is established when an instance of the StringValidator class is created.","pos":[83,183]},{"content":"There are three constructor overloads for the StringValidator class.","pos":[184,252]},{"content":"The &lt;xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName&gt; constructor with one parameter verifies the minimum acceptable length of the string being validated.","pos":[253,452],"source":" The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName> constructor with one parameter verifies the minimum acceptable length of the string being validated."},{"content":"The &lt;xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName&gt; constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length.","pos":[453,685],"source":" The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length."},{"content":"The &lt;xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName&gt; constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.","pos":[686,1015],"source":" The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated."},{"content":"The &lt;xref:System.Configuration.StringValidator.CanValidate%2A&gt; method determines whether the object type being validated matches the expected type.","pos":[1022,1169],"source":"       The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type."},{"content":"The object being validated is passed as a parameter of the &lt;xref:System.Configuration.StringValidator.Validate%2A&gt; method.","pos":[1170,1292],"source":" The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method."}]}]},{"pos":[2955,3084],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.StringValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on a supplied parameter.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.StringValidator\"></xref> class, based on a supplied parameter."},{"pos":[3096,3197],"content":"The StringValidator constructor verifies the minimum acceptable length of the string being validated.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The StringValidator constructor verifies the minimum acceptable length of the string being validated.","pos":[0,101]}]},{"pos":[3341,3406],"content":"An integer that specifies the minimum length of the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that specifies the minimum length of the string value.","pos":[0,65]}]},{"pos":[3968,4096],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.StringValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on supplied parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.StringValidator\"></xref> class, based on supplied parameters."},{"pos":[4108,4227],"content":"This StringValidator constructor ensures that the string being verified adheres to both a minimum and a maximum length.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This StringValidator constructor ensures that the string being verified adheres to both a minimum and a maximum length.","pos":[0,119]}]},{"pos":[4386,4451],"content":"An integer that specifies the minimum length of the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that specifies the minimum length of the string value.","pos":[0,65]}]},{"pos":[4516,4581],"content":"An integer that specifies the maximum length of the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that specifies the maximum length of the string value.","pos":[0,65]}]},{"pos":[5192,5320],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.StringValidator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on supplied parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.StringValidator\"></xref> class, based on supplied parameters."},{"pos":[5332,5522],"content":"This StringValidator constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This StringValidator constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.","pos":[0,190]}]},{"pos":[6147,6212],"content":"An integer that specifies the minimum length of the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that specifies the minimum length of the string value.","pos":[0,65]}]},{"pos":[6277,6342],"content":"An integer that specifies the maximum length of the string value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that specifies the maximum length of the string value.","pos":[0,65]}]},{"pos":[6416,6460],"content":"A string that represents invalid characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents invalid characters.","pos":[0,44]}]},{"pos":[6966,7026],"content":"Determines whether an object can be validated based on type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether an object can be validated based on type.","pos":[0,60]}]},{"pos":[7618,7634],"content":"The object type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object type.","pos":[0,16]}]},{"pos":[7693,7881],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter matches a string; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches a string; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8388,8439],"content":"Determines whether the value of an object is valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]},{"pos":[8451,8752],"content":"The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object. The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created. The object to validate is passed as a parameter of the Validate method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object. The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created. The object to validate is passed as a parameter of the Validate method.","pos":[0,301],"nodes":[{"content":"The &lt;xref:System.Configuration.StringValidator&gt; class contains the criteria necessary to validate a string object.","pos":[0,114],"source":"The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object."},{"content":"The criteria are established when an instance of the &lt;xref:System.Configuration.StringValidator&gt; class is created.","pos":[115,229],"source":" The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created."},{"content":"The object to validate is passed as a parameter of the Validate method.","pos":[230,301]}]}]},{"pos":[9330,9347],"content":"The object value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object value.","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.StringValidator\n  id: StringValidator\n  children:\n  - System.Configuration.StringValidator.#ctor(System.Int32)\n  - System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)\n  - System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)\n  - System.Configuration.StringValidator.CanValidate(System.Type)\n  - System.Configuration.StringValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: StringValidator\n  nameWithType: StringValidator\n  fullName: System.Configuration.StringValidator\n  type: Class\n  summary: Provides validation of a string.\n  remarks: \"The StringValidator class is used to ensure that a string meets specific criteria. The criteria for validation is established when an instance of the StringValidator class is created. There are three constructor overloads for the StringValidator class. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%29?displayProperty=fullName> constructor with one parameter verifies the minimum acceptable length of the string being validated. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%29?displayProperty=fullName> constructor with two parameters ensures that the string being verified adheres to both a minimum and a maximum length. The <xref:System.Configuration.StringValidator.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> constructor with three parameters checks both the minimum and the maximum length values of the string being verified, as well as whether specific characters are present in the string being validated.  \\n  \\n The <xref:System.Configuration.StringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.StringValidator.Validate%2A> method.\"\n  example:\n  - \"The following example demonstrates how to use the StringValidator type.  \\n  \\n [!code-cs[System.Configuration.StringValidator#1](~/add/codesnippet/csharp/t-system.configuration.s_0_1.cs)]\\n [!code-vb[System.Configuration.StringValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.s_0_1.vb)]\"\n  syntax:\n    content: 'public class StringValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Configuration.StringValidator.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Configuration.StringValidator\n  langs:\n  - csharp\n  name: StringValidator(Int32)\n  nameWithType: StringValidator.StringValidator(Int32)\n  fullName: System.Configuration.StringValidator.StringValidator(Int32)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.StringValidator\"></xref> class, based on a supplied parameter.\n  remarks: The StringValidator constructor verifies the minimum acceptable length of the string being validated.\n  syntax:\n    content: public StringValidator (int minLength);\n    parameters:\n    - id: minLength\n      type: System.Int32\n      description: An integer that specifies the minimum length of the string value.\n  overload: System.Configuration.StringValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Configuration.StringValidator\n  langs:\n  - csharp\n  name: StringValidator(Int32,Int32)\n  nameWithType: StringValidator.StringValidator(Int32,Int32)\n  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.StringValidator\"></xref> class, based on supplied parameters.\n  remarks: This StringValidator constructor ensures that the string being verified adheres to both a minimum and a maximum length.\n  syntax:\n    content: public StringValidator (int minLength, int maxLength);\n    parameters:\n    - id: minLength\n      type: System.Int32\n      description: An integer that specifies the minimum length of the string value.\n    - id: maxLength\n      type: System.Int32\n      description: An integer that specifies the maximum length of the string value.\n  overload: System.Configuration.StringValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)\n  id: '#ctor(System.Int32,System.Int32,System.String)'\n  parent: System.Configuration.StringValidator\n  langs:\n  - csharp\n  name: StringValidator(Int32,Int32,String)\n  nameWithType: StringValidator.StringValidator(Int32,Int32,String)\n  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32,String)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.StringValidator\"></xref> class, based on supplied parameters.\n  remarks: This StringValidator constructor ensures that the string being validated adheres to both a minimum and a maximum length, and also ensures that specific characters are excluded in the string.\n  example:\n  - \"The following example demonstrates how to use this StringValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \\n  \\n [!code-cs[System.Configuration.StringValidator#2](~/add/codesnippet/csharp/53dd41c3-e827-4f95-a9a0-_1.cs)]\\n [!code-vb[System.Configuration.StringValidator#2](~/add/codesnippet/visualbasic/53dd41c3-e827-4f95-a9a0-_1.vb)]\"\n  syntax:\n    content: public StringValidator (int minLength, int maxLength, string invalidCharacters);\n    parameters:\n    - id: minLength\n      type: System.Int32\n      description: An integer that specifies the minimum length of the string value.\n    - id: maxLength\n      type: System.Int32\n      description: An integer that specifies the maximum length of the string value.\n    - id: invalidCharacters\n      type: System.String\n      description: A string that represents invalid characters.\n  overload: System.Configuration.StringValidator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.StringValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.StringValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: StringValidator.CanValidate(Type)\n  fullName: System.Configuration.StringValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether an object can be validated based on type.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \\n  \\n [!code-cs[System.Configuration.StringValidator#3](~/add/codesnippet/csharp/m-system.configuration.s_7_1.cs)]\\n [!code-vb[System.Configuration.StringValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.s_7_1.vb)]\"\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The object type.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <code>type</code> parameter matches a string; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.StringValidator.CanValidate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.StringValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.StringValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: StringValidator.Validate(Object)\n  fullName: System.Configuration.StringValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: The <xref:System.Configuration.StringValidator> class contains the criteria necessary to validate a string object. The criteria are established when an instance of the <xref:System.Configuration.StringValidator> class is created. The object to validate is passed as a parameter of the Validate method.\n  example:\n  - \"The following example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.StringValidator> class.  \\n  \\n [!code-cs[System.Configuration.StringValidator#4](~/add/codesnippet/csharp/m-system.configuration.s_1_1.cs)]\\n [!code-vb[System.Configuration.StringValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.s_1_1.vb)]\"\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object value.\n  overload: System.Configuration.StringValidator.Validate*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>value</code> is less than <code>minValue</code> or greater than <code>maxValue</code> as defined in the constructor.  \\n  \\n \\\\- or -  \\n  \\n <code>value</code> contains invalid characters.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  isExternal: false\n  name: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Configuration.StringValidator.#ctor(System.Int32)\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: StringValidator(Int32)\n  nameWithType: StringValidator.StringValidator(Int32)\n  fullName: System.Configuration.StringValidator.StringValidator(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: StringValidator(Int32,Int32)\n  nameWithType: StringValidator.StringValidator(Int32,Int32)\n  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32)\n- uid: System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: StringValidator(Int32,Int32,String)\n  nameWithType: StringValidator.StringValidator(Int32,Int32,String)\n  fullName: System.Configuration.StringValidator.StringValidator(Int32,Int32,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.StringValidator.CanValidate(System.Type)\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: StringValidator.CanValidate(Type)\n  fullName: System.Configuration.StringValidator.CanValidate(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.StringValidator.Validate(System.Object)\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: StringValidator.Validate(Object)\n  fullName: System.Configuration.StringValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.StringValidator.#ctor*\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: StringValidator\n  nameWithType: StringValidator.StringValidator\n- uid: System.Configuration.StringValidator.CanValidate*\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: StringValidator.CanValidate\n- uid: System.Configuration.StringValidator.Validate*\n  parent: System.Configuration.StringValidator\n  isExternal: false\n  name: Validate\n  nameWithType: StringValidator.Validate\n"}