{"nodes":[{"pos":[358,434],"content":"Enables notification to a host application that a modal dialog is displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables notification to a host application that a modal dialog is displayed.","pos":[0,76]}]},{"pos":[447,1342],"content":"Some applications that host designers need to be notified when a modal dialog box has been invoked. Visual Studio is an example of such a host. The IModalService interface provides an interface to communicate the current modal status.       The Windows Workflow Designer calls the <xref:System.Activities.Presentation.IModalService.SetModalState%2A> method. When the `isModal` parameter is set to `true`, the host is notified that a modal dialog is displayed.       This is an optional service. If a host application does not care about the modal status,  you need not use the service.       In the current implementation, if a Windows Presentation Foundation (WPF) message box (which is a modal dialog) is invoked, the <xref:System.Activities.Presentation.IModalService.SetModalState%2A>is not called. If the host application requires this information, another workaround must be created.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Some applications that host designers need to be notified when a modal dialog box has been invoked.","pos":[0,99]},{"content":"Visual Studio is an example of such a host.","pos":[100,143]},{"content":"The IModalService interface provides an interface to communicate the current modal status.","pos":[144,234]},{"content":"The Windows Workflow Designer calls the &lt;xref:System.Activities.Presentation.IModalService.SetModalState%2A&gt; method.","pos":[241,357],"source":"       The Windows Workflow Designer calls the <xref:System.Activities.Presentation.IModalService.SetModalState%2A> method."},{"content":"When the <ph id=\"ph1\">`isModal`</ph> parameter is set to <ph id=\"ph2\">`true`</ph>, the host is notified that a modal dialog is displayed.","pos":[358,459],"source":" When the `isModal` parameter is set to `true`, the host is notified that a modal dialog is displayed."},{"content":"This is an optional service.","pos":[466,494]},{"content":"If a host application does not care about the modal status,  you need not use the service.","pos":[495,585]},{"content":"In the current implementation, if a Windows Presentation Foundation (WPF) message box (which is a modal dialog) is invoked, the &lt;xref:System.Activities.Presentation.IModalService.SetModalState%2A&gt;is not called.","pos":[592,802],"source":"       In the current implementation, if a Windows Presentation Foundation (WPF) message box (which is a modal dialog) is invoked, the <xref:System.Activities.Presentation.IModalService.SetModalState%2A>is not called."},{"content":"If the host application requires this information, another workaround must be created.","pos":[803,889]}]},{"pos":[1914,1983],"content":"Notifies the host application that a modal dialog is being displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Notifies the host application that a modal dialog is being displayed.","pos":[0,69]}]},{"pos":[2129,2235],"content":"If set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, a modal dialog is being displayed.","needQuote":true,"needEscape":true,"source":"If set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, a modal dialog is being displayed."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.IModalService\n  id: IModalService\n  children:\n  - System.Activities.Presentation.IModalService.SetModalState(System.Boolean)\n  langs:\n  - csharp\n  name: IModalService\n  nameWithType: IModalService\n  fullName: System.Activities.Presentation.IModalService\n  type: Interface\n  summary: Enables notification to a host application that a modal dialog is displayed.\n  remarks: \"Some applications that host designers need to be notified when a modal dialog box has been invoked. Visual Studio is an example of such a host. The IModalService interface provides an interface to communicate the current modal status.  \\n  \\n The Windows Workflow Designer calls the <xref:System.Activities.Presentation.IModalService.SetModalState%2A> method. When the `isModal` parameter is set to `true`, the host is notified that a modal dialog is displayed.  \\n  \\n This is an optional service. If a host application does not care about the modal status,  you need not use the service.  \\n  \\n In the current implementation, if a Windows Presentation Foundation (WPF) message box (which is a modal dialog) is invoked, the <xref:System.Activities.Presentation.IModalService.SetModalState%2A>is not called. If the host application requires this information, another workaround must be created.\"\n  syntax:\n    content: public interface IModalService\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.IModalService.SetModalState(System.Boolean)\n  id: SetModalState(System.Boolean)\n  parent: System.Activities.Presentation.IModalService\n  langs:\n  - csharp\n  name: SetModalState(Boolean)\n  nameWithType: IModalService.SetModalState(Boolean)\n  fullName: System.Activities.Presentation.IModalService.SetModalState(Boolean)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation\n  summary: Notifies the host application that a modal dialog is being displayed.\n  syntax:\n    content: public void SetModalState (bool isModal);\n    parameters:\n    - id: isModal\n      type: System.Boolean\n      description: If set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, a modal dialog is being displayed.\n  overload: System.Activities.Presentation.IModalService.SetModalState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.IModalService.SetModalState(System.Boolean)\n  parent: System.Activities.Presentation.IModalService\n  isExternal: false\n  name: SetModalState(Boolean)\n  nameWithType: IModalService.SetModalState(Boolean)\n  fullName: System.Activities.Presentation.IModalService.SetModalState(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.IModalService.SetModalState*\n  parent: System.Activities.Presentation.IModalService\n  isExternal: false\n  name: SetModalState\n  nameWithType: IModalService.SetModalState\n"}