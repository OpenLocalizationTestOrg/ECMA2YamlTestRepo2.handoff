<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf748f7cb1dfe8317ccd565a740a44921561754f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.TextRenderer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b1e7566636afff24f532098f99f85f176c0e4f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">554290c7fdfe2fcf2f457a0c4a6629337cd967aa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods used to measure and render text.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TextRenderer class provides a set of <ph id="ph1">`static`</ph> methods that can be used for measuring and drawing text on a Windows Form control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the TextRenderer is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods of TextRenderer are not supported for printing.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Draws the specified text at the specified location using the specified device context, font, and color.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Empty?displayProperty=fullName&gt;, the DrawText method will draw the text in the font or color currently selected in the device context specified by <ph id="ph4">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Point&gt; as the upper-left corner of the drawn text do not render correctly on Windows 2000.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application is intended for use on machines running Windows 2000, you should use one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Rectangle&gt; for the bounds of the drawn text.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the upper-left corner of the drawn text.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Draws the specified text within the specified bounds, using the specified device context, font, and color.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph> or <ph id="ph2">`forecolor`</ph> is <ph id="ph3">`null`</ph> or &lt;xref:System.Drawing.Color?displayProperty=fullName&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph4">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will result in text that is horizontally and vertically centered in the rectangle specified by the <ph id="ph1">`bounds`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change how the text is drawn, use a version of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter type.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bounds of the text.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Draws the specified text at the specified location, using the specified device context, font, color, and back color.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`backColor`</ph> parameter is applied to the rectangular area containing the drawn text.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph>, <ph id="ph2">`backcolor`</ph> or <ph id="ph3">`forecolor`</ph> is <ph id="ph4">`null`</ph> or &lt;xref:System.Drawing.Color?displayProperty=fullName&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph5">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Point&gt; as the upper-left corner of the drawn text do not render correctly on Windows 2000.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application is intended for use on machines running Windows 2000, you should use one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Rectangle&gt; for the bounds of the drawn text.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the upper-left corner of the drawn text.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the background area of the drawn text.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Draws the specified text at the specified location using the specified device context, font, color, and formatting instructions.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the &lt;xref:System.Windows.Forms.TextRenderer&gt; is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`backColor`</ph> parameter is applied to the area within the <ph id="ph2">`bounds`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph> or <ph id="ph2">`forecolor`</ph> is <ph id="ph3">`null`</ph> or &lt;xref:System.Drawing.Color.Empty?displayProperty=fullName&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph4">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.TextRenderer&gt; does not support adding tab stops to drawn text, although you can expand existing tab stops using the &lt;xref:System.Windows.Forms.TextFormatFlags&gt; flag.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Point&gt; as the upper-left corner of the drawn text do not render correctly on Windows 2000.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application is intended for use on machines running Windows 2000, you should use one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Rectangle&gt; for the bounds of the drawn text.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the upper-left corner of the drawn text.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Draws the specified text within the specified bounds using the specified device context, font, color, and back color.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`backColor`</ph> parameter is applied to the area within the <ph id="ph2">`bounds`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph>, <ph id="ph2">`backcolor`</ph> or <ph id="ph3">`forecolor`</ph> is <ph id="ph4">`null`</ph> or &lt;xref:System.Drawing.Color&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph5">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will result in text that is horizontally and vertically centered in the rectangle specified by the <ph id="ph1">`bounds`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change how the text is drawn, use a version of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter type.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bounds of the text.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the area represented by <ph id="ph1">`bounds`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Draws the specified text within the specified bounds using the specified device context, font, color, and formatting instructions.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph> or <ph id="ph2">`color`</ph> is <ph id="ph3">`null`</ph> or &lt;xref:System.Drawing.Color.Empty&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph4">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the DrawText overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the &lt;xref:System.Windows.Forms.TextRenderer&gt; is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.TextRenderer&gt; does not support adding tab stops to drawn text, although you can expand existing tab stops using the &lt;xref:System.Windows.Forms.TextFormatFlags&gt; flag.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bounds of the text.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Draws the specified text at the specified location using the specified device context, font, color, back color, and formatting instructions</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`backcolor`</ph> parameter is applied the rectangular area containing the drawn text.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`font`</ph> or <ph id="ph2">`forecolor`</ph> is <ph id="ph3">`null`</ph> or &lt;xref:System.Drawing.Color.Empty&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph4">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the &lt;xref:System.Windows.Forms.TextRenderer&gt; is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.TextRenderer&gt; does not support adding tab stops to drawn text, although you can expand existing tab stops using the &lt;xref:System.Windows.Forms.TextFormatFlags&gt; flag.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Point&gt; as the upper-left corner of the drawn text do not render correctly on Windows 2000.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application is intended for use on machines running Windows 2000, you should use one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; methods that specify a &lt;xref:System.Drawing.Rectangle&gt; for the bounds of the drawn text.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the upper-left corner of the drawn text.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the text.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the background area of the drawn text.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Draws the specified text within the specified bounds using the specified device context, font, color, back color, and formatting instructions.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`backcolor`</ph> parameter is applied to the area within the <ph id="ph2">`bounds`</ph> parameter<ph id="ph3">`.`</ph> If <ph id="ph4">`font`</ph>, <ph id="ph5">`forecolor`</ph> or <ph id="ph6">`backcolor`</ph> is <ph id="ph7">`null`</ph> or &lt;xref:System.Drawing.Color.Empty&gt;, respectively; the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; method will draw the text in the font or color currently selected in the device context specified by <ph id="ph8">`dc`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`forecolor`</ph> is &lt;xref:System.Drawing.Color.Transparent%2A&gt;, the text will not be drawn.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the &lt;xref:System.Windows.Forms.TextRenderer&gt; is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text rendering offered by the &lt;xref:System.Windows.Forms.TextRenderer&gt; class is based on GDI text rendering and is not supported for printing from Windows Forms.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Drawing.Graphics.DrawString%2A&gt; methods of the &lt;xref:System.Drawing.Graphics&gt; class.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.TextRenderer&gt; does not support adding tab stops to drawn text, although you can expand existing tab stops using the &lt;xref:System.Windows.Forms.TextFormatFlags&gt; flag.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The device context in which to draw the text.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The text to draw.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the drawn text.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Rectangle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the bounds of the text.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the text.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Color"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the area represented by <ph id="ph1">`bounds`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <bpt id="p1">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Provides the size, in pixels, of the specified text when drawn with the specified font.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; method requires that the text is drawn on a single line.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in pixels, of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> drawn on a single line with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">font</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText<bpt id="p1">*</bpt>&gt; overloads that takes a <bpt id="p2">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> parameter. For example, the default behavior of the <bpt id="p3">&lt;xref href="System.Windows.Forms.TextRenderer"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText<ept id="p1">*</ept>&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText*&gt; that take a <bpt id="p4">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and <bpt id="p5">&lt;xref href="System.Windows.Forms.TextFormatFlags"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>For an example, see <ph id="ph1">&amp;lt;</ph>xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29<ph id="ph2">&amp;gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Provides the size, in pixels, of the specified text drawn with the specified font in the specified device context.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MeasureText method requires that the text is drawn on a single line.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The device context in which to measure the text.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in pixels, of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> drawn in a single line with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">font</ph><ept id="p3">&lt;/code&gt;</ept> in the specified device context.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Provides the size, in pixels, of the specified text when drawn with the specified font, using the specified size to create an initial bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MeasureText method uses the <ph id="ph1">`proposedSize`</ph> parameter to indicate the relationship of height to width when determining the text size.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>When measuring text on a single line, if the <ph id="ph1">`proposedSize`</ph> parameter represents a &lt;xref:System.Drawing.Size&gt; with a height dimension greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;, the returned &lt;xref:System.Drawing.Size&gt; will be adjusted to reflect the actual height of the text.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the initial bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in pixels, of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> drawn with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">font</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Provides the size, in pixels, of the specified text when drawn with the specified font in the specified device context, using the specified size to create an initial bounding rectangle for the text.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MeasureText method uses the <ph id="ph1">`proposedSize`</ph> parameter to indicate the relationship of height to width when determining the text size.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>When measuring text on a single line, if the <ph id="ph1">`proposedSize`</ph> parameter represents a &lt;xref:System.Drawing.Size&gt; with a height dimension greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;, the returned &lt;xref:System.Drawing.Size&gt; will be adjusted to reflect the actual height of the text.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The device context in which to measure the text.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the initial bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in pixels, of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> drawn with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">font</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Provides the size, in pixels, of the specified text when drawn with the specified font and formatting instructions, using the specified size to create the initial bounding rectangle for the text.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; uses the <ph id="ph1">`proposedSize`</ph> and <ph id="ph2">`flags`</ph> parameters to indicate the relationship of height to width when determining the text size.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>When measuring text on a single line, if the <ph id="ph1">`proposedSize`</ph> parameter represents a &lt;xref:System.Drawing.Size&gt; with a height dimension greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;, the returned &lt;xref:System.Drawing.Size&gt; will be adjusted to reflect the actual height of the text.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the &lt;xref:System.Windows.Forms.TextRenderer&gt; is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces you should use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This overload of MeasureText will ignore a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; value of &lt;xref:System.Windows.Forms.TextFormatFlags&gt; or &lt;xref:System.Windows.Forms.TextFormatFlags&gt;.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are specifying a padding value other than the default, you should use the overload of &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt; that takes a &lt;xref:System.Drawing.IDeviceContext&gt; object.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the initial bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The formatting instructions to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in pixels, of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> drawn with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">font</ph><ept id="p3">&lt;/code&gt;</ept> and format.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Provides the size, in pixels, of the specified text when drawn with the specified device context, font, and formatting instructions, using the specified size to create the initial bounding rectangle for the text.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MeasureText method uses the <ph id="ph1">`proposedSize`</ph> and <ph id="ph2">`flags`</ph> parameters to indicate the relationship of height to width when determining the text size.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>When measuring text on a single line, if the <ph id="ph1">`proposedSize`</ph> parameter represents a &lt;xref:System.Drawing.Size&gt; with a height dimension greater than &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;, the returned &lt;xref:System.Drawing.Size&gt; will be adjusted to reflect the actual height of the text.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manipulate how the text is drawn by using one of the &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; overloads that takes a &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default behavior of the &lt;xref:System.Windows.Forms.TextRenderer&gt; is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to draw a line of text without these extra spaces, use the versions of &lt;xref:System.Windows.Forms.TextRenderer.DrawText%2A&gt; and &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%2A&gt; that take a &lt;xref:System.Drawing.Size&gt; and &lt;xref:System.Windows.Forms.TextFormatFlags&gt; parameter, as shown in the example.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The device context in which to measure the text.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The text to measure.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the initial bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The formatting instructions to apply to the measured text.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Drawing.Size"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in pixels, of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">text</ph><ept id="p2">&lt;/code&gt;</ept> drawn with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">font</ph><ept id="p3">&lt;/code&gt;</ept> and format.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dc&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>