{"nodes":[{"pos":[677,698],"content":"Compares data points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares data points.","pos":[0,21]}]},{"pos":[1834,2012],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified data series, sort order and sort value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"></xref> class with the specified data series, sort order and sort value."},{"pos":[2313,2325],"content":"Data series.","needQuote":true,"needEscape":true,"nodes":[{"content":"Data series.","pos":[0,12]}]},{"pos":[2433,2444],"content":"Sort order.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort order.","pos":[0,11]}]},{"pos":[2507,2580],"content":"Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.","pos":[0,73]}]},{"pos":[3409,3434],"content":"Compares two data points.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two data points.","pos":[0,25]}]},{"pos":[3697,3714],"content":"First data point.","needQuote":true,"needEscape":true,"nodes":[{"content":"First data point.","pos":[0,17]}]},{"pos":[3809,3827],"content":"Second data point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Second data point.","pos":[0,18]}]},{"pos":[3884,4148],"content":"An <xref uid=\"langword_csharp_integer\" name=\"integer\" href=\"\"></xref> value. Returns zero (0) if the two values are equal. Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_integer\" name=\"integer\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","pos":[0,76],"source":"An <xref uid=\"langword_csharp_integer\" name=\"integer\" href=\"\"></xref> value."},{"content":"Returns zero (0) if the two values are equal.","pos":[77,122]},{"content":"Returns a positive integer if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, returns a negative integer.","pos":[123,264],"source":" Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  id: DataPointComparer\n  children:\n  - System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  - System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  langs:\n  - csharp\n  name: DataPointComparer\n  nameWithType: DataPointComparer\n  fullName: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  type: Class\n  summary: Compares data points.\n  syntax:\n    content: 'public class DataPointComparer : System.Collections.Generic.IComparer<System.Web.UI.DataVisualization.Charting.DataPoint>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IComparer<System.Web.UI.DataVisualization.Charting.DataPoint>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  id: '#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)'\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  langs:\n  - csharp\n  name: DataPointComparer(Series,PointSortOrder,String)\n  nameWithType: DataPointComparer.DataPointComparer(Series,PointSortOrder,String)\n  fullName: System.Web.UI.DataVisualization.Charting.DataPointComparer.DataPointComparer(Series,PointSortOrder,String)\n  type: Constructor\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.DataVisualization.Charting.DataPointComparer\"></xref> class with the specified data series, sort order and sort value.\n  syntax:\n    content: public DataPointComparer (System.Web.UI.DataVisualization.Charting.Series series, System.Web.UI.DataVisualization.Charting.PointSortOrder sortOrder, string sortBy);\n    parameters:\n    - id: series\n      type: System.Web.UI.DataVisualization.Charting.Series\n      description: Data series.\n    - id: sortOrder\n      type: System.Web.UI.DataVisualization.Charting.PointSortOrder\n      description: Sort order.\n    - id: sortBy\n      type: System.String\n      description: Value used for the sort, for example, \"X\", \"Y or Y1\", \"Y2\", and so forth.\n  overload: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  id: Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  langs:\n  - csharp\n  name: Compare(DataPoint,DataPoint)\n  nameWithType: DataPointComparer.Compare(DataPoint,DataPoint)\n  fullName: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(DataPoint,DataPoint)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Compares two data points.\n  syntax:\n    content: public int Compare (System.Web.UI.DataVisualization.Charting.DataPoint x, System.Web.UI.DataVisualization.Charting.DataPoint y);\n    parameters:\n    - id: x\n      type: System.Web.UI.DataVisualization.Charting.DataPoint\n      description: First data point.\n    - id: y\n      type: System.Web.UI.DataVisualization.Charting.DataPoint\n      description: Second data point.\n    return:\n      type: System.Int32\n      description: An <xref uid=\"langword_csharp_integer\" name=\"integer\" href=\"\"></xref> value. Returns zero (0) if the two values are equal. Returns a positive integer if the value of <code>x</code> is greater than the value of <code>y</code>; otherwise, returns a negative integer.\n  overload: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor(System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: DataPointComparer(Series,PointSortOrder,String)\n  nameWithType: DataPointComparer.DataPointComparer(Series,PointSortOrder,String)\n  fullName: System.Web.UI.DataVisualization.Charting.DataPointComparer.DataPointComparer(Series,PointSortOrder,String)\n- uid: System.Web.UI.DataVisualization.Charting.Series\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: Series\n  nameWithType: Series\n  fullName: System.Web.UI.DataVisualization.Charting.Series\n- uid: System.Web.UI.DataVisualization.Charting.PointSortOrder\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: PointSortOrder\n  nameWithType: PointSortOrder\n  fullName: System.Web.UI.DataVisualization.Charting.PointSortOrder\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.DataPoint)\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: Compare(DataPoint,DataPoint)\n  nameWithType: DataPointComparer.Compare(DataPoint,DataPoint)\n  fullName: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare(DataPoint,DataPoint)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.DataVisualization.Charting.DataPoint\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: DataPoint\n  nameWithType: DataPoint\n  fullName: System.Web.UI.DataVisualization.Charting.DataPoint\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.#ctor*\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: DataPointComparer\n  nameWithType: DataPointComparer.DataPointComparer\n- uid: System.Web.UI.DataVisualization.Charting.DataPointComparer.Compare*\n  parent: System.Web.UI.DataVisualization.Charting.DataPointComparer\n  isExternal: false\n  name: Compare\n  nameWithType: DataPointComparer.Compare\n"}