{"nodes":[{"pos":[1486,1593],"content":"Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.","pos":[0,107]}]},{"pos":[1605,1706],"content":"To convert a Point to a <xref:System.Drawing.PointF>, use <xref:System.Drawing.Point.op_Implicit%2A>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To convert a Point to a &lt;xref:System.Drawing.PointF&gt;, use &lt;xref:System.Drawing.Point.op_Implicit%2A&gt;.","pos":[0,101],"source":"To convert a Point to a <xref:System.Drawing.PointF>, use <xref:System.Drawing.Point.op_Implicit%2A>."}]},{"pos":[3195,3325],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Point\"></xref> class from a <xref href=\"System.Drawing.Size\"></xref>."},{"pos":[4352,4480],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the coordinates for the new <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> that specifies the coordinates for the new <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[4882,5012],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using coordinates specified by an integer value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Point\"></xref> class using coordinates specified by an integer value."},{"pos":[5024,5201],"content":"The low-order 16 bits of the <ph id=\"ph1\">`dw`</ph> parameter specify the horizontal x-coordinate and the higher 16 bits specify the vertical y-coordinate for the new &lt;xref:System.Drawing.Point&gt;.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The low-order 16 bits of the `dw` parameter specify the horizontal x-coordinate and the higher 16 bits specify the vertical y-coordinate for the new <xref:System.Drawing.Point>."},{"pos":[6046,6148],"content":"A 32-bit integer that specifies the coordinates for the new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A 32-bit integer that specifies the coordinates for the new <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[6594,6707],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified coordinates.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Point\"></xref> class with the specified coordinates."},{"pos":[7716,7753],"content":"The horizontal position of the point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The horizontal position of the point.","pos":[0,37]}]},{"pos":[7810,7845],"content":"The vertical position of the point.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vertical position of the point.","pos":[0,35]}]},{"pos":[8301,8420],"content":"Adds the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the specified <xref href=\"System.Drawing.Size\"></xref> to the specified <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[8432,8677],"content":"The Add adds the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> of the specified <xref:System.Drawing.Size> to the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of the specified point.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Add adds the &lt;xref:System.Drawing.Size.Width%2A&gt; and &lt;xref:System.Drawing.Size.Height%2A&gt; of the specified &lt;xref:System.Drawing.Size&gt; to the &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; values of the specified point.","pos":[0,245],"source":"The Add adds the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> of the specified <xref:System.Drawing.Size> to the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of the specified point."}]},{"pos":[9450,9503],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> to add."},{"pos":[9568,9619],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> to add"},{"pos":[9684,9775],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the result of the addition operation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> that is the result of the addition operation."},{"pos":[10199,10419],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> by rounding the values of the <bpt id=\"p3\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to the next higher integer values.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"System.Drawing.PointF\"></xref> to a <xref href=\"System.Drawing.Point\"></xref> by rounding the values of the <xref href=\"System.Drawing.PointF\"></xref> to the next higher integer values."},{"pos":[10602,10660],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.PointF\"></xref> to convert."},{"pos":[10725,10795],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> this method converts to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> this method converts to."},{"pos":[11142,11291],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that has &lt;xref:System.Drawing.Point.X<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Drawing.Point.Y<ept id=\"p2\">*</ept>&gt; values set to zero.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.Drawing.Point\"></xref> that has <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> values set to zero."},{"pos":[11430,11442],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11807,11940],"content":"Specifies whether this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains the same coordinates as the specified &lt;xref:System.Object&gt;.","needQuote":true,"needEscape":true,"source":"Specifies whether this <xref href=\"System.Drawing.Point\"></xref> contains the same coordinates as the specified <xref:System.Object>."},{"pos":[12081,12114],"content":"The <xref:System.Object> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to test.","pos":[0,33],"source":"The <xref:System.Object> to test."}]},{"pos":[12173,12380],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and has the same coordinates as this <bpt id=\"p4\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.Point\"></xref> and has the same coordinates as this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[12763,12834],"content":"Returns a hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a hash code for this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[12846,13140],"content":"You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Point> objects with the same values for their <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties may return the same hash code. This behavior could change in a future release.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Point> objects with the same values for their <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties may return the same hash code. This behavior could change in a future release.","pos":[0,294],"nodes":[{"content":"You should avoid depending on GetHashCode for unique values, as two &lt;xref:System.Drawing.Point&gt; objects with the same values for their &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; properties may return the same hash code.","pos":[0,246],"source":"You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Point> objects with the same values for their <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties may return the same hash code."},{"content":"This behavior could change in a future release.","pos":[247,294]}]}]},{"pos":[13275,13371],"content":"An integer value that specifies a hash value for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An integer value that specifies a hash value for this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[13735,13823],"content":"Gets a value indicating whether this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is empty.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether this <xref href=\"System.Drawing.Point\"></xref> is empty."},{"pos":[13934,14150],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if both &lt;xref:System.Drawing.Point.X<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Drawing.Point.Y<ept id=\"p2\">*</ept>&gt; are 0; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> are 0; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14568,14685],"content":"Translates this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Translates this <xref href=\"System.Drawing.Point\"></xref> by the specified <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[14697,14973],"content":"This method adjusts the &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; values of this &lt;xref:System.Drawing.Point&gt; to the sum of the &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; values of this &lt;xref:System.Drawing.Point&gt; and <ph id=\"ph1\">`p`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This method adjusts the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of this <xref:System.Drawing.Point> to the sum of the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of this <xref:System.Drawing.Point> and `p`."},{"pos":[15712,15817],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used offset this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> used offset this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[16262,16344],"content":"Translates this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by the specified amount.","needQuote":true,"needEscape":true,"source":"Translates this <xref href=\"System.Drawing.Point\"></xref> by the specified amount."},{"pos":[16478,16516],"content":"The amount to offset the x-coordinate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to offset the x-coordinate.","pos":[0,38]}]},{"pos":[16574,16612],"content":"The amount to offset the y-coordinate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to offset the y-coordinate.","pos":[0,38]}]},{"pos":[17111,17218],"content":"Translates a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by a given <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Translates a <xref href=\"System.Drawing.Point\"></xref> by a given <xref href=\"System.Drawing.Size\"></xref>."},{"pos":[18334,18393],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to translate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> to translate."},{"pos":[18458,18570],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the pair of numbers to add to the coordinates of <ph id=\"ph1\">`pt`</ph>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> that specifies the pair of numbers to add to the coordinates of `pt`."},{"pos":[18635,18692],"content":"The translated <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The translated <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[19201,19460],"content":"Compares two <xref href=\"System.Drawing.Point\"></xref> objects. The result specifies whether the values of the <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> properties of the two <xref href=\"System.Drawing.Point\"></xref> objects are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,63],"source":"Compares two <xref href=\"System.Drawing.Point\"></xref> objects."},{"content":"The result specifies whether the values of the &lt;xref:System.Drawing.Point.X<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.Point.Y<ept id=\"p1\">*</ept>&gt; properties of the two <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are equal.","pos":[64,259],"source":" The result specifies whether the values of the <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> properties of the two <xref href=\"System.Drawing.Point\"></xref> objects are equal."}]},{"pos":[20505,20560],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Point\"></xref> to compare."},{"pos":[20629,20684],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Point\"></xref> to compare."},{"pos":[20743,21013],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Drawing.Point.X<bpt id=\"p2\">*</bpt>&gt; and &lt;xref:System.Drawing.Point.Y<ept id=\"p2\">*</ept>&gt; values of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p3\">&lt;/code&gt;</ept> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p4\">&lt;/code&gt;</ept> are equal; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21672,21684],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21748,21760],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22375,22387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22453,22465],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22984,23244],"content":"Compares two <xref href=\"System.Drawing.Point\"></xref> objects. The result specifies whether the values of the <xref:System.Drawing.Point.X*> or <xref:System.Drawing.Point.Y*> properties of the two <xref href=\"System.Drawing.Point\"></xref> objects are unequal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,63],"source":"Compares two <xref href=\"System.Drawing.Point\"></xref> objects."},{"content":"The result specifies whether the values of the &lt;xref:System.Drawing.Point.X<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Drawing.Point.Y<ept id=\"p1\">*</ept>&gt; properties of the two <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects are unequal.","pos":[64,260],"source":" The result specifies whether the values of the <xref:System.Drawing.Point.X*> or <xref:System.Drawing.Point.Y*> properties of the two <xref href=\"System.Drawing.Point\"></xref> objects are unequal."}]},{"pos":[23441,23496],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Point\"></xref> to compare."},{"pos":[23565,23620],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Point\"></xref> to compare."},{"pos":[23679,23985],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the values of either the &lt;xref:System.Drawing.Point.X<bpt id=\"p2\">*</bpt>&gt; properties or the &lt;xref:System.Drawing.Point.Y<ept id=\"p2\">*</ept>&gt; properties of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p3\">&lt;/code&gt;</ept> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p4\">&lt;/code&gt;</ept> differ; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the values of either the <xref:System.Drawing.Point.X*> properties or the <xref:System.Drawing.Point.Y*> properties of <code>left</code> and <code>right</code> differ; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24506,24629],"content":"Translates a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by the negative of a given <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Translates a <xref href=\"System.Drawing.Point\"></xref> by the negative of a given <xref href=\"System.Drawing.Size\"></xref>."},{"pos":[25556,25615],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to translate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> to translate."},{"pos":[25680,25799],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the pair of numbers to subtract from the coordinates of <ph id=\"ph1\">`pt`</ph>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Size\"></xref> that specifies the pair of numbers to subtract from the coordinates of `pt`."},{"pos":[25864,26015],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is translated by the negative of a given <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Point\"></xref> structure that is translated by the negative of a given <xref href=\"System.Drawing.Size\"></xref> structure."},{"pos":[26440,26648],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object by rounding the <bpt id=\"p3\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> values to the nearest integer.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"System.Drawing.PointF\"></xref> to a <xref href=\"System.Drawing.Point\"></xref> object by rounding the <xref href=\"System.Drawing.Point\"></xref> values to the nearest integer."},{"pos":[26829,26887],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.PointF\"></xref> to convert."},{"pos":[26952,27022],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> this method converts to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> this method converts to."},{"pos":[27503,27649],"content":"Returns the result of subtracting specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the result of subtracting specified <xref href=\"System.Drawing.Size\"></xref> from the specified <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[27661,27918],"content":"The Subtract subtracts the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> of the specified <xref:System.Drawing.Size> from the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of the specified point.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Subtract subtracts the &lt;xref:System.Drawing.Size.Width%2A&gt; and &lt;xref:System.Drawing.Size.Height%2A&gt; of the specified &lt;xref:System.Drawing.Size&gt; from the &lt;xref:System.Drawing.Point.X%2A&gt; and &lt;xref:System.Drawing.Point.Y%2A&gt; values of the specified point.","pos":[0,257],"source":"The Subtract subtracts the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> of the specified <xref:System.Drawing.Size> from the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of the specified point."}]},{"pos":[28118,28186],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be subtracted from.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> to be subtracted from."},{"pos":[28251,28359],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to subtract from the <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Size\"></xref> to subtract from the <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[28424,28518],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is the result of the subtraction operation.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> that is the result of the subtraction operation."},{"pos":[28888,28971],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a human-readable string.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Drawing.Point\"></xref> to a human-readable string."},{"pos":[29107,29179],"content":"A string that represents this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string that represents this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[29613,29800],"content":"Converts the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> by truncating the values of the <bpt id=\"p3\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts the specified <xref href=\"System.Drawing.PointF\"></xref> to a <xref href=\"System.Drawing.Point\"></xref> by truncating the values of the <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[29984,30042],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to convert.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.PointF\"></xref> to convert."},{"pos":[30107,30177],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> this method converts to.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.Point\"></xref> this method converts to."},{"pos":[30508,30588],"content":"Gets or sets the x-coordinate of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the x-coordinate of this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[31542,31609],"content":"The x-coordinate of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The x-coordinate of this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[31933,32013],"content":"Gets or sets the y-coordinate of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the y-coordinate of this <xref href=\"System.Drawing.Point\"></xref>."},{"pos":[32967,33034],"content":"The y-coordinate of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The y-coordinate of this <xref href=\"System.Drawing.Point\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Point\n  id: Point\n  children:\n  - System.Drawing.Point.#ctor(System.Drawing.Size)\n  - System.Drawing.Point.#ctor(System.Int32)\n  - System.Drawing.Point.#ctor(System.Int32,System.Int32)\n  - System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  - System.Drawing.Point.Empty\n  - System.Drawing.Point.Equals(System.Object)\n  - System.Drawing.Point.GetHashCode\n  - System.Drawing.Point.IsEmpty\n  - System.Drawing.Point.Offset(System.Drawing.Point)\n  - System.Drawing.Point.Offset(System.Int32,System.Int32)\n  - System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)\n  - System.Drawing.Point.op_Explicit(System.Drawing.Point to System.Drawing.Size)\n  - System.Drawing.Point.op_Implicit(System.Drawing.Point)\n  - System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  - System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.Round(System.Drawing.PointF)\n  - System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)\n  - System.Drawing.Point.ToString\n  - System.Drawing.Point.Truncate(System.Drawing.PointF)\n  - System.Drawing.Point.X\n  - System.Drawing.Point.Y\n  langs:\n  - csharp\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n  type: Struct\n  summary: Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.\n  remarks: To convert a Point to a <xref:System.Drawing.PointF>, use <xref:System.Drawing.Point.op_Implicit%2A>.\n  example:\n  - \"The following code example creates points and sizes using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.  \\n  \\n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#1](~/add/codesnippet/csharp/t-system.drawing.point_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#1](~/add/codesnippet/cpp/t-system.drawing.point_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#1](~/add/codesnippet/visualbasic/t-system.drawing.point_1.vb)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Drawing.PointConverter))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Point\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.#ctor(System.Drawing.Size)\n  id: '#ctor(System.Drawing.Size)'\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Point(Size)\n  nameWithType: Point.Point(Size)\n  fullName: System.Drawing.Point.Point(Size)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Point\"></xref> class from a <xref href=\"System.Drawing.Size\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/m-system.drawing.point.s_2_1.cs)]\\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/m-system.drawing.point.s_2_1.vb)]\\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/m-system.drawing.point.s_2_1.cpp)]\"\n  syntax:\n    content: public Point (System.Drawing.Size sz);\n    parameters:\n    - id: sz\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that specifies the coordinates for the new <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Point(Int32)\n  nameWithType: Point.Point(Int32)\n  fullName: System.Drawing.Point.Point(Int32)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Point\"></xref> class using coordinates specified by an integer value.\n  remarks: The low-order 16 bits of the `dw` parameter specify the horizontal x-coordinate and the higher 16 bits specify the vertical y-coordinate for the new <xref:System.Drawing.Point>.\n  example:\n  - \"The following code example demonstrates how to use the Point and <xref:System.Drawing.Size.%23ctor%2A?displayProperty=fullName> constructors and the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> enumeration. To run this example, paste this code into a Windows Form that contains a label named `Label1`, and call the `IntializeLabel1` method in the form's constructor.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#7](~/add/codesnippet/csharp/m-system.drawing.point.s_0_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#7](~/add/codesnippet/cpp/m-system.drawing.point.s_0_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#7](~/add/codesnippet/visualbasic/m-system.drawing.point.s_0_1.vb)]\"\n  syntax:\n    content: public Point (int dw);\n    parameters:\n    - id: dw\n      type: System.Int32\n      description: A 32-bit integer that specifies the coordinates for the new <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Point(Int32,Int32)\n  nameWithType: Point.Point(Int32,Int32)\n  fullName: System.Drawing.Point.Point(Int32,Int32)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Point\"></xref> class with the specified coordinates.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/m-system.drawing.point.s_1_1.cs)]\\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/m-system.drawing.point.s_1_1.vb)]\\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/m-system.drawing.point.s_1_1.cpp)]\"\n  syntax:\n    content: public Point (int x, int y);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The horizontal position of the point.\n    - id: y\n      type: System.Int32\n      description: The vertical position of the point.\n  overload: System.Drawing.Point.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)\n  id: Add(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Add(Point,Size)\n  nameWithType: Point.Add(Point,Size)\n  fullName: System.Drawing.Point.Add(Point,Size)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adds the specified <xref href=\"System.Drawing.Size\"></xref> to the specified <xref href=\"System.Drawing.Point\"></xref>.\n  remarks: The Add adds the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> of the specified <xref:System.Drawing.Size> to the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of the specified point.\n  example:\n  - \"The following example shows how to use the Add method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `AddPoint` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.MiscWhidbeySnippets#9](~/add/codesnippet/visualbasic/m-system.drawing.point.a_1.vb)]\\n [!code-cs[System.Drawing.MiscWhidbeySnippets#9](~/add/codesnippet/csharp/m-system.drawing.point.a_1.cs)]\"\n  syntax:\n    content: public static System.Drawing.Point Add (System.Drawing.Point pt, System.Drawing.Size sz);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> to add.\n    - id: sz\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> to add\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> that is the result of the addition operation.\n  overload: System.Drawing.Point.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  id: Ceiling(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Ceiling(PointF)\n  nameWithType: Point.Ceiling(PointF)\n  fullName: System.Drawing.Point.Ceiling(PointF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified <xref href=\"System.Drawing.PointF\"></xref> to a <xref href=\"System.Drawing.Point\"></xref> by rounding the values of the <xref href=\"System.Drawing.PointF\"></xref> to the next higher integer values.\n  syntax:\n    content: public static System.Drawing.Point Ceiling (System.Drawing.PointF value);\n    parameters:\n    - id: value\n      type: System.Drawing.PointF\n      description: The <xref href=\"System.Drawing.PointF\"></xref> to convert.\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> this method converts to.\n  overload: System.Drawing.Point.Ceiling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Empty\n  id: Empty\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Point.Empty\n  fullName: System.Drawing.Point.Empty\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Represents a <xref href=\"System.Drawing.Point\"></xref> that has <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> values set to zero.\n  syntax:\n    content: public static readonly System.Drawing.Point Empty;\n    return:\n      type: System.Drawing.Point\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Point.Equals(Object)\n  fullName: System.Drawing.Point.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Specifies whether this <xref href=\"System.Drawing.Point\"></xref> contains the same coordinates as the specified <xref:System.Object>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to test.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.Point\"></xref> and has the same coordinates as this <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Point.GetHashCode()\n  fullName: System.Drawing.Point.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a hash code for this <xref href=\"System.Drawing.Point\"></xref>.\n  remarks: You should avoid depending on GetHashCode for unique values, as two <xref:System.Drawing.Point> objects with the same values for their <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties may return the same hash code. This behavior could change in a future release.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer value that specifies a hash value for this <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: Point.IsEmpty\n  fullName: System.Drawing.Point.IsEmpty\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a value indicating whether this <xref href=\"System.Drawing.Point\"></xref> is empty.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if both <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> are 0; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Point.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Offset(System.Drawing.Point)\n  id: Offset(System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Offset(Point)\n  nameWithType: Point.Offset(Point)\n  fullName: System.Drawing.Point.Offset(Point)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Translates this <xref href=\"System.Drawing.Point\"></xref> by the specified <xref href=\"System.Drawing.Point\"></xref>.\n  remarks: This method adjusts the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of this <xref:System.Drawing.Point> to the sum of the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of this <xref:System.Drawing.Point> and `p`.\n  example:\n  - \"The following example shows how to use the Offset method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `OffsetPoint` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-vb[System.Drawing.MiscWhidbeySnippets#10](~/add/codesnippet/visualbasic/m-system.drawing.point.o_1_1.vb)]\\n [!code-cs[System.Drawing.MiscWhidbeySnippets#10](~/add/codesnippet/csharp/m-system.drawing.point.o_1_1.cs)]\"\n  syntax:\n    content: public void Offset (System.Drawing.Point p);\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> used offset this <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.Offset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Offset(System.Int32,System.Int32)\n  id: Offset(System.Int32,System.Int32)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Offset(Int32,Int32)\n  nameWithType: Point.Offset(Int32,Int32)\n  fullName: System.Drawing.Point.Offset(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Translates this <xref href=\"System.Drawing.Point\"></xref> by the specified amount.\n  syntax:\n    content: public void Offset (int dx, int dy);\n    parameters:\n    - id: dx\n      type: System.Int32\n      description: The amount to offset the x-coordinate.\n    - id: dy\n      type: System.Int32\n      description: The amount to offset the y-coordinate.\n  overload: System.Drawing.Point.Offset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)\n  id: op_Addition(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: op_Addition(Point,Size)\n  nameWithType: Point.op_Addition(Point,Size)\n  fullName: System.Drawing.Point.op_Addition(Point,Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Translates a <xref href=\"System.Drawing.Point\"></xref> by a given <xref href=\"System.Drawing.Size\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example creates points and sizes using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.  \\n  \\n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.PointsAndSizes#1](~/add/codesnippet/csharp/m-system.drawing.point.o_2_1.cs)]\\n [!code-cpp[System.Drawing.PointsAndSizes#1](~/add/codesnippet/cpp/m-system.drawing.point.o_2_1.cpp)]\\n [!code-vb[System.Drawing.PointsAndSizes#1](~/add/codesnippet/visualbasic/m-system.drawing.point.o_2_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.Point op_Addition (System.Drawing.Point pt, System.Drawing.Size sz);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> to translate.\n    - id: sz\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that specifies the pair of numbers to add to the coordinates of `pt`.\n    return:\n      type: System.Drawing.Point\n      description: The translated <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)\n  id: op_Equality(System.Drawing.Point,System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: op_Equality(Point,Point)\n  nameWithType: Point.op_Equality(Point,Point)\n  fullName: System.Drawing.Point.op_Equality(Point,Point)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Compares two <xref href=\"System.Drawing.Point\"></xref> objects. The result specifies whether the values of the <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> properties of the two <xref href=\"System.Drawing.Point\"></xref> objects are equal.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the Equality operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/m-system.drawing.point.o_0_1.cs)]\\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/m-system.drawing.point.o_0_1.vb)]\\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/m-system.drawing.point.o_0_1.cpp)]\"\n  syntax:\n    content: public static bool op_Equality (System.Drawing.Point left, System.Drawing.Point right);\n    parameters:\n    - id: left\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> to compare.\n    - id: right\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Drawing.Point.X*> and <xref:System.Drawing.Point.Y*> values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Point.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.op_Explicit(System.Drawing.Point to System.Drawing.Size)\n  id: op_Explicit(System.Drawing.Point to System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: op_Explicit(Point)\n  nameWithType: Point.op_Explicit(Point)\n  fullName: System.Drawing.Point.op_Explicit(Point)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public static System.Drawing.Size op_Explicit (System.Drawing.Point p);\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: To be added.\n    return:\n      type: System.Drawing.Size\n      description: To be added.\n  overload: System.Drawing.Point.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.op_Implicit(System.Drawing.Point)\n  id: op_Implicit(System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: op_Implicit(Point)\n  nameWithType: Point.op_Implicit(Point)\n  fullName: System.Drawing.Point.op_Implicit(Point)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public static System.Drawing.PointF op_Implicit (System.Drawing.Point p);\n    parameters:\n    - id: p\n      type: System.Drawing.Point\n      description: To be added.\n    return:\n      type: System.Drawing.PointF\n      description: To be added.\n  overload: System.Drawing.Point.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  id: op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: op_Inequality(Point,Point)\n  nameWithType: Point.op_Inequality(Point,Point)\n  fullName: System.Drawing.Point.op_Inequality(Point,Point)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Compares two <xref href=\"System.Drawing.Point\"></xref> objects. The result specifies whether the values of the <xref:System.Drawing.Point.X*> or <xref:System.Drawing.Point.Y*> properties of the two <xref href=\"System.Drawing.Point\"></xref> objects are unequal.\n  syntax:\n    content: public static bool op_Inequality (System.Drawing.Point left, System.Drawing.Point right);\n    parameters:\n    - id: left\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> to compare.\n    - id: right\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the values of either the <xref:System.Drawing.Point.X*> properties or the <xref:System.Drawing.Point.Y*> properties of <code>left</code> and <code>right</code> differ; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.Point.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  id: op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: op_Subtraction(Point,Size)\n  nameWithType: Point.op_Subtraction(Point,Size)\n  fullName: System.Drawing.Point.op_Subtraction(Point,Size)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Translates a <xref href=\"System.Drawing.Point\"></xref> by the negative of a given <xref href=\"System.Drawing.Size\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.PointConverter> and the Subtraction operator. This example is designed to be used with Windows Forms. Paste this code into a form and call the `ShowPointConverter` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.Converters#1](~/add/codesnippet/cpp/m-system.drawing.point.o_3_1.cpp)]\\n [!code-cs[System.Drawing.Converters#1](~/add/codesnippet/csharp/m-system.drawing.point.o_3_1.cs)]\\n [!code-vb[System.Drawing.Converters#1](~/add/codesnippet/visualbasic/m-system.drawing.point.o_3_1.vb)]\"\n  syntax:\n    content: public static System.Drawing.Point op_Subtraction (System.Drawing.Point pt, System.Drawing.Size sz);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> to translate.\n    - id: sz\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that specifies the pair of numbers to subtract from the coordinates of `pt`.\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> structure that is translated by the negative of a given <xref href=\"System.Drawing.Size\"></xref> structure.\n  overload: System.Drawing.Point.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Round(System.Drawing.PointF)\n  id: Round(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Round(PointF)\n  nameWithType: Point.Round(PointF)\n  fullName: System.Drawing.Point.Round(PointF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified <xref href=\"System.Drawing.PointF\"></xref> to a <xref href=\"System.Drawing.Point\"></xref> object by rounding the <xref href=\"System.Drawing.Point\"></xref> values to the nearest integer.\n  syntax:\n    content: public static System.Drawing.Point Round (System.Drawing.PointF value);\n    parameters:\n    - id: value\n      type: System.Drawing.PointF\n      description: The <xref href=\"System.Drawing.PointF\"></xref> to convert.\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> this method converts to.\n  overload: System.Drawing.Point.Round*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)\n  id: Subtract(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Subtract(Point,Size)\n  nameWithType: Point.Subtract(Point,Size)\n  fullName: System.Drawing.Point.Subtract(Point,Size)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns the result of subtracting specified <xref href=\"System.Drawing.Size\"></xref> from the specified <xref href=\"System.Drawing.Point\"></xref>.\n  remarks: The Subtract subtracts the <xref:System.Drawing.Size.Width%2A> and <xref:System.Drawing.Size.Height%2A> of the specified <xref:System.Drawing.Size> from the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> values of the specified point.\n  syntax:\n    content: public static System.Drawing.Point Subtract (System.Drawing.Point pt, System.Drawing.Size sz);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> to be subtracted from.\n    - id: sz\n      type: System.Drawing.Size\n      description: The <xref href=\"System.Drawing.Size\"></xref> to subtract from the <xref href=\"System.Drawing.Point\"></xref>.\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> that is the result of the subtraction operation.\n  overload: System.Drawing.Point.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.ToString\n  id: ToString\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Point.ToString()\n  fullName: System.Drawing.Point.ToString()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts this <xref href=\"System.Drawing.Point\"></xref> to a human-readable string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents this <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Truncate(System.Drawing.PointF)\n  id: Truncate(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Truncate(PointF)\n  nameWithType: Point.Truncate(PointF)\n  fullName: System.Drawing.Point.Truncate(PointF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified <xref href=\"System.Drawing.PointF\"></xref> to a <xref href=\"System.Drawing.Point\"></xref> by truncating the values of the <xref href=\"System.Drawing.Point\"></xref>.\n  syntax:\n    content: public static System.Drawing.Point Truncate (System.Drawing.PointF value);\n    parameters:\n    - id: value\n      type: System.Drawing.PointF\n      description: The <xref href=\"System.Drawing.PointF\"></xref> to convert.\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> this method converts to.\n  overload: System.Drawing.Point.Truncate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.X\n  id: X\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: X\n  nameWithType: Point.X\n  fullName: System.Drawing.Point.X\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the x-coordinate of this <xref href=\"System.Drawing.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the X and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/p-system.drawing.point.x_1.cs)]\\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/p-system.drawing.point.x_1.vb)]\\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/p-system.drawing.point.x_1.cpp)]\"\n  syntax:\n    content: public int X { get; set; }\n    return:\n      type: System.Int32\n      description: The x-coordinate of this <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Point.Y\n  id: Y\n  parent: System.Drawing.Point\n  langs:\n  - csharp\n  name: Y\n  nameWithType: Point.Y\n  fullName: System.Drawing.Point.Y\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the y-coordinate of this <xref href=\"System.Drawing.Point\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and Y properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \\n  \\n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/p-system.drawing.point.y_1.cs)]\\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/p-system.drawing.point.y_1.vb)]\\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/p-system.drawing.point.y_1.cpp)]\"\n  syntax:\n    content: public int Y { get; set; }\n    return:\n      type: System.Int32\n      description: The y-coordinate of this <xref href=\"System.Drawing.Point\"></xref>.\n  overload: System.Drawing.Point.Y*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Drawing.Point.#ctor(System.Drawing.Size)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Point(Size)\n  nameWithType: Point.Point(Size)\n  fullName: System.Drawing.Point.Point(Size)\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Drawing.Point.#ctor(System.Int32)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Point(Int32)\n  nameWithType: Point.Point(Int32)\n  fullName: System.Drawing.Point.Point(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.Point.#ctor(System.Int32,System.Int32)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Point(Int32,Int32)\n  nameWithType: Point.Point(Int32,Int32)\n  fullName: System.Drawing.Point.Point(Int32,Int32)\n- uid: System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Add(Point,Size)\n  nameWithType: Point.Add(Point,Size)\n  fullName: System.Drawing.Point.Add(Point,Size)\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Drawing.Point.Ceiling(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Ceiling(PointF)\n  nameWithType: Point.Ceiling(PointF)\n  fullName: System.Drawing.Point.Ceiling(PointF)\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Drawing.Point.Empty\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Empty\n  nameWithType: Point.Empty\n  fullName: System.Drawing.Point.Empty\n- uid: System.Drawing.Point.Equals(System.Object)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Point.Equals(Object)\n  fullName: System.Drawing.Point.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.Point.GetHashCode\n  parent: System.Drawing.Point\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Point.GetHashCode()\n  fullName: System.Drawing.Point.GetHashCode()\n- uid: System.Drawing.Point.IsEmpty\n  parent: System.Drawing.Point\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Point.IsEmpty\n  fullName: System.Drawing.Point.IsEmpty\n- uid: System.Drawing.Point.Offset(System.Drawing.Point)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Offset(Point)\n  nameWithType: Point.Offset(Point)\n  fullName: System.Drawing.Point.Offset(Point)\n- uid: System.Drawing.Point.Offset(System.Int32,System.Int32)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Offset(Int32,Int32)\n  nameWithType: Point.Offset(Int32,Int32)\n  fullName: System.Drawing.Point.Offset(Int32,Int32)\n- uid: System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Addition(Point,Size)\n  nameWithType: Point.op_Addition(Point,Size)\n  fullName: System.Drawing.Point.op_Addition(Point,Size)\n- uid: System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Equality(Point,Point)\n  nameWithType: Point.op_Equality(Point,Point)\n  fullName: System.Drawing.Point.op_Equality(Point,Point)\n- uid: System.Drawing.Point.op_Explicit(System.Drawing.Point to System.Drawing.Size)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Explicit(Point)\n  nameWithType: Point.op_Explicit(Point)\n  fullName: System.Drawing.Point.op_Explicit(Point)\n- uid: System.Drawing.Point.op_Implicit(System.Drawing.Point)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Implicit(Point)\n  nameWithType: Point.op_Implicit(Point)\n  fullName: System.Drawing.Point.op_Implicit(Point)\n- uid: System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Inequality(Point,Point)\n  nameWithType: Point.op_Inequality(Point,Point)\n  fullName: System.Drawing.Point.op_Inequality(Point,Point)\n- uid: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Subtraction(Point,Size)\n  nameWithType: Point.op_Subtraction(Point,Size)\n  fullName: System.Drawing.Point.op_Subtraction(Point,Size)\n- uid: System.Drawing.Point.Round(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Round(PointF)\n  nameWithType: Point.Round(PointF)\n  fullName: System.Drawing.Point.Round(PointF)\n- uid: System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Subtract(Point,Size)\n  nameWithType: Point.Subtract(Point,Size)\n  fullName: System.Drawing.Point.Subtract(Point,Size)\n- uid: System.Drawing.Point.ToString\n  parent: System.Drawing.Point\n  isExternal: false\n  name: ToString()\n  nameWithType: Point.ToString()\n  fullName: System.Drawing.Point.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.Point.Truncate(System.Drawing.PointF)\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Truncate(PointF)\n  nameWithType: Point.Truncate(PointF)\n  fullName: System.Drawing.Point.Truncate(PointF)\n- uid: System.Drawing.Point.X\n  parent: System.Drawing.Point\n  isExternal: false\n  name: X\n  nameWithType: Point.X\n  fullName: System.Drawing.Point.X\n- uid: System.Drawing.Point.Y\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Y\n  nameWithType: Point.Y\n  fullName: System.Drawing.Point.Y\n- uid: System.Drawing.Point.#ctor*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Point\n  nameWithType: Point.Point\n- uid: System.Drawing.Point.Add*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Add\n  nameWithType: Point.Add\n- uid: System.Drawing.Point.Ceiling*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Ceiling\n  nameWithType: Point.Ceiling\n- uid: System.Drawing.Point.Equals*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Equals\n  nameWithType: Point.Equals\n- uid: System.Drawing.Point.GetHashCode*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Point.GetHashCode\n- uid: System.Drawing.Point.IsEmpty*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Point.IsEmpty\n- uid: System.Drawing.Point.Offset*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Offset\n  nameWithType: Point.Offset\n- uid: System.Drawing.Point.op_Addition*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Addition\n  nameWithType: Point.op_Addition\n- uid: System.Drawing.Point.op_Equality*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Equality\n  nameWithType: Point.op_Equality\n- uid: System.Drawing.Point.op_Explicit*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Point.op_Explicit\n- uid: System.Drawing.Point.op_Implicit*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Point.op_Implicit\n- uid: System.Drawing.Point.op_Inequality*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Point.op_Inequality\n- uid: System.Drawing.Point.op_Subtraction*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Point.op_Subtraction\n- uid: System.Drawing.Point.Round*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Round\n  nameWithType: Point.Round\n- uid: System.Drawing.Point.Subtract*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Subtract\n  nameWithType: Point.Subtract\n- uid: System.Drawing.Point.ToString*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: ToString\n  nameWithType: Point.ToString\n- uid: System.Drawing.Point.Truncate*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Truncate\n  nameWithType: Point.Truncate\n- uid: System.Drawing.Point.X*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: X\n  nameWithType: Point.X\n- uid: System.Drawing.Point.Y*\n  parent: System.Drawing.Point\n  isExternal: false\n  name: Y\n  nameWithType: Point.Y\n"}