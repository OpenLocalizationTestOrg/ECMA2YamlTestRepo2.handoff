{"nodes":[{"pos":[601,847],"content":"Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit*> notification is received.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the &lt;xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit*&gt; notification is received.","pos":[0,246],"source":"Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit*> notification is received."}]},{"pos":[859,1307],"content":"When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a resource manager's implementation of &lt;xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A&gt; is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the &lt;xref:System.Transactions.SinglePhaseEnlistment.Committed%2A&gt; method or the &lt;xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A&gt; method to indicate whether the transaction should be committed or rolled back.","pos":[0,448],"source":"When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back."}]},{"pos":[1939,2056],"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.","pos":[0,117]}]},{"pos":[2068,2294],"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A transaction participant implementing the &lt;xref:System.Transactions.ISinglePhaseNotification&gt; interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.","pos":[0,226],"source":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back."}]},{"pos":[2897,3043],"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.","pos":[0,146]}]},{"pos":[3178,3224],"content":"An explanation of why a rollback is initiated.","needQuote":true,"needEscape":true,"nodes":[{"content":"An explanation of why a rollback is initiated.","pos":[0,46]}]},{"pos":[3708,3824],"content":"Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.","pos":[0,116]}]},{"pos":[3836,4033],"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A transaction participant implementing the &lt;xref:System.Transactions.ISinglePhaseNotification&gt; interface uses this method to notify the transaction manager that the transaction should be committed.","pos":[0,197],"source":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed."}]},{"pos":[4577,4698],"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.","pos":[0,121]}]},{"pos":[4710,4997],"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","pos":[0,287],"nodes":[{"content":"A transaction participant implementing the &lt;xref:System.Transactions.ISinglePhaseNotification&gt; interface uses this method to notify the transaction manager that the transaction is in doubt.","pos":[0,189],"source":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt."},{"content":"A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","pos":[190,287]}]}]},{"pos":[5600,5750],"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.","pos":[0,150]}]},{"pos":[5885,5935],"content":"An explanation of why the transaction is in doubt.","needQuote":true,"needEscape":true,"nodes":[{"content":"An explanation of why the transaction is in doubt.","pos":[0,50]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.SinglePhaseEnlistment\n  id: SinglePhaseEnlistment\n  children:\n  - System.Transactions.SinglePhaseEnlistment.Aborted\n  - System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  - System.Transactions.SinglePhaseEnlistment.Committed\n  - System.Transactions.SinglePhaseEnlistment.InDoubt\n  - System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  langs:\n  - csharp\n  name: SinglePhaseEnlistment\n  nameWithType: SinglePhaseEnlistment\n  fullName: System.Transactions.SinglePhaseEnlistment\n  type: Class\n  summary: Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit*> notification is received.\n  remarks: When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back.\n  syntax:\n    content: 'public class SinglePhaseEnlistment : System.Transactions.Enlistment'\n  inheritance:\n  - System.Object\n  - System.Transactions.Enlistment\n  implements: []\n  inheritedMembers:\n  - System.Transactions.Enlistment.Done\n  platform:\n  - net462\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted\n  id: Aborted\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: Aborted()\n  nameWithType: SinglePhaseEnlistment.Aborted()\n  fullName: System.Transactions.SinglePhaseEnlistment.Aborted()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.\n  remarks: A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.\n  syntax:\n    content: public void Aborted ();\n    parameters: []\n  overload: System.Transactions.SinglePhaseEnlistment.Aborted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  id: Aborted(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: Aborted(Exception)\n  nameWithType: SinglePhaseEnlistment.Aborted(Exception)\n  fullName: System.Transactions.SinglePhaseEnlistment.Aborted(Exception)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.\n  syntax:\n    content: public void Aborted (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: An explanation of why a rollback is initiated.\n  overload: System.Transactions.SinglePhaseEnlistment.Aborted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.SinglePhaseEnlistment.Committed\n  id: Committed\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: Committed()\n  nameWithType: SinglePhaseEnlistment.Committed()\n  fullName: System.Transactions.SinglePhaseEnlistment.Committed()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.\n  remarks: A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed.\n  syntax:\n    content: public void Committed ();\n    parameters: []\n  overload: System.Transactions.SinglePhaseEnlistment.Committed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt\n  id: InDoubt\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: InDoubt()\n  nameWithType: SinglePhaseEnlistment.InDoubt()\n  fullName: System.Transactions.SinglePhaseEnlistment.InDoubt()\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.\n  remarks: A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.\n  syntax:\n    content: public void InDoubt ();\n    parameters: []\n  overload: System.Transactions.SinglePhaseEnlistment.InDoubt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  id: InDoubt(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: InDoubt(Exception)\n  nameWithType: SinglePhaseEnlistment.InDoubt(Exception)\n  fullName: System.Transactions.SinglePhaseEnlistment.InDoubt(Exception)\n  type: Method\n  assemblies:\n  - System.Transactions\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.\n  syntax:\n    content: public void InDoubt (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: An explanation of why the transaction is in doubt.\n  overload: System.Transactions.SinglePhaseEnlistment.InDoubt*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Transactions.Enlistment\n  isExternal: false\n  name: System.Transactions.Enlistment\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Aborted()\n  nameWithType: SinglePhaseEnlistment.Aborted()\n  fullName: System.Transactions.SinglePhaseEnlistment.Aborted()\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Aborted(Exception)\n  nameWithType: SinglePhaseEnlistment.Aborted(Exception)\n  fullName: System.Transactions.SinglePhaseEnlistment.Aborted(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Transactions.SinglePhaseEnlistment.Committed\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Committed()\n  nameWithType: SinglePhaseEnlistment.Committed()\n  fullName: System.Transactions.SinglePhaseEnlistment.Committed()\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: InDoubt()\n  nameWithType: SinglePhaseEnlistment.InDoubt()\n  fullName: System.Transactions.SinglePhaseEnlistment.InDoubt()\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: InDoubt(Exception)\n  nameWithType: SinglePhaseEnlistment.InDoubt(Exception)\n  fullName: System.Transactions.SinglePhaseEnlistment.InDoubt(Exception)\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted*\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Aborted\n  nameWithType: SinglePhaseEnlistment.Aborted\n- uid: System.Transactions.SinglePhaseEnlistment.Committed*\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Committed\n  nameWithType: SinglePhaseEnlistment.Committed\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt*\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: InDoubt\n  nameWithType: SinglePhaseEnlistment.InDoubt\n"}