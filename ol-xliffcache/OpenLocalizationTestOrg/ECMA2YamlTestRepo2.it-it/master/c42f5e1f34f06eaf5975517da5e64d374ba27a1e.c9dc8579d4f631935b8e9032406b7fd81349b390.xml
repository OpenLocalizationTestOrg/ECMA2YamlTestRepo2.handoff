{"nodes":[{"pos":[476,536],"content":"Represents a statement that consists of a single expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a statement that consists of a single expression.","pos":[0,60]}]},{"pos":[548,905],"content":"A CodeExpressionStatement contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a CodeExpressionStatement can represent a method call without a return value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A CodeExpressionStatement contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a CodeExpressionStatement can represent a method call without a return value.","pos":[0,357],"nodes":[{"content":"A CodeExpressionStatement contains a &lt;xref:System.CodeDom.CodeExpression&gt; object, and it can be added to a &lt;xref:System.CodeDom.CodeStatementCollection&gt; object, allowing some expressions to stand alone.","pos":[0,202],"source":"A CodeExpressionStatement contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone."},{"content":"For example, a &lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt; contained by a CodeExpressionStatement can represent a method call without a return value.","pos":[203,357],"source":" For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a CodeExpressionStatement can represent a method call without a return value."}]}]},{"pos":[2373,2473],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpressionStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class."},{"pos":[3149,3283],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpressionStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by using the specified expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class by using the specified expression."},{"pos":[3983,4054],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the statement.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> for the statement."},{"pos":[4509,4555],"content":"Gets or sets the expression for the statement.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the expression for the statement.","pos":[0,46]}]},{"pos":[4714,4815],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the expression for the statement.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression for the statement."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeExpressionStatement\n  id: CodeExpressionStatement\n  children:\n  - System.CodeDom.CodeExpressionStatement.#ctor\n  - System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeExpressionStatement.Expression\n  langs:\n  - csharp\n  name: CodeExpressionStatement\n  nameWithType: CodeExpressionStatement\n  fullName: System.CodeDom.CodeExpressionStatement\n  type: Class\n  summary: Represents a statement that consists of a single expression.\n  remarks: A CodeExpressionStatement contains a <xref:System.CodeDom.CodeExpression> object, and it can be added to a <xref:System.CodeDom.CodeStatementCollection> object, allowing some expressions to stand alone. For example, a <xref:System.CodeDom.CodeMethodInvokeExpression> contained by a CodeExpressionStatement can represent a method call without a return value.\n  example:\n  - \"The following example demonstrates how to create an instance of the CodeExpressionStatement class by using a <xref:System.CodeDom.CodeExpression> object.  \\n  \\n [!code-cpp[CodeDomSampleBatch#1](~/add/codesnippet/cpp/t-system.codedom.codeexp_0_1.cpp)]\\n [!code-vb[CodeDomSampleBatch#1](~/add/codesnippet/visualbasic/t-system.codedom.codeexp_0_1.vb)]\\n [!code-cs[CodeDomSampleBatch#1](~/add/codesnippet/csharp/t-system.codedom.codeexp_0_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeExpressionStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  platform:\n  - net462\n- uid: System.CodeDom.CodeExpressionStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeExpressionStatement\n  langs:\n  - csharp\n  name: CodeExpressionStatement()\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement()\n  fullName: System.CodeDom.CodeExpressionStatement.CodeExpressionStatement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class.\n  syntax:\n    content: public CodeExpressionStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeExpressionStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  id: '#ctor(System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeExpressionStatement\n  langs:\n  - csharp\n  name: CodeExpressionStatement(CodeExpression)\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n  fullName: System.CodeDom.CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeExpressionStatement\"></xref> class by using the specified expression.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.CodeDom.CodeExpression> object and uses it as a parameter to initialize an instance of the <xref:System.CodeDom.CodeExpressionStatement> class.  \\n  \\n [!code-cpp[CodeDomSampleBatch#1](~/add/codesnippet/cpp/7916e372-82f9-4248-8406-_1.cpp)]\\n [!code-vb[CodeDomSampleBatch#1](~/add/codesnippet/visualbasic/7916e372-82f9-4248-8406-_1.vb)]\\n [!code-cs[CodeDomSampleBatch#1](~/add/codesnippet/csharp/7916e372-82f9-4248-8406-_1.cs)]\"\n  syntax:\n    content: public CodeExpressionStatement (System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> for the statement.\n  overload: System.CodeDom.CodeExpressionStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeExpressionStatement.Expression\n  id: Expression\n  parent: System.CodeDom.CodeExpressionStatement\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: CodeExpressionStatement.Expression\n  fullName: System.CodeDom.CodeExpressionStatement.Expression\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the expression for the statement.\n  syntax:\n    content: public System.CodeDom.CodeExpression Expression { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the expression for the statement.\n  overload: System.CodeDom.CodeExpressionStatement.Expression*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeStatement\n  isExternal: false\n  name: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeExpressionStatement.#ctor\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: CodeExpressionStatement()\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement()\n  fullName: System.CodeDom.CodeExpressionStatement.CodeExpressionStatement()\n- uid: System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: CodeExpressionStatement(CodeExpression)\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n  fullName: System.CodeDom.CodeExpressionStatement.CodeExpressionStatement(CodeExpression)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeExpressionStatement.Expression\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: Expression\n  nameWithType: CodeExpressionStatement.Expression\n  fullName: System.CodeDom.CodeExpressionStatement.Expression\n- uid: System.CodeDom.CodeExpressionStatement.#ctor*\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: CodeExpressionStatement\n  nameWithType: CodeExpressionStatement.CodeExpressionStatement\n- uid: System.CodeDom.CodeExpressionStatement.Expression*\n  parent: System.CodeDom.CodeExpressionStatement\n  isExternal: false\n  name: Expression\n  nameWithType: CodeExpressionStatement.Expression\n"}