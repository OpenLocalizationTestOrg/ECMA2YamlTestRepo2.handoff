{"nodes":[{"pos":[658,836],"content":"Represents information about a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Represents information about a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[849,2003],"content":"You can obtain identifying information for an initialized recognition engine using <xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=fullName> for a <xref:System.Speech.Recognition.SpeechRecognizer> object or <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=fullName> for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.       The information returned in instances of RecognizerInfo obtained from a <xref:System.Speech.Recognition.SpeechRecognizer> is determined by the settings in the **Speech Properties** member of the **Control Panel**.       You can use instances of RecognizerInfo to construct a specific configuration of <xref:System.Speech.Recognition.SpeechRecognitionEngine> using the <xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29> constructor.       The static method <xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A> returns a list of all available <xref:System.Speech.Recognition.SpeechRecognitionEngine> configurations as RecognizerInfo instances.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can obtain identifying information for an initialized recognition engine using &lt;xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=fullName&gt; for a &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; object or &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=fullName&gt; for a &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; object.","pos":[0,412],"source":"You can obtain identifying information for an initialized recognition engine using <xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=fullName> for a <xref:System.Speech.Recognition.SpeechRecognizer> object or <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=fullName> for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object."},{"content":"The information returned in instances of RecognizerInfo obtained from a &lt;xref:System.Speech.Recognition.SpeechRecognizer&gt; is determined by the settings in the <bpt id=\"p1\">**</bpt>Speech Properties<ept id=\"p1\">**</ept> member of the <bpt id=\"p2\">**</bpt>Control Panel<ept id=\"p2\">**</ept>.","pos":[419,632],"source":"       The information returned in instances of RecognizerInfo obtained from a <xref:System.Speech.Recognition.SpeechRecognizer> is determined by the settings in the **Speech Properties** member of the **Control Panel**."},{"content":"You can use instances of RecognizerInfo to construct a specific configuration of &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; using the &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29&gt; constructor.","pos":[639,910],"source":"       You can use instances of RecognizerInfo to construct a specific configuration of <xref:System.Speech.Recognition.SpeechRecognitionEngine> using the <xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29> constructor."},{"content":"The static method &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A&gt; returns a list of all available &lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt; configurations as RecognizerInfo instances.","pos":[917,1148],"source":"       The static method <xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A> returns a list of all available <xref:System.Speech.Recognition.SpeechRecognitionEngine> configurations as RecognizerInfo instances."}]},{"pos":[3650,3833],"content":"Gets additional information about a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets additional information about a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[5627,5903],"content":"Returns an instance of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id=\"ph2\">&amp;gt;</ph> containing information about the configuration of a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an instance of &lt;xref:System.Collections.Generic.IDictionary%602&gt; containing information about the configuration of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> object."},{"pos":[6369,6548],"content":"Gets the culture supported by a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the culture supported by a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[6560,6751],"content":"A <xref:System.Globalization.CultureInfo> object can include the name of the culture, the associated language, the country/region, the calendar used, and how to format dates and sort strings.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A &lt;xref:System.Globalization.CultureInfo&gt; object can include the name of the culture, the associated language, the country/region, the calendar used, and how to format dates and sort strings.","pos":[0,191],"source":"A <xref:System.Globalization.CultureInfo> object can include the name of the culture, the associated language, the country/region, the calendar used, and how to format dates and sort strings."}]},{"pos":[8425,8631],"content":"Returns information about the culture supported by a given <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns information about the culture supported by a given <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[9110,9283],"content":"Gets the description of a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the description of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[10951,11221],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that describes the configuration for a specific <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that describes the configuration for a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[11688,11725],"content":"Disposes the <ph id=\"ph1\">`RecognizerInfo`</ph> object.","needQuote":true,"needEscape":true,"source":"Disposes the `RecognizerInfo` object."},{"pos":[12225,12397],"content":"Gets the identifier of a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the identifier of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[12409,12532],"content":"The identifier returned by the Id property is the same as the token name of the recognition engine in the Windows registry.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The identifier returned by the Id property is the same as the token name of the recognition engine in the Windows registry.","pos":[0,123]}]},{"pos":[14232,14417],"content":"Returns the identifier for a specific <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns the identifier for a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[14856,15031],"content":"Gets the friendly name of a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the friendly name of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[16744,16932],"content":"Returns the friendly name for a specific <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns the friendly name for a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[17458,17643],"content":"Gets the audio formats supported by a <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Gets the audio formats supported by a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."},{"pos":[19580,19783],"content":"Returns a list of audio formats supported by a specific <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Returns a list of audio formats supported by a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.RecognizerInfo\n  id: RecognizerInfo\n  children:\n  - System.Speech.Recognition.RecognizerInfo.AdditionalInfo\n  - System.Speech.Recognition.RecognizerInfo.Culture\n  - System.Speech.Recognition.RecognizerInfo.Description\n  - System.Speech.Recognition.RecognizerInfo.Dispose\n  - System.Speech.Recognition.RecognizerInfo.Id\n  - System.Speech.Recognition.RecognizerInfo.Name\n  - System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats\n  langs:\n  - csharp\n  name: RecognizerInfo\n  nameWithType: RecognizerInfo\n  fullName: System.Speech.Recognition.RecognizerInfo\n  type: Class\n  summary: Represents information about a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: \"You can obtain identifying information for an initialized recognition engine using <xref:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo%2A?displayProperty=fullName> for a <xref:System.Speech.Recognition.SpeechRecognizer> object or <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo%2A?displayProperty=fullName> for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \\n  \\n The information returned in instances of RecognizerInfo obtained from a <xref:System.Speech.Recognition.SpeechRecognizer> is determined by the settings in the **Speech Properties** member of the **Control Panel**.  \\n  \\n You can use instances of RecognizerInfo to construct a specific configuration of <xref:System.Speech.Recognition.SpeechRecognitionEngine> using the <xref:System.Speech.Recognition.SpeechRecognitionEngine.%23ctor%28System.Speech.Recognition.RecognizerInfo%29> constructor.  \\n  \\n The static method <xref:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers%2A> returns a list of all available <xref:System.Speech.Recognition.SpeechRecognitionEngine> configurations as RecognizerInfo instances.\"\n  example:\n  - \"The following example validates a given <xref:System.Globalization.CultureInfo> and identifier string against the permitted <xref:System.Speech.Recognition.SpeechRecognitionEngine> configurations, expressed as a list of RecognizerInfo objects.  \\n  \\n If the <xref:System.Globalization.CultureInfo> and identifier string are valid, the example creates a new instance of <xref:System.Speech.Recognition.SpeechRecognitionEngine> using the RecognizerInfo instance as an argument.  \\n  \\n```c#  \\n  \\nprivate SpeechRecognitionEngine SelectRecognizer(CultureInfo requiredCulture, string requiredId)   \\n{  \\n  // Select based on a specific recognizer configuration  \\n  SpeechRecognitionEngine speechRecognitionEngine=null;  \\n  foreach (RecognizerInfo config in SpeechRecognitionEngine.InstalledRecognizers())   \\n  {  \\n    if (config.Culture.Equals(requiredCulture) && config.Id== requiredId)   \\n    {  \\n      speechRecognitionEngine = new SpeechRecognitionEngine(config);  \\n      break;  \\n    }  \\n  }  \\n  return speechRecognitionEngine;  \\n}  \\n```\"\n  syntax:\n    content: 'public class RecognizerInfo : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.AdditionalInfo\n  id: AdditionalInfo\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: AdditionalInfo\n  nameWithType: RecognizerInfo.AdditionalInfo\n  fullName: System.Speech.Recognition.RecognizerInfo.AdditionalInfo\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets additional information about a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The example below implements a button click which displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> object in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n The key/value pairs contained in the <xref:System.Collections.Generic.IDictionary%602> instance returned by AdditionalInfo are concatenated into a text table.  \\n  \\n```c#  \\nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \\n{  \\n  RecognizerInfo info = _recognizer.RecognizerInfo;  \\n  string AudioFormats = \\\"\\\";  \\n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \\n  {  \\n    AudioFormats += String.Format(\\\"       {0}\\\\n\\\", fmt.EncodingFormat.ToString());  \\n  }  \\n  string AdditionalInfo = \\\"\\\";  \\n  foreach (string key in info.AdditionalInfo.Keys)   \\n  {  \\n    AdditionalInfo += String.Format(\\\"      {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n  }  \\n  MessageBox.Show(String.Format(  \\n                     \\\"Name:                 {0 } \\\\n\\\" +  \\n                     \\\"Description:          {1} \\\\n\\\" +  \\n                     \\\"SupportedAudioFormats:\\\\n\\\" +  \\n                     \\\" {2} \\\" +  \\n                     \\\"Culture:              {3} \\\\n\\\" +  \\n                     \\\"AdditionalInfo:       \\\\n\\\" +  \\n                     \\\" {4}\\\\n\\\",  \\n                     info.Name.ToString(),  \\n                     info.Description.ToString(),  \\n                     AudioFormats,  \\n                     info.Culture.ToString(),  \\n                     AdditionalInfo));  \\n}  \\n```\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> AdditionalInfo { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: Returns an instance of &lt;xref:System.Collections.Generic.IDictionary%602&gt; containing information about the configuration of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> object.\n  overload: System.Speech.Recognition.RecognizerInfo.AdditionalInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.Culture\n  id: Culture\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: Culture\n  nameWithType: RecognizerInfo.Culture\n  fullName: System.Speech.Recognition.RecognizerInfo.Culture\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the culture supported by a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: A <xref:System.Globalization.CultureInfo> object can include the name of the culture, the associated language, the country/region, the calendar used, and how to format dates and sort strings.\n  example:\n  - \"The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Culture property to obtain the identifying string for the <xref:System.Globalization.CultureInfo> used by the recognition engine configuration.  \\n  \\n```c#  \\nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \\n{  \\n  RecognizerInfo info = _recognizer.RecognizerInfo;  \\n  string AudioFormats = \\\"\\\";  \\n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \\n  {  \\n    AudioFormats += String.Format(\\\"       {0}\\\\n\\\", fmt.EncodingFormat.ToString());  \\n  }  \\n  string AdditionalInfo = \\\"\\\";  \\n  foreach (string key in info.AdditionalInfo.Keys)   \\n  {  \\n    AdditionalInfo += String.Format(\\\"      {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n  }  \\n  MessageBox.Show(String.Format(  \\n                     \\\"Name:                 {0 }\\\\n\\\" +  \\n                     \\\"Description:          {1} \\\\n\\\" +  \\n                     \\\"SupportedAudioFormats:\\\\n\\\" +  \\n                     \\\"{2} \\\" +  \\n                     \\\"Culture:              {3} \\\\n\\\" +  \\n                     \\\"AdditionalInfo:       \\\\n\\\" +  \\n                     \\\" {4}\\\\n\\\",  \\n                     info.Name.ToString(),  \\n                     info.Description.ToString(),  \\n                     AudioFormats,  \\n                     info.Culture.ToString(),  \\n                     AdditionalInfo));  \\n}  \\n```\"\n  syntax:\n    content: public System.Globalization.CultureInfo Culture { get; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: Returns information about the culture supported by a given <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  overload: System.Speech.Recognition.RecognizerInfo.Culture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.Description\n  id: Description\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: Description\n  nameWithType: RecognizerInfo.Description\n  fullName: System.Speech.Recognition.RecognizerInfo.Description\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the description of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The following example below implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Description property to obtain the description of a speech recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n```c#  \\nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \\n{  \\n  RecognizerInfo info = _recognizer.RecognizerInfo;  \\n  string AudioFormats = \\\"\\\";  \\n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \\n  {  \\n    AudioFormats += String.Format(\\\"       {0}\\\\n\\\", fmt.EncodingFormat.ToString());  \\n  }  \\n  string AdditionalInfo = \\\"\\\";  \\n  foreach (string key in info.AdditionalInfo.Keys)   \\n  {  \\n    AdditionalInfo += String.Format(\\\"      {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n  }  \\n  MessageBox.Show(String.Format(  \\n                     \\\"Name:                 {0 }\\\\n\\\" +  \\n                     \\\"Description:          {1} \\\\n\\\" +  \\n                     \\\"SupportedAudioFormats:\\\\n\\\" +  \\n                     \\\"{2} \\\" +  \\n                     \\\"Culture:              {3} \\\\n\\\" +  \\n                     \\\"AdditionalInfo:       \\\\n\\\" +  \\n                     \\\" {4}\\\\n\\\",  \\n                     info.Name.ToString(),  \\n                     info.Description.ToString(),  \\n                     AudioFormats,  \\n                     info.Culture.ToString(),  \\n                     AdditionalInfo));  \\n}  \\n```\"\n  syntax:\n    content: public string Description { get; }\n    return:\n      type: System.String\n      description: Returns a <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that describes the configuration for a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  overload: System.Speech.Recognition.RecognizerInfo.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.Dispose\n  id: Dispose\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: RecognizerInfo.Dispose()\n  fullName: System.Speech.Recognition.RecognizerInfo.Dispose()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Disposes the `RecognizerInfo` object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Speech.Recognition.RecognizerInfo.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.Id\n  id: Id\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: Id\n  nameWithType: RecognizerInfo.Id\n  fullName: System.Speech.Recognition.RecognizerInfo.Id\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the identifier of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: The identifier returned by the Id property is the same as the token name of the recognition engine in the Windows registry.\n  example:\n  - \"The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Id property to obtain the identifier string of a recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n```  \\nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \\n{  \\n  RecognizerInfo info = _recognizer.RecognizerInfo;  \\n  string AudioFormats = \\\"\\\";  \\n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \\n  {  \\n    AudioFormats += String.Format(\\\"       {0}\\\\n\\\",  fmt.EncodingFormat.ToString());  \\n  }  \\n  string AdditionalInfo = \\\"\\\";  \\n  foreach (string key in info.AdditionalInfo.Keys)   \\n  {  \\n    AdditionalInfo += String.Format(\\\"      {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n  }  \\n  MessageBox.Show(String.Format(  \\n                           \\\"Name:                 {0 }\\\\n\\\" +  \\n                           \\\"Description:          {1} \\\\n\\\" +  \\n                           \\\"SupportedAudioFormats:\\\\n\\\" +  \\n                           \\\"{2} \\\" +  \\n                           \\\"Culture:              {3} \\\\n\\\" +  \\n                           \\\"AdditionalInfo:       \\\\n\\\" +  \\n                           \\\" {4}\\\\n\\\",  \\n                           info.Name.ToString(),  \\n                           info.Description.ToString(),  \\n                           AudioFormats,  \\n                           info.Culture.ToString(),  \\n                           AdditionalInfo));  \\n}  \\n```\"\n  syntax:\n    content: public string Id { get; }\n    return:\n      type: System.String\n      description: Returns the identifier for a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  overload: System.Speech.Recognition.RecognizerInfo.Id*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.Name\n  id: Name\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: RecognizerInfo.Name\n  fullName: System.Speech.Recognition.RecognizerInfo.Name\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the friendly name of a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the Name property to obtain the friendly name of a recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n```  \\nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \\n{  \\n  RecognizerInfo info = _recognizer.RecognizerInfo;  \\n  string AudioFormats = \\\"\\\";  \\n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \\n  {  \\n    AudioFormats += String.Format(\\\"       {0}\\\\n\\\", fmt.EncodingFormat.ToString());  \\n  }  \\n  string AdditionalInfo = \\\"\\\";  \\n  foreach (string key in info.AdditionalInfo.Keys)   \\n  {  \\n    AdditionalInfo += String.Format(\\\"      {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n  }  \\n  MessageBox.Show(String.Format(  \\n                           \\\"Name:                 {0 }\\\\n\\\" +  \\n                           \\\"Description:          {1} \\\\n\\\" +  \\n                           \\\"SupportedAudioFormats:\\\\n\\\" +  \\n                           \\\"{2} \\\" +  \\n                           \\\"Culture:              {3} \\\\n\\\" +  \\n                           \\\"AdditionalInfo:       \\\\n\\\" +  \\n                           \\\" {4}\\\\n\\\",  \\n                           info.Name.ToString(),  \\n                           info.Description.ToString(),  \\n                           AudioFormats,  \\n                           info.Culture.ToString(),  \\n                           AdditionalInfo));  \\n}  \\n```\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Returns the friendly name for a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  overload: System.Speech.Recognition.RecognizerInfo.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats\n  id: SupportedAudioFormats\n  parent: System.Speech.Recognition.RecognizerInfo\n  langs:\n  - csharp\n  name: SupportedAudioFormats\n  nameWithType: RecognizerInfo.SupportedAudioFormats\n  fullName: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the audio formats supported by a <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  remarks: ''\n  example:\n  - \"The following example implements a button click that displays all the information in a <xref:System.Speech.Recognition.RecognizerInfo> instance. The example uses the SupportedAudioFormats property to obtain the encoding formats supported by a recognition engine configuration, and then displays it in a <xref:System.Windows.Forms.MessageBox>.  \\n  \\n```  \\nprivate void recognizerInfoButton_Click(object sender, EventArgs e)   \\n{  \\n  RecognizerInfo info = _recognizer.RecognizerInfo;  \\n  string AudioFormats = \\\"\\\";  \\n  foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)   \\n  {  \\n    AudioFormats += String.Format(\\\"       {0}\\\\n\\\", fmt.EncodingFormat.ToString());  \\n  }  \\n  string AdditionalInfo = \\\"\\\";  \\n  foreach (string key in info.AdditionalInfo.Keys)   \\n  {  \\n    AdditionalInfo += String.Format(\\\"      {0}: {1}\\\\n\\\", key, info.AdditionalInfo[key]);  \\n  }  \\n  MessageBox.Show(String.Format(  \\n                           \\\"Name:                 {0 }\\\\n\\\" +  \\n                           \\\"Description:          {1} \\\\n\\\" +  \\n                           \\\"SupportedAudioFormats:\\\\n\\\" +  \\n                           \\\"{2} \\\" +  \\n                           \\\"Culture:              {3} \\\\n\\\" +  \\n                           \\\"AdditionalInfo:       \\\\n\\\" +  \\n                           \\\" {4}\\\\n\\\",  \\n                           info.Name.ToString(),  \\n                           info.Description.ToString(),  \\n                           AudioFormats,  \\n                           info.Culture.ToString(),  \\n                           AdditionalInfo));  \\n}  \\n```\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.AudioFormat.SpeechAudioFormatInfo> SupportedAudioFormats { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.AudioFormat.SpeechAudioFormatInfo}\n      description: Returns a list of audio formats supported by a specific <xref href=\"System.Speech.Recognition.SpeechRecognizer\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> instance.\n  overload: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Speech.Recognition.RecognizerInfo.AdditionalInfo\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: AdditionalInfo\n  nameWithType: RecognizerInfo.AdditionalInfo\n  fullName: System.Speech.Recognition.RecognizerInfo.AdditionalInfo\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.RecognizerInfo.Culture\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Culture\n  nameWithType: RecognizerInfo.Culture\n  fullName: System.Speech.Recognition.RecognizerInfo.Culture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Speech.Recognition.RecognizerInfo.Description\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Description\n  nameWithType: RecognizerInfo.Description\n  fullName: System.Speech.Recognition.RecognizerInfo.Description\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Recognition.RecognizerInfo.Dispose\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Dispose()\n  nameWithType: RecognizerInfo.Dispose()\n  fullName: System.Speech.Recognition.RecognizerInfo.Dispose()\n- uid: System.Speech.Recognition.RecognizerInfo.Id\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Id\n  nameWithType: RecognizerInfo.Id\n  fullName: System.Speech.Recognition.RecognizerInfo.Id\n- uid: System.Speech.Recognition.RecognizerInfo.Name\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Name\n  nameWithType: RecognizerInfo.Name\n  fullName: System.Speech.Recognition.RecognizerInfo.Name\n- uid: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: SupportedAudioFormats\n  nameWithType: RecognizerInfo.SupportedAudioFormats\n  fullName: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.AudioFormat.SpeechAudioFormatInfo}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<SpeechAudioFormatInfo>\n  nameWithType: ReadOnlyCollection<SpeechAudioFormatInfo>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.AudioFormat.SpeechAudioFormatInfo>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Speech.AudioFormat.SpeechAudioFormatInfo>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Speech.AudioFormat.SpeechAudioFormatInfo\n    name: SpeechAudioFormatInfo\n    nameWithType: SpeechAudioFormatInfo\n    fullName: SpeechAudioFormatInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Speech.Recognition.RecognizerInfo.AdditionalInfo*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: AdditionalInfo\n  nameWithType: RecognizerInfo.AdditionalInfo\n- uid: System.Speech.Recognition.RecognizerInfo.Culture*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Culture\n  nameWithType: RecognizerInfo.Culture\n- uid: System.Speech.Recognition.RecognizerInfo.Description*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Description\n  nameWithType: RecognizerInfo.Description\n- uid: System.Speech.Recognition.RecognizerInfo.Dispose*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Dispose\n  nameWithType: RecognizerInfo.Dispose\n- uid: System.Speech.Recognition.RecognizerInfo.Id*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Id\n  nameWithType: RecognizerInfo.Id\n- uid: System.Speech.Recognition.RecognizerInfo.Name*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: Name\n  nameWithType: RecognizerInfo.Name\n- uid: System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats*\n  parent: System.Speech.Recognition.RecognizerInfo\n  isExternal: false\n  name: SupportedAudioFormats\n  nameWithType: RecognizerInfo.SupportedAudioFormats\n"}