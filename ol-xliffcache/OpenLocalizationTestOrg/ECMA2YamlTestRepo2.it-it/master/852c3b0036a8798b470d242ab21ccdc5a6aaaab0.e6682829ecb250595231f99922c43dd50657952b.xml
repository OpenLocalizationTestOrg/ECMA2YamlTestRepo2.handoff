{"nodes":[{"pos":[990,1213],"content":"An abstract base class that implements the <xref:System.IAsyncResult> interface. Serves as a base class from which to derive <xref:System.IAsyncResult> objects that can be used for common asynchronous programming scenarios.","needQuote":true,"needEscape":true,"nodes":[{"content":"An abstract base class that implements the <xref:System.IAsyncResult> interface. Serves as a base class from which to derive <xref:System.IAsyncResult> objects that can be used for common asynchronous programming scenarios.","pos":[0,223],"nodes":[{"content":"An abstract base class that implements the &lt;xref:System.IAsyncResult&gt; interface.","pos":[0,80],"source":"An abstract base class that implements the <xref:System.IAsyncResult> interface."},{"content":"Serves as a base class from which to derive &lt;xref:System.IAsyncResult&gt; objects that can be used for common asynchronous programming scenarios.","pos":[81,223],"source":" Serves as a base class from which to derive <xref:System.IAsyncResult> objects that can be used for common asynchronous programming scenarios."}]}]},{"pos":[1226,1410],"content":"For more information see the <xref:System.IAsyncResult?displayProperty=fullName> interface.       The <xref:System.IdentityModel.TypedAsyncResult%601> class derives from AsyncResult.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information see the <xref:System.IAsyncResult?displayProperty=fullName> interface.       The <xref:System.IdentityModel.TypedAsyncResult%601> class derives from AsyncResult.","pos":[0,182],"nodes":[{"content":"For more information see the &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; interface.","pos":[0,91],"source":"For more information see the <xref:System.IAsyncResult?displayProperty=fullName> interface."},{"content":"The &lt;xref:System.IdentityModel.TypedAsyncResult%601&gt; class derives from AsyncResult.","pos":[98,182],"source":"       The <xref:System.IdentityModel.TypedAsyncResult%601> class derives from AsyncResult."}]}]},{"pos":[1989,2184],"content":"Called from constructors in derived classes to initialize an instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that does not have a callback delegate or  a state object.","needQuote":true,"needEscape":true,"source":"Called from constructors in derived classes to initialize an instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class that does not have a callback delegate or  a state object."},{"pos":[2743,2949],"content":"Called from constructors in derived classes to initialize an instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that does not have a callback delegate but does have  a state object.","needQuote":true,"needEscape":true,"source":"Called from constructors in derived classes to initialize an instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class that does not have a callback delegate but does have  a state object."},{"pos":[3088,3181],"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","pos":[0,93]}]},{"pos":[3756,3942],"content":"Called from constructors in derived classes to initialize an instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that has a callback delegate and  a state object.","needQuote":true,"needEscape":true,"source":"Called from constructors in derived classes to initialize an instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class that has a callback delegate and  a state object."},{"pos":[4115,4181],"content":"The method to be called when the asynchronous operation completes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method to be called when the asynchronous operation completes.","pos":[0,66]}]},{"pos":[4243,4336],"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","pos":[0,93]}]},{"pos":[4775,4873],"content":"Gets a user-defined object that qualifies or contains information about an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a user-defined object that qualifies or contains information about an asynchronous operation.","pos":[0,98]}]},{"pos":[4885,4989],"content":"For more information see the <xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information see the &lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName&gt; property.","pos":[0,104],"source":"For more information see the <xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName> property."}]},{"pos":[5104,5197],"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","pos":[0,93]}]},{"pos":[5666,5771],"content":"Gets a <xref:System.Threading.WaitHandle> that is used to wait for an asynchronous operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Threading.WaitHandle&gt; that is used to wait for an asynchronous operation to complete.","pos":[0,105],"source":"Gets a <xref:System.Threading.WaitHandle> that is used to wait for an asynchronous operation to complete."}]},{"pos":[5783,5892],"content":"For more information see the <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information see the &lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName&gt; property.","pos":[0,109],"source":"For more information see the <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName> property."}]},{"pos":[6055,6155],"content":"A <xref:System.Threading.WaitHandle> that is used to wait for an asynchronous operation to complete.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Threading.WaitHandle&gt; that is used to wait for an asynchronous operation to complete.","pos":[0,100],"source":"A <xref:System.Threading.WaitHandle> that is used to wait for an asynchronous operation to complete."}]},{"pos":[6651,6824],"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.","pos":[0,173],"nodes":[{"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered.","pos":[0,108]},{"content":"It updates the state of the operation and notifies the callback.","pos":[109,173]}]}]},{"pos":[6998,7187],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the asynchronous operation completed synchronously; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the asynchronous operation completed synchronously; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7740,7982],"content":"Call this version of complete if you raise an exception during processing. In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref:System.IdentityModel.AsyncResult.End*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call this version of complete if you raise an exception during processing. In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref:System.IdentityModel.AsyncResult.End*> method.","pos":[0,242],"nodes":[{"content":"Call this version of complete if you raise an exception during processing.","pos":[0,74]},{"content":"In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the &lt;xref:System.IdentityModel.AsyncResult.End*&gt; method.","pos":[75,242],"source":" In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref:System.IdentityModel.AsyncResult.End*> method."}]}]},{"pos":[8177,8366],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the asynchronous operation completed synchronously; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the asynchronous operation completed synchronously; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8435,8515],"content":"The exception that occurred during the processing of the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that occurred during the processing of the asynchronous operation.","pos":[0,80]}]},{"pos":[9017,9104],"content":"Gets a value that indicates whether the asynchronous operation completed synchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the asynchronous operation completed synchronously.","pos":[0,87]}]},{"pos":[9116,9232],"content":"For more information see the <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information see the &lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName&gt; property.","pos":[0,116],"source":"For more information see the <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName> property."}]},{"pos":[9358,9548],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the asynchronous operation completed synchronously; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the asynchronous operation completed synchronously; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9993,10112],"content":"Releases the resources used by the current instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the current instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class."},{"pos":[10661,10942],"content":"Called by the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.AsyncResult.Dispose\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and &lt;xref:System.IdentityModel.AsyncResult.Finalize*&gt; methods to release the managed and unmanaged resources used by the current instance of the <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Called by the <xref href=\"System.IdentityModel.AsyncResult.Dispose\"></xref> and <xref:System.IdentityModel.AsyncResult.Finalize*> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class."},{"pos":[11113,11430],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that this is an explicit call to Dispose.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","pos":[0,204],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicates that this is an explicit call to Dispose.","pos":[205,317],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that this is an explicit call to Dispose."}]},{"pos":[11918,12091],"content":"Call this method when the `End` function for the asynchronous operation is complete. It ensures that the asynchronous operation is complete, and does some common validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Call this method when the <ph id=\"ph1\">`End`</ph> function for the asynchronous operation is complete.","pos":[0,84],"source":"Call this method when the `End` function for the asynchronous operation is complete."},{"content":"It ensures that the asynchronous operation is complete, and does some common validation.","pos":[85,173]}]},{"pos":[12245,12330],"content":"The <xref:System.IAsyncResult> representing the status of the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IAsyncResult&gt; representing the status of the asynchronous operation.","pos":[0,85],"source":"The <xref:System.IAsyncResult> representing the status of the asynchronous operation."}]},{"pos":[12761,12940],"content":"Allows the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","needQuote":true,"needEscape":true,"source":"Allows the <xref href=\"System.IdentityModel.AsyncResult\"></xref> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection."},{"pos":[13446,13523],"content":"Gets a value that indicates whether the asynchronous operation has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the asynchronous operation has completed.","pos":[0,77]}]},{"pos":[13638,13803],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is complete; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is complete; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.AsyncResult\n  id: AsyncResult\n  children:\n  - System.IdentityModel.AsyncResult.#ctor\n  - System.IdentityModel.AsyncResult.#ctor(System.Object)\n  - System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)\n  - System.IdentityModel.AsyncResult.AsyncState\n  - System.IdentityModel.AsyncResult.AsyncWaitHandle\n  - System.IdentityModel.AsyncResult.Complete(System.Boolean)\n  - System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)\n  - System.IdentityModel.AsyncResult.CompletedSynchronously\n  - System.IdentityModel.AsyncResult.Dispose\n  - System.IdentityModel.AsyncResult.Dispose(System.Boolean)\n  - System.IdentityModel.AsyncResult.End(System.IAsyncResult)\n  - System.IdentityModel.AsyncResult.Finalize\n  - System.IdentityModel.AsyncResult.IsCompleted\n  langs:\n  - csharp\n  name: AsyncResult\n  nameWithType: AsyncResult\n  fullName: System.IdentityModel.AsyncResult\n  type: Class\n  summary: An abstract base class that implements the <xref:System.IAsyncResult> interface. Serves as a base class from which to derive <xref:System.IAsyncResult> objects that can be used for common asynchronous programming scenarios.\n  remarks: \"For more information see the <xref:System.IAsyncResult?displayProperty=fullName> interface.  \\n  \\n The <xref:System.IdentityModel.TypedAsyncResult%601> class derives from AsyncResult.\"\n  syntax:\n    content: 'public abstract class AsyncResult : IAsyncResult, IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IAsyncResult\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: AsyncResult()\n  nameWithType: AsyncResult.AsyncResult()\n  fullName: System.IdentityModel.AsyncResult.AsyncResult()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Called from constructors in derived classes to initialize an instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class that does not have a callback delegate or  a state object.\n  syntax:\n    content: protected AsyncResult ();\n    parameters: []\n  overload: System.IdentityModel.AsyncResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: AsyncResult(Object)\n  nameWithType: AsyncResult.AsyncResult(Object)\n  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Called from constructors in derived classes to initialize an instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class that does not have a callback delegate but does have  a state object.\n  syntax:\n    content: protected AsyncResult (object state);\n    parameters:\n    - id: state\n      type: System.Object\n      description: A user-defined object that qualifies or contains information about an asynchronous operation.\n  overload: System.IdentityModel.AsyncResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)\n  id: '#ctor(System.AsyncCallback,System.Object)'\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: AsyncResult(AsyncCallback,Object)\n  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)\n  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Called from constructors in derived classes to initialize an instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class that has a callback delegate and  a state object.\n  syntax:\n    content: protected AsyncResult (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the asynchronous operation completes.\n    - id: state\n      type: System.Object\n      description: A user-defined object that qualifies or contains information about an asynchronous operation.\n  overload: System.IdentityModel.AsyncResult.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.AsyncState\n  id: AsyncState\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: AsyncState\n  nameWithType: AsyncResult.AsyncState\n  fullName: System.IdentityModel.AsyncResult.AsyncState\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets a user-defined object that qualifies or contains information about an asynchronous operation.\n  remarks: For more information see the <xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName> property.\n  syntax:\n    content: public object AsyncState { get; }\n    return:\n      type: System.Object\n      description: A user-defined object that qualifies or contains information about an asynchronous operation.\n  overload: System.IdentityModel.AsyncResult.AsyncState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle\n  id: AsyncWaitHandle\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: AsyncWaitHandle\n  nameWithType: AsyncResult.AsyncWaitHandle\n  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets a <xref:System.Threading.WaitHandle> that is used to wait for an asynchronous operation to complete.\n  remarks: For more information see the <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName> property.\n  syntax:\n    content: public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }\n    return:\n      type: System.Threading.WaitHandle\n      description: A <xref:System.Threading.WaitHandle> that is used to wait for an asynchronous operation to complete.\n  overload: System.IdentityModel.AsyncResult.AsyncWaitHandle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)\n  id: Complete(System.Boolean)\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: Complete(Boolean)\n  nameWithType: AsyncResult.Complete(Boolean)\n  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.\n  syntax:\n    content: protected void Complete (bool completedSynchronously);\n    parameters:\n    - id: completedSynchronously\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the asynchronous operation completed synchronously; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.AsyncResult.Complete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)\n  id: Complete(System.Boolean,System.Exception)\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: Complete(Boolean,Exception)\n  nameWithType: AsyncResult.Complete(Boolean,Exception)\n  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Call this version of complete if you raise an exception during processing. In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref:System.IdentityModel.AsyncResult.End*> method.\n  syntax:\n    content: protected void Complete (bool completedSynchronously, Exception exception);\n    parameters:\n    - id: completedSynchronously\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the asynchronous operation completed synchronously; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: exception\n      type: System.Exception\n      description: The exception that occurred during the processing of the asynchronous operation.\n  overload: System.IdentityModel.AsyncResult.Complete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.CompletedSynchronously\n  id: CompletedSynchronously\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: CompletedSynchronously\n  nameWithType: AsyncResult.CompletedSynchronously\n  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets a value that indicates whether the asynchronous operation completed synchronously.\n  remarks: For more information see the <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName> property.\n  syntax:\n    content: public bool CompletedSynchronously { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the asynchronous operation completed synchronously; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.AsyncResult.CompletedSynchronously*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.Dispose\n  id: Dispose\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: AsyncResult.Dispose()\n  fullName: System.IdentityModel.AsyncResult.Dispose()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Releases the resources used by the current instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IdentityModel.AsyncResult.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AsyncResult.Dispose(Boolean)\n  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Called by the <xref href=\"System.IdentityModel.AsyncResult.Dispose\"></xref> and <xref:System.IdentityModel.AsyncResult.Finalize*> methods to release the managed and unmanaged resources used by the current instance of the <xref href=\"System.IdentityModel.AsyncResult\"></xref> class.\n  syntax:\n    content: protected virtual void Dispose (bool isExplicitDispose);\n    parameters:\n    - id: isExplicitDispose\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources. <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> indicates that this is an explicit call to Dispose.\n  overload: System.IdentityModel.AsyncResult.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)\n  id: End(System.IAsyncResult)\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: End(IAsyncResult)\n  nameWithType: AsyncResult.End(IAsyncResult)\n  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Call this method when the `End` function for the asynchronous operation is complete. It ensures that the asynchronous operation is complete, and does some common validation.\n  syntax:\n    content: public static void End (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref:System.IAsyncResult> representing the status of the asynchronous operation.\n  overload: System.IdentityModel.AsyncResult.End*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.Finalize\n  id: Finalize\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: AsyncResult.Finalize()\n  fullName: System.IdentityModel.AsyncResult.Finalize()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Allows the <xref href=\"System.IdentityModel.AsyncResult\"></xref> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~AsyncResult ();\n    parameters: []\n  overload: System.IdentityModel.AsyncResult.Finalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.AsyncResult.IsCompleted\n  id: IsCompleted\n  parent: System.IdentityModel.AsyncResult\n  langs:\n  - csharp\n  name: IsCompleted\n  nameWithType: AsyncResult.IsCompleted\n  fullName: System.IdentityModel.AsyncResult.IsCompleted\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets a value that indicates whether the asynchronous operation has completed.\n  syntax:\n    content: public bool IsCompleted { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is complete; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.AsyncResult.IsCompleted*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IdentityModel.AsyncResult.#ctor\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncResult()\n  nameWithType: AsyncResult.AsyncResult()\n  fullName: System.IdentityModel.AsyncResult.AsyncResult()\n- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncResult(Object)\n  nameWithType: AsyncResult.AsyncResult(Object)\n  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)\n- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncResult(AsyncCallback,Object)\n  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)\n  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.IdentityModel.AsyncResult.AsyncState\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncState\n  nameWithType: AsyncResult.AsyncState\n  fullName: System.IdentityModel.AsyncResult.AsyncState\n- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncWaitHandle\n  nameWithType: AsyncResult.AsyncWaitHandle\n  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: true\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Complete(Boolean)\n  nameWithType: AsyncResult.Complete(Boolean)\n  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Complete(Boolean,Exception)\n  nameWithType: AsyncResult.Complete(Boolean,Exception)\n  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.IdentityModel.AsyncResult.CompletedSynchronously\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: CompletedSynchronously\n  nameWithType: AsyncResult.CompletedSynchronously\n  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously\n- uid: System.IdentityModel.AsyncResult.Dispose\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Dispose()\n  nameWithType: AsyncResult.Dispose()\n  fullName: System.IdentityModel.AsyncResult.Dispose()\n- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AsyncResult.Dispose(Boolean)\n  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)\n- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: End(IAsyncResult)\n  nameWithType: AsyncResult.End(IAsyncResult)\n  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.IdentityModel.AsyncResult.Finalize\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Finalize()\n  nameWithType: AsyncResult.Finalize()\n  fullName: System.IdentityModel.AsyncResult.Finalize()\n- uid: System.IdentityModel.AsyncResult.IsCompleted\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: IsCompleted\n  nameWithType: AsyncResult.IsCompleted\n  fullName: System.IdentityModel.AsyncResult.IsCompleted\n- uid: System.IdentityModel.AsyncResult.#ctor*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncResult\n  nameWithType: AsyncResult.AsyncResult\n- uid: System.IdentityModel.AsyncResult.AsyncState*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncState\n  nameWithType: AsyncResult.AsyncState\n- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncWaitHandle\n  nameWithType: AsyncResult.AsyncWaitHandle\n- uid: System.IdentityModel.AsyncResult.Complete*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Complete\n  nameWithType: AsyncResult.Complete\n- uid: System.IdentityModel.AsyncResult.CompletedSynchronously*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: CompletedSynchronously\n  nameWithType: AsyncResult.CompletedSynchronously\n- uid: System.IdentityModel.AsyncResult.Dispose*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Dispose\n  nameWithType: AsyncResult.Dispose\n- uid: System.IdentityModel.AsyncResult.End*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: End\n  nameWithType: AsyncResult.End\n- uid: System.IdentityModel.AsyncResult.Finalize*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Finalize\n  nameWithType: AsyncResult.Finalize\n- uid: System.IdentityModel.AsyncResult.IsCompleted*\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: IsCompleted\n  nameWithType: AsyncResult.IsCompleted\n"}