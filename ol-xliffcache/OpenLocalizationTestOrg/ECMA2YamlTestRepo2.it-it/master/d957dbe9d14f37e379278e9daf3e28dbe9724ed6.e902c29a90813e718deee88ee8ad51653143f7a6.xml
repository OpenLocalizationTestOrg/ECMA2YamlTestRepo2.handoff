{"nodes":[{"pos":[5568,5580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7129,7141],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7197,7209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8133,8145],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8201,8213],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9172,9184],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9240,9252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10169,10181],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10237,10249],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11166,11178],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11234,11246],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12205,12217],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12273,12285],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13230,13242],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13298,13310],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14262,14274],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14330,14342],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15266,15278],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15334,15346],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16291,16303],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16359,16371],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17309,17321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17377,17389],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18341,18353],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18409,18421],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19352,19364],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19420,19432],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20321,20333],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20389,20401],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21332,21344],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21400,21412],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22357,22369],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22425,22437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23375,23387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23443,23455],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24407,24419],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24475,24487],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25425,25437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25493,25505],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26436,26448],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26504,26516],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27433,27445],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27501,27513],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28430,28442],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28498,28510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29440,29452],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29508,29520],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30437,30449],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30505,30517],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31441,31453],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31509,31521],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32487,32499],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32555,32567],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33477,33489],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33545,33557],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34474,34486],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34542,34554],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35485,35497],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35553,35565],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36468,36480],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36536,36548],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37563,37575],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37631,37643],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38581,38593],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38649,38661],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39606,39618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39674,39686],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40645,40657],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40713,40725],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41635,41647],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41703,41715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42646,42658],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42714,42726],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43769,43781],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43837,43849],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44766,44778],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44834,44846],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45763,45775],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[45831,45843],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46760,46772],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[46828,46840],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47764,47776],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47832,47844],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48789,48801],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48857,48869],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49877,49889],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49945,49957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  id: DbExpressionVisitor`1\n  children:\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  - System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  langs:\n  - csharp\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n  type: Class\n  syntax:\n    content: public abstract class DbExpressionVisitor<TResultType>\n    typeParameters:\n    - id: TResultType\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: DbExpressionVisitor()\n  nameWithType: DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: protected DbExpressionVisitor ();\n    parameters: []\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbAndExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbAndExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbAndExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbApplyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbArithmeticExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbCaseExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCaseExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbCastExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCastExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCastExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbComparisonExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbConstantExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbCrossJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbCrossJoinExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbDerefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbDerefExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbDistinctExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbDistinctExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbElementExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbElementExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbElementExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbEntityRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbEntityRefExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbExceptExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExceptExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbFilterExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbFunctionExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbGroupByExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbGroupByExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIntersectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIntersectExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIsEmptyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsEmptyExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIsNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsNullExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbIsOfExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbLambdaExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public virtual TResultType Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbLikeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbLimitExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbNewInstanceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbNotExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNotExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNotExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNullExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbNullExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbOfTypeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbOrExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOrExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbOrExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbParameterReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbProjectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbPropertyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbQuantifierExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbRefKeyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRefKeyExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbRelationshipNavigationExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbScanExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbScanExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbScanExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbSkipExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbSortExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSortExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbTreatExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbTreatExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbUnionAllExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbUnionAllExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  id: Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  langs:\n  - csharp\n  name: Visit(DbVariableReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public abstract TResultType Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);\n    parameters:\n    - id: expression\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: To be added.\n    return:\n      type: TResultType\n      description: To be added.\n  overload: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: DbExpressionVisitor()\n  nameWithType: DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.DbExpressionVisitor()\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbAndExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbAndExpression)\n- uid: TResultType\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbAndExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAndExpression\n  nameWithType: DbAndExpression\n  fullName: System.Data.Common.CommandTrees.DbAndExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbApplyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbApplyExpression)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbArithmeticExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbArithmeticExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbCaseExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCaseExpression)\n- uid: System.Data.Common.CommandTrees.DbCaseExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCaseExpression\n  nameWithType: DbCaseExpression\n  fullName: System.Data.Common.CommandTrees.DbCaseExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbCastExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCastExpression)\n- uid: System.Data.Common.CommandTrees.DbCastExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCastExpression\n  nameWithType: DbCastExpression\n  fullName: System.Data.Common.CommandTrees.DbCastExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbComparisonExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbComparisonExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbConstantExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbConstantExpression)\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbCrossJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbCrossJoinExpression)\n- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCrossJoinExpression\n  nameWithType: DbCrossJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbDerefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDerefExpression)\n- uid: System.Data.Common.CommandTrees.DbDerefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDerefExpression\n  nameWithType: DbDerefExpression\n  fullName: System.Data.Common.CommandTrees.DbDerefExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbDistinctExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbDistinctExpression)\n- uid: System.Data.Common.CommandTrees.DbDistinctExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDistinctExpression\n  nameWithType: DbDistinctExpression\n  fullName: System.Data.Common.CommandTrees.DbDistinctExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbElementExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbElementExpression)\n- uid: System.Data.Common.CommandTrees.DbElementExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbElementExpression\n  nameWithType: DbElementExpression\n  fullName: System.Data.Common.CommandTrees.DbElementExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbEntityRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbEntityRefExpression)\n- uid: System.Data.Common.CommandTrees.DbEntityRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbEntityRefExpression\n  nameWithType: DbEntityRefExpression\n  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbExceptExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExceptExpression)\n- uid: System.Data.Common.CommandTrees.DbExceptExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExceptExpression\n  nameWithType: DbExceptExpression\n  fullName: System.Data.Common.CommandTrees.DbExceptExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbFilterExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFilterExpression)\n- uid: System.Data.Common.CommandTrees.DbFilterExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFilterExpression\n  nameWithType: DbFilterExpression\n  fullName: System.Data.Common.CommandTrees.DbFilterExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbFunctionExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbFunctionExpression)\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbGroupByExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbGroupByExpression)\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIntersectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIntersectExpression)\n- uid: System.Data.Common.CommandTrees.DbIntersectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIntersectExpression\n  nameWithType: DbIntersectExpression\n  fullName: System.Data.Common.CommandTrees.DbIntersectExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIsEmptyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsEmptyExpression)\n- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsEmptyExpression\n  nameWithType: DbIsEmptyExpression\n  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIsNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsNullExpression)\n- uid: System.Data.Common.CommandTrees.DbIsNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsNullExpression\n  nameWithType: DbIsNullExpression\n  fullName: System.Data.Common.CommandTrees.DbIsNullExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbIsOfExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbIsOfExpression)\n- uid: System.Data.Common.CommandTrees.DbIsOfExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsOfExpression\n  nameWithType: DbIsOfExpression\n  fullName: System.Data.Common.CommandTrees.DbIsOfExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbJoinExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbJoinExpression)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbLambdaExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLambdaExpression)\n- uid: System.Data.Common.CommandTrees.DbLambdaExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambdaExpression\n  nameWithType: DbLambdaExpression\n  fullName: System.Data.Common.CommandTrees.DbLambdaExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbLikeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLikeExpression)\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbLimitExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbLimitExpression)\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbNewInstanceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNewInstanceExpression)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbNotExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNotExpression)\n- uid: System.Data.Common.CommandTrees.DbNotExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNotExpression\n  nameWithType: DbNotExpression\n  fullName: System.Data.Common.CommandTrees.DbNotExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbNullExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbNullExpression)\n- uid: System.Data.Common.CommandTrees.DbNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNullExpression\n  nameWithType: DbNullExpression\n  fullName: System.Data.Common.CommandTrees.DbNullExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbOfTypeExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOfTypeExpression)\n- uid: System.Data.Common.CommandTrees.DbOfTypeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOfTypeExpression\n  nameWithType: DbOfTypeExpression\n  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbOrExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbOrExpression)\n- uid: System.Data.Common.CommandTrees.DbOrExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOrExpression\n  nameWithType: DbOrExpression\n  fullName: System.Data.Common.CommandTrees.DbOrExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbParameterReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbParameterReferenceExpression)\n- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbParameterReferenceExpression\n  nameWithType: DbParameterReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbProjectExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbProjectExpression)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbPropertyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbPropertyExpression)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbQuantifierExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbQuantifierExpression)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbRefExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefExpression)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbRefKeyExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRefKeyExpression)\n- uid: System.Data.Common.CommandTrees.DbRefKeyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefKeyExpression\n  nameWithType: DbRefKeyExpression\n  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbRelationshipNavigationExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbRelationshipNavigationExpression)\n- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRelationshipNavigationExpression\n  nameWithType: DbRelationshipNavigationExpression\n  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbScanExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbScanExpression)\n- uid: System.Data.Common.CommandTrees.DbScanExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbScanExpression\n  nameWithType: DbScanExpression\n  fullName: System.Data.Common.CommandTrees.DbScanExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbSkipExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSkipExpression)\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbSortExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbSortExpression)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbTreatExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbTreatExpression)\n- uid: System.Data.Common.CommandTrees.DbTreatExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbTreatExpression\n  nameWithType: DbTreatExpression\n  fullName: System.Data.Common.CommandTrees.DbTreatExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbUnionAllExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbUnionAllExpression)\n- uid: System.Data.Common.CommandTrees.DbUnionAllExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbUnionAllExpression\n  nameWithType: DbUnionAllExpression\n  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit(DbVariableReferenceExpression)\n  nameWithType: DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>.Visit(DbVariableReferenceExpression)\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbVariableReferenceExpression\n  nameWithType: DbVariableReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor*\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit*\n  parent: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  isExternal: false\n  name: Visit\n  nameWithType: DbExpressionVisitor<TResultType>.Visit\n"}