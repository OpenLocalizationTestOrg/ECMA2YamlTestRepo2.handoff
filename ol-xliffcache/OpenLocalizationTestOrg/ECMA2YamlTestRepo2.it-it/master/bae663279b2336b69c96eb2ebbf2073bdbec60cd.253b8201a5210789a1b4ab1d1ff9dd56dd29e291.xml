{"nodes":[{"pos":[828,925],"content":"A base type for handlers which only do some small processing of request and/or response messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"A base type for handlers which only do some small processing of request and/or response messages.","pos":[0,97]}]},{"pos":[938,1392],"content":"The actual creation of response messages is delegated to an inner handler. The MessageProcessingHandler is useful if the handler doesn't require asynchronous operations, because operations on request and response messages are fast.       The most common usage is to derive from this class and override the <xref:System.Net.Http.MessageProcessingHandler.ProcessRequest%2A> and  <xref:System.Net.Http.MessageProcessingHandler.ProcessResponse%2A> methods.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The actual creation of response messages is delegated to an inner handler. The MessageProcessingHandler is useful if the handler doesn't require asynchronous operations, because operations on request and response messages are fast.       The most common usage is to derive from this class and override the <xref:System.Net.Http.MessageProcessingHandler.ProcessRequest%2A> and  <xref:System.Net.Http.MessageProcessingHandler.ProcessResponse%2A> methods.","pos":[0,452],"nodes":[{"content":"The actual creation of response messages is delegated to an inner handler.","pos":[0,74]},{"content":"The MessageProcessingHandler is useful if the handler doesn't require asynchronous operations, because operations on request and response messages are fast.","pos":[75,231]},{"content":"The most common usage is to derive from this class and override the &lt;xref:System.Net.Http.MessageProcessingHandler.ProcessRequest%2A&gt; and  &lt;xref:System.Net.Http.MessageProcessingHandler.ProcessResponse%2A&gt; methods.","pos":[238,452],"source":"       The most common usage is to derive from this class and override the <xref:System.Net.Http.MessageProcessingHandler.ProcessRequest%2A> and  <xref:System.Net.Http.MessageProcessingHandler.ProcessResponse%2A> methods."}]}]},{"pos":[2248,2341],"content":"Creates an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.MessageProcessingHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates an instance of a <xref href=\"System.Net.Http.MessageProcessingHandler\"></xref> class."},{"pos":[3065,3188],"content":"Creates an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.MessageProcessingHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specific inner handler.","needQuote":true,"needEscape":true,"source":"Creates an instance of a <xref href=\"System.Net.Http.MessageProcessingHandler\"></xref> class with a specific inner handler."},{"pos":[3403,3484],"content":"The inner handler which is responsible for processing the HTTP response messages.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inner handler which is responsible for processing the HTTP response messages.","pos":[0,81]}]},{"pos":[4232,4287],"content":"Performs processing on each request sent to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs processing on each request sent to the server.","pos":[0,55]}]},{"pos":[4299,4432],"content":"An application would override this method to implement custom processing of the HTTP request message before it is sent to the server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application would override this method to implement custom processing of the HTTP request message before it is sent to the server.","pos":[0,133]}]},{"pos":[4725,4761],"content":"The HTTP request message to process.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request message to process.","pos":[0,36]}]},{"pos":[4856,4956],"content":"A cancellation token that can be used by other objects or threads to receive notice of cancellation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cancellation token that can be used by other objects or threads to receive notice of cancellation.","pos":[0,100]}]},{"pos":[5035,5079],"content":"The HTTP request message that was processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request message that was processed.","pos":[0,44]}]},{"pos":[5846,5898],"content":"Perform processing on each response from the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"Perform processing on each response from the server.","pos":[0,52]}]},{"pos":[5910,6049],"content":"An application would override this method to implement custom processing of the HTTP response message after it is received from the server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"An application would override this method to implement custom processing of the HTTP response message after it is received from the server.","pos":[0,139]}]},{"pos":[6348,6385],"content":"The HTTP response message to process.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP response message to process.","pos":[0,37]}]},{"pos":[6480,6580],"content":"A cancellation token that can be used by other objects or threads to receive notice of cancellation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cancellation token that can be used by other objects or threads to receive notice of cancellation.","pos":[0,100]}]},{"pos":[6660,6705],"content":"The HTTP response message that was processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP response message that was processed.","pos":[0,45]}]},{"pos":[7438,7532],"content":"Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.","pos":[0,94]}]},{"pos":[7544,7725],"content":"This operation does not block. This overridable implementation of SendAsync method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This operation does not block. This overridable implementation of SendAsync method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.","pos":[0,181],"nodes":[{"content":"This operation does not block.","pos":[0,30]},{"content":"This overridable implementation of SendAsync method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.","pos":[31,181]}]}]},{"pos":[8050,8097],"content":"The HTTP request message to send to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request message to send to the server.","pos":[0,47]}]},{"pos":[8192,8292],"content":"A cancellation token that can be used by other objects or threads to receive notice of cancellation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A cancellation token that can be used by other objects or threads to receive notice of cancellation.","pos":[0,100]}]},{"pos":[8401,8457],"content":"The task object representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]},{"pos":[8638,8728],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">request</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>request</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.MessageProcessingHandler\n  id: MessageProcessingHandler\n  children:\n  - System.Net.Http.MessageProcessingHandler.#ctor\n  - System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  - System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  - System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: MessageProcessingHandler\n  nameWithType: MessageProcessingHandler\n  fullName: System.Net.Http.MessageProcessingHandler\n  type: Class\n  summary: A base type for handlers which only do some small processing of request and/or response messages.\n  remarks: \"The actual creation of response messages is delegated to an inner handler. The MessageProcessingHandler is useful if the handler doesn't require asynchronous operations, because operations on request and response messages are fast.  \\n  \\n The most common usage is to derive from this class and override the <xref:System.Net.Http.MessageProcessingHandler.ProcessRequest%2A> and  <xref:System.Net.Http.MessageProcessingHandler.ProcessResponse%2A> methods.\"\n  syntax:\n    content: 'public abstract class MessageProcessingHandler : System.Net.Http.DelegatingHandler'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpMessageHandler\n  - System.Net.Http.DelegatingHandler\n  implements: []\n  inheritedMembers:\n  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  - System.Net.Http.DelegatingHandler.InnerHandler\n  - System.Net.Http.HttpMessageHandler.Dispose\n  platform:\n  - net462\n- uid: System.Net.Http.MessageProcessingHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  name: MessageProcessingHandler()\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler()\n  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates an instance of a <xref href=\"System.Net.Http.MessageProcessingHandler\"></xref> class.\n  syntax:\n    content: protected MessageProcessingHandler ();\n    parameters: []\n  overload: System.Net.Http.MessageProcessingHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  name: MessageProcessingHandler(HttpMessageHandler)\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)\n  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Creates an instance of a <xref href=\"System.Net.Http.MessageProcessingHandler\"></xref> class with a specific inner handler.\n  syntax:\n    content: protected MessageProcessingHandler (System.Net.Http.HttpMessageHandler innerHandler);\n    parameters:\n    - id: innerHandler\n      type: System.Net.Http.HttpMessageHandler\n      description: The inner handler which is responsible for processing the HTTP response messages.\n  overload: System.Net.Http.MessageProcessingHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  name: ProcessRequest(HttpRequestMessage,CancellationToken)\n  nameWithType: MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Performs processing on each request sent to the server.\n  remarks: An application would override this method to implement custom processing of the HTTP request message before it is sent to the server.\n  syntax:\n    content: protected abstract System.Net.Http.HttpRequestMessage ProcessRequest (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message to process.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.\n    return:\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message that was processed.\n  overload: System.Net.Http.MessageProcessingHandler.ProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  id: ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  name: ProcessResponse(HttpResponseMessage,CancellationToken)\n  nameWithType: MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Perform processing on each response from the server.\n  remarks: An application would override this method to implement custom processing of the HTTP response message after it is received from the server.\n  syntax:\n    content: protected abstract System.Net.Http.HttpResponseMessage ProcessResponse (System.Net.Http.HttpResponseMessage response, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: response\n      type: System.Net.Http.HttpResponseMessage\n      description: The HTTP response message to process.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.\n    return:\n      type: System.Net.Http.HttpResponseMessage\n      description: The HTTP response message that was processed.\n  overload: System.Net.Http.MessageProcessingHandler.ProcessResponse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  langs:\n  - csharp\n  name: SendAsync(HttpRequestMessage,CancellationToken)\n  nameWithType: MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.\n  remarks: This operation does not block. This overridable implementation of SendAsync method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.\n  syntax:\n    content: protected override sealed System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message to send to the server.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.MessageProcessingHandler.SendAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>request</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: System.Net.Http.DelegatingHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Net.Http.MessageProcessingHandler.#ctor\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: MessageProcessingHandler()\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler()\n  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler()\n- uid: System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: MessageProcessingHandler(HttpMessageHandler)\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)\n  fullName: System.Net.Http.MessageProcessingHandler.MessageProcessingHandler(HttpMessageHandler)\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  nameWithType: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: ProcessRequest(HttpRequestMessage,CancellationToken)\n  nameWithType: MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.ProcessRequest(HttpRequestMessage,CancellationToken)\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: true\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: ProcessResponse(HttpResponseMessage,CancellationToken)\n  nameWithType: MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.ProcessResponse(HttpResponseMessage,CancellationToken)\n- uid: System.Net.Http.HttpResponseMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpResponseMessage\n  nameWithType: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n- uid: System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: SendAsync(HttpRequestMessage,CancellationToken)\n  nameWithType: MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.MessageProcessingHandler.SendAsync(HttpRequestMessage,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Net.Http.HttpResponseMessage>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.MessageProcessingHandler.#ctor*\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: MessageProcessingHandler\n  nameWithType: MessageProcessingHandler.MessageProcessingHandler\n- uid: System.Net.Http.MessageProcessingHandler.ProcessRequest*\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: ProcessRequest\n  nameWithType: MessageProcessingHandler.ProcessRequest\n- uid: System.Net.Http.MessageProcessingHandler.ProcessResponse*\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: ProcessResponse\n  nameWithType: MessageProcessingHandler.ProcessResponse\n- uid: System.Net.Http.MessageProcessingHandler.SendAsync*\n  parent: System.Net.Http.MessageProcessingHandler\n  isExternal: false\n  name: SendAsync\n  nameWithType: MessageProcessingHandler.SendAsync\n"}