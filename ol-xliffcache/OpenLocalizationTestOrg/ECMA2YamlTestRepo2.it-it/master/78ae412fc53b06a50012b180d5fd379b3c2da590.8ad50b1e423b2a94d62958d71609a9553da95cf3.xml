{"nodes":[{"pos":[502,580],"content":"Controls the throughput of a service to optimize availability and performance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls the throughput of a service to optimize availability and performance.","pos":[0,78]}]},{"pos":[593,1686],"content":"Use the ServiceThrottle to tune the performance characteristics of a service. The easiest way to configure the ServiceThrottle for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.      > [!NOTE] >  A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the ServiceThrottle to tune the performance characteristics of a service.","pos":[0,77]},{"content":"The easiest way to configure the ServiceThrottle for a service is to use the &lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior&gt;, especially from an application configuration file.","pos":[78,271],"source":" The easiest way to configure the ServiceThrottle for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file."},{"content":"The &lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A&gt; property specifies the maximum number of messages actively processing across all the dispatcher objects in a &lt;xref:System.ServiceModel.ServiceHost&gt; object.","pos":[278,513],"source":"       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object."},{"content":"The &lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A&gt; property specifies the maximum number of &lt;xref:System.ServiceModel.InstanceContext&gt; objects in the service.","pos":[520,711],"source":"       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service."},{"content":"The &lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A&gt; property specifies the maximum number of sessions a &lt;xref:System.ServiceModel.ServiceHost&gt; can accept.","pos":[718,903],"source":"       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A trace is written when the first call, &lt;xref:System.ServiceModel.InstanceContext&gt;, or session is queued on the waitlist.","pos":[909,1043],"source":"      > [!NOTE] >  A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist."},{"content":"The first trace is written as a warning.","pos":[1044,1084]}]},{"pos":[2846,2998],"content":"Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <xref href=\"System.ServiceModel.ServiceHost\"></xref>."},{"pos":[3011,3469],"content":"The MaxConcurrentCalls property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object. Each channel can have one pending message that does not count against the value of MaxConcurrentCalls until [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] begins to process it.      > [!NOTE] >  A trace is written every time the value of this property is exceeded.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaxConcurrentCalls property specifies the maximum number of messages actively processing across all the dispatcher objects in a &lt;xref:System.ServiceModel.ServiceHost&gt; object.","pos":[0,178],"source":"The MaxConcurrentCalls property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object."},{"content":"Each channel can have one pending message that does not count against the value of MaxConcurrentCalls until <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> begins to process it.","pos":[179,367],"source":" Each channel can have one pending message that does not count against the value of MaxConcurrentCalls until [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] begins to process it."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A trace is written every time the value of this property is exceeded.","pos":[373,455],"source":"      > [!NOTE] >  A trace is written every time the value of this property is exceeded."}]},{"pos":[4194,4302],"content":"The upper limit of active messages in the service. The default is 16 * number of processors in the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The upper limit of active messages in the service. The default is 16 * number of processors in the computer.","pos":[0,108],"nodes":[{"content":"The upper limit of active messages in the service.","pos":[0,50]},{"content":"The default is 16 * number of processors in the computer.","pos":[51,108]}]}]},{"pos":[4883,4963],"content":"Gets or sets the maximum number of service objects that can execute at one time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum number of service objects that can execute at one time.","pos":[0,80]}]},{"pos":[4976,5995],"content":"The MaxConcurrentInstances property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the MaxConcurrentInstances property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.      > [!NOTE] >  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaxConcurrentInstances property specifies the maximum number of &lt;xref:System.ServiceModel.InstanceContext&gt; objects in the service.","pos":[0,134],"source":"The MaxConcurrentInstances property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service."},{"content":"It is important to keep in mind the relationship between the MaxConcurrentInstances property and the &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt; property.","pos":[135,320],"source":" It is important to keep in mind the relationship between the MaxConcurrentInstances property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property."},{"content":"If &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt; is &lt;xref:System.ServiceModel.InstanceContextMode&gt; the resulting value is the total number of sessions.","pos":[321,501],"source":" If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode> the resulting value is the total number of sessions."},{"content":"If &lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt; is &lt;xref:System.ServiceModel.InstanceContextMode&gt;, the resulting value is the number of concurrent calls.","pos":[502,685],"source":" If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode>, the resulting value is the number of concurrent calls."},{"content":"If a message arrives while the maximum number of &lt;xref:System.ServiceModel.InstanceContext&gt; objects already exist, the message is held until an &lt;xref:System.ServiceModel.InstanceContext&gt; object closes.","pos":[686,887],"source":" If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A trace is written every time the value of this property is exceeded.","pos":[893,975],"source":"      > [!NOTE] >  A trace is written every time the value of this property is exceeded."},{"content":"The first trace is written as a warning.","pos":[976,1016]}]},{"pos":[6724,6895],"content":"The maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.","pos":[0,171],"nodes":[{"content":"The maximum number of &lt;xref:System.ServiceModel.InstanceContext&gt; objects in the service at one time.","pos":[0,100],"source":"The maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service at one time."},{"content":"The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.","pos":[101,171]}]}]},{"pos":[7475,7627],"content":"Gets or sets a value that specifies the maximum number of sessions a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can accept at one time.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that specifies the maximum number of sessions a <xref href=\"System.ServiceModel.ServiceHost\"></xref> object can accept at one time."},{"pos":[7640,8486],"content":"The MaxConcurrentSessions property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept. Each listener object can have one pending channel that does not count against the value of MaxConcurrentSessions until [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] accepts the channel and begins processing messages on it. This property is most useful in scenarios that make use of sessions.      > [!NOTE] >  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.       For more information about sessions, see [Using Sessions](~/add/includes/ajax-current-ext-md.md).       Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The MaxConcurrentSessions property specifies the maximum number of channels a &lt;xref:System.ServiceModel.ServiceHost&gt; can accept.","pos":[0,128],"source":"The MaxConcurrentSessions property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept."},{"content":"Each listener object can have one pending channel that does not count against the value of MaxConcurrentSessions until <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> accepts the channel and begins processing messages on it.","pos":[129,364],"source":" Each listener object can have one pending channel that does not count against the value of MaxConcurrentSessions until [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] accepts the channel and begins processing messages on it."},{"content":"This property is most useful in scenarios that make use of sessions.","pos":[365,433]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A trace is written every time the value of this property is exceeded.","pos":[439,521],"source":"      > [!NOTE] >  A trace is written every time the value of this property is exceeded."},{"content":"The first trace is written as a warning.","pos":[522,562]},{"content":"For more information about sessions, see <bpt id=\"p1\">[</bpt>Using Sessions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[569,666],"source":"       For more information about sessions, see [Using Sessions](~/add/includes/ajax-current-ext-md.md)."},{"content":"Typically, this property is set using the &lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName&gt; property.","pos":[673,839],"source":"       Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property."}]},{"pos":[9214,9327],"content":"The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.","pos":[0,113],"nodes":[{"content":"The maximum number of sessions a service host accepts.","pos":[0,54]},{"content":"The default is 100 * number of processors in the computer.","pos":[55,113]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle\n  id: ServiceThrottle\n  children:\n  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  langs:\n  - csharp\n  name: ServiceThrottle\n  nameWithType: ServiceThrottle\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle\n  type: Class\n  summary: Controls the throughput of a service to optimize availability and performance.\n  remarks: \"Use the ServiceThrottle to tune the performance characteristics of a service. The easiest way to configure the ServiceThrottle for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.  \\n  \\n> [!NOTE]\\n>  A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning.\"\n  example:\n  - \"The following code example shows the typical use of the ServiceThrottle by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public sealed class ServiceThrottle\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  id: MaxConcurrentCalls\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  langs:\n  - csharp\n  name: MaxConcurrentCalls\n  nameWithType: ServiceThrottle.MaxConcurrentCalls\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <xref href=\"System.ServiceModel.ServiceHost\"></xref>.\n  remarks: \"The MaxConcurrentCalls property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object. Each channel can have one pending message that does not count against the value of MaxConcurrentCalls until [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] begins to process it.  \\n  \\n> [!NOTE]\\n>  A trace is written every time the value of this property is exceeded.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public int MaxConcurrentCalls { get; set; }\n    return:\n      type: System.Int32\n      description: The upper limit of active messages in the service. The default is 16 * number of processors in the computer.\n  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  id: MaxConcurrentInstances\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  langs:\n  - csharp\n  name: MaxConcurrentInstances\n  nameWithType: ServiceThrottle.MaxConcurrentInstances\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum number of service objects that can execute at one time.\n  remarks: \"The MaxConcurrentInstances property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the MaxConcurrentInstances property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.  \\n  \\n> [!NOTE]\\n>  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public int MaxConcurrentInstances { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.\n  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  id: MaxConcurrentSessions\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  langs:\n  - csharp\n  name: MaxConcurrentSessions\n  nameWithType: ServiceThrottle.MaxConcurrentSessions\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets a value that specifies the maximum number of sessions a <xref href=\"System.ServiceModel.ServiceHost\"></xref> object can accept at one time.\n  remarks: \"The MaxConcurrentSessions property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept. Each listener object can have one pending channel that does not count against the value of MaxConcurrentSessions until [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] accepts the channel and begins processing messages on it. This property is most useful in scenarios that make use of sessions.  \\n  \\n> [!NOTE]\\n>  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.  \\n  \\n For more information about sessions, see [Using Sessions](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public int MaxConcurrentSessions { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.\n  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentCalls\n  nameWithType: ServiceThrottle.MaxConcurrentCalls\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentInstances\n  nameWithType: ServiceThrottle.MaxConcurrentInstances\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentSessions\n  nameWithType: ServiceThrottle.MaxConcurrentSessions\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentCalls\n  nameWithType: ServiceThrottle.MaxConcurrentCalls\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentInstances\n  nameWithType: ServiceThrottle.MaxConcurrentInstances\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentSessions\n  nameWithType: ServiceThrottle.MaxConcurrentSessions\n"}