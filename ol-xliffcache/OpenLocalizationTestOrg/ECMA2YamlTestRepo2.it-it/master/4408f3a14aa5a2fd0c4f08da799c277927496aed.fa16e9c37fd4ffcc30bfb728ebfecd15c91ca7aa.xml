{"nodes":[{"pos":[439,471],"content":"Represents a literal expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a literal expression.","pos":[0,32]}]},{"pos":[484,942],"content":"A literal expression stores the code of an expression as a literal code fragment. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output just as they are. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.       The <xref:System.CodeDom.CodeSnippetExpression.Value%2A> property contains the literal code for this snippet expression.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A literal expression stores the code of an expression as a literal code fragment. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output just as they are. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.       The <xref:System.CodeDom.CodeSnippetExpression.Value%2A> property contains the literal code for this snippet expression.","pos":[0,456],"nodes":[{"content":"A literal expression stores the code of an expression as a literal code fragment.","pos":[0,81]},{"content":"The CodeDOM does not translate literal code fragments.","pos":[82,136]},{"content":"Literal code fragments are stored and output just as they are.","pos":[137,199]},{"content":"CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.","pos":[200,329]},{"content":"The &lt;xref:System.CodeDom.CodeSnippetExpression.Value%2A&gt; property contains the literal code for this snippet expression.","pos":[336,456],"source":"       The <xref:System.CodeDom.CodeSnippetExpression.Value%2A> property contains the literal code for this snippet expression."}]}]},{"pos":[2235,2333],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeSnippetExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetExpression\"></xref> class."},{"pos":[2935,3072],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeSnippetExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified literal expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetExpression\"></xref> class using the specified literal expression."},{"pos":[3710,3746],"content":"The literal expression to represent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The literal expression to represent.","pos":[0,36]}]},{"pos":[4166,4206],"content":"Gets or sets the literal string of code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the literal string of code.","pos":[0,40]}]},{"pos":[4218,4252],"content":"This can contain code or comments.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This can contain code or comments.","pos":[0,34]}]},{"pos":[4367,4386],"content":"The literal string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The literal string.","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeSnippetExpression\n  id: CodeSnippetExpression\n  children:\n  - System.CodeDom.CodeSnippetExpression.#ctor\n  - System.CodeDom.CodeSnippetExpression.#ctor(System.String)\n  - System.CodeDom.CodeSnippetExpression.Value\n  langs:\n  - csharp\n  name: CodeSnippetExpression\n  nameWithType: CodeSnippetExpression\n  fullName: System.CodeDom.CodeSnippetExpression\n  type: Class\n  summary: Represents a literal expression.\n  remarks: \"A literal expression stores the code of an expression as a literal code fragment. The CodeDOM does not translate literal code fragments. Literal code fragments are stored and output just as they are. CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.  \\n  \\n The <xref:System.CodeDom.CodeSnippetExpression.Value%2A> property contains the literal code for this snippet expression.\"\n  example:\n  - \"The following code example demonstrates how to create an instance of the CodeSnippetExpression class using a literal code fragment.  \\n  \\n [!code-cpp[CodeDomSampleBatch#9](~/add/codesnippet/cpp/t-system.codedom.codesni_1_1.cpp)]\\n [!code-vb[CodeDomSampleBatch#9](~/add/codesnippet/visualbasic/t-system.codedom.codesni_1_1.vb)]\\n [!code-cs[CodeDomSampleBatch#9](~/add/codesnippet/csharp/t-system.codedom.codesni_1_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeSnippetExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodeSnippetExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeSnippetExpression\n  langs:\n  - csharp\n  name: CodeSnippetExpression()\n  nameWithType: CodeSnippetExpression.CodeSnippetExpression()\n  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetExpression\"></xref> class.\n  syntax:\n    content: public CodeSnippetExpression ();\n    parameters: []\n  overload: System.CodeDom.CodeSnippetExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeSnippetExpression.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.CodeDom.CodeSnippetExpression\n  langs:\n  - csharp\n  name: CodeSnippetExpression(String)\n  nameWithType: CodeSnippetExpression.CodeSnippetExpression(String)\n  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeSnippetExpression\"></xref> class using the specified literal expression.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates in the use of the CodeSnippetExpression constructor to create an instance of the <xref:System.CodeDom.CodeSnippetExpression> class.  \\n  \\n [!code-cpp[CodeDomSampleBatch#9](~/add/codesnippet/cpp/m-system.codedom.codesni_0_1.cpp)]\\n [!code-vb[CodeDomSampleBatch#9](~/add/codesnippet/visualbasic/m-system.codedom.codesni_0_1.vb)]\\n [!code-cs[CodeDomSampleBatch#9](~/add/codesnippet/csharp/m-system.codedom.codesni_0_1.cs)]\"\n  syntax:\n    content: public CodeSnippetExpression (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The literal expression to represent.\n  overload: System.CodeDom.CodeSnippetExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeSnippetExpression.Value\n  id: Value\n  parent: System.CodeDom.CodeSnippetExpression\n  langs:\n  - csharp\n  name: Value\n  nameWithType: CodeSnippetExpression.Value\n  fullName: System.CodeDom.CodeSnippetExpression.Value\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the literal string of code.\n  remarks: This can contain code or comments.\n  syntax:\n    content: public string Value { get; set; }\n    return:\n      type: System.String\n      description: The literal string.\n  overload: System.CodeDom.CodeSnippetExpression.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeExpression\n  isExternal: false\n  name: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeSnippetExpression.#ctor\n  parent: System.CodeDom.CodeSnippetExpression\n  isExternal: false\n  name: CodeSnippetExpression()\n  nameWithType: CodeSnippetExpression.CodeSnippetExpression()\n  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression()\n- uid: System.CodeDom.CodeSnippetExpression.#ctor(System.String)\n  parent: System.CodeDom.CodeSnippetExpression\n  isExternal: false\n  name: CodeSnippetExpression(String)\n  nameWithType: CodeSnippetExpression.CodeSnippetExpression(String)\n  fullName: System.CodeDom.CodeSnippetExpression.CodeSnippetExpression(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeSnippetExpression.Value\n  parent: System.CodeDom.CodeSnippetExpression\n  isExternal: false\n  name: Value\n  nameWithType: CodeSnippetExpression.Value\n  fullName: System.CodeDom.CodeSnippetExpression.Value\n- uid: System.CodeDom.CodeSnippetExpression.#ctor*\n  parent: System.CodeDom.CodeSnippetExpression\n  isExternal: false\n  name: CodeSnippetExpression\n  nameWithType: CodeSnippetExpression.CodeSnippetExpression\n- uid: System.CodeDom.CodeSnippetExpression.Value*\n  parent: System.CodeDom.CodeSnippetExpression\n  isExternal: false\n  name: Value\n  nameWithType: CodeSnippetExpression.Value\n"}