{"nodes":[{"pos":[4147,4224],"content":"Represents the metadata that describes a table for use by Dynamic Data pages.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the metadata that describes a table for use by Dynamic Data pages.","pos":[0,77]}]},{"pos":[5817,5911],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> class."},{"pos":[5923,6055],"content":"The <ph id=\"ph1\">`tableProvider`</ph> parameter is used to initialize the &lt;xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A&gt; property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property."},{"pos":[6309,6331],"content":"The entity meta model.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity meta model.","pos":[0,22]}]},{"pos":[6439,6465],"content":"The entity model provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity model provider.","pos":[0,26]}]},{"pos":[6906,6961],"content":"Gets the attributes that are associated with the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the attributes that are associated with the table.","pos":[0,55]}]},{"pos":[7139,7194],"content":"A collection that contains the attributes of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains the attributes of the table.","pos":[0,55]}]},{"pos":[7714,7747],"content":"Creates the attribute collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the attribute collection.","pos":[0,33]}]},{"pos":[7964,7989],"content":"The attribute collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The attribute collection.","pos":[0,25]}]},{"pos":[8554,8649],"content":"Gets a value that indicates whether the specified user is allowed to perform delete operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform delete operations.","pos":[0,95]}]},{"pos":[8661,8827],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]},{"pos":[9035,9063],"content":"The user's security context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user's security context.","pos":[0,28]}]},{"pos":[9122,9310],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user is allowed to perform delete operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform delete operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9860,9955],"content":"Gets a value that indicates whether the specified user is allowed to perform insert operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform insert operations.","pos":[0,95]}]},{"pos":[9967,10133],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]},{"pos":[10341,10369],"content":"The user's security context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user's security context.","pos":[0,28]}]},{"pos":[10428,10616],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user is allowed to perform insert operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform insert operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11156,11249],"content":"Gets a value that indicates whether the specified user is allowed to perform read operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform read operations.","pos":[0,93]}]},{"pos":[11261,11427],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]},{"pos":[11633,11661],"content":"The user's security context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user's security context.","pos":[0,28]}]},{"pos":[11720,11906],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user is allowed to perform read operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform read operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12454,12549],"content":"Gets a value that indicates whether the specified user is allowed to perform update operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform update operations.","pos":[0,95]}]},{"pos":[12561,12727],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]},{"pos":[12935,12963],"content":"The user's security context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user's security context.","pos":[0,28]}]},{"pos":[13022,13210],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user is allowed to perform update operations; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform update operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13640,13681],"content":"Gets the column collection for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the column collection for the table.","pos":[0,41]}]},{"pos":[14829,14882],"content":"A collection that contains the columns for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains the columns for the table.","pos":[0,53]}]},{"pos":[15529,15613],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaChildrenColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Web.DynamicData.MetaChildrenColumn\"></xref> object."},{"pos":[15625,15680],"content":"This method can be overridden to create a derived type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be overridden to create a derived type.","pos":[0,55]}]},{"pos":[15981,16001],"content":"The column provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column provider.","pos":[0,20]}]},{"pos":[16087,16119],"content":"The new child metacolumn object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new child metacolumn object.","pos":[0,32]}]},{"pos":[16739,16811],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object."},{"pos":[16823,16878],"content":"This method can be overridden to create a derived type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be overridden to create a derived type.","pos":[0,55]}]},{"pos":[17163,17183],"content":"The column provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column provider.","pos":[0,20]}]},{"pos":[17261,17287],"content":"The new metacolumn object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new metacolumn object.","pos":[0,26]}]},{"pos":[17754,17793],"content":"Returns the data context for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the data context for the table.","pos":[0,39]}]},{"pos":[17805,18022],"content":"The data context is retrieved from a new context that is instantiated by calling the CreateContext method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The data context is retrieved from a new context that is instantiated by calling the CreateContext method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.","pos":[0,217],"nodes":[{"content":"The data context is retrieved from a new context that is instantiated by calling the CreateContext method.","pos":[0,106]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.MetaTable?displayProperty=fullName&gt; class overview.","pos":[107,217],"source":" For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview."}]}]},{"pos":[18162,18193],"content":"The data context for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data context for the table.","pos":[0,31]}]},{"pos":[18856,18909],"content":"Creates an object that contains foreign-key metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that contains foreign-key metadata.","pos":[0,53]}]},{"pos":[18921,18976],"content":"This method can be overridden to create a derived type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method can be overridden to create a derived type.","pos":[0,55]}]},{"pos":[19281,19301],"content":"The column provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column provider.","pos":[0,20]}]},{"pos":[19389,19434],"content":"An object that contains foreign-key metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains foreign-key metadata.","pos":[0,45]}]},{"pos":[20054,20099],"content":"Creates the metadata for the specified table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the metadata for the specified table.","pos":[0,45]}]},{"pos":[20360,20393],"content":"Information about the table type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information about the table type.","pos":[0,33]}]},{"pos":[20470,20513],"content":"An object that contains the table metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the table metadata.","pos":[0,43]}]},{"pos":[21007,21052],"content":"Creates the metadata for the specified table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the metadata for the specified table.","pos":[0,45]}]},{"pos":[21234,21280],"content":"The table type for which to generate metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The table type for which to generate metadata.","pos":[0,46]}]},{"pos":[21357,21400],"content":"An object that contains the table metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the table metadata.","pos":[0,43]}]},{"pos":[21912,21939],"content":"Gets the name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the table.","pos":[0,27]}]},{"pos":[21951,22067],"content":"The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The name comes from the &lt;xref:System.Web.DynamicData.MetaTable.DataContextType%2A&gt; object that the table belongs to.","pos":[0,116],"source":"The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to."}]},{"pos":[22195,22217],"content":"The name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the table.","pos":[0,22]}]},{"pos":[22701,22769],"content":"Gets the type of the data context that is associated with the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the data context that is associated with the table.","pos":[0,68]}]},{"pos":[22781,22887],"content":"For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see the &lt;xref:System.Data.Linq.DataContext?displayProperty=fullName&gt; class overview.","pos":[0,106],"source":"For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview."}]},{"pos":[23003,23032],"content":"The type of the data context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the data context.","pos":[0,29]}]},{"pos":[23498,23621],"content":"Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.","pos":[0,123]}]},{"pos":[23634,24046],"content":"The column that is returned is selected in this order:      1.  The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.      2.  The first string column that is not in the primary key.      3.  The first string column that is in the primary key.      4.  The first non-string column that is in the primary key.      5.  The first column.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The column that is returned is selected in this order:      1.  The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.      2.  The first string column that is not in the primary key.      3.  The first string column that is in the primary key.      4.  The first non-string column that is in the primary key.      5.  The first column.","pos":[0,402],"nodes":[{"content":"The column that is returned is selected in this order:      1.","pos":[0,62]},{"content":"The column that is specified by using the &lt;xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&gt; attribute.","pos":[64,184],"source":"  The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute."},{"content":"2.","pos":[190,192]},{"content":"The first string column that is not in the primary key.","pos":[194,249]},{"content":"3.","pos":[255,257]},{"content":"The first string column that is in the primary key.","pos":[259,310]},{"content":"4.","pos":[316,318]},{"content":"The first non-string column that is in the primary key.","pos":[320,375]},{"content":"5.","pos":[381,383]},{"content":"The first column.","pos":[385,402]}]}]},{"pos":[24220,24338],"content":"The column that is used to display values when entries in this table are used as parents in foreign-key relationships.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column that is used to display values when entries in this table are used as parents in foreign-key relationships.","pos":[0,118]}]},{"pos":[24792,24845],"content":"Gets the name of the table in a user-friendly format.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the table in a user-friendly format.","pos":[0,53]}]},{"pos":[24857,25114],"content":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.","pos":[0,257],"nodes":[{"content":"The value of this property defaults to the value of the &lt;xref:System.Web.DynamicData.MetaTable.Name%2A&gt; property.","pos":[0,113],"source":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property."},{"content":"You can customize the value of this property by using the &lt;xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName&gt; attribute.","pos":[114,257],"source":" You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute."}]}]},{"pos":[25238,25301],"content":"The string that represents the user-friendly name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string that represents the user-friendly name of the table.","pos":[0,63]}]},{"pos":[25748,25795],"content":"Gets the entity type that represents the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the entity type that represents the table.","pos":[0,47]}]},{"pos":[25906,25942],"content":"The type that represents the entity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that represents the entity.","pos":[0,36]}]},{"pos":[26448,26497],"content":"Gets a comma-separated list of foreign-key names.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a comma-separated list of foreign-key names.","pos":[0,49]}]},{"pos":[26624,26668],"content":"A comma-separated list of foreign-key names.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of foreign-key names.","pos":[0,44]}]},{"pos":[27193,27264],"content":"Returns the action path for the current table and the specified action.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the action path for the current table and the specified action.","pos":[0,71]}]},{"pos":[27614,27637],"content":"The name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the action.","pos":[0,23]}]},{"pos":[27695,27736],"content":"The action path for the specified action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path for the specified action.","pos":[0,41]}]},{"pos":[28390,28481],"content":"Returns the action path for the current table, specified action, and specified primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the action path for the current table, specified action, and specified primary key.","pos":[0,91]}]},{"pos":[28493,28666],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt; class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]},{"pos":[28872,28895],"content":"The name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the action.","pos":[0,23]}]},{"pos":[29002,29057],"content":"The list of column values that make up the primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of column values that make up the primary key.","pos":[0,55]}]},{"pos":[29115,29172],"content":"The action path for the specified action and primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path for the specified action and primary key.","pos":[0,57]}]},{"pos":[29737,29815],"content":"Returns the action path for the specified row by using the name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the action path for the specified row by using the name of the action.","pos":[0,78]}]},{"pos":[29828,30108],"content":"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.       For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.       For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,278],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"The action path contains the primary-key column names, which can be used for query-string filters.","pos":[62,160]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt; class overview.","pos":[167,278],"source":"       For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]},{"pos":[30268,30291],"content":"The name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the action.","pos":[0,23]}]},{"pos":[30351,30386],"content":"The row to get the action path for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row to get the action path for.","pos":[0,35]}]},{"pos":[30444,30482],"content":"The action path for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path for the specified row.","pos":[0,38]}]},{"pos":[31141,31227],"content":"Returns the action path for the current table and for the specified action and routes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the action path for the current table and for the specified action and routes.","pos":[0,86]}]},{"pos":[31239,31412],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt; class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]},{"pos":[31612,31635],"content":"The name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the action.","pos":[0,23]}]},{"pos":[31729,31763],"content":"The list of routes for the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of routes for the action.","pos":[0,34]}]},{"pos":[31821,31873],"content":"The action path for the specified action and routes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path for the specified action and routes.","pos":[0,52]}]},{"pos":[32576,32670],"content":"Appends query strings to the action path, based on the specified primary key and virtual path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends query strings to the action path, based on the specified primary key and virtual path.","pos":[0,94]}]},{"pos":[32682,32855],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt; class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]},{"pos":[33074,33097],"content":"The name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the action.","pos":[0,23]}]},{"pos":[33204,33259],"content":"The list of column values that make up the primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of column values that make up the primary key.","pos":[0,55]}]},{"pos":[33320,33351],"content":"The virtual path of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the action.","pos":[0,31]}]},{"pos":[33409,33513],"content":"The action path for the specified primary key and virtual path, with query-string values appended to it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path for the specified primary key and virtual path, with query-string values appended to it.","pos":[0,104]}]},{"pos":[34127,34240],"content":"Returns the action path for the specified row by using the name of the action and the virtual path of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the action path for the specified row by using the name of the action and the virtual path of the action.","pos":[0,113]}]},{"pos":[34252,34425],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt; class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]},{"pos":[34597,34620],"content":"The name of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the action.","pos":[0,23]}]},{"pos":[34680,34732],"content":"An object that contains the row for the action path.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the row for the action path.","pos":[0,52]}]},{"pos":[34793,34824],"content":"The virtual path of the action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path of the action.","pos":[0,31]}]},{"pos":[34882,34920],"content":"The action path for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path for the specified row.","pos":[0,38]}]},{"pos":[35416,35462],"content":"Returns the metadata for the specified column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the metadata for the specified column.","pos":[0,46]}]},{"pos":[35640,35683],"content":"The name of the column to get metadata for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column to get metadata for.","pos":[0,43]}]},{"pos":[35761,35781],"content":"The column metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column metadata.","pos":[0,20]}]},{"pos":[36381,36418],"content":"Gets the collection of column values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of column values.","pos":[0,37]}]},{"pos":[36650,36692],"content":"The context for the specified Web request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context for the specified Web request.","pos":[0,42]}]},{"pos":[36804,36836],"content":"The collection of column values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of column values.","pos":[0,32]}]},{"pos":[37345,37407],"content":"Retrieves the primary key of the entity from the route values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the primary key of the entity from the route values.","pos":[0,62]}]},{"pos":[37419,37485],"content":"The route values typically come from the request URL query string.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The route values typically come from the request URL query string.","pos":[0,66]}]},{"pos":[37670,37801],"content":"The primary-key values of the entities, if they are found; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The primary-key values of the entities, if they are found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[38338,38460],"content":"Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.","pos":[0,122]}]},{"pos":[38472,38885],"content":"If the row is `null`, an empty string is returned. If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned. Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the row is <ph id=\"ph1\">`null`</ph>, an empty string is returned.","pos":[0,50],"source":"If the row is `null`, an empty string is returned."},{"content":"If the entity class includes an override of the &lt;xref:System.Web.DynamicData.MetaTable.ToString%2A&gt; method, the overridden &lt;xref:System.Web.DynamicData.MetaTable.ToString%2A&gt; value is returned.","pos":[51,244],"source":" If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned."},{"content":"Otherwise, the method returns the <ph id=\"ph1\">`ToString`</ph> representation of the value of the &lt;xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A&gt; property for the specified row.","pos":[245,413],"source":" Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row."}]},{"pos":[39037,39075],"content":"The row to get the display string for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row to get the display string for.","pos":[0,38]}]},{"pos":[39133,39175],"content":"The display name for an instance of a row.","needQuote":true,"needEscape":true,"nodes":[{"content":"The display name for an instance of a row.","pos":[0,42]}]},{"pos":[39671,39719],"content":"Retrieves a list of columns that are filterable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a list of columns that are filterable.","pos":[0,48]}]},{"pos":[39731,39973],"content":"A column is filterable if it is annotated with the &lt;xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&gt; attribute and the <ph id=\"ph1\">`Enabled`</ph> property of the &lt;xref:System.Web.Mvc.FilterAttribute&gt; attribute of the column is set to <ph id=\"ph2\">`true`</ph>.","needQuote":true,"needEscape":true,"extradata":"MT","source":"A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`."},{"pos":[40245,40283],"content":"A list of columns that are filterable.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of columns that are filterable.","pos":[0,38]}]},{"pos":[40854,40931],"content":"Retrieves a dictionary of primary-key names and values for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a dictionary of primary-key names and values for the specified row.","pos":[0,77]}]},{"pos":[41901,41907],"content":"A row.","needQuote":true,"needEscape":true,"nodes":[{"content":"A row.","pos":[0,6]}]},{"pos":[42019,42064],"content":"A dictionary of primary-key names and values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of primary-key names and values.","pos":[0,45]}]},{"pos":[42709,42810],"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","pos":[0,101]}]},{"pos":[43051,43106],"content":"The list of column values that make up the primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of column values that make up the primary key.","pos":[0,55]}]},{"pos":[43164,43255],"content":"A comma-separated list of column values. If the list is empty, an empty string is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of column values. If the list is empty, an empty string is returned.","pos":[0,91],"nodes":[{"content":"A comma-separated list of column values.","pos":[0,40]},{"content":"If the list is empty, an empty string is returned.","pos":[41,91]}]}]},{"pos":[43807,43908],"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","pos":[0,101]}]},{"pos":[44055,44090],"content":"The row to get the primary key for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row to get the primary key for.","pos":[0,35]}]},{"pos":[44148,44231],"content":"A comma-separated list of column values that represent the primary key for the row.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of column values that represent the primary key for the row.","pos":[0,83]}]},{"pos":[44783,44874],"content":"Returns a collection of column values that represent the primary key for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of column values that represent the primary key for the specified row.","pos":[0,91]}]},{"pos":[45055,45090],"content":"The row to get the primary key for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row to get the primary key for.","pos":[0,35]}]},{"pos":[45182,45255],"content":"A collection of column values that represent the primary key for the row.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of column values that represent the primary key for the row.","pos":[0,73]}]},{"pos":[45704,45832],"content":"Returns the &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type that represents the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Linq.IQueryable?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> instance for the entity type that represents the table.","pos":[0,128],"source":"Returns the &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type that represents the table."}]},{"pos":[45984,46078],"content":"The &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Linq.IQueryable?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> instance for the entity type.","pos":[0,94],"source":"The &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type."}]},{"pos":[46564,46718],"content":"Returns the &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type that represents the table by using the data context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Linq.IQueryable?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> instance for the entity type that represents the table by using the data context.","pos":[0,154],"source":"Returns the &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type that represents the table by using the data context."}]},{"pos":[46730,46906],"content":"If the <ph id=\"ph1\">`context`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method creates a new context by calling the &lt;xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName&gt; method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method."},{"pos":[47074,47154],"content":"The context of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The context of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object."},{"pos":[47221,47330],"content":"The <xref:System.Linq.IQueryable> instance for the entity type that represents the table in the data context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Linq.IQueryable&gt; instance for the entity type that represents the table in the data context.","pos":[0,109],"source":"The <xref:System.Linq.IQueryable> instance for the entity type that represents the table in the data context."}]},{"pos":[48090,48148],"content":"Returns a list of columns to display by using scaffolding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of columns to display by using scaffolding.","pos":[0,58]}]},{"pos":[48161,48657],"content":"This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:      -   Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.      -   Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns all columns whose &lt;xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&gt; property is set to <ph id=\"ph1\">`true`</ph> except the following:      -   Long string columns, which are columns whose &lt;xref:System.Web.DynamicData.MetaColumn.IsLongString%2A&gt; property is set to <ph id=\"ph2\">`true`</ph> and whose <ph id=\"ph3\">`containerType`</ph> parameter is <ph id=\"ph4\">`true`</ph>.","pos":[0,338],"source":"This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:      -   Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`."},{"content":"-   Child columns whose &lt;xref:System.Web.UI.WebControls.DataBoundControlMode&gt; value is set to &lt;xref:System.Web.UI.WebControls.DataBoundControlMode&gt;.","pos":[344,492],"source":"      -   Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode>."}]},{"pos":[49006,49034],"content":"The data-bound control mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data-bound control mode.","pos":[0,28]}]},{"pos":[49127,49238],"content":"A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.","pos":[0,111]}]},{"pos":[49356,49406],"content":"A list of columns to display by using scaffolding.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of columns to display by using scaffolding.","pos":[0,50]}]},{"pos":[49892,49959],"content":"Retrieves the metatable that is associated with the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the metatable that is associated with the specified type.","pos":[0,67]}]},{"pos":[49971,50287],"content":"This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>. If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method calls &lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt;.","pos":[0,125],"source":"This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>."},{"content":"If &lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt; returns <ph id=\"ph1\">`false`</ph>, an &lt;xref:System.InvalidOperationException&gt; exception is thrown.","pos":[126,316],"source":" If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown."}]},{"pos":[50466,50489],"content":"The type of the entity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the entity.","pos":[0,23]}]},{"pos":[50566,50623],"content":"The metatable that is associated with the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metatable that is associated with the specified type.","pos":[0,57]}]},{"pos":[50803,51030],"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29<ph id=\"ph2\">&amp;gt;</ph> method that was called by this method returned <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The &lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt; method that was called by this method returned <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51417,51481],"content":"Gets a value that indicates whether the table has a primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the table has a primary key.","pos":[0,64]}]},{"pos":[51598,51765],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the table has a primary key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table has a primary key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[52218,52292],"content":"Initializes data that may not be available when the constructor is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes data that may not be available when the constructor is called.","pos":[0,74]}]},{"pos":[52304,52713],"content":"This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance. This method cannot be called directly. To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method. If you override this method, call the base control's `Initialize` method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method calls the &lt;xref:System.Web.DynamicData.MetaColumn.Initialize%2A&gt; method for each column in the &lt;xref:System.Web.DynamicData.MetaTable&gt; instance.","pos":[0,156],"source":"This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance."},{"content":"This method cannot be called directly.","pos":[157,195]},{"content":"To customize initialization, you can derive from this class and override the &lt;xref:System.Web.DynamicData.MetaColumn.Initialize%2A&gt; method.","pos":[196,335],"source":" To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method."},{"content":"If you override this method, call the base control's <ph id=\"ph1\">`Initialize`</ph> method.","pos":[336,409],"source":" If you override this method, call the base control's `Initialize` method."}]},{"pos":[53673,53732],"content":"Gets a value that indicates whether the table is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the table is read-only.","pos":[0,59]}]},{"pos":[53854,54016],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the table is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[54482,54536],"content":"Gets the action path of the list action for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the action path of the list action for the table.","pos":[0,54]}]},{"pos":[54548,54721],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the &lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt; class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]},{"pos":[54840,54889],"content":"The action path of the list action for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The action path of the list action for the table.","pos":[0,49]}]},{"pos":[55314,55360],"content":"Gets the meta model that the table belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the meta model that the table belongs to.","pos":[0,46]}]},{"pos":[55372,55484],"content":"For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"For more information, see the &lt;xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName&gt; class overview.","pos":[0,112],"source":"For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview."}]},{"pos":[55639,55680],"content":"The meta model that the table belongs to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The meta model that the table belongs to.","pos":[0,41]}]},{"pos":[56091,56125],"content":"Gets the unique name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unique name of the table.","pos":[0,34]}]},{"pos":[56234,56263],"content":"The unique name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unique name of the table.","pos":[0,29]}]},{"pos":[56738,56797],"content":"Gets the collection of columns that define the primary key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of columns that define the primary key.","pos":[0,59]}]},{"pos":[57068,57119],"content":"A collection that contains the primary-key columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains the primary-key columns.","pos":[0,51]}]},{"pos":[57562,57594],"content":"Gets the provider for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the provider for the table.","pos":[0,32]}]},{"pos":[57790,57817],"content":"The provider for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The provider for the table.","pos":[0,27]}]},{"pos":[58280,58321],"content":"Resets the cached metadata for the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the cached metadata for the table.","pos":[0,41]}]},{"pos":[58333,58544],"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.","pos":[0,211],"nodes":[{"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.","pos":[0,140]},{"content":"The metadata cache is rebuilt the next time any metadata is requested.","pos":[141,211]}]}]},{"pos":[59085,59142],"content":"Gets the root type of the entity's inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the root type of the entity's inheritance hierarchy.","pos":[0,57]}]},{"pos":[59154,59269],"content":"If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.","pos":[0,115]}]},{"pos":[59384,59436],"content":"The root type of the entity's inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root type of the entity's inheritance hierarchy.","pos":[0,52]}]},{"pos":[59876,59950],"content":"Gets or sets a value that indicates whether the table should be displayed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the table should be displayed.","pos":[0,74]}]},{"pos":[60070,60239],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the table should be displayed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table should be displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[60683,60781],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that the table is sorted by.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> value that the table is sorted by."},{"pos":[60951,60990],"content":"The column that the table is sorted by.","needQuote":true,"needEscape":true,"nodes":[{"content":"The column that the table is sorted by.","pos":[0,39]}]},{"pos":[61456,61591],"content":"Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.","pos":[0,135]}]},{"pos":[61603,61746],"content":"You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"You can specify sort order by using the &lt;xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName&gt; attribute.","pos":[0,143],"source":"You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute."}]},{"pos":[61872,62050],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if entries are sorted in descending order; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if entries are sorted in descending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[62494,62524],"content":"Returns the name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the name of the table.","pos":[0,30]}]},{"pos":[62660,62682],"content":"The name of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the table.","pos":[0,22]}]},{"pos":[63291,63362],"content":"Returns a value that indicates whether a specified column can be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether a specified column can be found.","pos":[0,71]}]},{"pos":[63374,63476],"content":"If the <ph id=\"ph1\">`columnName`</ph> parameter is null, an &lt;xref:System.InvalidOperationException&gt; exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown."},{"pos":[63674,63705],"content":"The name of the column to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the column to find.","pos":[0,31]}]},{"pos":[63788,63964],"content":"When this method returns, contains the <xref uid=\"langword_csharp_MetaColumn\" name=\"MetaColumn\" href=\"\"></xref> object for `columnName`. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MetaColumn\" name=\"MetaColumn\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for <ph id=\"ph1\">`columnName`</ph>.","pos":[0,136],"source":"When this method returns, contains the <xref uid=\"langword_csharp_MetaColumn\" name=\"MetaColumn\" href=\"\"></xref> object for `columnName`."},{"content":"This parameter is passed uninitialized.","pos":[137,176]}]},{"pos":[64023,64196],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified column can be found; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified column can be found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[64789,64866],"content":"Retrieves the metatable that is associated with the specified type and table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the metatable that is associated with the specified type and table.","pos":[0,77]}]},{"pos":[65064,65087],"content":"The type of the entity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the entity.","pos":[0,23]}]},{"pos":[65168,65300],"content":"When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.","pos":[0,132],"nodes":[{"content":"When this method returns, contains the metatable that is associated with the specified type.","pos":[0,92]},{"content":"This parameter is passed uninitialized.","pos":[93,132]}]}]},{"pos":[65359,65427],"content":"The metatable that is associated with the given specified and table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metatable that is associated with the given specified and table.","pos":[0,68]}]},{"pos":[65602,65690],"content":"<ph id=\"ph1\">&lt;code&gt;entityType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>entityType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.MetaTable\n  id: MetaTable\n  children:\n  - System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  - System.Web.DynamicData.MetaTable.Attributes\n  - System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  - System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.Columns\n  - System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaTable.CreateContext\n  - System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  - System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  - System.Web.DynamicData.MetaTable.DataContextPropertyName\n  - System.Web.DynamicData.MetaTable.DataContextType\n  - System.Web.DynamicData.MetaTable.DisplayColumn\n  - System.Web.DynamicData.MetaTable.DisplayName\n  - System.Web.DynamicData.MetaTable.EntityType\n  - System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  - System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  - System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  - System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  - System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  - System.Web.DynamicData.MetaTable.GetFilteredColumns\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  - System.Web.DynamicData.MetaTable.GetQuery\n  - System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  - System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  - System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  - System.Web.DynamicData.MetaTable.HasPrimaryKey\n  - System.Web.DynamicData.MetaTable.Initialize\n  - System.Web.DynamicData.MetaTable.IsReadOnly\n  - System.Web.DynamicData.MetaTable.ListActionPath\n  - System.Web.DynamicData.MetaTable.Model\n  - System.Web.DynamicData.MetaTable.Name\n  - System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  - System.Web.DynamicData.MetaTable.Provider\n  - System.Web.DynamicData.MetaTable.ResetMetadata\n  - System.Web.DynamicData.MetaTable.RootEntityType\n  - System.Web.DynamicData.MetaTable.Scaffold\n  - System.Web.DynamicData.MetaTable.SortColumn\n  - System.Web.DynamicData.MetaTable.SortDescending\n  - System.Web.DynamicData.MetaTable.ToString\n  - System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  - System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  langs:\n  - csharp\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n  type: Class\n  summary: Represents the metadata that describes a table for use by Dynamic Data pages.\n  remarks: ''\n  example:\n  - \"The following example is part of the code-behind file for the Insert.aspx page template. The MetaTable instance is initialized in the `Page_Load` method. The title for the page is set to the table `DisplayName` property.  \\n  \\n```c#  \\npublic partial class Insert : System.Web.UI.Page {  \\n    protected MetaTable table;     \\n  \\n    protected void Page_Load(object sender, EventArgs e) {  \\n        table = DetailsDataSource.GetTable();  \\n        Title = table.DisplayName;  \\n    }  \\n}  \\n```  \\n  \\n```vb#  \\nPartial Class Insert  \\n    Inherits System.Web.UI.Page  \\n  \\n    Protected table As MetaTable      \\n  \\n    Protected Sub Page_Load(ByVal sender As Object, _  \\n            ByVal e As EventArgs)  \\n        table = DetailsDataSource.GetTable  \\n        Title = table.DisplayName  \\n    End Sub  \\nEnd Class  \\n```\"\n  syntax:\n    content: public class MetaTable\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  id: '#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)'\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: MetaTable(MetaModel,TableProvider)\n  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)\n  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> class.\n  remarks: The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.\n  syntax:\n    content: public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);\n    parameters:\n    - id: metaModel\n      type: System.Web.DynamicData.MetaModel\n      description: The entity meta model.\n    - id: tableProvider\n      type: System.Web.DynamicData.ModelProviders.TableProvider\n      description: The entity model provider.\n  overload: System.Web.DynamicData.MetaTable.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Attributes\n  id: Attributes\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: MetaTable.Attributes\n  fullName: System.Web.DynamicData.MetaTable.Attributes\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the attributes that are associated with the table.\n  syntax:\n    content: public System.ComponentModel.AttributeCollection Attributes { get; }\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: A collection that contains the attributes of the table.\n  overload: System.Web.DynamicData.MetaTable.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  id: BuildAttributeCollection\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: BuildAttributeCollection()\n  nameWithType: MetaTable.BuildAttributeCollection()\n  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates the attribute collection.\n  syntax:\n    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();\n    parameters: []\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: The attribute collection.\n  overload: System.Web.DynamicData.MetaTable.BuildAttributeCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  id: CanDelete(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanDelete(IPrincipal)\n  nameWithType: MetaTable.CanDelete(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform delete operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform delete operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.CanDelete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  id: CanInsert(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanInsert(IPrincipal)\n  nameWithType: MetaTable.CanInsert(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform insert operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform insert operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.CanInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  id: CanRead(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanRead(IPrincipal)\n  nameWithType: MetaTable.CanRead(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform read operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanRead (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform read operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.CanRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  id: CanUpdate(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanUpdate(IPrincipal)\n  nameWithType: MetaTable.CanUpdate(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform update operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user is allowed to perform update operations; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.CanUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Columns\n  id: Columns\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Columns\n  nameWithType: MetaTable.Columns\n  fullName: System.Web.DynamicData.MetaTable.Columns\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the column collection for the table.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Columns property. In the example, the Dynamic Data page templates have been copied to the \\\\DynamicData\\\\CustomPages\\\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`. In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table. The Columns property is used to display the number of columns in the table.  \\n  \\n [!code-cs[System.Web.DynamicData.DynamicDataExtensions#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_1.cs)]  \\n[!code-cs[System.Web.DynamicData.DynamicDataExtensions#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_3_2.aspx)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> Columns { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}\n      description: A collection that contains the columns for the table.\n  overload: System.Web.DynamicData.MetaTable.Columns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateChildrenColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)\n  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates a new <xref href=\"System.Web.DynamicData.MetaChildrenColumn\"></xref> object.\n  remarks: This method can be overridden to create a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n    return:\n      type: System.Web.DynamicData.MetaChildrenColumn\n      description: The new child metacolumn object.\n  overload: System.Web.DynamicData.MetaTable.CreateChildrenColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateColumn(ColumnProvider)\n  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates a <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.\n  remarks: This method can be overridden to create a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The new metacolumn object.\n  overload: System.Web.DynamicData.MetaTable.CreateColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CreateContext\n  id: CreateContext\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateContext()\n  nameWithType: MetaTable.CreateContext()\n  fullName: System.Web.DynamicData.MetaTable.CreateContext()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the data context for the table.\n  remarks: The data context is retrieved from a new context that is instantiated by calling the CreateContext method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.\n  syntax:\n    content: public virtual object CreateContext ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The data context for the table.\n  overload: System.Web.DynamicData.MetaTable.CreateContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateForeignKeyColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)\n  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates an object that contains foreign-key metadata.\n  remarks: This method can be overridden to create a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n    return:\n      type: System.Web.DynamicData.MetaForeignKeyColumn\n      description: An object that contains foreign-key metadata.\n  overload: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  id: CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateTable(ICustomTypeDescriptor)\n  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)\n  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates the metadata for the specified table.\n  syntax:\n    content: public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);\n    parameters:\n    - id: typeDescriptor\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: Information about the table type.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: An object that contains the table metadata.\n  overload: System.Web.DynamicData.MetaTable.CreateTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  id: CreateTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateTable(Type)\n  nameWithType: MetaTable.CreateTable(Type)\n  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates the metadata for the specified table.\n  syntax:\n    content: public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The table type for which to generate metadata.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: An object that contains the table metadata.\n  overload: System.Web.DynamicData.MetaTable.CreateTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName\n  id: DataContextPropertyName\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DataContextPropertyName\n  nameWithType: MetaTable.DataContextPropertyName\n  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the name of the table.\n  remarks: The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.\n  syntax:\n    content: public string DataContextPropertyName { get; }\n    return:\n      type: System.String\n      description: The name of the table.\n  overload: System.Web.DynamicData.MetaTable.DataContextPropertyName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.DataContextType\n  id: DataContextType\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DataContextType\n  nameWithType: MetaTable.DataContextType\n  fullName: System.Web.DynamicData.MetaTable.DataContextType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the type of the data context that is associated with the table.\n  remarks: For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview.\n  syntax:\n    content: public Type DataContextType { get; }\n    return:\n      type: System.Type\n      description: The type of the data context.\n  overload: System.Web.DynamicData.MetaTable.DataContextType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.DisplayColumn\n  id: DisplayColumn\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DisplayColumn\n  nameWithType: MetaTable.DisplayColumn\n  fullName: System.Web.DynamicData.MetaTable.DisplayColumn\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.\n  remarks: \"The column that is returned is selected in this order:  \\n  \\n1.  The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.  \\n  \\n2.  The first string column that is not in the primary key.  \\n  \\n3.  The first string column that is in the primary key.  \\n  \\n4.  The first non-string column that is in the primary key.  \\n  \\n5.  The first column.\"\n  syntax:\n    content: public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The column that is used to display values when entries in this table are used as parents in foreign-key relationships.\n  overload: System.Web.DynamicData.MetaTable.DisplayColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.DisplayName\n  id: DisplayName\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: MetaTable.DisplayName\n  fullName: System.Web.DynamicData.MetaTable.DisplayName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the name of the table in a user-friendly format.\n  remarks: The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.\n  syntax:\n    content: public virtual string DisplayName { get; }\n    return:\n      type: System.String\n      description: The string that represents the user-friendly name of the table.\n  overload: System.Web.DynamicData.MetaTable.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.EntityType\n  id: EntityType\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: EntityType\n  nameWithType: MetaTable.EntityType\n  fullName: System.Web.DynamicData.MetaTable.EntityType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the entity type that represents the table.\n  syntax:\n    content: public Type EntityType { get; }\n    return:\n      type: System.Type\n      description: The type that represents the entity.\n  overload: System.Web.DynamicData.MetaTable.EntityType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  id: ForeignKeyColumnsNames\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ForeignKeyColumnsNames\n  nameWithType: MetaTable.ForeignKeyColumnsNames\n  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a comma-separated list of foreign-key names.\n  syntax:\n    content: public string ForeignKeyColumnsNames { get; }\n    return:\n      type: System.String\n      description: A comma-separated list of foreign-key names.\n  overload: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  id: GetActionPath(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String)\n  nameWithType: MetaTable.GetActionPath(String)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the current table and the specified action.\n  remarks: ''\n  example:\n  - The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    return:\n      type: System.String\n      description: The action path for the specified action.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String,IList<Object>)\n  nameWithType: MetaTable.GetActionPath(String,IList<Object>)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the current table, specified action, and specified primary key.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: primaryKeyValues\n      type: System.Collections.Generic.IList{System.Object}\n      description: The list of column values that make up the primary key.\n    return:\n      type: System.String\n      description: The action path for the specified action and primary key.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  id: GetActionPath(System.String,System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String,Object)\n  nameWithType: MetaTable.GetActionPath(String,Object)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the specified row by using the name of the action.\n  remarks: \"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.  \\n  \\n For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\"\n  syntax:\n    content: public string GetActionPath (string action, object row);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: row\n      type: System.Object\n      description: The row to get the action path for.\n    return:\n      type: System.String\n      description: The action path for the specified row.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  id: GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String,RouteValueDictionary)\n  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the current table and for the specified action and routes.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The list of routes for the action.\n    return:\n      type: System.String\n      description: The action path for the specified action and routes.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String,IList<Object>,String)\n  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Appends query strings to the action path, based on the specified primary key and virtual path.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues, string path);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: primaryKeyValues\n      type: System.Collections.Generic.IList{System.Object}\n      description: The list of column values that make up the primary key.\n    - id: path\n      type: System.String\n      description: The virtual path of the action.\n    return:\n      type: System.String\n      description: The action path for the specified primary key and virtual path, with query-string values appended to it.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  id: GetActionPath(System.String,System.Object,System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String,Object,String)\n  nameWithType: MetaTable.GetActionPath(String,Object,String)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the specified row by using the name of the action and the virtual path of the action.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, object row, string path);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: row\n      type: System.Object\n      description: An object that contains the row for the action path.\n    - id: path\n      type: System.String\n      description: The virtual path of the action.\n    return:\n      type: System.String\n      description: The action path for the specified row.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  id: GetColumn(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetColumn(String)\n  nameWithType: MetaTable.GetColumn(String)\n  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the metadata for the specified column.\n  syntax:\n    content: public System.Web.DynamicData.MetaColumn GetColumn (string columnName);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name of the column to get metadata for.\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The column metadata.\n  overload: System.Web.DynamicData.MetaTable.GetColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  id: GetColumnValuesFromRoute(System.Web.HttpContext)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetColumnValuesFromRoute(HttpContext)\n  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)\n  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the collection of column values.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> GetColumnValuesFromRoute (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The context for the specified Web request.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The collection of column values.\n  overload: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  id: GetDataKeyFromRoute\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetDataKeyFromRoute()\n  nameWithType: MetaTable.GetDataKeyFromRoute()\n  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the primary key of the entity from the route values.\n  remarks: The route values typically come from the request URL query string.\n  syntax:\n    content: public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.DataKey\n      description: The primary-key values of the entities, if they are found; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  id: GetDisplayString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetDisplayString(Object)\n  nameWithType: MetaTable.GetDisplayString(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.\n  remarks: If the row is `null`, an empty string is returned. If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned. Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.\n  syntax:\n    content: public virtual string GetDisplayString (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to get the display string for.\n    return:\n      type: System.String\n      description: The display name for an instance of a row.\n  overload: System.Web.DynamicData.MetaTable.GetDisplayString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns\n  id: GetFilteredColumns\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetFilteredColumns()\n  nameWithType: MetaTable.GetFilteredColumns()\n  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves a list of columns that are filterable.\n  remarks: A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetFilteredColumns ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}\n      description: A list of columns that are filterable.\n  overload: System.Web.DynamicData.MetaTable.GetFilteredColumns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  id: GetPrimaryKeyDictionary(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyDictionary(Object)\n  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves a dictionary of primary-key names and values for the specified row.\n  remarks: ''\n  example:\n  - \"The following example shows how to create a primary-key dictionary.  \\n  \\n```c#  \\nprivate RouteValueDictionary GetRouteValues(MetaTable table, object row) {  \\n    RouteValueDictionary routeValues = GetRouteValues();  \\n    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  \\n        routeValues[pk.Key] = pk.Value;  \\n    }  \\n    return routeValues;  \\n}   \\n```  \\n  \\n```vb#  \\nPrivate Function GetRouteValues(ByVal table As MetaTable, _  \\n        ByVal row As Object) As RouteValueDictionary   \\n    Dim routeValues As RouteValueDictionary = GetRouteValues()   \\n    For Each pk In table.GetPrimaryKeyDictionary(row)   \\n        routeValues(pk.Key) = pk.Value   \\n    Next   \\n    Return routeValues   \\nEnd Function   \\n```\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> GetPrimaryKeyDictionary (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: A row.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A dictionary of primary-key names and values.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  id: GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyString(IList<Object>)\n  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a comma-separated list of column values that represent the primary key for the specified row.\n  syntax:\n    content: public string GetPrimaryKeyString (System.Collections.Generic.IList<object> primaryKeyValues);\n    parameters:\n    - id: primaryKeyValues\n      type: System.Collections.Generic.IList{System.Object}\n      description: The list of column values that make up the primary key.\n    return:\n      type: System.String\n      description: A comma-separated list of column values. If the list is empty, an empty string is returned.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  id: GetPrimaryKeyString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyString(Object)\n  nameWithType: MetaTable.GetPrimaryKeyString(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a comma-separated list of column values that represent the primary key for the specified row.\n  syntax:\n    content: public string GetPrimaryKeyString (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to get the primary key for.\n    return:\n      type: System.String\n      description: A comma-separated list of column values that represent the primary key for the row.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  id: GetPrimaryKeyValues(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyValues(Object)\n  nameWithType: MetaTable.GetPrimaryKeyValues(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a collection of column values that represent the primary key for the specified row.\n  syntax:\n    content: public System.Collections.Generic.IList<object> GetPrimaryKeyValues (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to get the primary key for.\n    return:\n      type: System.Collections.Generic.IList{System.Object}\n      description: A collection of column values that represent the primary key for the row.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetQuery\n  id: GetQuery\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetQuery()\n  nameWithType: MetaTable.GetQuery()\n  fullName: System.Web.DynamicData.MetaTable.GetQuery()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type that represents the table.\n  syntax:\n    content: public System.Linq.IQueryable GetQuery ();\n    parameters: []\n    return:\n      type: System.Linq.IQueryable\n      description: The &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type.\n  overload: System.Web.DynamicData.MetaTable.GetQuery*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  id: GetQuery(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetQuery(Object)\n  nameWithType: MetaTable.GetQuery(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the &lt;xref:System.Linq.IQueryable?displayProperty=fullName&gt; instance for the entity type that represents the table by using the data context.\n  remarks: If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method.\n  syntax:\n    content: public virtual System.Linq.IQueryable GetQuery (object context);\n    parameters:\n    - id: context\n      type: System.Object\n      description: The context of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object.\n    return:\n      type: System.Linq.IQueryable\n      description: The <xref:System.Linq.IQueryable> instance for the entity type that represents the table in the data context.\n  overload: System.Web.DynamicData.MetaTable.GetQuery*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  id: GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)\n  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)\n  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a list of columns to display by using scaffolding.\n  remarks: \"This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:  \\n  \\n-   Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.  \\n  \\n-   Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode>.\"\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);\n    parameters:\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: The data-bound control mode.\n    - id: containerType\n      type: System.Web.DynamicData.ContainerType\n      description: A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}\n      description: A list of columns to display by using scaffolding.\n  overload: System.Web.DynamicData.MetaTable.GetScaffoldColumns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  id: GetTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetTable(Type)\n  nameWithType: MetaTable.GetTable(Type)\n  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the metatable that is associated with the specified type.\n  remarks: This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>. If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.\n  syntax:\n    content: public static System.Web.DynamicData.MetaTable GetTable (Type entityType);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The type of the entity.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: The metatable that is associated with the specified type.\n  overload: System.Web.DynamicData.MetaTable.GetTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The &lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt; method that was called by this method returned <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey\n  id: HasPrimaryKey\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: HasPrimaryKey\n  nameWithType: MetaTable.HasPrimaryKey\n  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the table has a primary key.\n  syntax:\n    content: public bool HasPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table has a primary key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.HasPrimaryKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Initialize\n  id: Initialize\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: MetaTable.Initialize()\n  fullName: System.Web.DynamicData.MetaTable.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes data that may not be available when the constructor is called.\n  remarks: This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance. This method cannot be called directly. To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method. If you override this method, call the base control's `Initialize` method.\n  example:\n  - \"The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.  \\n  \\n```c#  \\nprotected  override void Initialize() {  \\n    base.Initialize();  \\n    MyOverridenInit();  \\n}  \\n```  \\n  \\n```vb#  \\nProtected Overloads Overrides Sub Initialize()   \\n    MyBase.Initialize()   \\n    MyOverridenInit()   \\nEnd Sub  \\n```\"\n  syntax:\n    content: protected virtual void Initialize ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaTable.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: MetaTable.IsReadOnly\n  fullName: System.Web.DynamicData.MetaTable.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the table is read-only.\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.ListActionPath\n  id: ListActionPath\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ListActionPath\n  nameWithType: MetaTable.ListActionPath\n  fullName: System.Web.DynamicData.MetaTable.ListActionPath\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the action path of the list action for the table.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string ListActionPath { get; }\n    return:\n      type: System.String\n      description: The action path of the list action for the table.\n  overload: System.Web.DynamicData.MetaTable.ListActionPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Model\n  id: Model\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: System.Web.DynamicData.MetaTable.Model\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the meta model that the table belongs to.\n  remarks: For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview.\n  syntax:\n    content: public System.Web.DynamicData.MetaModel Model { get; }\n    return:\n      type: System.Web.DynamicData.MetaModel\n      description: The meta model that the table belongs to.\n  overload: System.Web.DynamicData.MetaTable.Model*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Name\n  id: Name\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaTable.Name\n  fullName: System.Web.DynamicData.MetaTable.Name\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the unique name of the table.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The unique name of the table.\n  overload: System.Web.DynamicData.MetaTable.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  id: PrimaryKeyColumns\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: PrimaryKeyColumns\n  nameWithType: MetaTable.PrimaryKeyColumns\n  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the collection of columns that define the primary key.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> PrimaryKeyColumns { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}\n      description: A collection that contains the primary-key columns.\n  overload: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Provider\n  id: Provider\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: MetaTable.Provider\n  fullName: System.Web.DynamicData.MetaTable.Provider\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the provider for the table.\n  syntax:\n    content: public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }\n    return:\n      type: System.Web.DynamicData.ModelProviders.TableProvider\n      description: The provider for the table.\n  overload: System.Web.DynamicData.MetaTable.Provider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.ResetMetadata\n  id: ResetMetadata\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ResetMetadata()\n  nameWithType: MetaTable.ResetMetadata()\n  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Resets the cached metadata for the table.\n  remarks: The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.\n  syntax:\n    content: public void ResetMetadata ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaTable.ResetMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.RootEntityType\n  id: RootEntityType\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: RootEntityType\n  nameWithType: MetaTable.RootEntityType\n  fullName: System.Web.DynamicData.MetaTable.RootEntityType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the root type of the entity's inheritance hierarchy.\n  remarks: If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.\n  syntax:\n    content: public Type RootEntityType { get; }\n    return:\n      type: System.Type\n      description: The root type of the entity's inheritance hierarchy.\n  overload: System.Web.DynamicData.MetaTable.RootEntityType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.Scaffold\n  id: Scaffold\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Scaffold\n  nameWithType: MetaTable.Scaffold\n  fullName: System.Web.DynamicData.MetaTable.Scaffold\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that indicates whether the table should be displayed.\n  syntax:\n    content: public virtual bool Scaffold { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the table should be displayed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.Scaffold*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.SortColumn\n  id: SortColumn\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: SortColumn\n  nameWithType: MetaTable.SortColumn\n  fullName: System.Web.DynamicData.MetaTable.SortColumn\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> value that the table is sorted by.\n  syntax:\n    content: public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The column that the table is sorted by.\n  overload: System.Web.DynamicData.MetaTable.SortColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.SortDescending\n  id: SortDescending\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: SortDescending\n  nameWithType: MetaTable.SortDescending\n  fullName: System.Web.DynamicData.MetaTable.SortDescending\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.\n  remarks: You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute.\n  syntax:\n    content: public virtual bool SortDescending { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if entries are sorted in descending order; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.SortDescending*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.ToString\n  id: ToString\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MetaTable.ToString()\n  fullName: System.Web.DynamicData.MetaTable.ToString()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the name of the table.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the table.\n  overload: System.Web.DynamicData.MetaTable.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  id: TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: TryGetColumn(String,MetaColumn)\n  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)\n  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a value that indicates whether a specified column can be found.\n  remarks: If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.\n  syntax:\n    content: public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name of the column to find.\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: When this method returns, contains the <xref uid=\"langword_csharp_MetaColumn\" name=\"MetaColumn\" href=\"\"></xref> object for `columnName`. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified column can be found; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaTable.TryGetColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: TryGetTable(Type,MetaTable)\n  nameWithType: MetaTable.TryGetTable(Type,MetaTable)\n  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the metatable that is associated with the specified type and table.\n  syntax:\n    content: public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The type of the entity.\n    - id: table\n      type: System.Web.DynamicData.MetaTable\n      description: When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: The metatable that is associated with the given specified and table.\n  overload: System.Web.DynamicData.MetaTable.TryGetTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entityType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: MetaTable(MetaModel,TableProvider)\n  nameWithType: MetaTable.MetaTable(MetaModel,TableProvider)\n  fullName: System.Web.DynamicData.MetaTable.MetaTable(MetaModel,TableProvider)\n- uid: System.Web.DynamicData.MetaModel\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n- uid: System.Web.DynamicData.ModelProviders.TableProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: TableProvider\n  nameWithType: TableProvider\n  fullName: System.Web.DynamicData.ModelProviders.TableProvider\n- uid: System.Web.DynamicData.MetaTable.Attributes\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Attributes\n  nameWithType: MetaTable.Attributes\n  fullName: System.Web.DynamicData.MetaTable.Attributes\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: BuildAttributeCollection()\n  nameWithType: MetaTable.BuildAttributeCollection()\n  fullName: System.Web.DynamicData.MetaTable.BuildAttributeCollection()\n- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanDelete(IPrincipal)\n  nameWithType: MetaTable.CanDelete(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanDelete(IPrincipal)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: true\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanInsert(IPrincipal)\n  nameWithType: MetaTable.CanInsert(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanInsert(IPrincipal)\n- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanRead(IPrincipal)\n  nameWithType: MetaTable.CanRead(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanRead(IPrincipal)\n- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanUpdate(IPrincipal)\n  nameWithType: MetaTable.CanUpdate(IPrincipal)\n  fullName: System.Web.DynamicData.MetaTable.CanUpdate(IPrincipal)\n- uid: System.Web.DynamicData.MetaTable.Columns\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Columns\n  nameWithType: MetaTable.Columns\n  fullName: System.Web.DynamicData.MetaTable.Columns\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<MetaColumn>\n  nameWithType: ReadOnlyCollection<MetaColumn>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaColumn>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.DynamicData.MetaColumn\n    name: MetaColumn\n    nameWithType: MetaColumn\n    fullName: MetaColumn\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateChildrenColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)\n  fullName: System.Web.DynamicData.MetaTable.CreateChildrenColumn(ColumnProvider)\n- uid: System.Web.DynamicData.MetaChildrenColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaChildrenColumn\n  nameWithType: MetaChildrenColumn\n  fullName: System.Web.DynamicData.MetaChildrenColumn\n- uid: System.Web.DynamicData.ModelProviders.ColumnProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: ColumnProvider\n  nameWithType: ColumnProvider\n  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider\n- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateColumn(ColumnProvider)\n  fullName: System.Web.DynamicData.MetaTable.CreateColumn(ColumnProvider)\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.Web.DynamicData.MetaTable.CreateContext\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateContext()\n  nameWithType: MetaTable.CreateContext()\n  fullName: System.Web.DynamicData.MetaTable.CreateContext()\n- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateForeignKeyColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)\n  fullName: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(ColumnProvider)\n- uid: System.Web.DynamicData.MetaForeignKeyColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaForeignKeyColumn\n  nameWithType: MetaForeignKeyColumn\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateTable(ICustomTypeDescriptor)\n  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)\n  fullName: System.Web.DynamicData.MetaTable.CreateTable(ICustomTypeDescriptor)\n- uid: System.Web.DynamicData.MetaTable\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n- uid: System.ComponentModel.ICustomTypeDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: ICustomTypeDescriptor\n  nameWithType: ICustomTypeDescriptor\n  fullName: System.ComponentModel.ICustomTypeDescriptor\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateTable(Type)\n  nameWithType: MetaTable.CreateTable(Type)\n  fullName: System.Web.DynamicData.MetaTable.CreateTable(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextPropertyName\n  nameWithType: MetaTable.DataContextPropertyName\n  fullName: System.Web.DynamicData.MetaTable.DataContextPropertyName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.MetaTable.DataContextType\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextType\n  nameWithType: MetaTable.DataContextType\n  fullName: System.Web.DynamicData.MetaTable.DataContextType\n- uid: System.Web.DynamicData.MetaTable.DisplayColumn\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayColumn\n  nameWithType: MetaTable.DisplayColumn\n  fullName: System.Web.DynamicData.MetaTable.DisplayColumn\n- uid: System.Web.DynamicData.MetaTable.DisplayName\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayName\n  nameWithType: MetaTable.DisplayName\n  fullName: System.Web.DynamicData.MetaTable.DisplayName\n- uid: System.Web.DynamicData.MetaTable.EntityType\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: EntityType\n  nameWithType: MetaTable.EntityType\n  fullName: System.Web.DynamicData.MetaTable.EntityType\n- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ForeignKeyColumnsNames\n  nameWithType: MetaTable.ForeignKeyColumnsNames\n  fullName: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String)\n  nameWithType: MetaTable.GetActionPath(String)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String,IList<Object>)\n  nameWithType: MetaTable.GetActionPath(String,IList<Object>)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>)\n- uid: System.Collections.Generic.IList{System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Object>\n  nameWithType: IList<Object>\n  fullName: System.Collections.Generic.IList<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String,Object)\n  nameWithType: MetaTable.GetActionPath(String,Object)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String,RouteValueDictionary)\n  nameWithType: MetaTable.GetActionPath(String,RouteValueDictionary)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,RouteValueDictionary)\n- uid: System.Web.Routing.RouteValueDictionary\n  parent: System.Web.Routing\n  isExternal: true\n  name: RouteValueDictionary\n  nameWithType: RouteValueDictionary\n  fullName: System.Web.Routing.RouteValueDictionary\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String,IList<Object>,String)\n  nameWithType: MetaTable.GetActionPath(String,IList<Object>,String)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,IList<Object>,String)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String,Object,String)\n  nameWithType: MetaTable.GetActionPath(String,Object,String)\n  fullName: System.Web.DynamicData.MetaTable.GetActionPath(String,Object,String)\n- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumn(String)\n  nameWithType: MetaTable.GetColumn(String)\n  fullName: System.Web.DynamicData.MetaTable.GetColumn(String)\n- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumnValuesFromRoute(HttpContext)\n  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)\n  fullName: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(HttpContext)\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: IDictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDataKeyFromRoute()\n  nameWithType: MetaTable.GetDataKeyFromRoute()\n  fullName: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute()\n- uid: System.Web.UI.WebControls.DataKey\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataKey\n  nameWithType: DataKey\n  fullName: System.Web.UI.WebControls.DataKey\n- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDisplayString(Object)\n  nameWithType: MetaTable.GetDisplayString(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetDisplayString(Object)\n- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetFilteredColumns()\n  nameWithType: MetaTable.GetFilteredColumns()\n  fullName: System.Web.DynamicData.MetaTable.GetFilteredColumns()\n- uid: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<MetaColumn>\n  nameWithType: IEnumerable<MetaColumn>\n  fullName: System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Web.DynamicData.MetaColumn>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.DynamicData.MetaColumn\n    name: MetaColumn\n    nameWithType: MetaColumn\n    fullName: MetaColumn\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyDictionary(Object)\n  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(Object)\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyString(IList<Object>)\n  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(IList<Object>)\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyString(Object)\n  nameWithType: MetaTable.GetPrimaryKeyString(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(Object)\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyValues(Object)\n  nameWithType: MetaTable.GetPrimaryKeyValues(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(Object)\n- uid: System.Web.DynamicData.MetaTable.GetQuery\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetQuery()\n  nameWithType: MetaTable.GetQuery()\n  fullName: System.Web.DynamicData.MetaTable.GetQuery()\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetQuery(Object)\n  nameWithType: MetaTable.GetQuery(Object)\n  fullName: System.Web.DynamicData.MetaTable.GetQuery(Object)\n- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetScaffoldColumns(DataBoundControlMode,ContainerType)\n  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)\n  fullName: System.Web.DynamicData.MetaTable.GetScaffoldColumns(DataBoundControlMode,ContainerType)\n- uid: System.Web.UI.WebControls.DataBoundControlMode\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataBoundControlMode\n  nameWithType: DataBoundControlMode\n  fullName: System.Web.UI.WebControls.DataBoundControlMode\n- uid: System.Web.DynamicData.ContainerType\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: ContainerType\n  nameWithType: ContainerType\n  fullName: System.Web.DynamicData.ContainerType\n- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetTable(Type)\n  nameWithType: MetaTable.GetTable(Type)\n  fullName: System.Web.DynamicData.MetaTable.GetTable(Type)\n- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: HasPrimaryKey\n  nameWithType: MetaTable.HasPrimaryKey\n  fullName: System.Web.DynamicData.MetaTable.HasPrimaryKey\n- uid: System.Web.DynamicData.MetaTable.Initialize\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Initialize()\n  nameWithType: MetaTable.Initialize()\n  fullName: System.Web.DynamicData.MetaTable.Initialize()\n- uid: System.Web.DynamicData.MetaTable.IsReadOnly\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MetaTable.IsReadOnly\n  fullName: System.Web.DynamicData.MetaTable.IsReadOnly\n- uid: System.Web.DynamicData.MetaTable.ListActionPath\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ListActionPath\n  nameWithType: MetaTable.ListActionPath\n  fullName: System.Web.DynamicData.MetaTable.ListActionPath\n- uid: System.Web.DynamicData.MetaTable.Model\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: System.Web.DynamicData.MetaTable.Model\n- uid: System.Web.DynamicData.MetaTable.Name\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Name\n  nameWithType: MetaTable.Name\n  fullName: System.Web.DynamicData.MetaTable.Name\n- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: PrimaryKeyColumns\n  nameWithType: MetaTable.PrimaryKeyColumns\n  fullName: System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n- uid: System.Web.DynamicData.MetaTable.Provider\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Provider\n  nameWithType: MetaTable.Provider\n  fullName: System.Web.DynamicData.MetaTable.Provider\n- uid: System.Web.DynamicData.MetaTable.ResetMetadata\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ResetMetadata()\n  nameWithType: MetaTable.ResetMetadata()\n  fullName: System.Web.DynamicData.MetaTable.ResetMetadata()\n- uid: System.Web.DynamicData.MetaTable.RootEntityType\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: RootEntityType\n  nameWithType: MetaTable.RootEntityType\n  fullName: System.Web.DynamicData.MetaTable.RootEntityType\n- uid: System.Web.DynamicData.MetaTable.Scaffold\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Scaffold\n  nameWithType: MetaTable.Scaffold\n  fullName: System.Web.DynamicData.MetaTable.Scaffold\n- uid: System.Web.DynamicData.MetaTable.SortColumn\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortColumn\n  nameWithType: MetaTable.SortColumn\n  fullName: System.Web.DynamicData.MetaTable.SortColumn\n- uid: System.Web.DynamicData.MetaTable.SortDescending\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortDescending\n  nameWithType: MetaTable.SortDescending\n  fullName: System.Web.DynamicData.MetaTable.SortDescending\n- uid: System.Web.DynamicData.MetaTable.ToString\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ToString()\n  nameWithType: MetaTable.ToString()\n  fullName: System.Web.DynamicData.MetaTable.ToString()\n- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetColumn(String,MetaColumn)\n  nameWithType: MetaTable.TryGetColumn(String,MetaColumn)\n  fullName: System.Web.DynamicData.MetaTable.TryGetColumn(String,MetaColumn)\n- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetTable(Type,MetaTable)\n  nameWithType: MetaTable.TryGetTable(Type,MetaTable)\n  fullName: System.Web.DynamicData.MetaTable.TryGetTable(Type,MetaTable)\n- uid: System.Web.DynamicData.MetaTable.#ctor*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable.MetaTable\n- uid: System.Web.DynamicData.MetaTable.Attributes*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Attributes\n  nameWithType: MetaTable.Attributes\n- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: BuildAttributeCollection\n  nameWithType: MetaTable.BuildAttributeCollection\n- uid: System.Web.DynamicData.MetaTable.CanDelete*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanDelete\n  nameWithType: MetaTable.CanDelete\n- uid: System.Web.DynamicData.MetaTable.CanInsert*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanInsert\n  nameWithType: MetaTable.CanInsert\n- uid: System.Web.DynamicData.MetaTable.CanRead*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanRead\n  nameWithType: MetaTable.CanRead\n- uid: System.Web.DynamicData.MetaTable.CanUpdate*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanUpdate\n  nameWithType: MetaTable.CanUpdate\n- uid: System.Web.DynamicData.MetaTable.Columns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Columns\n  nameWithType: MetaTable.Columns\n- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateChildrenColumn\n  nameWithType: MetaTable.CreateChildrenColumn\n- uid: System.Web.DynamicData.MetaTable.CreateColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateColumn\n  nameWithType: MetaTable.CreateColumn\n- uid: System.Web.DynamicData.MetaTable.CreateContext*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateContext\n  nameWithType: MetaTable.CreateContext\n- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateForeignKeyColumn\n  nameWithType: MetaTable.CreateForeignKeyColumn\n- uid: System.Web.DynamicData.MetaTable.CreateTable*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateTable\n  nameWithType: MetaTable.CreateTable\n- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextPropertyName\n  nameWithType: MetaTable.DataContextPropertyName\n- uid: System.Web.DynamicData.MetaTable.DataContextType*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextType\n  nameWithType: MetaTable.DataContextType\n- uid: System.Web.DynamicData.MetaTable.DisplayColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayColumn\n  nameWithType: MetaTable.DisplayColumn\n- uid: System.Web.DynamicData.MetaTable.DisplayName*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayName\n  nameWithType: MetaTable.DisplayName\n- uid: System.Web.DynamicData.MetaTable.EntityType*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: EntityType\n  nameWithType: MetaTable.EntityType\n- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ForeignKeyColumnsNames\n  nameWithType: MetaTable.ForeignKeyColumnsNames\n- uid: System.Web.DynamicData.MetaTable.GetActionPath*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath\n  nameWithType: MetaTable.GetActionPath\n- uid: System.Web.DynamicData.MetaTable.GetColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumn\n  nameWithType: MetaTable.GetColumn\n- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumnValuesFromRoute\n  nameWithType: MetaTable.GetColumnValuesFromRoute\n- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDataKeyFromRoute\n  nameWithType: MetaTable.GetDataKeyFromRoute\n- uid: System.Web.DynamicData.MetaTable.GetDisplayString*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDisplayString\n  nameWithType: MetaTable.GetDisplayString\n- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetFilteredColumns\n  nameWithType: MetaTable.GetFilteredColumns\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyDictionary\n  nameWithType: MetaTable.GetPrimaryKeyDictionary\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyString\n  nameWithType: MetaTable.GetPrimaryKeyString\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyValues\n  nameWithType: MetaTable.GetPrimaryKeyValues\n- uid: System.Web.DynamicData.MetaTable.GetQuery*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetQuery\n  nameWithType: MetaTable.GetQuery\n- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetScaffoldColumns\n  nameWithType: MetaTable.GetScaffoldColumns\n- uid: System.Web.DynamicData.MetaTable.GetTable*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetTable\n  nameWithType: MetaTable.GetTable\n- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: HasPrimaryKey\n  nameWithType: MetaTable.HasPrimaryKey\n- uid: System.Web.DynamicData.MetaTable.Initialize*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Initialize\n  nameWithType: MetaTable.Initialize\n- uid: System.Web.DynamicData.MetaTable.IsReadOnly*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MetaTable.IsReadOnly\n- uid: System.Web.DynamicData.MetaTable.ListActionPath*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ListActionPath\n  nameWithType: MetaTable.ListActionPath\n- uid: System.Web.DynamicData.MetaTable.Model*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Model\n  nameWithType: MetaTable.Model\n- uid: System.Web.DynamicData.MetaTable.Name*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Name\n  nameWithType: MetaTable.Name\n- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: PrimaryKeyColumns\n  nameWithType: MetaTable.PrimaryKeyColumns\n- uid: System.Web.DynamicData.MetaTable.Provider*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Provider\n  nameWithType: MetaTable.Provider\n- uid: System.Web.DynamicData.MetaTable.ResetMetadata*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ResetMetadata\n  nameWithType: MetaTable.ResetMetadata\n- uid: System.Web.DynamicData.MetaTable.RootEntityType*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: RootEntityType\n  nameWithType: MetaTable.RootEntityType\n- uid: System.Web.DynamicData.MetaTable.Scaffold*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Scaffold\n  nameWithType: MetaTable.Scaffold\n- uid: System.Web.DynamicData.MetaTable.SortColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortColumn\n  nameWithType: MetaTable.SortColumn\n- uid: System.Web.DynamicData.MetaTable.SortDescending*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortDescending\n  nameWithType: MetaTable.SortDescending\n- uid: System.Web.DynamicData.MetaTable.ToString*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ToString\n  nameWithType: MetaTable.ToString\n- uid: System.Web.DynamicData.MetaTable.TryGetColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetColumn\n  nameWithType: MetaTable.TryGetColumn\n- uid: System.Web.DynamicData.MetaTable.TryGetTable*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetTable\n  nameWithType: MetaTable.TryGetTable\n"}