{"nodes":[{"pos":[780,930],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> struct is an object representation of a token that represents a method.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> struct is an object representation of a token that represents a method."},{"pos":[1436,1585],"content":"The default <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with &lt;xref:System.Reflection.Emit.MethodToken.Token*&gt; value 0.","needQuote":true,"needEscape":true,"source":"The default <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> with <xref:System.Reflection.Emit.MethodToken.Token*> value 0."},{"pos":[1752,1764],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2179,2309],"content":"Tests whether the given object is equal to this <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Tests whether the given object is equal to this <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> object."},{"pos":[2450,2487],"content":"The object to compare to this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare to this object.","pos":[0,37]}]},{"pos":[2546,2823],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is an instance of <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and is equal to this object; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is an instance of <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> and is equal to this object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3350,3471],"content":"Indicates whether the current instance is equal to the specified <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the current instance is equal to the specified <xref href=\"System.Reflection.Emit.MethodToken\"></xref>."},{"pos":[3652,3747],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to the current instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to the current instance."},{"pos":[3806,4021],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to the value of the current instance; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4468,4516],"content":"Returns the generated hash code for this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the generated hash code for this method.","pos":[0,48]}]},{"pos":[4651,4691],"content":"Returns the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]},{"pos":[5356,5455],"content":"Indicates whether two <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are equal.","needQuote":true,"needEscape":true,"source":"Indicates whether two <xref href=\"System.Reflection.Emit.MethodToken\"></xref> structures are equal."},{"pos":[5682,5760],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`b`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `b`."},{"pos":[5839,5917],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`a`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `a`."},{"pos":[5976,6157],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p2\">&lt;/code&gt;</ept> is equal to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6832,6935],"content":"Indicates whether two <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures are not equal.","needQuote":true,"needEscape":true,"source":"Indicates whether two <xref href=\"System.Reflection.Emit.MethodToken\"></xref> structures are not equal."},{"pos":[7164,7242],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`b`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `b`."},{"pos":[7321,7399],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Emit.MethodToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to <ph id=\"ph1\">`a`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `a`."},{"pos":[7458,7643],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">a</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not equal to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8063,8106],"content":"Returns the metadata token for this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the metadata token for this method.","pos":[0,43]}]},{"pos":[8212,8266],"content":"Read-only. Returns the metadata token for this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Read-only. Returns the metadata token for this method.","pos":[0,54],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Returns the metadata token for this method.","pos":[11,54]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.MethodToken\n  id: MethodToken\n  children:\n  - System.Reflection.Emit.MethodToken.Empty\n  - System.Reflection.Emit.MethodToken.Equals(System.Object)\n  - System.Reflection.Emit.MethodToken.Equals(System.Reflection.Emit.MethodToken)\n  - System.Reflection.Emit.MethodToken.GetHashCode\n  - System.Reflection.Emit.MethodToken.op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  - System.Reflection.Emit.MethodToken.op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  - System.Reflection.Emit.MethodToken.Token\n  langs:\n  - csharp\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n  type: Struct\n  summary: The <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> struct is an object representation of a token that represents a method.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct MethodToken\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.Empty\n  id: Empty\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: MethodToken.Empty\n  fullName: System.Reflection.Emit.MethodToken.Empty\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: The default <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> with <xref:System.Reflection.Emit.MethodToken.Token*> value 0.\n  syntax:\n    content: public static readonly System.Reflection.Emit.MethodToken Empty;\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MethodToken.Equals(Object)\n  fullName: System.Reflection.Emit.MethodToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Tests whether the given object is equal to this <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to this object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is an instance of <xref uid=\"langword_csharp_MethodToken\" name=\"MethodToken\" href=\"\"></xref> and is equal to this object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Reflection.Emit.MethodToken.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Reflection.Emit.MethodToken)\n  id: Equals(System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Equals(MethodToken)\n  nameWithType: MethodToken.Equals(MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.Equals(MethodToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Indicates whether the current instance is equal to the specified <xref href=\"System.Reflection.Emit.MethodToken\"></xref>.\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.MethodToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.MethodToken\n      description: The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Reflection.Emit.MethodToken.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MethodToken.GetHashCode()\n  fullName: System.Reflection.Emit.MethodToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the generated hash code for this method.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Returns the hash code for this instance.\n  overload: System.Reflection.Emit.MethodToken.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  id: op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: op_Equality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Equality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Equality(MethodToken,MethodToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Indicates whether two <xref href=\"System.Reflection.Emit.MethodToken\"></xref> structures are equal.\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.MethodToken a, System.Reflection.Emit.MethodToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.MethodToken\n      description: The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `b`.\n    - id: b\n      type: System.Reflection.Emit.MethodToken\n      description: The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `a`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Reflection.Emit.MethodToken.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  id: op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: op_Inequality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Inequality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Inequality(MethodToken,MethodToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Indicates whether two <xref href=\"System.Reflection.Emit.MethodToken\"></xref> structures are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.MethodToken a, System.Reflection.Emit.MethodToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.MethodToken\n      description: The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `b`.\n    - id: b\n      type: System.Reflection.Emit.MethodToken\n      description: The <xref href=\"System.Reflection.Emit.MethodToken\"></xref> to compare to `a`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Reflection.Emit.MethodToken.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Reflection.Emit.MethodToken.Token\n  id: Token\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: MethodToken.Token\n  fullName: System.Reflection.Emit.MethodToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the metadata token for this method.\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Read-only. Returns the metadata token for this method.\n  overload: System.Reflection.Emit.MethodToken.Token*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.MethodToken.Empty\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Empty\n  nameWithType: MethodToken.Empty\n  fullName: System.Reflection.Emit.MethodToken.Empty\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Object)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MethodToken.Equals(Object)\n  fullName: System.Reflection.Emit.MethodToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Equals(MethodToken)\n  nameWithType: MethodToken.Equals(MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.Equals(MethodToken)\n- uid: System.Reflection.Emit.MethodToken.GetHashCode\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MethodToken.GetHashCode()\n  fullName: System.Reflection.Emit.MethodToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.MethodToken.op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: op_Equality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Equality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Equality(MethodToken,MethodToken)\n- uid: System.Reflection.Emit.MethodToken.op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: op_Inequality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Inequality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Inequality(MethodToken,MethodToken)\n- uid: System.Reflection.Emit.MethodToken.Token\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Token\n  nameWithType: MethodToken.Token\n  fullName: System.Reflection.Emit.MethodToken.Token\n- uid: System.Reflection.Emit.MethodToken.Equals*\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Equals\n  nameWithType: MethodToken.Equals\n- uid: System.Reflection.Emit.MethodToken.GetHashCode*\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: GetHashCode\n  nameWithType: MethodToken.GetHashCode\n- uid: System.Reflection.Emit.MethodToken.op_Equality*\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: op_Equality\n  nameWithType: MethodToken.op_Equality\n- uid: System.Reflection.Emit.MethodToken.op_Inequality*\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: op_Inequality\n  nameWithType: MethodToken.op_Inequality\n- uid: System.Reflection.Emit.MethodToken.Token*\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Token\n  nameWithType: MethodToken.Token\n"}