{"nodes":[{"pos":[3242,3254],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3317,3329],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3852,3864],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4321,4333],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4830,4842],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5322,5334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5892,5904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5967,5979],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6544,6556],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7053,7065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7609,7621],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8240,8252],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8310,8322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8960,8972],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9030,9042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9544,9556],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10033,10045],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10512,10524],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11221,11233],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11303,11315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11378,11390],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12096,12108],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12178,12190],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12253,12265],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12741,12753],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13293,13305],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13371,13383],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13987,13999],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14058,14070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14136,14148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14628,14640],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15109,15121],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15560,15572],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16053,16065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16565,16577],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17067,17079],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17966,17978],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18494,18506],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19001,19013],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19469,19481],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20091,20103],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20166,20178],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20702,20714],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21223,21235],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22271,22283],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22346,22358],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23064,23076],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23146,23158],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23221,23233],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23755,23767],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24335,24347],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24414,24426],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25155,25167],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25246,25258],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25325,25337],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[25932,25944],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26007,26019],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26779,26791],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26870,26882],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26945,26957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27572,27584],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27648,27660],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27719,27731],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28447,28459],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29056,29068],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29531,29543],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30151,30163],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30738,30750],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlNode\n  id: XmlNode\n  children:\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.Clone\n  - System.Xml.XmlNode.CloneNode(System.Boolean)\n  - System.Xml.XmlNode.CreateNavigator\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.InnerXml\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.LocalName\n  - System.Xml.XmlNode.Name\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.NextSibling\n  - System.Xml.XmlNode.NodeType\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.ParentNode\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.PreviousSibling\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.SchemaInfo\n  - System.Xml.XmlNode.SelectNodes(System.String)\n  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.SelectSingleNode(System.String)\n  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.XmlNode.System#ICloneable#Clone\n  - System.Xml.XmlNode.Value\n  - System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{debuggerDisplayProxy}\")]\n\n      public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerable\n  - System.ICloneable\n  - System.Xml.XPath.IXPathNavigable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  id: AppendChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: AppendChild(XmlNode)\n  nameWithType: XmlNode.AppendChild(XmlNode)\n  fullName: System.Xml.XmlNode.AppendChild(XmlNode)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);\n    parameters:\n    - id: newChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.AppendChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Attributes\n  id: Attributes\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: XmlNode.Attributes\n  fullName: System.Xml.XmlNode.Attributes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlAttributeCollection Attributes { get; }\n    return:\n      type: System.Xml.XmlAttributeCollection\n      description: To be added.\n  overload: System.Xml.XmlNode.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.BaseURI\n  id: BaseURI\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: BaseURI\n  nameWithType: XmlNode.BaseURI\n  fullName: System.Xml.XmlNode.BaseURI\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string BaseURI { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.BaseURI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.ChildNodes\n  id: ChildNodes\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: ChildNodes\n  nameWithType: XmlNode.ChildNodes\n  fullName: System.Xml.XmlNode.ChildNodes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNodeList ChildNodes { get; }\n    return:\n      type: System.Xml.XmlNodeList\n      description: To be added.\n  overload: System.Xml.XmlNode.ChildNodes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Clone\n  id: Clone\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: XmlNode.Clone()\n  fullName: System.Xml.XmlNode.Clone()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode Clone ();\n    parameters: []\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: CloneNode(Boolean)\n  nameWithType: XmlNode.CloneNode(Boolean)\n  fullName: System.Xml.XmlNode.CloneNode(Boolean)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public abstract System.Xml.XmlNode CloneNode (bool deep);\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.CloneNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.CreateNavigator\n  id: CreateNavigator\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: CreateNavigator()\n  nameWithType: XmlNode.CreateNavigator()\n  fullName: System.Xml.XmlNode.CreateNavigator()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();\n    parameters: []\n    return:\n      type: System.Xml.XPath.XPathNavigator\n      description: To be added.\n  overload: System.Xml.XmlNode.CreateNavigator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.FirstChild\n  id: FirstChild\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: FirstChild\n  nameWithType: XmlNode.FirstChild\n  fullName: System.Xml.XmlNode.FirstChild\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode FirstChild { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.FirstChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.GetEnumerator\n  id: GetEnumerator\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: XmlNode.GetEnumerator()\n  fullName: System.Xml.XmlNode.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Xml.XmlNode.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  id: GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: GetNamespaceOfPrefix(String)\n  nameWithType: XmlNode.GetNamespaceOfPrefix(String)\n  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string GetNamespaceOfPrefix (string prefix);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.GetNamespaceOfPrefix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  id: GetPrefixOfNamespace(System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: GetPrefixOfNamespace(String)\n  nameWithType: XmlNode.GetPrefixOfNamespace(String)\n  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string GetPrefixOfNamespace (string namespaceURI);\n    parameters:\n    - id: namespaceURI\n      type: System.String\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.GetPrefixOfNamespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.HasChildNodes\n  id: HasChildNodes\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n  fullName: System.Xml.XmlNode.HasChildNodes\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual bool HasChildNodes { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.XmlNode.HasChildNodes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.InnerText\n  id: InnerText\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: InnerText\n  nameWithType: XmlNode.InnerText\n  fullName: System.Xml.XmlNode.InnerText\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string InnerText { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.InnerText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.InnerXml\n  id: InnerXml\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: InnerXml\n  nameWithType: XmlNode.InnerXml\n  fullName: System.Xml.XmlNode.InnerXml\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string InnerXml { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.InnerXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: InsertAfter(XmlNode,XmlNode)\n  nameWithType: XmlNode.InsertAfter(XmlNode,XmlNode)\n  fullName: System.Xml.XmlNode.InsertAfter(XmlNode,XmlNode)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);\n    parameters:\n    - id: newChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    - id: refChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.InsertAfter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: InsertBefore(XmlNode,XmlNode)\n  nameWithType: XmlNode.InsertBefore(XmlNode,XmlNode)\n  fullName: System.Xml.XmlNode.InsertBefore(XmlNode,XmlNode)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);\n    parameters:\n    - id: newChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    - id: refChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.InsertBefore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.IsReadOnly\n  id: IsReadOnly\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n  fullName: System.Xml.XmlNode.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.XmlNode.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Item(System.String)\n  id: Item(System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: XmlNode.Item(String)\n  fullName: System.Xml.XmlNode.Item(String)\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlElement this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Xml.XmlElement\n      description: To be added.\n  overload: System.Xml.XmlNode.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Item(System.String,System.String)\n  id: Item(System.String,System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Item(String,String)\n  nameWithType: XmlNode.Item(String,String)\n  fullName: System.Xml.XmlNode.Item(String,String)\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlElement this[string localname, string ns] { get; }\n    parameters:\n    - id: localname\n      type: System.String\n      description: To be added.\n    - id: ns\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Xml.XmlElement\n      description: To be added.\n  overload: System.Xml.XmlNode.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.LastChild\n  id: LastChild\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: LastChild\n  nameWithType: XmlNode.LastChild\n  fullName: System.Xml.XmlNode.LastChild\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode LastChild { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.LastChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.LocalName\n  id: LocalName\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: LocalName\n  nameWithType: XmlNode.LocalName\n  fullName: System.Xml.XmlNode.LocalName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public abstract string LocalName { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.LocalName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Name\n  id: Name\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XmlNode.Name\n  fullName: System.Xml.XmlNode.Name\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.NamespaceURI\n  id: NamespaceURI\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n  fullName: System.Xml.XmlNode.NamespaceURI\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string NamespaceURI { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.NamespaceURI*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.NextSibling\n  id: NextSibling\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: NextSibling\n  nameWithType: XmlNode.NextSibling\n  fullName: System.Xml.XmlNode.NextSibling\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode NextSibling { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.NextSibling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.NodeType\n  id: NodeType\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XmlNode.NodeType\n  fullName: System.Xml.XmlNode.NodeType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public abstract System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: To be added.\n  overload: System.Xml.XmlNode.NodeType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Normalize\n  id: Normalize\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Normalize()\n  nameWithType: XmlNode.Normalize()\n  fullName: System.Xml.XmlNode.Normalize()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual void Normalize ();\n    parameters: []\n  overload: System.Xml.XmlNode.Normalize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.OuterXml\n  id: OuterXml\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: OuterXml\n  nameWithType: XmlNode.OuterXml\n  fullName: System.Xml.XmlNode.OuterXml\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string OuterXml { get; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.OuterXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.OwnerDocument\n  id: OwnerDocument\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n  fullName: System.Xml.XmlNode.OwnerDocument\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlDocument OwnerDocument { get; }\n    return:\n      type: System.Xml.XmlDocument\n      description: To be added.\n  overload: System.Xml.XmlNode.OwnerDocument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.ParentNode\n  id: ParentNode\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: ParentNode\n  nameWithType: XmlNode.ParentNode\n  fullName: System.Xml.XmlNode.ParentNode\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode ParentNode { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.ParentNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Prefix\n  id: Prefix\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Prefix\n  nameWithType: XmlNode.Prefix\n  fullName: System.Xml.XmlNode.Prefix\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string Prefix { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.Prefix*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  id: PrependChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: PrependChild(XmlNode)\n  nameWithType: XmlNode.PrependChild(XmlNode)\n  fullName: System.Xml.XmlNode.PrependChild(XmlNode)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);\n    parameters:\n    - id: newChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.PrependChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.PreviousSibling\n  id: PreviousSibling\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: PreviousSibling\n  nameWithType: XmlNode.PreviousSibling\n  fullName: System.Xml.XmlNode.PreviousSibling\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode PreviousSibling { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.PreviousSibling*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.PreviousText\n  id: PreviousText\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: PreviousText\n  nameWithType: XmlNode.PreviousText\n  fullName: System.Xml.XmlNode.PreviousText\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode PreviousText { get; }\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.PreviousText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.RemoveAll\n  id: RemoveAll\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: RemoveAll()\n  nameWithType: XmlNode.RemoveAll()\n  fullName: System.Xml.XmlNode.RemoveAll()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual void RemoveAll ();\n    parameters: []\n  overload: System.Xml.XmlNode.RemoveAll*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  id: RemoveChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: RemoveChild(XmlNode)\n  nameWithType: XmlNode.RemoveChild(XmlNode)\n  fullName: System.Xml.XmlNode.RemoveChild(XmlNode)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);\n    parameters:\n    - id: oldChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.RemoveChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: ReplaceChild(XmlNode,XmlNode)\n  nameWithType: XmlNode.ReplaceChild(XmlNode,XmlNode)\n  fullName: System.Xml.XmlNode.ReplaceChild(XmlNode,XmlNode)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);\n    parameters:\n    - id: newChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    - id: oldChild\n      type: System.Xml.XmlNode\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.ReplaceChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.SchemaInfo\n  id: SchemaInfo\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: SchemaInfo\n  nameWithType: XmlNode.SchemaInfo\n  fullName: System.Xml.XmlNode.SchemaInfo\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }\n    return:\n      type: System.Xml.Schema.IXmlSchemaInfo\n      description: To be added.\n  overload: System.Xml.XmlNode.SchemaInfo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.SelectNodes(System.String)\n  id: SelectNodes(System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: SelectNodes(String)\n  nameWithType: XmlNode.SelectNodes(String)\n  fullName: System.Xml.XmlNode.SelectNodes(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public System.Xml.XmlNodeList SelectNodes (string xpath);\n    parameters:\n    - id: xpath\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Xml.XmlNodeList\n      description: To be added.\n  overload: System.Xml.XmlNode.SelectNodes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  id: SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: SelectNodes(String,XmlNamespaceManager)\n  nameWithType: XmlNode.SelectNodes(String,XmlNamespaceManager)\n  fullName: System.Xml.XmlNode.SelectNodes(String,XmlNamespaceManager)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);\n    parameters:\n    - id: xpath\n      type: System.String\n      description: To be added.\n    - id: nsmgr\n      type: System.Xml.XmlNamespaceManager\n      description: To be added.\n    return:\n      type: System.Xml.XmlNodeList\n      description: To be added.\n  overload: System.Xml.XmlNode.SelectNodes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.SelectSingleNode(System.String)\n  id: SelectSingleNode(System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: SelectSingleNode(String)\n  nameWithType: XmlNode.SelectSingleNode(String)\n  fullName: System.Xml.XmlNode.SelectSingleNode(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public System.Xml.XmlNode SelectSingleNode (string xpath);\n    parameters:\n    - id: xpath\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.SelectSingleNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  id: SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: SelectSingleNode(String,XmlNamespaceManager)\n  nameWithType: XmlNode.SelectSingleNode(String,XmlNamespaceManager)\n  fullName: System.Xml.XmlNode.SelectSingleNode(String,XmlNamespaceManager)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);\n    parameters:\n    - id: xpath\n      type: System.String\n      description: To be added.\n    - id: nsmgr\n      type: System.Xml.XmlNamespaceManager\n      description: To be added.\n    return:\n      type: System.Xml.XmlNode\n      description: To be added.\n  overload: System.Xml.XmlNode.SelectSingleNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Supports(System.String,System.String)\n  id: Supports(System.String,System.String)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Supports(String,String)\n  nameWithType: XmlNode.Supports(String,String)\n  fullName: System.Xml.XmlNode.Supports(String,String)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual bool Supports (string feature, string version);\n    parameters:\n    - id: feature\n      type: System.String\n      description: To be added.\n    - id: version\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Xml.XmlNode.Supports*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: XmlNode.System.ICloneable.Clone()\n  fullName: System.Xml.XmlNode.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Xml.XmlNode.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.Value\n  id: Value\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: Value\n  nameWithType: XmlNode.Value\n  fullName: System.Xml.XmlNode.Value\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public virtual string Value { get; set; }\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Xml.XmlNode.Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlNode.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteContentTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public abstract void WriteContentTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: To be added.\n  overload: System.Xml.XmlNode.WriteContentTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  langs:\n  - csharp\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlNode.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  syntax:\n    content: public abstract void WriteTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: To be added.\n  overload: System.Xml.XmlNode.WriteTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: AppendChild(XmlNode)\n  nameWithType: XmlNode.AppendChild(XmlNode)\n  fullName: System.Xml.XmlNode.AppendChild(XmlNode)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.Xml.XmlNode.Attributes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Attributes\n  nameWithType: XmlNode.Attributes\n  fullName: System.Xml.XmlNode.Attributes\n- uid: System.Xml.XmlAttributeCollection\n  parent: System.Xml\n  isExternal: false\n  name: XmlAttributeCollection\n  nameWithType: XmlAttributeCollection\n  fullName: System.Xml.XmlAttributeCollection\n- uid: System.Xml.XmlNode.BaseURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: BaseURI\n  nameWithType: XmlNode.BaseURI\n  fullName: System.Xml.XmlNode.BaseURI\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlNode.ChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ChildNodes\n  nameWithType: XmlNode.ChildNodes\n  fullName: System.Xml.XmlNode.ChildNodes\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.Xml.XmlNode.Clone\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Clone()\n  nameWithType: XmlNode.Clone()\n  fullName: System.Xml.XmlNode.Clone()\n- uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: CloneNode(Boolean)\n  nameWithType: XmlNode.CloneNode(Boolean)\n  fullName: System.Xml.XmlNode.CloneNode(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlNode.CreateNavigator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: CreateNavigator()\n  nameWithType: XmlNode.CreateNavigator()\n  fullName: System.Xml.XmlNode.CreateNavigator()\n- uid: System.Xml.XPath.XPathNavigator\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathNavigator\n  nameWithType: XPathNavigator\n  fullName: System.Xml.XPath.XPathNavigator\n- uid: System.Xml.XmlNode.FirstChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: FirstChild\n  nameWithType: XmlNode.FirstChild\n  fullName: System.Xml.XmlNode.FirstChild\n- uid: System.Xml.XmlNode.GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: XmlNode.GetEnumerator()\n  fullName: System.Xml.XmlNode.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetNamespaceOfPrefix(String)\n  nameWithType: XmlNode.GetNamespaceOfPrefix(String)\n  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(String)\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetPrefixOfNamespace(String)\n  nameWithType: XmlNode.GetPrefixOfNamespace(String)\n  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(String)\n- uid: System.Xml.XmlNode.HasChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n  fullName: System.Xml.XmlNode.HasChildNodes\n- uid: System.Xml.XmlNode.InnerText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerText\n  nameWithType: XmlNode.InnerText\n  fullName: System.Xml.XmlNode.InnerText\n- uid: System.Xml.XmlNode.InnerXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerXml\n  nameWithType: XmlNode.InnerXml\n  fullName: System.Xml.XmlNode.InnerXml\n- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertAfter(XmlNode,XmlNode)\n  nameWithType: XmlNode.InsertAfter(XmlNode,XmlNode)\n  fullName: System.Xml.XmlNode.InsertAfter(XmlNode,XmlNode)\n- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertBefore(XmlNode,XmlNode)\n  nameWithType: XmlNode.InsertBefore(XmlNode,XmlNode)\n  fullName: System.Xml.XmlNode.InsertBefore(XmlNode,XmlNode)\n- uid: System.Xml.XmlNode.IsReadOnly\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n  fullName: System.Xml.XmlNode.IsReadOnly\n- uid: System.Xml.XmlNode.Item(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Item(String)\n  nameWithType: XmlNode.Item(String)\n  fullName: System.Xml.XmlNode.Item(String)\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Xml.XmlNode.Item(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Item(String,String)\n  nameWithType: XmlNode.Item(String,String)\n  fullName: System.Xml.XmlNode.Item(String,String)\n- uid: System.Xml.XmlNode.LastChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LastChild\n  nameWithType: XmlNode.LastChild\n  fullName: System.Xml.XmlNode.LastChild\n- uid: System.Xml.XmlNode.LocalName\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlNode.LocalName\n  fullName: System.Xml.XmlNode.LocalName\n- uid: System.Xml.XmlNode.Name\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Name\n  nameWithType: XmlNode.Name\n  fullName: System.Xml.XmlNode.Name\n- uid: System.Xml.XmlNode.NamespaceURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n  fullName: System.Xml.XmlNode.NamespaceURI\n- uid: System.Xml.XmlNode.NextSibling\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NextSibling\n  nameWithType: XmlNode.NextSibling\n  fullName: System.Xml.XmlNode.NextSibling\n- uid: System.Xml.XmlNode.NodeType\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlNode.NodeType\n  fullName: System.Xml.XmlNode.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: true\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.XmlNode.Normalize\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Normalize()\n  nameWithType: XmlNode.Normalize()\n  fullName: System.Xml.XmlNode.Normalize()\n- uid: System.Xml.XmlNode.OuterXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OuterXml\n  nameWithType: XmlNode.OuterXml\n  fullName: System.Xml.XmlNode.OuterXml\n- uid: System.Xml.XmlNode.OwnerDocument\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n  fullName: System.Xml.XmlNode.OwnerDocument\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Xml.XmlNode.ParentNode\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ParentNode\n  nameWithType: XmlNode.ParentNode\n  fullName: System.Xml.XmlNode.ParentNode\n- uid: System.Xml.XmlNode.Prefix\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Prefix\n  nameWithType: XmlNode.Prefix\n  fullName: System.Xml.XmlNode.Prefix\n- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PrependChild(XmlNode)\n  nameWithType: XmlNode.PrependChild(XmlNode)\n  fullName: System.Xml.XmlNode.PrependChild(XmlNode)\n- uid: System.Xml.XmlNode.PreviousSibling\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousSibling\n  nameWithType: XmlNode.PreviousSibling\n  fullName: System.Xml.XmlNode.PreviousSibling\n- uid: System.Xml.XmlNode.PreviousText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousText\n  nameWithType: XmlNode.PreviousText\n  fullName: System.Xml.XmlNode.PreviousText\n- uid: System.Xml.XmlNode.RemoveAll\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveAll()\n  nameWithType: XmlNode.RemoveAll()\n  fullName: System.Xml.XmlNode.RemoveAll()\n- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveChild(XmlNode)\n  nameWithType: XmlNode.RemoveChild(XmlNode)\n  fullName: System.Xml.XmlNode.RemoveChild(XmlNode)\n- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ReplaceChild(XmlNode,XmlNode)\n  nameWithType: XmlNode.ReplaceChild(XmlNode,XmlNode)\n  fullName: System.Xml.XmlNode.ReplaceChild(XmlNode,XmlNode)\n- uid: System.Xml.XmlNode.SchemaInfo\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SchemaInfo\n  nameWithType: XmlNode.SchemaInfo\n  fullName: System.Xml.XmlNode.SchemaInfo\n- uid: System.Xml.Schema.IXmlSchemaInfo\n  parent: System.Xml.Schema\n  isExternal: false\n  name: IXmlSchemaInfo\n  nameWithType: IXmlSchemaInfo\n  fullName: System.Xml.Schema.IXmlSchemaInfo\n- uid: System.Xml.XmlNode.SelectNodes(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SelectNodes(String)\n  nameWithType: XmlNode.SelectNodes(String)\n  fullName: System.Xml.XmlNode.SelectNodes(String)\n- uid: System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SelectNodes(String,XmlNamespaceManager)\n  nameWithType: XmlNode.SelectNodes(String,XmlNamespaceManager)\n  fullName: System.Xml.XmlNode.SelectNodes(String,XmlNamespaceManager)\n- uid: System.Xml.XmlNamespaceManager\n  parent: System.Xml\n  isExternal: true\n  name: XmlNamespaceManager\n  nameWithType: XmlNamespaceManager\n  fullName: System.Xml.XmlNamespaceManager\n- uid: System.Xml.XmlNode.SelectSingleNode(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SelectSingleNode(String)\n  nameWithType: XmlNode.SelectSingleNode(String)\n  fullName: System.Xml.XmlNode.SelectSingleNode(String)\n- uid: System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SelectSingleNode(String,XmlNamespaceManager)\n  nameWithType: XmlNode.SelectSingleNode(String,XmlNamespaceManager)\n  fullName: System.Xml.XmlNode.SelectSingleNode(String,XmlNamespaceManager)\n- uid: System.Xml.XmlNode.Supports(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Supports(String,String)\n  nameWithType: XmlNode.Supports(String,String)\n  fullName: System.Xml.XmlNode.Supports(String,String)\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Xml.XmlNode.System#ICloneable#Clone\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: XmlNode.System.ICloneable.Clone()\n  fullName: System.Xml.XmlNode.System.ICloneable.Clone()\n- uid: System.Xml.XmlNode.Value\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Value\n  nameWithType: XmlNode.Value\n  fullName: System.Xml.XmlNode.Value\n- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlNode.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlNode.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteTo(XmlWriter)\n- uid: System.Xml.XmlNode.AppendChild*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: AppendChild\n  nameWithType: XmlNode.AppendChild\n- uid: System.Xml.XmlNode.Attributes*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Attributes\n  nameWithType: XmlNode.Attributes\n- uid: System.Xml.XmlNode.BaseURI*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: BaseURI\n  nameWithType: XmlNode.BaseURI\n- uid: System.Xml.XmlNode.ChildNodes*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ChildNodes\n  nameWithType: XmlNode.ChildNodes\n- uid: System.Xml.XmlNode.Clone*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Clone\n  nameWithType: XmlNode.Clone\n- uid: System.Xml.XmlNode.CloneNode*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: CloneNode\n  nameWithType: XmlNode.CloneNode\n- uid: System.Xml.XmlNode.CreateNavigator*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: CreateNavigator\n  nameWithType: XmlNode.CreateNavigator\n- uid: System.Xml.XmlNode.FirstChild*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: FirstChild\n  nameWithType: XmlNode.FirstChild\n- uid: System.Xml.XmlNode.GetEnumerator*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: XmlNode.GetEnumerator\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetNamespaceOfPrefix\n  nameWithType: XmlNode.GetNamespaceOfPrefix\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetPrefixOfNamespace\n  nameWithType: XmlNode.GetPrefixOfNamespace\n- uid: System.Xml.XmlNode.HasChildNodes*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n- uid: System.Xml.XmlNode.InnerText*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerText\n  nameWithType: XmlNode.InnerText\n- uid: System.Xml.XmlNode.InnerXml*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerXml\n  nameWithType: XmlNode.InnerXml\n- uid: System.Xml.XmlNode.InsertAfter*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertAfter\n  nameWithType: XmlNode.InsertAfter\n- uid: System.Xml.XmlNode.InsertBefore*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertBefore\n  nameWithType: XmlNode.InsertBefore\n- uid: System.Xml.XmlNode.IsReadOnly*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n- uid: System.Xml.XmlNode.Item*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Item\n  nameWithType: XmlNode.Item\n- uid: System.Xml.XmlNode.LastChild*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LastChild\n  nameWithType: XmlNode.LastChild\n- uid: System.Xml.XmlNode.LocalName*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlNode.LocalName\n- uid: System.Xml.XmlNode.Name*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Name\n  nameWithType: XmlNode.Name\n- uid: System.Xml.XmlNode.NamespaceURI*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n- uid: System.Xml.XmlNode.NextSibling*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NextSibling\n  nameWithType: XmlNode.NextSibling\n- uid: System.Xml.XmlNode.NodeType*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlNode.NodeType\n- uid: System.Xml.XmlNode.Normalize*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Normalize\n  nameWithType: XmlNode.Normalize\n- uid: System.Xml.XmlNode.OuterXml*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OuterXml\n  nameWithType: XmlNode.OuterXml\n- uid: System.Xml.XmlNode.OwnerDocument*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n- uid: System.Xml.XmlNode.ParentNode*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ParentNode\n  nameWithType: XmlNode.ParentNode\n- uid: System.Xml.XmlNode.Prefix*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Prefix\n  nameWithType: XmlNode.Prefix\n- uid: System.Xml.XmlNode.PrependChild*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PrependChild\n  nameWithType: XmlNode.PrependChild\n- uid: System.Xml.XmlNode.PreviousSibling*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousSibling\n  nameWithType: XmlNode.PreviousSibling\n- uid: System.Xml.XmlNode.PreviousText*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousText\n  nameWithType: XmlNode.PreviousText\n- uid: System.Xml.XmlNode.RemoveAll*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveAll\n  nameWithType: XmlNode.RemoveAll\n- uid: System.Xml.XmlNode.RemoveChild*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveChild\n  nameWithType: XmlNode.RemoveChild\n- uid: System.Xml.XmlNode.ReplaceChild*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ReplaceChild\n  nameWithType: XmlNode.ReplaceChild\n- uid: System.Xml.XmlNode.SchemaInfo*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SchemaInfo\n  nameWithType: XmlNode.SchemaInfo\n- uid: System.Xml.XmlNode.SelectNodes*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SelectNodes\n  nameWithType: XmlNode.SelectNodes\n- uid: System.Xml.XmlNode.SelectSingleNode*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: SelectSingleNode\n  nameWithType: XmlNode.SelectSingleNode\n- uid: System.Xml.XmlNode.Supports*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Supports\n  nameWithType: XmlNode.Supports\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: XmlNode.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Xml.XmlNode.System#ICloneable#Clone*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: XmlNode.System.ICloneable.Clone\n- uid: System.Xml.XmlNode.Value*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Value\n  nameWithType: XmlNode.Value\n- uid: System.Xml.XmlNode.WriteContentTo*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: WriteContentTo\n  nameWithType: XmlNode.WriteContentTo\n- uid: System.Xml.XmlNode.WriteTo*\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: WriteTo\n  nameWithType: XmlNode.WriteTo\n"}