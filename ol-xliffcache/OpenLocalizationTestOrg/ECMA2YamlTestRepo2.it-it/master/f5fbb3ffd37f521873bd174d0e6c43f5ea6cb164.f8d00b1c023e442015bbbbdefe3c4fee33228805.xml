{"nodes":[{"pos":[2635,2686],"content":"Presents a user interface for designing components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Presents a user interface for designing components.","pos":[0,51]}]},{"pos":[2699,7423],"content":"The DesignSurface class implements what the user perceives as a designer. DesignSurface is the user interface the user manipulates to change design-time features. DesignSurface provides a completely self-contained design surface.       The DesignSurface class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple DesignSurface objects.       The DesignSurface class can be used by itself, or the user can derive a new class from it and augment the behavior.       The DesignSurface class provides several design-time services automatically. The DesignSurface class adds all of its services in its constructor. Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed. The default set of replaceable services that the DesignSurface class provides is shown in the following table.      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IExtenderProviderService>|Enables objects that are not part of the container’s components collection to provide their own extender providers.|   |<xref:System.ComponentModel.Design.IExtenderListService>|Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers. With this service, extender providers can live outside of the container.|   |<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Provides designer metadata hooks. This is the primary interface for metadata filtering.|   |<xref:System.ComponentModel.Design.ISelectionService>|Provides a way to select components in the designer.|   |<xref:System.ComponentModel.Design.IReferenceService>|Provides a way to get a name for objects, even when those objects are not sited.|   |DesignSurface|Offers the design surface itself as a service.|   |<xref:System.ComponentModel.Design.DesignerOptionService>|Provides a base class for getting and setting option values for a designer.|       The following table shows the non-replaceable services provided by default.      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IComponentChangeService>|Raises events as changes are made to components.|   |<xref:System.ComponentModel.Design.IDesignerHost>|Controls access to types, services, and transactions. Master interface for designers.|   |<xref:System.ComponentModel.IContainer>|Owns the set of components that are being designed. Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.|   |<xref:System.ComponentModel.Design.IServiceContainer>|Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.|       In addition to these services, the DesignSurface class also provides a single service that is available through a component’s site. This service is unique for each component. The following table shows the services that cannot be replaced.      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IDictionaryService>|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|   |<xref:System.ComponentModel.INestedContainer>|A container that enables a component to add additional child components to the designer. These components will be part of the design surface, but will not participate in serialization. This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|       In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.      > [!CAUTION] >  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IServiceContainer>|Provides a way to get to the container of site-specific services. For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service. With this service, you can add additional site-specific services.|","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DesignSurface class implements what the user perceives as a designer.","pos":[0,73]},{"content":"DesignSurface is the user interface the user manipulates to change design-time features.","pos":[74,162]},{"content":"DesignSurface provides a completely self-contained design surface.","pos":[163,229]},{"content":"The DesignSurface class may be used as a stand-alone designer, or it may be coupled with the &lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt; class to provide a common implementation for an application that hosts multiple DesignSurface objects.","pos":[236,488],"source":"       The DesignSurface class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple DesignSurface objects."},{"content":"The DesignSurface class can be used by itself, or the user can derive a new class from it and augment the behavior.","pos":[495,610]},{"content":"The DesignSurface class provides several design-time services automatically.","pos":[617,693]},{"content":"The DesignSurface class adds all of its services in its constructor.","pos":[694,762]},{"content":"Most of these services can be overridden by replacing them in the protected &lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; property.","pos":[763,918],"source":" Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property."},{"content":"To replace a service, override the constructor, call base, and make any changes through the protected &lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; property.","pos":[919,1100],"source":" To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property."},{"content":"All services that are added to the service container and that implement &lt;xref:System.IDisposable&gt; are disposed when the design surface is disposed.","pos":[1101,1248],"source":" All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed."},{"content":"The default set of replaceable services that the DesignSurface class provides is shown in the following table.","pos":[1249,1359]},{"content":"|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IExtenderProviderService&gt;|Enables objects that are not part of the container’s components collection to provide their own extender providers.|   |&lt;xref:System.ComponentModel.Design.IExtenderListService&gt;|Used by &lt;xref:System.ComponentModel.TypeDescriptor&gt; to get a list of extender providers.","pos":[1365,1752],"source":"      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IExtenderProviderService>|Enables objects that are not part of the container’s components collection to provide their own extender providers.|   |<xref:System.ComponentModel.Design.IExtenderListService>|Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers."},{"content":"With this service, extender providers can live outside of the container.|   |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|Provides designer metadata hooks.","pos":[1753,1928],"source":" With this service, extender providers can live outside of the container.|   |<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Provides designer metadata hooks."},{"content":"This is the primary interface for metadata filtering.|   |&lt;xref:System.ComponentModel.Design.ISelectionService&gt;|Provides a way to select components in the designer.|   |&lt;xref:System.ComponentModel.Design.IReferenceService&gt;|Provides a way to get a name for objects, even when those objects are not sited.|   |DesignSurface|Offers the design surface itself as a service.|   |&lt;xref:System.ComponentModel.Design.DesignerOptionService&gt;|Provides a base class for getting and setting option values for a designer.|       The following table shows the non-replaceable services provided by default.","pos":[1929,2518],"source":" This is the primary interface for metadata filtering.|   |<xref:System.ComponentModel.Design.ISelectionService>|Provides a way to select components in the designer.|   |<xref:System.ComponentModel.Design.IReferenceService>|Provides a way to get a name for objects, even when those objects are not sited.|   |DesignSurface|Offers the design surface itself as a service.|   |<xref:System.ComponentModel.Design.DesignerOptionService>|Provides a base class for getting and setting option values for a designer.|       The following table shows the non-replaceable services provided by default."},{"content":"|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;|Raises events as changes are made to components.|   |&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;|Controls access to types, services, and transactions.","pos":[2524,2801],"source":"      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IComponentChangeService>|Raises events as changes are made to components.|   |<xref:System.ComponentModel.Design.IDesignerHost>|Controls access to types, services, and transactions."},{"content":"Master interface for designers.|   |&lt;xref:System.ComponentModel.IContainer&gt;|Owns the set of components that are being designed.","pos":[2802,2929],"source":" Master interface for designers.|   |<xref:System.ComponentModel.IContainer>|Owns the set of components that are being designed."},{"content":"Each designer has an &lt;xref:System.ComponentModel.IContainer&gt; that owns the components.|   |&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;|Derives from &lt;xref:System.IServiceProvider&gt; and provides a way to add and remove services from the designer.|       In addition to these services, the DesignSurface class also provides a single service that is available through a component’s site.","pos":[2930,3322],"source":" Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.|   |<xref:System.ComponentModel.Design.IServiceContainer>|Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.|       In addition to these services, the DesignSurface class also provides a single service that is available through a component’s site."},{"content":"This service is unique for each component.","pos":[3323,3365]},{"content":"The following table shows the services that cannot be replaced.","pos":[3366,3429]},{"content":"|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|   |&lt;xref:System.ComponentModel.INestedContainer&gt;|A container that enables a component to add additional child components to the designer.","pos":[3435,3789],"source":"      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IDictionaryService>|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|   |<xref:System.ComponentModel.INestedContainer>|A container that enables a component to add additional child components to the designer."},{"content":"These components will be part of the design surface, but will not participate in serialization.","pos":[3790,3885]},{"content":"This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|       In addition to &lt;xref:System.ComponentModel.ISite&gt;, the site also implements the following interfaces.","pos":[3886,4169],"source":" This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|       In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.","pos":[4175,4334],"source":"      > [!CAUTION] >  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them."},{"content":"|Service|Description|   |-------------|-----------------|   |&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;|Provides a way to get to the container of site-specific services.","pos":[4340,4520],"source":"      |Service|Description|   |-------------|-----------------|   |<xref:System.ComponentModel.Design.IServiceContainer>|Provides a way to get to the container of site-specific services."},{"content":"For example, &lt;xref:System.ComponentModel.Design.IDictionaryService&gt; is a site-specific service.","pos":[4521,4616],"source":" For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service."},{"content":"With this service, you can add additional site-specific services.|","pos":[4617,4683]}]},{"pos":[8091,8195],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."},{"pos":[8445,8611],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[9122,9226],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."},{"pos":[9238,9353],"content":"When <ph id=\"ph1\">`parentProvide`</ph> is present, designers contained within the surface can retrieve services from the application.","needQuote":true,"needEscape":true,"extradata":"MT","source":"When `parentProvide` is present, designers contained within the surface can retrieve services from the application."},{"pos":[9529,9669],"content":"The parent service provider, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no parent used to resolve services.","needQuote":true,"needEscape":true,"source":"The parent service provider, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent used to resolve services."},{"pos":[9852,10018],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[10469,10573],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."},{"pos":[10586,11574],"content":"When you use the DesignSurface constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.      > [!NOTE] >  The DesignSurface overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>. The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads. If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When you use the DesignSurface constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.","pos":[0,167]},{"content":"This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.","pos":[168,290]},{"content":"Internally, this calls &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; and passes the root component type.","pos":[291,412],"source":" Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The DesignSurface overload is not affected by &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;.","pos":[418,528],"source":"      > [!NOTE] >  The DesignSurface overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>."},{"content":"The &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt; must be in the service container before the design surface loads.","pos":[529,649],"source":" The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads."},{"content":"If you need access to &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;, call the empty constructor, add the &lt;xref:System.Windows.Forms.Design.DesignerOptions&gt; to the &lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt; and call &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; with <ph id=\"ph1\">`rootComponentType`</ph>.","pos":[650,985],"source":" If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`."}]},{"pos":[11733,11770],"content":"The type of root component to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of root component to create.","pos":[0,37]}]},{"pos":[11949,12040],"content":"<ph id=\"ph1\">&lt;code&gt;rootComponent&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rootComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12147,12313],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[12863,12967],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class."},{"pos":[12979,13370],"content":"Using the DesignSurface constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Using the DesignSurface constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.","pos":[0,391],"nodes":[{"content":"Using the DesignSurface constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.","pos":[0,146]},{"content":"This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.","pos":[147,269]},{"content":"Internally, this calls &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; and passes the root component type.","pos":[270,391],"source":" Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type."}]}]},{"pos":[13570,13710],"content":"The parent service provider, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no parent used to resolve services.","needQuote":true,"needEscape":true,"source":"The parent service provider, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent used to resolve services."},{"pos":[13782,13819],"content":"The type of root component to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of root component to create.","pos":[0,37]}]},{"pos":[13998,14089],"content":"<ph id=\"ph1\">&lt;code&gt;rootComponent&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rootComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14196,14362],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[14924,14982],"content":"Begins the loading process with the given designer loader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins the loading process with the given designer loader.","pos":[0,58]}]},{"pos":[14995,15501],"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.       After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.       After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","pos":[0,504],"nodes":[{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.","pos":[0,107]},{"content":"Attach an event handler to the &lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt; event to be notified when the design surface has completed loading.","pos":[108,269],"source":" Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading."},{"content":"After &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","pos":[276,504],"source":"       After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously."}]}]},{"pos":[15738,15790],"content":"The designer loader to use for loading the designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The designer loader to use for loading the designer.","pos":[0,52]}]},{"pos":[15973,16057],"content":"<ph id=\"ph1\">&lt;code&gt;loader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>loader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16164,16330],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[16770,16797],"content":"Begins the loading process.","needQuote":true,"needEscape":true,"nodes":[{"content":"Begins the loading process.","pos":[0,27]}]},{"pos":[16810,17632],"content":"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used. Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.       After BeginLoad is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.      > [!NOTE] >  The BeginLoad method creates an instance of the component type and initializes a designer for this instance. The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When <ph id=\"ph1\">`rootComponentType`</ph> is specified, a default designer loader that simply creates an instance of <ph id=\"ph2\">`rootComponentType`</ph> will be used.","pos":[0,133],"source":"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used."},{"content":"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.","pos":[134,241]},{"content":"Attach an event handler to the &lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt; event to be notified when the design surface has completed loading.","pos":[242,403],"source":" Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading."},{"content":"After BeginLoad is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.","pos":[410,585]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The BeginLoad method creates an instance of the component type and initializes a designer for this instance.","pos":[591,712],"source":"      > [!NOTE] >  The BeginLoad method creates an instance of the component type and initializes a designer for this instance."},{"content":"The &lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt; event is raised before this method returns.","pos":[713,817],"source":" The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns."}]},{"pos":[17792,17839],"content":"The type of component to create in design mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of component to create in design mode.","pos":[0,47]}]},{"pos":[18022,18117],"content":"<ph id=\"ph1\">&lt;code&gt;rootComponentType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>rootComponentType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18224,18390],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[18833,18937],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation within the design surface.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface."},{"pos":[18949,19201],"content":"The ComponentContainer property holds all objects that are currently in design mode. When components are added to ComponentContainer, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ComponentContainer property holds all objects that are currently in design mode. When components are added to ComponentContainer, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.","pos":[0,252],"nodes":[{"content":"The ComponentContainer property holds all objects that are currently in design mode.","pos":[0,84]},{"content":"When components are added to ComponentContainer, their designer, if any, is loaded.","pos":[85,168]},{"content":"The component is sited with a site that provides full access to the design surface.","pos":[169,252]}]}]},{"pos":[19369,19468],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation within the design surface.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface."},{"pos":[19664,19830],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[20300,20335],"content":"Creates an instance of a component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of a component.","pos":[0,35]}]},{"pos":[20347,20610],"content":"The CreateComponent method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateComponent method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.","pos":[0,263],"nodes":[{"content":"The CreateComponent method is called by the design surface’s &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt; method to create an instance of a component.","pos":[0,174],"source":"The CreateComponent method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component."},{"content":"The component should be created and added to the public container on the design surface.","pos":[175,263]}]}]},{"pos":[20806,20838],"content":"The type of component to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of component to create.","pos":[0,32]}]},{"pos":[20915,20943],"content":"The newly created component.","needQuote":true,"needEscape":true,"nodes":[{"content":"The newly created component.","pos":[0,28]}]},{"pos":[21132,21223],"content":"<ph id=\"ph1\">&lt;code&gt;componentType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>componentType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21330,21496],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[22075,22137],"content":"Creates a designer when a component is added to the container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a designer when a component is added to the container.","pos":[0,62]}]},{"pos":[22150,23251],"content":"The CreateDesigner method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.       CreateDesigner can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.       The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CreateDesigner method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.       CreateDesigner can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.       The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.","pos":[0,1097],"nodes":[{"content":"The CreateDesigner method is called by the design surface’s &lt;xref:System.ComponentModel.IContainer&gt; when a component is added to the container.","pos":[0,143],"source":"The CreateDesigner method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container."},{"content":"This method creates a designer, but does not initialize it.","pos":[144,203]},{"content":"When it returns, the designer is initialized by the container.","pos":[204,266]},{"content":"CreateDesigner can create two different types of designers: root designers and normal designers.","pos":[273,369]},{"content":"A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.","pos":[370,512]},{"content":"Root designers differ from normal designers because they are responsible for the user interface presented to the end user.","pos":[513,635]},{"content":"Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.","pos":[636,749]},{"content":"The default implementation of this method delegates to &lt;xref:System.ComponentModel.TypeDescriptor&gt;, passing in &lt;xref:System.ComponentModel.Design.IRootDesigner&gt; as the designer type for root designers, or &lt;xref:System.ComponentModel.Design.IDesigner&gt; for normal designers.","pos":[756,1028],"source":"       The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers."},{"content":"You can override this method to request a specific type of designer.","pos":[1029,1097]}]}]},{"pos":[23513,23568],"content":"The component for which the designer should be created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component for which the designer should be created.","pos":[0,55]}]},{"pos":[23638,23817],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create a root designer; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to create a normal designer.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create a root designer; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to create a normal designer."},{"pos":[23900,24042],"content":"An instance of the requested designer, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no matching designer could be found.","needQuote":true,"needEscape":true,"source":"An instance of the requested designer, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no matching designer could be found."},{"pos":[24230,24317],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[24424,24590],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[25055,25093],"content":"Creates an instance of the given type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an instance of the given type.","pos":[0,38]}]},{"pos":[25105,25292],"content":"If <ph id=\"ph1\">`type`</ph> is an &lt;xref:System.ComponentModel.IComponent&gt;, CreateInstance searches for a constructor of type &lt;xref:System.ComponentModel.IContainer&gt; first, followed by an empty constructor.","needQuote":true,"needEscape":true,"extradata":"MT","source":"If `type` is an <xref:System.ComponentModel.IComponent>, CreateInstance searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor."},{"pos":[25443,25462],"content":"The type to create.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to create.","pos":[0,19]}]},{"pos":[25520,25545],"content":"The newly created object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The newly created object.","pos":[0,25]}]},{"pos":[25733,25815],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[25922,26088],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[26648,26712],"content":"Creates a container suitable for nesting controls or components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a container suitable for nesting controls or components.","pos":[0,64]}]},{"pos":[26724,26934],"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.","pos":[0,210],"nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.","pos":[0,135]},{"content":"Components added to nested containers do not participate in serialization.","pos":[136,210]}]}]},{"pos":[27184,27232],"content":"The component that manages the nested container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component that manages the nested container.","pos":[0,48]}]},{"pos":[27315,27336],"content":"The nested container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The nested container.","pos":[0,21]}]},{"pos":[27531,27624],"content":"<ph id=\"ph1\">&lt;code&gt;owningComponent&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>owningComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27731,27897],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[28506,28570],"content":"Creates a container suitable for nesting controls or components.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a container suitable for nesting controls or components.","pos":[0,64]}]},{"pos":[28583,28914],"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.       You can provide an additional name for the CreateNestedContainer method by passing a value into `containerName`.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.","pos":[0,135]},{"content":"Components added to nested containers do not participate in serialization.","pos":[136,210]},{"content":"You can provide an additional name for the CreateNestedContainer method by passing a value into <ph id=\"ph1\">`containerName`</ph>.","pos":[217,329],"source":"       You can provide an additional name for the CreateNestedContainer method by passing a value into `containerName`."}]},{"pos":[29187,29235],"content":"The component that manages the nested container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component that manages the nested container.","pos":[0,48]}]},{"pos":[29305,29349],"content":"An additional name for the nested container.","needQuote":true,"needEscape":true,"nodes":[{"content":"An additional name for the nested container.","pos":[0,44]}]},{"pos":[29432,29453],"content":"The nested container.","needQuote":true,"needEscape":true,"nodes":[{"content":"The nested container.","pos":[0,21]}]},{"pos":[29648,29741],"content":"<ph id=\"ph1\">&lt;code&gt;owningComponent&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>owningComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[29848,30014],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[30406,30505],"content":"Releases the resources used by the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>."},{"pos":[30518,32055],"content":"The public Dispose method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.      > [!NOTE] >  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.       Call Dispose when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>. The Dispose method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state. After calling Dispose, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The public Dispose method follows the standard &lt;xref:System.IDisposable&gt; pattern.","pos":[0,81],"source":"The public Dispose method follows the standard <xref:System.IDisposable> pattern."},{"content":"Calling this method destroys the design surface.","pos":[82,130]},{"content":"The protected version of this method is <ph id=\"ph1\">`virtual`</ph> and follows the normal &lt;xref:System.IDisposable&gt; pattern.","pos":[131,238],"source":" The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because &lt;xref:System.ComponentModel.Design.DesignSurface&gt; does not have any native code to clean up, it does not have a finalizer that calls &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;.","pos":[244,476],"source":"      > [!NOTE] >  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>."},{"content":"If you need to call &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;, you must add a finalizer yourself.","pos":[477,610],"source":" If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself."},{"content":"Call Dispose when you are finished using the &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.","pos":[617,712],"source":"       Call Dispose when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>."},{"content":"The Dispose method leaves the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; in an unusable state.","pos":[713,814],"source":" The Dispose method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state."},{"content":"After calling Dispose, you must release all references to the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; was occupying.","pos":[815,1048],"source":" After calling Dispose, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1049,1223],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.ComponentModel.Design.DesignSurface&gt;.","pos":[1229,1358],"source":"      > [!NOTE] >  Always call Dispose before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Design.DesignSurface&gt; object's <ph id=\"ph1\">`Finalize`</ph> method.","pos":[1359,1529],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method."}]},{"pos":[32648,32747],"content":"Releases the resources used by the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>."},{"pos":[32760,33837],"content":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.      > [!NOTE] >  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls Dispose. If you need to call Dispose, you must add a finalizer yourself.       This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references. This method invokes the `Dispose()` method of each referenced object.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The public &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt; method follows the standard &lt;xref:System.IDisposable&gt; pattern.","pos":[0,131],"source":"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern."},{"content":"Calling this method destroys the design surface.","pos":[132,180]},{"content":"The protected version of this method is <ph id=\"ph1\">`virtual`</ph> and follows the normal &lt;xref:System.IDisposable&gt; pattern.","pos":[181,288],"source":" The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Because &lt;xref:System.ComponentModel.Design.DesignSurface&gt; does not have any native code to clean up, it does not have a finalizer that calls Dispose.","pos":[294,456],"source":"      > [!NOTE] >  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls Dispose."},{"content":"If you need to call Dispose, you must add a finalizer yourself.","pos":[457,520]},{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.","pos":[527,629],"source":"       This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[630,735],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id=\"ph1\">`Dispose`</ph> with <ph id=\"ph2\">`disposing`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[736,819],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."},{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Design.DesignSurface&gt; references.","pos":[826,1000],"source":"       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[1001,1070],"source":" This method invokes the `Dispose()` method of each referenced object."}]},{"pos":[33993,34202],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to release only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources."},{"pos":[34673,34716],"content":"Occurs when the design surface is disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the design surface is disposed.","pos":[0,43]}]},{"pos":[34728,34904],"content":"The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The surface is only disposed when the public &lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt; method on &lt;xref:System.ComponentModel.Design.DesignSurface&gt; is called.","pos":[0,176],"source":"The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called."}]},{"pos":[35027,35039],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35464,35538],"content":"Gets a value indicating whether the <bpt id=\"p1\">**</bpt>Design-time Error List<ept id=\"p1\">**</ept> is loading.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the **Design-time Error List** is loading."},{"pos":[35658,35839],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">**</bpt>Design-time Error List<ept id=\"p2\">**</ept> is loading; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the **Design-time Error List** is loading; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36306,36347],"content":"Serializes changes to the design surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes changes to the design surface.","pos":[0,41]}]},{"pos":[36359,36954],"content":"The Flush method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until Flush is called, or it may choose to keep the serialized data up to date with all user changes. The Flush method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Flush method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until Flush is called, or it may choose to keep the serialized data up to date with all user changes. The Flush method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","pos":[0,595],"nodes":[{"content":"The Flush method can be called to push changes made to the design surface down to the serializer.","pos":[0,97]},{"content":"This ensures that the design surface and its serialized state are synchronized.","pos":[98,177]},{"content":"The actual implementation of this method is forwarded to the designer loader associated with design surface.","pos":[178,286]},{"content":"The designer loader may choose to defer changes until Flush is called, or it may choose to keep the serialized data up to date with all user changes.","pos":[287,436]},{"content":"The Flush method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.","pos":[437,595]}]}]},{"pos":[37482,37647],"content":"Occurs when a call is made to the &lt;xref:System.ComponentModel.Design.DesignSurface.Flush*&gt; method of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when a call is made to the <xref:System.ComponentModel.Design.DesignSurface.Flush*> method of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>."},{"pos":[37659,37734],"content":"The designer loader is flushed first, and then the Flushed event is raised.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The designer loader is flushed first, and then the Flushed event is raised.","pos":[0,75]}]},{"pos":[37856,37868],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38330,38372],"content":"Gets a service from the service container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a service from the service container.","pos":[0,42]}]},{"pos":[38384,38582],"content":"The GetService method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetService method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.","pos":[0,198],"nodes":[{"content":"The GetService method retrieves a service in the design surface’s service container.","pos":[0,84]},{"content":"In addition, this will forward to any service provider that was given to the design surface at construction time.","pos":[85,198]}]}]},{"pos":[38732,38764],"content":"The type of service to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]},{"pos":[38822,39020],"content":"An object that implements, or is a derived class of, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the service does not exist in the service container.","needQuote":true,"needEscape":true,"source":"An object that implements, or is a derived class of, <code>serviceType</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service does not exist in the service container."},{"pos":[39497,39568],"content":"Gets a value indicating whether the design surface is currently loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the design surface is currently loaded.","pos":[0,71]}]},{"pos":[39680,39858],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the design surface is currently loaded; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the design surface is currently loaded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40320,40364],"content":"Occurs when the designer load has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the designer load has completed.","pos":[0,44]}]},{"pos":[40377,40849],"content":"The Loaded event is raised for successful loads as well as unsuccessful ones. If code in this event handler throws an exception, the designer is unloaded.       The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.      > [!NOTE] >  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Loaded event is raised for successful loads as well as unsuccessful ones.","pos":[0,77]},{"content":"If code in this event handler throws an exception, the designer is unloaded.","pos":[78,154]},{"content":"The &lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt; object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.","pos":[161,342],"source":"       The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.","pos":[348,467],"source":"      > [!NOTE] >  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors."}]},{"pos":[41034,41046],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41466,41526],"content":"Returns a collection of loading errors or a void collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of loading errors or a void collection.","pos":[0,60]}]},{"pos":[41682,41740],"content":"A <xref:System.Collections.ICollection> of loading errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Collections.ICollection&gt; of loading errors.","pos":[0,58],"source":"A <xref:System.Collections.ICollection> of loading errors."}]},{"pos":[42209,42256],"content":"Occurs when the designer is about to be loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the designer is about to be loaded.","pos":[0,47]}]},{"pos":[42378,42390],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42941,43029],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"></xref> event."},{"pos":[43239,43336],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.LoadedEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the event data.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.Design.LoadedEventArgs\"></xref> that contains the event data."},{"pos":[43883,43972],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"></xref> event."},{"pos":[44120,44176],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[44729,44819],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"></xref> event."},{"pos":[44968,45024],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[45583,45674],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"></xref> event."},{"pos":[45824,45880],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[46455,46550],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"></xref> event."},{"pos":[46703,46759],"content":"An <xref:System.EventArgs> that contains the event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains the event data.","pos":[0,56],"source":"An <xref:System.EventArgs> that contains the event data."}]},{"pos":[47280,47307],"content":"Gets the service container.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the service container.","pos":[0,27]}]},{"pos":[47319,47673],"content":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.","pos":[0,354],"nodes":[{"content":"At construction time, &lt;xref:System.ComponentModel.Design.DesignSurface&gt; adds default services into this service container.","pos":[0,122],"source":"At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container."},{"content":"You can leave the default services in their present state, or you can remove them and replace them with your own.","pos":[123,236]},{"content":"The default services are all demand-created, so there is no loss in performance for adding them at construction time.","pos":[237,354]}]}]},{"pos":[47868,47966],"content":"The service container that provides all services to designers contained within the design surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service container that provides all services to designers contained within the design surface.","pos":[0,98]}]},{"pos":[48160,48326],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[48716,48762],"content":"Occurs when a designer has finished unloading.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a designer has finished unloading.","pos":[0,46]}]},{"pos":[48885,48897],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49309,49351],"content":"Occurs when a designer is about to unload.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a designer is about to unload.","pos":[0,42]}]},{"pos":[49363,49511],"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.","pos":[0,148],"nodes":[{"content":"When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.","pos":[0,104]},{"content":"The view should be unparented at this time.","pos":[105,148]}]}]},{"pos":[49635,49647],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50037,50073],"content":"Gets the view for the root designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the view for the root designer.","pos":[0,36]}]},{"pos":[50086,50843],"content":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.       The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The View property hides view technologies by passing the supported technologies back into the root designer.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.       The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The View property hides view technologies by passing the supported technologies back into the root designer.","pos":[0,755],"nodes":[{"content":"The &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; method must be called beforehand to start the loading process.","pos":[0,129],"source":"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process."},{"content":"It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.","pos":[130,309]},{"content":"If a view is unavailable, &lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt; raises an exception.","pos":[310,419],"source":" If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception."},{"content":"The notion of a view technology is obsolete.","pos":[426,470]},{"content":"But, it remains in the interfaces for root designers for backward compatibility.","pos":[471,551]},{"content":"Its use is hidden from anyone using &lt;xref:System.ComponentModel.Design.DesignSurface&gt; objects.","pos":[552,646],"source":" Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects."},{"content":"The View property hides view technologies by passing the supported technologies back into the root designer.","pos":[647,755]}]}]},{"pos":[51183,51214],"content":"The view for the root designer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The view for the root designer.","pos":[0,31]}]},{"pos":[51400,51623],"content":"The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <xref:System.Exception.InnerException*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <xref:System.Exception.InnerException*>.","pos":[0,223],"nodes":[{"content":"The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.","pos":[0,144]},{"content":"More information may available in the &lt;xref:System.Exception.InnerException*&gt;.","pos":[145,223],"source":" More information may available in the <xref:System.Exception.InnerException*>."}]}]},{"pos":[51726,51812],"content":"The designer loaded, but it does not offer a view compatible with this design surface.","needQuote":true,"needEscape":true,"nodes":[{"content":"The designer loaded, but it does not offer a view compatible with this design surface.","pos":[0,86]}]},{"pos":[51919,52085],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached to the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.Design.DesignSurface\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has been disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed."},{"pos":[52500,52666],"content":"Occurs when the &lt;xref:System.ComponentModel.Design.IDesignerHost.Activate*&gt; method has been called on <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.IDesignerHost\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.ComponentModel.Design.IDesignerHost.Activate*> method has been called on <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref>."},{"pos":[52678,52845],"content":"If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If you want to support the &lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt; method, your event handler should activate the window for this design surface.","pos":[0,167],"source":"If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface."}]},{"pos":[52973,52985],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.DesignSurface\n  id: DesignSurface\n  children:\n  - System.ComponentModel.Design.DesignSurface.#ctor\n  - System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  - System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  - System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  - System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  - System.ComponentModel.Design.DesignSurface.ComponentContainer\n  - System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  - System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  - System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  - System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  - System.ComponentModel.Design.DesignSurface.Dispose\n  - System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  - System.ComponentModel.Design.DesignSurface.Disposed\n  - System.ComponentModel.Design.DesignSurface.DtelLoading\n  - System.ComponentModel.Design.DesignSurface.Flush\n  - System.ComponentModel.Design.DesignSurface.Flushed\n  - System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  - System.ComponentModel.Design.DesignSurface.IsLoaded\n  - System.ComponentModel.Design.DesignSurface.Loaded\n  - System.ComponentModel.Design.DesignSurface.LoadErrors\n  - System.ComponentModel.Design.DesignSurface.Loading\n  - System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  - System.ComponentModel.Design.DesignSurface.ServiceContainer\n  - System.ComponentModel.Design.DesignSurface.Unloaded\n  - System.ComponentModel.Design.DesignSurface.Unloading\n  - System.ComponentModel.Design.DesignSurface.View\n  - System.ComponentModel.Design.DesignSurface.ViewActivated\n  langs:\n  - csharp\n  name: DesignSurface\n  nameWithType: DesignSurface\n  fullName: System.ComponentModel.Design.DesignSurface\n  type: Class\n  summary: Presents a user interface for designing components.\n  remarks: \"The DesignSurface class implements what the user perceives as a designer. DesignSurface is the user interface the user manipulates to change design-time features. DesignSurface provides a completely self-contained design surface.  \\n  \\n The DesignSurface class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple DesignSurface objects.  \\n  \\n The DesignSurface class can be used by itself, or the user can derive a new class from it and augment the behavior.  \\n  \\n The DesignSurface class provides several design-time services automatically. The DesignSurface class adds all of its services in its constructor. Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property. All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed. The default set of replaceable services that the DesignSurface class provides is shown in the following table.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IExtenderProviderService>|Enables objects that are not part of the container’s components collection to provide their own extender providers.|  \\n|<xref:System.ComponentModel.Design.IExtenderListService>|Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers. With this service, extender providers can live outside of the container.|  \\n|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|Provides designer metadata hooks. This is the primary interface for metadata filtering.|  \\n|<xref:System.ComponentModel.Design.ISelectionService>|Provides a way to select components in the designer.|  \\n|<xref:System.ComponentModel.Design.IReferenceService>|Provides a way to get a name for objects, even when those objects are not sited.|  \\n|DesignSurface|Offers the design surface itself as a service.|  \\n|<xref:System.ComponentModel.Design.DesignerOptionService>|Provides a base class for getting and setting option values for a designer.|  \\n  \\n The following table shows the non-replaceable services provided by default.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IComponentChangeService>|Raises events as changes are made to components.|  \\n|<xref:System.ComponentModel.Design.IDesignerHost>|Controls access to types, services, and transactions. Master interface for designers.|  \\n|<xref:System.ComponentModel.IContainer>|Owns the set of components that are being designed. Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.|  \\n|<xref:System.ComponentModel.Design.IServiceContainer>|Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.|  \\n  \\n In addition to these services, the DesignSurface class also provides a single service that is available through a component’s site. This service is unique for each component. The following table shows the services that cannot be replaced.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IDictionaryService>|A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.|  \\n|<xref:System.ComponentModel.INestedContainer>|A container that enables a component to add additional child components to the designer. These components will be part of the design surface, but will not participate in serialization. This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.|  \\n  \\n In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.  \\n  \\n> [!CAUTION]\\n>  Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.  \\n  \\n|Service|Description|  \\n|-------------|-----------------|  \\n|<xref:System.ComponentModel.Design.IServiceContainer>|Provides a way to get to the container of site-specific services. For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service. With this service, you can add additional site-specific services.|\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public class DesignSurface : IDisposable, IServiceProvider\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  - System.IServiceProvider\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface()\n  nameWithType: DesignSurface.DesignSurface()\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  syntax:\n    content: public DesignSurface ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface(IServiceProvider)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider)\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  remarks: When `parentProvide` is present, designers contained within the surface can retrieve services from the application.\n  syntax:\n    content: public DesignSurface (IServiceProvider parentProvider);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: The parent service provider, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent used to resolve services.\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface(Type)\n  nameWithType: DesignSurface.DesignSurface(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(Type)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  remarks: \"When you use the DesignSurface constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.  \\n  \\n> [!NOTE]\\n>  The DesignSurface overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>. The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads. If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.\"\n  syntax:\n    content: public DesignSurface (Type rootComponentType);\n    parameters:\n    - id: rootComponentType\n      type: System.Type\n      description: The type of root component to create.\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  id: '#ctor(System.IServiceProvider,System.Type)'\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DesignSurface(IServiceProvider,Type)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider,Type)\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider,Type)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> class.\n  remarks: Using the DesignSurface constructor creates a simple designer loader that creates a component of the given type and then ends the loading process. This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally. Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.\n  syntax:\n    content: public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);\n    parameters:\n    - id: parentProvider\n      type: System.IServiceProvider\n      description: The parent service provider, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent used to resolve services.\n    - id: rootComponentType\n      type: System.Type\n      description: The type of root component to create.\n  overload: System.ComponentModel.Design.DesignSurface.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  id: BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: BeginLoad(DesignerLoader)\n  nameWithType: DesignSurface.BeginLoad(DesignerLoader)\n  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(DesignerLoader)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Begins the loading process with the given designer loader.\n  remarks: \"Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.  \\n  \\n After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.\"\n  syntax:\n    content: public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);\n    parameters:\n    - id: loader\n      type: System.ComponentModel.Design.Serialization.DesignerLoader\n      description: The designer loader to use for loading the designer.\n  overload: System.ComponentModel.Design.DesignSurface.BeginLoad*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>loader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  id: BeginLoad(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: BeginLoad(Type)\n  nameWithType: DesignSurface.BeginLoad(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Begins the loading process.\n  remarks: \"When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used. Designer loading can be asynchronous, so the loading may continue to progress after this call has returned. Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.  \\n  \\n After BeginLoad is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.  \\n  \\n> [!NOTE]\\n>  The BeginLoad method creates an instance of the component type and initializes a designer for this instance. The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.\"\n  syntax:\n    content: public void BeginLoad (Type rootComponentType);\n    parameters:\n    - id: rootComponentType\n      type: System.Type\n      description: The type of component to create in design mode.\n  overload: System.ComponentModel.Design.DesignSurface.BeginLoad*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rootComponentType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer\n  id: ComponentContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: ComponentContainer\n  nameWithType: DesignSurface.ComponentContainer\n  fullName: System.ComponentModel.Design.DesignSurface.ComponentContainer\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface.\n  remarks: The ComponentContainer property holds all objects that are currently in design mode. When components are added to ComponentContainer, their designer, if any, is loaded. The component is sited with a site that provides full access to the design surface.\n  syntax:\n    content: public System.ComponentModel.IContainer ComponentContainer { get; }\n    return:\n      type: System.ComponentModel.IContainer\n      description: The <xref href=\"System.ComponentModel.IContainer\"></xref> implementation within the design surface.\n  overload: System.ComponentModel.Design.DesignSurface.ComponentContainer*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  id: CreateComponent(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateComponent(Type)\n  nameWithType: DesignSurface.CreateComponent(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateComponent(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates an instance of a component.\n  remarks: The CreateComponent method is called by the design surface’s <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component. The component should be created and added to the public container on the design surface.\n  syntax:\n    content: protected virtual System.ComponentModel.IComponent CreateComponent (Type componentType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: The type of component to create.\n    return:\n      type: System.ComponentModel.IComponent\n      description: The newly created component.\n  overload: System.ComponentModel.Design.DesignSurface.CreateComponent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>componentType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  id: CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateDesigner(IComponent,Boolean)\n  nameWithType: DesignSurface.CreateDesigner(IComponent,Boolean)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateDesigner(IComponent,Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a designer when a component is added to the container.\n  remarks: \"The CreateDesigner method is called by the design surface’s <xref:System.ComponentModel.IContainer> when a component is added to the container. This method creates a designer, but does not initialize it. When it returns, the designer is initialized by the container.  \\n  \\n CreateDesigner can create two different types of designers: root designers and normal designers. A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container. Root designers differ from normal designers because they are responsible for the user interface presented to the end user. Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.  \\n  \\n The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers. You can override this method to request a specific type of designer.\"\n  syntax:\n    content: protected virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component for which the designer should be created.\n    - id: rootDesigner\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to create a root designer; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to create a normal designer.\n    return:\n      type: System.ComponentModel.Design.IDesigner\n      description: An instance of the requested designer, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no matching designer could be found.\n  overload: System.ComponentModel.Design.DesignSurface.CreateDesigner*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  id: CreateInstance(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateInstance(Type)\n  nameWithType: DesignSurface.CreateInstance(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateInstance(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates an instance of the given type.\n  remarks: If `type` is an <xref:System.ComponentModel.IComponent>, CreateInstance searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.\n  syntax:\n    content: protected virtual object CreateInstance (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to create.\n    return:\n      type: System.Object\n      description: The newly created object.\n  overload: System.ComponentModel.Design.DesignSurface.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  id: CreateNestedContainer(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateNestedContainer(IComponent)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a container suitable for nesting controls or components.\n  remarks: Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.\n  syntax:\n    content: public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);\n    parameters:\n    - id: owningComponent\n      type: System.ComponentModel.IComponent\n      description: The component that manages the nested container.\n    return:\n      type: System.ComponentModel.INestedContainer\n      description: The nested container.\n  overload: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>owningComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  id: CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: CreateNestedContainer(IComponent,String)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent,String)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent,String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Creates a container suitable for nesting controls or components.\n  remarks: \"Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface. Components added to nested containers do not participate in serialization.  \\n  \\n You can provide an additional name for the CreateNestedContainer method by passing a value into `containerName`.\"\n  syntax:\n    content: public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);\n    parameters:\n    - id: owningComponent\n      type: System.ComponentModel.IComponent\n      description: The component that manages the nested container.\n    - id: containerName\n      type: System.String\n      description: An additional name for the nested container.\n    return:\n      type: System.ComponentModel.INestedContainer\n      description: The nested container.\n  overload: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>owningComponent</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DesignSurface.Dispose()\n  fullName: System.ComponentModel.Design.DesignSurface.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.\n  remarks: \"The public Dispose method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>. If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.  \\n  \\n Call Dispose when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>. The Dispose method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state. After calling Dispose, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).  \\n  \\n> [!NOTE]\\n>  Always call Dispose before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurface.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DesignSurface.Dispose(Boolean)\n  fullName: System.ComponentModel.Design.DesignSurface.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the resources used by the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.\n  remarks: \"The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.  \\n  \\n> [!NOTE]\\n>  Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls Dispose. If you need to call Dispose, you must add a finalizer yourself.  \\n  \\n This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to release only unmanaged resources.\n  overload: System.ComponentModel.Design.DesignSurface.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Disposed\n  id: Disposed\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Disposed\n  nameWithType: DesignSurface.Disposed\n  fullName: System.ComponentModel.Design.DesignSurface.Disposed\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the design surface is disposed.\n  remarks: The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.\n  syntax:\n    content: public event EventHandler Disposed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.DtelLoading\n  id: DtelLoading\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: DtelLoading\n  nameWithType: DesignSurface.DtelLoading\n  fullName: System.ComponentModel.Design.DesignSurface.DtelLoading\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the **Design-time Error List** is loading.\n  syntax:\n    content: public bool DtelLoading { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the **Design-time Error List** is loading; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.DesignSurface.DtelLoading*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Flush\n  id: Flush\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: DesignSurface.Flush()\n  fullName: System.ComponentModel.Design.DesignSurface.Flush()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Serializes changes to the design surface.\n  remarks: The Flush method can be called to push changes made to the design surface down to the serializer. This ensures that the design surface and its serialized state are synchronized. The actual implementation of this method is forwarded to the designer loader associated with design surface. The designer loader may choose to defer changes until Flush is called, or it may choose to keep the serialized data up to date with all user changes. The Flush method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.\n  syntax:\n    content: public void Flush ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignSurface.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Flushed\n  id: Flushed\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Flushed\n  nameWithType: DesignSurface.Flushed\n  fullName: System.ComponentModel.Design.DesignSurface.Flushed\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a call is made to the <xref:System.ComponentModel.Design.DesignSurface.Flush*> method of <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref>.\n  remarks: The designer loader is flushed first, and then the Flushed event is raised.\n  syntax:\n    content: public event EventHandler Flushed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: DesignSurface.GetService(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a service from the service container.\n  remarks: The GetService method retrieves a service in the design surface’s service container. In addition, this will forward to any service provider that was given to the design surface at construction time.\n  syntax:\n    content: public object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: An object that implements, or is a derived class of, <code>serviceType</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the service does not exist in the service container.\n  overload: System.ComponentModel.Design.DesignSurface.GetService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.IsLoaded\n  id: IsLoaded\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: IsLoaded\n  nameWithType: DesignSurface.IsLoaded\n  fullName: System.ComponentModel.Design.DesignSurface.IsLoaded\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a value indicating whether the design surface is currently loaded.\n  syntax:\n    content: public bool IsLoaded { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the design surface is currently loaded; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.DesignSurface.IsLoaded*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Loaded\n  id: Loaded\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Loaded\n  nameWithType: DesignSurface.Loaded\n  fullName: System.ComponentModel.Design.DesignSurface.Loaded\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the designer load has completed.\n  remarks: \"The Loaded event is raised for successful loads as well as unsuccessful ones. If code in this event handler throws an exception, the designer is unloaded.  \\n  \\n The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.  \\n  \\n> [!NOTE]\\n>  Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.\"\n  syntax:\n    content: public event System.ComponentModel.Design.LoadedEventHandler Loaded;\n    return:\n      type: System.ComponentModel.Design.LoadedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.LoadErrors\n  id: LoadErrors\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: LoadErrors\n  nameWithType: DesignSurface.LoadErrors\n  fullName: System.ComponentModel.Design.DesignSurface.LoadErrors\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Returns a collection of loading errors or a void collection.\n  syntax:\n    content: public System.Collections.ICollection LoadErrors { get; }\n    return:\n      type: System.Collections.ICollection\n      description: A <xref:System.Collections.ICollection> of loading errors.\n  overload: System.ComponentModel.Design.DesignSurface.LoadErrors*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Loading\n  id: Loading\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Loading\n  nameWithType: DesignSurface.Loading\n  fullName: System.ComponentModel.Design.DesignSurface.Loading\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the designer is about to be loaded.\n  syntax:\n    content: public event EventHandler Loading;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  id: OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnLoaded(LoadedEventArgs)\n  nameWithType: DesignSurface.OnLoaded(LoadedEventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnLoaded(LoadedEventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loaded\"></xref> event.\n  syntax:\n    content: protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Design.LoadedEventArgs\n      description: A <xref href=\"System.ComponentModel.Design.LoadedEventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnLoaded*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  id: OnLoading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnLoading(EventArgs)\n  nameWithType: DesignSurface.OnLoading(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnLoading(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Loading\"></xref> event.\n  syntax:\n    content: protected virtual void OnLoading (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnLoading*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  id: OnUnloaded(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnUnloaded(EventArgs)\n  nameWithType: DesignSurface.OnUnloaded(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnUnloaded(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloaded\"></xref> event.\n  syntax:\n    content: protected virtual void OnUnloaded (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnUnloaded*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  id: OnUnloading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnUnloading(EventArgs)\n  nameWithType: DesignSurface.OnUnloading(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnUnloading(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.Unloading\"></xref> event.\n  syntax:\n    content: protected virtual void OnUnloading (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnUnloading*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  id: OnViewActivate(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: OnViewActivate(EventArgs)\n  nameWithType: DesignSurface.OnViewActivate(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnViewActivate(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Raises the <xref href=\"System.ComponentModel.Design.DesignSurface.ViewActivated\"></xref> event.\n  syntax:\n    content: protected virtual void OnViewActivate (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains the event data.\n  overload: System.ComponentModel.Design.DesignSurface.OnViewActivate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer\n  id: ServiceContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: ServiceContainer\n  nameWithType: DesignSurface.ServiceContainer\n  fullName: System.ComponentModel.Design.DesignSurface.ServiceContainer\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the service container.\n  remarks: At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container. You can leave the default services in their present state, or you can remove them and replace them with your own. The default services are all demand-created, so there is no loss in performance for adding them at construction time.\n  syntax:\n    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }\n    return:\n      type: System.ComponentModel.Design.ServiceContainer\n      description: The service container that provides all services to designers contained within the design surface.\n  overload: System.ComponentModel.Design.DesignSurface.ServiceContainer*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Unloaded\n  id: Unloaded\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Unloaded\n  nameWithType: DesignSurface.Unloaded\n  fullName: System.ComponentModel.Design.DesignSurface.Unloaded\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a designer has finished unloading.\n  syntax:\n    content: public event EventHandler Unloaded;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.Unloading\n  id: Unloading\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: Unloading\n  nameWithType: DesignSurface.Unloading\n  fullName: System.ComponentModel.Design.DesignSurface.Unloading\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a designer is about to unload.\n  remarks: When a designer unloads, the entire state for that designer is destroyed, including the designer’s view. The view should be unparented at this time.\n  syntax:\n    content: public event EventHandler Unloading;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.View\n  id: View\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: View\n  nameWithType: DesignSurface.View\n  fullName: System.ComponentModel.Design.DesignSurface.View\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets the view for the root designer.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process. It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader. If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.  \\n  \\n The notion of a view technology is obsolete. But, it remains in the interfaces for root designers for backward compatibility. Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects. The View property hides view technologies by passing the supported technologies back into the root designer.\"\n  example:\n  - \"The following code example shows how View hides view technologies.  \\n  \\n [C#]  \\n  \\n `IRootDesigner d;`  \\n  \\n `ViewTechnology[] supported = d.SupportedTechnologies;`  \\n  \\n `return d.GetView(supported[0]);`\"\n  syntax:\n    content: public object View { get; }\n    return:\n      type: System.Object\n      description: The view for the root designer.\n  overload: System.ComponentModel.Design.DesignSurface.View*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <xref:System.Exception.InnerException*>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The designer loaded, but it does not offer a view compatible with this design surface.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref> attached to the <xref href=\"System.ComponentModel.Design.DesignSurface\"></xref> has been disposed.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.DesignSurface.ViewActivated\n  id: ViewActivated\n  parent: System.ComponentModel.Design.DesignSurface\n  langs:\n  - csharp\n  name: ViewActivated\n  nameWithType: DesignSurface.ViewActivated\n  fullName: System.ComponentModel.Design.DesignSurface.ViewActivated\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when the <xref:System.ComponentModel.Design.IDesignerHost.Activate*> method has been called on <xref href=\"System.ComponentModel.Design.IDesignerHost\"></xref>.\n  remarks: If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.\n  syntax:\n    content: public event EventHandler ViewActivated;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.ComponentModel.Design.DesignSurface.#ctor\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface()\n  nameWithType: DesignSurface.DesignSurface()\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface()\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface(IServiceProvider)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider)\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: true\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface(Type)\n  nameWithType: DesignSurface.DesignSurface(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface(IServiceProvider,Type)\n  nameWithType: DesignSurface.DesignSurface(IServiceProvider,Type)\n  fullName: System.ComponentModel.Design.DesignSurface.DesignSurface(IServiceProvider,Type)\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: BeginLoad(DesignerLoader)\n  nameWithType: DesignSurface.BeginLoad(DesignerLoader)\n  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(DesignerLoader)\n- uid: System.ComponentModel.Design.Serialization.DesignerLoader\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: DesignerLoader\n  nameWithType: DesignerLoader\n  fullName: System.ComponentModel.Design.Serialization.DesignerLoader\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: BeginLoad(Type)\n  nameWithType: DesignSurface.BeginLoad(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.BeginLoad(Type)\n- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ComponentContainer\n  nameWithType: DesignSurface.ComponentContainer\n  fullName: System.ComponentModel.Design.DesignSurface.ComponentContainer\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  nameWithType: IContainer\n  fullName: System.ComponentModel.IContainer\n- uid: System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateComponent(Type)\n  nameWithType: DesignSurface.CreateComponent(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateComponent(Type)\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateDesigner(IComponent,Boolean)\n  nameWithType: DesignSurface.CreateDesigner(IComponent,Boolean)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateDesigner(IComponent,Boolean)\n- uid: System.ComponentModel.Design.IDesigner\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: IDesigner\n  nameWithType: IDesigner\n  fullName: System.ComponentModel.Design.IDesigner\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateInstance(Type)\n  nameWithType: DesignSurface.CreateInstance(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateInstance(Type)\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateNestedContainer(IComponent)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent)\n- uid: System.ComponentModel.INestedContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: INestedContainer\n  nameWithType: INestedContainer\n  fullName: System.ComponentModel.INestedContainer\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateNestedContainer(IComponent,String)\n  nameWithType: DesignSurface.CreateNestedContainer(IComponent,String)\n  fullName: System.ComponentModel.Design.DesignSurface.CreateNestedContainer(IComponent,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.DesignSurface.Dispose\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Dispose()\n  nameWithType: DesignSurface.Dispose()\n  fullName: System.ComponentModel.Design.DesignSurface.Dispose()\n- uid: System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DesignSurface.Dispose(Boolean)\n  fullName: System.ComponentModel.Design.DesignSurface.Dispose(Boolean)\n- uid: System.ComponentModel.Design.DesignSurface.Disposed\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Disposed\n  nameWithType: DesignSurface.Disposed\n  fullName: System.ComponentModel.Design.DesignSurface.Disposed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.DesignSurface.DtelLoading\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DtelLoading\n  nameWithType: DesignSurface.DtelLoading\n  fullName: System.ComponentModel.Design.DesignSurface.DtelLoading\n- uid: System.ComponentModel.Design.DesignSurface.Flush\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Flush()\n  nameWithType: DesignSurface.Flush()\n  fullName: System.ComponentModel.Design.DesignSurface.Flush()\n- uid: System.ComponentModel.Design.DesignSurface.Flushed\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Flushed\n  nameWithType: DesignSurface.Flushed\n  fullName: System.ComponentModel.Design.DesignSurface.Flushed\n- uid: System.ComponentModel.Design.DesignSurface.GetService(System.Type)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: DesignSurface.GetService(Type)\n  fullName: System.ComponentModel.Design.DesignSurface.GetService(Type)\n- uid: System.ComponentModel.Design.DesignSurface.IsLoaded\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: IsLoaded\n  nameWithType: DesignSurface.IsLoaded\n  fullName: System.ComponentModel.Design.DesignSurface.IsLoaded\n- uid: System.ComponentModel.Design.DesignSurface.Loaded\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Loaded\n  nameWithType: DesignSurface.Loaded\n  fullName: System.ComponentModel.Design.DesignSurface.Loaded\n- uid: System.ComponentModel.Design.LoadedEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: LoadedEventHandler\n  nameWithType: LoadedEventHandler\n  fullName: System.ComponentModel.Design.LoadedEventHandler\n- uid: System.ComponentModel.Design.DesignSurface.LoadErrors\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: LoadErrors\n  nameWithType: DesignSurface.LoadErrors\n  fullName: System.ComponentModel.Design.DesignSurface.LoadErrors\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.Design.DesignSurface.Loading\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Loading\n  nameWithType: DesignSurface.Loading\n  fullName: System.ComponentModel.Design.DesignSurface.Loading\n- uid: System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoaded(LoadedEventArgs)\n  nameWithType: DesignSurface.OnLoaded(LoadedEventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnLoaded(LoadedEventArgs)\n- uid: System.ComponentModel.Design.LoadedEventArgs\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: LoadedEventArgs\n  nameWithType: LoadedEventArgs\n  fullName: System.ComponentModel.Design.LoadedEventArgs\n- uid: System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoading(EventArgs)\n  nameWithType: DesignSurface.OnLoading(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnLoading(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloaded(EventArgs)\n  nameWithType: DesignSurface.OnUnloaded(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnUnloaded(EventArgs)\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloading(EventArgs)\n  nameWithType: DesignSurface.OnUnloading(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnUnloading(EventArgs)\n- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnViewActivate(EventArgs)\n  nameWithType: DesignSurface.OnViewActivate(EventArgs)\n  fullName: System.ComponentModel.Design.DesignSurface.OnViewActivate(EventArgs)\n- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: DesignSurface.ServiceContainer\n  fullName: System.ComponentModel.Design.DesignSurface.ServiceContainer\n- uid: System.ComponentModel.Design.ServiceContainer\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: ServiceContainer\n  fullName: System.ComponentModel.Design.ServiceContainer\n- uid: System.ComponentModel.Design.DesignSurface.Unloaded\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Unloaded\n  nameWithType: DesignSurface.Unloaded\n  fullName: System.ComponentModel.Design.DesignSurface.Unloaded\n- uid: System.ComponentModel.Design.DesignSurface.Unloading\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Unloading\n  nameWithType: DesignSurface.Unloading\n  fullName: System.ComponentModel.Design.DesignSurface.Unloading\n- uid: System.ComponentModel.Design.DesignSurface.View\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: View\n  nameWithType: DesignSurface.View\n  fullName: System.ComponentModel.Design.DesignSurface.View\n- uid: System.ComponentModel.Design.DesignSurface.ViewActivated\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ViewActivated\n  nameWithType: DesignSurface.ViewActivated\n  fullName: System.ComponentModel.Design.DesignSurface.ViewActivated\n- uid: System.ComponentModel.Design.DesignSurface.#ctor*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DesignSurface\n  nameWithType: DesignSurface.DesignSurface\n- uid: System.ComponentModel.Design.DesignSurface.BeginLoad*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: BeginLoad\n  nameWithType: DesignSurface.BeginLoad\n- uid: System.ComponentModel.Design.DesignSurface.ComponentContainer*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ComponentContainer\n  nameWithType: DesignSurface.ComponentContainer\n- uid: System.ComponentModel.Design.DesignSurface.CreateComponent*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateComponent\n  nameWithType: DesignSurface.CreateComponent\n- uid: System.ComponentModel.Design.DesignSurface.CreateDesigner*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateDesigner\n  nameWithType: DesignSurface.CreateDesigner\n- uid: System.ComponentModel.Design.DesignSurface.CreateInstance*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateInstance\n  nameWithType: DesignSurface.CreateInstance\n- uid: System.ComponentModel.Design.DesignSurface.CreateNestedContainer*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: CreateNestedContainer\n  nameWithType: DesignSurface.CreateNestedContainer\n- uid: System.ComponentModel.Design.DesignSurface.Dispose*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Dispose\n  nameWithType: DesignSurface.Dispose\n- uid: System.ComponentModel.Design.DesignSurface.DtelLoading*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: DtelLoading\n  nameWithType: DesignSurface.DtelLoading\n- uid: System.ComponentModel.Design.DesignSurface.Flush*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: Flush\n  nameWithType: DesignSurface.Flush\n- uid: System.ComponentModel.Design.DesignSurface.GetService*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: GetService\n  nameWithType: DesignSurface.GetService\n- uid: System.ComponentModel.Design.DesignSurface.IsLoaded*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: IsLoaded\n  nameWithType: DesignSurface.IsLoaded\n- uid: System.ComponentModel.Design.DesignSurface.LoadErrors*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: LoadErrors\n  nameWithType: DesignSurface.LoadErrors\n- uid: System.ComponentModel.Design.DesignSurface.OnLoaded*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoaded\n  nameWithType: DesignSurface.OnLoaded\n- uid: System.ComponentModel.Design.DesignSurface.OnLoading*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnLoading\n  nameWithType: DesignSurface.OnLoading\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloaded*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloaded\n  nameWithType: DesignSurface.OnUnloaded\n- uid: System.ComponentModel.Design.DesignSurface.OnUnloading*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnUnloading\n  nameWithType: DesignSurface.OnUnloading\n- uid: System.ComponentModel.Design.DesignSurface.OnViewActivate*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: OnViewActivate\n  nameWithType: DesignSurface.OnViewActivate\n- uid: System.ComponentModel.Design.DesignSurface.ServiceContainer*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: ServiceContainer\n  nameWithType: DesignSurface.ServiceContainer\n- uid: System.ComponentModel.Design.DesignSurface.View*\n  parent: System.ComponentModel.Design.DesignSurface\n  isExternal: false\n  name: View\n  nameWithType: DesignSurface.View\n"}