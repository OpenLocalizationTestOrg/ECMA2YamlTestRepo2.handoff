{"nodes":[{"pos":[1343,1420],"content":"Represents a database foreign-key field that is used by ASP.NET Dynamic Data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a database foreign-key field that is used by ASP.NET Dynamic Data.","pos":[0,77]}]},{"pos":[1433,2009],"content":"In ASP.NET Dynamic Data applications, the MetaForeignKeyColumn class represents a database column that denotes a one-to-one relationship.       The MetaForeignKeyColumn class represents the column in the table that contains the foreign-key field. However, you can access the parent table object by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable%2A> property. You can determine if the foreign-key field is a primary key in the table that contains it by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable%2A> property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"In ASP.NET Dynamic Data applications, the MetaForeignKeyColumn class represents a database column that denotes a one-to-one relationship.       The MetaForeignKeyColumn class represents the column in the table that contains the foreign-key field. However, you can access the parent table object by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable%2A> property. You can determine if the foreign-key field is a primary key in the table that contains it by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable%2A> property.","pos":[0,574],"nodes":[{"content":"In ASP.NET Dynamic Data applications, the MetaForeignKeyColumn class represents a database column that denotes a one-to-one relationship.","pos":[0,137]},{"content":"The MetaForeignKeyColumn class represents the column in the table that contains the foreign-key field.","pos":[144,246]},{"content":"However, you can access the parent table object by using the &lt;xref:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable%2A&gt; property.","pos":[247,383],"source":" However, you can access the parent table object by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable%2A> property."},{"content":"You can determine if the foreign-key field is a primary key in the table that contains it by using the &lt;xref:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable%2A&gt; property.","pos":[384,574],"source":" You can determine if the foreign-key field is a primary key in the table that contains it by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable%2A> property."}]}]},{"pos":[4960,5065],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.MetaForeignKeyColumn\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaForeignKeyColumn\"></xref> class."},{"pos":[5322,5344],"content":"The entity meta table.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity meta table.","pos":[0,22]}]},{"pos":[5452,5479],"content":"The entity column provider.","needQuote":true,"needEscape":true,"nodes":[{"content":"The entity column provider.","pos":[0,27]}]},{"pos":[6160,6221],"content":"Saves the value of a foreign key in the specified dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the value of a foreign key in the specified dictionary.","pos":[0,61]}]},{"pos":[6233,6538],"content":"The ExtractForeignKey method is used to save the value of a foreign key in the dictionary that contains all the new values for a data field. Typically, the ExtractForeignKey method is used when a new value is selected from a <xref:System.Web.UI.WebControls.DropDownList> control for the foreign key field.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ExtractForeignKey method is used to save the value of a foreign key in the dictionary that contains all the new values for a data field. Typically, the ExtractForeignKey method is used when a new value is selected from a <xref:System.Web.UI.WebControls.DropDownList> control for the foreign key field.","pos":[0,305],"nodes":[{"content":"The ExtractForeignKey method is used to save the value of a foreign key in the dictionary that contains all the new values for a data field.","pos":[0,140]},{"content":"Typically, the ExtractForeignKey method is used when a new value is selected from a &lt;xref:System.Web.UI.WebControls.DropDownList&gt; control for the foreign key field.","pos":[141,305],"source":" Typically, the ExtractForeignKey method is used when a new value is selected from a <xref:System.Web.UI.WebControls.DropDownList> control for the foreign key field."}]}]},{"pos":[6750,6816],"content":"A dictionary object that contains the new values for a data field.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary object that contains the new values for a data field.","pos":[0,66]}]},{"pos":[6878,6907],"content":"The value of the foreign key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the foreign key.","pos":[0,29]}]},{"pos":[7440,7561],"content":"Gets a collection that contains the names of the foreign keys in the association that represents a database relationship.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection that contains the names of the foreign keys in the association that represents a database relationship.","pos":[0,121]}]},{"pos":[7783,7840],"content":"A collection that contains the names of the foreign keys.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection that contains the names of the foreign keys.","pos":[0,57]}]},{"pos":[8443,8502],"content":"Returns the alternate name that is mapped to a foreign key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the alternate name that is mapped to a foreign key.","pos":[0,59]}]},{"pos":[8514,8723],"content":"This method returns the alternate name that is used in a filtering expression instead of the actual foreign-key name. If an alternate name does not exist, the method returns the actual name of the foreign key.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method returns the alternate name that is used in a filtering expression instead of the actual foreign-key name. If an alternate name does not exist, the method returns the actual name of the foreign key.","pos":[0,209],"nodes":[{"content":"This method returns the alternate name that is used in a filtering expression instead of the actual foreign-key name.","pos":[0,117]},{"content":"If an alternate name does not exist, the method returns the actual name of the foreign key.","pos":[118,209]}]}]},{"pos":[8892,8920],"content":"The name of the foreign key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the foreign key.","pos":[0,28]}]},{"pos":[8978,9031],"content":"The alternate name that is mapped to the foreign key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The alternate name that is mapped to the foreign key.","pos":[0,53]}]},{"pos":[9663,9760],"content":"Gets the path for the details action page of the parent table of the specified foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the path for the details action page of the parent table of the specified foreign-key field.","pos":[0,97]}]},{"pos":[9773,10264],"content":"The GetForeignKeyDetailsPath method returns the path for the details action page based on the routes defined for the ASP.NET Dynamic Data application. This method returns an empty string, if `row` is `null`.       Using the GetForeignKeyDetailsPath method is the same as invoking the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method passing the <xref:System.Web.DynamicData.PageAction.Details%2A> action as the first parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetForeignKeyDetailsPath method returns the path for the details action page based on the routes defined for the ASP.NET Dynamic Data application.","pos":[0,150]},{"content":"This method returns an empty string, if <ph id=\"ph1\">`row`</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[151,207],"source":" This method returns an empty string, if `row` is `null`."},{"content":"Using the GetForeignKeyDetailsPath method is the same as invoking the &lt;xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29&gt; method passing the &lt;xref:System.Web.DynamicData.PageAction.Details%2A&gt; action as the first parameter.","pos":[214,489],"source":"       Using the GetForeignKeyDetailsPath method is the same as invoking the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method passing the <xref:System.Web.DynamicData.PageAction.Details%2A> action as the first parameter."}]},{"pos":[10417,10461],"content":"The row that contains the foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row that contains the foreign-key field.","pos":[0,44]}]},{"pos":[10519,10611],"content":"The path for the details action page of the parent table of the specified foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path for the details action page of the parent table of the specified foreign-key field.","pos":[0,92]}]},{"pos":[11262,11361],"content":"Gets the path for the specified action page of the parent table of the specified foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the path for the specified action page of the parent table of the specified foreign-key field.","pos":[0,99]}]},{"pos":[11374,11697],"content":"The GetForeignKeyPath method returns the path for the specified action page based on the routes defined for the ASP.NET Dynamic Data application. This method returns an empty string, if `row` is `null`.       You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetForeignKeyPath method returns the path for the specified action page based on the routes defined for the ASP.NET Dynamic Data application.","pos":[0,145]},{"content":"This method returns an empty string, if <ph id=\"ph1\">`row`</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[146,202],"source":" This method returns an empty string, if `row` is `null`."},{"content":"You can use the values defined in the &lt;xref:System.Web.DynamicData.PageAction&gt; class for the <ph id=\"ph1\">`action`</ph> parameter.","pos":[209,321],"source":"       You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter."}]},{"pos":[11861,11879],"content":"The target action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target action.","pos":[0,18]}]},{"pos":[11939,11983],"content":"The row that contains the foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row that contains the foreign-key field.","pos":[0,44]}]},{"pos":[12041,12135],"content":"The path for the specified action page of the parent table of the specified foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path for the specified action page of the parent table of the specified foreign-key field.","pos":[0,94]}]},{"pos":[12828,12927],"content":"Gets the path for the specified action page of the parent table of the specified foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the path for the specified action page of the parent table of the specified foreign-key field.","pos":[0,99]}]},{"pos":[12940,13310],"content":"The <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method returns the path for the specified action page based on the specified `path`. This method returns an empty string, if `row` is `null`.       You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29&gt; method returns the path for the specified action page based on the specified <ph id=\"ph1\">`path`</ph>.","pos":[0,192],"source":"The <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method returns the path for the specified action page based on the specified `path`."},{"content":"This method returns an empty string, if <ph id=\"ph1\">`row`</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[193,249],"source":" This method returns an empty string, if `row` is `null`."},{"content":"You can use the values defined in the &lt;xref:System.Web.DynamicData.PageAction&gt; class for the <ph id=\"ph1\">`action`</ph> parameter.","pos":[256,368],"source":"       You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter."}]},{"pos":[13487,13505],"content":"The target action.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target action.","pos":[0,18]}]},{"pos":[13565,13609],"content":"The row that contains the foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row that contains the foreign-key field.","pos":[0,44]}]},{"pos":[13670,13686],"content":"The target page.","needQuote":true,"needEscape":true,"nodes":[{"content":"The target page.","pos":[0,16]}]},{"pos":[13744,13838],"content":"The path for the specified action page of the parent table of the specified foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path for the specified action page of the parent table of the specified foreign-key field.","pos":[0,94]}]},{"pos":[14443,14539],"content":"Retrieves a comma-separated list of values that represent the foreign-key for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a comma-separated list of values that represent the foreign-key for the specified row.","pos":[0,96]}]},{"pos":[14551,14739],"content":"The GetForeignKeyString method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues%2A> method, but in a different format.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetForeignKeyString method returns the same values that are returned by the &lt;xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues%2A&gt; method, but in a different format.","pos":[0,188],"source":"The GetForeignKeyString method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues%2A> method, but in a different format."}]},{"pos":[14886,14933],"content":"The row to retrieve the foreign-key values for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row to retrieve the foreign-key values for.","pos":[0,47]}]},{"pos":[14991,15077],"content":"A comma-separated list of values that represent the foreign key for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comma-separated list of values that represent the foreign key for the specified row.","pos":[0,86]}]},{"pos":[15684,15771],"content":"Retrieves a collection of values that represent the foreign keys for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a collection of values that represent the foreign keys for the specified row.","pos":[0,87]}]},{"pos":[15783,15971],"content":"The GetForeignKeyValues method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString%2A> method, but in a different format.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The GetForeignKeyValues method returns the same values that are returned by the &lt;xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString%2A&gt; method, but in a different format.","pos":[0,188],"source":"The GetForeignKeyValues method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString%2A> method, but in a different format."}]},{"pos":[16152,16199],"content":"The row to retrieve the foreign-key values for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The row to retrieve the foreign-key values for.","pos":[0,47]}]},{"pos":[16291,16368],"content":"A collection of values that represent the foreign keys for the specified row.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of values that represent the foreign keys for the specified row.","pos":[0,77]}]},{"pos":[16882,16956],"content":"Initializes data that may not be available when the constructor is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes data that may not be available when the constructor is called.","pos":[0,74]}]},{"pos":[16968,17176],"content":"This method cannot be called directly. To customize initialization, you can derive from this class and override the Initialize method. If you override this method, call the base control's `Initialize` method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method cannot be called directly.","pos":[0,38]},{"content":"To customize initialization, you can derive from this class and override the Initialize method.","pos":[39,134]},{"content":"If you override this method, call the base control's <ph id=\"ph1\">`Initialize`</ph> method.","pos":[135,208],"source":" If you override this method, call the base control's `Initialize` method."}]},{"pos":[17823,17921],"content":"Gets a value that indicates whether the foreign-key field is part of the primary key of the table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the foreign-key field is part of the primary key of the table.","pos":[0,98]}]},{"pos":[17933,18133],"content":"Use the IsPrimaryKeyInThisTable property to determine whether the foreign-key field is part of the primary key of the table. This is the table that contains the foreign-key field not the parent table.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Use the IsPrimaryKeyInThisTable property to determine whether the foreign-key field is part of the primary key of the table. This is the table that contains the foreign-key field not the parent table.","pos":[0,200],"nodes":[{"content":"Use the IsPrimaryKeyInThisTable property to determine whether the foreign-key field is part of the primary key of the table.","pos":[0,124]},{"content":"This is the table that contains the foreign-key field not the parent table.","pos":[125,200]}]}]},{"pos":[18260,18461],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the foreign-key field is part of the primary key of the table; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the foreign-key field is part of the primary key of the table; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18980,19027],"content":"Gets the parent table of the foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parent table of the foreign-key field.","pos":[0,47]}]},{"pos":[19188,19230],"content":"The parent table of the foreign-key field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent table of the foreign-key field.","pos":[0,42]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.MetaForeignKeyColumn\n  id: MetaForeignKeyColumn\n  children:\n  - System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)\n  - System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames\n  - System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)\n  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)\n  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)\n  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)\n  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)\n  - System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)\n  - System.Web.DynamicData.MetaForeignKeyColumn.Initialize\n  - System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n  - System.Web.DynamicData.MetaForeignKeyColumn.ParentTable\n  langs:\n  - csharp\n  name: MetaForeignKeyColumn\n  nameWithType: MetaForeignKeyColumn\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn\n  type: Class\n  summary: Represents a database foreign-key field that is used by ASP.NET Dynamic Data.\n  remarks: \"In ASP.NET Dynamic Data applications, the MetaForeignKeyColumn class represents a database column that denotes a one-to-one relationship.  \\n  \\n The MetaForeignKeyColumn class represents the column in the table that contains the foreign-key field. However, you can access the parent table object by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable%2A> property. You can determine if the foreign-key field is a primary key in the table that contains it by using the <xref:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable%2A> property.\"\n  syntax:\n    content: 'public class MetaForeignKeyColumn : System.Web.DynamicData.MetaColumn'\n  inheritance:\n  - System.Object\n  - System.Web.DynamicData.MetaColumn\n  implements: []\n  inheritedMembers:\n  - System.Web.DynamicData.MetaColumn.AllowInitialValue\n  - System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode\n  - System.Web.DynamicData.MetaColumn.Attributes\n  - System.Web.DynamicData.MetaColumn.BuildAttributeCollection\n  - System.Web.DynamicData.MetaColumn.ColumnType\n  - System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull\n  - System.Web.DynamicData.MetaColumn.DataFormatString\n  - System.Web.DynamicData.MetaColumn.DataTypeAttribute\n  - System.Web.DynamicData.MetaColumn.DefaultValue\n  - System.Web.DynamicData.MetaColumn.Description\n  - System.Web.DynamicData.MetaColumn.DisplayName\n  - System.Web.DynamicData.MetaColumn.EntityTypeProperty\n  - System.Web.DynamicData.MetaColumn.FilterUIHint\n  - System.Web.DynamicData.MetaColumn.HtmlEncode\n  - System.Web.DynamicData.MetaColumn.IsBinaryData\n  - System.Web.DynamicData.MetaColumn.IsCustomProperty\n  - System.Web.DynamicData.MetaColumn.IsFloatingPoint\n  - System.Web.DynamicData.MetaColumn.IsForeignKeyComponent\n  - System.Web.DynamicData.MetaColumn.IsGenerated\n  - System.Web.DynamicData.MetaColumn.IsInteger\n  - System.Web.DynamicData.MetaColumn.IsLongString\n  - System.Web.DynamicData.MetaColumn.IsPrimaryKey\n  - System.Web.DynamicData.MetaColumn.IsReadOnly\n  - System.Web.DynamicData.MetaColumn.IsRequired\n  - System.Web.DynamicData.MetaColumn.IsString\n  - System.Web.DynamicData.MetaColumn.MaxLength\n  - System.Web.DynamicData.MetaColumn.Model\n  - System.Web.DynamicData.MetaColumn.Name\n  - System.Web.DynamicData.MetaColumn.NullDisplayText\n  - System.Web.DynamicData.MetaColumn.Prompt\n  - System.Web.DynamicData.MetaColumn.Provider\n  - System.Web.DynamicData.MetaColumn.RequiredErrorMessage\n  - System.Web.DynamicData.MetaColumn.ResetMetadata\n  - System.Web.DynamicData.MetaColumn.Scaffold\n  - System.Web.DynamicData.MetaColumn.ShortDisplayName\n  - System.Web.DynamicData.MetaColumn.SortExpression\n  - System.Web.DynamicData.MetaColumn.Table\n  - System.Web.DynamicData.MetaColumn.ToString\n  - System.Web.DynamicData.MetaColumn.TypeCode\n  - System.Web.DynamicData.MetaColumn.UIHint\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: '#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)'\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: MetaForeignKeyColumn(MetaTable,ColumnProvider)\n  nameWithType: MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaForeignKeyColumn\"></xref> class.\n  syntax:\n    content: public MetaForeignKeyColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);\n    parameters:\n    - id: table\n      type: System.Web.DynamicData.MetaTable\n      description: The entity meta table.\n    - id: entityMember\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The entity column provider.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)\n  id: ExtractForeignKey(System.Collections.IDictionary,System.String)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: ExtractForeignKey(IDictionary,String)\n  nameWithType: MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Saves the value of a foreign key in the specified dictionary.\n  remarks: The ExtractForeignKey method is used to save the value of a foreign key in the dictionary that contains all the new values for a data field. Typically, the ExtractForeignKey method is used when a new value is selected from a <xref:System.Web.UI.WebControls.DropDownList> control for the foreign key field.\n  syntax:\n    content: public void ExtractForeignKey (System.Collections.IDictionary dictionary, string value);\n    parameters:\n    - id: dictionary\n      type: System.Collections.IDictionary\n      description: A dictionary object that contains the new values for a data field.\n    - id: value\n      type: System.String\n      description: The value of the foreign key.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames\n  id: ForeignKeyNames\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: ForeignKeyNames\n  nameWithType: MetaForeignKeyColumn.ForeignKeyNames\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a collection that contains the names of the foreign keys in the association that represents a database relationship.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> ForeignKeyNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A collection that contains the names of the foreign keys.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)\n  id: GetFilterExpression(System.String)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: GetFilterExpression(String)\n  nameWithType: MetaForeignKeyColumn.GetFilterExpression(String)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the alternate name that is mapped to a foreign key.\n  remarks: This method returns the alternate name that is used in a filtering expression instead of the actual foreign-key name. If an alternate name does not exist, the method returns the actual name of the foreign key.\n  syntax:\n    content: public string GetFilterExpression (string foreignKeyName);\n    parameters:\n    - id: foreignKeyName\n      type: System.String\n      description: The name of the foreign key.\n    return:\n      type: System.String\n      description: The alternate name that is mapped to the foreign key.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)\n  id: GetForeignKeyDetailsPath(System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: GetForeignKeyDetailsPath(Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the path for the details action page of the parent table of the specified foreign-key field.\n  remarks: \"The GetForeignKeyDetailsPath method returns the path for the details action page based on the routes defined for the ASP.NET Dynamic Data application. This method returns an empty string, if `row` is `null`.  \\n  \\n Using the GetForeignKeyDetailsPath method is the same as invoking the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method passing the <xref:System.Web.DynamicData.PageAction.Details%2A> action as the first parameter.\"\n  syntax:\n    content: public string GetForeignKeyDetailsPath (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row that contains the foreign-key field.\n    return:\n      type: System.String\n      description: The path for the details action page of the parent table of the specified foreign-key field.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)\n  id: GetForeignKeyPath(System.String,System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: GetForeignKeyPath(String,Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the path for the specified action page of the parent table of the specified foreign-key field.\n  remarks: \"The GetForeignKeyPath method returns the path for the specified action page based on the routes defined for the ASP.NET Dynamic Data application. This method returns an empty string, if `row` is `null`.  \\n  \\n You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.\"\n  syntax:\n    content: public string GetForeignKeyPath (string action, object row);\n    parameters:\n    - id: action\n      type: System.String\n      description: The target action.\n    - id: row\n      type: System.Object\n      description: The row that contains the foreign-key field.\n    return:\n      type: System.String\n      description: The path for the specified action page of the parent table of the specified foreign-key field.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)\n  id: GetForeignKeyPath(System.String,System.Object,System.String)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: GetForeignKeyPath(String,Object,String)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the path for the specified action page of the parent table of the specified foreign-key field.\n  remarks: \"The <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath%28System.String%2CSystem.Object%29> method returns the path for the specified action page based on the specified `path`. This method returns an empty string, if `row` is `null`.  \\n  \\n You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.\"\n  syntax:\n    content: public string GetForeignKeyPath (string action, object row, string path);\n    parameters:\n    - id: action\n      type: System.String\n      description: The target action.\n    - id: row\n      type: System.Object\n      description: The row that contains the foreign-key field.\n    - id: path\n      type: System.String\n      description: The target page.\n    return:\n      type: System.String\n      description: The path for the specified action page of the parent table of the specified foreign-key field.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)\n  id: GetForeignKeyString(System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: GetForeignKeyString(Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyString(Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves a comma-separated list of values that represent the foreign-key for the specified row.\n  remarks: The GetForeignKeyString method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues%2A> method, but in a different format.\n  syntax:\n    content: public string GetForeignKeyString (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to retrieve the foreign-key values for.\n    return:\n      type: System.String\n      description: A comma-separated list of values that represent the foreign key for the specified row.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)\n  id: GetForeignKeyValues(System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: GetForeignKeyValues(Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyValues(Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves a collection of values that represent the foreign keys for the specified row.\n  remarks: The GetForeignKeyValues method returns the same values that are returned by the <xref:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString%2A> method, but in a different format.\n  syntax:\n    content: public System.Collections.Generic.IList<object> GetForeignKeyValues (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to retrieve the foreign-key values for.\n    return:\n      type: System.Collections.Generic.IList{System.Object}\n      description: A collection of values that represent the foreign keys for the specified row.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.Initialize\n  id: Initialize\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: MetaForeignKeyColumn.Initialize()\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes data that may not be available when the constructor is called.\n  remarks: This method cannot be called directly. To customize initialization, you can derive from this class and override the Initialize method. If you override this method, call the base control's `Initialize` method.\n  syntax:\n    content: protected override void Initialize ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n  id: IsPrimaryKeyInThisTable\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: IsPrimaryKeyInThisTable\n  nameWithType: MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the foreign-key field is part of the primary key of the table.\n  remarks: Use the IsPrimaryKeyInThisTable property to determine whether the foreign-key field is part of the primary key of the table. This is the table that contains the foreign-key field not the parent table.\n  syntax:\n    content: public bool IsPrimaryKeyInThisTable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the foreign-key field is part of the primary key of the table; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable\n  id: ParentTable\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  langs:\n  - csharp\n  name: ParentTable\n  nameWithType: MetaForeignKeyColumn.ParentTable\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the parent table of the foreign-key field.\n  syntax:\n    content: public System.Web.DynamicData.MetaTable ParentTable { get; }\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: The parent table of the foreign-key field.\n  overload: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.DynamicData.MetaColumn\n  isExternal: false\n  name: System.Web.DynamicData.MetaColumn\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: MetaForeignKeyColumn(MetaTable,ColumnProvider)\n  nameWithType: MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.MetaForeignKeyColumn(MetaTable,ColumnProvider)\n- uid: System.Web.DynamicData.MetaTable\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n- uid: System.Web.DynamicData.ModelProviders.ColumnProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: ColumnProvider\n  nameWithType: ColumnProvider\n  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: ExtractForeignKey(IDictionary,String)\n  nameWithType: MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(IDictionary,String)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: ForeignKeyNames\n  nameWithType: MetaForeignKeyColumn.ForeignKeyNames\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetFilterExpression(String)\n  nameWithType: MetaForeignKeyColumn.GetFilterExpression(String)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(String)\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyDetailsPath(Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyPath(String,Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object)\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyPath(String,Object,String)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(String,Object,String)\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyString(Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyString(Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(Object)\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyValues(Object)\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyValues(Object)\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(Object)\n- uid: System.Collections.Generic.IList{System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Object>\n  nameWithType: IList<Object>\n  fullName: System.Collections.Generic.IList<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.Initialize\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: Initialize()\n  nameWithType: MetaForeignKeyColumn.Initialize()\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.Initialize()\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: IsPrimaryKeyInThisTable\n  nameWithType: MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: ParentTable\n  nameWithType: MetaForeignKeyColumn.ParentTable\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.#ctor*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: MetaForeignKeyColumn\n  nameWithType: MetaForeignKeyColumn.MetaForeignKeyColumn\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: ExtractForeignKey\n  nameWithType: MetaForeignKeyColumn.ExtractForeignKey\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: ForeignKeyNames\n  nameWithType: MetaForeignKeyColumn.ForeignKeyNames\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetFilterExpression\n  nameWithType: MetaForeignKeyColumn.GetFilterExpression\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyDetailsPath\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyDetailsPath\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyPath\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyPath\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyString\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyString\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: GetForeignKeyValues\n  nameWithType: MetaForeignKeyColumn.GetForeignKeyValues\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.Initialize*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: Initialize\n  nameWithType: MetaForeignKeyColumn.Initialize\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: IsPrimaryKeyInThisTable\n  nameWithType: MetaForeignKeyColumn.IsPrimaryKeyInThisTable\n- uid: System.Web.DynamicData.MetaForeignKeyColumn.ParentTable*\n  parent: System.Web.DynamicData.MetaForeignKeyColumn\n  isExternal: false\n  name: ParentTable\n  nameWithType: MetaForeignKeyColumn.ParentTable\n"}