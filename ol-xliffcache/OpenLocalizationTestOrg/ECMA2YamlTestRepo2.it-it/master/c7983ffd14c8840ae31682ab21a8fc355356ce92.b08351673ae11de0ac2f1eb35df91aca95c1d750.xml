{"nodes":[{"pos":[1231,1286],"content":"Specifies information about a compiled expression root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies information about a compiled expression root.","pos":[0,55]}]},{"pos":[2251,2375],"content":"Indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can execute expression.","needQuote":true,"needEscape":true,"source":"Indicates whether the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression."},{"pos":[2664,2689],"content":"The expression text used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression text used.","pos":[0,25]}]},{"pos":[2758,2907],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if reference; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if reference; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3029,3057],"content":"The collection of locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of locations.","pos":[0,28]}]},{"pos":[3125,3151],"content":"The expression identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression identifier.","pos":[0,26]}]},{"pos":[3210,3455],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can execute expression; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4393,4442],"content":"Gets the expression tree used for the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the expression tree used for the expression.","pos":[0,49]}]},{"pos":[4732,4758],"content":"The expression identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression identifier.","pos":[0,26]}]},{"pos":[4889,4912],"content":"The location reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"The location reference.","pos":[0,23]}]},{"pos":[4991,5035],"content":"The expression tree used for the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression tree used for the expression.","pos":[0,44]}]},{"pos":[5630,5676],"content":"Gets the language used in the expression root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the language used in the expression root.","pos":[0,46]}]},{"pos":[5806,5824],"content":"The language used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The language used.","pos":[0,18]}]},{"pos":[6488,6548],"content":"Gets the list of required locations for the expression root.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the list of required locations for the expression root.","pos":[0,60]}]},{"pos":[6744,6770],"content":"The expression identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression identifier.","pos":[0,26]}]},{"pos":[6862,6917],"content":"The list of required locations for the expression root.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of required locations for the expression root.","pos":[0,55]}]},{"pos":[7740,7887],"content":"Invokes the <bpt id=\"p1\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified expression identifier and locations.","needQuote":true,"needEscape":true,"source":"Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations."},{"pos":[8117,8143],"content":"The expression identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression identifier.","pos":[0,26]}]},{"pos":[8256,8275],"content":"The locations used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locations used.","pos":[0,19]}]},{"pos":[8333,8356],"content":"The invoked expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The invoked expression.","pos":[0,23]}]},{"pos":[9336,9504],"content":"Invokes the <bpt id=\"p1\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified expression identifier and locations and activity context.","needQuote":true,"needEscape":true,"source":"Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations and activity context."},{"pos":[9794,9820],"content":"The expression identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The expression identifier.","pos":[0,26]}]},{"pos":[9942,9956],"content":"The locations.","needQuote":true,"needEscape":true,"nodes":[{"content":"The locations.","pos":[0,14]}]},{"pos":[10048,10069],"content":"The activity context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity context.","pos":[0,21]}]},{"pos":[10127,10150],"content":"The invoked expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The invoked expression.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  id: ICompiledExpressionRoot\n  children:\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  langs:\n  - csharp\n  name: ICompiledExpressionRoot\n  nameWithType: ICompiledExpressionRoot\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  type: Interface\n  summary: Specifies information about a compiled expression root.\n  syntax:\n    content: public interface ICompiledExpressionRoot\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  id: CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Indicates whether the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression.\n  syntax:\n    content: public bool CanExecuteExpression (string expressionText, bool isReference, System.Collections.Generic.IList<System.Activities.LocationReference> locations, out int expressionId);\n    parameters:\n    - id: expressionText\n      type: System.String\n      description: The expression text used.\n    - id: isReference\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if reference; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: The collection of locations.\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref> if the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  id: GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Gets the expression tree used for the expression.\n  syntax:\n    content: public System.Linq.Expressions.Expression GetExpressionTreeForExpression (int expressionId, System.Collections.Generic.IList<System.Activities.LocationReference> locationReferences);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    - id: locationReferences\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: The location reference.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The expression tree used for the expression.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  id: GetLanguage\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetLanguage()\n  nameWithType: ICompiledExpressionRoot.GetLanguage()\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Gets the language used in the expression root.\n  syntax:\n    content: public string GetLanguage ();\n    parameters: []\n    return:\n      type: System.String\n      description: The language used.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  id: GetRequiredLocations(System.Int32)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetRequiredLocations(Int32)\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Gets the list of required locations for the expression root.\n  syntax:\n    content: public System.Collections.Generic.IList<string> GetRequiredLocations (int expressionId);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: The list of required locations for the expression root.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  id: InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: InvokeExpression(Int32,IList<Location>)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations.\n  syntax:\n    content: public object InvokeExpression (int expressionId, System.Collections.Generic.IList<System.Activities.Location> locations);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.Location}\n      description: The locations used.\n    return:\n      type: System.Object\n      description: The invoked expression.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  id: InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations and activity context.\n  syntax:\n    content: public object InvokeExpression (int expressionId, System.Collections.Generic.IList<System.Activities.LocationReference> locations, System.Activities.ActivityContext activityContext);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: The locations.\n    - id: activityContext\n      type: System.Activities.ActivityContext\n      description: The activity context.\n    return:\n      type: System.Object\n      description: The invoked expression.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(String,Boolean,IList<LocationReference>,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IList{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<LocationReference>\n  nameWithType: IList<LocationReference>\n  fullName: System.Collections.Generic.IList<System.Activities.LocationReference>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Activities.LocationReference>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.LocationReference\n    name: LocationReference\n    nameWithType: LocationReference\n    fullName: LocationReference\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32,IList<LocationReference>)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetLanguage()\n  nameWithType: ICompiledExpressionRoot.GetLanguage()\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage()\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetRequiredLocations(Int32)\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(Int32)\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression(Int32,IList<Location>)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<Location>)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IList{System.Activities.Location}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<Location>\n  nameWithType: IList<Location>\n  fullName: System.Collections.Generic.IList<System.Activities.Location>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Activities.Location>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Location\n    name: Location\n    nameWithType: Location\n    fullName: Location\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(Int32,IList<LocationReference>,ActivityContext)\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: CanExecuteExpression\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetExpressionTreeForExpression\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetLanguage\n  nameWithType: ICompiledExpressionRoot.GetLanguage\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetRequiredLocations\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression\n  nameWithType: ICompiledExpressionRoot.InvokeExpression\n"}