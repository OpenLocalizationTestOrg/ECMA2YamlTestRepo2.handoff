{"nodes":[{"pos":[732,840],"content":"The segment of a query that indicates whether data should be returned inline instead of as deferred content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The segment of a query that indicates whether data should be returned inline instead of as deferred content.","pos":[0,108]}]},{"pos":[853,1381],"content":"An `$expand`clause indicates that each `$expand`item should be fully expanded. For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.       The left-most property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.       Redundant expand clause rules are acceptable and ignored.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"An <ph id=\"ph1\">`$expand`</ph>clause indicates that each <ph id=\"ph2\">`$expand`</ph>item should be fully expanded.","pos":[0,78],"source":"An `$expand`clause indicates that each `$expand`item should be fully expanded."},{"content":"For example, the value <ph id=\"ph1\">`OrderLines.Product.Image`</ph> with <ph id=\"ph2\">`$expand`</ph> causes <ph id=\"ph3\">`OrderLines`</ph>, the <ph id=\"ph4\">`Product`</ph> of each element in <ph id=\"ph5\">`OrderLines`</ph>, and the <ph id=\"ph6\">`Image`</ph> of the <ph id=\"ph7\">`Product`</ph> of each element in <ph id=\"ph8\">`OrderLines`</ph> to be expanded.","pos":[79,292],"source":" For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded."},{"content":"The left-most property in an <ph id=\"ph1\">`$expand`</ph> clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.","pos":[299,460],"source":"       The left-most property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI."},{"content":"Redundant expand clause rules are acceptable and ignored.","pos":[467,524]}]},{"pos":[2327,2480],"content":"Initializes an <bpt id=\"p1\">&lt;xref href=\"System.Data.Services.ExpandSegment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the specified property name and a filtering expression, possibly null.","needQuote":true,"needEscape":true,"source":"Initializes an <xref href=\"System.Data.Services.ExpandSegment\"></xref> object with the specified property name and a filtering expression, possibly null."},{"pos":[2659,2699],"content":"The name of the property to be expanded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to be expanded.","pos":[0,40]}]},{"pos":[2783,2850],"content":"The filter option in the query to which the expand segment applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter option in the query to which the expand segment applies.","pos":[0,67]}]},{"pos":[3329,3362],"content":"Gets the property to be expanded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the property to be expanded.","pos":[0,33]}]},{"pos":[3558,3581],"content":"The property to expand.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property to expand.","pos":[0,23]}]},{"pos":[4021,4088],"content":"The filter option in the query to which the expand segment applies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The filter option in the query to which the expand segment applies.","pos":[0,67]}]},{"pos":[4248,4303],"content":"An expression that specifies the filter on target data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An expression that specifies the filter on target data.","pos":[0,55]}]},{"pos":[4748,4841],"content":"A Boolean value that indicates whether the expand statement is used with a filter expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value that indicates whether the expand statement is used with a filter expression.","pos":[0,93]}]},{"pos":[4954,4968],"content":"True or false.","needQuote":true,"needEscape":true,"nodes":[{"content":"True or false.","pos":[0,14]}]},{"pos":[5461,5505],"content":"Gets the maximum number of results expected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the maximum number of results expected.","pos":[0,44]}]},{"pos":[5517,5665],"content":"To enable the data service to detect a failure to meet this constraint, expand providers should return no more than MaxResultsExpected + 1 elements.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"To enable the data service to detect a failure to meet this constraint, expand providers should return no more than MaxResultsExpected + 1 elements.","pos":[0,148]}]},{"pos":[5784,5843],"content":"The integer value that indicates maximum number of results.","needQuote":true,"needEscape":true,"nodes":[{"content":"The integer value that indicates maximum number of results.","pos":[0,59]}]},{"pos":[6275,6315],"content":"The name of the property to be expanded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to be expanded.","pos":[0,40]}]},{"pos":[6424,6475],"content":"A string value containing the name of the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string value containing the name of the property.","pos":[0,51]}]},{"pos":[7172,7260],"content":"A Boolean value that indicates whether the path includes a filter option on target data.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean value that indicates whether the path includes a filter option on target data.","pos":[0,88]}]},{"pos":[7537,7586],"content":"The enumeration of segments to check for filters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The enumeration of segments to check for filters.","pos":[0,49]}]},{"pos":[7645,7715],"content":"True if any of the segments in the path has a filter; false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"True if any of the segments in the path has a filter; false otherwise.","pos":[0,70]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.ExpandSegment\n  id: ExpandSegment\n  children:\n  - System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)\n  - System.Data.Services.ExpandSegment.ExpandedProperty\n  - System.Data.Services.ExpandSegment.Filter\n  - System.Data.Services.ExpandSegment.HasFilter\n  - System.Data.Services.ExpandSegment.MaxResultsExpected\n  - System.Data.Services.ExpandSegment.Name\n  - System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  langs:\n  - csharp\n  name: ExpandSegment\n  nameWithType: ExpandSegment\n  fullName: System.Data.Services.ExpandSegment\n  type: Class\n  summary: The segment of a query that indicates whether data should be returned inline instead of as deferred content.\n  remarks: \"An `$expand`clause indicates that each `$expand`item should be fully expanded. For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.  \\n  \\n The left-most property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.  \\n  \\n Redundant expand clause rules are acceptable and ignored.\"\n  example:\n  - \"The following URI expands the `OrderLines` associated with each `Order` returned by the query.  \\n  \\n```  \\nhttp://host/service.svc/Orders?$expand=OrderLines  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"ExpandSegment ({name},Filter={filter})]\")]\n\n      public class ExpandSegment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)\n  id: '#ctor(System.String,System.Linq.Expressions.Expression)'\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: ExpandSegment(String,Expression)\n  nameWithType: ExpandSegment.ExpandSegment(String,Expression)\n  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Initializes an <xref href=\"System.Data.Services.ExpandSegment\"></xref> object with the specified property name and a filtering expression, possibly null.\n  syntax:\n    content: public ExpandSegment (string name, System.Linq.Expressions.Expression filter);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to be expanded.\n    - id: filter\n      type: System.Linq.Expressions.Expression\n      description: The filter option in the query to which the expand segment applies.\n  overload: System.Data.Services.ExpandSegment.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.ExpandedProperty\n  id: ExpandedProperty\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: ExpandedProperty\n  nameWithType: ExpandSegment.ExpandedProperty\n  fullName: System.Data.Services.ExpandSegment.ExpandedProperty\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Gets the property to be expanded.\n  syntax:\n    content: public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }\n    return:\n      type: System.Data.Services.Providers.ResourceProperty\n      description: The property to expand.\n  overload: System.Data.Services.ExpandSegment.ExpandedProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.Filter\n  id: Filter\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: ExpandSegment.Filter\n  fullName: System.Data.Services.ExpandSegment.Filter\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: The filter option in the query to which the expand segment applies.\n  syntax:\n    content: public System.Linq.Expressions.Expression Filter { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: An expression that specifies the filter on target data.\n  overload: System.Data.Services.ExpandSegment.Filter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.HasFilter\n  id: HasFilter\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: HasFilter\n  nameWithType: ExpandSegment.HasFilter\n  fullName: System.Data.Services.ExpandSegment.HasFilter\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: A Boolean value that indicates whether the expand statement is used with a filter expression.\n  syntax:\n    content: public bool HasFilter { get; }\n    return:\n      type: System.Boolean\n      description: True or false.\n  overload: System.Data.Services.ExpandSegment.HasFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.MaxResultsExpected\n  id: MaxResultsExpected\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: MaxResultsExpected\n  nameWithType: ExpandSegment.MaxResultsExpected\n  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Gets the maximum number of results expected.\n  remarks: To enable the data service to detect a failure to meet this constraint, expand providers should return no more than MaxResultsExpected + 1 elements.\n  syntax:\n    content: public int MaxResultsExpected { get; }\n    return:\n      type: System.Int32\n      description: The integer value that indicates maximum number of results.\n  overload: System.Data.Services.ExpandSegment.MaxResultsExpected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.Name\n  id: Name\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ExpandSegment.Name\n  fullName: System.Data.Services.ExpandSegment.Name\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: The name of the property to be expanded.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: A string value containing the name of the property.\n  overload: System.Data.Services.ExpandSegment.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  id: PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: PathHasFilter(IEnumerable<ExpandSegment>)\n  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n  type: Method\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: A Boolean value that indicates whether the path includes a filter option on target data.\n  syntax:\n    content: public static bool PathHasFilter (System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment> path);\n    parameters:\n    - id: path\n      type: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}\n      description: The enumeration of segments to check for filters.\n    return:\n      type: System.Boolean\n      description: True if any of the segments in the path has a filter; false otherwise.\n  overload: System.Data.Services.ExpandSegment.PathHasFilter*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: ExpandSegment(String,Expression)\n  nameWithType: ExpandSegment.ExpandSegment(String,Expression)\n  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Data.Services.ExpandSegment.ExpandedProperty\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: ExpandedProperty\n  nameWithType: ExpandSegment.ExpandedProperty\n  fullName: System.Data.Services.ExpandSegment.ExpandedProperty\n- uid: System.Data.Services.Providers.ResourceProperty\n  parent: System.Data.Services.Providers\n  isExternal: false\n  name: ResourceProperty\n  nameWithType: ResourceProperty\n  fullName: System.Data.Services.Providers.ResourceProperty\n- uid: System.Data.Services.ExpandSegment.Filter\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: Filter\n  nameWithType: ExpandSegment.Filter\n  fullName: System.Data.Services.ExpandSegment.Filter\n- uid: System.Data.Services.ExpandSegment.HasFilter\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: HasFilter\n  nameWithType: ExpandSegment.HasFilter\n  fullName: System.Data.Services.ExpandSegment.HasFilter\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Services.ExpandSegment.MaxResultsExpected\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: MaxResultsExpected\n  nameWithType: ExpandSegment.MaxResultsExpected\n  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Services.ExpandSegment.Name\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: Name\n  nameWithType: ExpandSegment.Name\n  fullName: System.Data.Services.ExpandSegment.Name\n- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: PathHasFilter(IEnumerable<ExpandSegment>)\n  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n- uid: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ExpandSegment>\n  nameWithType: IEnumerable<ExpandSegment>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Data.Services.ExpandSegment>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Services.ExpandSegment\n    name: ExpandSegment\n    nameWithType: ExpandSegment\n    fullName: ExpandSegment\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Services.ExpandSegment.#ctor*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: ExpandSegment\n  nameWithType: ExpandSegment.ExpandSegment\n- uid: System.Data.Services.ExpandSegment.ExpandedProperty*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: ExpandedProperty\n  nameWithType: ExpandSegment.ExpandedProperty\n- uid: System.Data.Services.ExpandSegment.Filter*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: Filter\n  nameWithType: ExpandSegment.Filter\n- uid: System.Data.Services.ExpandSegment.HasFilter*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: HasFilter\n  nameWithType: ExpandSegment.HasFilter\n- uid: System.Data.Services.ExpandSegment.MaxResultsExpected*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: MaxResultsExpected\n  nameWithType: ExpandSegment.MaxResultsExpected\n- uid: System.Data.Services.ExpandSegment.Name*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: Name\n  nameWithType: ExpandSegment.Name\n- uid: System.Data.Services.ExpandSegment.PathHasFilter*\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: PathHasFilter\n  nameWithType: ExpandSegment.PathHasFilter\n"}