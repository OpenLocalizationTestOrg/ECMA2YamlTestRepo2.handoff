{"nodes":[{"pos":[798,833],"content":"Represents a reference to a method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a reference to a method.","pos":[0,35]}]},{"pos":[846,1436],"content":"A CodeMethodReferenceExpression can be used to represent an expression of the form Object.Method.       The <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> property indicates the object that contains the method. The <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> property indicates the name of the method.       A CodeMethodReferenceExpression is used with a <xref:System.CodeDom.CodeMethodInvokeExpression> to indicate the method to invoke, and with a <xref:System.CodeDom.CodeDelegateCreateExpression> to indicate the method to handle the event.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"A CodeMethodReferenceExpression can be used to represent an expression of the form Object.Method.       The <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> property indicates the object that contains the method. The <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> property indicates the name of the method.       A CodeMethodReferenceExpression is used with a <xref:System.CodeDom.CodeMethodInvokeExpression> to indicate the method to invoke, and with a <xref:System.CodeDom.CodeDelegateCreateExpression> to indicate the method to handle the event.","pos":[0,586],"nodes":[{"content":"A CodeMethodReferenceExpression can be used to represent an expression of the form Object.Method.","pos":[0,97]},{"content":"The &lt;xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A&gt; property indicates the object that contains the method.","pos":[104,231],"source":"       The <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> property indicates the object that contains the method."},{"content":"The &lt;xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A&gt; property indicates the name of the method.","pos":[232,344],"source":" The <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> property indicates the name of the method."},{"content":"A CodeMethodReferenceExpression is used with a &lt;xref:System.CodeDom.CodeMethodInvokeExpression&gt; to indicate the method to invoke, and with a &lt;xref:System.CodeDom.CodeDelegateCreateExpression&gt; to indicate the method to handle the event.","pos":[351,586],"source":"       A CodeMethodReferenceExpression is used with a <xref:System.CodeDom.CodeMethodInvokeExpression> to indicate the method to invoke, and with a <xref:System.CodeDom.CodeDelegateCreateExpression> to indicate the method to handle the event."}]}]},{"pos":[2771,2877],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeMethodReferenceExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref> class."},{"pos":[3656,3812],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeMethodReferenceExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified target object and method name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref> class using the specified target object and method name."},{"pos":[4038,4127],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the object to target.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the object to target."},{"pos":[4194,4225],"content":"The name of the method to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to call.","pos":[0,31]}]},{"pos":[5051,5232],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeMethodReferenceExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified target object, method name, and generic type arguments.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref> class using the specified target object, method name, and generic type arguments."},{"pos":[5244,5400],"content":"The <ph id=\"ph1\">`typeParameters`</ph> parameter represents a collection of type references to be substituted for the type parameter references of the current generic method.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The `typeParameters` parameter represents a collection of type references to be substituted for the type parameter references of the current generic method."},{"pos":[6117,6206],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the object to target.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the object to target."},{"pos":[6273,6304],"content":"The name of the method to call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to call.","pos":[0,31]}]},{"pos":[6396,6628],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specify the &lt;xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*&gt; for this <bpt id=\"p2\">&lt;xref href=\"System.CodeDom.CodeMethodReferenceExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> values that specify the <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*> for this <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref>."},{"pos":[7113,7162],"content":"Gets or sets the name of the method to reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the method to reference.","pos":[0,49]}]},{"pos":[7282,7318],"content":"The name of the method to reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method to reference.","pos":[0,36]}]},{"pos":[7818,7885],"content":"Gets or sets the expression that indicates the method to reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the expression that indicates the method to reference.","pos":[0,67]}]},{"pos":[8046,8139],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the method to reference.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that represents the method to reference."},{"pos":[8646,8722],"content":"Gets the type arguments for the current generic method reference expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type arguments for the current generic method reference expression.","pos":[0,76]}]},{"pos":[8734,8886],"content":"The TypeArguments property represents a collection of type references to be substituted for the type parameter references of the current generic method.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The TypeArguments property represents a collection of type references to be substituted for the type parameter references of the current generic method.","pos":[0,152]}]},{"pos":[9069,9252],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReferenceCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the type arguments for the current code <bpt id=\"p2\">&lt;xref href=\"System.CodeDom.CodeMethodReferenceExpression\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> containing the type arguments for the current code <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeMethodReferenceExpression\n  id: CodeMethodReferenceExpression\n  children:\n  - System.CodeDom.CodeMethodReferenceExpression.#ctor\n  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)\n  - System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])\n  - System.CodeDom.CodeMethodReferenceExpression.MethodName\n  - System.CodeDom.CodeMethodReferenceExpression.TargetObject\n  - System.CodeDom.CodeMethodReferenceExpression.TypeArguments\n  langs:\n  - csharp\n  name: CodeMethodReferenceExpression\n  nameWithType: CodeMethodReferenceExpression\n  fullName: System.CodeDom.CodeMethodReferenceExpression\n  type: Class\n  summary: Represents a reference to a method.\n  remarks: \"A CodeMethodReferenceExpression can be used to represent an expression of the form Object.Method.  \\n  \\n The <xref:System.CodeDom.CodeMethodReferenceExpression.TargetObject%2A> property indicates the object that contains the method. The <xref:System.CodeDom.CodeMethodReferenceExpression.MethodName%2A> property indicates the name of the method.  \\n  \\n A CodeMethodReferenceExpression is used with a <xref:System.CodeDom.CodeMethodInvokeExpression> to indicate the method to invoke, and with a <xref:System.CodeDom.CodeDelegateCreateExpression> to indicate the method to handle the event.\"\n  example:\n  - \"The following code example uses a CodeMethodReferenceExpression to refer to a method:  \\n  \\n [!code-cs[CodeMethodReferenceExample#3](~/add/codesnippet/csharp/t-system.codedom.codemet_1_1.cs)]\\n [!code-vb[CodeMethodReferenceExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codemet_1_1.vb)]\\n [!code-cpp[CodeMethodReferenceExample#3](~/add/codesnippet/cpp/t-system.codedom.codemet_1_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeMethodReferenceExpression : System.CodeDom.CodeExpression\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeExpression\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  platform:\n  - net462\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  langs:\n  - csharp\n  name: CodeMethodReferenceExpression()\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()\n  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref> class.\n  syntax:\n    content: public CodeMethodReferenceExpression ();\n    parameters: []\n  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)\n  id: '#ctor(System.CodeDom.CodeExpression,System.String)'\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  langs:\n  - csharp\n  name: CodeMethodReferenceExpression(CodeExpression,String)\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)\n  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref> class using the specified target object and method name.\n  syntax:\n    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName);\n    parameters:\n    - id: targetObject\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the object to target.\n    - id: methodName\n      type: System.String\n      description: The name of the method to call.\n  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])\n  id: '#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])'\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  langs:\n  - csharp\n  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])\n  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref> class using the specified target object, method name, and generic type arguments.\n  remarks: The `typeParameters` parameter represents a collection of type references to be substituted for the type parameter references of the current generic method.\n  example:\n  - \"The following code example shows the use of this constructor.  \\n  \\n [!code-cs[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/csharp/c13bd512-df02-4e88-9c27-_1.cs)]\\n [!code-vb[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/visualbasic/c13bd512-df02-4e88-9c27-_1.vb)]\\n [!code-cpp[System.CodeDom.CodeMethodReferenceExpression#1](~/add/codesnippet/cpp/c13bd512-df02-4e88-9c27-_1.cpp)]\"\n  syntax:\n    content: public CodeMethodReferenceExpression (System.CodeDom.CodeExpression targetObject, string methodName, System.CodeDom.CodeTypeReference[] typeParameters);\n    parameters:\n    - id: targetObject\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the object to target.\n    - id: methodName\n      type: System.String\n      description: The name of the method to call.\n    - id: typeParameters\n      type: System.CodeDom.CodeTypeReference[]\n      description: An array of <xref href=\"System.CodeDom.CodeTypeReference\"></xref> values that specify the <xref:System.CodeDom.CodeMethodReferenceExpression.TypeArguments*> for this <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref>.\n  overload: System.CodeDom.CodeMethodReferenceExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName\n  id: MethodName\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: CodeMethodReferenceExpression.MethodName\n  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the name of the method to reference.\n  syntax:\n    content: public string MethodName { get; set; }\n    return:\n      type: System.String\n      description: The name of the method to reference.\n  overload: System.CodeDom.CodeMethodReferenceExpression.MethodName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject\n  id: TargetObject\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  langs:\n  - csharp\n  name: TargetObject\n  nameWithType: CodeMethodReferenceExpression.TargetObject\n  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the expression that indicates the method to reference.\n  syntax:\n    content: public System.CodeDom.CodeExpression TargetObject { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that represents the method to reference.\n  overload: System.CodeDom.CodeMethodReferenceExpression.TargetObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments\n  id: TypeArguments\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  langs:\n  - csharp\n  name: TypeArguments\n  nameWithType: CodeMethodReferenceExpression.TypeArguments\n  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets the type arguments for the current generic method reference expression.\n  remarks: The TypeArguments property represents a collection of type references to be substituted for the type parameter references of the current generic method.\n  syntax:\n    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }\n    return:\n      type: System.CodeDom.CodeTypeReferenceCollection\n      description: A <xref href=\"System.CodeDom.CodeTypeReferenceCollection\"></xref> containing the type arguments for the current code <xref href=\"System.CodeDom.CodeMethodReferenceExpression\"></xref>.\n  overload: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeExpression\n  isExternal: false\n  name: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: CodeMethodReferenceExpression()\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression()\n  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression()\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: CodeMethodReferenceExpression(CodeExpression,String)\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)\n  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])\n  fullName: System.CodeDom.CodeMethodReferenceExpression.CodeMethodReferenceExpression(CodeExpression,String,CodeTypeReference[])\n- uid: System.CodeDom.CodeTypeReference[]\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference[]\n  spec.csharp:\n  - uid: System.CodeDom.CodeTypeReference\n    name: CodeTypeReference\n    nameWithType: CodeTypeReference\n    fullName: CodeTypeReference[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: MethodName\n  nameWithType: CodeMethodReferenceExpression.MethodName\n  fullName: System.CodeDom.CodeMethodReferenceExpression.MethodName\n- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: TargetObject\n  nameWithType: CodeMethodReferenceExpression.TargetObject\n  fullName: System.CodeDom.CodeMethodReferenceExpression.TargetObject\n- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: TypeArguments\n  nameWithType: CodeMethodReferenceExpression.TypeArguments\n  fullName: System.CodeDom.CodeMethodReferenceExpression.TypeArguments\n- uid: System.CodeDom.CodeTypeReferenceCollection\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReferenceCollection\n  nameWithType: CodeTypeReferenceCollection\n  fullName: System.CodeDom.CodeTypeReferenceCollection\n- uid: System.CodeDom.CodeMethodReferenceExpression.#ctor*\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: CodeMethodReferenceExpression\n  nameWithType: CodeMethodReferenceExpression.CodeMethodReferenceExpression\n- uid: System.CodeDom.CodeMethodReferenceExpression.MethodName*\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: MethodName\n  nameWithType: CodeMethodReferenceExpression.MethodName\n- uid: System.CodeDom.CodeMethodReferenceExpression.TargetObject*\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: TargetObject\n  nameWithType: CodeMethodReferenceExpression.TargetObject\n- uid: System.CodeDom.CodeMethodReferenceExpression.TypeArguments*\n  parent: System.CodeDom.CodeMethodReferenceExpression\n  isExternal: false\n  name: TypeArguments\n  nameWithType: CodeMethodReferenceExpression.TypeArguments\n"}