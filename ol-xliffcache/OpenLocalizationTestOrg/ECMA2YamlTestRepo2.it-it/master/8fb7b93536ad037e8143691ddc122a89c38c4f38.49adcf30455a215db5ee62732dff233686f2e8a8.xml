{"nodes":[{"pos":[2916,3086],"content":"Provides an extension of <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that accounts for the additional property characteristics of a dependency property.","needQuote":true,"needEscape":true,"source":"Provides an extension of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that accounts for the additional property characteristics of a dependency property."},{"pos":[3099,3921],"content":"This class is primarily used by designer applications. These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.       In order to check a specific property to determine whether it has DependencyPropertyDescriptor available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>. If either method returns `null`, then the property is not a dependency property. If the method returns a valid DependencyPropertyDescriptor , then the property is a dependency property.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class is primarily used by designer applications.","pos":[0,54]},{"content":"These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.","pos":[55,206]},{"content":"In order to check a specific property to determine whether it has DependencyPropertyDescriptor available to serve as a &lt;xref:System.ComponentModel.PropertyDescriptor&gt;, call either &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName&gt;, or &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName&gt;.","pos":[213,634],"source":"       In order to check a specific property to determine whether it has DependencyPropertyDescriptor available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>."},{"content":"If either method returns <ph id=\"ph1\">`null`</ph>, then the property is not a dependency property.","pos":[635,715],"source":" If either method returns `null`, then the property is not a dependency property."},{"content":"If the method returns a valid DependencyPropertyDescriptor , then the property is a dependency property.","pos":[716,820]}]},{"pos":[6191,6255],"content":"Enables other objects to be notified when this property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables other objects to be notified when this property changes.","pos":[0,64]}]},{"pos":[6439,6476],"content":"The component to add the handler for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to add the handler for.","pos":[0,37]}]},{"pos":[6546,6580],"content":"The delegate to add as a listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to add as a listener.","pos":[0,34]}]},{"pos":[7110,7160],"content":"Gets the collection of attributes for this member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of attributes for this member.","pos":[0,50]}]},{"pos":[7347,7439],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.AttributeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection of attributes.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.AttributeCollection\"></xref> collection of attributes."},{"pos":[8031,8085],"content":"Returns whether resetting an object changes its value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns whether resetting an object changes its value.","pos":[0,54]}]},{"pos":[8097,8182],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[8342,8385],"content":"The component to test for reset capability.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to test for reset capability.","pos":[0,43]}]},{"pos":[8444,8625],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if resetting the component changes its value; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if resetting the component changes its value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9143,9282],"content":"Gets the name of the category that the member belongs to, as specified in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CategoryAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name of the category that the member belongs to, as specified in the <xref href=\"System.ComponentModel.CategoryAttribute\"></xref>."},{"pos":[9294,9381],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[9503,9745],"content":"The name of the category to which the member belongs. If there is no <xref href=\"System.ComponentModel.CategoryAttribute\"></xref>, the category name is set to the default category, <xref uid=\"langword_csharp_Misc\" name=\"Misc\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the category to which the member belongs.","pos":[0,53]},{"content":"If there is no <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.CategoryAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the category name is set to the default category, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Misc\" name=\"Misc\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[54,242],"source":" If there is no <xref href=\"System.ComponentModel.CategoryAttribute\"></xref>, the category name is set to the default category, <xref uid=\"langword_csharp_Misc\" name=\"Misc\" href=\"\"></xref>."}]},{"pos":[10283,10340],"content":"Gets the type of the component this property is bound to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the component this property is bound to.","pos":[0,57]}]},{"pos":[10352,10439],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[10562,10860],"content":"A <xref:System.Type> that represents the type of component this property is bound to. When <xref:System.ComponentModel.DependencyPropertyDescriptor.GetValue*> or <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*> are invoked, the object specified might be an instance of this type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Type&gt; that represents the type of component this property is bound to.","pos":[0,85],"source":"A <xref:System.Type> that represents the type of component this property is bound to."},{"content":"When &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.GetValue<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue<ept id=\"p1\">*</ept>&gt; are invoked, the object specified might be an instance of this type.","pos":[86,298],"source":" When <xref:System.ComponentModel.DependencyPropertyDescriptor.GetValue*> or <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*> are invoked, the object specified might be an instance of this type."}]},{"pos":[11383,11425],"content":"Gets the type converter for this property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type converter for this property.","pos":[0,42]}]},{"pos":[11437,11560],"content":"This property may be <ph id=\"ph1\">`null`</ph> in cases where the attributed &lt;xref:System.ComponentModel.TypeConverter&gt; is not a public class.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class."},{"pos":[11734,11857],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to convert the &lt;xref:System.Type&gt; of this property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> that is used to convert the <xref:System.Type> of this property."},{"pos":[12421,12464],"content":"Returns the dependency property identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the dependency property identifier.","pos":[0,43]}]},{"pos":[12476,12637],"content":"This property may be <ph id=\"ph1\">`null`</ph> if a &lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt; instance was created for a property that is not a dependency property.","needQuote":true,"needEscape":true,"extradata":"MT","source":"This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property."},{"pos":[12807,12842],"content":"The dependency property identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency property identifier.","pos":[0,35]}]},{"pos":[13380,13500],"content":"Gets the description of the member, as specified in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DescriptionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the description of the member, as specified in the <xref href=\"System.ComponentModel.DescriptionAttribute\"></xref>."},{"pos":[13512,13599],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[13724,13907],"content":"The description of the member. If there is no <xref href=\"System.ComponentModel.DescriptionAttribute\"></xref>, the property value is set to the default, which is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The description of the member.","pos":[0,30]},{"content":"If there is no <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DescriptionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the property value is set to the default, which is an empty string (\"\").","pos":[31,183],"source":" If there is no <xref href=\"System.ComponentModel.DescriptionAttribute\"></xref>, the property value is set to the default, which is an empty string (\"\")."}]},{"pos":[14518,14697],"content":"Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.","pos":[0,179]}]},{"pos":[14883,15049],"content":"A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.","pos":[0,166]}]},{"pos":[15611,15754],"content":"Gets whether this member should be set only at design time, as specified in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignOnlyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets whether this member should be set only at design time, as specified in the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>."},{"pos":[15766,15853],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[15980,16380],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member should be set only at design time; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the member can be set during run time. If there is no <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, the return value is the default, which is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this member should be set only at design time; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the member can be set during run time.","pos":[0,215],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member should be set only at design time; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the member can be set during run time."},{"content":"If there is no <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignOnlyAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, the return value is the default, which is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[216,400],"source":" If there is no <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, the return value is the default, which is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[16914,16991],"content":"Gets the name that can be displayed in a window, such as a Properties window.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name that can be displayed in a window, such as a Properties window.","pos":[0,77]}]},{"pos":[17003,17090],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[17215,17252],"content":"The name to display for the property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name to display for the property.","pos":[0,37]}]},{"pos":[17810,17918],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> instances for equality."},{"pos":[18059,18172],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare with the current instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> to compare with the current instance."},{"pos":[18231,18396],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the values are equivalent; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the values are equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19037,19148],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a provided property name.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided property name."},{"pos":[19160,19820],"content":"The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question. `ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>. `targetType` is the type of object you want to set the property for. For dependency properties, `ownerType` and `targetType` are the same type. For attached properties they usually differ.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id=\"ph2\">`name`</ph> parameter as passed to the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; call that defined the property in question.","pos":[0,276],"source":"The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question."},{"content":"<ph id=\"ph1\">`ownerType`</ph> is the type of object that owns the property, again as passed to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;.","pos":[277,471],"source":"`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>."},{"content":"<ph id=\"ph1\">`targetType`</ph> is the type of object you want to set the property for.","pos":[472,540],"source":"`targetType` is the type of object you want to set the property for."},{"content":"For dependency properties, <ph id=\"ph1\">`ownerType`</ph> and <ph id=\"ph2\">`targetType`</ph> are the same type.","pos":[541,615],"source":" For dependency properties, `ownerType` and `targetType` are the same type."},{"content":"For attached properties they usually differ.","pos":[616,660]}]},{"pos":[20042,20111],"content":"The registered name of a dependency property or an attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The registered name of a dependency property or an attached property.","pos":[0,69]}]},{"pos":[20175,20246],"content":"The <xref:System.Type> of the object that owns the property definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the object that owns the property definition.","pos":[0,71],"source":"The <xref:System.Type> of the object that owns the property definition."}]},{"pos":[20311,20381],"content":"The <xref:System.Type> of the object you want to set the property for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the object you want to set the property for.","pos":[0,70],"source":"The <xref:System.Type> of the object you want to set the property for."}]},{"pos":[20476,20562],"content":"The requested <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The requested <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>."},{"pos":[21259,21370],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a provided property name.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided property name."},{"pos":[21382,22042],"content":"The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question. `ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>. `targetType` is the type of object you want to set the property for. For dependency properties, `ownerType` and `targetType` are the same type. For attached properties they usually differ.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`name`</ph> may refer to a dependency property or an attached property, and is the <ph id=\"ph2\">`name`</ph> parameter as passed to the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; call that defined the property in question.","pos":[0,276],"source":"The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question."},{"content":"<ph id=\"ph1\">`ownerType`</ph> is the type of object that owns the property, again as passed to &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; or &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;.","pos":[277,471],"source":"`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>."},{"content":"<ph id=\"ph1\">`targetType`</ph> is the type of object you want to set the property for.","pos":[472,540],"source":"`targetType` is the type of object you want to set the property for."},{"content":"For dependency properties, <ph id=\"ph1\">`ownerType`</ph> and <ph id=\"ph2\">`targetType`</ph> are the same type.","pos":[541,615],"source":" For dependency properties, `ownerType` and `targetType` are the same type."},{"content":"For attached properties they usually differ.","pos":[616,660]}]},{"pos":[22289,22358],"content":"The registered name of a dependency property or an attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The registered name of a dependency property or an attached property.","pos":[0,69]}]},{"pos":[22422,22493],"content":"The <xref:System.Type> of the object that owns the property definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the object that owns the property definition.","pos":[0,71],"source":"The <xref:System.Type> of the object that owns the property definition."}]},{"pos":[22558,22628],"content":"The <xref:System.Type> of the object you want to set the property for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the object you want to set the property for.","pos":[0,70],"source":"The <xref:System.Type> of the object you want to set the property for."}]},{"pos":[22704,22742],"content":"Specifies to ignore the property type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies to ignore the property type.","pos":[0,38]}]},{"pos":[22837,22923],"content":"The requested <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The requested <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>."},{"pos":[23598,23757],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a provided <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>."},{"pos":[23769,23993],"content":"This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is the primary method used by designer applications to obtain a &lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt; on basis of checking all properties for a &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,224],"source":"This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[24255,24330],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to check.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to check."},{"pos":[24425,24744],"content":"If the property described by <code>property</code> is a dependency property, returns a valid <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>. Otherwise, returns a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref><xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the property described by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">property</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a dependency property, returns a valid <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"If the property described by <code>property</code> is a dependency property, returns a valid <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>."},{"content":"Otherwise, returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept><bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[166,319],"source":" Otherwise, returns a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref><xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>."}]},{"pos":[25448,25581],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for a provided dependency property and target type.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided dependency property and target type."},{"pos":[25593,25998],"content":"The `dependencyProperty` may refer to a dependency property or an attached property. `targetType` is the type of object you want to set the property for. For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`. For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`dependencyProperty`</ph> may refer to a dependency property or an attached property.","pos":[0,84],"source":"The `dependencyProperty` may refer to a dependency property or an attached property."},{"content":"<ph id=\"ph1\">`targetType`</ph> is the type of object you want to set the property for.","pos":[85,153],"source":"`targetType` is the type of object you want to set the property for."},{"content":"For dependency properties, that type is equivalent to the &lt;xref:System.Windows.DependencyProperty.OwnerType%2A&gt; for the <ph id=\"ph1\">`dependencyProperty`</ph>.","pos":[154,295],"source":" For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`."},{"content":"For attached properties the <ph id=\"ph1\">`targetType`</ph> is typically some other &lt;xref:System.Windows.DependencyObject&gt; type.","pos":[296,405],"source":" For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type."}]},{"pos":[26283,26324],"content":"The identifier for a dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identifier for a dependency property.","pos":[0,41]}]},{"pos":[26389,26438],"content":"The type of the object where the property is set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the object where the property is set.","pos":[0,49]}]},{"pos":[26533,26644],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the provided dependency property.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for the provided dependency property."},{"pos":[27337,27419],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref>."},{"pos":[27431,27516],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[27745,27783],"content":"A component to get the properties for.","needQuote":true,"needEscape":true,"nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]},{"pos":[27851,27911],"content":"An array of type <xref:System.Attribute> to use as a filter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of type &lt;xref:System.Attribute&gt; to use as a filter.","pos":[0,60],"source":"An array of type <xref:System.Attribute> to use as a filter."}]},{"pos":[28006,28164],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the properties that match the specified attributes for the specified component.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component."},{"pos":[28734,28771],"content":"Gets an editor of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an editor of the specified type.","pos":[0,37]}]},{"pos":[28783,28868],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[29032,29138],"content":"The base type of editor, which is used to differentiate between multiple editors that a property supports.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base type of editor, which is used to differentiate between multiple editors that a property supports.","pos":[0,106]}]},{"pos":[29196,29331],"content":"An instance of the requested editor type, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an editor cannot be found.","needQuote":true,"needEscape":true,"source":"An instance of the requested editor type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an editor cannot be found."},{"pos":[29864,29967],"content":"Returns the hash code for this <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the hash code for this <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>."},{"pos":[29979,30437],"content":"The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set. This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set. This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.","pos":[0,458],"nodes":[{"content":"The hash code for &lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt; is based both on the identifier for a dependency property and on the type on which it is set.","pos":[0,169],"source":"The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set."},{"content":"This implementation assures that a &lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt; does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.","pos":[170,458],"source":" This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system."}]}]},{"pos":[30572,30606],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[31174,31232],"content":"Resturns the current value of the property on a component.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resturns the current value of the property on a component.","pos":[0,58]}]},{"pos":[31244,31329],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[31486,31509],"content":"The component instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component instance.","pos":[0,23]}]},{"pos":[31567,31587],"content":"The requested value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested value.","pos":[0,20]}]},{"pos":[32110,32241],"content":"Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.","pos":[0,131]}]},{"pos":[32355,32531],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is an attached property; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is an attached property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33061,33184],"content":"Gets a value that indicates the value of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.BrowsableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on the property.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates the value of the <xref href=\"System.ComponentModel.BrowsableAttribute\"></xref> on the property."},{"pos":[33196,33283],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[33407,33642],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.BrowsableAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> was specified on the property; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.ComponentModel.BrowsableAttribute\"></xref> was specified on the property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34183,34334],"content":"Gets a value indicating whether this property should be localized, as specified in the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether this property should be localized, as specified in the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>."},{"pos":[34346,34433],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[34559,34822],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the member is marked with the <bpt id=\"p2\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> constructor of the value true; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the member is marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> constructor of the value true; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35350,35409],"content":"Gets a value indicating whether this property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this property is read-only.","pos":[0,59]}]},{"pos":[35422,36284],"content":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.       Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only. However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state. To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>. Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,87],"source":"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."},{"content":"Dependency properties are registered as read-only using particular method calls, and by convention the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.","pos":[94,368],"source":"       Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only."},{"content":"However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.","pos":[369,521]},{"content":"To do this, get the identifier (&lt;xref:System.Windows.DependencyProperty&gt;) value for this &lt;xref:System.ComponentModel.DependencyPropertyDescriptor&gt; and then check the value of &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;.","pos":[522,750],"source":" To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>."},{"content":"Note that the &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt; is on the identifier itself, not metadata.","pos":[751,860],"source":" Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata."}]},{"pos":[36408,36573],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[37088,37146],"content":"Gets the metadata associated with the dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the metadata associated with the dependency property.","pos":[0,58]}]},{"pos":[37159,37497],"content":"The value can be `null` if there is  no metadata or if the property is not a dependency property.       Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The value can be <ph id=\"ph1\">`null`</ph> if there is  no metadata or if the property is not a dependency property.","pos":[0,97],"source":"The value can be `null` if there is  no metadata or if the property is not a dependency property."},{"content":"Metadata that has matching concepts in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> attributes is re-exposed as attributes in the &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A&gt; collection.","pos":[104,336],"source":"       Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection."}]},{"pos":[37654,37687],"content":"The dependency property metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency property metadata.","pos":[0,33]}]},{"pos":[38220,38287],"content":"Gets the represented <xref:System.Type> of the dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the represented &lt;xref:System.Type&gt; of the dependency property.","pos":[0,67],"source":"Gets the represented <xref:System.Type> of the dependency property."}]},{"pos":[38299,38393],"content":"This property returns the <xref:System.Type> that the dependency property was registered with.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This property returns the &lt;xref:System.Type&gt; that the dependency property was registered with.","pos":[0,94],"source":"This property returns the <xref:System.Type> that the dependency property was registered with."}]},{"pos":[38515,38565],"content":"The <xref:System.Type> of the dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; of the dependency property.","pos":[0,50],"source":"The <xref:System.Type> of the dependency property."}]},{"pos":[39263,39327],"content":"Enables other objects to be notified when this property changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables other objects to be notified when this property changes.","pos":[0,64]}]},{"pos":[39339,39424],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[39611,39648],"content":"The component to add the handler for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component to add the handler for.","pos":[0,37]}]},{"pos":[39718,39752],"content":"The delegate to add as a listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delegate to add as a listener.","pos":[0,34]}]},{"pos":[40337,40410],"content":"Resets the value for this property of the component to the default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resets the value for this property of the component to the default value.","pos":[0,73]}]},{"pos":[40422,40507],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[40664,40743],"content":"The component with the property value that is to be reset to the default value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component with the property value that is to be reset to the default value.","pos":[0,79]}]},{"pos":[41359,41412],"content":"Sets the value of the component to a different value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the component to a different value.","pos":[0,53]}]},{"pos":[41424,41509],"content":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[0,85],"source":"This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[41678,41734],"content":"The component with the property value that is to be set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component with the property value that is to be set.","pos":[0,56]}]},{"pos":[41796,41810],"content":"The new value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value.","pos":[0,14]}]},{"pos":[42435,42529],"content":"Indicates whether the value of this property needs to be persisted by serialization processes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the value of this property needs to be persisted by serialization processes.","pos":[0,94]}]},{"pos":[42696,42759],"content":"The component with the property to be examined for persistence.","needQuote":true,"needEscape":true,"nodes":[{"content":"The component with the property to be examined for persistence.","pos":[0,63]}]},{"pos":[42818,42990],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property should be persisted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property should be persisted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43575,43864],"content":"Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*&gt;.","pos":[0,289],"source":"Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>."}]},{"pos":[43877,44174],"content":"For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName``Changed` event for this property.       This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"For example, for the <ph id=\"ph1\">`true`</ph> case, the component may implement the &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt; interface, or may have an explicit <ph id=\"ph2\">`propertyName``Changed`</ph> event for this property.","pos":[0,201],"source":"For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName``Changed` event for this property."},{"content":"This property relies on the underlying &lt;xref:System.ComponentModel.PropertyDescriptor&gt;.","pos":[208,295],"source":"       This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>."}]},{"pos":[44308,44685],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if notifications for this property may originate from outside the property descriptor, such as from the component itself. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if notifications will only originate from direct calls made to <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if notifications for this property may originate from outside the property descriptor, such as from the component itself.","pos":[0,182],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if notifications for this property may originate from outside the property descriptor, such as from the component itself."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if notifications will only originate from direct calls made to &lt;xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*&gt;.","pos":[183,377],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if notifications will only originate from direct calls made to <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>."}]},{"pos":[45214,45290],"content":"Converts the value of this instance to its equivalent string representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Converts the value of this instance to its equivalent string representation.","pos":[0,76]}]},{"pos":[45426,45496],"content":"Returns the <xref:System.ComponentModel.MemberDescriptor.Name*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.ComponentModel.MemberDescriptor.Name*&gt; value.","pos":[0,70],"source":"Returns the <xref:System.ComponentModel.MemberDescriptor.Name*> value."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DependencyPropertyDescriptor\n  id: DependencyPropertyDescriptor\n  children:\n  - System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.DependencyPropertyDescriptor.Attributes\n  - System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)\n  - System.ComponentModel.DependencyPropertyDescriptor.Category\n  - System.ComponentModel.DependencyPropertyDescriptor.ComponentType\n  - System.ComponentModel.DependencyPropertyDescriptor.Converter\n  - System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty\n  - System.ComponentModel.DependencyPropertyDescriptor.Description\n  - System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback\n  - System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly\n  - System.ComponentModel.DependencyPropertyDescriptor.DisplayName\n  - System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)\n  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)\n  - System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)\n  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)\n  - System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)\n  - System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)\n  - System.ComponentModel.DependencyPropertyDescriptor.GetHashCode\n  - System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)\n  - System.ComponentModel.DependencyPropertyDescriptor.IsAttached\n  - System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable\n  - System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable\n  - System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly\n  - System.ComponentModel.DependencyPropertyDescriptor.Metadata\n  - System.ComponentModel.DependencyPropertyDescriptor.PropertyType\n  - System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)\n  - System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)\n  - System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)\n  - System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents\n  - System.ComponentModel.DependencyPropertyDescriptor.ToString\n  langs:\n  - csharp\n  name: DependencyPropertyDescriptor\n  nameWithType: DependencyPropertyDescriptor\n  fullName: System.ComponentModel.DependencyPropertyDescriptor\n  type: Class\n  summary: Provides an extension of <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> that accounts for the additional property characteristics of a dependency property.\n  remarks: \"This class is primarily used by designer applications. These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.  \\n  \\n In order to check a specific property to determine whether it has DependencyPropertyDescriptor available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=fullName>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=fullName>. If either method returns `null`, then the property is not a dependency property. If the method returns a valid DependencyPropertyDescriptor , then the property is a dependency property.\"\n  syntax:\n    content: 'public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MemberDescriptor\n  - System.ComponentModel.PropertyDescriptor\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.MemberDescriptor.AttributeArray\n  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)\n  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  - System.ComponentModel.MemberDescriptor.Name\n  - System.ComponentModel.MemberDescriptor.NameHashCode\n  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  - System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  id: AddValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: AddValueChanged(Object,EventHandler)\n  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Enables other objects to be notified when this property changes.\n  syntax:\n    content: public override void AddValueChanged (object component, EventHandler handler);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to add the handler for.\n    - id: handler\n      type: System.EventHandler\n      description: The delegate to add as a listener.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes\n  id: Attributes\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: DependencyPropertyDescriptor.Attributes\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the collection of attributes for this member.\n  syntax:\n    content: public override System.ComponentModel.AttributeCollection Attributes { get; }\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: The <xref href=\"System.ComponentModel.AttributeCollection\"></xref> collection of attributes.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.Attributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)\n  id: CanResetValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: CanResetValue(Object)\n  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns whether resetting an object changes its value.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override bool CanResetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to test for reset capability.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if resetting the component changes its value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Category\n  id: Category\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: Category\n  nameWithType: DependencyPropertyDescriptor.Category\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the name of the category that the member belongs to, as specified in the <xref href=\"System.ComponentModel.CategoryAttribute\"></xref>.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override string Category { get; }\n    return:\n      type: System.String\n      description: The name of the category to which the member belongs. If there is no <xref href=\"System.ComponentModel.CategoryAttribute\"></xref>, the category name is set to the default category, <xref uid=\"langword_csharp_Misc\" name=\"Misc\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.Category*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType\n  id: ComponentType\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: ComponentType\n  nameWithType: DependencyPropertyDescriptor.ComponentType\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the type of the component this property is bound to.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override Type ComponentType { get; }\n    return:\n      type: System.Type\n      description: A <xref:System.Type> that represents the type of component this property is bound to. When <xref:System.ComponentModel.DependencyPropertyDescriptor.GetValue*> or <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*> are invoked, the object specified might be an instance of this type.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter\n  id: Converter\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: Converter\n  nameWithType: DependencyPropertyDescriptor.Converter\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the type converter for this property.\n  remarks: This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class.\n  syntax:\n    content: public override System.ComponentModel.TypeConverter Converter { get; }\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> that is used to convert the <xref:System.Type> of this property.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.Converter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty\n  id: DependencyProperty\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: DependencyProperty\n  nameWithType: DependencyPropertyDescriptor.DependencyProperty\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns the dependency property identifier.\n  remarks: This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property.\n  syntax:\n    content: public System.Windows.DependencyProperty DependencyProperty { get; }\n    return:\n      type: System.Windows.DependencyProperty\n      description: The dependency property identifier.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Description\n  id: Description\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: Description\n  nameWithType: DependencyPropertyDescriptor.Description\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the description of the member, as specified in the <xref href=\"System.ComponentModel.DescriptionAttribute\"></xref>.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override string Description { get; }\n    return:\n      type: System.String\n      description: The description of the member. If there is no <xref href=\"System.ComponentModel.DescriptionAttribute\"></xref>, the property value is set to the default, which is an empty string (\"\").\n  overload: System.ComponentModel.DependencyPropertyDescriptor.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback\n  id: DesignerCoerceValueCallback\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: DesignerCoerceValueCallback\n  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.\n  syntax:\n    content: public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }\n    return:\n      type: System.Windows.CoerceValueCallback\n      description: A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly\n  id: DesignTimeOnly\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: DesignTimeOnly\n  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets whether this member should be set only at design time, as specified in the <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override bool DesignTimeOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this member should be set only at design time; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the member can be set during run time. If there is no <xref href=\"System.ComponentModel.DesignOnlyAttribute\"></xref>, the return value is the default, which is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName\n  id: DisplayName\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: DependencyPropertyDescriptor.DisplayName\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the name that can be displayed in a window, such as a Properties window.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override string DisplayName { get; }\n    return:\n      type: System.String\n      description: The name to display for the property.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DependencyPropertyDescriptor.Equals(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Compares two <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> instances for equality.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the values are equivalent; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)\n  id: FromName(System.String,System.Type,System.Type)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: FromName(String,Type,Type)\n  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided property name.\n  remarks: The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question. `ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>. `targetType` is the type of object you want to set the property for. For dependency properties, `ownerType` and `targetType` are the same type. For attached properties they usually differ.\n  syntax:\n    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);\n    parameters:\n    - id: name\n      type: System.String\n      description: The registered name of a dependency property or an attached property.\n    - id: ownerType\n      type: System.Type\n      description: The <xref:System.Type> of the object that owns the property definition.\n    - id: targetType\n      type: System.Type\n      description: The <xref:System.Type> of the object you want to set the property for.\n    return:\n      type: System.ComponentModel.DependencyPropertyDescriptor\n      description: The requested <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)\n  id: FromName(System.String,System.Type,System.Type,System.Boolean)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: FromName(String,Type,Type,Boolean)\n  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided property name.\n  remarks: The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question. `ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>. `targetType` is the type of object you want to set the property for. For dependency properties, `ownerType` and `targetType` are the same type. For attached properties they usually differ.\n  syntax:\n    content: public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);\n    parameters:\n    - id: name\n      type: System.String\n      description: The registered name of a dependency property or an attached property.\n    - id: ownerType\n      type: System.Type\n      description: The <xref:System.Type> of the object that owns the property definition.\n    - id: targetType\n      type: System.Type\n      description: The <xref:System.Type> of the object you want to set the property for.\n    - id: ignorePropertyType\n      type: System.Boolean\n      description: Specifies to ignore the property type.\n    return:\n      type: System.ComponentModel.DependencyPropertyDescriptor\n      description: The requested <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.FromName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)\n  id: FromProperty(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: FromProperty(PropertyDescriptor)\n  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.\n  remarks: This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);\n    parameters:\n    - id: property\n      type: System.ComponentModel.PropertyDescriptor\n      description: The <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to check.\n    return:\n      type: System.ComponentModel.DependencyPropertyDescriptor\n      description: If the property described by <code>property</code> is a dependency property, returns a valid <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>. Otherwise, returns a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref><xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)\n  id: FromProperty(System.Windows.DependencyProperty,System.Type)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: FromProperty(DependencyProperty,Type)\n  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for a provided dependency property and target type.\n  remarks: The `dependencyProperty` may refer to a dependency property or an attached property. `targetType` is the type of object you want to set the property for. For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`. For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.\n  syntax:\n    content: public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);\n    parameters:\n    - id: dependencyProperty\n      type: System.Windows.DependencyProperty\n      description: The identifier for a dependency property.\n    - id: targetType\n      type: System.Type\n      description: The type of the object where the property is set.\n    return:\n      type: System.ComponentModel.DependencyPropertyDescriptor\n      description: A <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref> for the provided dependency property.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  id: GetChildProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: GetChildProperties(Object,Attribute[])\n  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref>.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A component to get the properties for.\n    - id: filter\n      type: System.Attribute[]\n      description: An array of type <xref:System.Attribute> to use as a filter.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)\n  id: GetEditor(System.Type)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: GetEditor(Type)\n  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets an editor of the specified type.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override object GetEditor (Type editorBaseType);\n    parameters:\n    - id: editorBaseType\n      type: System.Type\n      description: The base type of editor, which is used to differentiate between multiple editors that a property supports.\n    return:\n      type: System.Object\n      description: An instance of the requested editor type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if an editor cannot be found.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DependencyPropertyDescriptor.GetHashCode()\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this <xref href=\"System.ComponentModel.DependencyPropertyDescriptor\"></xref>.\n  remarks: The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set. This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)\n  id: GetValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: GetValue(Object)\n  nameWithType: DependencyPropertyDescriptor.GetValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Resturns the current value of the property on a component.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override object GetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component instance.\n    return:\n      type: System.Object\n      description: The requested value.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.GetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached\n  id: IsAttached\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: IsAttached\n  nameWithType: DependencyPropertyDescriptor.IsAttached\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.\n  syntax:\n    content: public bool IsAttached { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is an attached property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable\n  id: IsBrowsable\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: IsBrowsable\n  nameWithType: DependencyPropertyDescriptor.IsBrowsable\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value that indicates the value of the <xref href=\"System.ComponentModel.BrowsableAttribute\"></xref> on the property.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override bool IsBrowsable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.ComponentModel.BrowsableAttribute\"></xref> was specified on the property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable\n  id: IsLocalizable\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: IsLocalizable\n  nameWithType: DependencyPropertyDescriptor.IsLocalizable\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this property should be localized, as specified in the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.\n  remarks: This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override bool IsLocalizable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the member is marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> constructor of the value true; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly\n  id: IsReadOnly\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: DependencyPropertyDescriptor.IsReadOnly\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this property is read-only.\n  remarks: \"This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.  \\n  \\n Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only. However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state. To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>. Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.\"\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata\n  id: Metadata\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: DependencyPropertyDescriptor.Metadata\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the metadata associated with the dependency property.\n  remarks: \"The value can be `null` if there is  no metadata or if the property is not a dependency property.  \\n  \\n Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.\"\n  syntax:\n    content: public System.Windows.PropertyMetadata Metadata { get; }\n    return:\n      type: System.Windows.PropertyMetadata\n      description: The dependency property metadata.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.Metadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType\n  id: PropertyType\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: PropertyType\n  nameWithType: DependencyPropertyDescriptor.PropertyType\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Gets the represented <xref:System.Type> of the dependency property.\n  remarks: This property returns the <xref:System.Type> that the dependency property was registered with.\n  syntax:\n    content: public override Type PropertyType { get; }\n    return:\n      type: System.Type\n      description: The <xref:System.Type> of the dependency property.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  id: RemoveValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: RemoveValueChanged(Object,EventHandler)\n  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Enables other objects to be notified when this property changes.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override void RemoveValueChanged (object component, EventHandler handler);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to add the handler for.\n    - id: handler\n      type: System.EventHandler\n      description: The delegate to add as a listener.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)\n  id: ResetValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: ResetValue(Object)\n  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Resets the value for this property of the component to the default value.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override void ResetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property value that is to be reset to the default value.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)\n  id: SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: SetValue(Object,Object)\n  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Sets the value of the component to a different value.\n  remarks: This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: public override void SetValue (object component, object value);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property value that is to be set.\n    - id: value\n      type: System.Object\n      description: The new value.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.SetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)\n  id: ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: ShouldSerializeValue(Object)\n  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Indicates whether the value of this property needs to be persisted by serialization processes.\n  syntax:\n    content: public override bool ShouldSerializeValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property to be examined for persistence.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the property should be persisted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents\n  id: SupportsChangeEvents\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: SupportsChangeEvents\n  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.\n  remarks: \"For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName``Changed` event for this property.  \\n  \\n This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.\"\n  syntax:\n    content: public override bool SupportsChangeEvents { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if notifications for this property may originate from outside the property descriptor, such as from the component itself. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if notifications will only originate from direct calls made to <xref:System.ComponentModel.DependencyPropertyDescriptor.SetValue*>.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString\n  id: ToString\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DependencyPropertyDescriptor.ToString()\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Converts the value of this instance to its equivalent string representation.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Returns the <xref:System.ComponentModel.MemberDescriptor.Name*> value.\n  overload: System.ComponentModel.DependencyPropertyDescriptor.ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: AddValueChanged(Object,EventHandler)\n  nameWithType: DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(Object,EventHandler)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Attributes\n  nameWithType: DependencyPropertyDescriptor.Attributes\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Attributes\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: CanResetValue(Object)\n  nameWithType: DependencyPropertyDescriptor.CanResetValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Category\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Category\n  nameWithType: DependencyPropertyDescriptor.Category\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Category\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: DependencyPropertyDescriptor.ComponentType\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ComponentType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Converter\n  nameWithType: DependencyPropertyDescriptor.Converter\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Converter\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyPropertyDescriptor.DependencyProperty\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Description\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Description\n  nameWithType: DependencyPropertyDescriptor.Description\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Description\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DesignerCoerceValueCallback\n  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback\n- uid: System.Windows.CoerceValueCallback\n  parent: System.Windows\n  isExternal: false\n  name: CoerceValueCallback\n  nameWithType: CoerceValueCallback\n  fullName: System.Windows.CoerceValueCallback\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DesignTimeOnly\n  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DisplayName\n  nameWithType: DependencyPropertyDescriptor.DisplayName\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.DisplayName\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyPropertyDescriptor.Equals(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Equals(Object)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: FromName(String,Type,Type)\n  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type)\n- uid: System.ComponentModel.DependencyPropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: DependencyPropertyDescriptor\n  nameWithType: DependencyPropertyDescriptor\n  fullName: System.ComponentModel.DependencyPropertyDescriptor\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: FromName(String,Type,Type,Boolean)\n  nameWithType: DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromName(String,Type,Type,Boolean)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: FromProperty(PropertyDescriptor)\n  nameWithType: DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(PropertyDescriptor)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: FromProperty(DependencyProperty,Type)\n  nameWithType: DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.FromProperty(DependencyProperty,Type)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Object,Attribute[])\n  nameWithType: DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(Object,Attribute[])\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.Attribute[]\n  parent: System\n  isExternal: true\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: Attribute[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetEditor(Type)\n  nameWithType: DependencyPropertyDescriptor.GetEditor(Type)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetEditor(Type)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyPropertyDescriptor.GetHashCode()\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetValue(Object)\n  nameWithType: DependencyPropertyDescriptor.GetValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.GetValue(Object)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsAttached\n  nameWithType: DependencyPropertyDescriptor.IsAttached\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsAttached\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsBrowsable\n  nameWithType: DependencyPropertyDescriptor.IsBrowsable\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: DependencyPropertyDescriptor.IsLocalizable\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: DependencyPropertyDescriptor.IsReadOnly\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Metadata\n  nameWithType: DependencyPropertyDescriptor.Metadata\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.Metadata\n- uid: System.Windows.PropertyMetadata\n  parent: System.Windows\n  isExternal: false\n  name: PropertyMetadata\n  nameWithType: PropertyMetadata\n  fullName: System.Windows.PropertyMetadata\n- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  nameWithType: DependencyPropertyDescriptor.PropertyType\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.PropertyType\n- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: RemoveValueChanged(Object,EventHandler)\n  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(Object,EventHandler)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ResetValue(Object)\n  nameWithType: DependencyPropertyDescriptor.ResetValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ResetValue(Object)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: SetValue(Object,Object)\n  nameWithType: DependencyPropertyDescriptor.SetValue(Object,Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.SetValue(Object,Object)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ShouldSerializeValue(Object)\n  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue(Object)\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(Object)\n- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: SupportsChangeEvents\n  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ToString()\n  nameWithType: DependencyPropertyDescriptor.ToString()\n  fullName: System.ComponentModel.DependencyPropertyDescriptor.ToString()\n- uid: System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: AddValueChanged\n  nameWithType: DependencyPropertyDescriptor.AddValueChanged\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Attributes*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Attributes\n  nameWithType: DependencyPropertyDescriptor.Attributes\n- uid: System.ComponentModel.DependencyPropertyDescriptor.CanResetValue*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: CanResetValue\n  nameWithType: DependencyPropertyDescriptor.CanResetValue\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Category*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Category\n  nameWithType: DependencyPropertyDescriptor.Category\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ComponentType*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: DependencyPropertyDescriptor.ComponentType\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Converter*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Converter\n  nameWithType: DependencyPropertyDescriptor.Converter\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyPropertyDescriptor.DependencyProperty\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Description*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Description\n  nameWithType: DependencyPropertyDescriptor.Description\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DesignerCoerceValueCallback\n  nameWithType: DependencyPropertyDescriptor.DesignerCoerceValueCallback\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DesignTimeOnly\n  nameWithType: DependencyPropertyDescriptor.DesignTimeOnly\n- uid: System.ComponentModel.DependencyPropertyDescriptor.DisplayName*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: DisplayName\n  nameWithType: DependencyPropertyDescriptor.DisplayName\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Equals*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Equals\n  nameWithType: DependencyPropertyDescriptor.Equals\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromName*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: FromName\n  nameWithType: DependencyPropertyDescriptor.FromName\n- uid: System.ComponentModel.DependencyPropertyDescriptor.FromProperty*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: FromProperty\n  nameWithType: DependencyPropertyDescriptor.FromProperty\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetChildProperties\n  nameWithType: DependencyPropertyDescriptor.GetChildProperties\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetEditor*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetEditor\n  nameWithType: DependencyPropertyDescriptor.GetEditor\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetHashCode*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DependencyPropertyDescriptor.GetHashCode\n- uid: System.ComponentModel.DependencyPropertyDescriptor.GetValue*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: GetValue\n  nameWithType: DependencyPropertyDescriptor.GetValue\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsAttached*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsAttached\n  nameWithType: DependencyPropertyDescriptor.IsAttached\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsBrowsable\n  nameWithType: DependencyPropertyDescriptor.IsBrowsable\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: DependencyPropertyDescriptor.IsLocalizable\n- uid: System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: DependencyPropertyDescriptor.IsReadOnly\n- uid: System.ComponentModel.DependencyPropertyDescriptor.Metadata*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: Metadata\n  nameWithType: DependencyPropertyDescriptor.Metadata\n- uid: System.ComponentModel.DependencyPropertyDescriptor.PropertyType*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  nameWithType: DependencyPropertyDescriptor.PropertyType\n- uid: System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: RemoveValueChanged\n  nameWithType: DependencyPropertyDescriptor.RemoveValueChanged\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ResetValue*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ResetValue\n  nameWithType: DependencyPropertyDescriptor.ResetValue\n- uid: System.ComponentModel.DependencyPropertyDescriptor.SetValue*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: SetValue\n  nameWithType: DependencyPropertyDescriptor.SetValue\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ShouldSerializeValue\n  nameWithType: DependencyPropertyDescriptor.ShouldSerializeValue\n- uid: System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: SupportsChangeEvents\n  nameWithType: DependencyPropertyDescriptor.SupportsChangeEvents\n- uid: System.ComponentModel.DependencyPropertyDescriptor.ToString*\n  parent: System.ComponentModel.DependencyPropertyDescriptor\n  isExternal: false\n  name: ToString\n  nameWithType: DependencyPropertyDescriptor.ToString\n"}