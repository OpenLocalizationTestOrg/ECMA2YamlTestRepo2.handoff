{"nodes":[{"pos":[4055,4145],"content":"This class contains utility functions to encapsulate launching and logging for the Tracker","needQuote":true,"needEscape":true,"nodes":[{"content":"This class contains utility functions to encapsulate launching and logging for the Tracker","pos":[0,90]}]},{"pos":[4893,5045],"content":"Given a set of source files in the form of ITaskItem, creates a temporary response file containing the rooting marker that corresponds to those sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Given a set of source files in the form of ITaskItem, creates a temporary response file containing the rooting marker that corresponds to those sources.","pos":[0,152]}]},{"pos":[5274,5298],"content":"The set of source files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The set of source files.","pos":[0,24]}]},{"pos":[5356,5379],"content":"The response file path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response file path.","pos":[0,23]}]},{"pos":[6036,6125],"content":"Given a rooting marker, creates a temporary response file with that rooting marker in it.","needQuote":true,"needEscape":true,"nodes":[{"content":"Given a rooting marker, creates a temporary response file with that rooting marker in it.","pos":[0,89]}]},{"pos":[6305,6352],"content":"The rooting marker to put in the response file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rooting marker to put in the response file.","pos":[0,47]}]},{"pos":[6410,6433],"content":"The response file path.","needQuote":true,"needEscape":true,"nodes":[{"content":"The response file path.","pos":[0,23]}]},{"pos":[6977,7006],"content":"Stops tracking file accesses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stops tracking file accesses.","pos":[0,29]}]},{"pos":[7646,7763],"content":"Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking.","needQuote":true,"needEscape":true,"nodes":[{"content":"Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking.","pos":[0,117],"nodes":[{"content":"Prepends the path to the appropriate FileTracker assembly to the PATH environment variable.","pos":[0,91]},{"content":"Used for inproc tracking.","pos":[92,117]}]}]},{"pos":[7912,7959],"content":"The old value of the PATH environment variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The old value of the PATH environment variable.","pos":[0,47]}]},{"pos":[8568,8736],"content":"Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking, or when the .NET Framework may not be on the PATH.","needQuote":true,"needEscape":true,"nodes":[{"content":"Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking, or when the .NET Framework may not be on the PATH.","pos":[0,168],"nodes":[{"content":"Prepends the path to the appropriate FileTracker assembly to the PATH environment variable.","pos":[0,91]},{"content":"Used for inproc tracking, or when the .NET Framework may not be on the PATH.","pos":[92,168]}]}]},{"pos":[8904,8975],"content":"The root path for FileTracker.dll. Overrides the toolType if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root path for FileTracker.dll. Overrides the toolType if specified.","pos":[0,71],"nodes":[{"content":"The root path for FileTracker.dll.","pos":[0,34]},{"content":"Overrides the toolType if specified.","pos":[35,71]}]}]},{"pos":[9033,9054],"content":"The old value of PATH","needQuote":true,"needEscape":true,"nodes":[{"content":"The old value of PATH","pos":[0,21]}]},{"pos":[9698,9769],"content":"Test to see if the specified file is excluded from tracked dependencies","needQuote":true,"needEscape":true,"nodes":[{"content":"Test to see if the specified file is excluded from tracked dependencies","pos":[0,71]}]},{"pos":[9942,9971],"content":"Full path of the file to test","needQuote":true,"needEscape":true,"nodes":[{"content":"Full path of the file to test","pos":[0,29]}]},{"pos":[10030,10067],"content":"Returns true if the file is excluded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the file is excluded.","pos":[0,37]}]},{"pos":[10692,10753],"content":"Test to see if the specified file is under the specified path","needQuote":true,"needEscape":true,"nodes":[{"content":"Test to see if the specified file is under the specified path","pos":[0,61]}]},{"pos":[10924,10953],"content":"Full path of the file to test","needQuote":true,"needEscape":true,"nodes":[{"content":"Full path of the file to test","pos":[0,29]}]},{"pos":[11014,11051],"content":"The path that might contain the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path that might contain the file.","pos":[0,37]}]},{"pos":[11110,11153],"content":"Returns true if the file is under the path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the file is under the path.","pos":[0,43]}]},{"pos":[11676,11839],"content":"Searches %PATH% for the location of Tracker.exe, and returns the first path that matches.Matching full path to Tracker.exe or null if a matching path is not found.","needQuote":true,"needEscape":true,"nodes":[{"content":"Searches %PATH% for the location of Tracker.exe, and returns the first path that matches.Matching full path to Tracker.exe or null if a matching path is not found.","pos":[0,163]}]},{"pos":[11982,12014],"content":"Returns the path to Tracker.exe.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path to Tracker.exe.","pos":[0,32]}]},{"pos":[12690,12773],"content":"Determines whether we must track out-of-proc, or whether inproc tracking will work.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether we must track out-of-proc, or whether inproc tracking will work.","pos":[0,83]}]},{"pos":[12999,13045],"content":"The executable type for the tool being tracked","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable type for the tool being tracked","pos":[0,46]}]},{"pos":[13104,13172],"content":"True if we need to track out-of-proc, false if inproc tracking is OK","needQuote":true,"needEscape":true,"nodes":[{"content":"True if we need to track out-of-proc, false if inproc tracking is OK","pos":[0,68]}]},{"pos":[13951,14034],"content":"Determines whether we must track out-of-proc, or whether inproc tracking will work.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether we must track out-of-proc, or whether inproc tracking will work.","pos":[0,83]}]},{"pos":[14300,14346],"content":"The executable type for the tool being tracked","needQuote":true,"needEscape":true,"nodes":[{"content":"The executable type for the tool being tracked","pos":[0,46]}]},{"pos":[14410,14433],"content":"The tool being tracked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The tool being tracked.","pos":[0,23]}]},{"pos":[14505,14587],"content":"The name of the cancel event tracker should listen for, or null if there isn't one","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the cancel event tracker should listen for, or null if there isn't one","pos":[0,82]}]},{"pos":[14646,14714],"content":"True if we need to track out-of-proc, false if inproc tracking is OK","needQuote":true,"needEscape":true,"nodes":[{"content":"True if we need to track out-of-proc, false if inproc tracking is OK","pos":[0,68]}]},{"pos":[15355,15433],"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","pos":[0,78]}]},{"pos":[15644,15664],"content":"The primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary sources.","pos":[0,20]}]},{"pos":[15722,15748],"content":"Returns the marker string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the marker string.","pos":[0,26]}]},{"pos":[16396,16474],"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","pos":[0,78]}]},{"pos":[16691,16726],"content":"ITaskItem array of primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"ITaskItem array of primary sources.","pos":[0,35]}]},{"pos":[16784,16810],"content":"Returns the marker string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the marker string.","pos":[0,26]}]},{"pos":[17550,17628],"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","pos":[0,78]}]},{"pos":[17883,17903],"content":"The primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"The primary sources.","pos":[0,20]}]},{"pos":[17988,18005],"content":"The output files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output files.","pos":[0,17]}]},{"pos":[18063,18089],"content":"Returns the marker string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the marker string.","pos":[0,26]}]},{"pos":[18849,18927],"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"Construct a rooting marker string from the ITaskItem array of primary sources.","pos":[0,78]}]},{"pos":[19191,19226],"content":"ITaskItem array of primary sources.","needQuote":true,"needEscape":true,"nodes":[{"content":"ITaskItem array of primary sources.","pos":[0,35]}]},{"pos":[19314,19331],"content":"The output files.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output files.","pos":[0,17]}]},{"pos":[19389,19415],"content":"Returns the marker string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the marker string.","pos":[0,26]}]},{"pos":[20073,20244],"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.","needQuote":true,"needEscape":true,"nodes":[{"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.","pos":[0,171]}]},{"pos":[20468,20513],"content":"The ExecutableType of the tool being wrapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ExecutableType of the tool being wrapped.","pos":[0,45]}]},{"pos":[20571,20600],"content":"Returns the path of the tool.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path of the tool.","pos":[0,29]}]},{"pos":[21306,21477],"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.","needQuote":true,"needEscape":true,"nodes":[{"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.","pos":[0,171]}]},{"pos":[21718,21731],"content":"The toolType.","needQuote":true,"needEscape":true,"nodes":[{"content":"The toolType.","pos":[0,13]}]},{"pos":[21796,21867],"content":"The root path for FileTracker.dll. Overrides the toolType if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root path for FileTracker.dll. Overrides the toolType if specified.","pos":[0,71],"nodes":[{"content":"The root path for FileTracker.dll.","pos":[0,34]},{"content":"Overrides the toolType if specified.","pos":[35,71]}]}]},{"pos":[21925,21954],"content":"Returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.String&gt;.","pos":[0,29],"source":"Returns <xref:System.String>."}]},{"pos":[22591,22758],"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.","needQuote":true,"needEscape":true,"nodes":[{"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.","pos":[0,167]}]},{"pos":[22978,23023],"content":"The ExecutableType of the tool being wrapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ExecutableType of the tool being wrapped.","pos":[0,45]}]},{"pos":[23081,23106],"content":"Returns the tracker path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the tracker path.","pos":[0,25]}]},{"pos":[23788,23955],"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.","needQuote":true,"needEscape":true,"nodes":[{"content":"Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.","pos":[0,167]}]},{"pos":[24192,24205],"content":"The toolType.","needQuote":true,"needEscape":true,"nodes":[{"content":"The toolType.","pos":[0,13]}]},{"pos":[24270,24337],"content":"The root path for Tracker.exe. Overrides the toolType if specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root path for Tracker.exe. Overrides the toolType if specified.","pos":[0,67],"nodes":[{"content":"The root path for Tracker.exe.","pos":[0,30]},{"content":"Overrides the toolType if specified.","pos":[31,67]}]}]},{"pos":[24395,24424],"content":"Returns <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.String&gt;.","pos":[0,29],"source":"Returns <xref:System.String>."}]},{"pos":[24931,24993],"content":"Resume tracking file accesses in the current tracking context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resume tracking file accesses in the current tracking context.","pos":[0,62]}]},{"pos":[25623,25696],"content":"Set the global thread count, and assign that count to the current thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Set the global thread count, and assign that count to the current thread.","pos":[0,73]}]},{"pos":[25855,25872],"content":"The thread count.","needQuote":true,"needEscape":true,"nodes":[{"content":"The thread count.","pos":[0,17]}]},{"pos":[26593,26633],"content":"Start the process; tracking the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Start the process; tracking the command.","pos":[0,40]}]},{"pos":[26877,26897],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[26963,26995],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[27087,27129],"content":"The type of executable the wrapped tool is","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of executable the wrapped tool is","pos":[0,42]}]},{"pos":[27200,27229],"content":"Returns the process instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the process instance.","pos":[0,29]}]},{"pos":[27997,28037],"content":"Start the process; tracking the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Start the process; tracking the command.","pos":[0,40]}]},{"pos":[28299,28319],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[28385,28408],"content":"The command‘s arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command‘s arguments","pos":[0,23]}]},{"pos":[28500,28542],"content":"The type of executable the wrapped tool is","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of executable the wrapped tool is","pos":[0,42]}]},{"pos":[28608,28622],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[28693,28722],"content":"Returns the process instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the process instance.","pos":[0,29]}]},{"pos":[29539,29579],"content":"Start the process; tracking the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Start the process; tracking the command.","pos":[0,40]}]},{"pos":[29871,29891],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[29957,29989],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[30081,30123],"content":"The type of executable the wrapped tool is","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of executable the wrapped tool is","pos":[0,42]}]},{"pos":[30201,30259],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[30325,30339],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[30410,30438],"content":"Returns the process instance","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the process instance","pos":[0,28]}]},{"pos":[31304,31344],"content":"Start the process; tracking the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Start the process; tracking the command.","pos":[0,40]}]},{"pos":[31652,31672],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[31738,31770],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[31862,31904],"content":"The type of executable the wrapped tool is","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of executable the wrapped tool is","pos":[0,42]}]},{"pos":[31968,32013],"content":"The name of the dll that will do the tracking","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dll that will do the tracking","pos":[0,45]}]},{"pos":[32091,32149],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[32215,32229],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[32300,32316],"content":"Process instance","needQuote":true,"needEscape":true,"nodes":[{"content":"Process instance","pos":[0,16]}]},{"pos":[33231,33271],"content":"Start the process; tracking the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Start the process; tracking the command.","pos":[0,40]}]},{"pos":[33603,33623],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[33689,33721],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[33813,33855],"content":"The type of executable the wrapped tool is","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of executable the wrapped tool is","pos":[0,42]}]},{"pos":[33919,33964],"content":"The name of the dll that will do the tracking","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dll that will do the tracking","pos":[0,45]}]},{"pos":[34042,34100],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[34166,34180],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[34252,34341],"content":"If Tracker should be listening on a particular event for cancellation, pass its name here","needQuote":true,"needEscape":true,"nodes":[{"content":"If Tracker should be listening on a particular event for cancellation, pass its name here","pos":[0,89]}]},{"pos":[34412,34428],"content":"Process instance","needQuote":true,"needEscape":true,"nodes":[{"content":"Process instance","pos":[0,16]}]},{"pos":[35060,35090],"content":"Starts tracking file accesses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts tracking file accesses.","pos":[0,30]}]},{"pos":[35296,35352],"content":"The directory into which to write the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory into which to write the tracking log files","pos":[0,56]}]},{"pos":[35417,35514],"content":"The name of the task calling this function, used to determine the names of the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the task calling this function, used to determine the names of the tracking log files","pos":[0,97]}]},{"pos":[36243,36445],"content":"Starts tracking file accesses, using the rooting marker in the response file provided. To automatically generate a response file given a rooting marker, call FileTracker.CreateRootingMarkerResponseFile.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts tracking file accesses, using the rooting marker in the response file provided. To automatically generate a response file given a rooting marker, call FileTracker.CreateRootingMarkerResponseFile.","pos":[0,202],"nodes":[{"content":"Starts tracking file accesses, using the rooting marker in the response file provided.","pos":[0,86]},{"content":"To automatically generate a response file given a rooting marker, call FileTracker.CreateRootingMarkerResponseFile.","pos":[87,202]}]}]},{"pos":[36690,36746],"content":"The directory into which to write the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory into which to write the tracking log files","pos":[0,56]}]},{"pos":[36811,36908],"content":"The name of the task calling this function, used to determine the names of the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the task calling this function, used to determine the names of the tracking log files","pos":[0,97]}]},{"pos":[36987,37027],"content":"The rooting marker in the response file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rooting marker in the response file.","pos":[0,40]}]},{"pos":[37588,37661],"content":"Stop tracking file accesses and get rid of the current tracking contexts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stop tracking file accesses and get rid of the current tracking contexts.","pos":[0,73]}]},{"pos":[38269,38347],"content":"Temporarily suspend tracking of file accesses in the current tracking context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Temporarily suspend tracking of file accesses in the current tracking context.","pos":[0,78]}]},{"pos":[39190,39267],"content":"This method constructs the correct Tracker.exe arguments from its parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method constructs the correct Tracker.exe arguments from its parameters.","pos":[0,77]}]},{"pos":[39508,39528],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[39594,39626],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[39690,39735],"content":"The name of the dll that will do the tracking","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dll that will do the tracking","pos":[0,45]}]},{"pos":[39813,39871],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[39937,39951],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[40009,40034],"content":"The arguments as a string","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments as a string","pos":[0,25]}]},{"pos":[40846,40923],"content":"This method constructs the correct Tracker.exe arguments from its parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method constructs the correct Tracker.exe arguments from its parameters.","pos":[0,77]}]},{"pos":[41188,41208],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[41274,41306],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[41370,41415],"content":"The name of the dll that will do the tracking","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dll that will do the tracking","pos":[0,45]}]},{"pos":[41493,41551],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[41617,41631],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[41703,41799],"content":"If a cancel event has been created that Tracker should be listening for, its name is passed here","needQuote":true,"needEscape":true,"nodes":[{"content":"If a cancel event has been created that Tracker should be listening for, its name is passed here","pos":[0,96]}]},{"pos":[41857,41882],"content":"The arguments as a string","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments as a string","pos":[0,25]}]},{"pos":[42533,42617],"content":"This method constructs the correct Tracker.exe command arguments from its parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"This method constructs the correct Tracker.exe command arguments from its parameters","pos":[0,84]}]},{"pos":[42801,42821],"content":"The command to track","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track","pos":[0,20]}]},{"pos":[42887,42919],"content":"The command to track's arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"The command to track's arguments","pos":[0,32]}]},{"pos":[42977,43002],"content":"The arguments as a string","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments as a string","pos":[0,25]}]},{"pos":[43734,43825],"content":"This method constructs the correct Tracker.exe response file arguments from its parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method constructs the correct Tracker.exe response file arguments from its parameters.","pos":[0,91]}]},{"pos":[44044,44089],"content":"The name of the dll that will do the tracking","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dll that will do the tracking","pos":[0,45]}]},{"pos":[44167,44225],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[44291,44305],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[44363,44388],"content":"The arguments as a string","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments as a string","pos":[0,25]}]},{"pos":[45174,45265],"content":"This method constructs the correct Tracker.exe response file arguments from its parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method constructs the correct Tracker.exe response file arguments from its parameters.","pos":[0,91]}]},{"pos":[45508,45553],"content":"The name of the dll that will do the tracking","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the dll that will do the tracking","pos":[0,45]}]},{"pos":[45631,45689],"content":"Intermediate directory where tracking logs will be written","needQuote":true,"needEscape":true,"nodes":[{"content":"Intermediate directory where tracking logs will be written","pos":[0,58]}]},{"pos":[45755,45769],"content":"Rooting marker","needQuote":true,"needEscape":true,"nodes":[{"content":"Rooting marker","pos":[0,14]}]},{"pos":[45841,45937],"content":"If a cancel event has been created that Tracker should be listening for, its name is passed here","needQuote":true,"needEscape":true,"nodes":[{"content":"If a cancel event has been created that Tracker should be listening for, its name is passed here","pos":[0,96]}]},{"pos":[45995,46020],"content":"The arguments as a string","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments as a string","pos":[0,25]}]},{"pos":[46633,46682],"content":"Write tracking logs for all contexts and threads.","needQuote":true,"needEscape":true,"nodes":[{"content":"Write tracking logs for all contexts and threads.","pos":[0,49]}]},{"pos":[46881,46937],"content":"The directory into which to write the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory into which to write the tracking log files","pos":[0,56]}]},{"pos":[47002,47099],"content":"The name of the task calling this function, used to determine the names of the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the task calling this function, used to determine the names of the tracking log files","pos":[0,97]}]},{"pos":[47717,47783],"content":"Write tracking logs corresponding to the current tracking context.","needQuote":true,"needEscape":true,"nodes":[{"content":"Write tracking logs corresponding to the current tracking context.","pos":[0,66]}]},{"pos":[47986,48042],"content":"The directory into which to write the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The directory into which to write the tracking log files","pos":[0,56]}]},{"pos":[48107,48204],"content":"The name of the task calling this function, used to determine the names of the tracking log files","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the task calling this function, used to determine the names of the tracking log files","pos":[0,97]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Utilities.FileTracker\n  id: FileTracker\n  children:\n  - Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])\n  - Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(System.String)\n  - Microsoft.Build.Utilities.FileTracker.EndTrackingContext\n  - Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath\n  - Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(System.String)\n  - Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(System.String)\n  - Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath\n  - Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)\n  - Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)\n  - Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])\n  - Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)\n  - Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])\n  - Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  - Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  - Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  - Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  - Microsoft.Build.Utilities.FileTracker.ResumeTracking\n  - Microsoft.Build.Utilities.FileTracker.SetThreadCount(System.Int32)\n  - Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)\n  - Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)\n  - Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.StartTrackingContext(System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup\n  - Microsoft.Build.Utilities.FileTracker.SuspendTracking\n  - Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(System.String,System.String)\n  - Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(System.String,System.String)\n  langs:\n  - csharp\n  name: FileTracker\n  nameWithType: FileTracker\n  fullName: Microsoft.Build.Utilities.FileTracker\n  type: Class\n  summary: This class contains utility functions to encapsulate launching and logging for the Tracker\n  syntax:\n    content: public static class FileTracker\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])\n  id: CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: CreateRootingMarkerResponseFile(ITaskItem[])\n  nameWithType: FileTracker.CreateRootingMarkerResponseFile(ITaskItem[])\n  fullName: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(ITaskItem[])\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Given a set of source files in the form of ITaskItem, creates a temporary response file containing the rooting marker that corresponds to those sources.\n  syntax:\n    content: public static string CreateRootingMarkerResponseFile (Microsoft.Build.Framework.ITaskItem[] sources);\n    parameters:\n    - id: sources\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The set of source files.\n    return:\n      type: System.String\n      description: The response file path.\n  overload: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(System.String)\n  id: CreateRootingMarkerResponseFile(System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: CreateRootingMarkerResponseFile(String)\n  nameWithType: FileTracker.CreateRootingMarkerResponseFile(String)\n  fullName: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Given a rooting marker, creates a temporary response file with that rooting marker in it.\n  syntax:\n    content: public static string CreateRootingMarkerResponseFile (string rootMarker);\n    parameters:\n    - id: rootMarker\n      type: System.String\n      description: The rooting marker to put in the response file.\n    return:\n      type: System.String\n      description: The response file path.\n  overload: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.EndTrackingContext\n  id: EndTrackingContext\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: EndTrackingContext()\n  nameWithType: FileTracker.EndTrackingContext()\n  fullName: Microsoft.Build.Utilities.FileTracker.EndTrackingContext()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Stops tracking file accesses.\n  syntax:\n    content: public static void EndTrackingContext ();\n    parameters: []\n  overload: Microsoft.Build.Utilities.FileTracker.EndTrackingContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath\n  id: EnsureFileTrackerOnPath\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: EnsureFileTrackerOnPath()\n  nameWithType: FileTracker.EnsureFileTrackerOnPath()\n  fullName: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking.\n  syntax:\n    content: public static string EnsureFileTrackerOnPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: The old value of the PATH environment variable.\n  overload: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(System.String)\n  id: EnsureFileTrackerOnPath(System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: EnsureFileTrackerOnPath(String)\n  nameWithType: FileTracker.EnsureFileTrackerOnPath(String)\n  fullName: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Prepends the path to the appropriate FileTracker assembly to the PATH environment variable. Used for inproc tracking, or when the .NET Framework may not be on the PATH.\n  syntax:\n    content: public static string EnsureFileTrackerOnPath (string rootPath);\n    parameters:\n    - id: rootPath\n      type: System.String\n      description: The root path for FileTracker.dll. Overrides the toolType if specified.\n    return:\n      type: System.String\n      description: The old value of PATH\n  overload: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(System.String)\n  id: FileIsExcludedFromDependencies(System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FileIsExcludedFromDependencies(String)\n  nameWithType: FileTracker.FileIsExcludedFromDependencies(String)\n  fullName: Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Test to see if the specified file is excluded from tracked dependencies\n  syntax:\n    content: public static bool FileIsExcludedFromDependencies (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Full path of the file to test\n    return:\n      type: System.Boolean\n      description: Returns true if the file is excluded.\n  overload: Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(System.String,System.String)\n  id: FileIsUnderPath(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FileIsUnderPath(String,String)\n  nameWithType: FileTracker.FileIsUnderPath(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Test to see if the specified file is under the specified path\n  syntax:\n    content: public static bool FileIsUnderPath (string fileName, string path);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Full path of the file to test\n    - id: path\n      type: System.String\n      description: The path that might contain the file.\n    return:\n      type: System.Boolean\n      description: Returns true if the file is under the path.\n  overload: Microsoft.Build.Utilities.FileTracker.FileIsUnderPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath\n  id: FindTrackerOnPath\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FindTrackerOnPath()\n  nameWithType: FileTracker.FindTrackerOnPath()\n  fullName: Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Searches %PATH% for the location of Tracker.exe, and returns the first path that matches.Matching full path to Tracker.exe or null if a matching path is not found.\n  syntax:\n    content: public static string FindTrackerOnPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: Returns the path to Tracker.exe.\n  overload: Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)\n  id: ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: ForceOutOfProcTracking(ExecutableType)\n  nameWithType: FileTracker.ForceOutOfProcTracking(ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(ExecutableType)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Determines whether we must track out-of-proc, or whether inproc tracking will work.\n  syntax:\n    content: public static bool ForceOutOfProcTracking (Microsoft.Build.Utilities.ExecutableType toolType);\n    parameters:\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The executable type for the tool being tracked\n    return:\n      type: System.Boolean\n      description: True if we need to track out-of-proc, false if inproc tracking is OK\n  overload: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  id: ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: ForceOutOfProcTracking(ExecutableType,String,String)\n  nameWithType: FileTracker.ForceOutOfProcTracking(ExecutableType,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(ExecutableType,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Determines whether we must track out-of-proc, or whether inproc tracking will work.\n  syntax:\n    content: public static bool ForceOutOfProcTracking (Microsoft.Build.Utilities.ExecutableType toolType, string dllName, string cancelEventName);\n    parameters:\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The executable type for the tool being tracked\n    - id: dllName\n      type: System.String\n      description: The tool being tracked.\n    - id: cancelEventName\n      type: System.String\n      description: The name of the cancel event tracker should listen for, or null if there isn't one\n    return:\n      type: System.Boolean\n      description: True if we need to track out-of-proc, false if inproc tracking is OK\n  overload: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)\n  id: FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FormatRootingMarker(ITaskItem)\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem)\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Construct a rooting marker string from the ITaskItem array of primary sources.\n  syntax:\n    content: public static string FormatRootingMarker (Microsoft.Build.Framework.ITaskItem source);\n    parameters:\n    - id: source\n      type: Microsoft.Build.Framework.ITaskItem\n      description: The primary sources.\n    return:\n      type: System.String\n      description: Returns the marker string.\n  overload: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])\n  id: FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FormatRootingMarker(ITaskItem[])\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem[])\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem[])\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Construct a rooting marker string from the ITaskItem array of primary sources.\n  syntax:\n    content: public static string FormatRootingMarker (Microsoft.Build.Framework.ITaskItem[] sources);\n    parameters:\n    - id: sources\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: ITaskItem array of primary sources.\n    return:\n      type: System.String\n      description: Returns the marker string.\n  overload: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)\n  id: FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FormatRootingMarker(ITaskItem,ITaskItem)\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem,ITaskItem)\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem,ITaskItem)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Construct a rooting marker string from the ITaskItem array of primary sources.\n  syntax:\n    content: public static string FormatRootingMarker (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem output);\n    parameters:\n    - id: source\n      type: Microsoft.Build.Framework.ITaskItem\n      description: The primary sources.\n    - id: output\n      type: Microsoft.Build.Framework.ITaskItem\n      description: The output files.\n    return:\n      type: System.String\n      description: Returns the marker string.\n  overload: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])\n  id: FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: FormatRootingMarker(ITaskItem[],ITaskItem[])\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem[],ITaskItem[])\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem[],ITaskItem[])\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Construct a rooting marker string from the ITaskItem array of primary sources.\n  syntax:\n    content: public static string FormatRootingMarker (Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem[] outputs);\n    parameters:\n    - id: sources\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: ITaskItem array of primary sources.\n    - id: outputs\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The output files.\n    return:\n      type: System.String\n      description: Returns the marker string.\n  overload: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  id: GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: GetFileTrackerPath(ExecutableType)\n  nameWithType: FileTracker.GetFileTrackerPath(ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(ExecutableType)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.\n  syntax:\n    content: public static string GetFileTrackerPath (Microsoft.Build.Utilities.ExecutableType toolType);\n    parameters:\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The ExecutableType of the tool being wrapped.\n    return:\n      type: System.String\n      description: Returns the path of the tool.\n  overload: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  id: GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: GetFileTrackerPath(ExecutableType,String)\n  nameWithType: FileTracker.GetFileTrackerPath(ExecutableType,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(ExecutableType,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct FileTracker.dll.\n  syntax:\n    content: public static string GetFileTrackerPath (Microsoft.Build.Utilities.ExecutableType toolType, string rootPath);\n    parameters:\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The toolType.\n    - id: rootPath\n      type: System.String\n      description: The root path for FileTracker.dll. Overrides the toolType if specified.\n    return:\n      type: System.String\n      description: Returns <xref:System.String>.\n  overload: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  id: GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: GetTrackerPath(ExecutableType)\n  nameWithType: FileTracker.GetTrackerPath(ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(ExecutableType)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.\n  syntax:\n    content: public static string GetTrackerPath (Microsoft.Build.Utilities.ExecutableType toolType);\n    parameters:\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The ExecutableType of the tool being wrapped.\n    return:\n      type: System.String\n      description: Returns the tracker path.\n  overload: Microsoft.Build.Utilities.FileTracker.GetTrackerPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  id: GetTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: GetTrackerPath(ExecutableType,String)\n  nameWithType: FileTracker.GetTrackerPath(ExecutableType,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(ExecutableType,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Given the ExecutableType of the tool being wrapped and information that we know about our current bitness, figures out and returns the path to the correct Tracker.exe.\n  syntax:\n    content: public static string GetTrackerPath (Microsoft.Build.Utilities.ExecutableType toolType, string rootPath);\n    parameters:\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The toolType.\n    - id: rootPath\n      type: System.String\n      description: The root path for Tracker.exe. Overrides the toolType if specified.\n    return:\n      type: System.String\n      description: Returns <xref:System.String>.\n  overload: Microsoft.Build.Utilities.FileTracker.GetTrackerPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.ResumeTracking\n  id: ResumeTracking\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: ResumeTracking()\n  nameWithType: FileTracker.ResumeTracking()\n  fullName: Microsoft.Build.Utilities.FileTracker.ResumeTracking()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Resume tracking file accesses in the current tracking context.\n  syntax:\n    content: public static void ResumeTracking ();\n    parameters: []\n  overload: Microsoft.Build.Utilities.FileTracker.ResumeTracking*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.SetThreadCount(System.Int32)\n  id: SetThreadCount(System.Int32)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: SetThreadCount(Int32)\n  nameWithType: FileTracker.SetThreadCount(Int32)\n  fullName: Microsoft.Build.Utilities.FileTracker.SetThreadCount(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Set the global thread count, and assign that count to the current thread.\n  syntax:\n    content: public static void SetThreadCount (int threadCount);\n    parameters:\n    - id: threadCount\n      type: System.Int32\n      description: The thread count.\n  overload: Microsoft.Build.Utilities.FileTracker.SetThreadCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)\n  id: StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartProcess(String,String,ExecutableType)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Start the process; tracking the command.\n  syntax:\n    content: public static System.Diagnostics.Process StartProcess (string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The type of executable the wrapped tool is\n    return:\n      type: System.Diagnostics.Process\n      description: Returns the process instance.\n  overload: Microsoft.Build.Utilities.FileTracker.StartProcess*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)\n  id: StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartProcess(String,String,ExecutableType,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Start the process; tracking the command.\n  syntax:\n    content: public static System.Diagnostics.Process StartProcess (string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string rootFiles);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command‘s arguments\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The type of executable the wrapped tool is\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    return:\n      type: System.Diagnostics.Process\n      description: Returns the process instance.\n  overload: Microsoft.Build.Utilities.FileTracker.StartProcess*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  id: StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartProcess(String,String,ExecutableType,String,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Start the process; tracking the command.\n  syntax:\n    content: public static System.Diagnostics.Process StartProcess (string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string intermediateDirectory, string rootFiles);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The type of executable the wrapped tool is\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    return:\n      type: System.Diagnostics.Process\n      description: Returns the process instance\n  overload: Microsoft.Build.Utilities.FileTracker.StartProcess*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)\n  id: StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartProcess(String,String,ExecutableType,String,String,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Start the process; tracking the command.\n  syntax:\n    content: public static System.Diagnostics.Process StartProcess (string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string dllName, string intermediateDirectory, string rootFiles);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The type of executable the wrapped tool is\n    - id: dllName\n      type: System.String\n      description: The name of the dll that will do the tracking\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    return:\n      type: System.Diagnostics.Process\n      description: Process instance\n  overload: Microsoft.Build.Utilities.FileTracker.StartProcess*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)\n  id: StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartProcess(String,String,ExecutableType,String,String,String,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String,String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Start the process; tracking the command.\n  syntax:\n    content: public static System.Diagnostics.Process StartProcess (string command, string arguments, Microsoft.Build.Utilities.ExecutableType toolType, string dllName, string intermediateDirectory, string rootFiles, string cancelEventName);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    - id: toolType\n      type: Microsoft.Build.Utilities.ExecutableType\n      description: The type of executable the wrapped tool is\n    - id: dllName\n      type: System.String\n      description: The name of the dll that will do the tracking\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    - id: cancelEventName\n      type: System.String\n      description: If Tracker should be listening on a particular event for cancellation, pass its name here\n    return:\n      type: System.Diagnostics.Process\n      description: Process instance\n  overload: Microsoft.Build.Utilities.FileTracker.StartProcess*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartTrackingContext(System.String,System.String)\n  id: StartTrackingContext(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartTrackingContext(String,String)\n  nameWithType: FileTracker.StartTrackingContext(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartTrackingContext(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Starts tracking file accesses.\n  syntax:\n    content: public static void StartTrackingContext (string intermediateDirectory, string taskName);\n    parameters:\n    - id: intermediateDirectory\n      type: System.String\n      description: The directory into which to write the tracking log files\n    - id: taskName\n      type: System.String\n      description: The name of the task calling this function, used to determine the names of the tracking log files\n  overload: Microsoft.Build.Utilities.FileTracker.StartTrackingContext*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(System.String,System.String,System.String)\n  id: StartTrackingContextWithRoot(System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StartTrackingContextWithRoot(String,String,String)\n  nameWithType: FileTracker.StartTrackingContextWithRoot(String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Starts tracking file accesses, using the rooting marker in the response file provided. To automatically generate a response file given a rooting marker, call FileTracker.CreateRootingMarkerResponseFile.\n  syntax:\n    content: public static void StartTrackingContextWithRoot (string intermediateDirectory, string taskName, string rootMarkerResponseFile);\n    parameters:\n    - id: intermediateDirectory\n      type: System.String\n      description: The directory into which to write the tracking log files\n    - id: taskName\n      type: System.String\n      description: The name of the task calling this function, used to determine the names of the tracking log files\n    - id: rootMarkerResponseFile\n      type: System.String\n      description: The rooting marker in the response file.\n  overload: Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup\n  id: StopTrackingAndCleanup\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: StopTrackingAndCleanup()\n  nameWithType: FileTracker.StopTrackingAndCleanup()\n  fullName: Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Stop tracking file accesses and get rid of the current tracking contexts.\n  syntax:\n    content: public static void StopTrackingAndCleanup ();\n    parameters: []\n  overload: Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.SuspendTracking\n  id: SuspendTracking\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: SuspendTracking()\n  nameWithType: FileTracker.SuspendTracking()\n  fullName: Microsoft.Build.Utilities.FileTracker.SuspendTracking()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Temporarily suspend tracking of file accesses in the current tracking context.\n  syntax:\n    content: public static void SuspendTracking ();\n    parameters: []\n  overload: Microsoft.Build.Utilities.FileTracker.SuspendTracking*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String)\n  id: TrackerArguments(System.String,System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: TrackerArguments(String,String,String,String,String)\n  nameWithType: FileTracker.TrackerArguments(String,String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerArguments(String,String,String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: This method constructs the correct Tracker.exe arguments from its parameters.\n  syntax:\n    content: public static string TrackerArguments (string command, string arguments, string dllName, string intermediateDirectory, string rootFiles);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    - id: dllName\n      type: System.String\n      description: The name of the dll that will do the tracking\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    return:\n      type: System.String\n      description: The arguments as a string\n  overload: Microsoft.Build.Utilities.FileTracker.TrackerArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)\n  id: TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: TrackerArguments(String,String,String,String,String,String)\n  nameWithType: FileTracker.TrackerArguments(String,String,String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerArguments(String,String,String,String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: This method constructs the correct Tracker.exe arguments from its parameters.\n  syntax:\n    content: public static string TrackerArguments (string command, string arguments, string dllName, string intermediateDirectory, string rootFiles, string cancelEventName);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    - id: dllName\n      type: System.String\n      description: The name of the dll that will do the tracking\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    - id: cancelEventName\n      type: System.String\n      description: If a cancel event has been created that Tracker should be listening for, its name is passed here\n    return:\n      type: System.String\n      description: The arguments as a string\n  overload: Microsoft.Build.Utilities.FileTracker.TrackerArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(System.String,System.String)\n  id: TrackerCommandArguments(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: TrackerCommandArguments(String,String)\n  nameWithType: FileTracker.TrackerCommandArguments(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: This method constructs the correct Tracker.exe command arguments from its parameters\n  syntax:\n    content: public static string TrackerCommandArguments (string command, string arguments);\n    parameters:\n    - id: command\n      type: System.String\n      description: The command to track\n    - id: arguments\n      type: System.String\n      description: The command to track's arguments\n    return:\n      type: System.String\n      description: The arguments as a string\n  overload: Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String)\n  id: TrackerResponseFileArguments(System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: TrackerResponseFileArguments(String,String,String)\n  nameWithType: FileTracker.TrackerResponseFileArguments(String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: This method constructs the correct Tracker.exe response file arguments from its parameters.\n  syntax:\n    content: public static string TrackerResponseFileArguments (string dllName, string intermediateDirectory, string rootFiles);\n    parameters:\n    - id: dllName\n      type: System.String\n      description: The name of the dll that will do the tracking\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    return:\n      type: System.String\n      description: The arguments as a string\n  overload: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String,System.String)\n  id: TrackerResponseFileArguments(System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: TrackerResponseFileArguments(String,String,String,String)\n  nameWithType: FileTracker.TrackerResponseFileArguments(String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(String,String,String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: This method constructs the correct Tracker.exe response file arguments from its parameters.\n  syntax:\n    content: public static string TrackerResponseFileArguments (string dllName, string intermediateDirectory, string rootFiles, string cancelEventName);\n    parameters:\n    - id: dllName\n      type: System.String\n      description: The name of the dll that will do the tracking\n    - id: intermediateDirectory\n      type: System.String\n      description: Intermediate directory where tracking logs will be written\n    - id: rootFiles\n      type: System.String\n      description: Rooting marker\n    - id: cancelEventName\n      type: System.String\n      description: If a cancel event has been created that Tracker should be listening for, its name is passed here\n    return:\n      type: System.String\n      description: The arguments as a string\n  overload: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(System.String,System.String)\n  id: WriteAllTLogs(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: WriteAllTLogs(String,String)\n  nameWithType: FileTracker.WriteAllTLogs(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Write tracking logs for all contexts and threads.\n  syntax:\n    content: public static void WriteAllTLogs (string intermediateDirectory, string taskName);\n    parameters:\n    - id: intermediateDirectory\n      type: System.String\n      description: The directory into which to write the tracking log files\n    - id: taskName\n      type: System.String\n      description: The name of the task calling this function, used to determine the names of the tracking log files\n  overload: Microsoft.Build.Utilities.FileTracker.WriteAllTLogs*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(System.String,System.String)\n  id: WriteContextTLogs(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  langs:\n  - csharp\n  name: WriteContextTLogs(String,String)\n  nameWithType: FileTracker.WriteContextTLogs(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(String,String)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Utilities.v4.0\n  namespace: Microsoft.Build.Utilities\n  summary: Write tracking logs corresponding to the current tracking context.\n  syntax:\n    content: public static void WriteContextTLogs (string intermediateDirectory, string taskName);\n    parameters:\n    - id: intermediateDirectory\n      type: System.String\n      description: The directory into which to write the tracking log files\n    - id: taskName\n      type: System.String\n      description: The name of the task calling this function, used to determine the names of the tracking log files\n  overload: Microsoft.Build.Utilities.FileTracker.WriteContextTLogs*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: CreateRootingMarkerResponseFile(ITaskItem[])\n  nameWithType: FileTracker.CreateRootingMarkerResponseFile(ITaskItem[])\n  fullName: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(ITaskItem[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: CreateRootingMarkerResponseFile(String)\n  nameWithType: FileTracker.CreateRootingMarkerResponseFile(String)\n  fullName: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(String)\n- uid: Microsoft.Build.Utilities.FileTracker.EndTrackingContext\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: EndTrackingContext()\n  nameWithType: FileTracker.EndTrackingContext()\n  fullName: Microsoft.Build.Utilities.FileTracker.EndTrackingContext()\n- uid: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: EnsureFileTrackerOnPath()\n  nameWithType: FileTracker.EnsureFileTrackerOnPath()\n  fullName: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath()\n- uid: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: EnsureFileTrackerOnPath(String)\n  nameWithType: FileTracker.EnsureFileTrackerOnPath(String)\n  fullName: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(String)\n- uid: Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FileIsExcludedFromDependencies(String)\n  nameWithType: FileTracker.FileIsExcludedFromDependencies(String)\n  fullName: Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FileIsUnderPath(String,String)\n  nameWithType: FileTracker.FileIsUnderPath(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FindTrackerOnPath()\n  nameWithType: FileTracker.FindTrackerOnPath()\n  fullName: Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath()\n- uid: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: ForceOutOfProcTracking(ExecutableType)\n  nameWithType: FileTracker.ForceOutOfProcTracking(ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(ExecutableType)\n- uid: Microsoft.Build.Utilities.ExecutableType\n  parent: Microsoft.Build.Utilities\n  isExternal: false\n  name: ExecutableType\n  nameWithType: ExecutableType\n  fullName: Microsoft.Build.Utilities.ExecutableType\n- uid: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: ForceOutOfProcTracking(ExecutableType,String,String)\n  nameWithType: FileTracker.ForceOutOfProcTracking(ExecutableType,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(ExecutableType,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FormatRootingMarker(ITaskItem)\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem)\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem)\n- uid: Microsoft.Build.Framework.ITaskItem\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FormatRootingMarker(ITaskItem[])\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem[])\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem[])\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FormatRootingMarker(ITaskItem,ITaskItem)\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem,ITaskItem)\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem,ITaskItem)\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FormatRootingMarker(ITaskItem[],ITaskItem[])\n  nameWithType: FileTracker.FormatRootingMarker(ITaskItem[],ITaskItem[])\n  fullName: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(ITaskItem[],ITaskItem[])\n- uid: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: GetFileTrackerPath(ExecutableType)\n  nameWithType: FileTracker.GetFileTrackerPath(ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(ExecutableType)\n- uid: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: GetFileTrackerPath(ExecutableType,String)\n  nameWithType: FileTracker.GetFileTrackerPath(ExecutableType,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(ExecutableType,String)\n- uid: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: GetTrackerPath(ExecutableType)\n  nameWithType: FileTracker.GetTrackerPath(ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(ExecutableType)\n- uid: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: GetTrackerPath(ExecutableType,String)\n  nameWithType: FileTracker.GetTrackerPath(ExecutableType,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.GetTrackerPath(ExecutableType,String)\n- uid: Microsoft.Build.Utilities.FileTracker.ResumeTracking\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: ResumeTracking()\n  nameWithType: FileTracker.ResumeTracking()\n  fullName: Microsoft.Build.Utilities.FileTracker.ResumeTracking()\n- uid: Microsoft.Build.Utilities.FileTracker.SetThreadCount(System.Int32)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: SetThreadCount(Int32)\n  nameWithType: FileTracker.SetThreadCount(Int32)\n  fullName: Microsoft.Build.Utilities.FileTracker.SetThreadCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartProcess(String,String,ExecutableType)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType)\n- uid: System.Diagnostics.Process\n  parent: System.Diagnostics\n  isExternal: false\n  name: Process\n  nameWithType: Process\n  fullName: System.Diagnostics.Process\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartProcess(String,String,ExecutableType,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String)\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartProcess(String,String,ExecutableType,String,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartProcess(String,String,ExecutableType,String,String,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartProcess(String,String,ExecutableType,String,String,String,String)\n  nameWithType: FileTracker.StartProcess(String,String,ExecutableType,String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartProcess(String,String,ExecutableType,String,String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.StartTrackingContext(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartTrackingContext(String,String)\n  nameWithType: FileTracker.StartTrackingContext(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartTrackingContext(String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartTrackingContextWithRoot(String,String,String)\n  nameWithType: FileTracker.StartTrackingContextWithRoot(String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StopTrackingAndCleanup()\n  nameWithType: FileTracker.StopTrackingAndCleanup()\n  fullName: Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup()\n- uid: Microsoft.Build.Utilities.FileTracker.SuspendTracking\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: SuspendTracking()\n  nameWithType: FileTracker.SuspendTracking()\n  fullName: Microsoft.Build.Utilities.FileTracker.SuspendTracking()\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerArguments(String,String,String,String,String)\n  nameWithType: FileTracker.TrackerArguments(String,String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerArguments(String,String,String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerArguments(String,String,String,String,String,String)\n  nameWithType: FileTracker.TrackerArguments(String,String,String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerArguments(String,String,String,String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerCommandArguments(String,String)\n  nameWithType: FileTracker.TrackerCommandArguments(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerResponseFileArguments(String,String,String)\n  nameWithType: FileTracker.TrackerResponseFileArguments(String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerResponseFileArguments(String,String,String,String)\n  nameWithType: FileTracker.TrackerResponseFileArguments(String,String,String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(String,String,String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: WriteAllTLogs(String,String)\n  nameWithType: FileTracker.WriteAllTLogs(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(System.String,System.String)\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: WriteContextTLogs(String,String)\n  nameWithType: FileTracker.WriteContextTLogs(String,String)\n  fullName: Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(String,String)\n- uid: Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: CreateRootingMarkerResponseFile\n  nameWithType: FileTracker.CreateRootingMarkerResponseFile\n- uid: Microsoft.Build.Utilities.FileTracker.EndTrackingContext*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: EndTrackingContext\n  nameWithType: FileTracker.EndTrackingContext\n- uid: Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: EnsureFileTrackerOnPath\n  nameWithType: FileTracker.EnsureFileTrackerOnPath\n- uid: Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FileIsExcludedFromDependencies\n  nameWithType: FileTracker.FileIsExcludedFromDependencies\n- uid: Microsoft.Build.Utilities.FileTracker.FileIsUnderPath*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FileIsUnderPath\n  nameWithType: FileTracker.FileIsUnderPath\n- uid: Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FindTrackerOnPath\n  nameWithType: FileTracker.FindTrackerOnPath\n- uid: Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: ForceOutOfProcTracking\n  nameWithType: FileTracker.ForceOutOfProcTracking\n- uid: Microsoft.Build.Utilities.FileTracker.FormatRootingMarker*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: FormatRootingMarker\n  nameWithType: FileTracker.FormatRootingMarker\n- uid: Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: GetFileTrackerPath\n  nameWithType: FileTracker.GetFileTrackerPath\n- uid: Microsoft.Build.Utilities.FileTracker.GetTrackerPath*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: GetTrackerPath\n  nameWithType: FileTracker.GetTrackerPath\n- uid: Microsoft.Build.Utilities.FileTracker.ResumeTracking*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: ResumeTracking\n  nameWithType: FileTracker.ResumeTracking\n- uid: Microsoft.Build.Utilities.FileTracker.SetThreadCount*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: SetThreadCount\n  nameWithType: FileTracker.SetThreadCount\n- uid: Microsoft.Build.Utilities.FileTracker.StartProcess*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartProcess\n  nameWithType: FileTracker.StartProcess\n- uid: Microsoft.Build.Utilities.FileTracker.StartTrackingContext*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartTrackingContext\n  nameWithType: FileTracker.StartTrackingContext\n- uid: Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StartTrackingContextWithRoot\n  nameWithType: FileTracker.StartTrackingContextWithRoot\n- uid: Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: StopTrackingAndCleanup\n  nameWithType: FileTracker.StopTrackingAndCleanup\n- uid: Microsoft.Build.Utilities.FileTracker.SuspendTracking*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: SuspendTracking\n  nameWithType: FileTracker.SuspendTracking\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerArguments*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerArguments\n  nameWithType: FileTracker.TrackerArguments\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerCommandArguments\n  nameWithType: FileTracker.TrackerCommandArguments\n- uid: Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: TrackerResponseFileArguments\n  nameWithType: FileTracker.TrackerResponseFileArguments\n- uid: Microsoft.Build.Utilities.FileTracker.WriteAllTLogs*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: WriteAllTLogs\n  nameWithType: FileTracker.WriteAllTLogs\n- uid: Microsoft.Build.Utilities.FileTracker.WriteContextTLogs*\n  parent: Microsoft.Build.Utilities.FileTracker\n  isExternal: false\n  name: WriteContextTLogs\n  nameWithType: FileTracker.WriteContextTLogs\n"}