{"nodes":[{"pos":[1897,2072],"content":"Contains the extension methods for the data row collection classes. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains the extension methods for the data row collection classes. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,175],"nodes":[{"content":"Contains the extension methods for the data row collection classes.","pos":[0,67]},{"content":"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[68,175]}]}]},{"pos":[2085,2465],"content":"The EnumerableRowCollectionExtensions class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.       This class cannot be inherited and cannot be instantiated.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The EnumerableRowCollectionExtensions class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.       This class cannot be inherited and cannot be instantiated.","pos":[0,378],"nodes":[{"content":"The EnumerableRowCollectionExtensions class contains static extension methods that define the &lt;xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A&gt; method and standard query operations for the &lt;xref:System.Data.EnumerableRowCollection%601&gt; and &lt;xref:System.Data.OrderedEnumerableRowCollection%601&gt; classes.","pos":[0,313],"source":"The EnumerableRowCollectionExtensions class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes."},{"content":"This class cannot be inherited and cannot be instantiated.","pos":[320,378]}]}]},{"pos":[3408,3420],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3509,3521],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4576,4588],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4665,4677],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4766,4778],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6023,6035],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6112,6124],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6218,6230],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6319,6331],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7451,7463],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7540,7552],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7641,7653],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8968,8980],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9057,9069],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9163,9175],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9264,9276],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10320,10332],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10403,10415],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10498,10510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11609,11621],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11698,11710],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11799,11811],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13098,13110],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13187,13199],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13293,13305],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13394,13406],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14568,14580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14657,14669],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14758,14770],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16127,16139],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16216,16228],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16322,16334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16423,16435],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17509,17521],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17606,17618],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17700,17712],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.EnumerableRowCollectionExtensions\n  id: EnumerableRowCollectionExtensions\n  children:\n  - System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection@)\n  - System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  - System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  - System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Data.EnumerableRowCollectionExtensions.Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})\n  - System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  - System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  - System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})\n  langs:\n  - csharp\n  name: EnumerableRowCollectionExtensions\n  nameWithType: EnumerableRowCollectionExtensions\n  fullName: System.Data.EnumerableRowCollectionExtensions\n  type: Class\n  summary: Contains the extension methods for the data row collection classes. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  remarks: \"The EnumerableRowCollectionExtensions class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.  \\n  \\n This class cannot be inherited and cannot be instantiated.\"\n  syntax:\n    content: public static class EnumerableRowCollectionExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection@)\n  id: Cast``1(System.Data.EnumerableRowCollection@)\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: Cast(EnumerableRowCollection)\n  nameWithType: EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)\n  fullName: System.Data.EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.EnumerableRowCollection<TResult> Cast<TResult> (this System.Data.EnumerableRowCollection source);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection\n      description: To be added.\n    return:\n      type: System.Data.EnumerableRowCollection{TResult}\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.Cast<TResult>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  id: OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  id: OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  id: OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  id: OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})\n  id: Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: Select(EnumerableRowCollection<TRow>,Func<TRow,S>)\n  nameWithType: EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.EnumerableRowCollection<S> Select<TRow,S> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,S> selector);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n    - id: selector\n      type: System.Func{TRow,S}\n      description: To be added.\n    return:\n      type: System.Data.EnumerableRowCollection{S}\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.Select<TRow,S>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  id: ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenBy<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);\n    parameters:\n    - id: source\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  id: ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenBy<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  id: ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenByDescending<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);\n    parameters:\n    - id: source\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  id: ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenByDescending<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n    - id: keySelector\n      type: System.Func{TRow,TKey}\n      description: To be added.\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: To be added.\n    return:\n      type: System.Data.OrderedEnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})\n  id: Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  langs:\n  - csharp\n  name: Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)\n  nameWithType: EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)\n  type: Method\n  assemblies:\n  - System.Data.DataSetExtensions\n  namespace: System.Data\n  syntax:\n    content: public static System.Data.EnumerableRowCollection<TRow> Where<TRow> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,bool> predicate);\n    parameters:\n    - id: source\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n    - id: predicate\n      type: System.Func{TRow,System.Boolean}\n      description: To be added.\n    return:\n      type: System.Data.EnumerableRowCollection`1\n      description: To be added.\n  overload: System.Data.EnumerableRowCollectionExtensions.Where<TRow>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection@)\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: Cast(EnumerableRowCollection)\n  nameWithType: EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)\n  fullName: System.Data.EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)\n- uid: System.Data.EnumerableRowCollection{TResult}\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<TResult>\n  nameWithType: EnumerableRowCollection<TResult>\n  fullName: System.Data.EnumerableRowCollection<TResult>\n  spec.csharp:\n  - uid: System.Data.EnumerableRowCollection`1\n    name: EnumerableRowCollection\n    nameWithType: EnumerableRowCollection\n    fullName: EnumerableRowCollection<TResult>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResult\n    name: TResult\n    nameWithType: TResult\n    fullName: TResult\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.EnumerableRowCollection\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection\n  nameWithType: EnumerableRowCollection\n  fullName: System.Data.EnumerableRowCollection\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n- uid: System.Data.OrderedEnumerableRowCollection`1\n  parent: System.Data\n  isExternal: false\n  name: OrderedEnumerableRowCollection<TRow>\n  nameWithType: OrderedEnumerableRowCollection<TRow>\n  fullName: System.Data.OrderedEnumerableRowCollection<TRow>\n- uid: System.Data.EnumerableRowCollection`1\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<TRow>\n  nameWithType: EnumerableRowCollection<TRow>\n  fullName: System.Data.EnumerableRowCollection<TRow>\n- uid: System.Func{TRow,TKey}\n  parent: System\n  isExternal: true\n  name: Func<TRow,TKey>\n  nameWithType: Func<TRow,TKey>\n  fullName: System.Func<TRow,TKey>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<TRow,TKey>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n  spec.csharp:\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    nameWithType: IComparer\n    fullName: IComparer<TKey>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TKey\n    name: TKey\n    nameWithType: TKey\n    fullName: TKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n- uid: System.Data.EnumerableRowCollectionExtensions.Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: Select(EnumerableRowCollection<TRow>,Func<TRow,S>)\n  nameWithType: EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)\n- uid: System.Data.EnumerableRowCollection{S}\n  parent: System.Data\n  isExternal: false\n  name: EnumerableRowCollection<S>\n  nameWithType: EnumerableRowCollection<S>\n  fullName: System.Data.EnumerableRowCollection<S>\n  spec.csharp:\n  - uid: System.Data.EnumerableRowCollection`1\n    name: EnumerableRowCollection\n    nameWithType: EnumerableRowCollection\n    fullName: EnumerableRowCollection<S>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: S\n    name: S\n    nameWithType: S\n    fullName: S\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Func{TRow,S}\n  parent: System\n  isExternal: true\n  name: Func<TRow,S>\n  nameWithType: Func<TRow,S>\n  fullName: System.Func<TRow,S>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<TRow,S>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: S\n    name: S\n    nameWithType: S\n    fullName: S\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)\n- uid: System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)\n  nameWithType: EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)\n  fullName: System.Data.EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)\n- uid: System.Func{TRow,System.Boolean}\n  parent: System\n  isExternal: true\n  name: Func<TRow,Boolean>\n  nameWithType: Func<TRow,Boolean>\n  fullName: System.Func<TRow,System.Boolean>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<TRow,System.Boolean>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TRow\n    name: TRow\n    nameWithType: TRow\n    fullName: TRow\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.EnumerableRowCollectionExtensions.Cast<TResult>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: Cast<TResult>\n  nameWithType: EnumerableRowCollectionExtensions.Cast<TResult>\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: OrderBy<TRow,TKey>\n  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>\n- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: OrderByDescending<TRow,TKey>\n  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>\n- uid: System.Data.EnumerableRowCollectionExtensions.Select<TRow,S>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: Select<TRow,S>\n  nameWithType: EnumerableRowCollectionExtensions.Select<TRow,S>\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: ThenBy<TRow,TKey>\n  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>\n- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: ThenByDescending<TRow,TKey>\n  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>\n- uid: System.Data.EnumerableRowCollectionExtensions.Where<TRow>*\n  parent: System.Data.EnumerableRowCollectionExtensions\n  isExternal: false\n  name: Where<TRow>\n  nameWithType: EnumerableRowCollectionExtensions.Where<TRow>\n"}