{"nodes":[{"pos":[626,679],"content":"The base class for the configuration converter types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base class for the configuration converter types.","pos":[0,53]}]},{"pos":[691,900],"content":"The ConfigurationConverterBase is the base class for the converter configuration types. These are types that convert strings, found in the configuration file, to and from the related strongly typed properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The ConfigurationConverterBase is the base class for the converter configuration types. These are types that convert strings, found in the configuration file, to and from the related strongly typed properties.","pos":[0,209],"nodes":[{"content":"The ConfigurationConverterBase is the base class for the converter configuration types.","pos":[0,87]},{"content":"These are types that convert strings, found in the configuration file, to and from the related strongly typed properties.","pos":[88,209]}]}]},{"pos":[7198,7307],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationConverterBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationConverterBase\"></xref> class."},{"pos":[7319,7503],"content":"Because you normally use the converter types provided by the system, the only time you need the ConfigurationConverterBase constructor is when you must create your own conversion type.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Because you normally use the converter types provided by the system, the only time you need the ConfigurationConverterBase constructor is when you must create your own conversion type.","pos":[0,184]}]},{"pos":[8321,8366],"content":"Determines whether the conversion is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the conversion is allowed.","pos":[0,45]}]},{"pos":[8378,8537],"content":"The CanConvertFrom method determines whether a conversion can be performed on strongly typed properties to obtain value strings used in the configuration file.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The CanConvertFrom method determines whether a conversion can be performed on strongly typed properties to obtain value strings used in the configuration file.","pos":[0,159]}]},{"pos":[9229,9332],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used for type conversions.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions."},{"pos":[9391,9430],"content":"The <xref:System.Type> to convert from.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Type&gt; to convert from.","pos":[0,39],"source":"The <xref:System.Type> to convert from."}]},{"pos":[9489,9654],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the conversion is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10388,10433],"content":"Determines whether the conversion is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the conversion is allowed.","pos":[0,45]}]},{"pos":[10445,10654],"content":"The <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> method determines whether the strings contained in the configuration file can be converted to the related strongly typed properties.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A&gt; method determines whether the strings contained in the configuration file can be converted to the related strongly typed properties.","pos":[0,209],"source":"The <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> method determines whether the strings contained in the configuration file can be converted to the related strongly typed properties."}]},{"pos":[11402,11504],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object used for type conversion.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversion."},{"pos":[11563,11586],"content":"The type to convert to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type to convert to.","pos":[0,23]}]},{"pos":[11645,11810],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the conversion is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationConverterBase\n  id: ConfigurationConverterBase\n  children:\n  - System.Configuration.ConfigurationConverterBase.#ctor\n  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  langs:\n  - csharp\n  name: ConfigurationConverterBase\n  nameWithType: ConfigurationConverterBase\n  fullName: System.Configuration.ConfigurationConverterBase\n  type: Class\n  summary: The base class for the configuration converter types.\n  remarks: The ConfigurationConverterBase is the base class for the converter configuration types. These are types that convert strings, found in the configuration file, to and from the related strongly typed properties.\n  example:\n  - \"The following code examples show how to derive from the ConfigurationConverterBase class to create a custom <xref:System.TimeSpan> converter type. Also, the examples show how to use this type in a custom section.  \\n  \\n The following code example shows how to create a custom <xref:System.TimeSpan> converter type from the ConfigurationConverterBase class.  \\n  \\n [!code-vb[System.Configuration.TimeSpanMinutesConverter#1](~/add/codesnippet/visualbasic/t-system.configuration.c_16_1.vb)]\\n [!code-cs[System.Configuration.TimeSpanMinutesConverter#1](~/add/codesnippet/csharp/t-system.configuration.c_16_1.cs)]  \\n  \\n The following code example shows how to define a custom section that uses the previous custom <xref:System.TimeSpan> converter.  \\n  \\n [!code-cs[System.Configuration.ConfigurationConvertersCustomSection#1](~/add/codesnippet/csharp/t-system.configuration.c_16_2.cs)]\\n [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_16_2.vb)]  \\n  \\n The following code example shows how to create and modify a configuration file using the previous custom section.  \\n  \\n [!code-vb[System.Configuration.ConfigurationConverterBase#1](~/add/codesnippet/visualbasic/t-system.configuration.c_16_3.vb)]\\n [!code-cs[System.Configuration.ConfigurationConverterBase#1](~/add/codesnippet/csharp/t-system.configuration.c_16_3.cs)]  \\n  \\n The following is a configuration excerpt as used by the previous example.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n  <configSections>  \\n    <section name=\\\"CustomSection\\\"   \\n      type=\\\"Samples.AspNet.CustomSection,   \\n      ConfigurationConverters,   \\n      Version=1.0.0.0, Culture=neutral,   \\n      PublicKeyToken=null\\\"   \\n      allowDefinition=\\\"Everywhere\\\"   \\n      allowExeDefinition=\\\"MachineToApplication\\\"   \\n      restartOnExternalChanges=\\\"true\\\" />  \\n  </configSections>  \\n  <CustomSection fileName=\\\"default.txt\\\" maxIdleTime=\\\"90\\\" />  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public abstract class ConfigurationConverterBase : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationConverterBase.#ctor\n  id: '#ctor'\n  parent: System.Configuration.ConfigurationConverterBase\n  langs:\n  - csharp\n  name: ConfigurationConverterBase()\n  nameWithType: ConfigurationConverterBase.ConfigurationConverterBase()\n  fullName: System.Configuration.ConfigurationConverterBase.ConfigurationConverterBase()\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationConverterBase\"></xref> class.\n  remarks: Because you normally use the converter types provided by the system, the only time you need the ConfigurationConverterBase constructor is when you must create your own conversion type.\n  syntax:\n    content: protected ConfigurationConverterBase ();\n    parameters: []\n  overload: System.Configuration.ConfigurationConverterBase.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Configuration.ConfigurationConverterBase\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Configuration.ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the conversion is allowed.\n  remarks: The CanConvertFrom method determines whether a conversion can be performed on strongly typed properties to obtain value strings used in the configuration file.\n  example:\n  - \"The following example code shows how to override the CanConvertFrom method to create a custom <xref:System.TimeSpan> converter type. Also, the example shows how to use this type in a custom section.  \\n  \\n [!code-vb[System.Configuration.TimeSpanMinutesConverter#3](~/add/codesnippet/visualbasic/27fca184-0b30-4d07-aa35-_1.vb)]\\n [!code-cs[System.Configuration.TimeSpanMinutesConverter#3](~/add/codesnippet/csharp/27fca184-0b30-4d07-aa35-_1.cs)]\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversions.\n    - id: type\n      type: System.Type\n      description: The <xref:System.Type> to convert from.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationConverterBase.CanConvertFrom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Configuration.ConfigurationConverterBase\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Configuration.ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  summary: Determines whether the conversion is allowed.\n  remarks: The <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> method determines whether the strings contained in the configuration file can be converted to the related strongly typed properties.\n  example:\n  - \"The following example code shows how to override the <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> method to create a custom <xref:System.TimeSpan> converter type. Also, the example shows how to use this type in a custom section.  \\n  \\n [!code-vb[System.Configuration.TimeSpanMinutesConverter#2](~/add/codesnippet/visualbasic/67ef9904-b052-4e8b-90db-_1.vb)]\\n [!code-cs[System.Configuration.TimeSpanMinutesConverter#2](~/add/codesnippet/csharp/67ef9904-b052-4e8b-90db-_1.cs)]\"\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);\n    parameters:\n    - id: ctx\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: The <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> object used for type conversion.\n    - id: type\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the conversion is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.ConfigurationConverterBase.CanConvertTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Configuration.ConfigurationConverterBase.#ctor\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: ConfigurationConverterBase()\n  nameWithType: ConfigurationConverterBase.ConfigurationConverterBase()\n  fullName: System.Configuration.ConfigurationConverterBase.ConfigurationConverterBase()\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Configuration.ConfigurationConverterBase.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Configuration.ConfigurationConverterBase.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Configuration.ConfigurationConverterBase.#ctor*\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: ConfigurationConverterBase\n  nameWithType: ConfigurationConverterBase.ConfigurationConverterBase\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertFrom*\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ConfigurationConverterBase.CanConvertFrom\n- uid: System.Configuration.ConfigurationConverterBase.CanConvertTo*\n  parent: System.Configuration.ConfigurationConverterBase\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: ConfigurationConverterBase.CanConvertTo\n"}