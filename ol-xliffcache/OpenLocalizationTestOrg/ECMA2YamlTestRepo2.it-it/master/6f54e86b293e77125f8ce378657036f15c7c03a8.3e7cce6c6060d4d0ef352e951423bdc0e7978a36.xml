{"nodes":[{"pos":[868,880],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2422,2434],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3160,3172],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3218,3230],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4030,4042],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4115,4127],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4883,4895],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4945,4957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5527,5539],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DelegateOutArgument`1\n  id: DelegateOutArgument`1\n  children:\n  - System.Activities.DelegateOutArgument`1.#ctor\n  - System.Activities.DelegateOutArgument`1.#ctor(System.String)\n  - System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)\n  - System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  - System.Activities.DelegateOutArgument`1.TypeCore\n  langs:\n  - csharp\n  name: DelegateOutArgument<T>\n  nameWithType: DelegateOutArgument<T>\n  fullName: System.Activities.DelegateOutArgument<T>\n  type: Class\n  syntax:\n    content: 'public sealed class DelegateOutArgument<T> : System.Activities.DelegateOutArgument'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.LocationReference\n  - System.Activities.DelegateArgument\n  - System.Activities.DelegateOutArgument\n  implements: []\n  inheritedMembers:\n  - System.Activities.DelegateArgument.Direction\n  - System.Activities.DelegateArgument.Name\n  - System.Activities.DelegateArgument.NameCore\n  - System.Activities.LocationReference.Type\n  platform:\n  - net462\n- uid: System.Activities.DelegateOutArgument`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.DelegateOutArgument`1\n  langs:\n  - csharp\n  name: DelegateOutArgument()\n  nameWithType: DelegateOutArgument<T>.DelegateOutArgument()\n  fullName: System.Activities.DelegateOutArgument<T>.DelegateOutArgument()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public DelegateOutArgument ();\n    parameters: []\n  overload: System.Activities.DelegateOutArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateOutArgument`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Activities.DelegateOutArgument`1\n  langs:\n  - csharp\n  name: DelegateOutArgument(String)\n  nameWithType: DelegateOutArgument<T>.DelegateOutArgument(String)\n  fullName: System.Activities.DelegateOutArgument<T>.DelegateOutArgument(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public DelegateOutArgument (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n  overload: System.Activities.DelegateOutArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)\n  id: Get(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateOutArgument`1\n  langs:\n  - csharp\n  name: Get(ActivityContext)\n  nameWithType: DelegateOutArgument<T>.Get(ActivityContext)\n  fullName: System.Activities.DelegateOutArgument<T>.Get(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public T Get (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Activities.DelegateOutArgument`1.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  id: GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateOutArgument`1\n  langs:\n  - csharp\n  name: GetLocation(ActivityContext)\n  nameWithType: DelegateOutArgument<T>.GetLocation(ActivityContext)\n  fullName: System.Activities.DelegateOutArgument<T>.GetLocation(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    return:\n      type: System.Activities.Location`1\n      description: To be added.\n  overload: System.Activities.DelegateOutArgument`1.GetLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  id: Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.DelegateOutArgument`1\n  langs:\n  - csharp\n  name: Set(ActivityContext,T)\n  nameWithType: DelegateOutArgument<T>.Set(ActivityContext,T)\n  fullName: System.Activities.DelegateOutArgument<T>.Set(ActivityContext,T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public void Set (System.Activities.ActivityContext context, T value);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Activities.DelegateOutArgument`1.Set*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.DelegateOutArgument`1.TypeCore\n  id: TypeCore\n  parent: System.Activities.DelegateOutArgument`1\n  langs:\n  - csharp\n  name: TypeCore\n  nameWithType: DelegateOutArgument<T>.TypeCore\n  fullName: System.Activities.DelegateOutArgument<T>.TypeCore\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: protected override Type TypeCore { get; }\n    return:\n      type: System.Type\n      description: To be added.\n  overload: System.Activities.DelegateOutArgument`1.TypeCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.DelegateOutArgument\n  isExternal: false\n  name: System.Activities.DelegateOutArgument\n- uid: System.Activities.DelegateOutArgument`1.#ctor\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: DelegateOutArgument()\n  nameWithType: DelegateOutArgument<T>.DelegateOutArgument()\n  fullName: System.Activities.DelegateOutArgument<T>.DelegateOutArgument()\n- uid: System.Activities.DelegateOutArgument`1.#ctor(System.String)\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: DelegateOutArgument(String)\n  nameWithType: DelegateOutArgument<T>.DelegateOutArgument(String)\n  fullName: System.Activities.DelegateOutArgument<T>.DelegateOutArgument(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: DelegateOutArgument<T>.Get(ActivityContext)\n  fullName: System.Activities.DelegateOutArgument<T>.Get(ActivityContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: GetLocation(ActivityContext)\n  nameWithType: DelegateOutArgument<T>.GetLocation(ActivityContext)\n  fullName: System.Activities.DelegateOutArgument<T>.GetLocation(ActivityContext)\n- uid: System.Activities.Location`1\n  parent: System.Activities\n  isExternal: false\n  name: Location<T>\n  nameWithType: Location<T>\n  fullName: System.Activities.Location<T>\n- uid: System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: Set(ActivityContext,T)\n  nameWithType: DelegateOutArgument<T>.Set(ActivityContext,T)\n  fullName: System.Activities.DelegateOutArgument<T>.Set(ActivityContext,T)\n- uid: System.Activities.DelegateOutArgument`1.TypeCore\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: TypeCore\n  nameWithType: DelegateOutArgument<T>.TypeCore\n  fullName: System.Activities.DelegateOutArgument<T>.TypeCore\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.DelegateOutArgument`1.#ctor*\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: DelegateOutArgument<T>\n  nameWithType: DelegateOutArgument<T>.DelegateOutArgument<T>\n- uid: System.Activities.DelegateOutArgument`1.Get*\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: Get\n  nameWithType: DelegateOutArgument<T>.Get\n- uid: System.Activities.DelegateOutArgument`1.GetLocation*\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: GetLocation\n  nameWithType: DelegateOutArgument<T>.GetLocation\n- uid: System.Activities.DelegateOutArgument`1.Set*\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: Set\n  nameWithType: DelegateOutArgument<T>.Set\n- uid: System.Activities.DelegateOutArgument`1.TypeCore*\n  parent: System.Activities.DelegateOutArgument`1\n  isExternal: false\n  name: TypeCore\n  nameWithType: DelegateOutArgument<T>.TypeCore\n"}