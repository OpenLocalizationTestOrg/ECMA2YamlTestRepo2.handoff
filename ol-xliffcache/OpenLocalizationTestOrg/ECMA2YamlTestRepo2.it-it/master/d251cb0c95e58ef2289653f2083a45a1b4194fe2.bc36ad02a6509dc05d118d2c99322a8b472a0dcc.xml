{"nodes":[{"pos":[482,662],"content":"Acts as a container to a group of activities that is executed when the <xref href=\"System.Workflow.Activities.StateActivity\"></xref> starts running. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Acts as a container to a group of activities that is executed when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.StateActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> starts running.","pos":[0,148],"source":"Acts as a container to a group of activities that is executed when the <xref href=\"System.Workflow.Activities.StateActivity\"></xref> starts running."},{"content":"This class cannot be inherited.","pos":[149,180]}]},{"pos":[675,2437],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The StateInitializationActivity acts as a <xref:System.Workflow.Activities.SequenceActivity> to all activities it contains.       <xref:System.Workflow.Activities.SetStateActivity> classes may be included in the StateInitializationActivity.       If a StateInitializationActivity exists in a <xref:System.Workflow.Activities.StateActivity>, the StateInitializationActivity is the first activity that gets executed when the <xref:System.Workflow.Activities.StateActivity> starts executing. In some ways the StateInitializationActivity is like an `OnEnterState` handler.       The StateInitializationActivity is not a mandatory activity in the <xref:System.Workflow.Activities.StateActivity>.       The StateInitializationActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the StateInitializationActivity can contain other activities. The StateInitializationActivity cannot contain any activity that implements the <xref:System.Workflow.Activities.IEventActivity> interface, which includes all <xref:System.Workflow.Activities.HandleExternalEventActivity> activities and the <xref:System.Workflow.Activities.DelayActivity> activity.       A StateInitializationActivity is executed in the <xref:System.Workflow.Activities.StateActivity>, a non-blocking manner that makes the <xref:System.Workflow.Activities.StateActivity> ready to receive events. The StateInitializationActivity can contain a <xref:System.Workflow.Activities.SetStateActivity> activity, so that it can model a state machine where transitions occur from state to state without receiving any event. In that sense the state machine behaves like a sequential workflow.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The StateInitializationActivity acts as a &lt;xref:System.Workflow.Activities.SequenceActivity&gt; to all activities it contains.","pos":[0,211],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The StateInitializationActivity acts as a <xref:System.Workflow.Activities.SequenceActivity> to all activities it contains."},{"content":"&lt;xref:System.Workflow.Activities.SetStateActivity&gt; classes may be included in the StateInitializationActivity.","pos":[218,328],"source":"       <xref:System.Workflow.Activities.SetStateActivity> classes may be included in the StateInitializationActivity."},{"content":"If a StateInitializationActivity exists in a &lt;xref:System.Workflow.Activities.StateActivity&gt;, the StateInitializationActivity is the first activity that gets executed when the &lt;xref:System.Workflow.Activities.StateActivity&gt; starts executing.","pos":[335,576],"source":"       If a StateInitializationActivity exists in a <xref:System.Workflow.Activities.StateActivity>, the StateInitializationActivity is the first activity that gets executed when the <xref:System.Workflow.Activities.StateActivity> starts executing."},{"content":"In some ways the StateInitializationActivity is like an <ph id=\"ph1\">`OnEnterState`</ph> handler.","pos":[577,656],"source":" In some ways the StateInitializationActivity is like an `OnEnterState` handler."},{"content":"The StateInitializationActivity is not a mandatory activity in the &lt;xref:System.Workflow.Activities.StateActivity&gt;.","pos":[663,778],"source":"       The StateInitializationActivity is not a mandatory activity in the <xref:System.Workflow.Activities.StateActivity>."},{"content":"The StateInitializationActivity is a &lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;, which means the StateInitializationActivity can contain other activities.","pos":[785,952],"source":"       The StateInitializationActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the StateInitializationActivity can contain other activities."},{"content":"The StateInitializationActivity cannot contain any activity that implements the &lt;xref:System.Workflow.Activities.IEventActivity&gt; interface, which includes all &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; activities and the &lt;xref:System.Workflow.Activities.DelayActivity&gt; activity.","pos":[953,1250],"source":" The StateInitializationActivity cannot contain any activity that implements the <xref:System.Workflow.Activities.IEventActivity> interface, which includes all <xref:System.Workflow.Activities.HandleExternalEventActivity> activities and the <xref:System.Workflow.Activities.DelayActivity> activity."},{"content":"A StateInitializationActivity is executed in the &lt;xref:System.Workflow.Activities.StateActivity&gt;, a non-blocking manner that makes the &lt;xref:System.Workflow.Activities.StateActivity&gt; ready to receive events.","pos":[1257,1464],"source":"       A StateInitializationActivity is executed in the <xref:System.Workflow.Activities.StateActivity>, a non-blocking manner that makes the <xref:System.Workflow.Activities.StateActivity> ready to receive events."},{"content":"The StateInitializationActivity can contain a &lt;xref:System.Workflow.Activities.SetStateActivity&gt; activity, so that it can model a state machine where transitions occur from state to state without receiving any event.","pos":[1465,1681],"source":" The StateInitializationActivity can contain a <xref:System.Workflow.Activities.SetStateActivity> activity, so that it can model a state machine where transitions occur from state to state without receiving any event."},{"content":"In that sense the state machine behaves like a sequential workflow.","pos":[1682,1749]}]},{"pos":[11911,12027],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.StateInitializationActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateInitializationActivity\"></xref> class."},{"pos":[13326,13473],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.StateInitializationActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateInitializationActivity\"></xref> class using the name of the activity."},{"pos":[13623,13661],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.StateInitializationActivity\n  id: StateInitializationActivity\n  children:\n  - System.Workflow.Activities.StateInitializationActivity.#ctor\n  - System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)\n  langs:\n  - csharp\n  name: StateInitializationActivity\n  nameWithType: StateInitializationActivity\n  fullName: System.Workflow.Activities.StateInitializationActivity\n  type: Class\n  summary: Acts as a container to a group of activities that is executed when the <xref href=\"System.Workflow.Activities.StateActivity\"></xref> starts running. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n The StateInitializationActivity acts as a <xref:System.Workflow.Activities.SequenceActivity> to all activities it contains.  \\n  \\n <xref:System.Workflow.Activities.SetStateActivity> classes may be included in the StateInitializationActivity.  \\n  \\n If a StateInitializationActivity exists in a <xref:System.Workflow.Activities.StateActivity>, the StateInitializationActivity is the first activity that gets executed when the <xref:System.Workflow.Activities.StateActivity> starts executing. In some ways the StateInitializationActivity is like an `OnEnterState` handler.  \\n  \\n The StateInitializationActivity is not a mandatory activity in the <xref:System.Workflow.Activities.StateActivity>.  \\n  \\n The StateInitializationActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the StateInitializationActivity can contain other activities. The StateInitializationActivity cannot contain any activity that implements the <xref:System.Workflow.Activities.IEventActivity> interface, which includes all <xref:System.Workflow.Activities.HandleExternalEventActivity> activities and the <xref:System.Workflow.Activities.DelayActivity> activity.  \\n  \\n A StateInitializationActivity is executed in the <xref:System.Workflow.Activities.StateActivity>, a non-blocking manner that makes the <xref:System.Workflow.Activities.StateActivity> ready to receive events. The StateInitializationActivity can contain a <xref:System.Workflow.Activities.SetStateActivity> activity, so that it can model a state machine where transitions occur from state to state without receiving any event. In that sense the state machine behaves like a sequential workflow.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateInitializationDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.StateInitializationActivity), \"Resources.StateInitializationActivity.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.StateInitializationValidator))]\n\n      public sealed class StateInitializationActivity : System.Workflow.Activities.SequenceActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements: []\n  inheritedMembers:\n  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.StateInitializationActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.StateInitializationActivity\n  langs:\n  - csharp\n  name: StateInitializationActivity()\n  nameWithType: StateInitializationActivity.StateInitializationActivity()\n  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateInitializationActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example shows how to create a new instance of a <xref:System.Workflow.Activities.StateInitializationActivity> object. This example is from the State Initialization SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][State Initialization Sample](http://msdn.microsoft.com/en-us/9053202f-2567-4428-a4a2-85423963646b).  \\n  \\n [!code-cs[wf_samples#197](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#197)]\\n [!code-vb[wf_samples#197](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#197)]\"\n  syntax:\n    content: public StateInitializationActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.StateInitializationActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.StateInitializationActivity\n  langs:\n  - csharp\n  name: StateInitializationActivity(String)\n  nameWithType: StateInitializationActivity.StateInitializationActivity(String)\n  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.StateInitializationActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public StateInitializationActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.StateInitializationActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: System.Workflow.Activities.SequenceActivity\n- uid: System.Workflow.Activities.StateInitializationActivity.#ctor\n  parent: System.Workflow.Activities.StateInitializationActivity\n  isExternal: false\n  name: StateInitializationActivity()\n  nameWithType: StateInitializationActivity.StateInitializationActivity()\n  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity()\n- uid: System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.StateInitializationActivity\n  isExternal: false\n  name: StateInitializationActivity(String)\n  nameWithType: StateInitializationActivity.StateInitializationActivity(String)\n  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.StateInitializationActivity.#ctor*\n  parent: System.Workflow.Activities.StateInitializationActivity\n  isExternal: false\n  name: StateInitializationActivity\n  nameWithType: StateInitializationActivity.StateInitializationActivity\n"}