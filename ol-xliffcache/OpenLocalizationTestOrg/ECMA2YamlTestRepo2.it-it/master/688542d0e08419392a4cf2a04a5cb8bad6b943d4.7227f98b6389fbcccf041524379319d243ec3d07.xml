{"nodes":[{"pos":[1124,1234],"content":"Holds the stack of client channel sinks that must be invoked during an asynchronous message response decoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Holds the stack of client channel sinks that must be invoked during an asynchronous message response decoding.","pos":[0,110]}]},{"pos":[1246,1453],"content":"This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/add/includes/ajax-current-ext-md.md) for more information.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This class makes a link demand.","pos":[0,31]},{"content":"A security exception is thrown if the immediate caller does not have infrastructure permission.","pos":[32,127]},{"content":"See <bpt id=\"p1\">[</bpt>Link Demands<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> for more information.","pos":[128,207],"source":" See [Link Demands](~/add/includes/ajax-current-ext-md.md) for more information."}]},{"pos":[2297,2434],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ClientChannelSinkStack\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ClientChannelSinkStack\"></xref> class with default values."},{"pos":[3221,3368],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ClientChannelSinkStack\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified reply sink.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ClientChannelSinkStack\"></xref> class with the specified reply sink."},{"pos":[3596,3720],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMessageSink\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that the current stack can use to reply to messages.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Messaging.IMessageSink\"></xref> that the current stack can use to reply to messages."},{"pos":[4526,4624],"content":"Requests asynchronous processing of a method call on the sinks that are in the current sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Requests asynchronous processing of a method call on the sinks that are in the current sink stack.","pos":[0,98]}]},{"pos":[4636,4887],"content":"The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>.","pos":[0,251],"nodes":[{"content":"The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack.","pos":[0,110]},{"content":"For additional information, see &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName&gt;.","pos":[111,251],"source":" For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>."}]}]},{"pos":[5147,5210],"content":"The headers that are retrieved from the server response stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The headers that are retrieved from the server response stream.","pos":[0,63]}]},{"pos":[5276,5329],"content":"The stream that is returning from the transport sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream that is returning from the transport sink.","pos":[0,53]}]},{"pos":[5562,5594],"content":"The current sink stack is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current sink stack is empty.","pos":[0,32]}]},{"pos":[6146,6199],"content":"Dispatches the specified exception on the reply sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispatches the specified exception on the reply sink.","pos":[0,53]}]},{"pos":[6211,6501],"content":"The DispatchException method dispatches the specified exception to the server through the reply sink that is specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DispatchException method dispatches the specified exception to the server through the reply sink that is specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.","pos":[0,290],"nodes":[{"content":"The DispatchException method dispatches the specified exception to the server through the reply sink that is specified in the constructor of the current sink stack.","pos":[0,164]},{"content":"If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.","pos":[165,290]}]}]},{"pos":[6646,6686],"content":"The exception to dispatch to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception to dispatch to the server.","pos":[0,40]}]},{"pos":[7406,7463],"content":"Dispatches the specified reply message on the reply sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispatches the specified reply message on the reply sink.","pos":[0,57]}]},{"pos":[7475,7764],"content":"The DispatchReplyMessage method dispatches the specified message to the server through the reply sink that is specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The DispatchReplyMessage method dispatches the specified message to the server through the reply sink that is specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.","pos":[0,289],"nodes":[{"content":"The DispatchReplyMessage method dispatches the specified message to the server through the reply sink that is specified in the constructor of the current sink stack.","pos":[0,165]},{"content":"If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.","pos":[166,289]}]}]},{"pos":[7975,8055],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to dispatch.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> to dispatch."},{"pos":[8741,8859],"content":"Pops the information that is associated with all the sinks from the sink stack up to and including the specified sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pops the information that is associated with all the sinks from the sink stack up to and including the specified sink.","pos":[0,118]}]},{"pos":[9075,9125],"content":"The sink to remove and return from the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink to remove and return from the sink stack.","pos":[0,50]}]},{"pos":[9183,9264],"content":"Information generated on the request side and associated with the specified sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information generated on the request side and associated with the specified sink.","pos":[0,81]}]},{"pos":[9480,9575],"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current sink stack is empty, or the specified sink was never pushed onto the current stack.","pos":[0,95]}]},{"pos":[10208,10297],"content":"Pushes the specified sink and information that is associated with it onto the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pushes the specified sink and information that is associated with it onto the sink stack.","pos":[0,89]}]},{"pos":[10309,10554],"content":"The information generated on the request side and specified in the <ph id=\"ph1\">`state`</ph> parameter is returned in the <ph id=\"ph2\">`state`</ph> parameter of the &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A&gt; method on the corresponding sink.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A> method on the corresponding sink."},{"pos":[10783,10820],"content":"The sink to push onto the sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The sink to push onto the sink stack.","pos":[0,37]}]},{"pos":[10882,10960],"content":"Information generated on the request side that is needed on the response side.","needQuote":true,"needEscape":true,"nodes":[{"content":"Information generated on the request side that is needed on the response side.","pos":[0,78]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  id: ClientChannelSinkStack\n  children:\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor(System.Runtime.Remoting.Messaging.IMessageSink)\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException(System.Exception)\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IClientChannelSink)\n  - System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)\n  langs:\n  - csharp\n  name: ClientChannelSinkStack\n  nameWithType: ClientChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  type: Class\n  summary: Holds the stack of client channel sinks that must be invoked during an asynchronous message response decoding.\n  remarks: This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/add/includes/ajax-current-ext-md.md) for more information.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Security.SecurityCritical]\n\n      public class ClientChannelSinkStack : System.Runtime.Remoting.Channels.IClientChannelSinkStack\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IClientChannelSinkStack\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: ClientChannelSinkStack()\n  nameWithType: ClientChannelSinkStack.ClientChannelSinkStack()\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.ClientChannelSinkStack()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ClientChannelSinkStack\"></xref> class with default values.\n  syntax:\n    content: public ClientChannelSinkStack ();\n    parameters: []\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor(System.Runtime.Remoting.Messaging.IMessageSink)\n  id: '#ctor(System.Runtime.Remoting.Messaging.IMessageSink)'\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: ClientChannelSinkStack(IMessageSink)\n  nameWithType: ClientChannelSinkStack.ClientChannelSinkStack(IMessageSink)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.ClientChannelSinkStack(IMessageSink)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Channels.ClientChannelSinkStack\"></xref> class with the specified reply sink.\n  syntax:\n    content: public ClientChannelSinkStack (System.Runtime.Remoting.Messaging.IMessageSink replySink);\n    parameters:\n    - id: replySink\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: The <xref href=\"System.Runtime.Remoting.Messaging.IMessageSink\"></xref> that the current stack can use to reply to messages.\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: AsyncProcessResponse(ITransportHeaders,Stream)\n  nameWithType: ClientChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests asynchronous processing of a method call on the sinks that are in the current sink stack.\n  remarks: The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>.\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers that are retrieved from the server response stream.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream that is returning from the transport sink.\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException(System.Exception)\n  id: DispatchException(System.Exception)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: DispatchException(Exception)\n  nameWithType: ClientChannelSinkStack.DispatchException(Exception)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException(Exception)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Dispatches the specified exception on the reply sink.\n  remarks: The DispatchException method dispatches the specified exception to the server through the reply sink that is specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.\n  syntax:\n    content: public void DispatchException (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: The exception to dispatch to the server.\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  id: DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: DispatchReplyMessage(IMessage)\n  nameWithType: ClientChannelSinkStack.DispatchReplyMessage(IMessage)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage(IMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Dispatches the specified reply message on the reply sink.\n  remarks: The DispatchReplyMessage method dispatches the specified message to the server through the reply sink that is specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.\n  syntax:\n    content: public void DispatchReplyMessage (System.Runtime.Remoting.Messaging.IMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> to dispatch.\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IClientChannelSink)\n  id: Pop(System.Runtime.Remoting.Channels.IClientChannelSink)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: Pop(IClientChannelSink)\n  nameWithType: ClientChannelSinkStack.Pop(IClientChannelSink)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop(IClientChannelSink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pops the information that is associated with all the sinks from the sink stack up to and including the specified sink.\n  syntax:\n    content: public object Pop (System.Runtime.Remoting.Channels.IClientChannelSink sink);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IClientChannelSink\n      description: The sink to remove and return from the sink stack.\n    return:\n      type: System.Object\n      description: Information generated on the request side and associated with the specified sink.\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty, or the specified sink was never pushed onto the current stack.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)\n  id: Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  langs:\n  - csharp\n  name: Push(IClientChannelSink,Object)\n  nameWithType: ClientChannelSinkStack.Push(IClientChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push(IClientChannelSink,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Pushes the specified sink and information that is associated with it onto the sink stack.\n  remarks: The information generated on the request side and specified in the `state` parameter is returned in the `state` parameter of the <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A> method on the corresponding sink.\n  syntax:\n    content: public void Push (System.Runtime.Remoting.Channels.IClientChannelSink sink, object state);\n    parameters:\n    - id: sink\n      type: System.Runtime.Remoting.Channels.IClientChannelSink\n      description: The sink to push onto the sink stack.\n    - id: state\n      type: System.Object\n      description: Information generated on the request side that is needed on the response side.\n  overload: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Runtime.Remoting.RemotingException\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: RemotingException\n  nameWithType: RemotingException\n  fullName: System.Runtime.Remoting.RemotingException\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: ClientChannelSinkStack()\n  nameWithType: ClientChannelSinkStack.ClientChannelSinkStack()\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.ClientChannelSinkStack()\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor(System.Runtime.Remoting.Messaging.IMessageSink)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: ClientChannelSinkStack(IMessageSink)\n  nameWithType: ClientChannelSinkStack.ClientChannelSinkStack(IMessageSink)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.ClientChannelSinkStack(IMessageSink)\n- uid: System.Runtime.Remoting.Messaging.IMessageSink\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessageSink\n  nameWithType: IMessageSink\n  fullName: System.Runtime.Remoting.Messaging.IMessageSink\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse(ITransportHeaders,Stream)\n  nameWithType: ClientChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException(System.Exception)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: DispatchException(Exception)\n  nameWithType: ClientChannelSinkStack.DispatchException(Exception)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: DispatchReplyMessage(IMessage)\n  nameWithType: ClientChannelSinkStack.DispatchReplyMessage(IMessage)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage(IMessage)\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IClientChannelSink)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: Pop(IClientChannelSink)\n  nameWithType: ClientChannelSinkStack.Pop(IClientChannelSink)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop(IClientChannelSink)\n- uid: System.Runtime.Remoting.Channels.IClientChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSink\n  nameWithType: IClientChannelSink\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSink\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: Push(IClientChannelSink,Object)\n  nameWithType: ClientChannelSinkStack.Push(IClientChannelSink,Object)\n  fullName: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push(IClientChannelSink,Object)\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.#ctor*\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: ClientChannelSinkStack\n  nameWithType: ClientChannelSinkStack.ClientChannelSinkStack\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: ClientChannelSinkStack.AsyncProcessResponse\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchException*\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: DispatchException\n  nameWithType: ClientChannelSinkStack.DispatchException\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.DispatchReplyMessage*\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: DispatchReplyMessage\n  nameWithType: ClientChannelSinkStack.DispatchReplyMessage\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Pop*\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: Pop\n  nameWithType: ClientChannelSinkStack.Pop\n- uid: System.Runtime.Remoting.Channels.ClientChannelSinkStack.Push*\n  parent: System.Runtime.Remoting.Channels.ClientChannelSinkStack\n  isExternal: false\n  name: Push\n  nameWithType: ClientChannelSinkStack.Push\n"}