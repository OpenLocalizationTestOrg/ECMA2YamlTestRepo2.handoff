{"nodes":[{"pos":[388,497],"content":"Defines how the <xref:System.Data.Linq.DataContext.Refresh*> method handles optimistic concurrency conflicts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines how the &lt;xref:System.Data.Linq.DataContext.Refresh*&gt; method handles optimistic concurrency conflicts.","pos":[0,109],"source":"Defines how the <xref:System.Data.Linq.DataContext.Refresh*> method handles optimistic concurrency conflicts."}]},{"pos":[509,598],"content":"This enumeration applies to all <xref:System.Data.Linq.DataContext.Refresh%2A> overloads.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This enumeration applies to all &lt;xref:System.Data.Linq.DataContext.Refresh%2A&gt; overloads.","pos":[0,89],"source":"This enumeration applies to all <xref:System.Data.Linq.DataContext.Refresh%2A> overloads."}]},{"pos":[2005,2171],"content":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to keep the current value that has been changed, but updates the other values with the database values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces the &lt;xref:System.Data.Linq.DataContext.Refresh*&gt; method to keep the current value that has been changed, but updates the other values with the database values.","pos":[0,166],"source":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to keep the current value that has been changed, but updates the other values with the database values."}]},{"pos":[2279,2291],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2690,2854],"content":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to swap the original value with the values retrieved from the database. No current value is modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to swap the original value with the values retrieved from the database. No current value is modified.","pos":[0,164],"nodes":[{"content":"Forces the &lt;xref:System.Data.Linq.DataContext.Refresh*&gt; method to swap the original value with the values retrieved from the database.","pos":[0,134],"source":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to swap the original value with the values retrieved from the database."},{"content":"No current value is modified.","pos":[135,164]}]}]},{"pos":[2968,2980],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3404,3536],"content":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to override all the current values with the values from the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Forces the &lt;xref:System.Data.Linq.DataContext.Refresh*&gt; method to override all the current values with the values from the database.","pos":[0,132],"source":"Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to override all the current values with the values from the database."}]},{"pos":[3655,3667],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.RefreshMode\n  id: RefreshMode\n  children:\n  - System.Data.Linq.RefreshMode.KeepChanges\n  - System.Data.Linq.RefreshMode.KeepCurrentValues\n  - System.Data.Linq.RefreshMode.OverwriteCurrentValues\n  langs:\n  - csharp\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Linq.RefreshMode\n  type: Enum\n  summary: Defines how the <xref:System.Data.Linq.DataContext.Refresh*> method handles optimistic concurrency conflicts.\n  remarks: This enumeration applies to all <xref:System.Data.Linq.DataContext.Refresh%2A> overloads.\n  example:\n  - \"The following example overwrites current values with values from the database.  \\n  \\n [!code-cs[System.Data.Linq.RefreshMode#1](~/add/codesnippet/csharp/refreshmode/program.cs#1)]\\n [!code-vb[System.Data.Linq.RefreshMode#1](~/add/codesnippet/visualbasic/refreshmode/module1.vb#1)]  \\n  \\n The following example shows how to swap the original value with the values retrieved from the database. No current value is modified.  \\n  \\n [!code-cs[System.Data.Linq.RefreshMode#2](~/add/codesnippet/csharp/refreshmode/program.cs#2)]\\n [!code-vb[System.Data.Linq.RefreshMode#2](~/add/codesnippet/visualbasic/refreshmode/module1.vb#2)]  \\n  \\n The following example keeps the current values that have been changed, but updates the other values with database values.  \\n  \\n [!code-cs[System.Data.Linq.RefreshMode#3](~/add/codesnippet/csharp/refreshmode/program.cs#3)]\\n [!code-vb[System.Data.Linq.RefreshMode#3](~/add/codesnippet/visualbasic/refreshmode/module1.vb#3)]\"\n  syntax:\n    content: public enum RefreshMode\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Data.Linq.RefreshMode.KeepChanges\n  id: KeepChanges\n  parent: System.Data.Linq.RefreshMode\n  langs:\n  - csharp\n  name: KeepChanges\n  nameWithType: RefreshMode.KeepChanges\n  fullName: System.Data.Linq.RefreshMode.KeepChanges\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to keep the current value that has been changed, but updates the other values with the database values.\n  syntax:\n    content: KeepChanges\n    return:\n      type: System.Data.Linq.RefreshMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.RefreshMode.KeepCurrentValues\n  id: KeepCurrentValues\n  parent: System.Data.Linq.RefreshMode\n  langs:\n  - csharp\n  name: KeepCurrentValues\n  nameWithType: RefreshMode.KeepCurrentValues\n  fullName: System.Data.Linq.RefreshMode.KeepCurrentValues\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to swap the original value with the values retrieved from the database. No current value is modified.\n  syntax:\n    content: KeepCurrentValues\n    return:\n      type: System.Data.Linq.RefreshMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.RefreshMode.OverwriteCurrentValues\n  id: OverwriteCurrentValues\n  parent: System.Data.Linq.RefreshMode\n  langs:\n  - csharp\n  name: OverwriteCurrentValues\n  nameWithType: RefreshMode.OverwriteCurrentValues\n  fullName: System.Data.Linq.RefreshMode.OverwriteCurrentValues\n  type: Field\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Forces the <xref:System.Data.Linq.DataContext.Refresh*> method to override all the current values with the values from the database.\n  syntax:\n    content: OverwriteCurrentValues\n    return:\n      type: System.Data.Linq.RefreshMode\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Data.Linq.RefreshMode.KeepChanges\n  parent: System.Data.Linq.RefreshMode\n  isExternal: false\n  name: KeepChanges\n  nameWithType: RefreshMode.KeepChanges\n  fullName: System.Data.Linq.RefreshMode.KeepChanges\n- uid: System.Data.Linq.RefreshMode\n  parent: System.Data.Linq\n  isExternal: false\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Linq.RefreshMode\n- uid: System.Data.Linq.RefreshMode.KeepCurrentValues\n  parent: System.Data.Linq.RefreshMode\n  isExternal: false\n  name: KeepCurrentValues\n  nameWithType: RefreshMode.KeepCurrentValues\n  fullName: System.Data.Linq.RefreshMode.KeepCurrentValues\n- uid: System.Data.Linq.RefreshMode.OverwriteCurrentValues\n  parent: System.Data.Linq.RefreshMode\n  isExternal: false\n  name: OverwriteCurrentValues\n  nameWithType: RefreshMode.OverwriteCurrentValues\n  fullName: System.Data.Linq.RefreshMode.OverwriteCurrentValues\n"}