{"nodes":[{"pos":[1211,1298],"content":"Specifies the internal execution behavior of a durable service contract implementation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the internal execution behavior of a durable service contract implementation.","pos":[0,87]}]},{"pos":[1311,2850],"content":"The following items are checked as part of the validation logic for durable services:      -   All sessionful bindings have a context binding element such as <xref:System.ServiceModel.Configuration.WSHttpContextBindingElement> or <xref:System.ServiceModel.Configuration.NetTcpContextBindingElement>.      -   The <xref:System.ServiceModel.ConcurrencyMode> value must not be set to Multiple.      -   The <xref:System.ServiceModel.InstanceContextMode> value must be PerSession.      -   There must be one sessionful endpoint configured for the service.      -   If the contract disallows sessions, then <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> must be set to `true` for all operations.      -   If the contract permits or allows sessions then all operations for which <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> is set to `true` must be request/response operations, that is <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A> cannot be set to `true`.      -   If <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> is set to `true`, then all operations on the service must either be marked with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to `true` or marked with <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>. Additionally, <xref:System.ServiceModel.ConcurrencyMode> must be set to Single.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The following items are checked as part of the validation logic for durable services:      -   All sessionful bindings have a context binding element such as &lt;xref:System.ServiceModel.Configuration.WSHttpContextBindingElement&gt; or &lt;xref:System.ServiceModel.Configuration.NetTcpContextBindingElement&gt;.","pos":[0,299],"source":"The following items are checked as part of the validation logic for durable services:      -   All sessionful bindings have a context binding element such as <xref:System.ServiceModel.Configuration.WSHttpContextBindingElement> or <xref:System.ServiceModel.Configuration.NetTcpContextBindingElement>."},{"content":"-   The &lt;xref:System.ServiceModel.ConcurrencyMode&gt; value must not be set to Multiple.","pos":[305,390],"source":"      -   The <xref:System.ServiceModel.ConcurrencyMode> value must not be set to Multiple."},{"content":"-   The &lt;xref:System.ServiceModel.InstanceContextMode&gt; value must be PerSession.","pos":[396,476],"source":"      -   The <xref:System.ServiceModel.InstanceContextMode> value must be PerSession."},{"content":"-   There must be one sessionful endpoint configured for the service.","pos":[482,551]},{"content":"-   If the contract disallows sessions, then &lt;xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A&gt; must be set to <ph id=\"ph1\">`true`</ph> for all operations.","pos":[557,729],"source":"      -   If the contract disallows sessions, then <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> must be set to `true` for all operations."},{"content":"-   If the contract permits or allows sessions then all operations for which &lt;xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A&gt; is set to <ph id=\"ph1\">`true`</ph> must be request/response operations, that is &lt;xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A&gt; cannot be set to <ph id=\"ph2\">`true`</ph>.","pos":[735,1044],"source":"      -   If the contract permits or allows sessions then all operations for which <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> is set to `true` must be request/response operations, that is <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A> cannot be set to `true`."},{"content":"-   If &lt;xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A&gt; is set to <ph id=\"ph1\">`true`</ph>, then all operations on the service must either be marked with &lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName&gt; set to <ph id=\"ph2\">`true`</ph> or marked with &lt;xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName&gt;.","pos":[1050,1445],"source":"      -   If <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> is set to `true`, then all operations on the service must either be marked with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to `true` or marked with <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>."},{"content":"Additionally, &lt;xref:System.ServiceModel.ConcurrencyMode&gt; must be set to Single.","pos":[1446,1525],"source":" Additionally, <xref:System.ServiceModel.ConcurrencyMode> must be set to Single."}]},{"pos":[3804,3921],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.DurableServiceAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Description.DurableServiceAttribute\"></xref> class."},{"pos":[5346,5442],"content":"Not implemented in <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.DurableServiceAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Not implemented in <xref href=\"System.ServiceModel.Description.DurableServiceAttribute\"></xref>."},{"pos":[5929,5945],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[6039,6055],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[6198,6214],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[6330,6346],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[7255,7444],"content":"Customizes the service runtime to support durable service behavior properties, such as specifying a <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the service.","needQuote":true,"needEscape":true,"source":"Customizes the service runtime to support durable service behavior properties, such as specifying a <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref> for the service."},{"pos":[7755,7779],"content":"The service description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service description.","pos":[0,24]}]},{"pos":[7873,7890],"content":"The service host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service host.","pos":[0,17]}]},{"pos":[8568,8792],"content":"Gets or sets a value that indicates whether the service instance state is persisted to the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the same transaction under which the operation is run.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the service instance state is persisted to the <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref> using the same transaction under which the operation is run."},{"pos":[8805,9432],"content":"If SaveStateInOperationTransaction is set to `true`, then all operations on the service must either be marked with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to `true` or marked with <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>. Additionally, <xref:System.ServiceModel.ConcurrencyMode> must be set to Single.       Setting SaveStateInOperationTransaction to `true` makes the service state transactional with the operation transaction. This means that if the operation's transaction rolls back, the service state also rolls back.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"If SaveStateInOperationTransaction is set to <ph id=\"ph1\">`true`</ph>, then all operations on the service must either be marked with &lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName&gt; set to <ph id=\"ph2\">`true`</ph> or marked with &lt;xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName&gt;.","pos":[0,325],"source":"If SaveStateInOperationTransaction is set to `true`, then all operations on the service must either be marked with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to `true` or marked with <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>."},{"content":"Additionally, &lt;xref:System.ServiceModel.ConcurrencyMode&gt; must be set to Single.","pos":[326,405],"source":" Additionally, <xref:System.ServiceModel.ConcurrencyMode> must be set to Single."},{"content":"Setting SaveStateInOperationTransaction to <ph id=\"ph1\">`true`</ph> makes the service state transactional with the operation transaction.","pos":[412,531],"source":"       Setting SaveStateInOperationTransaction to `true` makes the service state transactional with the operation transaction."},{"content":"This means that if the operation's transaction rolls back, the service state also rolls back.","pos":[532,625]}]},{"pos":[9573,9779],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the service instance state is persisted using the same transaction; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service instance state is persisted using the same transaction; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10422,10569],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.UnknownExceptionAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value associated with the durable service.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.ServiceModel.Description.UnknownExceptionAction\"></xref> enumeration value associated with the durable service."},{"pos":[10581,10944],"content":"When <xref:System.ServiceModel.Description.DurableServiceAttribute> is instantiated, it sets this property value to <xref:System.ServiceModel.Description.UnknownExceptionAction>. This means that whenever an unknown exception is encountered by the durable service, the service instance is terminated and any state information is deleted from the persistence store.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When <xref:System.ServiceModel.Description.DurableServiceAttribute> is instantiated, it sets this property value to <xref:System.ServiceModel.Description.UnknownExceptionAction>. This means that whenever an unknown exception is encountered by the durable service, the service instance is terminated and any state information is deleted from the persistence store.","pos":[0,363],"nodes":[{"content":"When &lt;xref:System.ServiceModel.Description.DurableServiceAttribute&gt; is instantiated, it sets this property value to &lt;xref:System.ServiceModel.Description.UnknownExceptionAction&gt;.","pos":[0,178],"source":"When <xref:System.ServiceModel.Description.DurableServiceAttribute> is instantiated, it sets this property value to <xref:System.ServiceModel.Description.UnknownExceptionAction>."},{"content":"This means that whenever an unknown exception is encountered by the durable service, the service instance is terminated and any state information is deleted from the persistence store.","pos":[179,363]}]}]},{"pos":[11165,11262],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Description.UnknownExceptionAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.ServiceModel.Description.UnknownExceptionAction\"></xref> enumeration value."},{"pos":[12108,12181],"content":"Verifies that all durable operations on the service are set up correctly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that all durable operations on the service are set up correctly.","pos":[0,73]}]},{"pos":[12479,12503],"content":"The service description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service description.","pos":[0,24]}]},{"pos":[12597,12614],"content":"The service host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The service host.","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.DurableServiceAttribute\n  id: DurableServiceAttribute\n  children:\n  - System.ServiceModel.Description.DurableServiceAttribute.#ctor\n  - System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction\n  - System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction\n  - System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  langs:\n  - csharp\n  name: DurableServiceAttribute\n  nameWithType: DurableServiceAttribute\n  fullName: System.ServiceModel.Description.DurableServiceAttribute\n  type: Class\n  summary: Specifies the internal execution behavior of a durable service contract implementation.\n  remarks: \"The following items are checked as part of the validation logic for durable services:  \\n  \\n-   All sessionful bindings have a context binding element such as <xref:System.ServiceModel.Configuration.WSHttpContextBindingElement> or <xref:System.ServiceModel.Configuration.NetTcpContextBindingElement>.  \\n  \\n-   The <xref:System.ServiceModel.ConcurrencyMode> value must not be set to Multiple.  \\n  \\n-   The <xref:System.ServiceModel.InstanceContextMode> value must be PerSession.  \\n  \\n-   There must be one sessionful endpoint configured for the service.  \\n  \\n-   If the contract disallows sessions, then <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> must be set to `true` for all operations.  \\n  \\n-   If the contract permits or allows sessions then all operations for which <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> is set to `true` must be request/response operations, that is <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A> cannot be set to `true`.  \\n  \\n-   If <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> is set to `true`, then all operations on the service must either be marked with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to `true` or marked with <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>. Additionally, <xref:System.ServiceModel.ConcurrencyMode> must be set to Single.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class)]\n\n      [System.Obsolete(\"The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*\")]\n\n      public sealed class DurableServiceAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior\n  inheritance:\n  - System.Attribute\n  implements:\n  - System.ServiceModel.Description.IServiceBehavior\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.DurableServiceAttribute.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  langs:\n  - csharp\n  name: DurableServiceAttribute()\n  nameWithType: DurableServiceAttribute.DurableServiceAttribute()\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.DurableServiceAttribute()\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Description\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Description.DurableServiceAttribute\"></xref> class.\n  syntax:\n    content: public DurableServiceAttribute ();\n    parameters: []\n  overload: System.ServiceModel.Description.DurableServiceAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  id: AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  langs:\n  - csharp\n  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  nameWithType: DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Description\n  summary: Not implemented in <xref href=\"System.ServiceModel.Description.DurableServiceAttribute\"></xref>.\n  syntax:\n    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);\n    parameters:\n    - id: serviceDescription\n      type: System.ServiceModel.Description.ServiceDescription\n      description: Not implemented.\n    - id: serviceHostBase\n      type: System.ServiceModel.ServiceHostBase\n      description: Not implemented.\n    - id: endpoints\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}\n      description: Not implemented.\n    - id: bindingParameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: Not implemented.\n  overload: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  langs:\n  - csharp\n  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  nameWithType: DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Description\n  summary: Customizes the service runtime to support durable service behavior properties, such as specifying a <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref> for the service.\n  syntax:\n    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);\n    parameters:\n    - id: serviceDescription\n      type: System.ServiceModel.Description.ServiceDescription\n      description: The service description.\n    - id: serviceHostBase\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host.\n  overload: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction\n  id: SaveStateInOperationTransaction\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  langs:\n  - csharp\n  name: SaveStateInOperationTransaction\n  nameWithType: DurableServiceAttribute.SaveStateInOperationTransaction\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Description\n  summary: Gets or sets a value that indicates whether the service instance state is persisted to the <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref> using the same transaction under which the operation is run.\n  remarks: \"If SaveStateInOperationTransaction is set to `true`, then all operations on the service must either be marked with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to `true` or marked with <xref:System.ServiceModel.TransactionFlowOption?displayProperty=fullName>. Additionally, <xref:System.ServiceModel.ConcurrencyMode> must be set to Single.  \\n  \\n Setting SaveStateInOperationTransaction to `true` makes the service state transactional with the operation transaction. This means that if the operation's transaction rolls back, the service state also rolls back.\"\n  syntax:\n    content: public bool SaveStateInOperationTransaction { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the service instance state is persisted using the same transaction; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction\n  id: UnknownExceptionAction\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  langs:\n  - csharp\n  name: UnknownExceptionAction\n  nameWithType: DurableServiceAttribute.UnknownExceptionAction\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Description\n  summary: Gets or sets the <xref href=\"System.ServiceModel.Description.UnknownExceptionAction\"></xref> enumeration value associated with the durable service.\n  remarks: When <xref:System.ServiceModel.Description.DurableServiceAttribute> is instantiated, it sets this property value to <xref:System.ServiceModel.Description.UnknownExceptionAction>. This means that whenever an unknown exception is encountered by the durable service, the service instance is terminated and any state information is deleted from the persistence store.\n  syntax:\n    content: public System.ServiceModel.Description.UnknownExceptionAction UnknownExceptionAction { get; set; }\n    return:\n      type: System.ServiceModel.Description.UnknownExceptionAction\n      description: An <xref href=\"System.ServiceModel.Description.UnknownExceptionAction\"></xref> enumeration value.\n  overload: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  id: Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  langs:\n  - csharp\n  name: Validate(ServiceDescription,ServiceHostBase)\n  nameWithType: DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Description\n  summary: Verifies that all durable operations on the service are set up correctly.\n  syntax:\n    content: public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);\n    parameters:\n    - id: serviceDescription\n      type: System.ServiceModel.Description.ServiceDescription\n      description: The service description.\n    - id: serviceHostBase\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host.\n  overload: System.ServiceModel.Description.DurableServiceAttribute.Validate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ServiceModel.Description.DurableServiceAttribute.#ctor\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: DurableServiceAttribute()\n  nameWithType: DurableServiceAttribute.DurableServiceAttribute()\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.DurableServiceAttribute()\n- uid: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  nameWithType: DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)\n- uid: System.ServiceModel.Description.ServiceDescription\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceDescription\n  nameWithType: ServiceDescription\n  fullName: System.ServiceModel.Description.ServiceDescription\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ServiceEndpoint>\n  nameWithType: Collection<ServiceEndpoint>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ServiceEndpoint\n    name: ServiceEndpoint\n    nameWithType: ServiceEndpoint\n    fullName: ServiceEndpoint\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  nameWithType: DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)\n- uid: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: SaveStateInOperationTransaction\n  nameWithType: DurableServiceAttribute.SaveStateInOperationTransaction\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: UnknownExceptionAction\n  nameWithType: DurableServiceAttribute.UnknownExceptionAction\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction\n- uid: System.ServiceModel.Description.UnknownExceptionAction\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: UnknownExceptionAction\n  nameWithType: UnknownExceptionAction\n  fullName: System.ServiceModel.Description.UnknownExceptionAction\n- uid: System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: Validate(ServiceDescription,ServiceHostBase)\n  nameWithType: DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)\n  fullName: System.ServiceModel.Description.DurableServiceAttribute.Validate(ServiceDescription,ServiceHostBase)\n- uid: System.ServiceModel.Description.DurableServiceAttribute.#ctor*\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: DurableServiceAttribute\n  nameWithType: DurableServiceAttribute.DurableServiceAttribute\n- uid: System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters*\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: AddBindingParameters\n  nameWithType: DurableServiceAttribute.AddBindingParameters\n- uid: System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior*\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: ApplyDispatchBehavior\n  nameWithType: DurableServiceAttribute.ApplyDispatchBehavior\n- uid: System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction*\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: SaveStateInOperationTransaction\n  nameWithType: DurableServiceAttribute.SaveStateInOperationTransaction\n- uid: System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction*\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: UnknownExceptionAction\n  nameWithType: DurableServiceAttribute.UnknownExceptionAction\n- uid: System.ServiceModel.Description.DurableServiceAttribute.Validate*\n  parent: System.ServiceModel.Description.DurableServiceAttribute\n  isExternal: false\n  name: Validate\n  nameWithType: DurableServiceAttribute.Validate\n"}