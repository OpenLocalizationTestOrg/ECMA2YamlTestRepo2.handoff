{"nodes":[{"pos":[3258,3360],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> objects."},{"pos":[3373,4042],"content":"This collection is used as part of a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> to animate a <xref:System.Double> property value along a set of key frames.      <a name=\"xamlImplicitCollectionUsage_DoubleKeyFrameCollection\"></a>    ## XAML Implicit Collection Usage      ```   <object>     <object.property>       oneOrMoreDoubleKeyFrameObjectElements     </object.property>   </object>   ```      <a name=\"xamlValues_DoubleKeyFrameCollection\"></a>    ## XAML Values    *oneOrMoreDoubleKeyFrameObjectElements*    One or more <xref:System.Windows.Media.Animation.DoubleKeyFrame> objects, declared using object element syntax.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This collection is used as part of a &lt;xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames&gt; to animate a &lt;xref:System.Double&gt; property value along a set of key frames.","pos":[0,180],"source":"This collection is used as part of a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> to animate a <xref:System.Double> property value along a set of key frames."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlImplicitCollectionUsage_DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Implicit Collection Usage      <ph id=\"ph1\">```   &lt;object&gt;     &lt;object.property&gt;       oneOrMoreDoubleKeyFrameObjectElements     &lt;/object.property&gt;   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>oneOrMoreDoubleKeyFrameObjectElements<ept id=\"p3\">*</ept>    One or more &lt;xref:System.Windows.Media.Animation.DoubleKeyFrame&gt; objects, declared using object element syntax.","pos":[186,649],"source":"<a name=\"xamlImplicitCollectionUsage_DoubleKeyFrameCollection\"></a>    ## XAML Implicit Collection Usage      ```   <object>     <object.property>       oneOrMoreDoubleKeyFrameObjectElements     </object.property>   </object>   ```      <a name=\"xamlValues_DoubleKeyFrameCollection\"></a>    ## XAML Values    *oneOrMoreDoubleKeyFrameObjectElements*    One or more <xref:System.Windows.Media.Animation.DoubleKeyFrame> objects, declared using object element syntax."}]},{"pos":[7577,7694],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> class."},{"pos":[8427,8530],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the end of the collection.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to the end of the collection."},{"pos":[8739,8846],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add to the end of the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to add to the end of the collection."},{"pos":[8903,8958],"content":"The index at which the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyFrame</ph><ept id=\"p1\">&lt;/code&gt;</ept> was added.","needQuote":true,"needEscape":true,"source":"The index at which the <code>keyFrame</code> was added."},{"pos":[9485,9592],"content":"Removes all <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects from the collection.","needQuote":true,"needEscape":true,"source":"Removes all <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> objects from the collection."},{"pos":[10185,10513],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of this object's values.","pos":[0,156],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[157,328]}]},{"pos":[10526,10871],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","pos":[0,343],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;.","pos":[251,343],"source":"       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}]},{"pos":[11087,11409],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property will be <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property was <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,322],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[12037,12335],"content":"Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a deep copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,126],"source":"Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[127,298]}]},{"pos":[12348,12791],"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.","pos":[0,441],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,200],"source":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.Clone%2A&gt; instead of calling this method directly.","pos":[201,338],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName&gt;.","pos":[345,441],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>."}]}]},{"pos":[12992,13082],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> to clone."},{"pos":[13774,14038],"content":"Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a modifiable deep copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using current property values.","pos":[0,167],"source":"Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> using current property values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[168,264]}]},{"pos":[14051,14530],"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.","pos":[0,477],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,212],"source":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; instead of calling this method directly.","pos":[213,362],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName&gt;.","pos":[369,477],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>."}]}]},{"pos":[14743,14833],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> to clone."},{"pos":[15529,15670],"content":"Gets a value that indicates whether the collection contains the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the collection contains the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref>."},{"pos":[15683,16111],"content":"This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>. That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.       This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method performs a linear search; therefore, the average execution time is proportional to the value of &lt;xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A&gt;.","pos":[0,180],"source":"This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>."},{"content":"That is, this method is an O(<bpt id=\"p1\">*</bpt>n<ept id=\"p1\">*</ept>) operation, where <bpt id=\"p2\">*</bpt>n<ept id=\"p2\">*</ept> is equal to &lt;xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A&gt;.","pos":[181,320],"source":" That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>."},{"content":"This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[327,426],"source":"       This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."}]},{"pos":[16327,16426],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to locate in the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to locate in the collection."},{"pos":[16485,16670],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection contains <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">keyFrame</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains <code>keyFrame</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17397,17527],"content":"Copies all of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in a collection to a specified array.","needQuote":true,"needEscape":true,"source":"Copies all of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> objects in a collection to a specified array."},{"pos":[17749,17797],"content":"Identifies the array to which content is copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the array to which content is copied.","pos":[0,48]}]},{"pos":[17858,17937],"content":"Index position in the array to which the contents of the collection are copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Index position in the array to which the contents of the collection are copied.","pos":[0,79]}]},{"pos":[18463,18587],"content":"Gets the number of key frames contained in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the number of key frames contained in the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"pos":[18693,18812],"content":"The number of key frames contained in the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of key frames contained in the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"pos":[19406,19517],"content":"Creates a new, frozen instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new, frozen instance of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"pos":[19695,19793],"content":"A frozen instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A frozen instance of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"pos":[20331,20422],"content":"Gets an empty <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an empty <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"pos":[20630,20716],"content":"An empty <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An empty <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"pos":[21323,21480],"content":"Makes this instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> read-only or determines whether it can be made read-only.","needQuote":true,"needEscape":true,"source":"Makes this instance of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> read-only or determines whether it can be made read-only."},{"pos":[21641,21915],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should simply determine whether this instance can be frozen. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if this instance should actually freeze itself when this method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method should simply determine whether this instance can be frozen.","pos":[0,136],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should simply determine whether this instance can be frozen."},{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this instance should actually freeze itself when this method is called.","pos":[137,274],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if this instance should actually freeze itself when this method is called."}]},{"pos":[21974,22560],"content":"If <code>isChecking</code> is true, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance can be made read-only, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made read-only. If <code>isChecking</code> is false, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance is now read-only, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is true, this method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if this instance can be made read-only, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if it cannot be made read-only.","pos":[0,254],"source":"If <code>isChecking</code> is true, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance can be made read-only, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made read-only."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is false, this method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if this instance is now read-only, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.","pos":[255,586],"source":" If <code>isChecking</code> is false, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance is now read-only, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object."}]},{"pos":[23223,23352],"content":"Makes this instance a clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Makes this instance a clone of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> object."},{"pos":[23365,24227],"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.","pos":[0,858],"nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[0,171]},{"content":"Note that if these properties contain resource references or data bindings, &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; will fail when trying to freeze the object and will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[172,396],"source":" Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>."},{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[403,609],"source":"       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; instead of calling this method directly.","pos":[610,749],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName&gt;.","pos":[756,858],"source":"       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>."}]}]},{"pos":[24434,24542],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to clone and freeze.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> object to clone and freeze."},{"pos":[25270,25496],"content":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a frozen clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,129],"source":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[130,226]}]},{"pos":[25509,26001],"content":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.       For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.       For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.","pos":[0,490],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,218],"source":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; instead of calling this method directly.","pos":[219,370],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly."},{"content":"For more information see &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName&gt;.","pos":[377,490],"source":"       For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>."}]}]},{"pos":[26220,26320],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to copy and freeze.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> to copy and freeze."},{"pos":[26911,26973],"content":"Returns an enumerator that can iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that can iterate through the collection.","pos":[0,62]}]},{"pos":[26986,29662],"content":"Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first item in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next item.       After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Enumerators only allow reading the data in the collection.","pos":[0,58]},{"content":"Enumerators cannot be used to modify the underlying collection.","pos":[59,122]},{"content":"Initially, the enumerator is positioned before the first item in the collection.","pos":[129,209]},{"content":"&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.","pos":[210,306],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.","pos":[307,402],"source":" At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first item of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.","pos":[403,617],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."},{"content":"&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.","pos":[624,820],"source":"       <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next item.","pos":[821,942],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next item."},{"content":"After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id=\"ph1\">`false`</ph>.","pos":[949,1138],"source":"       After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.","pos":[1139,1304],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception."},{"content":"To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first item of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.","pos":[1305,1526],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[1533,1605]},{"content":"If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.","pos":[1606,1905],"source":" If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>."},{"content":"If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; will return the item that it is set to, even if the enumerator is already invalidated.","pos":[1906,2183],"source":" If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated."},{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[2190,2344]},{"content":"Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.","pos":[2345,2484]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[2485,2666]}]},{"pos":[29836,29917],"content":"An <xref:System.Collections.IEnumerator> that can iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; that can iterate through the collection.","pos":[0,81],"source":"An <xref:System.Collections.IEnumerator> that can iterate through the collection."}]},{"pos":[30600,30780],"content":"Searches for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and returns the zero-based index of the first occurrence within the entire collection.","needQuote":true,"needEscape":true,"source":"Searches for the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> and returns the zero-based index of the first occurrence within the entire collection."},{"pos":[30793,31330],"content":"The collection is searched forward starting at the first key frame and ending at the last key frame.       This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>. That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.       This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The collection is searched forward starting at the first key frame and ending at the last key frame.","pos":[0,100]},{"content":"This method performs a linear search; therefore, the average execution time is proportional to the value of &lt;xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A&gt;.","pos":[107,287],"source":"       This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>."},{"content":"That is, this method is an O(<bpt id=\"p1\">*</bpt>n<ept id=\"p1\">*</ept>) operation, where <bpt id=\"p2\">*</bpt>n<ept id=\"p2\">*</ept> is equal to &lt;xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A&gt;.","pos":[288,427],"source":" That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>."},{"content":"This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.","pos":[434,533],"source":"       This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>."}]},{"pos":[31544,31643],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to locate in the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to locate in the collection."},{"pos":[31700,31826],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyFrame</ph><ept id=\"p1\">&lt;/code&gt;</ept> within the entire collection, if found; otherwise, <ph id=\"ph2\">`-1`</ph>.","needQuote":true,"needEscape":true,"source":"The zero-based index of the first occurrence of <code>keyFrame</code> within the entire collection, if found; otherwise, `-1`."},{"pos":[32542,32666],"content":"Inserts a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> into a specific location within the collection.","needQuote":true,"needEscape":true,"source":"Inserts a <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> into a specific location within the collection."},{"pos":[32854,32965],"content":"The index position at which the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is inserted.","needQuote":true,"needEscape":true,"source":"The index position at which the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> is inserted."},{"pos":[33062,33168],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to insert in the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> object to insert in the collection."},{"pos":[33724,33791],"content":"Gets a value that indicates if the collection size can ever change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates if the collection size can ever change.","pos":[0,67]}]},{"pos":[33906,34070],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is frozen; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is frozen; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34626,34685],"content":"Gets a value that indicates if the collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates if the collection is read-only.","pos":[0,59]}]},{"pos":[34799,34966],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35541,35632],"content":"Gets a value that indicates whether access to the collection is synchronized (thread-safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether access to the collection is synchronized (thread-safe).","pos":[0,91]}]},{"pos":[35644,36044],"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,400],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,78]},{"content":"Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.","pos":[79,218]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[219,400]}]}]},{"pos":[36162,36356],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the collection is synchronized (thread-safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized (thread-safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[36934,37050],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index position.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> at the specified index position."},{"pos":[37233,37342],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get or set.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to get or set."},{"pos":[37432,37526],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> at the specified index."},{"pos":[37725,37875],"content":"The attempt to modify the collection is invalid because the collection is frozen (its &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property is <ept id=\"p1\">*</ept><bpt id=\"p2\">*</bpt>true<ept id=\"p2\">*</ept>*).","needQuote":true,"needEscape":true,"source":"The attempt to modify the collection is invalid because the collection is frozen (its <xref:System.Windows.Freezable.IsFrozen*> property is **true**)."},{"pos":[37991,38167],"content":"<code>index</code> is less than zero.       -or-       <code>index</code> is equal to or greater than <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count*>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","pos":[0,37],"source":"<code>index</code> is less than zero."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count*&gt;</ph>.","pos":[44,172],"source":"       -or-       <code>index</code> is equal to or greater than <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count*>."}]},{"pos":[38746,38850],"content":"Removes a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the collection.","needQuote":true,"needEscape":true,"source":"Removes a <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> object from the collection."},{"pos":[39063,39175],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to remove from the collection.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to remove from the collection."},{"pos":[39763,39894],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index position from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> at the specified index position from the collection."},{"pos":[40028,40131],"content":"Index position of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be removed.","needQuote":true,"needEscape":true,"source":"Index position of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to be removed."},{"pos":[40674,40746],"content":"Gets an object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the collection.","pos":[0,72]}]},{"pos":[40859,40926],"content":"An object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]},{"pos":[41719,41862],"content":"Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.","pos":[0,143],"source":"Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index."}]},{"pos":[42012,42197],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.","pos":[0,185],"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.","pos":[0,130],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[131,185],"source":" The <xref:System.Array> must have zero-based indexing."}]}]},{"pos":[42258,42314],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[43052,43104],"content":"Adds an item to the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an item to the &lt;xref:System.Collections.IList&gt;.","pos":[0,52],"source":"Adds an item to the <xref:System.Collections.IList>."}]},{"pos":[43241,43298],"content":"The object to add to the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to add to the &lt;xref:System.Collections.IList&gt;.","pos":[0,57],"source":"The object to add to the <xref:System.Collections.IList>."}]},{"pos":[43355,43478],"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.","pos":[0,123]}]},{"pos":[44232,44313],"content":"Determines whether the <xref:System.Collections.IList> contains a specific value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the &lt;xref:System.Collections.IList&gt; contains a specific value.","pos":[0,81],"source":"Determines whether the <xref:System.Collections.IList> contains a specific value."}]},{"pos":[44456,44516],"content":"The object to locate in the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to locate in the &lt;xref:System.Collections.IList&gt;.","pos":[0,60],"source":"The object to locate in the <xref:System.Collections.IList>."}]},{"pos":[44575,44787],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Object&gt; is found in the &lt;xref:System.Collections.IList&gt;; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Object> is found in the <xref:System.Collections.IList>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45541,45620],"content":"Determines the index of a specific item in the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines the index of a specific item in the &lt;xref:System.Collections.IList&gt;.","pos":[0,79],"source":"Determines the index of a specific item in the <xref:System.Collections.IList>."}]},{"pos":[45761,45821],"content":"The object to locate in the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to locate in the &lt;xref:System.Collections.IList&gt;.","pos":[0,60],"source":"The object to locate in the <xref:System.Collections.IList>."}]},{"pos":[45878,45946],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","needQuote":true,"needEscape":true,"source":"The index of <code>value</code> if found in the list; otherwise, -1."},{"pos":[46738,46816],"content":"Inserts an item to the <xref:System.Collections.IList> at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts an item to the &lt;xref:System.Collections.IList&gt; at the specified index.","pos":[0,78],"source":"Inserts an item to the <xref:System.Collections.IList> at the specified index."}]},{"pos":[46964,47021],"content":"The zero-based index at which <ph id=\"ph1\">`value`</ph> should be inserted.","needQuote":true,"needEscape":true,"source":"The zero-based index at which `value` should be inserted."},{"pos":[47086,47148],"content":"The object to insert into the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to insert into the &lt;xref:System.Collections.IList&gt;.","pos":[0,62],"source":"The object to insert into the <xref:System.Collections.IList>."}]},{"pos":[47882,47930],"content":"Gets or sets the element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]},{"pos":[48092,48142],"content":"The zero-based index of the element to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]},{"pos":[48200,48235],"content":"The element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element at the specified index.","pos":[0,35]}]},{"pos":[48980,49071],"content":"Removes the first occurrence of a specific object from the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the first occurrence of a specific object from the &lt;xref:System.Collections.IList&gt;.","pos":[0,91],"source":"Removes the first occurrence of a specific object from the <xref:System.Collections.IList>."}]},{"pos":[49212,49274],"content":"The object to remove from the <xref:System.Collections.IList>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to remove from the &lt;xref:System.Collections.IList&gt;.","pos":[0,62],"source":"The object to remove from the <xref:System.Collections.IList>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  id: DoubleKeyFrameCollection\n  children:\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(System.Windows.Media.Animation.DoubleKeyFrame)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(System.Windows.Media.Animation.DoubleKeyFrame)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(System.Windows.Media.Animation.DoubleKeyFrame[],System.Int32)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Count\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(System.Windows.Media.Animation.DoubleKeyFrame)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(System.Int32)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(System.Windows.Media.Animation.DoubleKeyFrame)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: DoubleKeyFrameCollection\n  nameWithType: DoubleKeyFrameCollection\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> objects.\n  remarks: \"This collection is used as part of a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> to animate a <xref:System.Double> property value along a set of key frames.  \\n  \\n<a name=\\\"xamlImplicitCollectionUsage_DoubleKeyFrameCollection\\\"></a>   \\n## XAML Implicit Collection Usage  \\n  \\n```  \\n<object>  \\n  <object.property>  \\n    oneOrMoreDoubleKeyFrameObjectElements  \\n  </object.property>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_DoubleKeyFrameCollection\\\"></a>   \\n## XAML Values  \\n *oneOrMoreDoubleKeyFrameObjectElements*  \\n One or more <xref:System.Windows.Media.Animation.DoubleKeyFrame> objects, declared using object element syntax.\"\n  example:\n  - \"The following example demonstrates how to use a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> animation.  \\n  \\n [!code-xml[keyframes_ovw_snip#AltDoubleAnimationUsingKeyFramesWholePage](~/add/codesnippet/xaml/t-system.windows.media.a_13_1.xaml)]\\n [!code-xml[keyframes_ovw_snip#AltDoubleAnimationUsingKeyFramesWholePage](~/add/codesnippet/xaml/t-system.windows.media.a_13_1.xaml)]\"\n  syntax:\n    content: 'public class DoubleKeyFrameCollection : System.Windows.Freezable, System.Collections.IList'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  implements:\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: DoubleKeyFrameCollection()\n  nameWithType: DoubleKeyFrameCollection.DoubleKeyFrameCollection()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.DoubleKeyFrameCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> class.\n  syntax:\n    content: public DoubleKeyFrameCollection ();\n    parameters: []\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(System.Windows.Media.Animation.DoubleKeyFrame)\n  id: Add(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Add(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Add(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(DoubleKeyFrame)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Adds a <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to the end of the collection.\n  syntax:\n    content: public int Add (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Windows.Media.Animation.DoubleKeyFrame\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to add to the end of the collection.\n    return:\n      type: System.Int32\n      description: The index at which the <code>keyFrame</code> was added.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DoubleKeyFrameCollection.Clear()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Removes all <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> objects from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: DoubleKeyFrameCollection.Clone()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Animation.DoubleKeyFrameCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.DoubleKeyFrameCollection\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> to clone.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> to clone.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(System.Windows.Media.Animation.DoubleKeyFrame)\n  id: Contains(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Contains(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Contains(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(DoubleKeyFrame)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates whether the collection contains the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref>.\n  remarks: \"This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>. That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.  \\n  \\n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public bool Contains (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Windows.Media.Animation.DoubleKeyFrame\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to locate in the collection.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains <code>keyFrame</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(System.Windows.Media.Animation.DoubleKeyFrame[],System.Int32)\n  id: CopyTo(System.Windows.Media.Animation.DoubleKeyFrame[],System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: CopyTo(DoubleKeyFrame[],Int32)\n  nameWithType: DoubleKeyFrameCollection.CopyTo(DoubleKeyFrame[],Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(DoubleKeyFrame[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Copies all of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> objects in a collection to a specified array.\n  syntax:\n    content: public void CopyTo (System.Windows.Media.Animation.DoubleKeyFrame[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.Animation.DoubleKeyFrame[]\n      description: Identifies the array to which content is copied.\n    - id: index\n      type: System.Int32\n      description: Index position in the array to which the contents of the collection are copied.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Count\n  id: Count\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: DoubleKeyFrameCollection.Count\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the number of key frames contained in the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of key frames contained in the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: DoubleKeyFrameCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new, frozen instance of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>.\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: A frozen instance of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty\n  id: Empty\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: DoubleKeyFrameCollection.Empty\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets an empty <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>.\n  syntax:\n    content: public static System.Windows.Media.Animation.DoubleKeyFrameCollection Empty { get; }\n    return:\n      type: System.Windows.Media.Animation.DoubleKeyFrameCollection\n      description: An empty <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: DoubleKeyFrameCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this instance of <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> read-only or determines whether it can be made read-only.\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should simply determine whether this instance can be frozen. <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if this instance should actually freeze itself when this method is called.\n    return:\n      type: System.Boolean\n      description: If <code>isChecking</code> is true, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance can be made read-only, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made read-only. If <code>isChecking</code> is false, this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this instance is now read-only, or <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this instance a clone of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> object.\n  remarks: \"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.  \\n  \\n This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> object to clone and freeze.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref>. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.  \\n  \\n For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrameCollection\"></xref> to copy and freeze.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DoubleKeyFrameCollection.GetEnumerator()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Returns an enumerator that can iterate through the collection.\n  remarks: \"Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first item in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next item.  \\n  \\n After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception. To set <xref:System.Collections.IEnumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> that can iterate through the collection.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(System.Windows.Media.Animation.DoubleKeyFrame)\n  id: IndexOf(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: IndexOf(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.IndexOf(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(DoubleKeyFrame)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Searches for the specified <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> and returns the zero-based index of the first occurrence within the entire collection.\n  remarks: \"The collection is searched forward starting at the first key frame and ending at the last key frame.  \\n  \\n This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>. That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.  \\n  \\n This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public int IndexOf (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Windows.Media.Animation.DoubleKeyFrame\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to locate in the collection.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>keyFrame</code> within the entire collection, if found; otherwise, `-1`.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)\n  id: Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Insert(Int32,DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Insert(Int32,DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(Int32,DoubleKeyFrame)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Inserts a <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> into a specific location within the collection.\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.Animation.DoubleKeyFrame keyFrame);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index position at which the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> is inserted.\n    - id: keyFrame\n      type: System.Windows.Media.Animation.DoubleKeyFrame\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> object to insert in the collection.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize\n  id: IsFixedSize\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: DoubleKeyFrameCollection.IsFixedSize\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates if the collection size can ever change.\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is frozen; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: DoubleKeyFrameCollection.IsReadOnly\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates if the collection is read-only.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: DoubleKeyFrameCollection.IsSynchronized\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates whether access to the collection is synchronized (thread-safe).\n  remarks: Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the collection is synchronized (thread-safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DoubleKeyFrameCollection.Item(Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> at the specified index position.\n  syntax:\n    content: public System.Windows.Media.Animation.DoubleKeyFrame this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to get or set.\n    return:\n      type: System.Windows.Media.Animation.DoubleKeyFrame\n      description: The <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> at the specified index.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Item*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The attempt to modify the collection is invalid because the collection is frozen (its <xref:System.Windows.Freezable.IsFrozen*> property is **true**).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count*>.\"\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(System.Windows.Media.Animation.DoubleKeyFrame)\n  id: Remove(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: Remove(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Remove(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(DoubleKeyFrame)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Removes a <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> object from the collection.\n  syntax:\n    content: public void Remove (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Windows.Media.Animation.DoubleKeyFrame\n      description: Identifies the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to remove from the collection.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: DoubleKeyFrameCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Removes the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> at the specified index position from the collection.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Index position of the <xref href=\"System.Windows.Media.Animation.DoubleKeyFrame\"></xref> to be removed.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: DoubleKeyFrameCollection.SyncRoot\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets an object that can be used to synchronize access to the collection.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Copies the elements of the <xref:System.Collections.ICollection> to an <xref:System.Array>, starting at a particular <xref:System.Array> index.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Adds an item to the <xref:System.Collections.IList>.\n  syntax:\n    content: int IList.Add (object keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Object\n      description: The object to add to the <xref:System.Collections.IList>.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Determines whether the <xref:System.Collections.IList> contains a specific value.\n  syntax:\n    content: bool IList.Contains (object keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Object\n      description: The object to locate in the <xref:System.Collections.IList>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Object> is found in the <xref:System.Collections.IList>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Determines the index of a specific item in the <xref:System.Collections.IList>.\n  syntax:\n    content: int IList.IndexOf (object keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Object\n      description: The object to locate in the <xref:System.Collections.IList>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Inserts an item to the <xref:System.Collections.IList> at the specified index.\n  syntax:\n    content: void IList.Insert (int index, object keyFrame);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which `value` should be inserted.\n    - id: keyFrame\n      type: System.Object\n      description: The object to insert into the <xref:System.Collections.IList>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the element at the specified index.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Removes the first occurrence of a specific object from the <xref:System.Collections.IList>.\n  syntax:\n    content: void IList.Remove (object keyFrame);\n    parameters:\n    - id: keyFrame\n      type: System.Object\n      description: The object to remove from the <xref:System.Collections.IList>.\n  overload: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Freezable\n  isExternal: false\n  name: System.Windows.Freezable\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: DoubleKeyFrameCollection()\n  nameWithType: DoubleKeyFrameCollection.DoubleKeyFrameCollection()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.DoubleKeyFrameCollection()\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Add(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Add(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(DoubleKeyFrame)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Animation.DoubleKeyFrame\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: DoubleKeyFrame\n  nameWithType: DoubleKeyFrame\n  fullName: System.Windows.Media.Animation.DoubleKeyFrame\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: DoubleKeyFrameCollection.Clear()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear()\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: DoubleKeyFrameCollection.Clone()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone()\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: DoubleKeyFrameCollection\n  nameWithType: DoubleKeyFrameCollection\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(Freezable)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Contains(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Contains(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(DoubleKeyFrame)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(System.Windows.Media.Animation.DoubleKeyFrame[],System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CopyTo(DoubleKeyFrame[],Int32)\n  nameWithType: DoubleKeyFrameCollection.CopyTo(DoubleKeyFrame[],Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(DoubleKeyFrame[],Int32)\n- uid: System.Windows.Media.Animation.DoubleKeyFrame[]\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: DoubleKeyFrame\n  nameWithType: DoubleKeyFrame\n  fullName: System.Windows.Media.Animation.DoubleKeyFrame[]\n  spec.csharp:\n  - uid: System.Windows.Media.Animation.DoubleKeyFrame\n    name: DoubleKeyFrame\n    nameWithType: DoubleKeyFrame\n    fullName: DoubleKeyFrame[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Count\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Count\n  nameWithType: DoubleKeyFrameCollection.Count\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Count\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: DoubleKeyFrameCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore()\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Empty\n  nameWithType: DoubleKeyFrameCollection.Empty\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: DoubleKeyFrameCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(Boolean)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DoubleKeyFrameCollection.GetEnumerator()\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IndexOf(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.IndexOf(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(DoubleKeyFrame)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Insert(Int32,DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Insert(Int32,DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(Int32,DoubleKeyFrame)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: DoubleKeyFrameCollection.IsFixedSize\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: DoubleKeyFrameCollection.IsReadOnly\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: DoubleKeyFrameCollection.IsSynchronized\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DoubleKeyFrameCollection.Item(Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(Int32)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(System.Windows.Media.Animation.DoubleKeyFrame)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Remove(DoubleKeyFrame)\n  nameWithType: DoubleKeyFrameCollection.Remove(DoubleKeyFrame)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(DoubleKeyFrame)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: DoubleKeyFrameCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(Int32)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: DoubleKeyFrameCollection.SyncRoot\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Add(Object)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Contains(Object)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Item(Int32)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.Animation.DoubleKeyFrameCollection.System.Collections.IList.Remove(Object)\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: DoubleKeyFrameCollection\n  nameWithType: DoubleKeyFrameCollection.DoubleKeyFrameCollection\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Add*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Add\n  nameWithType: DoubleKeyFrameCollection.Add\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Clear\n  nameWithType: DoubleKeyFrameCollection.Clear\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Clone\n  nameWithType: DoubleKeyFrameCollection.Clone\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CloneCore\n  nameWithType: DoubleKeyFrameCollection.CloneCore\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CloneCurrentValueCore\n  nameWithType: DoubleKeyFrameCollection.CloneCurrentValueCore\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Contains\n  nameWithType: DoubleKeyFrameCollection.Contains\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: DoubleKeyFrameCollection.CopyTo\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Count*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Count\n  nameWithType: DoubleKeyFrameCollection.Count\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: DoubleKeyFrameCollection.CreateInstanceCore\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Empty\n  nameWithType: DoubleKeyFrameCollection.Empty\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: FreezeCore\n  nameWithType: DoubleKeyFrameCollection.FreezeCore\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: GetAsFrozenCore\n  nameWithType: DoubleKeyFrameCollection.GetAsFrozenCore\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore\n  nameWithType: DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: DoubleKeyFrameCollection.GetEnumerator\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: DoubleKeyFrameCollection.IndexOf\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Insert\n  nameWithType: DoubleKeyFrameCollection.Insert\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: DoubleKeyFrameCollection.IsFixedSize\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: DoubleKeyFrameCollection.IsReadOnly\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: DoubleKeyFrameCollection.IsSynchronized\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Item*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Item\n  nameWithType: DoubleKeyFrameCollection.Item\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: Remove\n  nameWithType: DoubleKeyFrameCollection.Remove\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: DoubleKeyFrameCollection.RemoveAt\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: DoubleKeyFrameCollection.SyncRoot\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: DoubleKeyFrameCollection.System.Collections.ICollection.CopyTo\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Add\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Contains\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.IndexOf\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Insert\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Item\n- uid: System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove*\n  parent: System.Windows.Media.Animation.DoubleKeyFrameCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: DoubleKeyFrameCollection.System.Collections.IList.Remove\n"}