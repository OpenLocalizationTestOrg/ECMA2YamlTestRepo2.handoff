{"nodes":[{"pos":[864,1104],"content":"Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.","pos":[0,240],"nodes":[{"content":"Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.","pos":[0,89]},{"content":"The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.","pos":[90,208]},{"content":"This class cannot be inherited.","pos":[209,240]}]}]},{"pos":[1116,1439],"content":"SQL Server creates a user-defined type that is bound to the type definition that has the SqlUserDefinedTypeAttribute custom attribute. Every UDT must be annotated with this attribute. See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"SQL Server creates a user-defined type that is bound to the type definition that has the SqlUserDefinedTypeAttribute custom attribute.","pos":[0,134]},{"content":"Every UDT must be annotated with this attribute.","pos":[135,183]},{"content":"See <bpt id=\"p1\">[</bpt>CLR User-Defined Types<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=128028)</ept> for more information about UDTs, including an example of a UDT.","pos":[184,323],"source":" See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT."}]},{"pos":[2811,2953],"content":"A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.","needQuote":true,"needEscape":true,"nodes":[{"content":"A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.","pos":[0,142]}]},{"pos":[2965,3106],"content":"The following example specifies that the <ph id=\"ph1\">`Format`</ph> of the user-defined type is <ph id=\"ph2\">`SerializedDataWithMetadata`</ph>and the<ph id=\"ph3\">`MaxByteSize`</ph> is 8000 bytes.","needQuote":true,"needEscape":true,"extradata":"MT","source":"The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata`and the`MaxByteSize` is 8000 bytes."},{"pos":[3491,3614],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.Format\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values representing the serialization format of the type.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> values representing the serialization format of the type."},{"pos":[4134,4219],"content":"The serialization format as a <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.Format\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The serialization format as a <xref href=\"Microsoft.SqlServer.Server.Format\"></xref>."},{"pos":[4377,4478],"content":"A <bpt id=\"p1\">&lt;xref href=\"Microsoft.SqlServer.Server.Format\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value representing the serialization format.","needQuote":true,"needEscape":true,"source":"A <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> value representing the serialization format."},{"pos":[5034,5090],"content":"Indicates whether the user-defined type is byte ordered.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the user-defined type is byte ordered.","pos":[0,56]}]},{"pos":[6587,6763],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user-defined type is byte ordered; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user-defined type is byte ordered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7326,7404],"content":"Indicates whether all instances of this user-defined type are the same length.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether all instances of this user-defined type are the same length.","pos":[0,78]}]},{"pos":[7416,7751],"content":"If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>. This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If set to <ph id=\"ph1\">`true`</ph>, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to &lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;.","pos":[0,219],"source":"If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>."},{"content":"This attribute is only relevant for UDTs with <ph id=\"ph1\">`UserDefined`</ph> serialization &lt;xref:Microsoft.SqlServer.Server.Format&gt;.","pos":[220,335],"source":" This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>."}]},{"pos":[7873,8058],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all instances of this type are the same length; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all instances of this type are the same length; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8611,8654],"content":"The maximum size of the instance, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size of the instance, in bytes.","pos":[0,43]}]},{"pos":[8667,9920],"content":"You must specify the MaxByteSize property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.       When connecting to SQL Server 2005 or earlier, MaxByteSize must be between 1 and 8000.       When connecting to SQL Server 2008 or later, set MaxByteSize between 1 and 8000, for a type whose instances are always 8,000 bytes or less. For types that can have instances larger than 8000, specify -1.       For a UDT with user-defined serialization specified, MaxByteSize refers to the total size of the UDT in its serialized form as defined by the user. Consider a UDT with a property of a string of 10 characters (<xref:System.Char>). When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of MaxByteSize, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.       This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"You must specify the MaxByteSize property with the <ph id=\"ph1\">`UserDefined`</ph> serialization &lt;xref:Microsoft.SqlServer.Server.Format&gt;.","pos":[0,120],"source":"You must specify the MaxByteSize property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>."},{"content":"When connecting to SQL Server 2005 or earlier, MaxByteSize must be between 1 and 8000.","pos":[127,213]},{"content":"When connecting to SQL Server 2008 or later, set MaxByteSize between 1 and 8000, for a type whose instances are always 8,000 bytes or less.","pos":[220,359]},{"content":"For types that can have instances larger than 8000, specify -1.","pos":[360,423]},{"content":"For a UDT with user-defined serialization specified, MaxByteSize refers to the total size of the UDT in its serialized form as defined by the user.","pos":[430,577]},{"content":"Consider a UDT with a property of a string of 10 characters (&lt;xref:System.Char&gt;).","pos":[578,659],"source":" Consider a UDT with a property of a string of 10 characters (<xref:System.Char>)."},{"content":"When the UDT is serialized using a &lt;xref:System.IO.BinaryWriter&gt;, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.","pos":[660,940],"source":" When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream."},{"content":"So, when determining the value of MaxByteSize, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.","pos":[941,1136]},{"content":"This property should not be used with <ph id=\"ph1\">`Native`</ph> serialization &lt;xref:Microsoft.SqlServer.Server.Format&gt;.","pos":[1143,1245],"source":"       This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>."}]},{"pos":[10038,10113],"content":"An <xref:System.Int32> value representing the maximum size of the instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value representing the maximum size of the instance.","pos":[0,75],"source":"An <xref:System.Int32> value representing the maximum size of the instance."}]},{"pos":[10629,10674],"content":"The SQL Server name of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The SQL Server name of the user-defined type.","pos":[0,45]}]},{"pos":[10686,10824],"content":"The Name property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The Name property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).","pos":[0,138]}]},{"pos":[10938,11025],"content":"A <xref:System.String> value representing the SQL Server name of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; value representing the SQL Server name of the user-defined type.","pos":[0,87],"source":"A <xref:System.String> value representing the SQL Server name of the user-defined type."}]},{"pos":[11614,11689],"content":"The name of the method used to validate instances of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the method used to validate instances of the user-defined type.","pos":[0,75]}]},{"pos":[11701,11846],"content":"The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.","pos":[0,145]}]},{"pos":[11976,12087],"content":"A <xref:System.String> representing the name of the method used to validate instances of the user-defined type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; representing the name of the method used to validate instances of the user-defined type.","pos":[0,111],"source":"A <xref:System.String> representing the name of the method used to validate instances of the user-defined type."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  id: SqlUserDefinedTypeAttribute\n  children:\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name\n  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName\n  langs:\n  - csharp\n  name: SqlUserDefinedTypeAttribute\n  nameWithType: SqlUserDefinedTypeAttribute\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  type: Class\n  summary: Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.\n  remarks: SQL Server creates a user-defined type that is bound to the type definition that has the SqlUserDefinedTypeAttribute custom attribute. Every UDT must be annotated with this attribute. See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.\n  example:\n  - \"The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \\\"Point\\\", has a validation method named \\\"ValidatePoint\\\", and uses the native serialization format.  \\n  \\n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_4_1.cs)]\\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_4_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)]\n\n      public sealed class SqlUserDefinedTypeAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  id: '#ctor(Microsoft.SqlServer.Server.Format)'\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: SqlUserDefinedTypeAttribute(Format)\n  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.\n  remarks: The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata`and the`MaxByteSize` is 8000 bytes.\n  example:\n  - >-\n    [!code-cs[VbRaddataSQLObjects#12](~/add/codesnippet/csharp/CS/Type1.cs#12)]\n     [!code-vb[VbRaddataSQLObjects#12](~/add/codesnippet/visualbasic/VB/Type1.vb#12)]\n  syntax:\n    content: public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);\n    parameters:\n    - id: format\n      type: Microsoft.SqlServer.Server.Format\n      description: One of the <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> values representing the serialization format of the type.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format\n  id: Format\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: Format\n  nameWithType: SqlUserDefinedTypeAttribute.Format\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The serialization format as a <xref href=\"Microsoft.SqlServer.Server.Format\"></xref>.\n  syntax:\n    content: public Microsoft.SqlServer.Server.Format Format { get; }\n    return:\n      type: Microsoft.SqlServer.Server.Format\n      description: A <xref href=\"Microsoft.SqlServer.Server.Format\"></xref> value representing the serialization format.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered\n  id: IsByteOrdered\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: IsByteOrdered\n  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the user-defined type is byte ordered.\n  remarks: \"When set to `true`, the IsByteOrdered property in effect guarantees that the serialized binary data can be used for semantic ordering of the information. Thus, each instance of a byte-ordered UDT object can only have one serialized representation. When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..  \\n  \\n The following features are supported when IsByteOrdered is set to `true`:  \\n  \\n-   The ability to create indexes on columns of this type.  \\n  \\n-   The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.  \\n  \\n-   The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses. In these cases, the binary representation of the type is used to determine the order.  \\n  \\n-   The ability to use comparison operators in Transact-SQL statements.  \\n  \\n-   The ability to persist computed columns of this type.  \\n  \\n Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when IsByteOrdered is set to `true`:  \\n  \\n-   Equal to (=)  \\n  \\n-   Not equal to (!=)  \\n  \\n-   Greater than (>)  \\n  \\n-   Less than (\\\\<)  \\n  \\n-   Greater than or equal to (>=)  \\n  \\n-   Less than or equal to (<=)\"\n  syntax:\n    content: public bool IsByteOrdered { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user-defined type is byte ordered; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength\n  id: IsFixedLength\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: IsFixedLength\n  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether all instances of this user-defined type are the same length.\n  remarks: If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>. This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.\n  syntax:\n    content: public bool IsFixedLength { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all instances of this type are the same length; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize\n  id: MaxByteSize\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: MaxByteSize\n  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The maximum size of the instance, in bytes.\n  remarks: \"You must specify the MaxByteSize property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.  \\n  \\n When connecting to SQL Server 2005 or earlier, MaxByteSize must be between 1 and 8000.  \\n  \\n When connecting to SQL Server 2008 or later, set MaxByteSize between 1 and 8000, for a type whose instances are always 8,000 bytes or less. For types that can have instances larger than 8000, specify -1.  \\n  \\n For a UDT with user-defined serialization specified, MaxByteSize refers to the total size of the UDT in its serialized form as defined by the user. Consider a UDT with a property of a string of 10 characters (<xref:System.Char>). When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream. So, when determining the value of MaxByteSize, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.  \\n  \\n This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.\"\n  syntax:\n    content: public int MaxByteSize { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value representing the maximum size of the instance.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name\n  id: Name\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SqlUserDefinedTypeAttribute.Name\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The SQL Server name of the user-defined type.\n  remarks: The Name property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> value representing the SQL Server name of the user-defined type.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName\n  id: ValidationMethodName\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  langs:\n  - csharp\n  name: ValidationMethodName\n  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The name of the method used to validate instances of the user-defined type.\n  remarks: The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.\n  syntax:\n    content: public string ValidationMethodName { get; set; }\n    return:\n      type: System.String\n      description: A <xref:System.String> representing the name of the method used to validate instances of the user-defined type.\n  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: SqlUserDefinedTypeAttribute(Format)\n  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)\n- uid: Microsoft.SqlServer.Server.Format\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: Format\n  nameWithType: Format\n  fullName: Microsoft.SqlServer.Server.Format\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: Format\n  nameWithType: SqlUserDefinedTypeAttribute.Format\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: IsByteOrdered\n  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: IsFixedLength\n  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: MaxByteSize\n  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlUserDefinedTypeAttribute.Name\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: ValidationMethodName\n  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName\n  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: SqlUserDefinedTypeAttribute\n  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: Format\n  nameWithType: SqlUserDefinedTypeAttribute.Format\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: IsByteOrdered\n  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: IsFixedLength\n  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: MaxByteSize\n  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlUserDefinedTypeAttribute.Name\n- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*\n  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute\n  isExternal: false\n  name: ValidationMethodName\n  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName\n"}