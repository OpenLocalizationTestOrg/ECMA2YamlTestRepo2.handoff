{"nodes":[{"pos":[1884,1896],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3975,3987],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4730,4742],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5413,5425],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6408,6420],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6976,6988],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7563,7575],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8425,8437],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8512,8524],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9303,9315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9390,9402],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10003,10015],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10090,10102],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10831,10843],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10918,10930],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11618,11630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11676,11688],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12434,12446],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12521,12533],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13332,13344],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13419,13431],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14158,14170],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14245,14257],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14869,14881],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14956,14968],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15679,15691],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15741,15753],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.InArgument`1\n  id: InArgument`1\n  children:\n  - System.Activities.InArgument`1.#ctor\n  - System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})\n  - System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)\n  - System.Activities.InArgument`1.#ctor(System.Activities.Variable)\n  - System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  - System.Activities.InArgument`1.#ctor(`0)\n  - System.Activities.InArgument`1.Expression\n  - System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  - System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})\n  - System.Activities.InArgument`1.FromValue(`0)\n  - System.Activities.InArgument`1.FromVariable(System.Activities.Variable)\n  - System.Activities.InArgument`1.Get(System.Activities.ActivityContext)\n  - System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})\n  - System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)\n  - System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.InArgument`1.op_Implicit(`0)\n  - System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)\n  langs:\n  - csharp\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.InArgumentConverter))]\n\n      [System.Windows.Markup.ContentProperty(\"Expression\")]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Activities.XamlIntegration.ArgumentValueSerializer))]\n\n      public sealed class InArgument<T> : System.Activities.InArgument\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Activities.Argument\n  - System.Activities.InArgument\n  implements: []\n  inheritedMembers:\n  - System.Activities.Argument.ArgumentType\n  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)\n  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)\n  - System.Activities.Argument.Direction\n  - System.Activities.Argument.EvaluationOrder\n  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)\n  - System.Activities.Argument.GetLocation(System.Activities.ActivityContext)\n  - System.Activities.Argument.ResultValue\n  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)\n  - System.Activities.Argument.UnspecifiedEvaluationOrder\n  - System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)\n  - System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: InArgument()\n  nameWithType: InArgument<T>.InArgument()\n  fullName: System.Activities.InArgument<T>.InArgument()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public InArgument ();\n    parameters: []\n  overload: System.Activities.InArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})\n  id: '#ctor(System.Activities.Activity{`0})'\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: InArgument(Activity<T>)\n  nameWithType: InArgument<T>.InArgument(Activity<T>)\n  fullName: System.Activities.InArgument<T>.InArgument(Activity<T>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public InArgument (System.Activities.Activity<T> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{T}\n      description: To be added.\n  overload: System.Activities.InArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)\n  id: '#ctor(System.Activities.DelegateArgument)'\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: InArgument(DelegateArgument)\n  nameWithType: InArgument<T>.InArgument(DelegateArgument)\n  fullName: System.Activities.InArgument<T>.InArgument(DelegateArgument)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public InArgument (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: To be added.\n  overload: System.Activities.InArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.#ctor(System.Activities.Variable)\n  id: '#ctor(System.Activities.Variable)'\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: InArgument(Variable)\n  nameWithType: InArgument<T>.InArgument(Variable)\n  fullName: System.Activities.InArgument<T>.InArgument(Variable)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public InArgument (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: To be added.\n  overload: System.Activities.InArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: InArgument(Expression<Func<ActivityContext,T>>)\n  nameWithType: InArgument<T>.InArgument(Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.InArgument<T>.InArgument(Expression<Func<ActivityContext,T>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public InArgument (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n      description: To be added.\n  overload: System.Activities.InArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: InArgument(T)\n  nameWithType: InArgument<T>.InArgument(T)\n  fullName: System.Activities.InArgument<T>.InArgument(T)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public InArgument (T constValue);\n    parameters:\n    - id: constValue\n      type: T\n      description: To be added.\n  overload: System.Activities.InArgument`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.Expression\n  id: Expression\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: Expression\n  nameWithType: InArgument<T>.Expression\n  fullName: System.Activities.InArgument<T>.Expression\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public System.Activities.Activity<T> Expression { get; set; }\n    return:\n      type: System.Activities.Activity{T}\n      description: To be added.\n  overload: System.Activities.InArgument`1.Expression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  id: FromDelegateArgument(System.Activities.DelegateArgument)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: FromDelegateArgument(DelegateArgument)\n  nameWithType: InArgument<T>.FromDelegateArgument(DelegateArgument)\n  fullName: System.Activities.InArgument<T>.FromDelegateArgument(DelegateArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> FromDelegateArgument (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.FromDelegateArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})\n  id: FromExpression(System.Activities.Activity{`0})\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: FromExpression(Activity<T>)\n  nameWithType: InArgument<T>.FromExpression(Activity<T>)\n  fullName: System.Activities.InArgument<T>.FromExpression(Activity<T>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> FromExpression (System.Activities.Activity<T> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{T}\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.FromExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.FromValue(`0)\n  id: FromValue(`0)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: FromValue(T)\n  nameWithType: InArgument<T>.FromValue(T)\n  fullName: System.Activities.InArgument<T>.FromValue(T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> FromValue (T constValue);\n    parameters:\n    - id: constValue\n      type: T\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.FromValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.FromVariable(System.Activities.Variable)\n  id: FromVariable(System.Activities.Variable)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: FromVariable(Variable)\n  nameWithType: InArgument<T>.FromVariable(Variable)\n  fullName: System.Activities.InArgument<T>.FromVariable(Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> FromVariable (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.FromVariable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.Get(System.Activities.ActivityContext)\n  id: Get(System.Activities.ActivityContext)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: Get(ActivityContext)\n  nameWithType: InArgument<T>.Get(ActivityContext)\n  fullName: System.Activities.InArgument<T>.Get(ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public T Get (System.Activities.ActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    return:\n      type: T\n      description: To be added.\n  overload: System.Activities.InArgument`1.Get*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})\n  id: op_Implicit(System.Activities.Activity{`0})\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(Activity<T>)\n  nameWithType: InArgument<T>.op_Implicit(Activity<T>)\n  fullName: System.Activities.InArgument<T>.op_Implicit(Activity<T>)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> op_Implicit (System.Activities.Activity<T> expression);\n    parameters:\n    - id: expression\n      type: System.Activities.Activity{T}\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)\n  id: op_Implicit(System.Activities.DelegateArgument)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(DelegateArgument)\n  nameWithType: InArgument<T>.op_Implicit(DelegateArgument)\n  fullName: System.Activities.InArgument<T>.op_Implicit(DelegateArgument)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> op_Implicit (System.Activities.DelegateArgument delegateArgument);\n    parameters:\n    - id: delegateArgument\n      type: System.Activities.DelegateArgument\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)\n  id: op_Implicit(System.Activities.Variable)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(Variable)\n  nameWithType: InArgument<T>.op_Implicit(Variable)\n  fullName: System.Activities.InArgument<T>.op_Implicit(Variable)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> op_Implicit (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.op_Implicit(`0)\n  id: op_Implicit(`0)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: op_Implicit(T)\n  nameWithType: InArgument<T>.op_Implicit(T)\n  fullName: System.Activities.InArgument<T>.op_Implicit(T)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public static System.Activities.InArgument<T> op_Implicit (T constValue);\n    parameters:\n    - id: constValue\n      type: T\n      description: To be added.\n    return:\n      type: System.Activities.InArgument`1\n      description: To be added.\n  overload: System.Activities.InArgument`1.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)\n  id: Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.InArgument`1\n  langs:\n  - csharp\n  name: Set(ActivityContext,T)\n  nameWithType: InArgument<T>.Set(ActivityContext,T)\n  fullName: System.Activities.InArgument<T>.Set(ActivityContext,T)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: public void Set (System.Activities.ActivityContext context, T value);\n    parameters:\n    - id: context\n      type: System.Activities.ActivityContext\n      description: To be added.\n    - id: value\n      type: T\n      description: To be added.\n  overload: System.Activities.InArgument`1.Set*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.InArgument\n  isExternal: false\n  name: System.Activities.InArgument\n- uid: System.Activities.InArgument`1.#ctor\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument()\n  nameWithType: InArgument<T>.InArgument()\n  fullName: System.Activities.InArgument<T>.InArgument()\n- uid: System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument(Activity<T>)\n  nameWithType: InArgument<T>.InArgument(Activity<T>)\n  fullName: System.Activities.InArgument<T>.InArgument(Activity<T>)\n- uid: System.Activities.Activity{T}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<T>\n  nameWithType: Activity<T>\n  fullName: System.Activities.Activity<T>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument(DelegateArgument)\n  nameWithType: InArgument<T>.InArgument(DelegateArgument)\n  fullName: System.Activities.InArgument<T>.InArgument(DelegateArgument)\n- uid: System.Activities.DelegateArgument\n  parent: System.Activities\n  isExternal: false\n  name: DelegateArgument\n  nameWithType: DelegateArgument\n  fullName: System.Activities.DelegateArgument\n- uid: System.Activities.InArgument`1.#ctor(System.Activities.Variable)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument(Variable)\n  nameWithType: InArgument<T>.InArgument(Variable)\n  fullName: System.Activities.InArgument<T>.InArgument(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument(Expression<Func<ActivityContext,T>>)\n  nameWithType: InArgument<T>.InArgument(Expression<Func<ActivityContext,T>>)\n  fullName: System.Activities.InArgument<T>.InArgument(Expression<Func<ActivityContext,T>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}\n  parent: System.Linq.Expressions\n  isExternal: true\n  name: Expression<Func<ActivityContext,T>>\n  nameWithType: Expression<Func<ActivityContext,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: Expression<System.Func<System.Activities.ActivityContext,T>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.ActivityContext,T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.InArgument`1.#ctor(`0)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument(T)\n  nameWithType: InArgument<T>.InArgument(T)\n  fullName: System.Activities.InArgument<T>.InArgument(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.InArgument`1.Expression\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: Expression\n  nameWithType: InArgument<T>.Expression\n  fullName: System.Activities.InArgument<T>.Expression\n- uid: System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromDelegateArgument(DelegateArgument)\n  nameWithType: InArgument<T>.FromDelegateArgument(DelegateArgument)\n  fullName: System.Activities.InArgument<T>.FromDelegateArgument(DelegateArgument)\n- uid: System.Activities.InArgument`1\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromExpression(Activity<T>)\n  nameWithType: InArgument<T>.FromExpression(Activity<T>)\n  fullName: System.Activities.InArgument<T>.FromExpression(Activity<T>)\n- uid: System.Activities.InArgument`1.FromValue(`0)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromValue(T)\n  nameWithType: InArgument<T>.FromValue(T)\n  fullName: System.Activities.InArgument<T>.FromValue(T)\n- uid: System.Activities.InArgument`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: InArgument<T>.FromVariable(Variable)\n  fullName: System.Activities.InArgument<T>.FromVariable(Variable)\n- uid: System.Activities.InArgument`1.Get(System.Activities.ActivityContext)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: Get(ActivityContext)\n  nameWithType: InArgument<T>.Get(ActivityContext)\n  fullName: System.Activities.InArgument<T>.Get(ActivityContext)\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: op_Implicit(Activity<T>)\n  nameWithType: InArgument<T>.op_Implicit(Activity<T>)\n  fullName: System.Activities.InArgument<T>.op_Implicit(Activity<T>)\n- uid: System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: op_Implicit(DelegateArgument)\n  nameWithType: InArgument<T>.op_Implicit(DelegateArgument)\n  fullName: System.Activities.InArgument<T>.op_Implicit(DelegateArgument)\n- uid: System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: op_Implicit(Variable)\n  nameWithType: InArgument<T>.op_Implicit(Variable)\n  fullName: System.Activities.InArgument<T>.op_Implicit(Variable)\n- uid: System.Activities.InArgument`1.op_Implicit(`0)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: op_Implicit(T)\n  nameWithType: InArgument<T>.op_Implicit(T)\n  fullName: System.Activities.InArgument<T>.op_Implicit(T)\n- uid: System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: Set(ActivityContext,T)\n  nameWithType: InArgument<T>.Set(ActivityContext,T)\n  fullName: System.Activities.InArgument<T>.Set(ActivityContext,T)\n- uid: System.Activities.InArgument`1.#ctor*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: InArgument<T>\n  nameWithType: InArgument<T>.InArgument<T>\n- uid: System.Activities.InArgument`1.Expression*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: Expression\n  nameWithType: InArgument<T>.Expression\n- uid: System.Activities.InArgument`1.FromDelegateArgument*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromDelegateArgument\n  nameWithType: InArgument<T>.FromDelegateArgument\n- uid: System.Activities.InArgument`1.FromExpression*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromExpression\n  nameWithType: InArgument<T>.FromExpression\n- uid: System.Activities.InArgument`1.FromValue*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromValue\n  nameWithType: InArgument<T>.FromValue\n- uid: System.Activities.InArgument`1.FromVariable*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: FromVariable\n  nameWithType: InArgument<T>.FromVariable\n- uid: System.Activities.InArgument`1.Get*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: Get\n  nameWithType: InArgument<T>.Get\n- uid: System.Activities.InArgument`1.op_Implicit*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: InArgument<T>.op_Implicit\n- uid: System.Activities.InArgument`1.Set*\n  parent: System.Activities.InArgument`1\n  isExternal: false\n  name: Set\n  nameWithType: InArgument<T>.Set\n"}