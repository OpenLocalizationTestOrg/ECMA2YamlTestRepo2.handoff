{"nodes":[{"pos":[857,957],"content":"Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.","pos":[0,100]}]},{"pos":[1603,1658],"content":"Returns the path to the application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path to the application configuration file.","pos":[0,55]}]},{"pos":[1793,1862],"content":"A string representing the path to the application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the path to the application configuration file.","pos":[0,69]}]},{"pos":[2491,2573],"content":"Returns a string representing the path to the known local user configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representing the path to the known local user configuration file.","pos":[0,82]}]},{"pos":[2714,2788],"content":"A string representing the path to the known local user configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the path to the known local user configuration file.","pos":[0,74]}]},{"pos":[3433,3517],"content":"Returns a string representing the path to the known roaming user configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representing the path to the known roaming user configuration file.","pos":[0,84]}]},{"pos":[3660,3736],"content":"A string representing the path to the known roaming user configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the path to the known roaming user configuration file.","pos":[0,76]}]},{"pos":[4366,4496],"content":"Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.","pos":[0,130]}]},{"pos":[4647,4716],"content":"A string representing the path to the application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the path to the application configuration file.","pos":[0,69]}]},{"pos":[4775,5116],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a string representing a configuration path is the same as a path to the application configuration file; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if a string representing a configuration path is not the same as a path to the application configuration file.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a string representing a configuration path is the same as a path to the application configuration file; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a string representing a configuration path is not the same as a path to the application configuration file."},{"pos":[5763,5902],"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.","pos":[0,139]}]},{"pos":[6059,6128],"content":"A string representing the path to the application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the path to the application configuration file.","pos":[0,69]}]},{"pos":[6187,6432],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7095,7236],"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.","pos":[0,141]}]},{"pos":[7395,7463],"content":"A string representing the path to an application configuration file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string representing the path to an application configuration file.","pos":[0,68]}]},{"pos":[7522,7769],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Internal.IInternalConfigClientHost\n  id: IInternalConfigClientHost\n  children:\n  - System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  - System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  - System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  - System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  - System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  - System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  langs:\n  - csharp\n  name: IInternalConfigClientHost\n  nameWithType: IInternalConfigClientHost\n  fullName: System.Configuration.Internal.IInternalConfigClientHost\n  type: Interface\n  summary: Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public interface IInternalConfigClientHost\n  implements: []\n  platform:\n  - net462\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  id: GetExeConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: GetExeConfigPath()\n  nameWithType: IInternalConfigClientHost.GetExeConfigPath()\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Internal\n  summary: Returns the path to the application configuration file.\n  syntax:\n    content: public string GetExeConfigPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path to the application configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  id: GetLocalUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: GetLocalUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetLocalUserConfigPath()\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Internal\n  summary: Returns a string representing the path to the known local user configuration file.\n  syntax:\n    content: public string GetLocalUserConfigPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path to the known local user configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  id: GetRoamingUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: GetRoamingUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetRoamingUserConfigPath()\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Internal\n  summary: Returns a string representing the path to the known roaming user configuration file.\n  syntax:\n    content: public string GetRoamingUserConfigPath ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representing the path to the known roaming user configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  id: IsExeConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: IsExeConfig(String)\n  nameWithType: IInternalConfigClientHost.IsExeConfig(String)\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Internal\n  summary: Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.\n  syntax:\n    content: public bool IsExeConfig (string configPath);\n    parameters:\n    - id: configPath\n      type: System.String\n      description: A string representing the path to the application configuration file.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a string representing a configuration path is the same as a path to the application configuration file; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a string representing a configuration path is not the same as a path to the application configuration file.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  id: IsLocalUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: IsLocalUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsLocalUserConfig(String)\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Internal\n  summary: Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.\n  syntax:\n    content: public bool IsLocalUserConfig (string configPath);\n    parameters:\n    - id: configPath\n      type: System.String\n      description: A string representing the path to the application configuration file.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  id: IsRoamingUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  langs:\n  - csharp\n  name: IsRoamingUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsRoamingUserConfig(String)\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration.Internal\n  summary: Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.\n  syntax:\n    content: public bool IsRoamingUserConfig (string configPath);\n    parameters:\n    - id: configPath\n      type: System.String\n      description: A string representing the path to an application configuration file.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetExeConfigPath()\n  nameWithType: IInternalConfigClientHost.GetExeConfigPath()\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetLocalUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetLocalUserConfigPath()\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath()\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetRoamingUserConfigPath()\n  nameWithType: IInternalConfigClientHost.GetRoamingUserConfigPath()\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath()\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsExeConfig(String)\n  nameWithType: IInternalConfigClientHost.IsExeConfig(String)\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsLocalUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsLocalUserConfig(String)\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(String)\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsRoamingUserConfig(String)\n  nameWithType: IInternalConfigClientHost.IsRoamingUserConfig(String)\n  fullName: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(String)\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetExeConfigPath\n  nameWithType: IInternalConfigClientHost.GetExeConfigPath\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetLocalUserConfigPath\n  nameWithType: IInternalConfigClientHost.GetLocalUserConfigPath\n- uid: System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: GetRoamingUserConfigPath\n  nameWithType: IInternalConfigClientHost.GetRoamingUserConfigPath\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsExeConfig\n  nameWithType: IInternalConfigClientHost.IsExeConfig\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsLocalUserConfig\n  nameWithType: IInternalConfigClientHost.IsLocalUserConfig\n- uid: System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig*\n  parent: System.Configuration.Internal.IInternalConfigClientHost\n  isExternal: false\n  name: IsRoamingUserConfig\n  nameWithType: IInternalConfigClientHost.IsRoamingUserConfig\n"}