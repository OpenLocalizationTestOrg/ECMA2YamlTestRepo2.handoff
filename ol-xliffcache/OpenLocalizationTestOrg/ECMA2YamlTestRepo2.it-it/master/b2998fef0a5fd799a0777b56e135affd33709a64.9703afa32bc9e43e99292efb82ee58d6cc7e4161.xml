{"nodes":[{"pos":[643,888],"content":"Represents a command interface that is used for integration of <ph id=\"ph1\">[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]</ph> actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.","needQuote":true,"needEscape":true,"source":"Represents a command interface that is used for integration of [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on."},{"pos":[1511,1566],"content":"Verifies whether the specified command can be executed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies whether the specified command can be executed.","pos":[0,55]}]},{"pos":[1717,1754],"content":"The command identifier to be checked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command identifier to be checked.","pos":[0,37]}]},{"pos":[1813,1990],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified command can be executed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified command can be executed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[2193,2222],"content":"The command is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command is not supported.","pos":[0,29]}]},{"pos":[2969,3043],"content":"Executes the command with the specified command identifier and parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the command with the specified command identifier and parameters.","pos":[0,74]}]},{"pos":[3256,3293],"content":"The command identifier to be checked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command identifier to be checked.","pos":[0,37]}]},{"pos":[3413,3443],"content":"The parameters of the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters of the command.","pos":[0,30]}]},{"pos":[3643,3672],"content":"The command is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command is not supported.","pos":[0,29]}]},{"pos":[4227,4320],"content":"Returns a Boolean value that indicates whether the specified command identifier is supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a Boolean value that indicates whether the specified command identifier is supported.","pos":[0,93]}]},{"pos":[4472,4509],"content":"The command identifier to be checked.","needQuote":true,"needEscape":true,"nodes":[{"content":"The command identifier to be checked.","pos":[0,37]}]},{"pos":[4568,4745],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified command ID is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified command ID is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.ICommandService\n  id: ICommandService\n  children:\n  - System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  - System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  - System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  langs:\n  - csharp\n  name: ICommandService\n  nameWithType: ICommandService\n  fullName: System.Activities.Presentation.Hosting.ICommandService\n  type: Interface\n  summary: Represents a command interface that is used for integration of [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.\n  syntax:\n    content: public interface ICommandService\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  id: CanExecuteCommand(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  langs:\n  - csharp\n  name: CanExecuteCommand(Int32)\n  nameWithType: ICommandService.CanExecuteCommand(Int32)\n  fullName: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Verifies whether the specified command can be executed.\n  syntax:\n    content: public bool CanExecuteCommand (int commandId);\n    parameters:\n    - id: commandId\n      type: System.Int32\n      description: The command identifier to be checked.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified command can be executed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The command is not supported.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  id: ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  langs:\n  - csharp\n  name: ExecuteCommand(Int32,Dictionary<String,Object>)\n  nameWithType: ICommandService.ExecuteCommand(Int32,Dictionary<String,Object>)\n  fullName: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(Int32,Dictionary<String,Object>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Executes the command with the specified command identifier and parameters.\n  syntax:\n    content: public void ExecuteCommand (int commandId, System.Collections.Generic.Dictionary<string,object> parameters);\n    parameters:\n    - id: commandId\n      type: System.Int32\n      description: The command identifier to be checked.\n    - id: parameters\n      type: System.Collections.Generic.Dictionary{System.String,System.Object}\n      description: The parameters of the command.\n  overload: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The command is not supported.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  id: IsCommandSupported(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  langs:\n  - csharp\n  name: IsCommandSupported(Int32)\n  nameWithType: ICommandService.IsCommandSupported(Int32)\n  fullName: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Returns a Boolean value that indicates whether the specified command identifier is supported.\n  syntax:\n    content: public bool IsCommandSupported (int commandId);\n    parameters:\n    - id: commandId\n      type: System.Int32\n      description: The command identifier to be checked.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified command ID is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: CanExecuteCommand(Int32)\n  nameWithType: ICommandService.CanExecuteCommand(Int32)\n  fullName: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: ExecuteCommand(Int32,Dictionary<String,Object>)\n  nameWithType: ICommandService.ExecuteCommand(Int32,Dictionary<String,Object>)\n  fullName: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(Int32,Dictionary<String,Object>)\n- uid: System.Collections.Generic.Dictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: Dictionary<String,Object>\n  nameWithType: Dictionary<String,Object>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: Dictionary<System.String,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: IsCommandSupported(Int32)\n  nameWithType: ICommandService.IsCommandSupported(Int32)\n  fullName: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(Int32)\n- uid: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand*\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: CanExecuteCommand\n  nameWithType: ICommandService.CanExecuteCommand\n- uid: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand*\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: ExecuteCommand\n  nameWithType: ICommandService.ExecuteCommand\n- uid: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported*\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: IsCommandSupported\n  nameWithType: ICommandService.IsCommandSupported\n"}