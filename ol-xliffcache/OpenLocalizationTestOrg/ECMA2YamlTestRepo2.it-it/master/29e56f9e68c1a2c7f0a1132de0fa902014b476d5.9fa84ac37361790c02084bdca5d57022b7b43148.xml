{"nodes":[{"pos":[584,750],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.DataGridView.CellValidating\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event of a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.DataGridView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.Forms.DataGridView.CellValidating\"></xref> event of a <xref href=\"System.Windows.Forms.DataGridView\"></xref> control."},{"pos":[763,1777],"content":"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid. Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value. To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection. To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.       When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The &lt;xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName&gt; event lets you cancel changes to the current cell when the new value is not valid.","pos":[0,167],"source":"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid."},{"content":"Use the &lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A&gt; property to determine the current value.","pos":[168,298],"source":" Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value."},{"content":"To determine the state of the current cell, use the &lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A&gt; and &lt;xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A&gt; properties to access the cell through the &lt;xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName&gt; collection.","pos":[299,637],"source":" To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection."},{"content":"To cancel the change, set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property to <ph id=\"ph1\">`true`</ph>.","pos":[638,742],"source":" To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`."},{"content":"When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source.","pos":[749,855]},{"content":"When this event is canceled in virtual mode, the &lt;xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName&gt; event will not be raised.","pos":[856,1012],"source":" When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised."}]},{"pos":[3139,3200],"content":"Gets the column index of the cell that needs to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the column index of the cell that needs to be validated.","pos":[0,61]}]},{"pos":[3829,3921],"content":"A zero-based integer that specifies the column index of the cell that needs to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"A zero-based integer that specifies the column index of the cell that needs to be validated.","pos":[0,92]}]},{"pos":[4506,4573],"content":"Gets the formatted contents of the cell that needs to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the formatted contents of the cell that needs to be validated.","pos":[0,67]}]},{"pos":[4585,4832],"content":"The text entered by the user through the user interface (UI) becomes the FormattedValue property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"The text entered by the user through the user interface (UI) becomes the FormattedValue property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.","pos":[0,247],"nodes":[{"content":"The text entered by the user through the user interface (UI) becomes the FormattedValue property value.","pos":[0,103]},{"content":"This is the value that you can validate before it is parsed into the cell &lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt; property value.","pos":[104,247],"source":" This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value."}]}]},{"pos":[5633,5668],"content":"A reference to the formatted value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the formatted value.","pos":[0,35]}]},{"pos":[6226,6284],"content":"Gets the row index of the cell that needs to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the row index of the cell that needs to be validated.","pos":[0,58]}]},{"pos":[6910,6999],"content":"A zero-based integer that specifies the row index of the cell that needs to be validated.","needQuote":true,"needEscape":true,"nodes":[{"content":"A zero-based integer that specifies the row index of the cell that needs to be validated.","pos":[0,89]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  id: DataGridViewCellValidatingEventArgs\n  children:\n  - System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  - System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  - System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  langs:\n  - csharp\n  name: DataGridViewCellValidatingEventArgs\n  nameWithType: DataGridViewCellValidatingEventArgs\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Windows.Forms.DataGridView.CellValidating\"></xref> event of a <xref href=\"System.Windows.Forms.DataGridView\"></xref> control.\n  remarks: \"The <xref:System.Windows.Forms.DataGridView.CellValidating?displayProperty=fullName> event lets you cancel changes to the current cell when the new value is not valid. Use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue%2A> property to determine the current value. To determine the state of the current cell, use the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex%2A> properties to access the cell through the <xref:System.Windows.Forms.DataGridView.Rows%2A?displayProperty=fullName> collection. To cancel the change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.  \\n  \\n When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed?displayProperty=fullName> event will not be raised.\"\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.DataGridView.CellValidating> event to ensure that only positive integers are entered by the user. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \\n  \\n [!code-cs[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/csharp/t-system.windows.forms.d_44_1.cs)]\\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/cpp/t-system.windows.forms.d_44_1.cpp)]\\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/visualbasic/t-system.windows.forms.d_44_1.vb)]\"\n  syntax:\n    content: 'public class DataGridViewCellValidatingEventArgs : System.ComponentModel.CancelEventArgs'\n  inheritance:\n  - System.ComponentModel.CancelEventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  id: ColumnIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  langs:\n  - csharp\n  name: ColumnIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.ColumnIndex\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the column index of the cell that needs to be validated.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of this property. This example is part of a larger example available in [How to: Validate Data in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_186_1.vb)]\\n [!code-cs[System.Windows.Forms.DataGridViewDataValidation#20](~/add/codesnippet/csharp/p-system.windows.forms.d_186_1.cs)]\"\n  syntax:\n    content: public int ColumnIndex { get; }\n    return:\n      type: System.Int32\n      description: A zero-based integer that specifies the column index of the cell that needs to be validated.\n  overload: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  id: FormattedValue\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  langs:\n  - csharp\n  name: FormattedValue\n  nameWithType: DataGridViewCellValidatingEventArgs.FormattedValue\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the formatted contents of the cell that needs to be validated.\n  remarks: The text entered by the user through the user interface (UI) becomes the FormattedValue property value. This is the value that you can validate before it is parsed into the cell <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property value.\n  example:\n  - \"The following code example handles the <xref:System.Windows.Forms.DataGridView.CellValidating> event to ensure that only positive integers are entered by the user. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \\n  \\n [!code-cs[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/csharp/p-system.windows.forms.d_167_1.cs)]\\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/cpp/p-system.windows.forms.d_167_1.cpp)]\\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/visualbasic/p-system.windows.forms.d_167_1.vb)]\"\n  syntax:\n    content: public object FormattedValue { get; }\n    return:\n      type: System.Object\n      description: A reference to the formatted value.\n  overload: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  id: RowIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  langs:\n  - csharp\n  name: RowIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.RowIndex\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the row index of the cell that needs to be validated.\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of this property. This example is part of a larger example available in [How to: Validate Data in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_410_1.vb)]\\n [!code-cs[System.Windows.Forms.DataGridViewDataValidation#20](~/add/codesnippet/csharp/p-system.windows.forms.d_410_1.cs)]\"\n  syntax:\n    content: public int RowIndex { get; }\n    return:\n      type: System.Int32\n      description: A zero-based integer that specifies the row index of the cell that needs to be validated.\n  overload: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.CancelEventArgs\n  isExternal: false\n  name: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: ColumnIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.ColumnIndex\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: FormattedValue\n  nameWithType: DataGridViewCellValidatingEventArgs.FormattedValue\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: RowIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.RowIndex\n  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex*\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: ColumnIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.ColumnIndex\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.FormattedValue*\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: FormattedValue\n  nameWithType: DataGridViewCellValidatingEventArgs.FormattedValue\n- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex*\n  parent: System.Windows.Forms.DataGridViewCellValidatingEventArgs\n  isExternal: false\n  name: RowIndex\n  nameWithType: DataGridViewCellValidatingEventArgs.RowIndex\n"}