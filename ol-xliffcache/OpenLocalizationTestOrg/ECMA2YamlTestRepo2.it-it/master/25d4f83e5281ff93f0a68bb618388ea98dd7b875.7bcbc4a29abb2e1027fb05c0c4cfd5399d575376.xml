{"nodes":[{"pos":[732,894],"content":"Uses Windows authentication to authenticate the user name and password in a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security token.","needQuote":true,"needEscape":true,"source":"Uses Windows authentication to authenticate the user name and password in a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token."},{"pos":[907,1244],"content":"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password.       To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password.       To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class.","pos":[0,335],"nodes":[{"content":"The &lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt; method uses Windows authentication to authenticate a user name and password.","pos":[0,192],"source":"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password."},{"content":"To provide a custom authentication scheme, see the &lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt; class.","pos":[199,335],"source":"       To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class."}]}]},{"pos":[2725,2858],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class"},{"pos":[2870,3167],"content":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the &lt;xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A&gt; property and eventually to the &lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt; property.","pos":[0,297],"source":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property."}]},{"pos":[4048,4405],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the &lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*&gt; property when the user is authenticated.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*> property when the user is authenticated."},{"pos":[4600,4782],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to get the groups the Windows user belongs to; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to get the groups the Windows user belongs to; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5612,5800],"content":"Authenticates the specified user name and password and returns the set of authorization policies for <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> security tokens.","needQuote":true,"needEscape":true,"source":"Authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens."},{"pos":[5813,6065],"content":"The `userName` parameter must be in one of the following formats: `domain\\username` or `username`. If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"The <ph id=\"ph1\">`userName`</ph> parameter must be in one of the following formats: <ph id=\"ph2\">`domain\\username`</ph> or <ph id=\"ph3\">`username`</ph>.","pos":[0,98],"source":"The `userName` parameter must be in one of the following formats: `domain\\username` or `username`."},{"content":"If the <ph id=\"ph1\">`userName`</ph> parameter is in the <ph id=\"ph2\">`domain\\username`</ph> format, then there must be only one backslash (<ph id=\"ph3\">\\\\</ph>) character separating the user name and domain.","pos":[99,252],"source":" If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain."}]},{"pos":[6354,6403],"content":"The user name associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user name associated with the security token.","pos":[0,49]}]},{"pos":[6468,6516],"content":"The password associated with the security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The password associated with the security token.","pos":[0,48]}]},{"pos":[6660,6886],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."},{"pos":[7110,7180],"content":"<ph id=\"ph1\">&lt;code&gt;userName&lt;/code&gt;</ph> contains more than one backslash (<ph id=\"ph2\">\\\\</ph>) character.","needQuote":true,"needEscape":true,"source":"<code>userName</code> contains more than one backslash (\\\\) character."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  id: WindowsUserNameSecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenAuthenticator\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  type: Class\n  summary: Uses Windows authentication to authenticate the user name and password in a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token.\n  remarks: \"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password.  \\n  \\n To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class.\"\n  syntax:\n    content: 'public class WindowsUserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenAuthenticator()\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class\n  remarks: When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property.\n  syntax:\n    content: public WindowsUserNameSecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*> property when the user is authenticated.\n  syntax:\n    content: public WindowsUserNameSecurityTokenAuthenticator (bool includeWindowsGroups);\n    parameters:\n    - id: includeWindowsGroups\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to get the groups the Windows user belongs to; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  id: ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateUserNamePasswordCore(String,String)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens.\n  remarks: 'The `userName` parameter must be in one of the following formats: `domain\\username` or `username`. If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain.'\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);\n    parameters:\n    - id: userName\n      type: System.String\n      description: The user name associated with the security token.\n    - id: password\n      type: System.String\n      description: The password associated with the security token.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>userName</code> contains more than one backslash (\\\\) character.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: WindowsUserNameSecurityTokenAuthenticator()\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore(String,String)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: WindowsUserNameSecurityTokenAuthenticator\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore\n"}