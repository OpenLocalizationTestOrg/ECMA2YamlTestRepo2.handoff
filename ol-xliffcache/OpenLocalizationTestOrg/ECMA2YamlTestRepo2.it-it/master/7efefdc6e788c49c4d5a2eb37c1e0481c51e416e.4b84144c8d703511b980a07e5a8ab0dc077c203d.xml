{"nodes":[{"pos":[619,728],"content":"Specifies caching behavior for resources obtained using <xref:System.Net.WebRequest> and its derived classes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies caching behavior for resources obtained using &lt;xref:System.Net.WebRequest&gt; and its derived classes.","pos":[0,109],"source":"Specifies caching behavior for resources obtained using <xref:System.Net.WebRequest> and its derived classes."}]},{"pos":[741,2098],"content":"Members of this enumeration are used to initialize <xref:System.Net.Cache.RequestCachePolicy> objects. The current setting for a <xref:System.Net.Cache.RequestCachePolicy> object is available in the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName> property.       This <xref:System.Net.Cache.HttpRequestCacheLevel> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.       The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.       A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","needQuote":false,"needEscape":true,"extradata":"MT","nodes":[{"content":"Members of this enumeration are used to initialize <xref:System.Net.Cache.RequestCachePolicy> objects. The current setting for a <xref:System.Net.Cache.RequestCachePolicy> object is available in the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName> property.       This <xref:System.Net.Cache.HttpRequestCacheLevel> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.       The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.       A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","pos":[0,1351],"nodes":[{"content":"Members of this enumeration are used to initialize &lt;xref:System.Net.Cache.RequestCachePolicy&gt; objects.","pos":[0,102],"source":"Members of this enumeration are used to initialize <xref:System.Net.Cache.RequestCachePolicy> objects."},{"content":"The current setting for a &lt;xref:System.Net.Cache.RequestCachePolicy&gt; object is available in the &lt;xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName&gt; property.","pos":[103,289],"source":" The current setting for a <xref:System.Net.Cache.RequestCachePolicy> object is available in the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName> property."},{"content":"This &lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt; value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","pos":[296,462],"source":"       This <xref:System.Net.Cache.HttpRequestCacheLevel> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework."},{"content":"No entries are taken from caches, added to caches, or removed from caches between the client and server.","pos":[463,567]},{"content":"The &lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName&gt; property is used to get or set the default cache policy for &lt;xref:System.Net.HttpWebRequest&gt; instances.","pos":[574,761],"source":"       The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest> instances."},{"content":"The &lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName&gt; property is used to get or set the default cache policy for a &lt;xref:System.Net.WebRequest&gt; instances.","pos":[762,936],"source":" The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest> instances."},{"content":"The &lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName&gt; property is used to get or set the cache policy for a specific request.","pos":[937,1081],"source":" The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request."},{"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.","pos":[1088,1223]},{"content":"So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","pos":[1224,1351]}]}]},{"pos":[2845,3105],"content":"Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","needQuote":true,"needEscape":true,"nodes":[{"content":"Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","pos":[0,260],"nodes":[{"content":"Satisfies a request by using the server.","pos":[0,40]},{"content":"No entries are taken from caches, added to caches, or removed from caches between the client and server.","pos":[41,145]},{"content":"This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","pos":[146,260]}]}]},{"pos":[3219,3231],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3639,3917],"content":"Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","pos":[0,278],"nodes":[{"content":"Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server.","pos":[0,137]},{"content":"If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","pos":[138,278]}]}]},{"pos":[3929,4144],"content":"A copy of a requested resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So subsequent requests for the same resource would use a cached copy.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A copy of a requested resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So subsequent requests for the same resource would use a cached copy.","pos":[0,215],"nodes":[{"content":"A copy of a requested resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.","pos":[0,145]},{"content":"So subsequent requests for the same resource would use a cached copy.","pos":[146,215]}]}]},{"pos":[4263,4275],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4648,4900],"content":"Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <xref:System.Net.WebException> exception is thrown if the item is not in the client cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <xref:System.Net.WebException> exception is thrown if the item is not in the client cache.","pos":[0,252],"nodes":[{"content":"Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache.","pos":[0,116]},{"content":"When this cache policy level is specified, a &lt;xref:System.Net.WebException&gt; exception is thrown if the item is not in the client cache.","pos":[117,252],"source":" When this cache policy level is specified, a <xref:System.Net.WebException> exception is thrown if the item is not in the client cache."}]}]},{"pos":[5012,5024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5387,5691],"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.","pos":[0,304],"nodes":[{"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server.","pos":[0,138]},{"content":"The action taken is determined by the current cache policy and the age of the content in the cache.","pos":[139,238]},{"content":"This is the cache level that should be used by most applications.","pos":[239,304]}]}]},{"pos":[5801,5813],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6211,6602],"content":"Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the <xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"></xref> cache control directive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Never satisfies a request by using resources from the cache and does not cache resources.","pos":[0,89]},{"content":"If the resource is present in the local cache, it is removed.","pos":[90,151]},{"content":"This policy level indicates to intermediate caches that they should remove the resource.","pos":[152,240]},{"content":"In the HTTP caching protocol, this is achieved using the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cache control directive.","pos":[241,391],"source":" In the HTTP caching protocol, this is achieved using the <xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"></xref> cache control directive."}]},{"pos":[6719,6731],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7089,7411],"content":"Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the <xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"></xref> cache control directive and the no-cache <xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"></xref> header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Satisfies a request by using the server.","pos":[0,40]},{"content":"The response might be saved in the cache.","pos":[41,82]},{"content":"In the HTTP caching protocol, this is achieved using the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cache control directive and the no-cache <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> header.","pos":[83,322],"source":" In the HTTP caching protocol, this is achieved using the <xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"></xref> cache control directive and the no-cache <xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"></xref> header."}]},{"pos":[7520,7532],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7910,8152],"content":"Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.","needQuote":true,"needEscape":true,"nodes":[{"content":"Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.","pos":[0,242]}]},{"pos":[8164,8469],"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So subsequent requests for the same resource would use a cached copy if the timestamp for the cached resource is the same as the timestamp of the resource on the server.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So subsequent requests for the same resource would use a cached copy if the timestamp for the cached resource is the same as the timestamp of the resource on the server.","pos":[0,305],"nodes":[{"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.","pos":[0,135]},{"content":"So subsequent requests for the same resource would use a cached copy if the timestamp for the cached resource is the same as the timestamp of the resource on the server.","pos":[136,305]}]}]},{"pos":[8582,8594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Cache.RequestCacheLevel\n  id: RequestCacheLevel\n  children:\n  - System.Net.Cache.RequestCacheLevel.BypassCache\n  - System.Net.Cache.RequestCacheLevel.CacheIfAvailable\n  - System.Net.Cache.RequestCacheLevel.CacheOnly\n  - System.Net.Cache.RequestCacheLevel.Default\n  - System.Net.Cache.RequestCacheLevel.NoCacheNoStore\n  - System.Net.Cache.RequestCacheLevel.Reload\n  - System.Net.Cache.RequestCacheLevel.Revalidate\n  langs:\n  - csharp\n  name: RequestCacheLevel\n  nameWithType: RequestCacheLevel\n  fullName: System.Net.Cache.RequestCacheLevel\n  type: Enum\n  summary: Specifies caching behavior for resources obtained using <xref:System.Net.WebRequest> and its derived classes.\n  remarks: \"Members of this enumeration are used to initialize <xref:System.Net.Cache.RequestCachePolicy> objects. The current setting for a <xref:System.Net.Cache.RequestCachePolicy> object is available in the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName> property.  \\n  \\n This <xref:System.Net.Cache.HttpRequestCacheLevel> value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.  \\n  \\n The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.  \\n  \\n A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.\"\n  example:\n  - \"The following code example creates policy that returns a resource only if it is in the cache.  \\n  \\n [!code-cpp[NclSimpleCache#13](~/add/codesnippet/cpp/t-system.net.cache.reque_0_1.cpp)]\\n [!code-cs[NclSimpleCache#13](~/add/codesnippet/csharp/t-system.net.cache.reque_0_1.cs)]\"\n  syntax:\n    content: public enum RequestCacheLevel\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.BypassCache\n  id: BypassCache\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: BypassCache\n  nameWithType: RequestCacheLevel.BypassCache\n  fullName: System.Net.Cache.RequestCacheLevel.BypassCache\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.\n  syntax:\n    content: BypassCache\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.CacheIfAvailable\n  id: CacheIfAvailable\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: CacheIfAvailable\n  nameWithType: RequestCacheLevel.CacheIfAvailable\n  fullName: System.Net.Cache.RequestCacheLevel.CacheIfAvailable\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.\n  remarks: A copy of a requested resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So subsequent requests for the same resource would use a cached copy.\n  syntax:\n    content: CacheIfAvailable\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.CacheOnly\n  id: CacheOnly\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: CacheOnly\n  nameWithType: RequestCacheLevel.CacheOnly\n  fullName: System.Net.Cache.RequestCacheLevel.CacheOnly\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <xref:System.Net.WebException> exception is thrown if the item is not in the client cache.\n  syntax:\n    content: CacheOnly\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.Default\n  id: Default\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: Default\n  nameWithType: RequestCacheLevel.Default\n  fullName: System.Net.Cache.RequestCacheLevel.Default\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.\n  syntax:\n    content: Default\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.NoCacheNoStore\n  id: NoCacheNoStore\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: NoCacheNoStore\n  nameWithType: RequestCacheLevel.NoCacheNoStore\n  fullName: System.Net.Cache.RequestCacheLevel.NoCacheNoStore\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the <xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"></xref> cache control directive.\n  syntax:\n    content: NoCacheNoStore\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.Reload\n  id: Reload\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: Reload\n  nameWithType: RequestCacheLevel.Reload\n  fullName: System.Net.Cache.RequestCacheLevel.Reload\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the <xref uid=\"langword_csharp_no-cache\" name=\"no-cache\" href=\"\"></xref> cache control directive and the no-cache <xref uid=\"langword_csharp_Pragma\" name=\"Pragma\" href=\"\"></xref> header.\n  syntax:\n    content: Reload\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Cache.RequestCacheLevel.Revalidate\n  id: Revalidate\n  parent: System.Net.Cache.RequestCacheLevel\n  langs:\n  - csharp\n  name: Revalidate\n  nameWithType: RequestCacheLevel.Revalidate\n  fullName: System.Net.Cache.RequestCacheLevel.Revalidate\n  type: Field\n  assemblies:\n  - System\n  namespace: System.Net.Cache\n  summary: Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.\n  remarks: A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So subsequent requests for the same resource would use a cached copy if the timestamp for the cached resource is the same as the timestamp of the resource on the server.\n  syntax:\n    content: Revalidate\n    return:\n      type: System.Net.Cache.RequestCacheLevel\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Net.Cache.RequestCacheLevel.BypassCache\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: BypassCache\n  nameWithType: RequestCacheLevel.BypassCache\n  fullName: System.Net.Cache.RequestCacheLevel.BypassCache\n- uid: System.Net.Cache.RequestCacheLevel\n  parent: System.Net.Cache\n  isExternal: false\n  name: RequestCacheLevel\n  nameWithType: RequestCacheLevel\n  fullName: System.Net.Cache.RequestCacheLevel\n- uid: System.Net.Cache.RequestCacheLevel.CacheIfAvailable\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: CacheIfAvailable\n  nameWithType: RequestCacheLevel.CacheIfAvailable\n  fullName: System.Net.Cache.RequestCacheLevel.CacheIfAvailable\n- uid: System.Net.Cache.RequestCacheLevel.CacheOnly\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: CacheOnly\n  nameWithType: RequestCacheLevel.CacheOnly\n  fullName: System.Net.Cache.RequestCacheLevel.CacheOnly\n- uid: System.Net.Cache.RequestCacheLevel.Default\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: Default\n  nameWithType: RequestCacheLevel.Default\n  fullName: System.Net.Cache.RequestCacheLevel.Default\n- uid: System.Net.Cache.RequestCacheLevel.NoCacheNoStore\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: NoCacheNoStore\n  nameWithType: RequestCacheLevel.NoCacheNoStore\n  fullName: System.Net.Cache.RequestCacheLevel.NoCacheNoStore\n- uid: System.Net.Cache.RequestCacheLevel.Reload\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: Reload\n  nameWithType: RequestCacheLevel.Reload\n  fullName: System.Net.Cache.RequestCacheLevel.Reload\n- uid: System.Net.Cache.RequestCacheLevel.Revalidate\n  parent: System.Net.Cache.RequestCacheLevel\n  isExternal: false\n  name: Revalidate\n  nameWithType: RequestCacheLevel.Revalidate\n  fullName: System.Net.Cache.RequestCacheLevel.Revalidate\n"}