{"nodes":[{"pos":[1776,1918],"content":"Represents the set of arguments that a configured <bpt id=\"p1\">&lt;xref href=\"System.Activities.CodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> introduces to the execution environment.","needQuote":true,"needEscape":true,"source":"Represents the set of arguments that a configured <xref href=\"System.Activities.CodeActivity\"></xref> introduces to the execution environment."},{"pos":[2544,2607],"content":"Adds an argument to the collection of arguments of an activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an argument to the collection of arguments of an activity.","pos":[0,63]}]},{"pos":[2801,2839],"content":"The argument to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The argument to add to the collection.","pos":[0,38]}]},{"pos":[3655,3667],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4339,4425],"content":"Adds the specified validation error to the metadata’s collection of validation errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified validation error to the metadata’s collection of validation errors.","pos":[0,86]}]},{"pos":[4438,4573],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> <bpt id=\"p1\">[</bpt>Imperative Code-Based Validation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md)."},{"pos":[4811,4839],"content":"The validation error to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validation error to add.","pos":[0,28]}]},{"pos":[5410,5516],"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","pos":[0,106]}]},{"pos":[5529,5664],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> <bpt id=\"p1\">[</bpt>Imperative Code-Based Validation<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":false,"needEscape":true,"extradata":"MT","source":"[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md)."},{"pos":[5847,5893],"content":"A message that describes the validation error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A message that describes the validation error.","pos":[0,46]}]},{"pos":[6542,6682],"content":"Binds the specified <bpt id=\"p1\">&lt;xref href=\"System.Activities.Argument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified <bpt id=\"p2\">&lt;xref href=\"System.Activities.RuntimeArgument\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>."},{"pos":[6897,6957],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Argument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to bind.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Argument\"></xref> to bind."},{"pos":[7042,7109],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.RuntimeArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to bind.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind."},{"pos":[7579,7769],"content":"Gets the activity’s <bpt id=\"p1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of arguments or symbols introduced by a <bpt id=\"p2\">&lt;xref href=\"System.Activities.Hosting.SymbolResolver\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>."},{"pos":[7958,8106],"content":"The activity’s location reference environment of arguments or symbols introduced by a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Hosting.SymbolResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The activity’s location reference environment of arguments or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>."},{"pos":[8610,8685],"content":"Determines whether the specified object is equal to this metadata instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified object is equal to this metadata instance.","pos":[0,75]}]},{"pos":[8826,8848],"content":"The object to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare.","pos":[0,22]}]},{"pos":[8907,9102],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is equal to this metadata instance; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to this metadata instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9653,9716],"content":"Returns a collection of arguments obtained by using reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a collection of arguments obtained by using reflection.","pos":[0,63]}]},{"pos":[9728,9911],"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"This method uses an activity’s &lt;xref:System.ComponentModel.TypeDescriptor&gt; to examine all public properties of type &lt;xref:System.Activities.Argument&gt; and returns them in a collection.","pos":[0,183],"source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection."}]},{"pos":[10189,10215],"content":"A collection of arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of arguments.","pos":[0,26]}]},{"pos":[10711,10766],"content":"Returns a unique identifier for this metadata instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a unique identifier for this metadata instance.","pos":[0,55]}]},{"pos":[10901,10960],"content":"An integer that uniquely identifies this metadata instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer that uniquely identifies this metadata instance.","pos":[0,59]}]},{"pos":[11447,11531],"content":"Gets a value that indicates whether there are any validation errors in the metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether there are any validation errors in the metadata.","pos":[0,84]}]},{"pos":[11648,11817],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if validation errors are present; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if validation errors are present; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12583,12669],"content":"Returns a value that indicates whether the two specified metadata instances are equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are equal.","pos":[0,86]}]},{"pos":[12918,12944],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[13031,13058],"content":"The second item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The second item to compare.","pos":[0,27]}]},{"pos":[13117,13280],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two items are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14054,14144],"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","pos":[0,90]}]},{"pos":[14395,14421],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[14508,14534],"content":"The first item to compare.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first item to compare.","pos":[0,26]}]},{"pos":[14593,14760],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two items are not equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15306,15389],"content":"Specifies that the activity requires an extension of the specified type at runtime.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that the activity requires an extension of the specified type at runtime.","pos":[0,83]}]},{"pos":[15401,15483],"content":"If the host fails to provide an extension of the specified type, validation fails.","needQuote":true,"needEscape":true,"extradata":"MT","nodes":[{"content":"If the host fails to provide an extension of the specified type, validation fails.","pos":[0,82]}]},{"pos":[15641,15667],"content":"The type of the extension.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the extension.","pos":[0,26]}]},{"pos":[17049,17120],"content":"Adds the specified collection of arguments to the activity’s arguments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection of arguments to the activity’s arguments.","pos":[0,71]}]},{"pos":[17413,17434],"content":"The arguments to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The arguments to add.","pos":[0,21]}]},{"pos":[18275,18376],"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","pos":[0,101]}]},{"pos":[18712,18741],"content":"The validation errors to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The validation errors to add.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.CodeActivityMetadata\n  id: CodeActivityMetadata\n  children:\n  - System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  - System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  - System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  - System.Activities.CodeActivityMetadata.AddValidationError(System.String)\n  - System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  - System.Activities.CodeActivityMetadata.Environment\n  - System.Activities.CodeActivityMetadata.Equals(System.Object)\n  - System.Activities.CodeActivityMetadata.GetArgumentsWithReflection\n  - System.Activities.CodeActivityMetadata.GetHashCode\n  - System.Activities.CodeActivityMetadata.HasViolations\n  - System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  - System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  - System.Activities.CodeActivityMetadata.RequireExtension(System.Type)\n  - System.Activities.CodeActivityMetadata.RequireExtension``1\n  - System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  - System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  langs:\n  - csharp\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n  type: Struct\n  summary: Represents the set of arguments that a configured <xref href=\"System.Activities.CodeActivity\"></xref> introduces to the execution environment.\n  syntax:\n    content: public struct CodeActivityMetadata\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  id: AddArgument(System.Activities.RuntimeArgument)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: AddArgument(RuntimeArgument)\n  nameWithType: CodeActivityMetadata.AddArgument(RuntimeArgument)\n  fullName: System.Activities.CodeActivityMetadata.AddArgument(RuntimeArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds an argument to the collection of arguments of an activity.\n  syntax:\n    content: public void AddArgument (System.Activities.RuntimeArgument argument);\n    parameters:\n    - id: argument\n      type: System.Activities.RuntimeArgument\n      description: The argument to add to the collection.\n  overload: System.Activities.CodeActivityMetadata.AddArgument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  id: AddDefaultExtensionProvider``1(System.Func{``0})\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: AddDefaultExtensionProvider(Func<T>)\n  nameWithType: CodeActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n  fullName: System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public void AddDefaultExtensionProvider<T> (Func<T> extensionProvider) where T : class;'\n    parameters:\n    - id: extensionProvider\n      type: System.Func{T}\n      description: To be added.\n  overload: System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  id: AddValidationError(System.Activities.Validation.ValidationError)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: AddValidationError(ValidationError)\n  nameWithType: CodeActivityMetadata.AddValidationError(ValidationError)\n  fullName: System.Activities.CodeActivityMetadata.AddValidationError(ValidationError)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified validation error to the metadata’s collection of validation errors.\n  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public void AddValidationError (System.Activities.Validation.ValidationError validationError);\n    parameters:\n    - id: validationError\n      type: System.Activities.Validation.ValidationError\n      description: The validation error to add.\n  overload: System.Activities.CodeActivityMetadata.AddValidationError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.AddValidationError(System.String)\n  id: AddValidationError(System.String)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: AddValidationError(String)\n  nameWithType: CodeActivityMetadata.AddValidationError(String)\n  fullName: System.Activities.CodeActivityMetadata.AddValidationError(String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds a validation error to the metadata’s collection of validation errors using the specified description.\n  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public void AddValidationError (string validationErrorMessage);\n    parameters:\n    - id: validationErrorMessage\n      type: System.String\n      description: A message that describes the validation error.\n  overload: System.Activities.CodeActivityMetadata.AddValidationError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  id: Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: Bind(Argument,RuntimeArgument)\n  nameWithType: CodeActivityMetadata.Bind(Argument,RuntimeArgument)\n  fullName: System.Activities.CodeActivityMetadata.Bind(Argument,RuntimeArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>.\n  syntax:\n    content: public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);\n    parameters:\n    - id: binding\n      type: System.Activities.Argument\n      description: The <xref href=\"System.Activities.Argument\"></xref> to bind.\n    - id: argument\n      type: System.Activities.RuntimeArgument\n      description: The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind.\n  overload: System.Activities.CodeActivityMetadata.Bind*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.Environment\n  id: Environment\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: Environment\n  nameWithType: CodeActivityMetadata.Environment\n  fullName: System.Activities.CodeActivityMetadata.Environment\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment Environment { get; }\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: The activity’s location reference environment of arguments or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.\n  overload: System.Activities.CodeActivityMetadata.Environment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CodeActivityMetadata.Equals(Object)\n  fullName: System.Activities.CodeActivityMetadata.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Determines whether the specified object is equal to this metadata instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is equal to this metadata instance; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityMetadata.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.GetArgumentsWithReflection\n  id: GetArgumentsWithReflection\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: GetArgumentsWithReflection()\n  nameWithType: CodeActivityMetadata.GetArgumentsWithReflection()\n  fullName: System.Activities.CodeActivityMetadata.GetArgumentsWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of arguments obtained by using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> GetArgumentsWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n      description: A collection of arguments.\n  overload: System.Activities.CodeActivityMetadata.GetArgumentsWithReflection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.GetHashCode\n  id: GetHashCode\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CodeActivityMetadata.GetHashCode()\n  fullName: System.Activities.CodeActivityMetadata.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a unique identifier for this metadata instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer that uniquely identifies this metadata instance.\n  overload: System.Activities.CodeActivityMetadata.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.HasViolations\n  id: HasViolations\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: HasViolations\n  nameWithType: CodeActivityMetadata.HasViolations\n  fullName: System.Activities.CodeActivityMetadata.HasViolations\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets a value that indicates whether there are any validation errors in the metadata.\n  syntax:\n    content: public bool HasViolations { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if validation errors are present; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityMetadata.HasViolations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  id: op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: op_Equality(CodeActivityMetadata,CodeActivityMetadata)\n  nameWithType: CodeActivityMetadata.op_Equality(CodeActivityMetadata,CodeActivityMetadata)\n  fullName: System.Activities.CodeActivityMetadata.op_Equality(CodeActivityMetadata,CodeActivityMetadata)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are equal.\n  syntax:\n    content: public static bool op_Equality (System.Activities.CodeActivityMetadata left, System.Activities.CodeActivityMetadata right);\n    parameters:\n    - id: left\n      type: System.Activities.CodeActivityMetadata\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.CodeActivityMetadata\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityMetadata.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  id: op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: op_Inequality(CodeActivityMetadata,CodeActivityMetadata)\n  nameWithType: CodeActivityMetadata.op_Inequality(CodeActivityMetadata,CodeActivityMetadata)\n  fullName: System.Activities.CodeActivityMetadata.op_Inequality(CodeActivityMetadata,CodeActivityMetadata)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Activities.CodeActivityMetadata left, System.Activities.CodeActivityMetadata right);\n    parameters:\n    - id: left\n      type: System.Activities.CodeActivityMetadata\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.CodeActivityMetadata\n      description: The first item to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two items are not equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.CodeActivityMetadata.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.RequireExtension(System.Type)\n  id: RequireExtension(System.Type)\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: RequireExtension(Type)\n  nameWithType: CodeActivityMetadata.RequireExtension(Type)\n  fullName: System.Activities.CodeActivityMetadata.RequireExtension(Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the activity requires an extension of the specified type at runtime.\n  remarks: If the host fails to provide an extension of the specified type, validation fails.\n  syntax:\n    content: public void RequireExtension (Type extensionType);\n    parameters:\n    - id: extensionType\n      type: System.Type\n      description: The type of the extension.\n  overload: System.Activities.CodeActivityMetadata.RequireExtension*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.RequireExtension``1\n  id: RequireExtension``1\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: RequireExtension()\n  nameWithType: CodeActivityMetadata.RequireExtension()\n  fullName: System.Activities.CodeActivityMetadata.RequireExtension()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  syntax:\n    content: 'public void RequireExtension<T> () where T : class;'\n    parameters: []\n  overload: System.Activities.CodeActivityMetadata.RequireExtension<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  id: SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: SetArgumentsCollection(Collection<RuntimeArgument>)\n  nameWithType: CodeActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  fullName: System.Activities.CodeActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of arguments to the activity’s arguments.\n  syntax:\n    content: public void SetArgumentsCollection (System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> arguments);\n    parameters:\n    - id: arguments\n      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n      description: The arguments to add.\n  overload: System.Activities.CodeActivityMetadata.SetArgumentsCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  id: SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  parent: System.Activities.CodeActivityMetadata\n  langs:\n  - csharp\n  name: SetValidationErrorsCollection(Collection<ValidationError>)\n  nameWithType: CodeActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  fullName: System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of validation errors to the metadata’s collection of validation errors.\n  syntax:\n    content: public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError> validationErrors);\n    parameters:\n    - id: validationErrors\n      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}\n      description: The validation errors to add.\n  overload: System.Activities.CodeActivityMetadata.SetValidationErrorsCollection*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddArgument(RuntimeArgument)\n  nameWithType: CodeActivityMetadata.AddArgument(RuntimeArgument)\n  fullName: System.Activities.CodeActivityMetadata.AddArgument(RuntimeArgument)\n- uid: System.Activities.RuntimeArgument\n  parent: System.Activities\n  isExternal: false\n  name: RuntimeArgument\n  nameWithType: RuntimeArgument\n  fullName: System.Activities.RuntimeArgument\n- uid: System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddDefaultExtensionProvider(Func<T>)\n  nameWithType: CodeActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n  fullName: System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider(Func<T>)\n- uid: System.Func{T}\n  parent: System\n  isExternal: true\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddValidationError(ValidationError)\n  nameWithType: CodeActivityMetadata.AddValidationError(ValidationError)\n  fullName: System.Activities.CodeActivityMetadata.AddValidationError(ValidationError)\n- uid: System.Activities.Validation.ValidationError\n  parent: System.Activities.Validation\n  isExternal: false\n  name: ValidationError\n  nameWithType: ValidationError\n  fullName: System.Activities.Validation.ValidationError\n- uid: System.Activities.CodeActivityMetadata.AddValidationError(System.String)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddValidationError(String)\n  nameWithType: CodeActivityMetadata.AddValidationError(String)\n  fullName: System.Activities.CodeActivityMetadata.AddValidationError(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: Bind(Argument,RuntimeArgument)\n  nameWithType: CodeActivityMetadata.Bind(Argument,RuntimeArgument)\n  fullName: System.Activities.CodeActivityMetadata.Bind(Argument,RuntimeArgument)\n- uid: System.Activities.Argument\n  parent: System.Activities\n  isExternal: false\n  name: Argument\n  nameWithType: Argument\n  fullName: System.Activities.Argument\n- uid: System.Activities.CodeActivityMetadata.Environment\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: Environment\n  nameWithType: CodeActivityMetadata.Environment\n  fullName: System.Activities.CodeActivityMetadata.Environment\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.CodeActivityMetadata.Equals(System.Object)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeActivityMetadata.Equals(Object)\n  fullName: System.Activities.CodeActivityMetadata.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.CodeActivityMetadata.GetArgumentsWithReflection\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: GetArgumentsWithReflection()\n  nameWithType: CodeActivityMetadata.GetArgumentsWithReflection()\n  fullName: System.Activities.CodeActivityMetadata.GetArgumentsWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<RuntimeArgument>\n  nameWithType: Collection<RuntimeArgument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.RuntimeArgument>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.RuntimeArgument\n    name: RuntimeArgument\n    nameWithType: RuntimeArgument\n    fullName: RuntimeArgument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.CodeActivityMetadata.GetHashCode\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeActivityMetadata.GetHashCode()\n  fullName: System.Activities.CodeActivityMetadata.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.CodeActivityMetadata.HasViolations\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: HasViolations\n  nameWithType: CodeActivityMetadata.HasViolations\n  fullName: System.Activities.CodeActivityMetadata.HasViolations\n- uid: System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: op_Equality(CodeActivityMetadata,CodeActivityMetadata)\n  nameWithType: CodeActivityMetadata.op_Equality(CodeActivityMetadata,CodeActivityMetadata)\n  fullName: System.Activities.CodeActivityMetadata.op_Equality(CodeActivityMetadata,CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: op_Inequality(CodeActivityMetadata,CodeActivityMetadata)\n  nameWithType: CodeActivityMetadata.op_Inequality(CodeActivityMetadata,CodeActivityMetadata)\n  fullName: System.Activities.CodeActivityMetadata.op_Inequality(CodeActivityMetadata,CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata.RequireExtension(System.Type)\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: RequireExtension(Type)\n  nameWithType: CodeActivityMetadata.RequireExtension(Type)\n  fullName: System.Activities.CodeActivityMetadata.RequireExtension(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.CodeActivityMetadata.RequireExtension``1\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: RequireExtension()\n  nameWithType: CodeActivityMetadata.RequireExtension()\n  fullName: System.Activities.CodeActivityMetadata.RequireExtension()\n- uid: System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: SetArgumentsCollection(Collection<RuntimeArgument>)\n  nameWithType: CodeActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  fullName: System.Activities.CodeActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n- uid: System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: SetValidationErrorsCollection(Collection<ValidationError>)\n  nameWithType: CodeActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  fullName: System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: Collection<ValidationError>\n  nameWithType: Collection<ValidationError>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: Collection<System.Activities.Validation.ValidationError>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Validation.ValidationError\n    name: ValidationError\n    nameWithType: ValidationError\n    fullName: ValidationError\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.CodeActivityMetadata.AddArgument*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddArgument\n  nameWithType: CodeActivityMetadata.AddArgument\n- uid: System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider<T>*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddDefaultExtensionProvider<T>\n  nameWithType: CodeActivityMetadata.AddDefaultExtensionProvider<T>\n- uid: System.Activities.CodeActivityMetadata.AddValidationError*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: AddValidationError\n  nameWithType: CodeActivityMetadata.AddValidationError\n- uid: System.Activities.CodeActivityMetadata.Bind*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: Bind\n  nameWithType: CodeActivityMetadata.Bind\n- uid: System.Activities.CodeActivityMetadata.Environment*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: Environment\n  nameWithType: CodeActivityMetadata.Environment\n- uid: System.Activities.CodeActivityMetadata.Equals*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: Equals\n  nameWithType: CodeActivityMetadata.Equals\n- uid: System.Activities.CodeActivityMetadata.GetArgumentsWithReflection*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: GetArgumentsWithReflection\n  nameWithType: CodeActivityMetadata.GetArgumentsWithReflection\n- uid: System.Activities.CodeActivityMetadata.GetHashCode*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CodeActivityMetadata.GetHashCode\n- uid: System.Activities.CodeActivityMetadata.HasViolations*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: HasViolations\n  nameWithType: CodeActivityMetadata.HasViolations\n- uid: System.Activities.CodeActivityMetadata.op_Equality*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: op_Equality\n  nameWithType: CodeActivityMetadata.op_Equality\n- uid: System.Activities.CodeActivityMetadata.op_Inequality*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CodeActivityMetadata.op_Inequality\n- uid: System.Activities.CodeActivityMetadata.RequireExtension*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: RequireExtension\n  nameWithType: CodeActivityMetadata.RequireExtension\n- uid: System.Activities.CodeActivityMetadata.RequireExtension<T>*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: RequireExtension<T>\n  nameWithType: CodeActivityMetadata.RequireExtension<T>\n- uid: System.Activities.CodeActivityMetadata.SetArgumentsCollection*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: SetArgumentsCollection\n  nameWithType: CodeActivityMetadata.SetArgumentsCollection\n- uid: System.Activities.CodeActivityMetadata.SetValidationErrorsCollection*\n  parent: System.Activities.CodeActivityMetadata\n  isExternal: false\n  name: SetValidationErrorsCollection\n  nameWithType: CodeActivityMetadata.SetValidationErrorsCollection\n"}