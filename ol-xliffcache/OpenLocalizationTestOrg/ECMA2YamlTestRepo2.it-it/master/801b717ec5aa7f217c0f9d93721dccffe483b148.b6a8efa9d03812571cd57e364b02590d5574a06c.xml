{"nodes":[{"pos":[1809,2001],"content":"Defines a set of utility methods that convert data from one type to another. Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines a set of utility methods that convert data from one type to another. Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger.","pos":[0,192],"nodes":[{"content":"Defines a set of utility methods that convert data from one type to another.","pos":[0,76]},{"content":"Includes methods that convert values to &lt;xref:System.String&gt; objects so that they can be displayed by the debugger.","pos":[77,192],"source":" Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger."}]}]},{"pos":[2668,2774],"content":"When implemented in a class, converts the specified <xref:System.Boolean> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Boolean&gt; value to a &lt;xref:System.String&gt;.","pos":[0,106],"source":"When implemented in a class, converts the specified <xref:System.Boolean> value to a <xref:System.String>."}]},{"pos":[2920,2941],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[2999,3055],"content":"The literal string \"true\" or the literal string \"false\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The literal string \"true\" or the literal string \"false\".","pos":[0,56]}]},{"pos":[3592,3695],"content":"When implemented in a class, converts the specified <xref:System.Byte> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Byte&gt; value to a &lt;xref:System.String&gt;.","pos":[0,103],"source":"When implemented in a class, converts the specified <xref:System.Byte> value to a <xref:System.String>."}]},{"pos":[3846,3867],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[3928,3991],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[4049,4124],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[4654,4869],"content":"When implemented in a class, creates a string representation of the specified <xref:System.Double>. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, creates a string representation of the specified <xref:System.Double>. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.","pos":[0,215],"nodes":[{"content":"When implemented in a class, creates a string representation of the specified &lt;xref:System.Double&gt;.","pos":[0,99],"source":"When implemented in a class, creates a string representation of the specified <xref:System.Double>."},{"content":"The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.","pos":[100,215]}]}]},{"pos":[5019,5040],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[5098,5146],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[5662,5767],"content":"When implemented in a class, converts the specified <xref:System.Double> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Double&gt; value to a &lt;xref:System.String&gt;.","pos":[0,105],"source":"When implemented in a class, converts the specified <xref:System.Double> value to a <xref:System.String>."}]},{"pos":[5913,5934],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[5992,6040],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[6686,6926],"content":"When implemented in a class, gets an error message that is created from the specified &lt;xref:System.Exception.HResult*&gt; and the &lt;xref:System.Globalization.CultureInfo&gt; of the specified <bpt id=\"p1\">&lt;xref href=\"Microsoft.JScript.Vsa.IJSVsaEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"When implemented in a class, gets an error message that is created from the specified <xref:System.Exception.HResult*> and the <xref:System.Globalization.CultureInfo> of the specified <xref href=\"Microsoft.JScript.Vsa.IJSVsaEngine\"></xref>."},{"pos":[7111,7134],"content":"The HRESULT error code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HRESULT error code.","pos":[0,23]}]},{"pos":[7218,7254],"content":"A reference to the scripting engine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]},{"pos":[7312,7373],"content":"A localized string that contains information about the error.","needQuote":true,"needEscape":true,"nodes":[{"content":"A localized string that contains information about the error.","pos":[0,61]}]},{"pos":[7921,8033],"content":"When implemented in a class, creates a managed object that has the specified primitive <xref:System.Char> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, creates a managed object that has the specified primitive &lt;xref:System.Char&gt; value.","pos":[0,112],"source":"When implemented in a class, creates a managed object that has the specified primitive <xref:System.Char> value."}]},{"pos":[8177,8198],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[8256,8338],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> converted to a <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> and then an <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>i</code> converted to a <xref:System.Char> and then an <xref:System.Object>."},{"pos":[8886,8999],"content":"When implemented in a class, creates a managed object that has the specified primitive <xref:System.Int64> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, creates a managed object that has the specified primitive &lt;xref:System.Int64&gt; value.","pos":[0,113],"source":"When implemented in a class, creates a managed object that has the specified primitive <xref:System.Int64> value."}]},{"pos":[9141,9162],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[9220,9272],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>i</code> converted to an <xref:System.Object>."},{"pos":[9801,9894],"content":"When implemented in a class, creates a managed object that has the specified primitive value.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, creates a managed object that has the specified primitive value.","pos":[0,93]}]},{"pos":[10042,10063],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[10121,10184],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to a managed <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to a managed <xref:System.Object>."},{"pos":[10738,10852],"content":"When implemented in a class, creates a managed object that has the specified primitive <xref:System.UInt64> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, creates a managed object that has the specified primitive &lt;xref:System.UInt64&gt; value.","pos":[0,114],"source":"When implemented in a class, creates a managed object that has the specified primitive <xref:System.UInt64> value."}]},{"pos":[10997,11018],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[11076,11128],"content":"<ph id=\"ph1\">&lt;code&gt;i&lt;/code&gt;</ph> converted to an <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>i</code> converted to an <xref:System.Object>."},{"pos":[11682,11786],"content":"When implemented in a class, converts the specified <xref:System.Int16> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Int16&gt; value to a &lt;xref:System.String&gt;.","pos":[0,104],"source":"When implemented in a class, converts the specified <xref:System.Int16> value to a <xref:System.String>."}]},{"pos":[11940,11961],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[12022,12085],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[12143,12218],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[12763,12867],"content":"When implemented in a class, converts the specified <xref:System.Int32> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Int32&gt; value to a &lt;xref:System.String&gt;.","pos":[0,104],"source":"When implemented in a class, converts the specified <xref:System.Int32> value to a <xref:System.String>."}]},{"pos":[13019,13040],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[13101,13164],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[13222,13297],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[13842,13946],"content":"When implemented in a class, converts the specified <xref:System.Int64> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Int64&gt; value to a &lt;xref:System.String&gt;.","pos":[0,104],"source":"When implemented in a class, converts the specified <xref:System.Int64> value to a <xref:System.String>."}]},{"pos":[14099,14120],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[14181,14244],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[14302,14377],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[15050,15159],"content":"When implemented in a class, converts the specified regular expression information to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified regular expression information to a &lt;xref:System.String&gt;.","pos":[0,109],"source":"When implemented in a class, converts the specified regular expression information to a <xref:System.String>."}]},{"pos":[15353,15393],"content":"The regular expression pattern to match.","needQuote":true,"needEscape":true,"nodes":[{"content":"The regular expression pattern to match.","pos":[0,40]}]},{"pos":[15461,15630],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use case-insensitive matching; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use case-insensitive matching; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15694,15852],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a global match; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a global match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15919,16080],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use a multiline match; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a multiline match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16138,16202],"content":"The string representation of the regular expression information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation of the regular expression information.","pos":[0,64]}]},{"pos":[16748,16852],"content":"When implemented in a class, converts the specified <xref:System.SByte> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.SByte&gt; value to a &lt;xref:System.String&gt;.","pos":[0,104],"source":"When implemented in a class, converts the specified <xref:System.SByte> value to a <xref:System.String>."}]},{"pos":[17006,17027],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[17088,17151],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[17209,17284],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[17795,17900],"content":"When implemented in a class, converts the specified <xref:System.Single> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.Single&gt; value to a &lt;xref:System.String&gt;.","pos":[0,105],"source":"When implemented in a class, converts the specified <xref:System.Single> value to a <xref:System.String>."}]},{"pos":[18045,18066],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[18124,18172],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code>."},{"pos":[18699,18859],"content":"When implemented in a class, converts the specified <xref:System.String> to a <xref:System.String> that contains escape characters for non-printable characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.String&gt; to a &lt;xref:System.String&gt; that contains escape characters for non-printable characters.","pos":[0,160],"source":"When implemented in a class, converts the specified <xref:System.String> to a <xref:System.String> that contains escape characters for non-printable characters."}]},{"pos":[19010,19031],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[19089,19170],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> that contains escape characters.","needQuote":true,"needEscape":true,"source":"The string representation of <code>source</code> that contains escape characters."},{"pos":[19783,19912],"content":"When implemented in a class, converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified value to the specified &lt;xref:System.TypeCode&gt;, optionally allowing data loss.","pos":[0,129],"source":"When implemented in a class, converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss."}]},{"pos":[20100,20135],"content":"The value to convert to a new type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert to a new type.","pos":[0,35]}]},{"pos":[20202,20233],"content":"The type to convert <ph id=\"ph1\">`value`</ph> to.","needQuote":true,"needEscape":true,"source":"The type to convert `value` to."},{"pos":[20310,20465],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to allow data loss; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20523,20586],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> converted to the <ph id=\"ph2\">&lt;code&gt;typeCode&lt;/code&gt;</ph> type.","needQuote":true,"needEscape":true,"source":"<code>value</code> converted to the <code>typeCode</code> type."},{"pos":[21139,21244],"content":"When implemented in a class, converts the specified <xref:System.UInt16> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.UInt16&gt; value to a &lt;xref:System.String&gt;.","pos":[0,105],"source":"When implemented in a class, converts the specified <xref:System.UInt16> value to a <xref:System.String>."}]},{"pos":[21401,21422],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[21483,21546],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[21604,21679],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[22235,22340],"content":"When implemented in a class, converts the specified <xref:System.UInt32> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.UInt32&gt; value to a &lt;xref:System.String&gt;.","pos":[0,105],"source":"When implemented in a class, converts the specified <xref:System.UInt32> value to a <xref:System.String>."}]},{"pos":[22495,22516],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[22577,22640],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[22698,22773],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."},{"pos":[23329,23434],"content":"When implemented in a class, converts the specified <xref:System.UInt64> value to a <xref:System.String>.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a class, converts the specified &lt;xref:System.UInt64&gt; value to a &lt;xref:System.String&gt;.","pos":[0,105],"source":"When implemented in a class, converts the specified <xref:System.UInt64> value to a <xref:System.String>."}]},{"pos":[23590,23611],"content":"The value to convert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value to convert.","pos":[0,21]}]},{"pos":[23672,23735],"content":"The base of the return value. The base must be 2, 8, 10, or 16.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base of the return value. The base must be 2, 8, 10, or 16.","pos":[0,63],"nodes":[{"content":"The base of the return value.","pos":[0,29]},{"content":"The base must be 2, 8, 10, or 16.","pos":[30,63]}]}]},{"pos":[23793,23868],"content":"The string representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">radix</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The string representation of <code>value</code> in base <code>radix</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.IDebugConvert\n  id: IDebugConvert\n  children:\n  - Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)\n  - Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)\n  - Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)\n  - Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)\n  - Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  - Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)\n  - Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)\n  - Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)\n  - Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)\n  - Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)\n  - Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)\n  - Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)\n  - Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  - Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)\n  - Microsoft.JScript.IDebugConvert.SingleToString(System.Single)\n  - Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)\n  - Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  - Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)\n  - Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)\n  - Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)\n  langs:\n  - csharp\n  name: IDebugConvert\n  nameWithType: IDebugConvert\n  fullName: Microsoft.JScript.IDebugConvert\n  type: Interface\n  summary: Defines a set of utility methods that convert data from one type to another. Includes methods that convert values to <xref:System.String> objects so that they can be displayed by the debugger.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"AA51516D-C0F2-49fe-9D38-61D20456904C\")]\n\n      public interface IDebugConvert\n  implements: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)\n  id: BooleanToString(System.Boolean)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: BooleanToString(Boolean)\n  nameWithType: IDebugConvert.BooleanToString(Boolean)\n  fullName: Microsoft.JScript.IDebugConvert.BooleanToString(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Boolean> value to a <xref:System.String>.\n  syntax:\n    content: public string BooleanToString (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The literal string \"true\" or the literal string \"false\".\n  overload: Microsoft.JScript.IDebugConvert.BooleanToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)\n  id: ByteToString(System.Byte,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: ByteToString(Byte,Int32)\n  nameWithType: IDebugConvert.ByteToString(Byte,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.ByteToString(Byte,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Byte> value to a <xref:System.String>.\n  syntax:\n    content: public string ByteToString (byte value, int radix);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.ByteToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)\n  id: DoubleToDateString(System.Double)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: DoubleToDateString(Double)\n  nameWithType: IDebugConvert.DoubleToDateString(Double)\n  fullName: Microsoft.JScript.IDebugConvert.DoubleToDateString(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, creates a string representation of the specified <xref:System.Double>. The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.\n  syntax:\n    content: public string DoubleToDateString (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.IDebugConvert.DoubleToDateString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)\n  id: DoubleToString(System.Double)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: DoubleToString(Double)\n  nameWithType: IDebugConvert.DoubleToString(Double)\n  fullName: Microsoft.JScript.IDebugConvert.DoubleToString(Double)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Double> value to a <xref:System.String>.\n  syntax:\n    content: public string DoubleToString (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.IDebugConvert.DoubleToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  id: GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: GetErrorMessageForHR(Int32,IJSVsaEngine)\n  nameWithType: IDebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n  fullName: Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, gets an error message that is created from the specified <xref:System.Exception.HResult*> and the <xref:System.Globalization.CultureInfo> of the specified <xref href=\"Microsoft.JScript.Vsa.IJSVsaEngine\"></xref>.\n  syntax:\n    content: public string GetErrorMessageForHR (int hr, Microsoft.JScript.Vsa.IJSVsaEngine engine);\n    parameters:\n    - id: hr\n      type: System.Int32\n      description: The HRESULT error code.\n    - id: engine\n      type: Microsoft.JScript.Vsa.IJSVsaEngine\n      description: A reference to the scripting engine.\n    return:\n      type: System.String\n      description: A localized string that contains information about the error.\n  overload: Microsoft.JScript.IDebugConvert.GetErrorMessageForHR*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)\n  id: GetManagedCharObject(System.UInt16)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: GetManagedCharObject(UInt16)\n  nameWithType: IDebugConvert.GetManagedCharObject(UInt16)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedCharObject(UInt16)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, creates a managed object that has the specified primitive <xref:System.Char> value.\n  syntax:\n    content: public object GetManagedCharObject (ushort i);\n    parameters:\n    - id: i\n      type: System.UInt16\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>i</code> converted to a <xref:System.Char> and then an <xref:System.Object>.\n  overload: Microsoft.JScript.IDebugConvert.GetManagedCharObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)\n  id: GetManagedInt64Object(System.Int64)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: GetManagedInt64Object(Int64)\n  nameWithType: IDebugConvert.GetManagedInt64Object(Int64)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedInt64Object(Int64)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, creates a managed object that has the specified primitive <xref:System.Int64> value.\n  syntax:\n    content: public object GetManagedInt64Object (long i);\n    parameters:\n    - id: i\n      type: System.Int64\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>i</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.IDebugConvert.GetManagedInt64Object*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)\n  id: GetManagedObject(System.Object)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: GetManagedObject(Object)\n  nameWithType: IDebugConvert.GetManagedObject(Object)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedObject(Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, creates a managed object that has the specified primitive value.\n  syntax:\n    content: public object GetManagedObject (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to a managed <xref:System.Object>.\n  overload: Microsoft.JScript.IDebugConvert.GetManagedObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)\n  id: GetManagedUInt64Object(System.UInt64)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: GetManagedUInt64Object(UInt64)\n  nameWithType: IDebugConvert.GetManagedUInt64Object(UInt64)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(UInt64)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, creates a managed object that has the specified primitive <xref:System.UInt64> value.\n  syntax:\n    content: public object GetManagedUInt64Object (ulong i);\n    parameters:\n    - id: i\n      type: System.UInt64\n      description: The value to convert.\n    return:\n      type: System.Object\n      description: <code>i</code> converted to an <xref:System.Object>.\n  overload: Microsoft.JScript.IDebugConvert.GetManagedUInt64Object*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)\n  id: Int16ToString(System.Int16,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: Int16ToString(Int16,Int32)\n  nameWithType: IDebugConvert.Int16ToString(Int16,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.Int16ToString(Int16,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Int16> value to a <xref:System.String>.\n  syntax:\n    content: public string Int16ToString (short value, int radix);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.Int16ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)\n  id: Int32ToString(System.Int32,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: Int32ToString(Int32,Int32)\n  nameWithType: IDebugConvert.Int32ToString(Int32,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.Int32ToString(Int32,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Int32> value to a <xref:System.String>.\n  syntax:\n    content: public string Int32ToString (int value, int radix);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.Int32ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)\n  id: Int64ToString(System.Int64,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: Int64ToString(Int64,Int32)\n  nameWithType: IDebugConvert.Int64ToString(Int64,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.Int64ToString(Int64,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Int64> value to a <xref:System.String>.\n  syntax:\n    content: public string Int64ToString (long value, int radix);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.Int64ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  id: RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: RegexpToString(String,Boolean,Boolean,Boolean)\n  nameWithType: IDebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n  fullName: Microsoft.JScript.IDebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified regular expression information to a <xref:System.String>.\n  syntax:\n    content: public string RegexpToString (string source, bool ignoreCase, bool global, bool multiline);\n    parameters:\n    - id: source\n      type: System.String\n      description: The regular expression pattern to match.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use case-insensitive matching; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: global\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a global match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: multiline\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to use a multiline match; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.String\n      description: The string representation of the regular expression information.\n  overload: Microsoft.JScript.IDebugConvert.RegexpToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)\n  id: SByteToString(System.SByte,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: SByteToString(SByte,Int32)\n  nameWithType: IDebugConvert.SByteToString(SByte,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.SByteToString(SByte,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.SByte> value to a <xref:System.String>.\n  syntax:\n    content: public string SByteToString (sbyte value, int radix);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.SByteToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.SingleToString(System.Single)\n  id: SingleToString(System.Single)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: SingleToString(Single)\n  nameWithType: IDebugConvert.SingleToString(Single)\n  fullName: Microsoft.JScript.IDebugConvert.SingleToString(Single)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.Single> value to a <xref:System.String>.\n  syntax:\n    content: public string SingleToString (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code>.\n  overload: Microsoft.JScript.IDebugConvert.SingleToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)\n  id: StringToPrintable(System.String)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: StringToPrintable(String)\n  nameWithType: IDebugConvert.StringToPrintable(String)\n  fullName: Microsoft.JScript.IDebugConvert.StringToPrintable(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.String> to a <xref:System.String> that contains escape characters for non-printable characters.\n  syntax:\n    content: public string StringToPrintable (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: The value to convert.\n    return:\n      type: System.String\n      description: The string representation of <code>source</code> that contains escape characters.\n  overload: Microsoft.JScript.IDebugConvert.StringToPrintable*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  id: ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: ToPrimitive(Object,TypeCode,Boolean)\n  nameWithType: IDebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n  fullName: Microsoft.JScript.IDebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified value to the specified <xref:System.TypeCode>, optionally allowing data loss.\n  syntax:\n    content: public object ToPrimitive (object value, TypeCode typeCode, bool truncationPermitted);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value to convert to a new type.\n    - id: typeCode\n      type: System.TypeCode\n      description: The type to convert `value` to.\n    - id: truncationPermitted\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to allow data loss; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: <code>value</code> converted to the <code>typeCode</code> type.\n  overload: Microsoft.JScript.IDebugConvert.ToPrimitive*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)\n  id: UInt16ToString(System.UInt16,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: UInt16ToString(UInt16,Int32)\n  nameWithType: IDebugConvert.UInt16ToString(UInt16,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.UInt16ToString(UInt16,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.UInt16> value to a <xref:System.String>.\n  syntax:\n    content: public string UInt16ToString (ushort value, int radix);\n    parameters:\n    - id: value\n      type: System.UInt16\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.UInt16ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)\n  id: UInt32ToString(System.UInt32,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: UInt32ToString(UInt32,Int32)\n  nameWithType: IDebugConvert.UInt32ToString(UInt32,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.UInt32ToString(UInt32,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.UInt32> value to a <xref:System.String>.\n  syntax:\n    content: public string UInt32ToString (uint value, int radix);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.UInt32ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)\n  id: UInt64ToString(System.UInt64,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  langs:\n  - csharp\n  name: UInt64ToString(UInt64,Int32)\n  nameWithType: IDebugConvert.UInt64ToString(UInt64,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.UInt64ToString(UInt64,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: When implemented in a class, converts the specified <xref:System.UInt64> value to a <xref:System.String>.\n  syntax:\n    content: public string UInt64ToString (ulong value, int radix);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: The value to convert.\n    - id: radix\n      type: System.Int32\n      description: The base of the return value. The base must be 2, 8, 10, or 16.\n    return:\n      type: System.String\n      description: The string representation of <code>value</code> in base <code>radix</code>.\n  overload: Microsoft.JScript.IDebugConvert.UInt64ToString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: BooleanToString(Boolean)\n  nameWithType: IDebugConvert.BooleanToString(Boolean)\n  fullName: Microsoft.JScript.IDebugConvert.BooleanToString(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: ByteToString(Byte,Int32)\n  nameWithType: IDebugConvert.ByteToString(Byte,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.ByteToString(Byte,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: DoubleToDateString(Double)\n  nameWithType: IDebugConvert.DoubleToDateString(Double)\n  fullName: Microsoft.JScript.IDebugConvert.DoubleToDateString(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: DoubleToString(Double)\n  nameWithType: IDebugConvert.DoubleToString(Double)\n  fullName: Microsoft.JScript.IDebugConvert.DoubleToString(Double)\n- uid: Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetErrorMessageForHR(Int32,IJSVsaEngine)\n  nameWithType: IDebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n  fullName: Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(Int32,IJSVsaEngine)\n- uid: Microsoft.JScript.Vsa.IJSVsaEngine\n  parent: Microsoft.JScript.Vsa\n  isExternal: false\n  name: IJSVsaEngine\n  nameWithType: IJSVsaEngine\n  fullName: Microsoft.JScript.Vsa.IJSVsaEngine\n- uid: Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedCharObject(UInt16)\n  nameWithType: IDebugConvert.GetManagedCharObject(UInt16)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedCharObject(UInt16)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.UInt16\n  parent: System\n  isExternal: true\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedInt64Object(Int64)\n  nameWithType: IDebugConvert.GetManagedInt64Object(Int64)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedInt64Object(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedObject(Object)\n  nameWithType: IDebugConvert.GetManagedObject(Object)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedObject(Object)\n- uid: Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedUInt64Object(UInt64)\n  nameWithType: IDebugConvert.GetManagedUInt64Object(UInt64)\n  fullName: Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: true\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: Int16ToString(Int16,Int32)\n  nameWithType: IDebugConvert.Int16ToString(Int16,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.Int16ToString(Int16,Int32)\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: Int32ToString(Int32,Int32)\n  nameWithType: IDebugConvert.Int32ToString(Int32,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.Int32ToString(Int32,Int32)\n- uid: Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: Int64ToString(Int64,Int32)\n  nameWithType: IDebugConvert.Int64ToString(Int64,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.Int64ToString(Int64,Int32)\n- uid: Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: RegexpToString(String,Boolean,Boolean,Boolean)\n  nameWithType: IDebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n  fullName: Microsoft.JScript.IDebugConvert.RegexpToString(String,Boolean,Boolean,Boolean)\n- uid: Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: SByteToString(SByte,Int32)\n  nameWithType: IDebugConvert.SByteToString(SByte,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.SByteToString(SByte,Int32)\n- uid: System.SByte\n  parent: System\n  isExternal: true\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: Microsoft.JScript.IDebugConvert.SingleToString(System.Single)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: SingleToString(Single)\n  nameWithType: IDebugConvert.SingleToString(Single)\n  fullName: Microsoft.JScript.IDebugConvert.SingleToString(Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: StringToPrintable(String)\n  nameWithType: IDebugConvert.StringToPrintable(String)\n  fullName: Microsoft.JScript.IDebugConvert.StringToPrintable(String)\n- uid: Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: ToPrimitive(Object,TypeCode,Boolean)\n  nameWithType: IDebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n  fullName: Microsoft.JScript.IDebugConvert.ToPrimitive(Object,TypeCode,Boolean)\n- uid: System.TypeCode\n  parent: System\n  isExternal: true\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: UInt16ToString(UInt16,Int32)\n  nameWithType: IDebugConvert.UInt16ToString(UInt16,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.UInt16ToString(UInt16,Int32)\n- uid: Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: UInt32ToString(UInt32,Int32)\n  nameWithType: IDebugConvert.UInt32ToString(UInt32,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.UInt32ToString(UInt32,Int32)\n- uid: System.UInt32\n  parent: System\n  isExternal: true\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: UInt64ToString(UInt64,Int32)\n  nameWithType: IDebugConvert.UInt64ToString(UInt64,Int32)\n  fullName: Microsoft.JScript.IDebugConvert.UInt64ToString(UInt64,Int32)\n- uid: Microsoft.JScript.IDebugConvert.BooleanToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: BooleanToString\n  nameWithType: IDebugConvert.BooleanToString\n- uid: Microsoft.JScript.IDebugConvert.ByteToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: ByteToString\n  nameWithType: IDebugConvert.ByteToString\n- uid: Microsoft.JScript.IDebugConvert.DoubleToDateString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: DoubleToDateString\n  nameWithType: IDebugConvert.DoubleToDateString\n- uid: Microsoft.JScript.IDebugConvert.DoubleToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: DoubleToString\n  nameWithType: IDebugConvert.DoubleToString\n- uid: Microsoft.JScript.IDebugConvert.GetErrorMessageForHR*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetErrorMessageForHR\n  nameWithType: IDebugConvert.GetErrorMessageForHR\n- uid: Microsoft.JScript.IDebugConvert.GetManagedCharObject*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedCharObject\n  nameWithType: IDebugConvert.GetManagedCharObject\n- uid: Microsoft.JScript.IDebugConvert.GetManagedInt64Object*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedInt64Object\n  nameWithType: IDebugConvert.GetManagedInt64Object\n- uid: Microsoft.JScript.IDebugConvert.GetManagedObject*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedObject\n  nameWithType: IDebugConvert.GetManagedObject\n- uid: Microsoft.JScript.IDebugConvert.GetManagedUInt64Object*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: GetManagedUInt64Object\n  nameWithType: IDebugConvert.GetManagedUInt64Object\n- uid: Microsoft.JScript.IDebugConvert.Int16ToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: Int16ToString\n  nameWithType: IDebugConvert.Int16ToString\n- uid: Microsoft.JScript.IDebugConvert.Int32ToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: Int32ToString\n  nameWithType: IDebugConvert.Int32ToString\n- uid: Microsoft.JScript.IDebugConvert.Int64ToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: Int64ToString\n  nameWithType: IDebugConvert.Int64ToString\n- uid: Microsoft.JScript.IDebugConvert.RegexpToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: RegexpToString\n  nameWithType: IDebugConvert.RegexpToString\n- uid: Microsoft.JScript.IDebugConvert.SByteToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: SByteToString\n  nameWithType: IDebugConvert.SByteToString\n- uid: Microsoft.JScript.IDebugConvert.SingleToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: SingleToString\n  nameWithType: IDebugConvert.SingleToString\n- uid: Microsoft.JScript.IDebugConvert.StringToPrintable*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: StringToPrintable\n  nameWithType: IDebugConvert.StringToPrintable\n- uid: Microsoft.JScript.IDebugConvert.ToPrimitive*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: ToPrimitive\n  nameWithType: IDebugConvert.ToPrimitive\n- uid: Microsoft.JScript.IDebugConvert.UInt16ToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: UInt16ToString\n  nameWithType: IDebugConvert.UInt16ToString\n- uid: Microsoft.JScript.IDebugConvert.UInt32ToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: UInt32ToString\n  nameWithType: IDebugConvert.UInt32ToString\n- uid: Microsoft.JScript.IDebugConvert.UInt64ToString*\n  parent: Microsoft.JScript.IDebugConvert\n  isExternal: false\n  name: UInt64ToString\n  nameWithType: IDebugConvert.UInt64ToString\n"}