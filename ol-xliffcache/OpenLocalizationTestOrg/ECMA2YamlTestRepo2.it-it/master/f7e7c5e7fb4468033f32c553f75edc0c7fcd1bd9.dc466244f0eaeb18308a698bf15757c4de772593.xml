{"nodes":[{"pos":[802,919],"content":"Verifies a Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) PKCS#1 v1.5 signature.","needQuote":true,"needEscape":true,"source":"Verifies a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS#1 v1.5 signature."},{"pos":[2285,2399],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class."},{"pos":[3631,3768],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified key.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class with the specified key."},{"pos":[3989,4108],"content":"The instance of Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) that holds the key.","needQuote":true,"needEscape":true,"source":"The instance of Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key."},{"pos":[4297,4378],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4898,5041],"content":"Specifies the hash algorithm for the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) signature deformatter.","needQuote":true,"needEscape":true,"source":"Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter."},{"pos":[5619,5687],"content":"The name of the hash algorithm to use for the signature deformatter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the hash algorithm to use for the signature deformatter.","pos":[0,68]}]},{"pos":[5971,6096],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">strName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not map to the <bpt id=\"p2\">&lt;xref href=\"System.Security.Cryptography.SHA1\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> hash algorithm.","needQuote":true,"needEscape":true,"source":"The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm."},{"pos":[6675,6818],"content":"Specifies the key to be used for the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) signature deformatter.","needQuote":true,"needEscape":true,"source":"Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter."},{"pos":[7036,7125],"content":"The instance of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that holds the key.","needQuote":true,"needEscape":true,"source":"The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key."},{"pos":[7315,7396],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7960,8079],"content":"Verifies the Digital Signature Algorithm (<bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) signature on the data.","needQuote":true,"needEscape":true,"source":"Verifies the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature on the data."},{"pos":[8677,8713],"content":"The data signed with <ph id=\"ph1\">`rgbSignature`</ph>.","needQuote":true,"needEscape":true,"source":"The data signed with `rgbSignature`."},{"pos":[8782,8825],"content":"The signature to be verified for <ph id=\"ph1\">`rgbHash`</ph>.","needQuote":true,"needEscape":true,"source":"The signature to be verified for `rgbHash`."},{"pos":[8884,9059],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the signature is valid for the data; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature is valid for the data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9259,9468],"content":"<code>rgbHash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>rgbSignature</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;rgbHash&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"<code>rgbHash</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;rgbSignature&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[92,193],"source":"       -or-       <code>rgbSignature</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9656,9679],"content":"The DSA key is missing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DSA key is missing.","pos":[0,23]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DSASignatureDeformatter\n  id: DSASignatureDeformatter\n  children:\n  - System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  - System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  langs:\n  - csharp\n  name: DSASignatureDeformatter\n  nameWithType: DSASignatureDeformatter\n  fullName: System.Security.Cryptography.DSASignatureDeformatter\n  type: Class\n  summary: Verifies a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS#1 v1.5 signature.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/t-system.security.crypto_51_1.cs)]\n     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/t-system.security.crypto_51_1.cpp)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/t-system.security.crypto_51_1.vb)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DSASignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter\n  implements: []\n  inheritedMembers:\n  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: DSASignatureDeformatter()\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/m-system.security.crypto_102_1.cs)]\n     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/m-system.security.crypto_102_1.cpp)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/m-system.security.crypto_102_1.vb)]\n  syntax:\n    content: public DSASignatureDeformatter ();\n    parameters: []\n  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: DSASignatureDeformatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureDeformatter\"></xref> class with the specified key.\n  syntax:\n    content: public DSASignatureDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/d7721c10-6dcf-468e-8cd2-_1.cs)]\n     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/d7721c10-6dcf-468e-8cd2-_1.cpp)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/d7721c10-6dcf-468e-8cd2-_1.vb)]\n  syntax:\n    content: public override void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: The name of the hash algorithm to use for the signature deformatter.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature deformatter.\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.SetKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  id: VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  langs:\n  - csharp\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  summary: Verifies the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature on the data.\n  remarks: ''\n  example:\n  - >-\n    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/19d138e4-9862-459e-90a1-_1.cs)]\n     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/19d138e4-9862-459e-90a1-_1.cpp)]\n     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/19d138e4-9862-459e-90a1-_1.vb)]\n  syntax:\n    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: The data signed with `rgbSignature`.\n    - id: rgbSignature\n      type: System.Byte[]\n      description: The signature to be verified for `rgbHash`.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the signature is valid for the data; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>rgbHash</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>rgbSignature</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The DSA key is missing.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  isExternal: false\n  name: System.Security.Cryptography.AsymmetricSignatureDeformatter\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter()\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter()\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(Byte[],Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: DSASignatureDeformatter\n  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetHashAlgorithm\n  nameWithType: DSASignatureDeformatter.SetHashAlgorithm\n- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: SetKey\n  nameWithType: DSASignatureDeformatter.SetKey\n- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*\n  parent: System.Security.Cryptography.DSASignatureDeformatter\n  isExternal: false\n  name: VerifySignature\n  nameWithType: DSASignatureDeformatter.VerifySignature\n"}