{"nodes":[{"pos":[721,838],"content":"Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.","pos":[0,117]}]},{"pos":[851,2648],"content":"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).       This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier. Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their ComponentResourceKey.       There are two ways to define a ComponentResourceKey.       If you want an easily accessible key, you can define a static property on your control class code that returns a ComponentResourceKey, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>. The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one. You can also define a named resource part within a larger control style or template to expose a customization entry point. This is particularly useful if you are defining a theme resource dictionary for your control.       You can also use the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md) in verbose syntax directly to create a loose instance of the key. This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.      <a name=\"xamlTextUsage_ComponentResourceKey\"></a>    ## XAML Text Usage    See Remarks","needQuote":false,"needEscape":true,"nodes":[{"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id=\"p1\">[</bpt>ComponentResourceKey Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,166],"source":"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md)."},{"content":"This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.","pos":[173,300]},{"content":"Because you define or reference the type, you do not need to request a specific &lt;xref:System.Windows.ResourceDictionary&gt;, and more than one set of resources can exist in the assembly, each differentiated by the type of their ComponentResourceKey.","pos":[301,547],"source":" Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their ComponentResourceKey."},{"content":"There are two ways to define a ComponentResourceKey.","pos":[554,606]},{"content":"If you want an easily accessible key, you can define a static property on your control class code that returns a ComponentResourceKey, constructed with a &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; that exists in the external resource assembly, and a &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;.","pos":[613,944],"source":"       If you want an easily accessible key, you can define a static property on your control class code that returns a ComponentResourceKey, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>."},{"content":"The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.","pos":[945,1101]},{"content":"You can also define a named resource part within a larger control style or template to expose a customization entry point.","pos":[1102,1224]},{"content":"This is particularly useful if you are defining a theme resource dictionary for your control.","pos":[1225,1318]},{"content":"You can also use the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id=\"p1\">[</bpt>ComponentResourceKey Markup Extension<ept id=\"p1\">](../Topic/ComponentResourceKey%20Markup%20Extension.md)</ept> in verbose syntax directly to create a loose instance of the key.","pos":[1325,1572],"source":"       You can also use the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md) in verbose syntax directly to create a loose instance of the key."},{"content":"This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.","pos":[1573,1691]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks","pos":[1697,1783],"source":"<a name=\"xamlTextUsage_ComponentResourceKey\"></a>    ## XAML Text Usage    See Remarks"}]},{"pos":[3458,3555],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.ComponentResourceKey\"></xref> class."},{"pos":[3567,3970],"content":"The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization. The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) XAML usage in named parameter form.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default constructor is not generally used, because a &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt; value and &lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt; value are required for proper initialization.","pos":[0,236],"source":"The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization."},{"content":"The default constructor exists primarily to support <bpt id=\"p1\">[</bpt>ComponentResourceKey Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> XAML usage in named parameter form.","pos":[237,403],"source":" The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) XAML usage in named parameter form."}]},{"pos":[4617,4822],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> , specifying the &lt;xref:System.Type&gt; that defines the key, and an object to use as an additional resource identifier.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref href=\"System.Windows.ComponentResourceKey\"></xref> , specifying the <xref:System.Type> that defines the key, and an object to use as an additional resource identifier."},{"pos":[4835,5439],"content":"This constructor exist for two scenarios, with the first scenario being the most important:      -   Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class. This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.      -   Supports [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor exist for two scenarios, with the first scenario being the most important:      -   Supports creating a &lt;xref:System.Windows.ComponentResourceKey&gt; that is then exposed as a public static field on a custom control class.","pos":[0,236],"source":"This constructor exist for two scenarios, with the first scenario being the most important:      -   Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class."},{"content":"This simplifies a control's access to its own defined resources in the template through <ph id=\"ph1\">`{x:Static}`</ph> usages for template property values.","pos":[237,374],"source":" This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values."},{"content":"-   Supports <bpt id=\"p1\">[</bpt>ComponentResourceKey Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.","pos":[380,600],"source":"      -   Supports [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource."}]},{"pos":[6043,6082],"content":"The type that defines the resource key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that defines the resource key.","pos":[0,39]}]},{"pos":[6149,6308],"content":"A unique identifier to differentiate this <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> from others associated with the <ph id=\"ph1\">`typeInTargetAssembly`</ph> type.","needQuote":true,"needEscape":true,"source":"A unique identifier to differentiate this <xref href=\"System.Windows.ComponentResourceKey\"></xref> from others associated with the `typeInTargetAssembly` type."},{"pos":[6753,6871],"content":"Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.","pos":[0,118]}]},{"pos":[7026,7072],"content":"The retrieved assembly, as a reflection class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The retrieved assembly, as a reflection class.","pos":[0,46]}]},{"pos":[7562,7682],"content":"Determines whether the provided object is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the provided object is equal to the current <xref href=\"System.Windows.ComponentResourceKey\"></xref>."},{"pos":[7694,7918],"content":"Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).","needQuote":true,"needEscape":true,"nodes":[{"content":"Two keys are equal if they both have the same values for all their immediate settable properties (&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;, &lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;).","pos":[0,224],"source":"Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>)."}]},{"pos":[8055,8147],"content":"Object to compare with the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Object to compare with the current <xref href=\"System.Windows.ComponentResourceKey\"></xref>."},{"pos":[8206,8367],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the objects are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8832,8918],"content":"Returns a hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a hash code for this <xref href=\"System.Windows.ComponentResourceKey\"></xref>."},{"pos":[9053,9083],"content":"A signed 32-bit integer value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A signed 32-bit integer value.","pos":[0,30]}]},{"pos":[9544,9641],"content":"Gets or sets a unique identifier to differentiate this key from others associated with this type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a unique identifier to differentiate this key from others associated with this type.","pos":[0,97]}]},{"pos":[9654,10032],"content":"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).       Typically, the string used for a ResourceId value conforms to the [XamlName Grammar](~/add/includes/ajax-current-ext-md.md).      <a name=\"xamlTextUsage_2\"></a>    ## XAML Text Usage    See Remarks","needQuote":false,"needEscape":true,"nodes":[{"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id=\"p1\">[</bpt>ComponentResourceKey Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,166],"source":"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md)."},{"content":"Typically, the string used for a ResourceId value conforms to the <bpt id=\"p1\">[</bpt>XamlName Grammar<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[173,297],"source":"       Typically, the string used for a ResourceId value conforms to the [XamlName Grammar](~/add/includes/ajax-current-ext-md.md)."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_2\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks","pos":[303,370],"source":"<a name=\"xamlTextUsage_2\"></a>    ## XAML Text Usage    See Remarks"}]},{"pos":[10410,10458],"content":"A unique identifier. Typically this is a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A unique identifier. Typically this is a string.","pos":[0,48],"nodes":[{"content":"A unique identifier.","pos":[0,20]},{"content":"Typically this is a string.","pos":[21,48]}]}]},{"pos":[10912,11005],"content":"Gets the string representation of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.ComponentResourceKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the string representation of a <xref href=\"System.Windows.ComponentResourceKey\"></xref>."},{"pos":[11141,11167],"content":"The string representation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string representation.","pos":[0,26]}]},{"pos":[11675,11741],"content":"Gets or sets the <xref:System.Type> that defines the resource key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the &lt;xref:System.Type&gt; that defines the resource key.","pos":[0,66],"source":"Gets or sets the <xref:System.Type> that defines the resource key."}]},{"pos":[11754,12487],"content":"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).       The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type. Custom components often define new types which must be in the assembly where the resource is located. Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.      <a name=\"xamlTextUsage_3\"></a>    ## XAML Text Usage    See Remarks","needQuote":false,"needEscape":true,"nodes":[{"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id=\"p1\">[</bpt>ComponentResourceKey Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[0,166],"source":"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md)."},{"content":"The &lt;xref:System.Windows.ComponentResourceKey&gt; element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.","pos":[173,384],"source":"       The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type."},{"content":"Custom components often define new types which must be in the assembly where the resource is located.","pos":[385,486]},{"content":"Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a &lt;xref:System.Windows.ComponentResourceKey&gt;.","pos":[487,652],"source":" Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_3\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    See Remarks","pos":[658,725],"source":"<a name=\"xamlTextUsage_3\"></a>    ## XAML Text Usage    See Remarks"}]},{"pos":[13227,13266],"content":"The type that defines the resource key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that defines the resource key.","pos":[0,39]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.ComponentResourceKey\n  id: ComponentResourceKey\n  children:\n  - System.Windows.ComponentResourceKey.#ctor\n  - System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)\n  - System.Windows.ComponentResourceKey.Assembly\n  - System.Windows.ComponentResourceKey.Equals(System.Object)\n  - System.Windows.ComponentResourceKey.GetHashCode\n  - System.Windows.ComponentResourceKey.ResourceId\n  - System.Windows.ComponentResourceKey.ToString\n  - System.Windows.ComponentResourceKey.TypeInTargetAssembly\n  langs:\n  - csharp\n  name: ComponentResourceKey\n  nameWithType: ComponentResourceKey\n  fullName: System.Windows.ComponentResourceKey\n  type: Class\n  summary: Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.\n  remarks: \"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).  \\n  \\n This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier. Because you define or reference the type, you do not need to request a specific <xref:System.Windows.ResourceDictionary>, and more than one set of resources can exist in the assembly, each differentiated by the type of their ComponentResourceKey.  \\n  \\n There are two ways to define a ComponentResourceKey.  \\n  \\n If you want an easily accessible key, you can define a static property on your control class code that returns a ComponentResourceKey, constructed with a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> that exists in the external resource assembly, and a <xref:System.Windows.ComponentResourceKey.ResourceId%2A>. The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one. You can also define a named resource part within a larger control style or template to expose a customization entry point. This is particularly useful if you are defining a theme resource dictionary for your control.  \\n  \\n You can also use the [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md) in verbose syntax directly to create a loose instance of the key. This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.  \\n  \\n<a name=\\\"xamlTextUsage_ComponentResourceKey\\\"></a>   \\n## XAML Text Usage  \\n See Remarks\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))]\n\n      public class ComponentResourceKey : System.Windows.ResourceKey\n  inheritance:\n  - System.Windows.Markup.MarkupExtension\n  - System.Windows.ResourceKey\n  implements: []\n  inheritedMembers:\n  - System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.#ctor\n  id: '#ctor'\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: ComponentResourceKey()\n  nameWithType: ComponentResourceKey.ComponentResourceKey()\n  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.ComponentResourceKey\"></xref> class.\n  remarks: The default constructor is not generally used, because a <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> value and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> value are required for proper initialization. The default constructor exists primarily to support [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) XAML usage in named parameter form.\n  syntax:\n    content: public ComponentResourceKey ();\n    parameters: []\n  overload: System.Windows.ComponentResourceKey.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)\n  id: '#ctor(System.Type,System.Object)'\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: ComponentResourceKey(Type,Object)\n  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)\n  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of a <xref href=\"System.Windows.ComponentResourceKey\"></xref> , specifying the <xref:System.Type> that defines the key, and an object to use as an additional resource identifier.\n  remarks: \"This constructor exist for two scenarios, with the first scenario being the most important:  \\n  \\n-   Supports creating a <xref:System.Windows.ComponentResourceKey> that is then exposed as a public static field on a custom control class. This simplifies a control's access to its own defined resources in the template through `{x:Static}` usages for template property values.  \\n  \\n-   Supports [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.\"\n  example:\n  - \"The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.  \\n  \\n [!code-cs[CorePseudocode#CRKCode](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#crkcode)]\\n [!code-vb[CorePseudocode#CRKCode](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#crkcode)]\"\n  syntax:\n    content: public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);\n    parameters:\n    - id: typeInTargetAssembly\n      type: System.Type\n      description: The type that defines the resource key.\n    - id: resourceId\n      type: System.Object\n      description: A unique identifier to differentiate this <xref href=\"System.Windows.ComponentResourceKey\"></xref> from others associated with the `typeInTargetAssembly` type.\n  overload: System.Windows.ComponentResourceKey.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.Assembly\n  id: Assembly\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: ComponentResourceKey.Assembly\n  fullName: System.Windows.ComponentResourceKey.Assembly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.\n  syntax:\n    content: public override System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: The retrieved assembly, as a reflection class.\n  overload: System.Windows.ComponentResourceKey.Assembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ComponentResourceKey.Equals(Object)\n  fullName: System.Windows.ComponentResourceKey.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether the provided object is equal to the current <xref href=\"System.Windows.ComponentResourceKey\"></xref>.\n  remarks: Two keys are equal if they both have the same values for all their immediate settable properties (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Object to compare with the current <xref href=\"System.Windows.ComponentResourceKey\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the objects are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.ComponentResourceKey.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ComponentResourceKey.GetHashCode()\n  fullName: System.Windows.ComponentResourceKey.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns a hash code for this <xref href=\"System.Windows.ComponentResourceKey\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A signed 32-bit integer value.\n  overload: System.Windows.ComponentResourceKey.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.ResourceId\n  id: ResourceId\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: ResourceId\n  nameWithType: ComponentResourceKey.ResourceId\n  fullName: System.Windows.ComponentResourceKey.ResourceId\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets a unique identifier to differentiate this key from others associated with this type.\n  remarks: \"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).  \\n  \\n Typically, the string used for a ResourceId value conforms to the [XamlName Grammar](~/add/includes/ajax-current-ext-md.md).  \\n  \\n<a name=\\\"xamlTextUsage_2\\\"></a>   \\n## XAML Text Usage  \\n See Remarks\"\n  example:\n  - \"The following example shows how to use the ResourceId to differentiate this key from others associated with this type.  \\n  \\n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]\"\n  syntax:\n    content: public object ResourceId { get; set; }\n    return:\n      type: System.Object\n      description: A unique identifier. Typically this is a string.\n  overload: System.Windows.ComponentResourceKey.ResourceId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.ToString\n  id: ToString\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ComponentResourceKey.ToString()\n  fullName: System.Windows.ComponentResourceKey.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the string representation of a <xref href=\"System.Windows.ComponentResourceKey\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation.\n  overload: System.Windows.ComponentResourceKey.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly\n  id: TypeInTargetAssembly\n  parent: System.Windows.ComponentResourceKey\n  langs:\n  - csharp\n  name: TypeInTargetAssembly\n  nameWithType: ComponentResourceKey.TypeInTargetAssembly\n  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the <xref:System.Type> that defines the resource key.\n  remarks: \"For [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] information, see [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).  \\n  \\n The <xref:System.Windows.ComponentResourceKey> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type. Custom components often define new types which must be in the assembly where the resource is located. Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <xref:System.Windows.ComponentResourceKey>.  \\n  \\n<a name=\\\"xamlTextUsage_3\\\"></a>   \\n## XAML Text Usage  \\n See Remarks\"\n  example:\n  - \"The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including TypeInTargetAssembly and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md). This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.  \\n  \\n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]\"\n  syntax:\n    content: public Type TypeInTargetAssembly { get; set; }\n    return:\n      type: System.Type\n      description: The type that defines the resource key.\n  overload: System.Windows.ComponentResourceKey.TypeInTargetAssembly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.ResourceKey\n  isExternal: false\n  name: System.Windows.ResourceKey\n- uid: System.Windows.ComponentResourceKey.#ctor\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ComponentResourceKey()\n  nameWithType: ComponentResourceKey.ComponentResourceKey()\n  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()\n- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ComponentResourceKey(Type,Object)\n  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)\n  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.ComponentResourceKey.Assembly\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: Assembly\n  nameWithType: ComponentResourceKey.Assembly\n  fullName: System.Windows.ComponentResourceKey.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Windows.ComponentResourceKey.Equals(System.Object)\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ComponentResourceKey.Equals(Object)\n  fullName: System.Windows.ComponentResourceKey.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.ComponentResourceKey.GetHashCode\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ComponentResourceKey.GetHashCode()\n  fullName: System.Windows.ComponentResourceKey.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.ComponentResourceKey.ResourceId\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ResourceId\n  nameWithType: ComponentResourceKey.ResourceId\n  fullName: System.Windows.ComponentResourceKey.ResourceId\n- uid: System.Windows.ComponentResourceKey.ToString\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ToString()\n  nameWithType: ComponentResourceKey.ToString()\n  fullName: System.Windows.ComponentResourceKey.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: TypeInTargetAssembly\n  nameWithType: ComponentResourceKey.TypeInTargetAssembly\n  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly\n- uid: System.Windows.ComponentResourceKey.#ctor*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ComponentResourceKey\n  nameWithType: ComponentResourceKey.ComponentResourceKey\n- uid: System.Windows.ComponentResourceKey.Assembly*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: Assembly\n  nameWithType: ComponentResourceKey.Assembly\n- uid: System.Windows.ComponentResourceKey.Equals*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: Equals\n  nameWithType: ComponentResourceKey.Equals\n- uid: System.Windows.ComponentResourceKey.GetHashCode*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ComponentResourceKey.GetHashCode\n- uid: System.Windows.ComponentResourceKey.ResourceId*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ResourceId\n  nameWithType: ComponentResourceKey.ResourceId\n- uid: System.Windows.ComponentResourceKey.ToString*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: ToString\n  nameWithType: ComponentResourceKey.ToString\n- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly*\n  parent: System.Windows.ComponentResourceKey\n  isExternal: false\n  name: TypeInTargetAssembly\n  nameWithType: ComponentResourceKey.TypeInTargetAssembly\n"}