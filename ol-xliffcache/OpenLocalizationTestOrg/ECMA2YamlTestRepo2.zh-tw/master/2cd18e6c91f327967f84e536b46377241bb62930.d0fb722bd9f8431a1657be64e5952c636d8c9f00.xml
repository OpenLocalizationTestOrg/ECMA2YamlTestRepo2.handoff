{"nodes":[{"pos":[866,975],"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ExtensionElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Represents a collection of <xref href=\"System.ServiceModel.Configuration.ExtensionElement\"></xref> instances."},{"pos":[8253,8375],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref> class."},{"pos":[9168,9286],"content":"Adds a configuration element to the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds a configuration element to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref>."},{"pos":[9298,9675],"content":"When adding, an element is considered a duplicate only if the keys are identical but the values are different. Elements with identical keys and values are accepted silently because the elements do not compete. However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.","needQuote":true,"needEscape":true,"nodes":[{"content":"When adding, an element is considered a duplicate only if the keys are identical but the values are different. Elements with identical keys and values are accepted silently because the elements do not compete. However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.","pos":[0,377],"nodes":[{"content":"When adding, an element is considered a duplicate only if the keys are identical but the values are different.","pos":[0,110]},{"content":"Elements with identical keys and values are accepted silently because the elements do not compete.","pos":[111,209]},{"content":"However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.","pos":[210,377]}]}]},{"pos":[9891,9965],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationElement\"></xref> to add."},{"pos":[10206,10303],"content":"An extension with the same name or type as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">element</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists in the collection.","needQuote":true,"needEscape":true,"source":"An extension with the same name or type as <code>element</code> already exists in the collection."},{"pos":[10963,11108],"content":"Adds a configuration element to the <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, at the specified location.","needQuote":true,"needEscape":true,"source":"Adds a configuration element to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref>, at the specified location."},{"pos":[11120,11497],"content":"When adding, an element is considered a duplicate only if the keys are identical but the values are different. Elements with identical keys and values are accepted silently because the elements do not compete. However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.","needQuote":true,"needEscape":true,"nodes":[{"content":"When adding, an element is considered a duplicate only if the keys are identical but the values are different. Elements with identical keys and values are accepted silently because the elements do not compete. However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.","pos":[0,377],"nodes":[{"content":"When adding, an element is considered a duplicate only if the keys are identical but the values are different.","pos":[0,110]},{"content":"Elements with identical keys and values are accepted silently because the elements do not compete.","pos":[111,209]},{"content":"However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.","pos":[210,377]}]}]},{"pos":[11693,11738],"content":"The index location at which to add <ph id=\"ph1\">`element`</ph>.","needQuote":true,"needEscape":true,"source":"The index location at which to add `element`."},{"pos":[11830,11904],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationElement\"></xref> to add."},{"pos":[12145,12242],"content":"An extension with the same name or type as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">element</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists in the collection.","needQuote":true,"needEscape":true,"source":"An extension with the same name or type as <code>element</code> already exists in the collection."},{"pos":[12888,12949],"content":"Gets the element key for the specified configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the element key for the specified configuration element.","pos":[0,61]}]},{"pos":[13173,13262],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return the key for.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Configuration.ConfigurationElement\"></xref> to return the key for."},{"pos":[13320,13405],"content":"An <xref:System.Object> that acts as the key for the specified configuration element.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Object&gt; that acts as the key for the specified configuration element.","pos":[0,85],"source":"An <xref:System.Object> that acts as the key for the specified configuration element."}]},{"pos":[13610,13704],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or empty.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or empty."},{"pos":[14215,14466],"content":"Gets a value indicating whether an attempt to add a duplicate <bpt id=\"p1\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the <bpt id=\"p2\">&lt;xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will cause an exception to be thrown.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether an attempt to add a duplicate <xref href=\"System.Configuration.ConfigurationElement\"></xref> to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref> will cause an exception to be thrown."},{"pos":[14598,14956],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if an attempt to add a duplicate <bpt id=\"p2\">&lt;xref href=\"System.Configuration.ConfigurationElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to the <bpt id=\"p3\">&lt;xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> will cause an exception to be thrown; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an attempt to add a duplicate <xref href=\"System.Configuration.ConfigurationElement\"></xref> to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref> will cause an exception to be thrown; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection\n  id: ExtensionElementCollection\n  children:\n  - System.ServiceModel.Configuration.ExtensionElementCollection.#ctor\n  - System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate\n  langs:\n  - csharp\n  name: ExtensionElementCollection\n  nameWithType: ExtensionElementCollection\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.ServiceModel.Configuration.ExtensionElement\"></xref> instances.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Configuration.ExtensionElement), CollectionType=System.Configuration.ConfigurationElementCollectionType.BasicMap)]\n\n      public class ExtensionElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Configuration.ExtensionElement>\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationElementCollection\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.AddElementName\n  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.BaseClear\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys\n  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)\n  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)\n  - System.Configuration.ConfigurationElementCollection.ClearElementName\n  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Count\n  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)\n  - System.Configuration.ConfigurationElementCollection.EmitClear\n  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)\n  - System.Configuration.ConfigurationElementCollection.GetEnumerator\n  - System.Configuration.ConfigurationElementCollection.GetHashCode\n  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)\n  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.IsModified\n  - System.Configuration.ConfigurationElementCollection.IsReadOnly\n  - System.Configuration.ConfigurationElementCollection.IsSynchronized\n  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElementCollection.RemoveElementName\n  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElementCollection.ResetModified\n  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElementCollection.SetReadOnly\n  - System.Configuration.ConfigurationElementCollection.SyncRoot\n  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CreateNewElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ElementName\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  langs:\n  - csharp\n  name: ExtensionElementCollection()\n  nameWithType: ExtensionElementCollection.ExtensionElementCollection()\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.ExtensionElementCollection()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref> class.\n  syntax:\n    content: public ExtensionElementCollection ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ExtensionElementCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  id: BaseAdd(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  langs:\n  - csharp\n  name: BaseAdd(ConfigurationElement)\n  nameWithType: ExtensionElementCollection.BaseAdd(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Adds a configuration element to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref>.\n  remarks: When adding, an element is considered a duplicate only if the keys are identical but the values are different. Elements with identical keys and values are accepted silently because the elements do not compete. However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.\n  syntax:\n    content: protected override void BaseAdd (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: The <xref href=\"System.Configuration.ConfigurationElement\"></xref> to add.\n  overload: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: An extension with the same name or type as <code>element</code> already exists in the collection.\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  id: BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  langs:\n  - csharp\n  name: BaseAdd(Int32,ConfigurationElement)\n  nameWithType: ExtensionElementCollection.BaseAdd(Int32,ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(Int32,ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Adds a configuration element to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref>, at the specified location.\n  remarks: When adding, an element is considered a duplicate only if the keys are identical but the values are different. Elements with identical keys and values are accepted silently because the elements do not compete. However, an element with an identical key but a different value cannot be added because there is no logic to determine which of the competing values should be honored.\n  syntax:\n    content: protected override void BaseAdd (int index, System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index location at which to add `element`.\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: The <xref href=\"System.Configuration.ConfigurationElement\"></xref> to add.\n  overload: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: An extension with the same name or type as <code>element</code> already exists in the collection.\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  id: GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  langs:\n  - csharp\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: ExtensionElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(ConfigurationElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the element key for the specified configuration element.\n  syntax:\n    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);\n    parameters:\n    - id: element\n      type: System.Configuration.ConfigurationElement\n      description: The <xref href=\"System.Configuration.ConfigurationElement\"></xref> to return the key for.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that acts as the key for the specified configuration element.\n  overload: System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or empty.\n  platform:\n  - net462\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate\n  id: ThrowOnDuplicate\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  langs:\n  - csharp\n  name: ThrowOnDuplicate\n  nameWithType: ExtensionElementCollection.ThrowOnDuplicate\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a value indicating whether an attempt to add a duplicate <xref href=\"System.Configuration.ConfigurationElement\"></xref> to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref> will cause an exception to be thrown.\n  syntax:\n    content: protected override bool ThrowOnDuplicate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if an attempt to add a duplicate <xref href=\"System.Configuration.ConfigurationElement\"></xref> to the <xref href=\"System.ServiceModel.Configuration.ExtensionElementCollection\"></xref> will cause an exception to be thrown; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1\n  isExternal: false\n  name: System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Configuration.ExtensionElement>\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.#ctor\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: ExtensionElementCollection()\n  nameWithType: ExtensionElementCollection.ExtensionElementCollection()\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.ExtensionElementCollection()\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: BaseAdd(ConfigurationElement)\n  nameWithType: ExtensionElementCollection.BaseAdd(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: BaseAdd(Int32,ConfigurationElement)\n  nameWithType: ExtensionElementCollection.BaseAdd(Int32,ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd(Int32,ConfigurationElement)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: GetElementKey(ConfigurationElement)\n  nameWithType: ExtensionElementCollection.GetElementKey(ConfigurationElement)\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey(ConfigurationElement)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: ThrowOnDuplicate\n  nameWithType: ExtensionElementCollection.ThrowOnDuplicate\n  fullName: System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.#ctor*\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: ExtensionElementCollection\n  nameWithType: ExtensionElementCollection.ExtensionElementCollection\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.BaseAdd*\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: BaseAdd\n  nameWithType: ExtensionElementCollection.BaseAdd\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.GetElementKey*\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: GetElementKey\n  nameWithType: ExtensionElementCollection.GetElementKey\n- uid: System.ServiceModel.Configuration.ExtensionElementCollection.ThrowOnDuplicate*\n  parent: System.ServiceModel.Configuration.ExtensionElementCollection\n  isExternal: false\n  name: ThrowOnDuplicate\n  nameWithType: ExtensionElementCollection.ThrowOnDuplicate\n"}