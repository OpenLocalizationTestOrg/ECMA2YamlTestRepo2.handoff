{"nodes":[{"pos":[354,564],"content":"Represents the method that will handle events raised when a <bpt id=\"p1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is changed on a particular <bpt id=\"p2\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"Represents the method that will handle events raised when a <xref href=\"System.Windows.DependencyProperty\"></xref> is changed on a particular <xref href=\"System.Windows.DependencyObject\"></xref> implementation."},{"pos":[577,2166],"content":"This delegate is the handler signature for particular events that report dependency property changes.       An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event, not as a routed event. Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed. The arguments of the event are used to query the old and new value of the property, as reported by the particular event. Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change. It is also possible, though uncommon, to have the same event report changes to more than one property. In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed.       The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate. <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.","needQuote":false,"needEscape":true,"nodes":[{"content":"This delegate is the handler signature for particular events that report dependency property changes.","pos":[0,101]},{"content":"An event that uses this handler is exposed as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event, not as a routed event.","pos":[108,247],"source":"       An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event, not as a routed event."},{"content":"Typically these events follow the naming pattern <ph id=\"ph1\">`Is(`</ph><bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept><ph id=\"ph2\">`)Changed`</ph>, where <bpt id=\"p2\">*</bpt>PropertyName<ept id=\"p2\">*</ept> is the &lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt; of the property that changed.","pos":[248,459],"source":" Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed."},{"content":"The arguments of the event are used to query the old and new value of the property, as reported by the particular event.","pos":[460,580]},{"content":"Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change.","pos":[581,699]},{"content":"It is also possible, though uncommon, to have the same event report changes to more than one property.","pos":[700,802]},{"content":"In this case, the &lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt; should be checked to determine the property that changed.","pos":[803,935],"source":" In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed."},{"content":"The event data class &lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt; has a wider usage than just this delegate.","pos":[942,1062],"source":"       The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate."},{"content":"&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt; is also used to communicate data for &lt;xref:System.Windows.PropertyChangedCallback&gt; implementations, which are part of the customization features and internals of the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system, and by the &lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt; virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.","pos":[1063,1585],"source":" <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DependencyPropertyChangedEventHandler\n  id: DependencyPropertyChangedEventHandler\n  langs:\n  - csharp\n  name: DependencyPropertyChangedEventHandler\n  nameWithType: DependencyPropertyChangedEventHandler\n  fullName: System.Windows.DependencyPropertyChangedEventHandler\n  type: Delegate\n  summary: Represents the method that will handle events raised when a <xref href=\"System.Windows.DependencyProperty\"></xref> is changed on a particular <xref href=\"System.Windows.DependencyObject\"></xref> implementation.\n  remarks: \"This delegate is the handler signature for particular events that report dependency property changes.  \\n  \\n An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event, not as a routed event. Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed. The arguments of the event are used to query the old and new value of the property, as reported by the particular event. Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change. It is also possible, though uncommon, to have the same event report changes to more than one property. In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed.  \\n  \\n The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate. <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.\"\n  syntax:\n    content: public delegate void DependencyPropertyChangedEventHandler(object sender, DependencyPropertyChangedEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}