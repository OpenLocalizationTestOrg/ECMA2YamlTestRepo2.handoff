{"nodes":[{"pos":[946,1151],"content":"Represents an object that is taking part in a scope hierarchy. This class contains methods for resolving scope and for getting member information. It belongs to the compilation and run-time state category.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an object that is taking part in a scope hierarchy. This class contains methods for resolving scope and for getting member information. It belongs to the compilation and run-time state category.","pos":[0,205],"nodes":[{"content":"Represents an object that is taking part in a scope hierarchy.","pos":[0,62]},{"content":"This class contains methods for resolving scope and for getting member information.","pos":[63,146]},{"content":"It belongs to the compilation and run-time state category.","pos":[147,205]}]}]},{"pos":[3901,3980],"content":"Creates a new global variable, using the specified name, value, and attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new global variable, using the specified name, value, and attributes.","pos":[0,79]}]},{"pos":[4223,4245],"content":"The name of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field.","pos":[0,22]}]},{"pos":[4336,4489],"content":"A bitwise combination of the enumeration values that describe the attributes of a field. <xref:System.Reflection.FieldAttributes> is added automatically.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the enumeration values that describe the attributes of a field. <xref:System.Reflection.FieldAttributes> is added automatically.","pos":[0,153],"nodes":[{"content":"A bitwise combination of the enumeration values that describe the attributes of a field.","pos":[0,88]},{"content":"&lt;xref:System.Reflection.FieldAttributes&gt; is added automatically.","pos":[89,153],"source":" <xref:System.Reflection.FieldAttributes> is added automatically."}]}]},{"pos":[4551,4574],"content":"The value of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the field.","pos":[0,23]}]},{"pos":[4652,4721],"content":"A global variable that has the specified name, value, and attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A global variable that has the specified name, value, and attributes.","pos":[0,69]}]},{"pos":[5175,5222],"content":"Stores an array of variables that are in scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores an array of variables that are in scope.","pos":[0,47]}]},{"pos":[5370,5382],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5828,6000],"content":"Gets the current default scope, which is either the contained object of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> statement scope, or the global scope.","needQuote":true,"needEscape":true,"source":"Gets the current default scope, which is either the contained object of a <xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"></xref> statement scope, or the global scope."},{"pos":[6147,6173],"content":"The current default scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current default scope.","pos":[0,26]}]},{"pos":[6720,6873],"content":"Returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","pos":[0,153],"nodes":[{"content":"Returns a field that has the specified name by searching the scope hierarchy.","pos":[0,77]},{"content":"This method searches only the scope that is specified by the lexical level.","pos":[78,153]}]}]},{"pos":[6885,7199],"content":"This method applies to fields that cannot be resolved at compile time. This occurs when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method applies to fields that cannot be resolved at compile time.","pos":[0,70]},{"content":"This occurs when an <ph id=\"ph1\">`eval`</ph> expression refers to a field in the outer scope.","pos":[71,146],"source":" This occurs when an `eval` expression refers to a field in the outer scope."},{"content":"Because the <ph id=\"ph1\">`eval`</ph> expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field.","pos":[147,314],"source":" Because the `eval` expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field."}]},{"pos":[7380,7416],"content":"The name of the field to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field to search for.","pos":[0,36]}]},{"pos":[7480,7508],"content":"The lexical level to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The lexical level to search.","pos":[0,28]}]},{"pos":[7580,7652],"content":"A <xref:System.Reflection.FieldInfo> object that has the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Reflection.FieldInfo&gt; object that has the specified name.","pos":[0,72],"source":"A <xref:System.Reflection.FieldInfo> object that has the specified name."}]},{"pos":[8125,8263],"content":"Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.","pos":[0,138]}]},{"pos":[8443,8460],"content":"The global scope.","needQuote":true,"needEscape":true,"nodes":[{"content":"The global scope.","pos":[0,17]}]},{"pos":[8982,9097],"content":"Gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the local declaration of a field that has the specified name. This is used at compile time for error checking.","pos":[0,115],"nodes":[{"content":"Gets the local declaration of a field that has the specified name.","pos":[0,66]},{"content":"This is used at compile time for error checking.","pos":[67,115]}]}]},{"pos":[9269,9291],"content":"The name of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field.","pos":[0,22]}]},{"pos":[9363,9398],"content":"The local declaration of the field.","needQuote":true,"needEscape":true,"nodes":[{"content":"The local declaration of the field.","pos":[0,35]}]},{"pos":[10000,10125],"content":"Retrieves an array of <xref:System.Reflection.MemberInfo> objects that correspond to all members that match a specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects that correspond to all members that match a specified name.","pos":[0,125],"source":"Retrieves an array of <xref:System.Reflection.MemberInfo> objects that correspond to all members that match a specified name."}]},{"pos":[10341,10378],"content":"The name of the member to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to search for.","pos":[0,37]}]},{"pos":[10463,10580],"content":"A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.","pos":[0,117]}]},{"pos":[10655,10717],"content":"An array of objects that match the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument.","needQuote":true,"needEscape":true,"source":"An array of objects that match the <code>name</code> argument."},{"pos":[11271,11391],"content":"Retrieves an array of <xref:System.Reflection.MemberInfo> objects that corresponds to all members of the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects that corresponds to all members of the current object.","pos":[0,120],"source":"Retrieves an array of <xref:System.Reflection.MemberInfo> objects that corresponds to all members of the current object."}]},{"pos":[11619,11736],"content":"A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.","pos":[0,117]}]},{"pos":[11811,11879],"content":"An array of objects that contains all members of the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of objects that contains all members of the current object.","pos":[0,68]}]},{"pos":[12446,12594],"content":"Gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.","pos":[0,148],"nodes":[{"content":"Gets the value of the specified member by searching the scope hierarchy.","pos":[0,72]},{"content":"This method searches only the scope that is specified by the lexical level.","pos":[73,148]}]}]},{"pos":[12606,12926],"content":"This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method applies to members that cannot be resolved at compile time.","pos":[0,71]},{"content":"This occurs when an <ph id=\"ph1\">`eval`</ph> expression refers to a member in the outer scope.","pos":[72,148],"source":" This occurs when an `eval` expression refers to a member in the outer scope."},{"content":"Because the <ph id=\"ph1\">`eval`</ph> expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member.","pos":[149,320],"source":" Because the `eval` expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member."}]},{"pos":[13084,13121],"content":"The name of the member to search for.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to search for.","pos":[0,37]}]},{"pos":[13185,13213],"content":"The lexical level to search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The lexical level to search.","pos":[0,28]}]},{"pos":[13271,13313],"content":"The value of the member <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the member <code>name</code>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.ActivationObject\n  id: ActivationObject\n  children:\n  - Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)\n  - Microsoft.JScript.ActivationObject.field_table\n  - Microsoft.JScript.ActivationObject.GetDefaultThisObject\n  - Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)\n  - Microsoft.JScript.ActivationObject.GetGlobalScope\n  - Microsoft.JScript.ActivationObject.GetLocalField(System.String)\n  - Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)\n  langs:\n  - csharp\n  name: ActivationObject\n  nameWithType: ActivationObject\n  fullName: Microsoft.JScript.ActivationObject\n  type: Class\n  summary: Represents an object that is taking part in a scope hierarchy. This class contains methods for resolving scope and for getting member information. It belongs to the compilation and run-time state category.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class ActivationObject : Microsoft.JScript.ScriptObject, Microsoft.JScript.IActivationObject\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.ScriptObject\n  implements:\n  - Microsoft.JScript.IActivationObject\n  inheritedMembers:\n  - Microsoft.JScript.ScriptObject.engine\n  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetParent\n  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)\n  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - Microsoft.JScript.ScriptObject.Item(System.Double)\n  - Microsoft.JScript.ScriptObject.Item(System.Int32)\n  - Microsoft.JScript.ScriptObject.Item(System.Object[])\n  - Microsoft.JScript.ScriptObject.Item(System.String)\n  - Microsoft.JScript.ScriptObject.parent\n  - Microsoft.JScript.ScriptObject.UnderlyingSystemType\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)\n  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)\n  id: CreateField(System.String,System.Reflection.FieldAttributes,System.Object)\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: CreateField(String,FieldAttributes,Object)\n  nameWithType: ActivationObject.CreateField(String,FieldAttributes,Object)\n  fullName: Microsoft.JScript.ActivationObject.CreateField(String,FieldAttributes,Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a new global variable, using the specified name, value, and attributes.\n  syntax:\n    content: protected virtual Microsoft.JScript.JSVariableField CreateField (string name, System.Reflection.FieldAttributes attributeFlags, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field.\n    - id: attributeFlags\n      type: System.Reflection.FieldAttributes\n      description: A bitwise combination of the enumeration values that describe the attributes of a field. <xref:System.Reflection.FieldAttributes> is added automatically.\n    - id: value\n      type: System.Object\n      description: The value of the field.\n    return:\n      type: Microsoft.JScript.JSVariableField\n      description: A global variable that has the specified name, value, and attributes.\n  overload: Microsoft.JScript.ActivationObject.CreateField*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.field_table\n  id: field_table\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: field_table\n  nameWithType: ActivationObject.field_table\n  fullName: Microsoft.JScript.ActivationObject.field_table\n  type: Field\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Stores an array of variables that are in scope.\n  syntax:\n    content: protected System.Collections.ArrayList field_table;\n    return:\n      type: System.Collections.ArrayList\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetDefaultThisObject\n  id: GetDefaultThisObject\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetDefaultThisObject()\n  nameWithType: ActivationObject.GetDefaultThisObject()\n  fullName: Microsoft.JScript.ActivationObject.GetDefaultThisObject()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Gets the current default scope, which is either the contained object of a <xref uid=\"langword_csharp_with\" name=\"with\" href=\"\"></xref> statement scope, or the global scope.\n  syntax:\n    content: public virtual object GetDefaultThisObject ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The current default scope.\n  overload: Microsoft.JScript.ActivationObject.GetDefaultThisObject*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)\n  id: GetField(System.String,System.Int32)\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetField(String,Int32)\n  nameWithType: ActivationObject.GetField(String,Int32)\n  fullName: Microsoft.JScript.ActivationObject.GetField(String,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Returns a field that has the specified name by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.\n  remarks: This method applies to fields that cannot be resolved at compile time. This occurs when an `eval` expression refers to a field in the outer scope. Because the `eval` expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field.\n  syntax:\n    content: public virtual System.Reflection.FieldInfo GetField (string name, int lexLevel);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field to search for.\n    - id: lexLevel\n      type: System.Int32\n      description: The lexical level to search.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref:System.Reflection.FieldInfo> object that has the specified name.\n  overload: Microsoft.JScript.ActivationObject.GetField*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetGlobalScope\n  id: GetGlobalScope\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetGlobalScope()\n  nameWithType: ActivationObject.GetGlobalScope()\n  fullName: Microsoft.JScript.ActivationObject.GetGlobalScope()\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.\n  syntax:\n    content: public virtual Microsoft.JScript.GlobalScope GetGlobalScope ();\n    parameters: []\n    return:\n      type: Microsoft.JScript.GlobalScope\n      description: The global scope.\n  overload: Microsoft.JScript.ActivationObject.GetGlobalScope*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetLocalField(System.String)\n  id: GetLocalField(System.String)\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetLocalField(String)\n  nameWithType: ActivationObject.GetLocalField(String)\n  fullName: Microsoft.JScript.ActivationObject.GetLocalField(String)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Gets the local declaration of a field that has the specified name. This is used at compile time for error checking.\n  syntax:\n    content: public virtual System.Reflection.FieldInfo GetLocalField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field.\n    return:\n      type: System.Reflection.FieldInfo\n      description: The local declaration of the field.\n  overload: Microsoft.JScript.ActivationObject.GetLocalField*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.BindingFlags)\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetMember(String,BindingFlags)\n  nameWithType: ActivationObject.GetMember(String,BindingFlags)\n  fullName: Microsoft.JScript.ActivationObject.GetMember(String,BindingFlags)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Retrieves an array of <xref:System.Reflection.MemberInfo> objects that correspond to all members that match a specified name.\n  syntax:\n    content: public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to search for.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of objects that match the <code>name</code> argument.\n  overload: Microsoft.JScript.ActivationObject.GetMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)\n  id: GetMembers(System.Reflection.BindingFlags)\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetMembers(BindingFlags)\n  nameWithType: ActivationObject.GetMembers(BindingFlags)\n  fullName: Microsoft.JScript.ActivationObject.GetMembers(BindingFlags)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Retrieves an array of <xref:System.Reflection.MemberInfo> objects that corresponds to all members of the current object.\n  syntax:\n    content: public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of objects that contains all members of the current object.\n  overload: Microsoft.JScript.ActivationObject.GetMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)\n  id: GetMemberValue(System.String,System.Int32)\n  parent: Microsoft.JScript.ActivationObject\n  langs:\n  - csharp\n  name: GetMemberValue(String,Int32)\n  nameWithType: ActivationObject.GetMemberValue(String,Int32)\n  fullName: Microsoft.JScript.ActivationObject.GetMemberValue(String,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Gets the value of the specified member by searching the scope hierarchy. This method searches only the scope that is specified by the lexical level.\n  remarks: This method applies to members that cannot be resolved at compile time. This occurs when an `eval` expression refers to a member in the outer scope. Because the `eval` expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member.\n  syntax:\n    content: public object GetMemberValue (string name, int lexlevel);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to search for.\n    - id: lexlevel\n      type: System.Int32\n      description: The lexical level to search.\n    return:\n      type: System.Object\n      description: The value of the member <code>name</code>.\n  overload: Microsoft.JScript.ActivationObject.GetMemberValue*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.JScript.ScriptObject\n  isExternal: false\n  name: Microsoft.JScript.ScriptObject\n- uid: Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: CreateField(String,FieldAttributes,Object)\n  nameWithType: ActivationObject.CreateField(String,FieldAttributes,Object)\n  fullName: Microsoft.JScript.ActivationObject.CreateField(String,FieldAttributes,Object)\n- uid: Microsoft.JScript.JSVariableField\n  parent: Microsoft.JScript\n  isExternal: false\n  name: JSVariableField\n  nameWithType: JSVariableField\n  fullName: Microsoft.JScript.JSVariableField\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: true\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.ActivationObject.field_table\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: field_table\n  nameWithType: ActivationObject.field_table\n  fullName: Microsoft.JScript.ActivationObject.field_table\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: Microsoft.JScript.ActivationObject.GetDefaultThisObject\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetDefaultThisObject()\n  nameWithType: ActivationObject.GetDefaultThisObject()\n  fullName: Microsoft.JScript.ActivationObject.GetDefaultThisObject()\n- uid: Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetField(String,Int32)\n  nameWithType: ActivationObject.GetField(String,Int32)\n  fullName: Microsoft.JScript.ActivationObject.GetField(String,Int32)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: true\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.ActivationObject.GetGlobalScope\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetGlobalScope()\n  nameWithType: ActivationObject.GetGlobalScope()\n  fullName: Microsoft.JScript.ActivationObject.GetGlobalScope()\n- uid: Microsoft.JScript.GlobalScope\n  parent: Microsoft.JScript\n  isExternal: false\n  name: GlobalScope\n  nameWithType: GlobalScope\n  fullName: Microsoft.JScript.GlobalScope\n- uid: Microsoft.JScript.ActivationObject.GetLocalField(System.String)\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetLocalField(String)\n  nameWithType: ActivationObject.GetLocalField(String)\n  fullName: Microsoft.JScript.ActivationObject.GetLocalField(String)\n- uid: Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetMember(String,BindingFlags)\n  nameWithType: ActivationObject.GetMember(String,BindingFlags)\n  fullName: Microsoft.JScript.ActivationObject.GetMember(String,BindingFlags)\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: MemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetMembers(BindingFlags)\n  nameWithType: ActivationObject.GetMembers(BindingFlags)\n  fullName: Microsoft.JScript.ActivationObject.GetMembers(BindingFlags)\n- uid: Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetMemberValue(String,Int32)\n  nameWithType: ActivationObject.GetMemberValue(String,Int32)\n  fullName: Microsoft.JScript.ActivationObject.GetMemberValue(String,Int32)\n- uid: Microsoft.JScript.ActivationObject.CreateField*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: CreateField\n  nameWithType: ActivationObject.CreateField\n- uid: Microsoft.JScript.ActivationObject.GetDefaultThisObject*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetDefaultThisObject\n  nameWithType: ActivationObject.GetDefaultThisObject\n- uid: Microsoft.JScript.ActivationObject.GetField*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetField\n  nameWithType: ActivationObject.GetField\n- uid: Microsoft.JScript.ActivationObject.GetGlobalScope*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetGlobalScope\n  nameWithType: ActivationObject.GetGlobalScope\n- uid: Microsoft.JScript.ActivationObject.GetLocalField*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetLocalField\n  nameWithType: ActivationObject.GetLocalField\n- uid: Microsoft.JScript.ActivationObject.GetMember*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetMember\n  nameWithType: ActivationObject.GetMember\n- uid: Microsoft.JScript.ActivationObject.GetMembers*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetMembers\n  nameWithType: ActivationObject.GetMembers\n- uid: Microsoft.JScript.ActivationObject.GetMemberValue*\n  parent: Microsoft.JScript.ActivationObject\n  isExternal: false\n  name: GetMemberValue\n  nameWithType: ActivationObject.GetMemberValue\n"}