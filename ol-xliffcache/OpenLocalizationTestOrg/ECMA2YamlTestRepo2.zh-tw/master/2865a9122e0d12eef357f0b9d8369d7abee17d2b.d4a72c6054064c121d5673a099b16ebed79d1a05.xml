{"nodes":[{"pos":[978,1267],"content":"Represents a parameter to a <xref href=\"System.Data.Common.DbCommand\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataSet\"></xref> column. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a parameter to a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally, its mapping to a <bpt id=\"p2\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> column.","pos":[0,159],"source":"Represents a parameter to a <xref href=\"System.Data.Common.DbCommand\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataSet\"></xref> column."},{"content":"For more information on parameters, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[160,289],"source":" For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[2087,2179],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Common.DbParameter\"></xref> class."},{"pos":[2647,2721],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the parameter.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.DbType\"></xref> of the parameter."},{"pos":[2863,2977],"content":"One of the <xref href=\"System.Data.DbType\"></xref> values. The default is <xref href=\"System.Data.DbType\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,58],"source":"One of the <xref href=\"System.Data.DbType\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[59,114],"source":" The default is <xref href=\"System.Data.DbType\"></xref>."}]},{"pos":[3137,3212],"content":"The property is not set to a valid <bpt id=\"p1\">&lt;xref href=\"System.Data.DbType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The property is not set to a valid <xref href=\"System.Data.DbType\"></xref>."},{"pos":[3560,3706],"content":"Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.","pos":[0,146]}]},{"pos":[3719,4246],"content":"If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.Common.DbCommand> does not return a value, the <xref:System.Data.Common.DbParameter> contains a null value.       `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Common.DbCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Common.DbDataReader.Close%2A> or <xref:System.Data.Common.DbDataReader.Dispose%2A> on the <xref:System.Data.Common.DbDataReader>.","needQuote":false,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Data.ParameterDirection&gt; is output, and execution of the associated &lt;xref:System.Data.Common.DbCommand&gt; does not return a value, the &lt;xref:System.Data.Common.DbParameter&gt; contains a null value.","pos":[0,213],"source":"If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.Common.DbCommand> does not return a value, the <xref:System.Data.Common.DbParameter> contains a null value."},{"content":"<ph id=\"ph1\">`Output`</ph>, <ph id=\"ph2\">`InputOut`</ph>, and <ph id=\"ph3\">`ReturnValue`</ph> parameters returned by calling &lt;xref:System.Data.Common.DbCommand.ExecuteReader%2A&gt; cannot be accessed until you call &lt;xref:System.Data.Common.DbDataReader.Close%2A&gt; or &lt;xref:System.Data.Common.DbDataReader.Dispose%2A&gt; on the &lt;xref:System.Data.Common.DbDataReader&gt;.","pos":[220,525],"source":"`Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Common.DbCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Common.DbDataReader.Close%2A> or <xref:System.Data.Common.DbDataReader.Dispose%2A> on the <xref:System.Data.Common.DbDataReader>."}]},{"pos":[4416,4565],"content":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values. The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,70],"source":"One of the <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,149],"source":" The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>."}]},{"pos":[4728,4831],"content":"The property is not set to one of the valid <bpt id=\"p1\">&lt;xref href=\"System.Data.ParameterDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The property is not set to one of the valid <xref href=\"System.Data.ParameterDirection\"></xref> values."},{"pos":[5184,5262],"content":"Gets or sets a value that indicates whether the parameter accepts null values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the parameter accepts null values.","pos":[0,78]}]},{"pos":[5274,5335],"content":"Null values are handled using the <xref:System.DBNull> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Null values are handled using the &lt;xref:System.DBNull&gt; class.","pos":[0,61],"source":"Null values are handled using the <xref:System.DBNull> class."}]},{"pos":[5463,5705],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if null values are accepted; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,163],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[164,242],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[6145,6226],"content":"Gets or sets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the <xref href=\"System.Data.Common.DbParameter\"></xref>."},{"pos":[6358,6463],"content":"The name of the <xref href=\"System.Data.Common.DbParameter\"></xref>. The default is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,68],"source":"The name of the <xref href=\"System.Data.Common.DbParameter\"></xref>."},{"content":"The default is an empty string (\"\").","pos":[69,105]}]},{"pos":[6887,7072],"content":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets or sets the maximum number of digits used to represent the <xref:System.Data.Common.DbParameter.Value*> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets or sets the maximum number of digits used to represent the &lt;xref:System.Data.Common.DbParameter.Value*&gt; property.","pos":[0,183],"source":"[Supported in the .NET Framework 4.5.1 and later versions]       Gets or sets the maximum number of digits used to represent the <xref:System.Data.Common.DbParameter.Value*> property."}]},{"pos":[7196,7301],"content":"The maximum number of digits used to represent the <xref:System.Data.Common.DbParameter.Value*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of digits used to represent the &lt;xref:System.Data.Common.DbParameter.Value*&gt; property.","pos":[0,105],"source":"The maximum number of digits used to represent the <xref:System.Data.Common.DbParameter.Value*> property."}]},{"pos":[7734,7790],"content":"Resets the <bpt id=\"p1\">**</bpt>DbType<ept id=\"p1\">**</ept> property to its original settings.","needQuote":true,"needEscape":true,"source":"Resets the **DbType** property to its original settings."},{"pos":[8270,8378],"content":"Gets or sets the number of decimal places to which <xref:System.Data.Common.DbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the number of decimal places to which &lt;xref:System.Data.Common.DbParameter.Value*&gt; is resolved.","pos":[0,108],"source":"Gets or sets the number of decimal places to which <xref:System.Data.Common.DbParameter.Value*> is resolved."}]},{"pos":[8497,8592],"content":"The number of decimal places to which <xref:System.Data.Common.DbParameter.Value*> is resolved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of decimal places to which &lt;xref:System.Data.Common.DbParameter.Value*&gt; is resolved.","pos":[0,95],"source":"The number of decimal places to which <xref:System.Data.Common.DbParameter.Value*> is resolved."}]},{"pos":[8982,9053],"content":"Gets or sets the maximum size, in bytes, of the data within the column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the maximum size, in bytes, of the data within the column.","pos":[0,71]}]},{"pos":[9066,11029],"content":"The Size property is used for binary and string types.       For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.       For variable-length data types, Size describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first one hundred characters.       For bidirectional and output parameters, and return values, you must set the value of Size. This is not required for input parameters, and if not explicitly set, the value is inferred from the actual size of the specified parameter when a parameterized statement is executed.       The <xref:System.Data.Common.DbParameter.DbType%2A> and Size properties of a parameter can be inferred by setting <xref:System.Data.Common.DbParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.Common.DbParameter> property settings. For example, if the size of the parameter has been inferred, Size does not contain inferred value after statement execution.       For fixed length data types, the value of Size is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.       If the size of the value supplied for a <xref:System.Data.Common.DbParameter> exceeds the specified Size, the <xref:System.Data.Common.DbParameter.Value%2A> of the <xref:System.Data.Common.DbParameter> will contain the specified value, truncated to the Size of the <xref:System.Data.Common.DbParameter>.       For parameters of type `DbType`.`String`, the value of Size is length in Unicode characters. For parameters of type `DbType`.`Xml`, Size is ignored.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Size property is used for binary and string types.","pos":[0,54]},{"content":"For nonstring data types and ANSI string data, the Size property refers to the number of bytes.","pos":[61,156]},{"content":"For Unicode string data, Size refers to the number of characters.","pos":[157,222]},{"content":"The count for strings does not include the terminating character.","pos":[223,288]},{"content":"For variable-length data types, Size describes the maximum amount of data to transmit to the server.","pos":[295,395]},{"content":"For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first one hundred characters.","pos":[396,539]},{"content":"For bidirectional and output parameters, and return values, you must set the value of Size.","pos":[546,637]},{"content":"This is not required for input parameters, and if not explicitly set, the value is inferred from the actual size of the specified parameter when a parameterized statement is executed.","pos":[638,821]},{"content":"The &lt;xref:System.Data.Common.DbParameter.DbType%2A&gt; and Size properties of a parameter can be inferred by setting &lt;xref:System.Data.Common.DbParameter.Value%2A&gt;.","pos":[828,989],"source":"       The <xref:System.Data.Common.DbParameter.DbType%2A> and Size properties of a parameter can be inferred by setting <xref:System.Data.Common.DbParameter.Value%2A>."},{"content":"Therefore, you are not required to specify them.","pos":[990,1038]},{"content":"However, they are not exposed in &lt;xref:System.Data.Common.DbParameter&gt; property settings.","pos":[1039,1128],"source":" However, they are not exposed in <xref:System.Data.Common.DbParameter> property settings."},{"content":"For example, if the size of the parameter has been inferred, Size does not contain inferred value after statement execution.","pos":[1129,1253]},{"content":"For fixed length data types, the value of Size is ignored.","pos":[1260,1318]},{"content":"It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.","pos":[1319,1484]},{"content":"If the size of the value supplied for a &lt;xref:System.Data.Common.DbParameter&gt; exceeds the specified Size, the &lt;xref:System.Data.Common.DbParameter.Value%2A&gt; of the &lt;xref:System.Data.Common.DbParameter&gt; will contain the specified value, truncated to the Size of the &lt;xref:System.Data.Common.DbParameter&gt;.","pos":[1491,1794],"source":"       If the size of the value supplied for a <xref:System.Data.Common.DbParameter> exceeds the specified Size, the <xref:System.Data.Common.DbParameter.Value%2A> of the <xref:System.Data.Common.DbParameter> will contain the specified value, truncated to the Size of the <xref:System.Data.Common.DbParameter>."},{"content":"For parameters of type <ph id=\"ph1\">`DbType`</ph>.<ph id=\"ph2\">`String`</ph>, the value of Size is length in Unicode characters.","pos":[1801,1893],"source":"       For parameters of type `DbType`.`String`, the value of Size is length in Unicode characters."},{"content":"For parameters of type <ph id=\"ph1\">`DbType`</ph>.<ph id=\"ph2\">`Xml`</ph>, Size is ignored.","pos":[1894,1949],"source":" For parameters of type `DbType`.`Xml`, Size is ignored."}]},{"pos":[11149,11263],"content":"The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.","pos":[0,114],"nodes":[{"content":"The maximum size, in bytes, of the data within the column.","pos":[0,58]},{"content":"The default value is inferred from the parameter value.","pos":[59,114]}]}]},{"pos":[11692,11873],"content":"Gets or sets the name of the source column mapped to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and used for loading or returning the &lt;xref:System.Data.Common.DbParameter.Value*&gt;.","needQuote":true,"needEscape":true,"source":"Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref> and used for loading or returning the <xref:System.Data.Common.DbParameter.Value*>."},{"pos":[11886,12601],"content":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name. If <xref:System.Data.Common.DbParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If <xref:System.Data.Common.DbParameter.Direction%2A> is set to `Output`, the value is taken from the data source. A <xref:System.Data.Common.DbParameter.Direction%2A> of `InputOutput` is a combination of both.       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name.","pos":[0,148]},{"content":"If &lt;xref:System.Data.Common.DbParameter.Direction%2A&gt; is set to <ph id=\"ph1\">`Input`</ph>, the value is taken from the &lt;xref:System.Data.DataSet&gt;.","pos":[149,277],"source":" If <xref:System.Data.Common.DbParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>."},{"content":"If &lt;xref:System.Data.Common.DbParameter.Direction%2A&gt; is set to <ph id=\"ph1\">`Output`</ph>, the value is taken from the data source.","pos":[278,392],"source":" If <xref:System.Data.Common.DbParameter.Direction%2A> is set to `Output`, the value is taken from the data source."},{"content":"A &lt;xref:System.Data.Common.DbParameter.Direction%2A&gt; of <ph id=\"ph1\">`InputOutput`</ph> is a combination of both.","pos":[393,488],"source":" A <xref:System.Data.Common.DbParameter.Direction%2A> of `InputOutput` is a combination of both."},{"content":"For more information about how to use the SourceColumn property, see <bpt id=\"p1\">[</bpt>DataAdapter Parameters<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>Updating Data Sources with DataAdapters<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[495,713],"source":"       For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[12733,12850],"content":"The name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref>. The default is an empty string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source column mapped to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,85],"source":"The name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref>."},{"content":"The default is an empty string.","pos":[86,117]}]},{"pos":[13342,13548],"content":"Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> to correctly generate Update statements for nullable columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets or gets a value which indicates whether the source column is nullable.","pos":[0,75]},{"content":"This allows <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommandBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to correctly generate Update statements for nullable columns.","pos":[76,206],"source":" This allows <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> to correctly generate Update statements for nullable columns."}]},{"pos":[13561,14926],"content":"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following (in this query expression, \"FieldName\" represents the name of the field):      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is `false`, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.","needQuote":false,"needEscape":true,"nodes":[{"content":"SourceColumnNullMapping is used by the &lt;xref:System.Data.Common.DbCommandBuilder&gt; to correctly generate update commands when dealing with nullable columns.","pos":[0,155],"source":"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns."},{"content":"Generally, use of SourceColumnNullMapping is limited to developers inheriting from &lt;xref:System.Data.Common.DbCommandBuilder&gt;.","pos":[156,282],"source":" Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>."},{"content":"&lt;xref:System.Data.Common.DbCommandBuilder&gt; uses this property to determine whether the source column is nullable, and sets this property to <ph id=\"ph1\">`true`</ph> if it is nullable, and <ph id=\"ph2\">`false`</ph> if it is not.","pos":[289,480],"source":"       <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not."},{"content":"When &lt;xref:System.Data.Common.DbCommandBuilder&gt; is generating its Update statement, it examines the SourceColumnNullMapping for each parameter.","pos":[481,624],"source":" When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter."},{"content":"If the property is <ph id=\"ph1\">`true`</ph>, &lt;xref:System.Data.Common.DbCommandBuilder&gt; generates a WHERE clauses like the following (in this query expression, \"FieldName\" represents the name of the field):      <ph id=\"ph2\">```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```</ph>       If SourceColumnNullMapping for the field is <ph id=\"ph3\">`false`</ph>, &lt;xref:System.Data.Common.DbCommandBuilder&gt; generates the following WHERE clause:      <ph id=\"ph4\">```   FieldName = @OriginalFieldName   ```</ph>       In addition, <ph id=\"ph5\">@IsNull_FieldName</ph> contains 1 if the source field contains null, and 0 if it does not.","pos":[625,1213],"source":" If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following (in this query expression, \"FieldName\" represents the name of the field):      ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ```       If SourceColumnNullMapping for the field is `false`, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:      ```   FieldName = @OriginalFieldName   ```       In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not."},{"content":"This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.","pos":[1214,1348]}]},{"pos":[15068,15239],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the source column is nullable; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if it is not.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not."},{"pos":[15692,15823],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to use when you load &lt;xref:System.Data.Common.DbParameter.Value*&gt;.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.DataRowVersion\"></xref> to use when you load <xref:System.Data.Common.DbParameter.Value*>."},{"pos":[15835,16286],"content":"Used by <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> during an <xref:System.Data.Common.DbDataAdapter.Update%2A> operation to determine whether the parameter value is set to `Current` or `Original`. This lets primary keys be updated. This property is set to the version of the <xref:System.Data.DataRow> used by the `DataRow.Item` property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Used by &lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt; during an &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; operation to determine whether the parameter value is set to <ph id=\"ph1\">`Current`</ph> or <ph id=\"ph2\">`Original`</ph>.","pos":[0,210],"source":"Used by <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> during an <xref:System.Data.Common.DbDataAdapter.Update%2A> operation to determine whether the parameter value is set to `Current` or `Original`."},{"content":"This lets primary keys be updated.","pos":[211,245]},{"content":"This property is set to the version of the &lt;xref:System.Data.DataRow&gt; used by the <ph id=\"ph1\">`DataRow.Item`</ph> property, or the &lt;xref:System.Data.DataRow.GetChildRows%2A&gt; method of the &lt;xref:System.Data.DataRow&gt; object.","pos":[246,451],"source":" This property is set to the version of the <xref:System.Data.DataRow> used by the `DataRow.Item` property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object."}]},{"pos":[16450,16599],"content":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values. The default is <xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,66],"source":"One of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[67,149],"source":" The default is <xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"></xref>."}]},{"pos":[16766,16859],"content":"The property is not set to one of the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRowVersion\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"The property is not set to one of the <xref href=\"System.Data.DataRowVersion\"></xref> values."},{"pos":[17366,17412],"content":"Indicates the precision of numeric parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates the precision of numeric parameters.","pos":[0,46]}]},{"pos":[17425,17730],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface.       For more information, see <xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface.       For more information, see <xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName>.","pos":[0,303],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Common.DbParameter&gt; instance is cast to an &lt;xref:System.Data.IDbDataParameter&gt; interface.","pos":[60,196],"source":" It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface."},{"content":"For more information, see &lt;xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName&gt;.","pos":[203,303],"source":"       For more information, see <xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName>."}]}]},{"pos":[17868,18236],"content":"The maximum number of digits used to represent the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> property of a data provider <xref uid=\"langword_csharp_Parameter\" name=\"Parameter\" href=\"\"></xref> object. The default value is 0, which indicates that a data provider sets the precision for <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of digits used to represent the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> property of a data provider <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Parameter\" name=\"Parameter\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","pos":[0,220],"source":"The maximum number of digits used to represent the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> property of a data provider <xref uid=\"langword_csharp_Parameter\" name=\"Parameter\" href=\"\"></xref> object."},{"content":"The default value is 0, which indicates that a data provider sets the precision for <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[221,368],"source":" The default value is 0, which indicates that a data provider sets the precision for <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref>."}]},{"pos":[18823,18937],"content":"For a description of this member, see &lt;xref:System.Data.IDbDataParameter.Scale%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Data.IDbDataParameter.Scale%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,114],"source":"For a description of this member, see &lt;xref:System.Data.IDbDataParameter.Scale%2A?displayProperty=fullName&gt;."}]},{"pos":[18950,19226],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface.       For more information, see <xref:System.Data.IDbDataParameter.Scale%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface.       For more information, see <xref:System.Data.IDbDataParameter.Scale%2A>.","pos":[0,274],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Common.DbParameter&gt; instance is cast to an &lt;xref:System.Data.IDbDataParameter&gt; interface.","pos":[60,196],"source":" It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface."},{"content":"For more information, see &lt;xref:System.Data.IDbDataParameter.Scale%2A&gt;.","pos":[203,274],"source":"       For more information, see <xref:System.Data.IDbDataParameter.Scale%2A>."}]}]},{"pos":[19360,19488],"content":"The number of decimal places to which <xref href=\"System.Data.OleDb.OleDbParameter.Value\"></xref> is resolved. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of decimal places to which <bpt id=\"p1\">&lt;xref href=\"System.Data.OleDb.OleDbParameter.Value\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is resolved.","pos":[0,110],"source":"The number of decimal places to which <xref href=\"System.Data.OleDb.OleDbParameter.Value\"></xref> is resolved."},{"content":"The default is 0.","pos":[111,128]}]},{"pos":[19912,19952],"content":"Gets or sets the value of the parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of the parameter.","pos":[0,40]}]},{"pos":[19965,20997],"content":"For input parameters, the value is bound to the <xref:System.Data.Common.DbCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.Common.DbCommand> and after the <xref:System.Data.Common.DbDataReader> is closed.       When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null. The null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values.       If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.       The <xref:System.Data.Common.DbParameter.DbType%2A> property can be inferred by setting the Value.       The Value property is overwritten by `DbDataAdapter.Update`.","needQuote":false,"needEscape":true,"nodes":[{"content":"For input parameters, the value is bound to the &lt;xref:System.Data.Common.DbCommand&gt; that is sent to the server.","pos":[0,111],"source":"For input parameters, the value is bound to the <xref:System.Data.Common.DbCommand> that is sent to the server."},{"content":"For output and return value parameters, the value is set on completion of the &lt;xref:System.Data.Common.DbCommand&gt; and after the &lt;xref:System.Data.Common.DbDataReader&gt; is closed.","pos":[112,289],"source":" For output and return value parameters, the value is set on completion of the <xref:System.Data.Common.DbCommand> and after the <xref:System.Data.Common.DbDataReader> is closed."},{"content":"When you send a null parameter value to the server, you must specify &lt;xref:System.DBNull&gt;, not null.","pos":[296,396],"source":"       When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null."},{"content":"The null value in the system is an empty object that has no value.","pos":[397,463]},{"content":"&lt;xref:System.DBNull&gt; is used to represent null values.","pos":[464,518],"source":" <xref:System.DBNull> is used to represent null values."},{"content":"If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.","pos":[525,662]},{"content":"The provider tries to convert any type of value if it supports the &lt;xref:System.IConvertible&gt; interface.","pos":[663,767],"source":" The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface."},{"content":"Conversion errors may result if the specified type is not compatible with the value.","pos":[768,852]},{"content":"The &lt;xref:System.Data.Common.DbParameter.DbType%2A&gt; property can be inferred by setting the Value.","pos":[859,957],"source":"       The <xref:System.Data.Common.DbParameter.DbType%2A> property can be inferred by setting the Value."},{"content":"The Value property is overwritten by <ph id=\"ph1\">`DbDataAdapter.Update`</ph>.","pos":[964,1024],"source":"       The Value property is overwritten by `DbDataAdapter.Update`."}]},{"pos":[21122,21208],"content":"An <xref:System.Object> that is the value of the parameter. The default value is null.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Object> that is the value of the parameter. The default value is null.","pos":[0,86],"nodes":[{"content":"An &lt;xref:System.Object&gt; that is the value of the parameter.","pos":[0,59],"source":"An <xref:System.Object> that is the value of the parameter."},{"content":"The default value is null.","pos":[60,86]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DbParameter\n  id: DbParameter\n  children:\n  - System.Data.Common.DbParameter.#ctor\n  - System.Data.Common.DbParameter.DbType\n  - System.Data.Common.DbParameter.Direction\n  - System.Data.Common.DbParameter.IsNullable\n  - System.Data.Common.DbParameter.ParameterName\n  - System.Data.Common.DbParameter.Precision\n  - System.Data.Common.DbParameter.ResetDbType\n  - System.Data.Common.DbParameter.Scale\n  - System.Data.Common.DbParameter.Size\n  - System.Data.Common.DbParameter.SourceColumn\n  - System.Data.Common.DbParameter.SourceColumnNullMapping\n  - System.Data.Common.DbParameter.SourceVersion\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  - System.Data.Common.DbParameter.Value\n  langs:\n  - csharp\n  name: DbParameter\n  nameWithType: DbParameter\n  fullName: System.Data.Common.DbParameter\n  type: Class\n  summary: Represents a parameter to a <xref href=\"System.Data.Common.DbCommand\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataSet\"></xref> column. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: 'public abstract class DbParameter : MarshalByRefObject, System.Data.IDbDataParameter'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.Data.IDbDataParameter\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: DbParameter()\n  nameWithType: DbParameter.DbParameter()\n  fullName: System.Data.Common.DbParameter.DbParameter()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.DbParameter\"></xref> class.\n  syntax:\n    content: protected DbParameter ();\n    parameters: []\n  overload: System.Data.Common.DbParameter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.DbType\n  id: DbType\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: DbType\n  nameWithType: DbParameter.DbType\n  fullName: System.Data.Common.DbParameter.DbType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref href=\"System.Data.DbType\"></xref> of the parameter.\n  syntax:\n    content: public abstract System.Data.DbType DbType { get; set; }\n    return:\n      type: System.Data.DbType\n      description: One of the <xref href=\"System.Data.DbType\"></xref> values. The default is <xref href=\"System.Data.DbType\"></xref>.\n  overload: System.Data.Common.DbParameter.DbType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property is not set to a valid <xref href=\"System.Data.DbType\"></xref>.\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.Direction\n  id: Direction\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: Direction\n  nameWithType: DbParameter.Direction\n  fullName: System.Data.Common.DbParameter.Direction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.\n  remarks: \"If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.Common.DbCommand> does not return a value, the <xref:System.Data.Common.DbParameter> contains a null value.  \\n  \\n `Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.Common.DbCommand.ExecuteReader%2A> cannot be accessed until you call <xref:System.Data.Common.DbDataReader.Close%2A> or <xref:System.Data.Common.DbDataReader.Dispose%2A> on the <xref:System.Data.Common.DbDataReader>.\"\n  syntax:\n    content: public abstract System.Data.ParameterDirection Direction { get; set; }\n    return:\n      type: System.Data.ParameterDirection\n      description: One of the <xref href=\"System.Data.ParameterDirection\"></xref> values. The default is <xref uid=\"langword_csharp_Input\" name=\"Input\" href=\"\"></xref>.\n  overload: System.Data.Common.DbParameter.Direction*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property is not set to one of the valid <xref href=\"System.Data.ParameterDirection\"></xref> values.\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.IsNullable\n  id: IsNullable\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: IsNullable\n  nameWithType: DbParameter.IsNullable\n  fullName: System.Data.Common.DbParameter.IsNullable\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets a value that indicates whether the parameter accepts null values.\n  remarks: Null values are handled using the <xref:System.DBNull> class.\n  syntax:\n    content: public abstract bool IsNullable { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null values are accepted; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Common.DbParameter.IsNullable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.ParameterName\n  id: ParameterName\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: ParameterName\n  nameWithType: DbParameter.ParameterName\n  fullName: System.Data.Common.DbParameter.ParameterName\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the name of the <xref href=\"System.Data.Common.DbParameter\"></xref>.\n  syntax:\n    content: public abstract string ParameterName { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Data.Common.DbParameter\"></xref>. The default is an empty string (\"\").\n  overload: System.Data.Common.DbParameter.ParameterName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.Precision\n  id: Precision\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: Precision\n  nameWithType: DbParameter.Precision\n  fullName: System.Data.Common.DbParameter.Precision\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"[Supported in the .NET Framework 4.5.1 and later versions]  \\n  \\n Gets or sets the maximum number of digits used to represent the <xref:System.Data.Common.DbParameter.Value*> property.\"\n  syntax:\n    content: public virtual byte Precision { get; set; }\n    return:\n      type: System.Byte\n      description: The maximum number of digits used to represent the <xref:System.Data.Common.DbParameter.Value*> property.\n  overload: System.Data.Common.DbParameter.Precision*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.ResetDbType\n  id: ResetDbType\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: ResetDbType()\n  nameWithType: DbParameter.ResetDbType()\n  fullName: System.Data.Common.DbParameter.ResetDbType()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Resets the **DbType** property to its original settings.\n  syntax:\n    content: public abstract void ResetDbType ();\n    parameters: []\n  overload: System.Data.Common.DbParameter.ResetDbType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.Scale\n  id: Scale\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: Scale\n  nameWithType: DbParameter.Scale\n  fullName: System.Data.Common.DbParameter.Scale\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the number of decimal places to which <xref:System.Data.Common.DbParameter.Value*> is resolved.\n  syntax:\n    content: public virtual byte Scale { get; set; }\n    return:\n      type: System.Byte\n      description: The number of decimal places to which <xref:System.Data.Common.DbParameter.Value*> is resolved.\n  overload: System.Data.Common.DbParameter.Scale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.Size\n  id: Size\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: Size\n  nameWithType: DbParameter.Size\n  fullName: System.Data.Common.DbParameter.Size\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the maximum size, in bytes, of the data within the column.\n  remarks: \"The Size property is used for binary and string types.  \\n  \\n For nonstring data types and ANSI string data, the Size property refers to the number of bytes. For Unicode string data, Size refers to the number of characters. The count for strings does not include the terminating character.  \\n  \\n For variable-length data types, Size describes the maximum amount of data to transmit to the server. For example, for a Unicode string value, Size could be used to limit the amount of data sent to the server to the first one hundred characters.  \\n  \\n For bidirectional and output parameters, and return values, you must set the value of Size. This is not required for input parameters, and if not explicitly set, the value is inferred from the actual size of the specified parameter when a parameterized statement is executed.  \\n  \\n The <xref:System.Data.Common.DbParameter.DbType%2A> and Size properties of a parameter can be inferred by setting <xref:System.Data.Common.DbParameter.Value%2A>. Therefore, you are not required to specify them. However, they are not exposed in <xref:System.Data.Common.DbParameter> property settings. For example, if the size of the parameter has been inferred, Size does not contain inferred value after statement execution.  \\n  \\n For fixed length data types, the value of Size is ignored. It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.  \\n  \\n If the size of the value supplied for a <xref:System.Data.Common.DbParameter> exceeds the specified Size, the <xref:System.Data.Common.DbParameter.Value%2A> of the <xref:System.Data.Common.DbParameter> will contain the specified value, truncated to the Size of the <xref:System.Data.Common.DbParameter>.  \\n  \\n For parameters of type `DbType`.`String`, the value of Size is length in Unicode characters. For parameters of type `DbType`.`Xml`, Size is ignored.\"\n  syntax:\n    content: public abstract int Size { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.\n  overload: System.Data.Common.DbParameter.Size*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.SourceColumn\n  id: SourceColumn\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: SourceColumn\n  nameWithType: DbParameter.SourceColumn\n  fullName: System.Data.Common.DbParameter.SourceColumn\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref> and used for loading or returning the <xref:System.Data.Common.DbParameter.Value*>.\n  remarks: \"When SourceColumn is set to anything other than an empty string, the value of the parameter is retrieved from the column with the SourceColumn name. If <xref:System.Data.Common.DbParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>. If <xref:System.Data.Common.DbParameter.Direction%2A> is set to `Output`, the value is taken from the data source. A <xref:System.Data.Common.DbParameter.Direction%2A> of `InputOutput` is a combination of both.  \\n  \\n For more information about how to use the SourceColumn property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md) and [Updating Data Sources with DataAdapters](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public abstract string SourceColumn { get; set; }\n    return:\n      type: System.String\n      description: The name of the source column mapped to the <xref href=\"System.Data.DataSet\"></xref>. The default is an empty string.\n  overload: System.Data.Common.DbParameter.SourceColumn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.SourceColumnNullMapping\n  id: SourceColumnNullMapping\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: SourceColumnNullMapping\n  nameWithType: DbParameter.SourceColumnNullMapping\n  fullName: System.Data.Common.DbParameter.SourceColumnNullMapping\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\"System.Data.Common.DbCommandBuilder\"></xref> to correctly generate Update statements for nullable columns.\n  remarks: \"SourceColumnNullMapping is used by the <xref:System.Data.Common.DbCommandBuilder> to correctly generate update commands when dealing with nullable columns. Generally, use of SourceColumnNullMapping is limited to developers inheriting from <xref:System.Data.Common.DbCommandBuilder>.  \\n  \\n <xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not. When <xref:System.Data.Common.DbCommandBuilder> is generating its Update statement, it examines the SourceColumnNullMapping for each parameter. If the property is `true`, <xref:System.Data.Common.DbCommandBuilder> generates a WHERE clauses like the following (in this query expression, \\\"FieldName\\\" represents the name of the field):  \\n  \\n```  \\n((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   \\n  (FieldName = @Original_FieldName))  \\n```  \\n  \\n If SourceColumnNullMapping for the field is `false`, <xref:System.Data.Common.DbCommandBuilder> generates the following WHERE clause:  \\n  \\n```  \\nFieldName = @OriginalFieldName  \\n```  \\n  \\n In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not. This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.\"\n  syntax:\n    content: public abstract bool SourceColumnNullMapping { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the source column is nullable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if it is not.\n  overload: System.Data.Common.DbParameter.SourceColumnNullMapping*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.SourceVersion\n  id: SourceVersion\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: SourceVersion\n  nameWithType: DbParameter.SourceVersion\n  fullName: System.Data.Common.DbParameter.SourceVersion\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref href=\"System.Data.DataRowVersion\"></xref> to use when you load <xref:System.Data.Common.DbParameter.Value*>.\n  remarks: Used by <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> during an <xref:System.Data.Common.DbDataAdapter.Update%2A> operation to determine whether the parameter value is set to `Current` or `Original`. This lets primary keys be updated. This property is set to the version of the <xref:System.Data.DataRow> used by the `DataRow.Item` property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object.\n  syntax:\n    content: public virtual System.Data.DataRowVersion SourceVersion { get; set; }\n    return:\n      type: System.Data.DataRowVersion\n      description: One of the <xref href=\"System.Data.DataRowVersion\"></xref> values. The default is <xref uid=\"langword_csharp_Current\" name=\"Current\" href=\"\"></xref>.\n  overload: System.Data.Common.DbParameter.SourceVersion*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The property is not set to one of the <xref href=\"System.Data.DataRowVersion\"></xref> values.\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  id: System#Data#IDbDataParameter#Precision\n  isEii: true\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: System.Data.IDbDataParameter.Precision\n  nameWithType: DbParameter.System.Data.IDbDataParameter.Precision\n  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Precision\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Indicates the precision of numeric parameters.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface.  \\n  \\n For more information, see <xref:System.Data.IDbDataParameter.Precision%2A?displayProperty=fullName>.\"\n  syntax:\n    content: byte System.Data.IDbDataParameter.Precision { get; set; }\n    return:\n      type: System.Byte\n      description: The maximum number of digits used to represent the <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref> property of a data provider <xref uid=\"langword_csharp_Parameter\" name=\"Parameter\" href=\"\"></xref> object. The default value is 0, which indicates that a data provider sets the precision for <xref uid=\"langword_csharp_Value\" name=\"Value\" href=\"\"></xref>.\n  overload: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  id: System#Data#IDbDataParameter#Scale\n  isEii: true\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: System.Data.IDbDataParameter.Scale\n  nameWithType: DbParameter.System.Data.IDbDataParameter.Scale\n  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Scale\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: For a description of this member, see &lt;xref:System.Data.IDbDataParameter.Scale%2A?displayProperty=fullName&gt;.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbParameter> instance is cast to an <xref:System.Data.IDbDataParameter> interface.  \\n  \\n For more information, see <xref:System.Data.IDbDataParameter.Scale%2A>.\"\n  syntax:\n    content: byte System.Data.IDbDataParameter.Scale { get; set; }\n    return:\n      type: System.Byte\n      description: The number of decimal places to which <xref href=\"System.Data.OleDb.OleDbParameter.Value\"></xref> is resolved. The default is 0.\n  overload: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbParameter.Value\n  id: Value\n  parent: System.Data.Common.DbParameter\n  langs:\n  - csharp\n  name: Value\n  nameWithType: DbParameter.Value\n  fullName: System.Data.Common.DbParameter.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the value of the parameter.\n  remarks: \"For input parameters, the value is bound to the <xref:System.Data.Common.DbCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.Common.DbCommand> and after the <xref:System.Data.Common.DbDataReader> is closed.  \\n  \\n When you send a null parameter value to the server, you must specify <xref:System.DBNull>, not null. The null value in the system is an empty object that has no value. <xref:System.DBNull> is used to represent null values.  \\n  \\n If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.  \\n  \\n The <xref:System.Data.Common.DbParameter.DbType%2A> property can be inferred by setting the Value.  \\n  \\n The Value property is overwritten by `DbDataAdapter.Update`.\"\n  syntax:\n    content: public abstract object Value { get; set; }\n    return:\n      type: System.Object\n      description: An <xref:System.Object> that is the value of the parameter. The default value is null.\n  overload: System.Data.Common.DbParameter.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Common.DbParameter.#ctor\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: DbParameter()\n  nameWithType: DbParameter.DbParameter()\n  fullName: System.Data.Common.DbParameter.DbParameter()\n- uid: System.Data.Common.DbParameter.DbType\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: DbType\n  nameWithType: DbParameter.DbType\n  fullName: System.Data.Common.DbParameter.DbType\n- uid: System.Data.DbType\n  parent: System.Data\n  isExternal: false\n  name: DbType\n  nameWithType: DbType\n  fullName: System.Data.DbType\n- uid: System.Data.Common.DbParameter.Direction\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Direction\n  nameWithType: DbParameter.Direction\n  fullName: System.Data.Common.DbParameter.Direction\n- uid: System.Data.ParameterDirection\n  parent: System.Data\n  isExternal: false\n  name: ParameterDirection\n  nameWithType: ParameterDirection\n  fullName: System.Data.ParameterDirection\n- uid: System.Data.Common.DbParameter.IsNullable\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: IsNullable\n  nameWithType: DbParameter.IsNullable\n  fullName: System.Data.Common.DbParameter.IsNullable\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.DbParameter.ParameterName\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: ParameterName\n  nameWithType: DbParameter.ParameterName\n  fullName: System.Data.Common.DbParameter.ParameterName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.DbParameter.Precision\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Precision\n  nameWithType: DbParameter.Precision\n  fullName: System.Data.Common.DbParameter.Precision\n- uid: System.Byte\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.Common.DbParameter.ResetDbType\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: ResetDbType()\n  nameWithType: DbParameter.ResetDbType()\n  fullName: System.Data.Common.DbParameter.ResetDbType()\n- uid: System.Data.Common.DbParameter.Scale\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Scale\n  nameWithType: DbParameter.Scale\n  fullName: System.Data.Common.DbParameter.Scale\n- uid: System.Data.Common.DbParameter.Size\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Size\n  nameWithType: DbParameter.Size\n  fullName: System.Data.Common.DbParameter.Size\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Common.DbParameter.SourceColumn\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: SourceColumn\n  nameWithType: DbParameter.SourceColumn\n  fullName: System.Data.Common.DbParameter.SourceColumn\n- uid: System.Data.Common.DbParameter.SourceColumnNullMapping\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: SourceColumnNullMapping\n  nameWithType: DbParameter.SourceColumnNullMapping\n  fullName: System.Data.Common.DbParameter.SourceColumnNullMapping\n- uid: System.Data.Common.DbParameter.SourceVersion\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: SourceVersion\n  nameWithType: DbParameter.SourceVersion\n  fullName: System.Data.Common.DbParameter.SourceVersion\n- uid: System.Data.DataRowVersion\n  parent: System.Data\n  isExternal: false\n  name: DataRowVersion\n  nameWithType: DataRowVersion\n  fullName: System.Data.DataRowVersion\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: System.Data.IDbDataParameter.Precision\n  nameWithType: DbParameter.System.Data.IDbDataParameter.Precision\n  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Precision\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: System.Data.IDbDataParameter.Scale\n  nameWithType: DbParameter.System.Data.IDbDataParameter.Scale\n  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Scale\n- uid: System.Data.Common.DbParameter.Value\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Value\n  nameWithType: DbParameter.Value\n  fullName: System.Data.Common.DbParameter.Value\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.DbParameter.#ctor*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: DbParameter\n  nameWithType: DbParameter.DbParameter\n- uid: System.Data.Common.DbParameter.DbType*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: DbType\n  nameWithType: DbParameter.DbType\n- uid: System.Data.Common.DbParameter.Direction*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Direction\n  nameWithType: DbParameter.Direction\n- uid: System.Data.Common.DbParameter.IsNullable*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: IsNullable\n  nameWithType: DbParameter.IsNullable\n- uid: System.Data.Common.DbParameter.ParameterName*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: ParameterName\n  nameWithType: DbParameter.ParameterName\n- uid: System.Data.Common.DbParameter.Precision*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Precision\n  nameWithType: DbParameter.Precision\n- uid: System.Data.Common.DbParameter.ResetDbType*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: ResetDbType\n  nameWithType: DbParameter.ResetDbType\n- uid: System.Data.Common.DbParameter.Scale*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Scale\n  nameWithType: DbParameter.Scale\n- uid: System.Data.Common.DbParameter.Size*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Size\n  nameWithType: DbParameter.Size\n- uid: System.Data.Common.DbParameter.SourceColumn*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: SourceColumn\n  nameWithType: DbParameter.SourceColumn\n- uid: System.Data.Common.DbParameter.SourceColumnNullMapping*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: SourceColumnNullMapping\n  nameWithType: DbParameter.SourceColumnNullMapping\n- uid: System.Data.Common.DbParameter.SourceVersion*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: SourceVersion\n  nameWithType: DbParameter.SourceVersion\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: System.Data.IDbDataParameter.Precision\n  nameWithType: DbParameter.System.Data.IDbDataParameter.Precision\n- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: System.Data.IDbDataParameter.Scale\n  nameWithType: DbParameter.System.Data.IDbDataParameter.Scale\n- uid: System.Data.Common.DbParameter.Value*\n  parent: System.Data.Common.DbParameter\n  isExternal: false\n  name: Value\n  nameWithType: DbParameter.Value\n"}