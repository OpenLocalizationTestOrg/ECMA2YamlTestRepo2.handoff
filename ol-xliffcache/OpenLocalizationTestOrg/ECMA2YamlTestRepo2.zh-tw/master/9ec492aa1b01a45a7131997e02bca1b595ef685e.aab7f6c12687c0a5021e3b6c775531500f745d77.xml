{"nodes":[{"pos":[1029,1091],"content":"Provides an interface to retrieve an assembly or type by name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an interface to retrieve an assembly or type by name.","pos":[0,62]}]},{"pos":[1103,1153],"content":"This service is used to load types at design time.","needQuote":true,"needEscape":true,"nodes":[{"content":"This service is used to load types at design time.","pos":[0,50]}]},{"pos":[2235,2263],"content":"Gets the requested assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the requested assembly.","pos":[0,28]}]},{"pos":[2465,2502],"content":"The name of the assembly to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the assembly to retrieve.","pos":[0,37]}]},{"pos":[2573,2706],"content":"An instance of the requested assembly, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no assembly can be located.","needQuote":true,"needEscape":true,"source":"An instance of the requested assembly, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no assembly can be located."},{"pos":[3395,3423],"content":"Gets the requested assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the requested assembly.","pos":[0,28]}]},{"pos":[3644,3681],"content":"The name of the assembly to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the assembly to retrieve.","pos":[0,37]}]},{"pos":[3751,4082],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method should throw an exception if the assembly cannot be located; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the assembly cannot be located.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly cannot be located."},{"pos":[4153,4286],"content":"An instance of the requested assembly, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no assembly can be located.","needQuote":true,"needEscape":true,"source":"An instance of the requested assembly, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no assembly can be located."},{"pos":[4951,5012],"content":"Gets the path to the file from which the assembly was loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the path to the file from which the assembly was loaded.","pos":[0,61]}]},{"pos":[5200,5225],"content":"The name of the assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the assembly.","pos":[0,25]}]},{"pos":[5283,5339],"content":"The path to the file from which the assembly was loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the file from which the assembly was loaded.","pos":[0,56]}]},{"pos":[5908,5945],"content":"Loads a type with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads a type with the specified name.","pos":[0,37]}]},{"pos":[6080,6244],"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[0,164],"nodes":[{"content":"The name of the type.","pos":[0,21]},{"content":"If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[22,164]}]}]},{"pos":[6300,6462],"content":"An instance of &lt;xref:System.Type&gt; that corresponds to the specified name, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no type can be found.","needQuote":true,"needEscape":true,"source":"An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no type can be found."},{"pos":[7075,7112],"content":"Loads a type with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads a type with the specified name.","pos":[0,37]}]},{"pos":[7124,7226],"content":"If the type cannot be loaded and the <ph id=\"ph1\">`throwOnError`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this will throw an exception.","needQuote":true,"needEscape":true,"source":"If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception."},{"pos":[7380,7544],"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[0,164],"nodes":[{"content":"The name of the type.","pos":[0,21]},{"content":"If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[22,164]}]}]},{"pos":[7614,7945],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method should throw an exception if the assembly cannot be located; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the assembly cannot be located.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly cannot be located."},{"pos":[8001,8163],"content":"An instance of &lt;xref:System.Type&gt; that corresponds to the specified name, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no type can be found.","needQuote":true,"needEscape":true,"source":"An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no type can be found."},{"pos":[8830,8867],"content":"Loads a type with the specified name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Loads a type with the specified name.","pos":[0,37]}]},{"pos":[8879,8981],"content":"If the type cannot be loaded and the <ph id=\"ph1\">`throwOnError`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this will throw an exception.","needQuote":true,"needEscape":true,"source":"If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception."},{"pos":[9152,9316],"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[0,164],"nodes":[{"content":"The name of the type.","pos":[0,21]},{"content":"If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.","pos":[22,164]}]}]},{"pos":[9386,9717],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this method should throw an exception if the assembly cannot be located; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, and this method returns <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the assembly cannot be located.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly cannot be located."},{"pos":[9785,9961],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to ignore case when searching for types; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to ignore case when searching for types; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10017,10179],"content":"An instance of &lt;xref:System.Type&gt; that corresponds to the specified name, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no type can be found.","needQuote":true,"needEscape":true,"source":"An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no type can be found."},{"pos":[10840,10883],"content":"Adds a reference to the specified assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a reference to the specified assembly.","pos":[0,43]}]},{"pos":[10895,11030],"content":"Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.","needQuote":true,"needEscape":true,"nodes":[{"content":"Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.","pos":[0,135]}]},{"pos":[11216,11298],"content":"An <xref:System.Reflection.AssemblyName> that indicates the assembly to reference.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Reflection.AssemblyName&gt; that indicates the assembly to reference.","pos":[0,82],"source":"An <xref:System.Reflection.AssemblyName> that indicates the assembly to reference."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ITypeResolutionService\n  id: ITypeResolutionService\n  children:\n  - System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  - System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  - System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  - System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  - System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  langs:\n  - csharp\n  name: ITypeResolutionService\n  nameWithType: ITypeResolutionService\n  fullName: System.ComponentModel.Design.ITypeResolutionService\n  type: Interface\n  summary: Provides an interface to retrieve an assembly or type by name.\n  remarks: This service is used to load types at design time.\n  example:\n  - \"The following example control provides an interface to call methods of the ITypeResolutionService from design mode.  \\n  \\n [!code-cs[ITypeResolutionServiceExample#1](~/add/codesnippet/csharp/t-system.componentmodel._143_1.cs)]\\n [!code-cpp[ITypeResolutionServiceExample#1](~/add/codesnippet/cpp/t-system.componentmodel._143_1.cpp)]\\n [!code-vb[ITypeResolutionServiceExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._143_1.vb)]\"\n  syntax:\n    content: public interface ITypeResolutionService\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  id: GetAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested assembly.\n  syntax:\n    content: public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly to retrieve.\n    return:\n      type: System.Reflection.Assembly\n      description: An instance of the requested assembly, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no assembly can be located.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  id: GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetAssembly(AssemblyName,Boolean)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName,Boolean)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the requested assembly.\n  syntax:\n    content: public System.Reflection.Assembly GetAssembly (System.Reflection.AssemblyName name, bool throwOnError);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly to retrieve.\n    - id: throwOnError\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly cannot be located.\n    return:\n      type: System.Reflection.Assembly\n      description: An instance of the requested assembly, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no assembly can be located.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  id: GetPathOfAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetPathOfAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Gets the path to the file from which the assembly was loaded.\n  syntax:\n    content: public string GetPathOfAssembly (System.Reflection.AssemblyName name);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly.\n    return:\n      type: System.String\n      description: The path to the file from which the assembly was loaded.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: ITypeResolutionService.GetType(String)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Loads a type with the specified name.\n  syntax:\n    content: public Type GetType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.\n    return:\n      type: System.Type\n      description: An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no type can be found.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  id: GetType(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetType(String,Boolean)\n  nameWithType: ITypeResolutionService.GetType(String,Boolean)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Loads a type with the specified name.\n  remarks: If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.\n  syntax:\n    content: public Type GetType (string name, bool throwOnError);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.\n    - id: throwOnError\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly cannot be located.\n    return:\n      type: System.Type\n      description: An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no type can be found.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  id: GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: GetType(String,Boolean,Boolean)\n  nameWithType: ITypeResolutionService.GetType(String,Boolean,Boolean)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Loads a type with the specified name.\n  remarks: If the type cannot be loaded and the `throwOnError` parameter is `true`, this will throw an exception.\n  syntax:\n    content: public Type GetType (string name, bool throwOnError, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.\n    - id: throwOnError\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this method should throw an exception if the assembly cannot be located; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, and this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the assembly cannot be located.\n    - id: ignoreCase\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to ignore case when searching for types; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    return:\n      type: System.Type\n      description: An instance of <xref:System.Type> that corresponds to the specified name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no type can be found.\n  overload: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  id: ReferenceAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  langs:\n  - csharp\n  name: ReferenceAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.ReferenceAssembly(AssemblyName)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(AssemblyName)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design\n  summary: Adds a reference to the specified assembly.\n  remarks: Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.\n  syntax:\n    content: public void ReferenceAssembly (System.Reflection.AssemblyName name);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: An <xref:System.Reflection.AssemblyName> that indicates the assembly to reference.\n  overload: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: true\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: true\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetAssembly(AssemblyName,Boolean)\n  nameWithType: ITypeResolutionService.GetAssembly(AssemblyName,Boolean)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetAssembly(AssemblyName,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetPathOfAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(AssemblyName)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType(String)\n  nameWithType: ITypeResolutionService.GetType(String)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType(String,Boolean)\n  nameWithType: ITypeResolutionService.GetType(String,Boolean)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean)\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType(String,Boolean,Boolean)\n  nameWithType: ITypeResolutionService.GetType(String,Boolean,Boolean)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.GetType(String,Boolean,Boolean)\n- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: ReferenceAssembly(AssemblyName)\n  nameWithType: ITypeResolutionService.ReferenceAssembly(AssemblyName)\n  fullName: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(AssemblyName)\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetAssembly*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetAssembly\n  nameWithType: ITypeResolutionService.GetAssembly\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetPathOfAssembly\n  nameWithType: ITypeResolutionService.GetPathOfAssembly\n- uid: System.ComponentModel.Design.ITypeResolutionService.GetType*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: GetType\n  nameWithType: ITypeResolutionService.GetType\n- uid: System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly*\n  parent: System.ComponentModel.Design.ITypeResolutionService\n  isExternal: false\n  name: ReferenceAssembly\n  nameWithType: ITypeResolutionService.ReferenceAssembly\n"}