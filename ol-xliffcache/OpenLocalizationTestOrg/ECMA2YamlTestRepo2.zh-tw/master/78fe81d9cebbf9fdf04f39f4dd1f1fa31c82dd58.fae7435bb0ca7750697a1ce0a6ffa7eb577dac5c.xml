{"nodes":[{"pos":[914,955],"content":"Represents the document type declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the document type declaration.","pos":[0,41]}]},{"pos":[967,1190],"content":"The XmlDocumentType class can be used to return information about a document type declaration. Use the <xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName> method to create an XmlDocumentType object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XmlDocumentType class can be used to return information about a document type declaration. Use the <xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName> method to create an XmlDocumentType object.","pos":[0,223],"nodes":[{"content":"The XmlDocumentType class can be used to return information about a document type declaration.","pos":[0,94]},{"content":"Use the &lt;xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName&gt; method to create an XmlDocumentType object.","pos":[95,223],"source":" Use the <xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName> method to create an XmlDocumentType object."}]}]},{"pos":[3871,3959],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlDocumentType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.XmlDocumentType\"></xref> class."},{"pos":[3971,4126],"content":"Do not instantiate an <xref:System.Xml.XmlDocumentType> directly; instead, use members such as <xref:System.Xml.XmlDocument.DocumentType%2A> to obtain one.","needQuote":true,"needEscape":true,"nodes":[{"content":"Do not instantiate an &lt;xref:System.Xml.XmlDocumentType&gt; directly; instead, use members such as &lt;xref:System.Xml.XmlDocument.DocumentType%2A&gt; to obtain one.","pos":[0,155],"source":"Do not instantiate an <xref:System.Xml.XmlDocumentType> directly; instead, use members such as <xref:System.Xml.XmlDocument.DocumentType%2A> to obtain one."}]},{"pos":[4352,4429],"content":"The qualified name; see the <xref:System.Xml.XmlDocumentType.Name*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The qualified name; see the &lt;xref:System.Xml.XmlDocumentType.Name*&gt; property.","pos":[0,77],"source":"The qualified name; see the <xref:System.Xml.XmlDocumentType.Name*> property."}]},{"pos":[4494,4578],"content":"The public identifier; see the <xref:System.Xml.XmlDocumentType.PublicId*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The public identifier; see the &lt;xref:System.Xml.XmlDocumentType.PublicId*&gt; property.","pos":[0,84],"source":"The public identifier; see the <xref:System.Xml.XmlDocumentType.PublicId*> property."}]},{"pos":[4643,4727],"content":"The system identifier; see the <xref:System.Xml.XmlDocumentType.SystemId*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The system identifier; see the &lt;xref:System.Xml.XmlDocumentType.SystemId*&gt; property.","pos":[0,84],"source":"The system identifier; see the <xref:System.Xml.XmlDocumentType.SystemId*> property."}]},{"pos":[4798,4890],"content":"The DTD internal subset; see the <xref:System.Xml.XmlDocumentType.InternalSubset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DTD internal subset; see the &lt;xref:System.Xml.XmlDocumentType.InternalSubset*&gt; property.","pos":[0,92],"source":"The DTD internal subset; see the <xref:System.Xml.XmlDocumentType.InternalSubset*> property."}]},{"pos":[4959,4979],"content":"The parent document.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parent document.","pos":[0,20]}]},{"pos":[5430,5463],"content":"Creates a duplicate of this node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a duplicate of this node.","pos":[0,33]}]},{"pos":[5476,5746],"content":"This method serves as a copy constructor for nodes. The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).       To see how this method behaves with other node types, see <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method serves as a copy constructor for nodes.","pos":[0,51]},{"content":"The cloned node has no parent (&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt; returns <ph id=\"ph1\">`null`</ph>).","pos":[52,139],"source":" The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`)."},{"content":"To see how this method behaves with other node types, see &lt;xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName&gt;.","pos":[146,268],"source":"       To see how this method behaves with other node types, see <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>."}]},{"pos":[5906,6226],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to recursively clone the subtree under the specified node; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to clone only the node itself.","pos":[0,213],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself."},{"content":"For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.","pos":[214,320]}]},{"pos":[6289,6305],"content":"The cloned node.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cloned node.","pos":[0,16]}]},{"pos":[6698,6811],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlEntity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes declared in the document type declaration.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Xml.XmlEntity\"></xref> nodes declared in the document type declaration."},{"pos":[6823,7080],"content":"The order in which the entities are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The order in which the entities are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.","pos":[0,257],"nodes":[{"content":"The order in which the entities are returned is not based on the order in which these items may appear in the document.","pos":[0,119]},{"content":"The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.","pos":[120,257]}]}]},{"pos":[7743,7996],"content":"An <xref href=\"System.Xml.XmlNamedNodeMap\"></xref> containing the <xref uid=\"langword_csharp_XmlEntity\" name=\"XmlEntity\" href=\"\"></xref> nodes. The returned <xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"></xref> is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNamedNodeMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlEntity\" name=\"XmlEntity\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> nodes.","pos":[0,143],"source":"An <xref href=\"System.Xml.XmlNamedNodeMap\"></xref> containing the <xref uid=\"langword_csharp_XmlEntity\" name=\"XmlEntity\" href=\"\"></xref> nodes."},{"content":"The returned <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","pos":[144,253],"source":" The returned <xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"></xref> is read-only."}]},{"pos":[8418,8514],"content":"Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.","pos":[0,96]}]},{"pos":[9103,9204],"content":"The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.","pos":[0,101],"nodes":[{"content":"The DTD internal subset on the DOCTYPE.","pos":[0,39]},{"content":"If there is no DTD internal subset, String.Empty is returned.","pos":[40,101]}]}]},{"pos":[9612,9666],"content":"Gets a value indicating whether the node is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the node is read-only.","pos":[0,54]}]},{"pos":[9679,10161],"content":"A read-only node is one whose properties, attributes, or children cannot be changed. However, you can remove a read-only node from the tree and insert it somewhere else.       You can remove a `XmlDocumentType` from a document and reinsert it back into the document as long as the document does not have an element node. Once a document has a root element, its `XmlDocumentType` cannot be changed.       This property is a Microsoft extension to the Document Object Model (DOM).","needQuote":false,"needEscape":true,"nodes":[{"content":"A read-only node is one whose properties, attributes, or children cannot be changed.","pos":[0,84]},{"content":"However, you can remove a read-only node from the tree and insert it somewhere else.","pos":[85,169]},{"content":"You can remove a <ph id=\"ph1\">`XmlDocumentType`</ph> from a document and reinsert it back into the document as long as the document does not have an element node.","pos":[176,320],"source":"       You can remove a `XmlDocumentType` from a document and reinsert it back into the document as long as the document does not have an element node."},{"content":"Once a document has a root element, its <ph id=\"ph1\">`XmlDocumentType`</ph> cannot be changed.","pos":[321,397],"source":" Once a document has a root element, its `XmlDocumentType` cannot be changed."},{"content":"This property is a Microsoft extension to the Document Object Model (DOM).","pos":[404,478]}]},{"pos":[10763,11082],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the node is read-only; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.       Because DocumentType nodes are read-only, this property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the node is read-only; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,160],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the node is read-only; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Because DocumentType nodes are read-only, this property always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,299],"source":"       Because DocumentType nodes are read-only, this property always returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[11482,11514],"content":"Gets the local name of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the local name of the node.","pos":[0,32]}]},{"pos":[11637,11713],"content":"For DocumentType nodes, this property returns the name of the document type.","needQuote":true,"needEscape":true,"nodes":[{"content":"For DocumentType nodes, this property returns the name of the document type.","pos":[0,76]}]},{"pos":[12086,12122],"content":"Gets the qualified name of the node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the qualified name of the node.","pos":[0,36]}]},{"pos":[12710,12786],"content":"For DocumentType nodes, this property returns the name of the document type.","needQuote":true,"needEscape":true,"nodes":[{"content":"For DocumentType nodes, this property returns the name of the document type.","pos":[0,76]}]},{"pos":[13174,13208],"content":"Gets the type of the current node.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the current node.","pos":[0,34]}]},{"pos":[13355,13418],"content":"For DocumentType nodes, this value is XmlNodeType.DocumentType.","needQuote":true,"needEscape":true,"nodes":[{"content":"For DocumentType nodes, this value is XmlNodeType.DocumentType.","pos":[0,63]}]},{"pos":[13815,13929],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNotation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes present in the document type declaration.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Xml.XmlNotation\"></xref> nodes present in the document type declaration."},{"pos":[13941,14199],"content":"The order in which the notations are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The order in which the notations are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.","pos":[0,258],"nodes":[{"content":"The order in which the notations are returned is not based on the order in which these items may appear in the document.","pos":[0,120]},{"content":"The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.","pos":[121,258]}]}]},{"pos":[14872,15129],"content":"An <xref href=\"System.Xml.XmlNamedNodeMap\"></xref> containing the <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes. The returned <xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"></xref> is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.XmlNamedNodeMap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> nodes.","pos":[0,147],"source":"An <xref href=\"System.Xml.XmlNamedNodeMap\"></xref> containing the <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes."},{"content":"The returned <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","pos":[148,257],"source":" The returned <xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"></xref> is read-only."}]},{"pos":[15522,15589],"content":"Gets the value of the public identifier on the DOCTYPE declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the public identifier on the DOCTYPE declaration.","pos":[0,67]}]},{"pos":[15702,15847],"content":"The public identifier on the DOCTYPE. If there is no public identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The public identifier on the DOCTYPE.","pos":[0,37]},{"content":"If there is no public identifier, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[38,145],"source":" If there is no public identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[16239,16306],"content":"Gets the value of the system identifier on the DOCTYPE declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the system identifier on the DOCTYPE declaration.","pos":[0,67]}]},{"pos":[16419,16564],"content":"The system identifier on the DOCTYPE. If there is no system identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The system identifier on the DOCTYPE.","pos":[0,37]},{"content":"If there is no system identifier, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[38,145],"source":" If there is no system identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned."}]},{"pos":[17061,17262],"content":"Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>. For <xref uid=\"langword_csharp_XmlDocumentType\" name=\"XmlDocumentType\" href=\"\"></xref> nodes, this method has no effect.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves all the children of the node to the specified &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,80],"source":"Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>."},{"content":"For <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlDocumentType\" name=\"XmlDocumentType\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> nodes, this method has no effect.","pos":[81,201],"source":" For <xref uid=\"langword_csharp_XmlDocumentType\" name=\"XmlDocumentType\" href=\"\"></xref> nodes, this method has no effect."}]},{"pos":[17428,17529],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which you want to save.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save."},{"pos":[17997,18057],"content":"Saves the node to the specified <xref:System.Xml.XmlWriter>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the node to the specified &lt;xref:System.Xml.XmlWriter&gt;.","pos":[0,60],"source":"Saves the node to the specified <xref:System.Xml.XmlWriter>."}]},{"pos":[18216,18317],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to which you want to save.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlDocumentType\n  id: XmlDocumentType\n  children:\n  - System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)\n  - System.Xml.XmlDocumentType.CloneNode(System.Boolean)\n  - System.Xml.XmlDocumentType.Entities\n  - System.Xml.XmlDocumentType.InternalSubset\n  - System.Xml.XmlDocumentType.IsReadOnly\n  - System.Xml.XmlDocumentType.LocalName\n  - System.Xml.XmlDocumentType.Name\n  - System.Xml.XmlDocumentType.NodeType\n  - System.Xml.XmlDocumentType.Notations\n  - System.Xml.XmlDocumentType.PublicId\n  - System.Xml.XmlDocumentType.SystemId\n  - System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  name: XmlDocumentType\n  nameWithType: XmlDocumentType\n  fullName: System.Xml.XmlDocumentType\n  type: Class\n  summary: Represents the document type declaration.\n  remarks: The XmlDocumentType class can be used to return information about a document type declaration. Use the <xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName> method to create an XmlDocumentType object.\n  syntax:\n    content: 'public class XmlDocumentType : System.Xml.XmlLinkedNode'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  - System.Xml.XmlLinkedNode\n  implements: []\n  inheritedMembers:\n  - System.Xml.XmlLinkedNode.NextSibling\n  - System.Xml.XmlLinkedNode.PreviousSibling\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.Clone\n  - System.Xml.XmlNode.CreateNavigator\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.InnerXml\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.ParentNode\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.PreviousText\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.SchemaInfo\n  - System.Xml.XmlNode.SelectNodes(System.String)\n  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.SelectSingleNode(System.String)\n  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Xml.XmlNode.System#ICloneable#Clone\n  - System.Xml.XmlNode.Value\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)\n  id: '#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)'\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: XmlDocumentType(String,String,String,String,XmlDocument)\n  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)\n  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlDocumentType\"></xref> class.\n  remarks: Do not instantiate an <xref:System.Xml.XmlDocumentType> directly; instead, use members such as <xref:System.Xml.XmlDocument.DocumentType%2A> to obtain one.\n  syntax:\n    content: protected XmlDocumentType (string name, string publicId, string systemId, string internalSubset, System.Xml.XmlDocument doc);\n    parameters:\n    - id: name\n      type: System.String\n      description: The qualified name; see the <xref:System.Xml.XmlDocumentType.Name*> property.\n    - id: publicId\n      type: System.String\n      description: The public identifier; see the <xref:System.Xml.XmlDocumentType.PublicId*> property.\n    - id: systemId\n      type: System.String\n      description: The system identifier; see the <xref:System.Xml.XmlDocumentType.SystemId*> property.\n    - id: internalSubset\n      type: System.String\n      description: The DTD internal subset; see the <xref:System.Xml.XmlDocumentType.InternalSubset*> property.\n    - id: doc\n      type: System.Xml.XmlDocument\n      description: The parent document.\n  overload: System.Xml.XmlDocumentType.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: CloneNode(Boolean)\n  nameWithType: XmlDocumentType.CloneNode(Boolean)\n  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Creates a duplicate of this node.\n  remarks: \"This method serves as a copy constructor for nodes. The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`).  \\n  \\n To see how this method behaves with other node types, see <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public override System.Xml.XmlNode CloneNode (bool deep);\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to recursively clone the subtree under the specified node; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.\n    return:\n      type: System.Xml.XmlNode\n      description: The cloned node.\n  overload: System.Xml.XmlDocumentType.CloneNode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.Entities\n  id: Entities\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: Entities\n  nameWithType: XmlDocumentType.Entities\n  fullName: System.Xml.XmlDocumentType.Entities\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the collection of <xref href=\"System.Xml.XmlEntity\"></xref> nodes declared in the document type declaration.\n  remarks: The order in which the entities are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.\n  example:\n  - \"The following example displays information about the entities declared in the XML document.  \\n  \\n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_1_1.cs)]\\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_1_1.cpp)]\\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_1_1.vb)]  \\n  \\n The example uses the file `doment.xml` as input.  \\n  \\n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmldocument_1_2.xml)]\"\n  syntax:\n    content: public System.Xml.XmlNamedNodeMap Entities { get; }\n    return:\n      type: System.Xml.XmlNamedNodeMap\n      description: An <xref href=\"System.Xml.XmlNamedNodeMap\"></xref> containing the <xref uid=\"langword_csharp_XmlEntity\" name=\"XmlEntity\" href=\"\"></xref> nodes. The returned <xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"></xref> is read-only.\n  overload: System.Xml.XmlDocumentType.Entities*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.InternalSubset\n  id: InternalSubset\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: InternalSubset\n  nameWithType: XmlDocumentType.InternalSubset\n  fullName: System.Xml.XmlDocumentType.InternalSubset\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.\n  remarks: ''\n  example:\n  - \"The following example displays information about the DocumentType node.  \\n  \\n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_3_1.cpp)]\\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_3_1.cs)]\\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_3_1.vb)]\"\n  syntax:\n    content: public string InternalSubset { get; }\n    return:\n      type: System.String\n      description: The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.\n  overload: System.Xml.XmlDocumentType.InternalSubset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.IsReadOnly\n  id: IsReadOnly\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XmlDocumentType.IsReadOnly\n  fullName: System.Xml.XmlDocumentType.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets a value indicating whether the node is read-only.\n  remarks: \"A read-only node is one whose properties, attributes, or children cannot be changed. However, you can remove a read-only node from the tree and insert it somewhere else.  \\n  \\n You can remove a `XmlDocumentType` from a document and reinsert it back into the document as long as the document does not have an element node. Once a document has a root element, its `XmlDocumentType` cannot be changed.  \\n  \\n This property is a Microsoft extension to the Document Object Model (DOM).\"\n  example:\n  - \"The following example displays information about the DocumentType node.  \\n  \\n [!code-cpp[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_12_1.cpp)]\\n [!code-vb[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_12_1.vb)]\\n [!code-cs[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_12_1.cs)]\"\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: \"<xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref> if the node is read-only; otherwise <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>.  \\n  \\n Because DocumentType nodes are read-only, this property always returns <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>.\"\n  overload: System.Xml.XmlDocumentType.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.LocalName\n  id: LocalName\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: LocalName\n  nameWithType: XmlDocumentType.LocalName\n  fullName: System.Xml.XmlDocumentType.LocalName\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the local name of the node.\n  syntax:\n    content: public override string LocalName { get; }\n    return:\n      type: System.String\n      description: For DocumentType nodes, this property returns the name of the document type.\n  overload: System.Xml.XmlDocumentType.LocalName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.Name\n  id: Name\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XmlDocumentType.Name\n  fullName: System.Xml.XmlDocumentType.Name\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the qualified name of the node.\n  remarks: ''\n  example:\n  - \"The following example displays information about the DocumentType node.  \\n  \\n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_5_1.cpp)]\\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_5_1.cs)]\\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_5_1.vb)]\"\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: For DocumentType nodes, this property returns the name of the document type.\n  overload: System.Xml.XmlDocumentType.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.NodeType\n  id: NodeType\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: XmlDocumentType.NodeType\n  fullName: System.Xml.XmlDocumentType.NodeType\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the type of the current node.\n  syntax:\n    content: public override System.Xml.XmlNodeType NodeType { get; }\n    return:\n      type: System.Xml.XmlNodeType\n      description: For DocumentType nodes, this value is XmlNodeType.DocumentType.\n  overload: System.Xml.XmlDocumentType.NodeType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.Notations\n  id: Notations\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: Notations\n  nameWithType: XmlDocumentType.Notations\n  fullName: System.Xml.XmlDocumentType.Notations\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the collection of <xref href=\"System.Xml.XmlNotation\"></xref> nodes present in the document type declaration.\n  remarks: The order in which the notations are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.\n  example:\n  - \"The following example displays information about the notations declared in the XML document.  \\n  \\n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_0_1.cs)]\\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_0_1.cpp)]\\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_0_1.vb)]  \\n  \\n The example uses the file `doment.xml` as input.  \\n  \\n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmldocument_0_2.xml)]\"\n  syntax:\n    content: public System.Xml.XmlNamedNodeMap Notations { get; }\n    return:\n      type: System.Xml.XmlNamedNodeMap\n      description: An <xref href=\"System.Xml.XmlNamedNodeMap\"></xref> containing the <xref uid=\"langword_csharp_XmlNotation\" name=\"XmlNotation\" href=\"\"></xref> nodes. The returned <xref uid=\"langword_csharp_XmlNamedNodeMap\" name=\"XmlNamedNodeMap\" href=\"\"></xref> is read-only.\n  overload: System.Xml.XmlDocumentType.Notations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.PublicId\n  id: PublicId\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: PublicId\n  nameWithType: XmlDocumentType.PublicId\n  fullName: System.Xml.XmlDocumentType.PublicId\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the public identifier on the DOCTYPE declaration.\n  syntax:\n    content: public string PublicId { get; }\n    return:\n      type: System.String\n      description: The public identifier on the DOCTYPE. If there is no public identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Xml.XmlDocumentType.PublicId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.SystemId\n  id: SystemId\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: SystemId\n  nameWithType: XmlDocumentType.SystemId\n  fullName: System.Xml.XmlDocumentType.SystemId\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Gets the value of the system identifier on the DOCTYPE declaration.\n  syntax:\n    content: public string SystemId { get; }\n    return:\n      type: System.String\n      description: The system identifier on the DOCTYPE. If there is no system identifier, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> is returned.\n  overload: System.Xml.XmlDocumentType.SystemId*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>. For <xref uid=\"langword_csharp_XmlDocumentType\" name=\"XmlDocumentType\" href=\"\"></xref> nodes, this method has no effect.\n  syntax:\n    content: public override void WriteContentTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save.\n  overload: System.Xml.XmlDocumentType.WriteContentTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlDocumentType\n  langs:\n  - csharp\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlDocumentType.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Xml\n  namespace: System.Xml\n  summary: Saves the node to the specified <xref:System.Xml.XmlWriter>.\n  syntax:\n    content: public override void WriteTo (System.Xml.XmlWriter w);\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: The <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref> to which you want to save.\n  overload: System.Xml.XmlDocumentType.WriteTo*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: System.Xml.XmlLinkedNode\n- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: XmlDocumentType(String,String,String,String,XmlDocument)\n  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)\n  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: CloneNode(Boolean)\n  nameWithType: XmlDocumentType.CloneNode(Boolean)\n  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  nameWithType: XmlNode\n  fullName: System.Xml.XmlNode\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlDocumentType.Entities\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: Entities\n  nameWithType: XmlDocumentType.Entities\n  fullName: System.Xml.XmlDocumentType.Entities\n- uid: System.Xml.XmlNamedNodeMap\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamedNodeMap\n  nameWithType: XmlNamedNodeMap\n  fullName: System.Xml.XmlNamedNodeMap\n- uid: System.Xml.XmlDocumentType.InternalSubset\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: InternalSubset\n  nameWithType: XmlDocumentType.InternalSubset\n  fullName: System.Xml.XmlDocumentType.InternalSubset\n- uid: System.Xml.XmlDocumentType.IsReadOnly\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XmlDocumentType.IsReadOnly\n  fullName: System.Xml.XmlDocumentType.IsReadOnly\n- uid: System.Xml.XmlDocumentType.LocalName\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlDocumentType.LocalName\n  fullName: System.Xml.XmlDocumentType.LocalName\n- uid: System.Xml.XmlDocumentType.Name\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: Name\n  nameWithType: XmlDocumentType.Name\n  fullName: System.Xml.XmlDocumentType.Name\n- uid: System.Xml.XmlDocumentType.NodeType\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlDocumentType.NodeType\n  fullName: System.Xml.XmlDocumentType.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: true\n  name: XmlNodeType\n  nameWithType: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n- uid: System.Xml.XmlDocumentType.Notations\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: Notations\n  nameWithType: XmlDocumentType.Notations\n  fullName: System.Xml.XmlDocumentType.Notations\n- uid: System.Xml.XmlDocumentType.PublicId\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: PublicId\n  nameWithType: XmlDocumentType.PublicId\n  fullName: System.Xml.XmlDocumentType.PublicId\n- uid: System.Xml.XmlDocumentType.SystemId\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: SystemId\n  nameWithType: XmlDocumentType.SystemId\n  fullName: System.Xml.XmlDocumentType.SystemId\n- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: WriteContentTo(XmlWriter)\n  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: WriteTo(XmlWriter)\n  nameWithType: XmlDocumentType.WriteTo(XmlWriter)\n  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)\n- uid: System.Xml.XmlDocumentType.#ctor*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: XmlDocumentType\n  nameWithType: XmlDocumentType.XmlDocumentType\n- uid: System.Xml.XmlDocumentType.CloneNode*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: CloneNode\n  nameWithType: XmlDocumentType.CloneNode\n- uid: System.Xml.XmlDocumentType.Entities*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: Entities\n  nameWithType: XmlDocumentType.Entities\n- uid: System.Xml.XmlDocumentType.InternalSubset*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: InternalSubset\n  nameWithType: XmlDocumentType.InternalSubset\n- uid: System.Xml.XmlDocumentType.IsReadOnly*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XmlDocumentType.IsReadOnly\n- uid: System.Xml.XmlDocumentType.LocalName*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: LocalName\n  nameWithType: XmlDocumentType.LocalName\n- uid: System.Xml.XmlDocumentType.Name*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: Name\n  nameWithType: XmlDocumentType.Name\n- uid: System.Xml.XmlDocumentType.NodeType*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: NodeType\n  nameWithType: XmlDocumentType.NodeType\n- uid: System.Xml.XmlDocumentType.Notations*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: Notations\n  nameWithType: XmlDocumentType.Notations\n- uid: System.Xml.XmlDocumentType.PublicId*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: PublicId\n  nameWithType: XmlDocumentType.PublicId\n- uid: System.Xml.XmlDocumentType.SystemId*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: SystemId\n  nameWithType: XmlDocumentType.SystemId\n- uid: System.Xml.XmlDocumentType.WriteContentTo*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: WriteContentTo\n  nameWithType: XmlDocumentType.WriteContentTo\n- uid: System.Xml.XmlDocumentType.WriteTo*\n  parent: System.Xml.XmlDocumentType\n  isExternal: false\n  name: WriteTo\n  nameWithType: XmlDocumentType.WriteTo\n"}