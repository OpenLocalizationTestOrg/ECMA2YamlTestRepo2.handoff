{"nodes":[{"pos":[1575,1678],"content":"Represents widths in a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlSizeDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents widths in a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlSizeDefinition\"></xref>."},{"pos":[2575,2724],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with an absolute value in pixels.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure with an absolute value in pixels."},{"pos":[2870,2923],"content":"The absolute pixel value to initialize the length to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The absolute pixel value to initialize the length to.","pos":[0,53]}]},{"pos":[3102,3177],"content":"<ph id=\"ph1\">&lt;code&gt;pixels&lt;/code&gt;</ph> is <ph id=\"ph2\">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>.","needQuote":true,"needEscape":true,"source":"<code>pixels</code> is &lt;xref:System.Double?displayProperty=fullName&gt;."},{"pos":[3907,4064],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the specified value and length unit.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure with the specified value and length unit."},{"pos":[4273,4307],"content":"The requested size of the element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested size of the element.","pos":[0,34]}]},{"pos":[4413,4490],"content":"The type that is used to determine how the size of the element is calculated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type that is used to determine how the size of the element is calculated.","pos":[0,77]}]},{"pos":[4670,5355],"content":"<code>value</code> is &lt;xref:System.Double?displayProperty=fullName&gt;.       -or-       <code>type</code> is <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref> and <code>value</code> is <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>.       -or-       <code>type</code> is not <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>, <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>, <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>, or <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph>.","pos":[0,74],"source":"<code>value</code> is &lt;xref:System.Double?displayProperty=fullName&gt;."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Double.NegativeInfinity&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.","pos":[81,298],"source":"       -or-       <code>type</code> is <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref> and <code>value</code> is <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>, or <bpt id=\"p4\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","pos":[305,667],"source":"       -or-       <code>type</code> is not <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>, <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>, <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>, or <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>."}]},{"pos":[5778,5918],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that represents the standard automatic sizing mode.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure that represents the standard automatic sizing mode."},{"pos":[6115,6250],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that represents the standard automatic sizing mode.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure that represents the standard automatic sizing mode."},{"pos":[6820,6956],"content":"Determines whether the specified object is equal to the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified object is equal to the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>."},{"pos":[7097,7143],"content":"The object to compare to the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare to the current instance.","pos":[0,46]}]},{"pos":[7202,7562],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the same value and sizing mode as the current <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> with the same value and sizing mode as the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8247,8448],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is equal to the current <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> is equal to the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>."},{"pos":[8665,8776],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to compare to the current instance.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> to compare to the current instance."},{"pos":[8835,9195],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified object is a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the same value and sizing mode as the current <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> with the same value and sizing mode as the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9744,9841],"content":"Gets a hash code for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a hash code for the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>."},{"pos":[9976,10076],"content":"A hash code for the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A hash code for the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>."},{"pos":[10621,10726],"content":"Gets a value that indicates whether this instance sizes elements based on a fixed pixel or logical value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this instance sizes elements based on a fixed pixel or logical value.","pos":[0,105]}]},{"pos":[10840,11252],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref> or <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11776,11855],"content":"Gets a value that indicates whether this instance automatically sizes elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this instance automatically sizes elements.","pos":[0,79]}]},{"pos":[11965,12294],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12814,12943],"content":"Gets a value that indicates whether this instance automatically sizes elements based on a weighted proportion of available space.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether this instance automatically sizes elements based on a weighted proportion of available space.","pos":[0,129]}]},{"pos":[13053,13382],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14256,14365],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures for equality.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structures for equality."},{"pos":[14658,14760],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare."},{"pos":[14861,14964],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare."},{"pos":[15023,15288],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances have the same value and sizing mode; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instances have the same value and sizing mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16177,16313],"content":"Compares two <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Compares two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structures to determine whether they are not equal."},{"pos":[16608,16710],"content":"The first <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to compare.","needQuote":true,"needEscape":true,"source":"The first <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare."},{"pos":[16811,16914],"content":"The second <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to compare.","needQuote":true,"needEscape":true,"source":"The second <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare."},{"pos":[16973,17244],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances do not have the same value or sizing mode; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instances do not have the same value or sizing mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17876,17958],"content":"Gets the type that is used to determine how the size of the element is calculated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type that is used to determine how the size of the element is calculated.","pos":[0,82]}]},{"pos":[18187,18274],"content":"One of the enumeration values that specifies how the size of the element is calculated.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies how the size of the element is calculated.","pos":[0,87]}]},{"pos":[18829,18881],"content":"Returns a string that represents the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string that represents the current object.","pos":[0,52]}]},{"pos":[19017,19060],"content":"A string that represent the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represent the current object.","pos":[0,43]}]},{"pos":[19577,19707],"content":"Gets the absolute value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in pixels or logical units.","needQuote":true,"needEscape":true,"source":"Gets the absolute value of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> in pixels or logical units."},{"pos":[19817,20143],"content":"The absolute value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in pixels or logical units, or 1.0 if the &lt;xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*&gt; property is set to <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The absolute value of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> in pixels or logical units, or 1.0 if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength\n  id: RibbonControlLength\n  children:\n  - System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)\n  - System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)\n  - System.Windows.Controls.Ribbon.RibbonControlLength.Auto\n  - System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)\n  - System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)\n  - System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode\n  - System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute\n  - System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto\n  - System.Windows.Controls.Ribbon.RibbonControlLength.IsStar\n  - System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  - System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  - System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType\n  - System.Windows.Controls.Ribbon.RibbonControlLength.ToString\n  - System.Windows.Controls.Ribbon.RibbonControlLength.Value\n  langs:\n  - csharp\n  name: RibbonControlLength\n  nameWithType: RibbonControlLength\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength\n  type: Struct\n  summary: Represents widths in a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlSizeDefinition\"></xref>.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.Ribbon.RibbonControlLengthConverter))]\n\n      public struct RibbonControlLength : IEquatable<System.Windows.Controls.Ribbon.RibbonControlLength>\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.Controls.Ribbon.RibbonControlLength>\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: RibbonControlLength(Double)\n  nameWithType: RibbonControlLength.RibbonControlLength(Double)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLength(Double)\n  type: Constructor\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure with an absolute value in pixels.\n  syntax:\n    content: public RibbonControlLength (double pixels);\n    parameters:\n    - id: pixels\n      type: System.Double\n      description: The absolute pixel value to initialize the length to.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>pixels</code> is &lt;xref:System.Double?displayProperty=fullName&gt;.\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)\n  id: '#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)'\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: RibbonControlLength(Double,RibbonControlLengthUnitType)\n  nameWithType: RibbonControlLength.RibbonControlLength(Double,RibbonControlLengthUnitType)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLength(Double,RibbonControlLengthUnitType)\n  type: Constructor\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure with the specified value and length unit.\n  syntax:\n    content: public RibbonControlLength (double value, System.Windows.Controls.Ribbon.RibbonControlLengthUnitType type);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The requested size of the element.\n    - id: type\n      type: System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\n      description: The type that is used to determine how the size of the element is calculated.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>value</code> is &lt;xref:System.Double?displayProperty=fullName&gt;.  \\n  \\n -or-  \\n  \\n <code>type</code> is <xref href=\\\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\\\"></xref> and <code>value</code> is <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>.  \\n  \\n -or-  \\n  \\n <code>type</code> is not <xref href=\\\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\\\"></xref>, <xref href=\\\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\\\"></xref>, <xref href=\\\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\\\"></xref>, or <xref href=\\\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Auto\n  id: Auto\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: Auto\n  nameWithType: RibbonControlLength.Auto\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Auto\n  type: Property\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure that represents the standard automatic sizing mode.\n  syntax:\n    content: public static System.Windows.Controls.Ribbon.RibbonControlLength Auto { get; }\n    return:\n      type: System.Windows.Controls.Ribbon.RibbonControlLength\n      description: A <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structure that represents the standard automatic sizing mode.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.Auto*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: RibbonControlLength.Equals(Object)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Determines whether the specified object is equal to the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> with the same value and sizing mode as the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)\n  id: Equals(System.Windows.Controls.Ribbon.RibbonControlLength)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: Equals(RibbonControlLength)\n  nameWithType: RibbonControlLength.Equals(RibbonControlLength)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(RibbonControlLength)\n  type: Method\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Determines whether the specified <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> is equal to the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>.\n  syntax:\n    content: public bool Equals (System.Windows.Controls.Ribbon.RibbonControlLength other);\n    parameters:\n    - id: other\n      type: System.Windows.Controls.Ribbon.RibbonControlLength\n      description: The <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified object is a <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> with the same value and sizing mode as the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: RibbonControlLength.GetHashCode()\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets a hash code for the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute\n  id: IsAbsolute\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: IsAbsolute\n  nameWithType: RibbonControlLength.IsAbsolute\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute\n  type: Property\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets a value that indicates whether this instance sizes elements based on a fixed pixel or logical value.\n  syntax:\n    content: public bool IsAbsolute { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref> or <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto\n  id: IsAuto\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: IsAuto\n  nameWithType: RibbonControlLength.IsAuto\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto\n  type: Property\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets a value that indicates whether this instance automatically sizes elements.\n  syntax:\n    content: public bool IsAuto { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsStar\n  id: IsStar\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: IsStar\n  nameWithType: RibbonControlLength.IsStar\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.IsStar\n  type: Property\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets a value that indicates whether this instance automatically sizes elements based on a weighted proportion of available space.\n  syntax:\n    content: public bool IsStar { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.IsStar*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  id: op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: op_Equality(RibbonControlLength,RibbonControlLength)\n  nameWithType: RibbonControlLength.op_Equality(RibbonControlLength,RibbonControlLength)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(RibbonControlLength,RibbonControlLength)\n  type: Operator\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Compares two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structures for equality.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Controls.Ribbon.RibbonControlLength length1, System.Windows.Controls.Ribbon.RibbonControlLength length2);\n    parameters:\n    - id: length1\n      type: System.Windows.Controls.Ribbon.RibbonControlLength\n      description: The first <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare.\n    - id: length2\n      type: System.Windows.Controls.Ribbon.RibbonControlLength\n      description: The second <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instances have the same value and sizing mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  id: op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: op_Inequality(RibbonControlLength,RibbonControlLength)\n  nameWithType: RibbonControlLength.op_Inequality(RibbonControlLength,RibbonControlLength)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(RibbonControlLength,RibbonControlLength)\n  type: Operator\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Compares two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> structures to determine whether they are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Controls.Ribbon.RibbonControlLength length1, System.Windows.Controls.Ribbon.RibbonControlLength length2);\n    parameters:\n    - id: length1\n      type: System.Windows.Controls.Ribbon.RibbonControlLength\n      description: The first <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare.\n    - id: length2\n      type: System.Windows.Controls.Ribbon.RibbonControlLength\n      description: The second <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instance to compare.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> instances do not have the same value or sizing mode; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType\n  id: RibbonControlLengthUnitType\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: RibbonControlLengthUnitType\n  nameWithType: RibbonControlLength.RibbonControlLengthUnitType\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType\n  type: Property\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets the type that is used to determine how the size of the element is calculated.\n  syntax:\n    content: public System.Windows.Controls.Ribbon.RibbonControlLengthUnitType RibbonControlLengthUnitType { get; }\n    return:\n      type: System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\n      description: One of the enumeration values that specifies how the size of the element is calculated.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.ToString\n  id: ToString\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: RibbonControlLength.ToString()\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Returns a string that represents the current object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represent the current object.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Value\n  id: Value\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  langs:\n  - csharp\n  name: Value\n  nameWithType: RibbonControlLength.Value\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Value\n  type: Property\n  assemblies:\n  - System.Windows.Controls.Ribbon\n  namespace: System.Windows.Controls.Ribbon\n  summary: Gets the absolute value of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> in pixels or logical units.\n  syntax:\n    content: public double Value { get; }\n    return:\n      type: System.Double\n      description: The absolute value of the <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLength\"></xref> in pixels or logical units, or 1.0 if the <xref:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*> property is set to <xref href=\"System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\"></xref>.\n  overload: System.Windows.Controls.Ribbon.RibbonControlLength.Value*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: RibbonControlLength(Double)\n  nameWithType: RibbonControlLength.RibbonControlLength(Double)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLength(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: RibbonControlLength(Double,RibbonControlLengthUnitType)\n  nameWithType: RibbonControlLength.RibbonControlLength(Double,RibbonControlLengthUnitType)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLength(Double,RibbonControlLengthUnitType)\n- uid: System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\n  parent: System.Windows.Controls.Ribbon\n  isExternal: false\n  name: RibbonControlLengthUnitType\n  nameWithType: RibbonControlLengthUnitType\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLengthUnitType\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Auto\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Auto\n  nameWithType: RibbonControlLength.Auto\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Auto\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength\n  parent: System.Windows.Controls.Ribbon\n  isExternal: false\n  name: RibbonControlLength\n  nameWithType: RibbonControlLength\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: RibbonControlLength.Equals(Object)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Equals(RibbonControlLength)\n  nameWithType: RibbonControlLength.Equals(RibbonControlLength)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Equals(RibbonControlLength)\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: RibbonControlLength.GetHashCode()\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: IsAbsolute\n  nameWithType: RibbonControlLength.IsAbsolute\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: IsAuto\n  nameWithType: RibbonControlLength.IsAuto\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsStar\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: IsStar\n  nameWithType: RibbonControlLength.IsStar\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.IsStar\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: op_Equality(RibbonControlLength,RibbonControlLength)\n  nameWithType: RibbonControlLength.op_Equality(RibbonControlLength,RibbonControlLength)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(RibbonControlLength,RibbonControlLength)\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: op_Inequality(RibbonControlLength,RibbonControlLength)\n  nameWithType: RibbonControlLength.op_Inequality(RibbonControlLength,RibbonControlLength)\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(RibbonControlLength,RibbonControlLength)\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: RibbonControlLengthUnitType\n  nameWithType: RibbonControlLength.RibbonControlLengthUnitType\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.ToString\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: ToString()\n  nameWithType: RibbonControlLength.ToString()\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Value\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Value\n  nameWithType: RibbonControlLength.Value\n  fullName: System.Windows.Controls.Ribbon.RibbonControlLength.Value\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.#ctor*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: RibbonControlLength\n  nameWithType: RibbonControlLength.RibbonControlLength\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Auto*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Auto\n  nameWithType: RibbonControlLength.Auto\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Equals*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Equals\n  nameWithType: RibbonControlLength.Equals\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: GetHashCode\n  nameWithType: RibbonControlLength.GetHashCode\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: IsAbsolute\n  nameWithType: RibbonControlLength.IsAbsolute\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: IsAuto\n  nameWithType: RibbonControlLength.IsAuto\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.IsStar*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: IsStar\n  nameWithType: RibbonControlLength.IsStar\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: op_Equality\n  nameWithType: RibbonControlLength.op_Equality\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: op_Inequality\n  nameWithType: RibbonControlLength.op_Inequality\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: RibbonControlLengthUnitType\n  nameWithType: RibbonControlLength.RibbonControlLengthUnitType\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.ToString*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: ToString\n  nameWithType: RibbonControlLength.ToString\n- uid: System.Windows.Controls.Ribbon.RibbonControlLength.Value*\n  parent: System.Windows.Controls.Ribbon.RibbonControlLength\n  isExternal: false\n  name: Value\n  nameWithType: RibbonControlLength.Value\n"}