{"nodes":[{"pos":[6604,6680],"content":"Provides a lightweight control for displaying small amounts of flow content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a lightweight control for displaying small amounts of flow content.","pos":[0,76]}]},{"pos":[6693,8554],"content":"A TextBlock can contain a string in its <xref:System.Windows.Controls.TextBlock.Text%2A> property or <xref:System.Windows.Documents.Inline> flow content elements, such as <xref:System.Windows.Documents.Bold>, <xref:System.Windows.Documents.Hyperlink>, and <xref:System.Windows.Documents.InlineUIContainer>, in its <xref:System.Windows.Controls.TextBlock.Inlines%2A> property.       TextBlock is designed to be lightweight, and is geared specifically at integrating small portions of flow content into a [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].  TextBlock is optimized for single-line display, and provides good performance for displaying up to a few lines of content.       TextBlock is not optimized for scenarios that need to display more than a few lines of content; for such scenarios, a <xref:System.Windows.Documents.FlowDocument> coupled with an appropriate viewing control is a better choice than TextBlock, in terms of performance.  After TextBlock, <xref:System.Windows.Controls.FlowDocumentScrollViewer> is the next lightest-weight control for displaying flow content, and simply provides a scrolling content area with minimal [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  <xref:System.Windows.Controls.FlowDocumentPageViewer> is optimized around \"page-at-a-time\" viewing mode for flow content.  Finally, <xref:System.Windows.Controls.FlowDocumentReader> supports the richest set functionality for viewing flow content, but is correspondingly heavier-weight.       Horizontally aligning text within a TextBlock is done with the <xref:System.Windows.Controls.TextBlock.TextAlignment%2A> property. Aligning the TextBlock within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.","needQuote":false,"needEscape":true,"nodes":[{"content":"A TextBlock can contain a string in its &lt;xref:System.Windows.Controls.TextBlock.Text%2A&gt; property or &lt;xref:System.Windows.Documents.Inline&gt; flow content elements, such as &lt;xref:System.Windows.Documents.Bold&gt;, &lt;xref:System.Windows.Documents.Hyperlink&gt;, and &lt;xref:System.Windows.Documents.InlineUIContainer&gt;, in its &lt;xref:System.Windows.Controls.TextBlock.Inlines%2A&gt; property.","pos":[0,375],"source":"A TextBlock can contain a string in its <xref:System.Windows.Controls.TextBlock.Text%2A> property or <xref:System.Windows.Documents.Inline> flow content elements, such as <xref:System.Windows.Documents.Bold>, <xref:System.Windows.Documents.Hyperlink>, and <xref:System.Windows.Documents.InlineUIContainer>, in its <xref:System.Windows.Controls.TextBlock.Inlines%2A> property."},{"content":"TextBlock is designed to be lightweight, and is geared specifically at integrating small portions of flow content into a <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>.","pos":[382,563],"source":"       TextBlock is designed to be lightweight, and is geared specifically at integrating small portions of flow content into a [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]."},{"content":"TextBlock is optimized for single-line display, and provides good performance for displaying up to a few lines of content.","pos":[565,687]},{"content":"TextBlock is not optimized for scenarios that need to display more than a few lines of content; for such scenarios, a &lt;xref:System.Windows.Documents.FlowDocument&gt; coupled with an appropriate viewing control is a better choice than TextBlock, in terms of performance.","pos":[694,960],"source":"       TextBlock is not optimized for scenarios that need to display more than a few lines of content; for such scenarios, a <xref:System.Windows.Documents.FlowDocument> coupled with an appropriate viewing control is a better choice than TextBlock, in terms of performance."},{"content":"After TextBlock, &lt;xref:System.Windows.Controls.FlowDocumentScrollViewer&gt; is the next lightest-weight control for displaying flow content, and simply provides a scrolling content area with minimal <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[962,1221],"source":"  After TextBlock, <xref:System.Windows.Controls.FlowDocumentScrollViewer> is the next lightest-weight control for displaying flow content, and simply provides a scrolling content area with minimal [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]."},{"content":"&lt;xref:System.Windows.Controls.FlowDocumentPageViewer&gt; is optimized around \"page-at-a-time\" viewing mode for flow content.","pos":[1223,1344],"source":"  <xref:System.Windows.Controls.FlowDocumentPageViewer> is optimized around \"page-at-a-time\" viewing mode for flow content."},{"content":"Finally, &lt;xref:System.Windows.Controls.FlowDocumentReader&gt; supports the richest set functionality for viewing flow content, but is correspondingly heavier-weight.","pos":[1346,1508],"source":"  Finally, <xref:System.Windows.Controls.FlowDocumentReader> supports the richest set functionality for viewing flow content, but is correspondingly heavier-weight."},{"content":"Horizontally aligning text within a TextBlock is done with the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment%2A&gt; property.","pos":[1515,1645],"source":"       Horizontally aligning text within a TextBlock is done with the <xref:System.Windows.Controls.TextBlock.TextAlignment%2A> property."},{"content":"Aligning the TextBlock within the layout of the page is done with the &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt; and &lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt; properties.","pos":[1646,1853],"source":" Aligning the TextBlock within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties."}]},{"pos":[44557,44652],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> class."},{"pos":[45242,45449],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, adding a specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Inline\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> element as the initial display content.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> class, adding a specified <xref href=\"System.Windows.Documents.Inline\"></xref> element as the initial display content."},{"pos":[45461,45719],"content":"Valid input types for <ph id=\"ph1\">`inline`</ph> include &lt;xref:System.Windows.Documents.AnchoredBlock&gt;, &lt;xref:System.Windows.Documents.InlineUIContainer&gt;, &lt;xref:System.Windows.Documents.LineBreak&gt;, &lt;xref:System.Windows.Documents.Run&gt;, and &lt;xref:System.Windows.Documents.Span&gt;.","needQuote":true,"needEscape":true,"source":"Valid input types for `inline` include <xref:System.Windows.Documents.AnchoredBlock>, <xref:System.Windows.Documents.InlineUIContainer>, <xref:System.Windows.Documents.LineBreak>, <xref:System.Windows.Documents.Run>, and <xref:System.Windows.Documents.Span>."},{"pos":[46411,46543],"content":"An object deriving from the abstract <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Inline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, to be added as the initial content.","needQuote":true,"needEscape":true,"source":"An object deriving from the abstract <xref href=\"System.Windows.Documents.Inline\"></xref> class, to be added as the initial content."},{"pos":[46713,46797],"content":"<ph id=\"ph1\">&lt;code&gt;inline&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>inline</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[47255,47365],"content":"Positions child elements and determines a size for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Positions child elements and determines a size for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[47377,47482],"content":"This method overrides <xref:System.Windows.FrameworkElement.ArrangeOverride%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.FrameworkElement.ArrangeOverride%2A?displayProperty=fullName&gt;.","pos":[0,105],"source":"This method overrides <xref:System.Windows.FrameworkElement.ArrangeOverride%2A?displayProperty=fullName>."}]},{"pos":[47692,47936],"content":"A <xref href=\"System.Windows.Size\"></xref> within the hosting parent element that the <xref href=\"System.Windows.Controls.TextBlock\"></xref> should use to arrange itself and its child elements. Sizing constraints may affect this requested size.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> within the hosting parent element that the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> should use to arrange itself and its child elements.","pos":[0,193],"source":"A <xref href=\"System.Windows.Size\"></xref> within the hosting parent element that the <xref href=\"System.Windows.Controls.TextBlock\"></xref> should use to arrange itself and its child elements."},{"content":"Sizing constraints may affect this requested size.","pos":[194,244]}]},{"pos":[48000,48080],"content":"The actual <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to arrange the element.","needQuote":true,"needEscape":true,"source":"The actual <xref href=\"System.Windows.Size\"></xref> used to arrange the element."},{"pos":[48535,48644],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to fill the background of content area.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Media.Brush\"></xref> used to fill the background of content area."},{"pos":[48657,49156],"content":"Any Background settings on child elements override this top-level setting.       For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.      <a name=\"dependencyPropertyInfo_Background\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.BackgroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Any Background settings on child elements override this top-level setting.","pos":[0,74]},{"content":"For a table of swatches that show the available predefined brush colors, see &lt;xref:System.Windows.Media.Brushes&gt;.","pos":[81,194],"source":"       For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Background\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.BackgroundProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[200,487],"source":"<a name=\"dependencyPropertyInfo_Background\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.BackgroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[49946,50176],"content":"The brush used to fill the background of the content area, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to not use a background brush. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The brush used to fill the background of the content area, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to not use a background brush.","pos":[0,153],"source":"The brush used to fill the background of the content area, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to not use a background brush."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[154,230],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[50663,50751],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.Background*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.Background*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.Background*> dependency property."}]},{"pos":[50929,50941],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51353,51432],"content":"Gets or sets the amount by which each line of text is offset from the baseline.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the amount by which each line of text is offset from the baseline.","pos":[0,79]}]},{"pos":[51445,52067],"content":"The baseline is the imaginary horizontal line with which the base of each character in a line of text is aligned.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* BaselineOffset`=\"`*double*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetBaselineOffset%2A> and <xref:System.Windows.Controls.TextBlock.SetBaselineOffset%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The baseline is the imaginary horizontal line with which the base of each character in a line of text is aligned.","pos":[0,113]},{"content":"This dependency property also has an attached property usage.","pos":[120,181]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> BaselineOffset<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[182,436],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* BaselineOffset`=\"`*double*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetBaselineOffset%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetBaselineOffset%2A&gt;.","pos":[437,618],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetBaselineOffset%2A> and <xref:System.Windows.Controls.TextBlock.SetBaselineOffset%2A>."}]},{"pos":[52192,52517],"content":"The amount by which each line of text is offset from the baseline, in device independent pixels. &lt;xref:System.Double?displayProperty=fullName&gt; indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount by which each line of text is offset from the baseline, in device independent pixels. &lt;xref:System.Double?displayProperty=fullName&gt; indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;.","pos":[0,325],"nodes":[{"content":"The amount by which each line of text is offset from the baseline, in device independent pixels.","pos":[0,96]},{"content":"<ph id=\"ph1\">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> indicates that an optimal baseline offset is automatically calculated from the current font characteristics.","pos":[97,257],"source":"&lt;xref:System.Double?displayProperty=fullName&gt; indicates that an optimal baseline offset is automatically calculated from the current font characteristics."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[258,325],"source":" The default is &lt;xref:System.Double?displayProperty=fullName&gt;."}]}]},{"pos":[53028,53120],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; dependency property.","pos":[0,92],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> dependency property."}]},{"pos":[53302,53314],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[53706,53834],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.LineBreakCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates how content should break after the current element.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.LineBreakCondition\"></xref> that indicates how content should break after the current element."},{"pos":[53846,53916],"content":"This property always returns <xref:System.Windows.LineBreakCondition>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns &lt;xref:System.Windows.LineBreakCondition&gt;.","pos":[0,70],"source":"This property always returns <xref:System.Windows.LineBreakCondition>."}]},{"pos":[54078,54140],"content":"The conditions for breaking content after the current element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conditions for breaking content after the current element.","pos":[0,62]}]},{"pos":[54595,54724],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.LineBreakCondition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates how content should break before the current element.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.LineBreakCondition\"></xref> that indicates how content should break before the current element."},{"pos":[54736,54806],"content":"This property always returns <xref:System.Windows.LineBreakCondition>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property always returns &lt;xref:System.Windows.LineBreakCondition&gt;.","pos":[0,70],"source":"This property always returns <xref:System.Windows.LineBreakCondition>."}]},{"pos":[54969,55031],"content":"The conditions for breaking content after the current element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The conditions for breaking content after the current element.","pos":[0,62]}]},{"pos":[55482,55631],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the end of content in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the end of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[55644,55990],"content":"The end of content is taken to be the insertion position directly following the last character in the <xref:System.Windows.Controls.TextBlock>.       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The end of content is taken to be the insertion position directly following the last character in the <xref:System.Windows.Controls.TextBlock>.       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>.","pos":[0,344],"nodes":[{"content":"The end of content is taken to be the insertion position directly following the last character in the &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[0,143],"source":"The end of content is taken to be the insertion position directly following the last character in the <xref:System.Windows.Controls.TextBlock>."},{"content":"The &lt;xref:System.Windows.Documents.TextPointer&gt; returned by this property always has its &lt;xref:System.Windows.Documents.LogicalDirection&gt; set to &lt;xref:System.Windows.Documents.LogicalDirection&gt;.","pos":[150,344],"source":"       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>."}]}]},{"pos":[56159,56303],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the end of content in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the end of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[56763,56918],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the beginning of content in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the beginning of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[56931,57284],"content":"The beginning of content is taken to be the insertion position directly preceding the first character in the <xref:System.Windows.Controls.TextBlock>.       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The beginning of content is taken to be the insertion position directly preceding the first character in the <xref:System.Windows.Controls.TextBlock>.       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>.","pos":[0,351],"nodes":[{"content":"The beginning of content is taken to be the insertion position directly preceding the first character in the &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[0,150],"source":"The beginning of content is taken to be the insertion position directly preceding the first character in the <xref:System.Windows.Controls.TextBlock>."},{"content":"The &lt;xref:System.Windows.Documents.TextPointer&gt; returned by this property always has its &lt;xref:System.Windows.Documents.LogicalDirection&gt; set to &lt;xref:System.Windows.Documents.LogicalDirection&gt;.","pos":[157,351],"source":"       The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>."}]}]},{"pos":[57455,57605],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the beginning of content in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the beginning of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[58057,58169],"content":"Gets or sets the preferred top-level font family for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the preferred top-level font family for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[62413,62690],"content":"A <xref href=\"System.Windows.Media.FontFamily\"></xref> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily*> value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.FontFamily\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families.","pos":[0,175],"source":"A <xref href=\"System.Windows.Media.FontFamily\"></xref> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families."},{"content":"The default is the font determined by the &lt;xref:System.Windows.SystemFonts.MessageFontFamily*&gt; value.","pos":[176,277],"source":" The default is the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily*> value."}]},{"pos":[63177,63265],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.FontFamily*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.FontFamily*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.FontFamily*> dependency property."}]},{"pos":[63443,63455],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[63837,63937],"content":"Gets or sets the top-level font size for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the top-level font size for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[63950,66181],"content":"Any FontSize settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontSize`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontSize%2A> and <xref:System.Windows.Controls.TextBlock.SetFontSize%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontSize` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=\"xamlAttributeUsage_FontSize\"></a>    ## XAML Attribute Usage      ```   <object FontSize=\"double\"/>   - or -   <object FontSize=\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_FontSize\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than 0.0 but smaller than <xref:System.Double.PositiveInfinity>. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      <a name=\"dependencyPropertyInfo_FontSize\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontSizeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Any FontSize settings on child elements override this top-level setting.","pos":[0,72]},{"content":"This dependency property also has an attached property usage.","pos":[79,140]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> FontSize<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is one of the string-format values as explained in XAML Values.","pos":[141,464],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontSize`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values as explained in XAML Values."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetFontSize%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetFontSize%2A&gt;.","pos":[465,634],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontSize%2A> and <xref:System.Windows.Controls.TextBlock.SetFontSize%2A>."},{"content":"The attached property usage is not common, because most elements that can be contained in a &lt;xref:System.Windows.Controls.TextBlock&gt; support an analogous nonattached <ph id=\"ph1\">`FontSize`</ph> property, which the &lt;xref:System.Windows.Controls.TextBlock&gt; uses for rendering.","pos":[635,892],"source":" The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontSize` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_FontSize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object FontSize=\"double\"/&gt;   - or -   &lt;object FontSize=\"qualifiedDouble\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_FontSize\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>double<ept id=\"p3\">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than 0.0 but smaller than &lt;xref:System.Double.PositiveInfinity&gt;.","pos":[898,1299],"source":"<a name=\"xamlAttributeUsage_FontSize\"></a>    ## XAML Attribute Usage      ```   <object FontSize=\"double\"/>   - or -   <object FontSize=\"qualifiedDouble\"/>   ```      <a name=\"xamlValues_FontSize\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than 0.0 but smaller than <xref:System.Double.PositiveInfinity>."},{"content":"An unqualified value is measured in device independent pixels.","pos":[1300,1362]},{"content":"Strings need not explicitly include decimal points.","pos":[1363,1414]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>, <ph id=\"ph3\">`cm`</ph>, <ph id=\"ph4\">`pt`</ph>.","pos":[1421,1552],"source":"*qualifiedDouble*    A *double* value as described above, followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px      <bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontSize\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.FontSizeProperty&gt;|   |Metadata properties set to <ph id=\"ph6\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[1559,2182],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px      <a name=\"dependencyPropertyInfo_FontSize\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontSizeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[66932,67115],"content":"The desired font size to use in device independent pixels). The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt; value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The desired font size to use in device independent pixels). The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt; value.","pos":[0,183],"nodes":[{"content":"The desired font size to use in device independent pixels).","pos":[0,59]},{"content":"The default is determined by the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> value.","pos":[60,183],"source":" The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt; value."}]}]},{"pos":[67590,67676],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.FontSize*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.FontSize*&gt; dependency property.","pos":[0,86],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.FontSize*> dependency property."}]},{"pos":[67852,67864],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[68261,68383],"content":"Gets or sets the top-level font-stretching characteristics for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the top-level font-stretching characteristics for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[68396,69767],"content":"Any FontStretch settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStretch`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names of the <xref:System.Windows.FontStretch> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStretch%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStretch%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStretch` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=\"dependencyPropertyInfo_FontStretch\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontStretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Any FontStretch settings on child elements override this top-level setting.","pos":[0,75]},{"content":"This dependency property also has an attached property usage.","pos":[82,143]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> FontStretch<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is one of the string-format property names of the &lt;xref:System.Windows.FontStretch&gt; class.","pos":[144,497],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStretch`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names of the <xref:System.Windows.FontStretch> class."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetFontStretch%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetFontStretch%2A&gt;.","pos":[498,673],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStretch%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStretch%2A>."},{"content":"The attached property usage is not common, because most elements that can be contained in a &lt;xref:System.Windows.Controls.TextBlock&gt; support an analogous nonattached <ph id=\"ph1\">`FontStretch`</ph> property, which the &lt;xref:System.Windows.Controls.TextBlock&gt; uses for rendering.","pos":[674,934],"source":" The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStretch` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontStretch\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.FontStretchProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[940,1357],"source":"<a name=\"dependencyPropertyInfo_FontStretch\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontStretchProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[70560,70785],"content":"A member of the <xref href=\"System.Windows.FontStretch\"></xref> class specifying the desired font-stretching characteristics to use. The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.FontStretch\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class specifying the desired font-stretching characteristics to use.","pos":[0,132],"source":"A member of the <xref href=\"System.Windows.FontStretch\"></xref> class specifying the desired font-stretching characteristics to use."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[133,225],"source":" The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;."}]},{"pos":[71278,71367],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.FontStretch*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.FontStretch*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.FontStretch*> dependency property."}]},{"pos":[71546,71558],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[71945,72046],"content":"Gets or sets the top-level font style for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the top-level font style for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[72059,73415],"content":"Any FontStyle settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStyle`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names in the <xref:System.Windows.FontStyles> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStyle%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStyle%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStyle` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=\"dependencyPropertyInfo_FontStyle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontStyleProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Any FontStyle settings on child elements override this top-level setting.","pos":[0,73]},{"content":"This dependency property also has an attached property usage.","pos":[80,141]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> FontStyle<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is one of the string-format property names in the &lt;xref:System.Windows.FontStyles&gt; class.","pos":[142,492],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStyle`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names in the <xref:System.Windows.FontStyles> class."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetFontStyle%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetFontStyle%2A&gt;.","pos":[493,664],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStyle%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStyle%2A>."},{"content":"The attached property usage is not common, because most elements that can be contained in a &lt;xref:System.Windows.Controls.TextBlock&gt; support an analogous nonattached <ph id=\"ph1\">`FontStyle`</ph> property, which the &lt;xref:System.Windows.Controls.TextBlock&gt; uses for rendering.","pos":[665,923],"source":" The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStyle` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontStyle\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.FontStyleProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[929,1342],"source":"<a name=\"dependencyPropertyInfo_FontStyle\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontStyleProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[74198,74426],"content":"A member of the <xref href=\"System.Windows.FontStyles\"></xref> class specifying the desired font style. The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontStyle%2A?displayProperty=fullName&gt; value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.FontStyles\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class specifying the desired font style.","pos":[0,103],"source":"A member of the <xref href=\"System.Windows.FontStyles\"></xref> class specifying the desired font style."},{"content":"The default is determined by the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.SystemFonts.MessageFontStyle%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> value.","pos":[104,228],"source":" The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontStyle%2A?displayProperty=fullName&gt; value."}]},{"pos":[74907,74994],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.FontStyle*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.FontStyle*&gt; dependency property.","pos":[0,87],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.FontStyle*> dependency property."}]},{"pos":[75171,75183],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[75575,75677],"content":"Gets or sets the top-level font weight for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the top-level font weight for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[75690,77161],"content":"Any FontWeight settings on child elements override this top-level setting.       For a list of valid values of font weights, see the <xref:System.Windows.FontWeights> class.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontWeight`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values of a property of the <xref:System.Windows.FontWeights> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontWeight%2A> and <xref:System.Windows.Controls.TextBlock.SetFontWeight%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontWeight` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=\"dependencyPropertyInfo_FontWeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontWeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Any FontWeight settings on child elements override this top-level setting.","pos":[0,74]},{"content":"For a list of valid values of font weights, see the &lt;xref:System.Windows.FontWeights&gt; class.","pos":[81,173],"source":"       For a list of valid values of font weights, see the <xref:System.Windows.FontWeights> class."},{"content":"This dependency property also has an attached property usage.","pos":[180,241]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> FontWeight<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is one of the string-format values of a property of the &lt;xref:System.Windows.FontWeights&gt; class.","pos":[242,600],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontWeight`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values of a property of the <xref:System.Windows.FontWeights> class."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetFontWeight%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetFontWeight%2A&gt;.","pos":[601,774],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontWeight%2A> and <xref:System.Windows.Controls.TextBlock.SetFontWeight%2A>."},{"content":"The attached property usage is not common, because most elements that can be contained in a &lt;xref:System.Windows.Controls.TextBlock&gt; support an analogous nonattached <ph id=\"ph1\">`FontWeight`</ph> property, which the &lt;xref:System.Windows.Controls.TextBlock&gt; uses for rendering.","pos":[775,1034],"source":" The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontWeight` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_FontWeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.FontWeightProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[1040,1455],"source":"<a name=\"dependencyPropertyInfo_FontWeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.FontWeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[77949,78180],"content":"A member of the <xref href=\"System.Windows.FontWeights\"></xref> class specifying the desired font weight. The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontWeight%2A?displayProperty=fullName&gt; value.","needQuote":true,"needEscape":true,"nodes":[{"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.FontWeights\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class specifying the desired font weight.","pos":[0,105],"source":"A member of the <xref href=\"System.Windows.FontWeights\"></xref> class specifying the desired font weight."},{"content":"The default is determined by the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.SystemFonts.MessageFontWeight%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> value.","pos":[106,231],"source":" The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontWeight%2A?displayProperty=fullName&gt; value."}]},{"pos":[78667,78755],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.FontWeight*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.FontWeight*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.FontWeight*> dependency property."}]},{"pos":[78933,78945],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79337,79494],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to apply to the text contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Media.Brush\"></xref> to apply to the text contents of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[79507,81006],"content":"For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.       Any Foreground settings on child elements override this top-level setting.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* Foreground`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string that resolves to a <xref:System.Windows.Media.Brush> implementation value. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetForeground%2A> and <xref:System.Windows.Controls.TextBlock.SetForeground%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `Foreground` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.      <a name=\"dependencyPropertyInfo_Foreground\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.ForegroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"For a table of swatches that show the available pre-defined brush colors, see &lt;xref:System.Windows.Media.Brushes&gt;.","pos":[0,114],"source":"For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>."},{"content":"Any Foreground settings on child elements override this top-level setting.","pos":[121,195]},{"content":"This dependency property also has an attached property usage.","pos":[202,263]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> Foreground<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is a string that resolves to a &lt;xref:System.Windows.Media.Brush&gt; implementation value.","pos":[264,612],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* Foreground`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string that resolves to a <xref:System.Windows.Media.Brush> implementation value."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetForeground%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetForeground%2A&gt;.","pos":[613,786],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetForeground%2A> and <xref:System.Windows.Controls.TextBlock.SetForeground%2A>."},{"content":"The attached property usage is not common, because most elements that can be contained in a &lt;xref:System.Windows.Controls.TextBlock&gt; support an analogous nonattached <ph id=\"ph1\">`Foreground`</ph> property, which the &lt;xref:System.Windows.Controls.TextBlock&gt; uses for rendering.","pos":[787,1046],"source":" The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `Foreground` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Foreground\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.ForegroundProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[1052,1483],"source":"<a name=\"dependencyPropertyInfo_Foreground\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.ForegroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[81796,81933],"content":"The brush used to apply to the text contents. The default is &lt;xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The brush used to apply to the text contents. The default is &lt;xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName&gt;.","pos":[0,137],"nodes":[{"content":"The brush used to apply to the text contents.","pos":[0,45]},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[46,137],"source":" The default is &lt;xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName&gt;."}]}]},{"pos":[82420,82508],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.Foreground*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.Foreground*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.Foreground*> dependency property."}]},{"pos":[82686,82698],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[83243,83377],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; attached property for a specified dependency object.","pos":[0,134],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property for a specified dependency object."}]},{"pos":[83580,83717],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; attached property.","pos":[0,137],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property."}]},{"pos":[83775,83910],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; attached property on the specified dependency object.","pos":[0,135],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on the specified dependency object."}]},{"pos":[84092,84177],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[84685,84836],"content":"Returns the value of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock.FontFamilyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"source":"Returns the value of the <xref href=\"System.Windows.Controls.TextBlock.FontFamilyProperty\"></xref> attached property for a specified dependency object."},{"pos":[85060,85193],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.FontFamily*&gt; attached property.","pos":[0,133],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property."}]},{"pos":[85269,85400],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.FontFamily*&gt; attached property on the specified dependency object.","pos":[0,131],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on the specified dependency object."}]},{"pos":[85578,85663],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[86161,86289],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.FontSize*&gt; attached property for a specified dependency object.","pos":[0,128],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property for a specified dependency object."}]},{"pos":[86486,86617],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.FontSize*&gt; attached property.","pos":[0,131],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property."}]},{"pos":[86675,86804],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.FontSize*&gt; attached property on the specified dependency object.","pos":[0,129],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on the specified dependency object."}]},{"pos":[86980,87065],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[87578,87709],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStretch*&gt; attached property for a specified dependency object.","pos":[0,131],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property for a specified dependency object."}]},{"pos":[87929,88063],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStretch*&gt; attached property.","pos":[0,134],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property."}]},{"pos":[88134,88266],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.FontStretch*&gt; attached property on the specified dependency object.","pos":[0,132],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on the specified dependency object."}]},{"pos":[88445,88530],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[89033,89162],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStyle*&gt; attached property for a specified dependency object.","pos":[0,129],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property for a specified dependency object."}]},{"pos":[89378,89510],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStyle*&gt; attached property.","pos":[0,132],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property."}]},{"pos":[89579,89709],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.FontStyle*&gt; attached property on the specified dependency object.","pos":[0,130],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on the specified dependency object."}]},{"pos":[89886,89971],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[90479,90609],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.FontWeight*&gt; attached property for a specified dependency object.","pos":[0,130],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property for a specified dependency object."}]},{"pos":[90827,90960],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.FontWeight*&gt; attached property.","pos":[0,133],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property."}]},{"pos":[91030,91161],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.FontWeight*&gt; attached property on the specified dependency object.","pos":[0,131],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on the specified dependency object."}]},{"pos":[91339,91424],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[91932,92062],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.Foreground*&gt; attached property for a specified dependency object.","pos":[0,130],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property for a specified dependency object."}]},{"pos":[92281,92414],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.Foreground*&gt; attached property.","pos":[0,133],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property."}]},{"pos":[92485,92616],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.Foreground*&gt; attached property on the specified dependency object.","pos":[0,131],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on the specified dependency object."}]},{"pos":[92794,92879],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[93387,93517],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; attached property for a specified dependency object.","pos":[0,130],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property for a specified dependency object."}]},{"pos":[93716,93849],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; attached property.","pos":[0,133],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property."}]},{"pos":[93907,94038],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; attached property on the specified dependency object.","pos":[0,131],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on the specified dependency object."}]},{"pos":[94216,94301],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[94859,94999],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy*&gt; attached property for a specified dependency object.","pos":[0,140],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property for a specified dependency object."}]},{"pos":[95237,95380],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy*&gt; attached property.","pos":[0,143],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property."}]},{"pos":[95460,95601],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy*&gt; attached property on the specified dependency object.","pos":[0,141],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on the specified dependency object."}]},{"pos":[95789,95874],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[96416,96565],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the position closest to a specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the position closest to a specified <xref href=\"System.Windows.Point\"></xref>."},{"pos":[96577,96684],"content":"This method always returns a valid &lt;xref:System.Windows.Documents.TextPointer&gt; when <ph id=\"ph1\">`snapToText`</ph> is <ph id=\"ph2\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"This method always returns a valid <xref:System.Windows.Documents.TextPointer> when `snapToText` is `true`."},{"pos":[96904,97114],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the coordinate space of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for which to return a <bpt id=\"p3\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Point\"></xref> in the coordinate space of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> for which to return a <xref href=\"System.Windows.Documents.TextPointer\"></xref>."},{"pos":[97182,97603],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to return a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to the insertion point closest to <ph id=\"ph1\">`point`</ph>, whether or not <ph id=\"ph2\">`point`</ph> is inside a character's bounding box; <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to return <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> if <ph id=\"ph3\">`point`</ph> is not inside a character's bounding box.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the insertion point closest to `point`, whether or not `point` is inside a character's bounding box; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if `point` is not inside a character's bounding box."},{"pos":[97684,98070],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the specified point, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">snapToText</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> and the specified point does not fall within a character bounding box in the <bpt id=\"p5\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> content area.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the specified point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>snapToText</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the specified point does not fall within a character bounding box in the <xref href=\"System.Windows.Controls.TextBlock\"></xref> content area."},{"pos":[98263,98328],"content":"Current, valid layout information for the control is unavailable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Current, valid layout information for the control is unavailable.","pos":[0,65]}]},{"pos":[98846,98967],"content":"Returns a read-only collection of bounding rectangles for a specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a read-only collection of bounding rectangles for a specified <xref href=\"System.Windows.ContentElement\"></xref>."},{"pos":[98979,99098],"content":"Each bounding rectangle in the collection corresponds to a line of content in the <xref:System.Windows.ContentElement>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each bounding rectangle in the collection corresponds to a line of content in the &lt;xref:System.Windows.ContentElement&gt;.","pos":[0,119],"source":"Each bounding rectangle in the collection corresponds to a line of content in the <xref:System.Windows.ContentElement>."}]},{"pos":[99361,99483],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to generate and return a collection of bounding rectangles.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.ContentElement\"></xref> for which to generate and return a collection of bounding rectangles."},{"pos":[99598,99713],"content":"A read-only collection of bounding rectangles for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A read-only collection of bounding rectangles for the specified <xref href=\"System.Windows.ContentElement\"></xref>."},{"pos":[99895,99978],"content":"<ph id=\"ph1\">&lt;code&gt;child&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>child</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[100501,100634],"content":"Returns the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property for a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the value of the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment*&gt; attached property for a specified dependency object.","pos":[0,133],"source":"Returns the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property for a specified dependency object."}]},{"pos":[100858,100994],"content":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object from which to retrieve the value of the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment*&gt; attached property.","pos":[0,136],"source":"The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property."}]},{"pos":[101067,101201],"content":"The current value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on the specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current value of the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment*&gt; attached property on the specified dependency object.","pos":[0,134],"source":"The current value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on the specified dependency object."}]},{"pos":[101382,101467],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[101909,101997],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> child at a specified index.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Windows.Media.Visual\"></xref> child at a specified index."},{"pos":[102009,102113],"content":"This method overrides <xref:System.Windows.FrameworkElement.GetVisualChild%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.FrameworkElement.GetVisualChild%2A?displayProperty=fullName&gt;.","pos":[0,104],"source":"This method overrides <xref:System.Windows.FrameworkElement.GetVisualChild%2A?displayProperty=fullName>."}]},{"pos":[102288,102493],"content":"A zero-based index specifying the <xref href=\"System.Windows.Media.Visual\"></xref> child to return.  This value must be between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)","needQuote":true,"needEscape":true,"nodes":[{"content":"A zero-based index specifying the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> child to return.","pos":[0,99],"source":"A zero-based index specifying the <xref href=\"System.Windows.Media.Visual\"></xref> child to return."},{"content":"This value must be between 0 and (&lt;xref:System.Windows.Controls.TextBlock.VisualChildrenCount*&gt; minus 1)","pos":[101,205],"source":"  This value must be between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)"}]},{"pos":[102565,102647],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> child at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Visual\"></xref> child at the specified index."},{"pos":[102838,102949],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not between 0 and (<ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock.VisualChildrenCount*&gt;</ph> minus 1)","needQuote":true,"needEscape":true,"source":"<code>index</code> is not between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)"},{"pos":[103489,103639],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PointHitTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.PointHitTestParameters\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Media.PointHitTestResult\"></xref> for specified <xref href=\"System.Windows.Media.PointHitTestParameters\"></xref>."},{"pos":[103652,103830],"content":"This method is intended to enable precise hit testing for rendered content.       This method overrides <xref:System.Windows.UIElement.HitTestCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is intended to enable precise hit testing for rendered content.       This method overrides <xref:System.Windows.UIElement.HitTestCore%2A?displayProperty=fullName>.","pos":[0,176],"nodes":[{"content":"This method is intended to enable precise hit testing for rendered content.","pos":[0,75]},{"content":"This method overrides &lt;xref:System.Windows.UIElement.HitTestCore%2A?displayProperty=fullName&gt;.","pos":[82,176],"source":"       This method overrides <xref:System.Windows.UIElement.HitTestCore%2A?displayProperty=fullName>."}]}]},{"pos":[104112,104228],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PointHitTestParameters\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifying the parameters to hit test for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.PointHitTestParameters\"></xref> object specifying the parameters to hit test for."},{"pos":[104307,104408],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.PointHitTestResult\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the specified hit test parameters.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.PointHitTestResult\"></xref> for the specified hit test parameters."},{"pos":[104584,104679],"content":"<ph id=\"ph1\">&lt;code&gt;hitTestParameters&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>hitTestParameters</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[105094,105221],"content":"Gets an enumerator that can be used iterate the elements hosted by this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator that can be used iterate the elements hosted by this <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[105472,105582],"content":"An enumerator that can iterate elements hosted by this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerator that can iterate elements hosted by this <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[106025,106272],"content":"Gets an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.InlineCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the top-level <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Inline\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> elements that comprise the contents of the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an <xref href=\"System.Windows.Documents.InlineCollection\"></xref> containing the top-level <xref href=\"System.Windows.Documents.Inline\"></xref> elements that comprise the contents of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[106284,106453],"content":"Use the <xref:System.Windows.Documents.InlineCollection> returned by this property to enumerate or manipulate the contents of a <xref:System.Windows.Controls.TextBlock>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Windows.Documents.InlineCollection&gt; returned by this property to enumerate or manipulate the contents of a &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[0,169],"source":"Use the <xref:System.Windows.Documents.InlineCollection> returned by this property to enumerate or manipulate the contents of a <xref:System.Windows.Controls.TextBlock>."}]},{"pos":[106628,106860],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.InlineCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Inline\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> elements that comprise the contents of the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Documents.InlineCollection\"></xref> containing the <xref href=\"System.Windows.Documents.Inline\"></xref> elements that comprise the contents of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[107400,107585],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at a specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> within the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Windows.IInputElement\"></xref> at a specified <xref href=\"System.Windows.Point\"></xref> within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[107787,108007],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, in the coordinate space of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, for which to return the corresponding <bpt id=\"p3\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Point\"></xref>, in the coordinate space of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>, for which to return the corresponding <xref href=\"System.Windows.IInputElement\"></xref>."},{"pos":[108080,108302],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> found at the specified Point, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if no such <bpt id=\"p3\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> can be found.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.IInputElement\"></xref> found at the specified Point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no such <xref href=\"System.Windows.IInputElement\"></xref> can be found."},{"pos":[108808,108906],"content":"Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.","pos":[0,98]}]},{"pos":[108919,109762],"content":"The automatic word hyphenation feature enables a <xref:System.Windows.Controls.TextBlock> to automatically break and hyphenate words, based on current layout conditions.  This enables long words to begin on one line and continue on this next, and tends to achieve a more even distribution of white space in justified text.  Words are broken and hyphenated according to standard grammar rules.      <a name=\"dependencyPropertyInfo_IsHyphenationEnabled\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The automatic word hyphenation feature enables a &lt;xref:System.Windows.Controls.TextBlock&gt; to automatically break and hyphenate words, based on current layout conditions.","pos":[0,169],"source":"The automatic word hyphenation feature enables a <xref:System.Windows.Controls.TextBlock> to automatically break and hyphenate words, based on current layout conditions."},{"content":"This enables long words to begin on one line and continue on this next, and tends to achieve a more even distribution of white space in justified text.","pos":[171,322]},{"content":"Words are broken and hyphenated according to standard grammar rules.","pos":[324,392]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_IsHyphenationEnabled\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[398,833],"source":"<a name=\"dependencyPropertyInfo_IsHyphenationEnabled\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[109892,110179],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that automatic breaking and hyphenation of words is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that automatic breaking and hyphenation of words is enabled; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,208],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that automatic breaking and hyphenation of words is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[209,287],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[110726,110824],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.IsHyphenationEnabled*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.IsHyphenationEnabled*&gt; dependency property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.IsHyphenationEnabled*> dependency property."}]},{"pos":[111012,111024],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[111416,111464],"content":"Gets or sets the height of each line of content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the height of each line of content.","pos":[0,48]}]},{"pos":[111477,114096],"content":"Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text. To change the size of the text, use the <xref:System.Windows.Controls.TextBlock.FontSize%2A> property.       In addition to this property, the layout of lines in a <xref:System.Windows.Controls.TextBlock> is affected by its <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property.       This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineHeight`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineHeight%2A> and <xref:System.Windows.Controls.TextBlock.SetLineHeight%2A>. The attached property usage is not common.      <a name=\"xamlAttributeUsage_LineHeight\"></a>    ## XAML Attribute Usage      ```   <object LineHeight=\"double\"/>   - or -   <object LineHeight=\"qualifiedDouble\"/>   - or -   <object LineHeight=\"Auto\"/>   ```      <a name=\"xamlValues_LineHeight\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` and equal to or less then `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height to be determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN?displayProperty=fullName>.      <a name=\"dependencyPropertyInfo_LineHeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.","pos":[0,136]},{"content":"To change the size of the text, use the &lt;xref:System.Windows.Controls.TextBlock.FontSize%2A&gt; property.","pos":[137,239],"source":" To change the size of the text, use the <xref:System.Windows.Controls.TextBlock.FontSize%2A> property."},{"content":"In addition to this property, the layout of lines in a &lt;xref:System.Windows.Controls.TextBlock&gt; is affected by its &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A&gt; property.","pos":[246,435],"source":"       In addition to this property, the layout of lines in a <xref:System.Windows.Controls.TextBlock> is affected by its <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property."},{"content":"This dependency property also has an attached property usage.","pos":[442,503]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> LineHeight<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is a string as explained in XAML Values.","pos":[504,806],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineHeight`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string as explained in XAML Values."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetLineHeight%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetLineHeight%2A&gt;.","pos":[807,980],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineHeight%2A> and <xref:System.Windows.Controls.TextBlock.SetLineHeight%2A>."},{"content":"The attached property usage is not common.","pos":[981,1023]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_LineHeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object LineHeight=\"double\"/&gt;   - or -   &lt;object LineHeight=\"qualifiedDouble\"/&gt;   - or -   &lt;object LineHeight=\"Auto\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_LineHeight\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>double<ept id=\"p3\">*</ept>    &lt;xref:System.Double&gt;       String representation of a &lt;xref:System.Double&gt; value equal to or greater than <ph id=\"ph2\">`0.0034`</ph> and equal to or less then <ph id=\"ph3\">`160000`</ph>.","pos":[1029,1462],"source":"<a name=\"xamlAttributeUsage_LineHeight\"></a>    ## XAML Attribute Usage      ```   <object LineHeight=\"double\"/>   - or -   <object LineHeight=\"qualifiedDouble\"/>   - or -   <object LineHeight=\"Auto\"/>   ```      <a name=\"xamlValues_LineHeight\"></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than `0.0034` and equal to or less then `160000`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[1463,1525]},{"content":"Strings need not explicitly include decimal points.","pos":[1526,1577]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>    A <bpt id=\"p2\">*</bpt>double<ept id=\"p2\">*</ept> value as described above, (excepting <ph id=\"ph1\">`Auto`</ph>) followed by one of the following unit specifiers: <ph id=\"ph2\">`px`</ph>, <ph id=\"ph3\">`in`</ph>, <ph id=\"ph4\">`cm`</ph>, <ph id=\"ph5\">`pt`</ph>.","pos":[1584,1734],"source":"*qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       <ph id=\"ph4\">`cm`</ph> is centimeters; 1cm==(96/2.54) px       <ph id=\"ph5\">`pt`</ph> is points; 1pt==(96/72) px       Auto    Causes the line height to be determined automatically from the current font characteristics.","pos":[1741,2054],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height to be determined automatically from the current font characteristics."},{"content":"Equivalent to a property value of &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.","pos":[2056,2140],"source":"  Equivalent to a property value of <xref:System.Double.NaN?displayProperty=fullName>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_LineHeight\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.LineHeightProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[2146,2561],"source":"<a name=\"dependencyPropertyInfo_LineHeight\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[114853,115212],"content":"The height of line, in device independent pixels, in the range of 0.0034 to 160000. A value of &lt;xref:System.Double?displayProperty=fullName&gt; (equivalent to an attribute value of \"`Auto`\") indicates that the line height is determined automatically from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of line, in device independent pixels, in the range of 0.0034 to 160000.","pos":[0,83]},{"content":"A value of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> (equivalent to an attribute value of \"<ph id=\"ph3\">`Auto`</ph>\") indicates that the line height is determined automatically from the current font characteristics.","pos":[84,291],"source":" A value of &lt;xref:System.Double?displayProperty=fullName&gt; (equivalent to an attribute value of \"`Auto`\") indicates that the line height is determined automatically from the current font characteristics."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Double?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[292,359],"source":" The default is &lt;xref:System.Double?displayProperty=fullName&gt;."}]},{"pos":[115379,115421],"content":"LineHeight is set to a non-positive value.","needQuote":true,"needEscape":true,"nodes":[{"content":"LineHeight is set to a non-positive value.","pos":[0,42]}]},{"pos":[115833,115921],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.LineHeight*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.LineHeight*> dependency property."}]},{"pos":[116099,116111],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[116553,116702],"content":"Gets or sets the mechanism by which a line box is determined for each line of text within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the mechanism by which a line box is determined for each line of text within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[116715,117758],"content":"This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineStackingStrategy`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.LineStackingStrategy> enumeration. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineStackingStrategy%2A> and <xref:System.Windows.Controls.TextBlock.SetLineStackingStrategy%2A>. The attached property usage is not common.      <a name=\"dependencyPropertyInfo_LineStackingStrategy\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.LineStackingStrategyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"This dependency property also has an attached property usage.","pos":[0,61]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> LineStackingStrategy<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is a string value of the &lt;xref:System.Windows.LineStackingStrategy&gt; enumeration.","pos":[62,414],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineStackingStrategy`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.LineStackingStrategy> enumeration."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetLineStackingStrategy%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetLineStackingStrategy%2A&gt;.","pos":[415,608],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineStackingStrategy%2A> and <xref:System.Windows.Controls.TextBlock.SetLineStackingStrategy%2A>."},{"content":"The attached property usage is not common.","pos":[609,651]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_LineStackingStrategy\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategyProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[657,1031],"source":"<a name=\"dependencyPropertyInfo_LineStackingStrategy\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.LineStackingStrategyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[118806,119015],"content":"The mechanism by which a line box is determined for each line of text within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>. The default is <xref href=\"System.Windows.LineStackingStrategy\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The mechanism by which a line box is determined for each line of text within the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,136],"source":"The mechanism by which a line box is determined for each line of text within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.LineStackingStrategy\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[137,209],"source":" The default is <xref href=\"System.Windows.LineStackingStrategy\"></xref>."}]},{"pos":[119562,119660],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy*&gt; dependency property.","pos":[0,98],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> dependency property."}]},{"pos":[119848,119860],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[120277,120396],"content":"Gets an enumerator that can iterate the logical children of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator that can iterate the logical children of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[120569,120608],"content":"An enumerator for the logical children.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator for the logical children.","pos":[0,39]}]},{"pos":[121146,121226],"content":"Called to re-measure the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Called to re-measure the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[121239,121410],"content":"Override this method to implement custom sizing behavior.       This method overrides <xref:System.Windows.FrameworkElement.MeasureOverride%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Override this method to implement custom sizing behavior.       This method overrides <xref:System.Windows.FrameworkElement.MeasureOverride%2A?displayProperty=fullName>.","pos":[0,169],"nodes":[{"content":"Override this method to implement custom sizing behavior.","pos":[0,57]},{"content":"This method overrides &lt;xref:System.Windows.FrameworkElement.MeasureOverride%2A?displayProperty=fullName&gt;.","pos":[64,169],"source":"       This method overrides <xref:System.Windows.FrameworkElement.MeasureOverride%2A?displayProperty=fullName>."}]}]},{"pos":[121619,121773],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure specifying any constraints on the size of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure specifying any constraints on the size of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[121837,121976],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure indicating the new size of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure indicating the new size of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[122609,122754],"content":"Called when a child element deriving from <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> changes its &lt;xref:System.Windows.UIElement.DesiredSize*&gt;.","needQuote":true,"needEscape":true,"source":"Called when a child element deriving from <xref href=\"System.Windows.UIElement\"></xref> changes its <xref:System.Windows.UIElement.DesiredSize*>."},{"pos":[122953,123080],"content":"The child <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element whose &lt;xref:System.Windows.UIElement.DesiredSize*&gt; has changed.","needQuote":true,"needEscape":true,"source":"The child <xref href=\"System.Windows.UIElement\"></xref> element whose <xref:System.Windows.UIElement.DesiredSize*> has changed."},{"pos":[123613,123775],"content":"Creates and returns an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[123787,123897],"content":"This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName&gt;.","pos":[0,110],"source":"This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>."}]},{"pos":[124123,124265],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[124970,125041],"content":"Called when the value one or more hosted dependency properties changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the value one or more hosted dependency properties changes.","pos":[0,71]}]},{"pos":[125053,125160],"content":"This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName&gt;.","pos":[0,107],"source":"This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>."}]},{"pos":[125397,125432],"content":"Arguments for the associated event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Arguments for the associated event.","pos":[0,35]}]},{"pos":[125999,126080],"content":"Renders the contents of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Renders the contents of a <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[126092,126207],"content":"This method is invoked by the layout system to render the contents of the <xref:System.Windows.Controls.TextBlock>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is invoked by the layout system to render the contents of the &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[0,115],"source":"This method is invoked by the layout system to render the contents of the <xref:System.Windows.Controls.TextBlock>."}]},{"pos":[126411,126497],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to render the control on.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> to render the control on."},{"pos":[126670,126751],"content":"<ph id=\"ph1\">&lt;code&gt;ctx&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>ctx</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[127111,127308],"content":"Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[127321,130103],"content":"Padding can be described as uniform in all directions (`Padding=\"10\"`), or as four distinct values that represent left, top, right, and bottom padding independently (`Padding=\"5,0,10,20\"`).       If a specified padding thickness exceeds the corresponding content area dimension (for example, the sum of the left and right padding widths exceeds the content area width), the thickness of the padding is proportionally reduced to be no greater than the relevant content area dimension.      <a name=\"xamlAttributeUsage_Padding\"></a>    ## XAML Attribute Usage      ```   <object Padding=\"uniformThickness\"/>   - or -   <object Padding=\"independentThickness\"/>   - or -   <object Padding=\"qualifiedUniformThickness\"/>   - or -   <object Padding=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_Padding\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \"5,10,15,20\" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform padding of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=\"dependencyPropertyInfo_Padding\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Padding can be described as uniform in all directions (<ph id=\"ph1\">`Padding=\"10\"`</ph>), or as four distinct values that represent left, top, right, and bottom padding independently (<ph id=\"ph2\">`Padding=\"5,0,10,20\"`</ph>).","pos":[0,189],"source":"Padding can be described as uniform in all directions (`Padding=\"10\"`), or as four distinct values that represent left, top, right, and bottom padding independently (`Padding=\"5,0,10,20\"`)."},{"content":"If a specified padding thickness exceeds the corresponding content area dimension (for example, the sum of the left and right padding widths exceeds the content area width), the thickness of the padding is proportionally reduced to be no greater than the relevant content area dimension.","pos":[196,483]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlAttributeUsage_Padding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Attribute Usage      <ph id=\"ph1\">```   &lt;object Padding=\"uniformThickness\"/&gt;   - or -   &lt;object Padding=\"independentThickness\"/&gt;   - or -   &lt;object Padding=\"qualifiedUniformThickness\"/&gt;   - or -   &lt;object Padding=\"qualifiedIndependentThickness\"/&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Padding\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>uniformThickness<ept id=\"p3\">*</ept>    String representation of a single &lt;xref:System.Double&gt; value to apply uniformly to all four thickness dimensions.","pos":[489,977],"source":"<a name=\"xamlAttributeUsage_Padding\"></a>    ## XAML Attribute Usage      ```   <object Padding=\"uniformThickness\"/>   - or -   <object Padding=\"independentThickness\"/>   - or -   <object Padding=\"qualifiedUniformThickness\"/>   - or -   <object Padding=\"qualifiedIndependentThickness\"/>   ```      <a name=\"xamlValues_Padding\"></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions."},{"content":"For example, a value of <ph id=\"ph1\">`\"10\"`</ph> is equivalent to a value of <ph id=\"ph2\">`\"10,10,10,10\"`</ph>.","pos":[979,1054],"source":"  For example, a value of `\"10\"` is equivalent to a value of `\"10,10,10,10\"`."},{"content":"An unqualified value is measured in device independent pixels.","pos":[1056,1118]},{"content":"Strings need not explicitly include decimal points.","pos":[1119,1170]},{"content":"<bpt id=\"p1\">*</bpt>independentThickness<ept id=\"p1\">*</ept>    String representation of four ordered &lt;xref:System.Double&gt; values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.","pos":[1177,1367],"source":"*independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order."},{"content":"The four values must be separated with commas; spaces are not allowed.","pos":[1369,1439]},{"content":"For example, \"5,10,15,20\" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.","pos":[1441,1647]},{"content":"<bpt id=\"p1\">*</bpt>qualifiedUniformThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>uniformThickness<ept id=\"p2\">*</ept> followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[1654,1786],"source":"*qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1in\"`</ph> provides uniform padding of 1 inch in all directions.","pos":[1793,1997],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1in\"` provides uniform padding of 1 inch in all directions."},{"content":"<bpt id=\"p1\">*</bpt>qualifiedIndependentThickness<ept id=\"p1\">*</ept>    A value described by <bpt id=\"p2\">*</bpt>independentThickness<ept id=\"p2\">*</ept>, with each independent value followed by one of the following unit specifiers: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>.","pos":[2004,2173],"source":"*qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`."},{"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]</ph>       <ph id=\"ph3\">`in`</ph> is inches; 1in==96px       For example, <ph id=\"ph4\">`\"1.5in,0.8in,1.5in,0.8in\"`</ph>.","pos":[2180,2351],"source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `\"1.5in,0.8in,1.5in,0.8in\"`."},{"content":"Unit specifiers may be mixed or omitted from one or more values.","pos":[2353,2417]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Padding\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.PaddingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;|","pos":[2423,2705],"source":"<a name=\"dependencyPropertyInfo_Padding\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"}]},{"pos":[130880,131082],"content":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of padding to apply, in device independent pixels. The default is &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Thickness\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure specifying the amount of padding to apply, in device independent pixels.","pos":[0,130],"source":"A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of padding to apply, in device independent pixels."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.Double.NaN?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[131,202],"source":" The default is &lt;xref:System.Double.NaN?displayProperty=fullName&gt;."}]},{"pos":[131551,131636],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.Padding*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.Padding*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.Padding*> dependency property."}]},{"pos":[131811,131823],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[132417,132547],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; attached property on a specified dependency object.","pos":[0,130],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on a specified dependency object."}]},{"pos":[132762,132883],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; property.","pos":[0,121],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property."}]},{"pos":[132945,132982],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[133164,133249],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[133854,133980],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.FontFamily*&gt; attached property on a specified dependency object.","pos":[0,126],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on a specified dependency object."}]},{"pos":[134216,134333],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.FontFamily*&gt; property.","pos":[0,117],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> property."}]},{"pos":[134413,134450],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[134628,134713],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[135260,135384],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.FontSize*&gt; attached property on a specified dependency object.","pos":[0,124],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on a specified dependency object."}]},{"pos":[135593,135708],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.FontSize*&gt; property.","pos":[0,115],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> property."}]},{"pos":[135770,135807],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[135983,136068],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[136671,136798],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStretch*&gt; attached property on a specified dependency object.","pos":[0,127],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on a specified dependency object."}]},{"pos":[137030,137148],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStretch*&gt; property.","pos":[0,118],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> property."}]},{"pos":[137223,137260],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[137439,137524],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[138107,138232],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStyle*&gt; attached property on a specified dependency object.","pos":[0,125],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on a specified dependency object."}]},{"pos":[138460,138576],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.FontStyle*&gt; property.","pos":[0,116],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> property."}]},{"pos":[138649,138686],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[138863,138948],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[139541,139667],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.FontWeight*&gt; attached property on a specified dependency object.","pos":[0,126],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on a specified dependency object."}]},{"pos":[139897,140014],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.FontWeight*&gt; property.","pos":[0,117],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> property."}]},{"pos":[140088,140125],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[140303,140388],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[140968,141094],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.Foreground*&gt; attached property on a specified dependency object.","pos":[0,126],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on a specified dependency object."}]},{"pos":[141325,141442],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.Foreground*&gt; property.","pos":[0,117],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> property."}]},{"pos":[141517,141554],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[141732,141817],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[142374,142500],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; attached property on a specified dependency object.","pos":[0,126],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on a specified dependency object."}]},{"pos":[142711,142828],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt; property.","pos":[0,117],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> property."}]},{"pos":[142890,142927],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[143105,143190],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[143285,143368],"content":"<xref:System.Windows.Controls.TextBlock.LineHeight*>is set to a non-positive value.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Controls.TextBlock.LineHeight*&gt;is set to a non-positive value.","pos":[0,83],"source":"<xref:System.Windows.Controls.TextBlock.LineHeight*>is set to a non-positive value."}]},{"pos":[144061,144197],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy*&gt; attached property on a specified dependency object.","pos":[0,136],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on a specified dependency object."}]},{"pos":[144447,144574],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.LineStackingStrategy*&gt; property.","pos":[0,127],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> property."}]},{"pos":[144658,144695],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[144883,144968],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[145591,145720],"content":"Sets the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on a specified dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment*&gt; attached property on a specified dependency object.","pos":[0,129],"source":"Sets the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on a specified dependency object."}]},{"pos":[145956,146076],"content":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The dependency object on which to set the value of the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment*&gt; property.","pos":[0,120],"source":"The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> property."}]},{"pos":[146153,146190],"content":"The new value to set the property to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new value to set the property to.","pos":[0,37]}]},{"pos":[146371,146456],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[146930,147171],"content":"Returns a value that indicates whether the effective value of the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; property should be serialized during serialization of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.TextBlock\"></xref> object."},{"pos":[147318,147548],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.TextBlock.BaselineOffset*&gt; property should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[148289,148523],"content":"Returns a value that indicates whether the effective value of the &lt;xref:System.Windows.Controls.TextBlock.Inlines*&gt; property should be serialized during serialization of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.Inlines*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.TextBlock\"></xref> object."},{"pos":[148768,148823],"content":"A serialization service manager object for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A serialization service manager object for this object.","pos":[0,55]}]},{"pos":[148882,149105],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.TextBlock.Inlines*&gt; property should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBlock.Inlines*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[149292,149377],"content":"<ph id=\"ph1\">&lt;code&gt;manager&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>manager</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[149801,150032],"content":"Returns a value that indicates whether the effective value of the &lt;xref:System.Windows.Controls.TextBlock.Text*&gt; property should be serialized during serialization of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.Text*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.TextBlock\"></xref> object."},{"pos":[150169,150389],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.TextBlock.Text*&gt; property should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBlock.Text*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[151024,151188],"content":"This method supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[151348,151407],"content":"An object that specifies the type of service object to get.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that specifies the type of service object to get.","pos":[0,59]}]},{"pos":[151465,151643],"content":"A service object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is no service object of type <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">serviceType</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A service object of type <code>serviceType</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no service object of type <code>serviceType</code>."},{"pos":[152394,152653],"content":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.GetRectanglesCore*> method instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,164],"source":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"Use the type-safe &lt;xref:System.Windows.Controls.TextBlock.GetRectanglesCore*&gt; method instead.","pos":[166,259],"source":"  Use the type-safe <xref:System.Windows.Controls.TextBlock.GetRectanglesCore*> method instead."}]},{"pos":[152907,153029],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for which to generate and return a collection of bounding rectangles.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.ContentElement\"></xref> for which to generate and return a collection of bounding rectangles."},{"pos":[153144,153259],"content":"A read-only collection of bounding rectangles for the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A read-only collection of bounding rectangles for the specified <xref href=\"System.Windows.ContentElement\"></xref>."},{"pos":[153914,154184],"content":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.HostedElementsCore*> property instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,172],"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"Use the type-safe &lt;xref:System.Windows.Controls.TextBlock.HostedElementsCore*&gt; property instead.","pos":[174,270],"source":"  Use the type-safe <xref:System.Windows.Controls.TextBlock.HostedElementsCore*> property instead."}]},{"pos":[154441,154477],"content":"Elements hosted by the content host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Elements hosted by the content host.","pos":[0,36]}]},{"pos":[155186,155444],"content":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.InputHitTestCore*> method instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,164],"source":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"Use the type-safe &lt;xref:System.Windows.Controls.TextBlock.InputHitTestCore*&gt; method instead.","pos":[166,258],"source":"  Use the type-safe <xref:System.Windows.Controls.TextBlock.InputHitTestCore*> method instead."}]},{"pos":[155637,155684],"content":"Mouse coordinates relative to the content host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Mouse coordinates relative to the content host.","pos":[0,47]}]},{"pos":[155757,155787],"content":"The element that has been hit.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element that has been hit.","pos":[0,30]}]},{"pos":[156579,156850],"content":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*> method instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,164],"source":"This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"Use the type-safe &lt;xref:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*&gt; method instead.","pos":[166,271],"source":"  Use the type-safe <xref:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*> method instead."}]},{"pos":[157040,157167],"content":"The child <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> element whose &lt;xref:System.Windows.UIElement.DesiredSize*&gt; has changed.","needQuote":true,"needEscape":true,"source":"The child <xref href=\"System.Windows.UIElement\"></xref> element whose <xref:System.Windows.UIElement.DesiredSize*> has changed."},{"pos":[157876,158040],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[158181,158209],"content":"An object to add as a child.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object to add as a child.","pos":[0,28]}]},{"pos":[158900,159064],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[159202,159232],"content":"A string to add to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string to add to the object.","pos":[0,30]}]},{"pos":[159681,159772],"content":"Gets or sets the text contents of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the text contents of a <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[159785,160395],"content":"Use this property when you want to show plain text in a <xref:System.Windows.Controls.TextBlock>.  When you need to format the text, add <xref:System.Windows.Documents.Inline> objects to the <xref:System.Windows.Controls.TextBlock.Inlines%2A> property.      <a name=\"dependencyPropertyInfo_Text\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this property when you want to show plain text in a &lt;xref:System.Windows.Controls.TextBlock&gt;.","pos":[0,97],"source":"Use this property when you want to show plain text in a <xref:System.Windows.Controls.TextBlock>."},{"content":"When you need to format the text, add &lt;xref:System.Windows.Documents.Inline&gt; objects to the &lt;xref:System.Windows.Controls.TextBlock.Inlines%2A&gt; property.","pos":[99,252],"source":"  When you need to format the text, add <xref:System.Windows.Documents.Inline> objects to the <xref:System.Windows.Controls.TextBlock.Inlines%2A> property."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Text\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.TextProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[258,600],"source":"<a name=\"dependencyPropertyInfo_Text\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[161218,161534],"content":"The text contents of this <xref href=\"System.Windows.Controls.TextBlock\"></xref>. Note that all non-text content is stripped out, resulting in a plain text representation of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> contents. The default is &lt;xref:System.String.Empty?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text contents of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,81],"source":"The text contents of this <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"content":"Note that all non-text content is stripped out, resulting in a plain text representation of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contents.","pos":[82,242],"source":" Note that all non-text content is stripped out, resulting in a plain text representation of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> contents."},{"content":"The default is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[243,316],"source":" The default is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."}]},{"pos":[161993,162070],"content":"Gets or sets a value that indicates the horizontal alignment of text content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the horizontal alignment of text content.","pos":[0,77]}]},{"pos":[162083,163145],"content":"This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* TextAlignment`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.TextAlignment> enumeration. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetTextAlignment%2A> and <xref:System.Windows.Controls.TextBlock.SetTextAlignment%2A>. The attached property usage is not common.      <a name=\"dependencyPropertyInfo_TextAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"This dependency property also has an attached property usage.","pos":[0,61]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, the usage is <ph id=\"ph2\">`&lt;`</ph><bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> TextAlignment<ph id=\"ph3\">`=\"`</ph><bpt id=\"p2\">*</bpt>value<ept id=\"p2\">*</ept><ph id=\"ph4\">`\".../&gt;`</ph>, where <bpt id=\"p3\">*</bpt>object<ept id=\"p3\">*</ept> is an object element (typically a flow element) contained within a &lt;xref:System.Windows.Controls.TextBlock&gt;, and <bpt id=\"p4\">*</bpt>value<ept id=\"p4\">*</ept> is a string value of the &lt;xref:System.Windows.TextAlignment&gt; enumeration.","pos":[62,400],"source":" In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* TextAlignment`=\"`*value*`\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.TextAlignment> enumeration."},{"content":"In code, the attached property usage is supported by &lt;xref:System.Windows.Controls.TextBlock.GetTextAlignment%2A&gt; and &lt;xref:System.Windows.Controls.TextBlock.SetTextAlignment%2A&gt;.","pos":[401,580],"source":" In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetTextAlignment%2A> and <xref:System.Windows.Controls.TextBlock.SetTextAlignment%2A>."},{"content":"The attached property usage is not common.","pos":[581,623]},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.TextAlignmentProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A&gt;|","pos":[629,1050],"source":"<a name=\"dependencyPropertyInfo_TextAlignment\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"}]},{"pos":[163948,164119],"content":"One of the <xref href=\"System.Windows.TextAlignment\"></xref> values that specifies the desired alignment. The default is <xref href=\"System.Windows.TextAlignment\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the desired alignment.","pos":[0,105],"source":"One of the <xref href=\"System.Windows.TextAlignment\"></xref> values that specifies the desired alignment."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextAlignment\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[106,171],"source":" The default is <xref href=\"System.Windows.TextAlignment\"></xref>."}]},{"pos":[164624,164715],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.TextAlignment*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.TextAlignment*&gt; dependency property.","pos":[0,91],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.TextAlignment*> dependency property."}]},{"pos":[164896,164908],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[165325,165508],"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextDecorationCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the effects to apply to the text of a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a <xref href=\"System.Windows.TextDecorationCollection\"></xref> that contains the effects to apply to the text of a <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[165521,166397],"content":"A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text. There are four types of text decorations: underline, baseline, strikethrough, and overline.  For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md).       By default, this property is set to `null` and has no <xref:System.Windows.TextDecorationCollection> associated with it.  Before adding any text effects, create a new <xref:System.Windows.TextDecorationCollection> and assign it to this property.      <a name=\"dependencyPropertyInfo_TextDecorations\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextDecorationsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.TextDecoration&gt; object is a visual ornamentation you can add to text.","pos":[0,92],"source":"A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text."},{"content":"There are four types of text decorations: underline, baseline, strikethrough, and overline.","pos":[93,184]},{"content":"For more information about text decorations, see <bpt id=\"p1\">[</bpt>How to: Create a Text Decoration<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[186,309],"source":"  For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md)."},{"content":"By default, this property is set to <ph id=\"ph1\">`null`</ph> and has no &lt;xref:System.Windows.TextDecorationCollection&gt; associated with it.","pos":[316,436],"source":"       By default, this property is set to `null` and has no <xref:System.Windows.TextDecorationCollection> associated with it."},{"content":"Before adding any text effects, create a new &lt;xref:System.Windows.TextDecorationCollection&gt; and assign it to this property.","pos":[438,561],"source":"  Before adding any text effects, create a new <xref:System.Windows.TextDecorationCollection> and assign it to this property."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextDecorations\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.TextDecorationsProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[567,864],"source":"<a name=\"dependencyPropertyInfo_TextDecorations\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextDecorationsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[168016,168253],"content":"A <xref href=\"System.Windows.TextDecorationCollection\"></xref> collection that contains text decorations to apply to this element. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no text decorations applied).","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextDecorationCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection that contains text decorations to apply to this element.","pos":[0,130],"source":"A <xref href=\"System.Windows.TextDecorationCollection\"></xref> collection that contains text decorations to apply to this element."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (no text decorations applied).","pos":[131,237],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no text decorations applied)."}]},{"pos":[168770,168863],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.TextDecorations*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.TextDecorations*&gt; dependency property.","pos":[0,93],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.TextDecorations*> dependency property."}]},{"pos":[169046,169058],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[169455,169525],"content":"Gets or sets the effects to apply to the text content in this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the effects to apply to the text content in this element.","pos":[0,70]}]},{"pos":[169538,170092],"content":"By default, this property is set to `null` and has no <xref:System.Windows.Media.TextEffectCollection> associated with it.  Before adding any text effects, create a new <xref:System.Windows.Media.TextEffectCollection> and assign it to this property.      <a name=\"dependencyPropertyInfo_TextEffects\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextEffectsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, this property is set to <ph id=\"ph1\">`null`</ph> and has no &lt;xref:System.Windows.Media.TextEffectCollection&gt; associated with it.","pos":[0,122],"source":"By default, this property is set to `null` and has no <xref:System.Windows.Media.TextEffectCollection> associated with it."},{"content":"Before adding any text effects, create a new &lt;xref:System.Windows.Media.TextEffectCollection&gt; and assign it to this property.","pos":[124,249],"source":"  Before adding any text effects, create a new <xref:System.Windows.Media.TextEffectCollection> and assign it to this property."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextEffects\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.TextEffectsProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","pos":[255,544],"source":"<a name=\"dependencyPropertyInfo_TextEffects\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextEffectsProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"}]},{"pos":[170722,171072],"content":"A <xref href=\"System.Windows.Media.TextEffectCollection\"></xref> containing one or more <xref href=\"System.Windows.Media.TextEffect\"></xref> objects that define effects to apply to the text of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no effects applied).","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.TextEffectCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing one or more <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.TextEffect\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects that define effects to apply to the text of the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,252],"source":"A <xref href=\"System.Windows.Media.TextEffectCollection\"></xref> containing one or more <xref href=\"System.Windows.Media.TextEffect\"></xref> objects that define effects to apply to the text of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> (no effects applied).","pos":[253,350],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no effects applied)."}]},{"pos":[171565,171654],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.TextEffects*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.TextEffects*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.TextEffects*> dependency property."}]},{"pos":[171833,171845],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[172244,172326],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.Text*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.Text*&gt; dependency property.","pos":[0,82],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.Text*> dependency property."}]},{"pos":[172498,172510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[172912,173002],"content":"Gets or sets the text trimming behavior to employ when content overflows the content area.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text trimming behavior to employ when content overflows the content area.","pos":[0,90]}]},{"pos":[173015,173381],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextTrimming\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.TextTrimmingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_TextTrimming\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextTrimmingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"},{"pos":[173539,173723],"content":"One of the <xref href=\"System.Windows.TextTrimming\"></xref> values that specifies the text trimming behavior to employ. The default is <xref href=\"System.Windows.TextTrimming\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextTrimming\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that specifies the text trimming behavior to employ.","pos":[0,119],"source":"One of the <xref href=\"System.Windows.TextTrimming\"></xref> values that specifies the text trimming behavior to employ."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextTrimming\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[120,184],"source":" The default is <xref href=\"System.Windows.TextTrimming\"></xref>."}]},{"pos":[174222,174312],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.TextTrimming*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.TextTrimming*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.TextTrimming*> dependency property."}]},{"pos":[174492,174504],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[174906,174999],"content":"Gets or sets how the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> should wrap text.","needQuote":true,"needEscape":true,"source":"Gets or sets how the <xref href=\"System.Windows.Controls.TextBlock\"></xref> should wrap text."},{"pos":[175012,175378],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_TextWrapping\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.TextBlock.TextWrappingProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_TextWrapping\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.TextBlock.TextWrappingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"},{"pos":[176176,176308],"content":"One of the <xref href=\"System.Windows.TextWrapping\"></xref> values. The default is <xref href=\"System.Windows.TextWrapping\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextWrapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,67],"source":"One of the <xref href=\"System.Windows.TextWrapping\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.TextWrapping\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,132],"source":" The default is <xref href=\"System.Windows.TextWrapping\"></xref>."}]},{"pos":[176807,176897],"content":"Identifies the <xref:System.Windows.Controls.TextBlock.TextWrapping*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.TextBlock.TextWrapping*&gt; dependency property.","pos":[0,90],"source":"Identifies the <xref:System.Windows.Controls.TextBlock.TextWrapping*> dependency property."}]},{"pos":[177077,177089],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[177481,177565],"content":"Gets the currently effective typography variations for the contents of this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the currently effective typography variations for the contents of this element.","pos":[0,84]}]},{"pos":[177577,177879],"content":"The Typography property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts. A typography variant has no effect on fonts that do not support the variant.  For more information on this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"The Typography property is applicable only to <ph id=\"ph1\">[!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)]</ph> fonts.","pos":[0,124],"source":"The Typography property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts."},{"content":"A typography variant has no effect on fonts that do not support the variant.","pos":[125,201]},{"content":"For more information on this topic, see <bpt id=\"p1\">[</bpt>Typography in WPF<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[203,302],"source":"  For more information on this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[178681,178911],"content":"A <xref href=\"System.Windows.Documents.Typography\"></xref> object that specifies the currently effective typography variations. For a list of default typography values, see <xref href=\"System.Windows.Documents.Typography\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Typography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that specifies the currently effective typography variations.","pos":[0,127],"source":"A <xref href=\"System.Windows.Documents.Typography\"></xref> object that specifies the currently effective typography variations."},{"content":"For a list of default typography values, see <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.Typography\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[128,230],"source":" For a list of default typography values, see <xref href=\"System.Windows.Documents.Typography\"></xref>."}]},{"pos":[179406,179552],"content":"Gets the number of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> children hosted by the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the number of <xref href=\"System.Windows.Media.Visual\"></xref> children hosted by the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."},{"pos":[179684,179783],"content":"The number of visual children hosted by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.TextBlock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of visual children hosted by the <xref href=\"System.Windows.Controls.TextBlock\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.TextBlock\n  id: TextBlock\n  children:\n  - System.Windows.Controls.TextBlock.#ctor\n  - System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)\n  - System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.TextBlock.Background\n  - System.Windows.Controls.TextBlock.BackgroundProperty\n  - System.Windows.Controls.TextBlock.BaselineOffset\n  - System.Windows.Controls.TextBlock.BaselineOffsetProperty\n  - System.Windows.Controls.TextBlock.BreakAfter\n  - System.Windows.Controls.TextBlock.BreakBefore\n  - System.Windows.Controls.TextBlock.ContentEnd\n  - System.Windows.Controls.TextBlock.ContentStart\n  - System.Windows.Controls.TextBlock.FontFamily\n  - System.Windows.Controls.TextBlock.FontFamilyProperty\n  - System.Windows.Controls.TextBlock.FontSize\n  - System.Windows.Controls.TextBlock.FontSizeProperty\n  - System.Windows.Controls.TextBlock.FontStretch\n  - System.Windows.Controls.TextBlock.FontStretchProperty\n  - System.Windows.Controls.TextBlock.FontStyle\n  - System.Windows.Controls.TextBlock.FontStyleProperty\n  - System.Windows.Controls.TextBlock.FontWeight\n  - System.Windows.Controls.TextBlock.FontWeightProperty\n  - System.Windows.Controls.TextBlock.Foreground\n  - System.Windows.Controls.TextBlock.ForegroundProperty\n  - System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  - System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)\n  - System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)\n  - System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)\n  - System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.Controls.TextBlock.HostedElementsCore\n  - System.Windows.Controls.TextBlock.Inlines\n  - System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)\n  - System.Windows.Controls.TextBlock.IsHyphenationEnabled\n  - System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty\n  - System.Windows.Controls.TextBlock.LineHeight\n  - System.Windows.Controls.TextBlock.LineHeightProperty\n  - System.Windows.Controls.TextBlock.LineStackingStrategy\n  - System.Windows.Controls.TextBlock.LineStackingStrategyProperty\n  - System.Windows.Controls.TextBlock.LogicalChildren\n  - System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)\n  - System.Windows.Controls.TextBlock.OnCreateAutomationPeer\n  - System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.Controls.TextBlock.Padding\n  - System.Windows.Controls.TextBlock.PaddingProperty\n  - System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)\n  - System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)\n  - System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)\n  - System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)\n  - System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)\n  - System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)\n  - System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)\n  - System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)\n  - System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)\n  - System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)\n  - System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset\n  - System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)\n  - System.Windows.Controls.TextBlock.ShouldSerializeText\n  - System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)\n  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)\n  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements\n  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)\n  - System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.TextBlock.Text\n  - System.Windows.Controls.TextBlock.TextAlignment\n  - System.Windows.Controls.TextBlock.TextAlignmentProperty\n  - System.Windows.Controls.TextBlock.TextDecorations\n  - System.Windows.Controls.TextBlock.TextDecorationsProperty\n  - System.Windows.Controls.TextBlock.TextEffects\n  - System.Windows.Controls.TextBlock.TextEffectsProperty\n  - System.Windows.Controls.TextBlock.TextProperty\n  - System.Windows.Controls.TextBlock.TextTrimming\n  - System.Windows.Controls.TextBlock.TextTrimmingProperty\n  - System.Windows.Controls.TextBlock.TextWrapping\n  - System.Windows.Controls.TextBlock.TextWrappingProperty\n  - System.Windows.Controls.TextBlock.Typography\n  - System.Windows.Controls.TextBlock.VisualChildrenCount\n  langs:\n  - csharp\n  name: TextBlock\n  nameWithType: TextBlock\n  fullName: System.Windows.Controls.TextBlock\n  type: Class\n  summary: Provides a lightweight control for displaying small amounts of flow content.\n  remarks: \"A TextBlock can contain a string in its <xref:System.Windows.Controls.TextBlock.Text%2A> property or <xref:System.Windows.Documents.Inline> flow content elements, such as <xref:System.Windows.Documents.Bold>, <xref:System.Windows.Documents.Hyperlink>, and <xref:System.Windows.Documents.InlineUIContainer>, in its <xref:System.Windows.Controls.TextBlock.Inlines%2A> property.  \\n  \\n TextBlock is designed to be lightweight, and is geared specifically at integrating small portions of flow content into a [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)].  TextBlock is optimized for single-line display, and provides good performance for displaying up to a few lines of content.  \\n  \\n TextBlock is not optimized for scenarios that need to display more than a few lines of content; for such scenarios, a <xref:System.Windows.Documents.FlowDocument> coupled with an appropriate viewing control is a better choice than TextBlock, in terms of performance.  After TextBlock, <xref:System.Windows.Controls.FlowDocumentScrollViewer> is the next lightest-weight control for displaying flow content, and simply provides a scrolling content area with minimal [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  <xref:System.Windows.Controls.FlowDocumentPageViewer> is optimized around \\\"page-at-a-time\\\" viewing mode for flow content.  Finally, <xref:System.Windows.Controls.FlowDocumentReader> supports the richest set functionality for viewing flow content, but is correspondingly heavier-weight.  \\n  \\n Horizontally aligning text within a TextBlock is done with the <xref:System.Windows.Controls.TextBlock.TextAlignment%2A> property. Aligning the TextBlock within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.\"\n  example:\n  - \"The following example shows how to use the TextBlock element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockSimpleXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblocksimplexaml)]  \\n  \\n The following figure shows how this example renders.  \\n  \\n ![Screenshot: TextBlocks  and buttons](~/add/media/textblock-simple.png \\\"Screenshot: TextBlocks  and buttons\\\")  \\n  \\n The following example shows how to shows how to achieve similar results programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockSimple](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblocksimple)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockSimple](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblocksimple)]\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.Text)]\n\n      [System.Windows.Markup.ContentProperty(\"Inlines\")]\n\n      public class TextBlock : System.Windows.FrameworkElement, IServiceProvider, System.Windows.IContentHost\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  implements:\n  - System.IServiceProvider\n  - System.Windows.IContentHost\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextBlock()\n  nameWithType: TextBlock.TextBlock()\n  fullName: System.Windows.Controls.TextBlock.TextBlock()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> class.\n  syntax:\n    content: public TextBlock ();\n    parameters: []\n  overload: System.Windows.Controls.TextBlock.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)\n  id: '#ctor(System.Windows.Documents.Inline)'\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextBlock(Inline)\n  nameWithType: TextBlock.TextBlock(Inline)\n  fullName: System.Windows.Controls.TextBlock.TextBlock(Inline)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> class, adding a specified <xref href=\"System.Windows.Documents.Inline\"></xref> element as the initial display content.\n  remarks: Valid input types for `inline` include <xref:System.Windows.Documents.AnchoredBlock>, <xref:System.Windows.Documents.InlineUIContainer>, <xref:System.Windows.Documents.LineBreak>, <xref:System.Windows.Documents.Run>, and <xref:System.Windows.Documents.Span>.\n  example:\n  - \"The following example demonstrates the use of this constructor.  In this case, the <xref:System.Windows.Controls.TextBlock> contains a text <xref:System.Windows.Documents.Run>.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockConstructorSimple](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockconstructorsimple)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockConstructorSimple](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockconstructorsimple)]\"\n  syntax:\n    content: public TextBlock (System.Windows.Documents.Inline inline);\n    parameters:\n    - id: inline\n      type: System.Windows.Documents.Inline\n      description: An object deriving from the abstract <xref href=\"System.Windows.Documents.Inline\"></xref> class, to be added as the initial content.\n  overload: System.Windows.Controls.TextBlock.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>inline</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: TextBlock.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.TextBlock.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Positions child elements and determines a size for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: This method overrides <xref:System.Windows.FrameworkElement.ArrangeOverride%2A?displayProperty=fullName>.\n  syntax:\n    content: protected override sealed System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);\n    parameters:\n    - id: arrangeSize\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> within the hosting parent element that the <xref href=\"System.Windows.Controls.TextBlock\"></xref> should use to arrange itself and its child elements. Sizing constraints may affect this requested size.\n    return:\n      type: System.Windows.Size\n      description: The actual <xref href=\"System.Windows.Size\"></xref> used to arrange the element.\n  overload: System.Windows.Controls.TextBlock.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.Background\n  id: Background\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: Background\n  nameWithType: TextBlock.Background\n  fullName: System.Windows.Controls.TextBlock.Background\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.Media.Brush\"></xref> used to fill the background of content area.\n  remarks: \"Any Background settings on child elements override this top-level setting.  \\n  \\n For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Background\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.BackgroundProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the Background attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the Background property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.Media.Brush Background { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: The brush used to fill the background of the content area, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> to not use a background brush. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Controls.TextBlock.Background*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.BackgroundProperty\n  id: BackgroundProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: BackgroundProperty\n  nameWithType: TextBlock.BackgroundProperty\n  fullName: System.Windows.Controls.TextBlock.BackgroundProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.Background*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.BaselineOffset\n  id: BaselineOffset\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: BaselineOffset\n  nameWithType: TextBlock.BaselineOffset\n  fullName: System.Windows.Controls.TextBlock.BaselineOffset\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the amount by which each line of text is offset from the baseline.\n  remarks: \"The baseline is the imaginary horizontal line with which the base of each character in a line of text is aligned.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* BaselineOffset`=\\\"`*double*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetBaselineOffset%2A> and <xref:System.Windows.Controls.TextBlock.SetBaselineOffset%2A>.\"\n  syntax:\n    content: public double BaselineOffset { get; set; }\n    return:\n      type: System.Double\n      description: The amount by which each line of text is offset from the baseline, in device independent pixels. &lt;xref:System.Double?displayProperty=fullName&gt; indicates that an optimal baseline offset is automatically calculated from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBlock.BaselineOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.BaselineOffsetProperty\n  id: BaselineOffsetProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: BaselineOffsetProperty\n  nameWithType: TextBlock.BaselineOffsetProperty\n  fullName: System.Windows.Controls.TextBlock.BaselineOffsetProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BaselineOffsetProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.BreakAfter\n  id: BreakAfter\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: BreakAfter\n  nameWithType: TextBlock.BreakAfter\n  fullName: System.Windows.Controls.TextBlock.BreakAfter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a <xref href=\"System.Windows.LineBreakCondition\"></xref> that indicates how content should break after the current element.\n  remarks: This property always returns <xref:System.Windows.LineBreakCondition>.\n  syntax:\n    content: public System.Windows.LineBreakCondition BreakAfter { get; }\n    return:\n      type: System.Windows.LineBreakCondition\n      description: The conditions for breaking content after the current element.\n  overload: System.Windows.Controls.TextBlock.BreakAfter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.BreakBefore\n  id: BreakBefore\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: BreakBefore\n  nameWithType: TextBlock.BreakBefore\n  fullName: System.Windows.Controls.TextBlock.BreakBefore\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a <xref href=\"System.Windows.LineBreakCondition\"></xref> that indicates how content should break before the current element.\n  remarks: This property always returns <xref:System.Windows.LineBreakCondition>.\n  syntax:\n    content: public System.Windows.LineBreakCondition BreakBefore { get; }\n    return:\n      type: System.Windows.LineBreakCondition\n      description: The conditions for breaking content after the current element.\n  overload: System.Windows.Controls.TextBlock.BreakBefore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ContentEnd\n  id: ContentEnd\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ContentEnd\n  nameWithType: TextBlock.ContentEnd\n  fullName: System.Windows.Controls.TextBlock.ContentEnd\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the end of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"The end of content is taken to be the insertion position directly following the last character in the <xref:System.Windows.Controls.TextBlock>.  \\n  \\n The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>.\"\n  syntax:\n    content: public System.Windows.Documents.TextPointer ContentEnd { get; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the end of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.ContentEnd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ContentStart\n  id: ContentStart\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ContentStart\n  nameWithType: TextBlock.ContentStart\n  fullName: System.Windows.Controls.TextBlock.ContentStart\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the beginning of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"The beginning of content is taken to be the insertion position directly preceding the first character in the <xref:System.Windows.Controls.TextBlock>.  \\n  \\n The <xref:System.Windows.Documents.TextPointer> returned by this property always has its <xref:System.Windows.Documents.LogicalDirection> set to <xref:System.Windows.Documents.LogicalDirection>.\"\n  syntax:\n    content: public System.Windows.Documents.TextPointer ContentStart { get; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the beginning of content in the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.ContentStart*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontFamily\n  id: FontFamily\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontFamily\n  nameWithType: TextBlock.FontFamily\n  fullName: System.Windows.Controls.TextBlock.FontFamily\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the preferred top-level font family for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Any FontFamily settings on child elements override this top-level setting.  \\n  \\n When multiple families are specified, the second and subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  \\n  \\n This property specifies a preference only.  If the specified font family is not available, the <xref:System.Windows.Controls.TextBlock> silently falls back to the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily%2A> value.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontFamily`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontFamily%2A> and <xref:System.Windows.Controls.TextBlock.SetFontFamily%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontFamily` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \\n  \\n<a name=\\\"xamlAttributeUsage_FontFamily\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object FontFamily=\\\"fontFamilyName\\\"/>  \\n- or -  \\n<object FontFamily=\\\"fontFamilyNamesList\\\"/>  \\n- or -  \\n<object FontFamily=\\\"fontFamilyFolderReference\\\"/>  \\n- or -  \\n<object FontFamily=\\\"fontFamilyUriReference\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_FontFamily\\\"></a>   \\n## XAML Values  \\n *fontFamilyName*  \\n A string specifying a font family name.  For example, `\\\"Arial\\\"` or `\\\"Century Gothic\\\"`.  \\n  \\n *fontFamilyNamesList*  \\n A string specifying multiple font family names, each separated by a comma (any whitespace following a comma is ignored).  The first font family specified serves as the primary font family; subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.  For example, `\\\"Arial, Century Gothic\\\"` specifies Arial as the primary font family, with Century Gothic as the fallback font family.  \\n  \\n *fontFamilyFolderReference*  \\n A string specifying a folder containing the font, along with a font family name.  The folder and font family name are delimited by a # character.  The folder reference may be absolute, or relative.  For example, `\\\"Custom Fonts\\\\#My Custom Font\\\"`.  \\n  \\n *fontFamilyUriReference*  \\n A string specifying a [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] for the font, along with a font family name.  The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] and font family name are delimited by a # character.  For example, `\\\"http://MyFontServer/Fonts/#My Custom Font\\\"`.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontFamily\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.FontFamilyProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the FontFamily attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the FontFamily property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.Media.FontFamily FontFamily { get; set; }\n    return:\n      type: System.Windows.Media.FontFamily\n      description: A <xref href=\"System.Windows.Media.FontFamily\"></xref> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families. The default is the font determined by the <xref:System.Windows.SystemFonts.MessageFontFamily*> value.\n  overload: System.Windows.Controls.TextBlock.FontFamily*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontFamilyProperty\n  id: FontFamilyProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontFamilyProperty\n  nameWithType: TextBlock.FontFamilyProperty\n  fullName: System.Windows.Controls.TextBlock.FontFamilyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.FontFamily*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontFamilyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontSize\n  id: FontSize\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontSize\n  nameWithType: TextBlock.FontSize\n  fullName: System.Windows.Controls.TextBlock.FontSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the top-level font size for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Any FontSize settings on child elements override this top-level setting.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontSize`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontSize%2A> and <xref:System.Windows.Controls.TextBlock.SetFontSize%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontSize` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \\n  \\n<a name=\\\"xamlAttributeUsage_FontSize\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object FontSize=\\\"double\\\"/>  \\n- or -  \\n<object FontSize=\\\"qualifiedDouble\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_FontSize\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n String representation of a <xref:System.Double> value equal to or greater than 0.0 but smaller than <xref:System.Double.PositiveInfinity>. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontSize\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.FontSizeProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the FontSize attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the FontSize property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public double FontSize { get; set; }\n    return:\n      type: System.Double\n      description: The desired font size to use in device independent pixels). The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontSize%2A?displayProperty=fullName&gt; value.\n  overload: System.Windows.Controls.TextBlock.FontSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontSizeProperty\n  id: FontSizeProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontSizeProperty\n  nameWithType: TextBlock.FontSizeProperty\n  fullName: System.Windows.Controls.TextBlock.FontSizeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.FontSize*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontSizeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontStretch\n  id: FontStretch\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontStretch\n  nameWithType: TextBlock.FontStretch\n  fullName: System.Windows.Controls.TextBlock.FontStretch\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the top-level font-stretching characteristics for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Any FontStretch settings on child elements override this top-level setting.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStretch`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names of the <xref:System.Windows.FontStretch> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStretch%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStretch%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStretch` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontStretch\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.FontStretchProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the FontStretch attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the FontStretch property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.FontStretch FontStretch { get; set; }\n    return:\n      type: System.Windows.FontStretch\n      description: A member of the <xref href=\"System.Windows.FontStretch\"></xref> class specifying the desired font-stretching characteristics to use. The default is &lt;xref:System.Windows.FontStretches.Normal%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBlock.FontStretch*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontStretchProperty\n  id: FontStretchProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontStretchProperty\n  nameWithType: TextBlock.FontStretchProperty\n  fullName: System.Windows.Controls.TextBlock.FontStretchProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.FontStretch*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontStretchProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontStyle\n  id: FontStyle\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontStyle\n  nameWithType: TextBlock.FontStyle\n  fullName: System.Windows.Controls.TextBlock.FontStyle\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the top-level font style for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Any FontStyle settings on child elements override this top-level setting.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontStyle`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format property names in the <xref:System.Windows.FontStyles> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontStyle%2A> and <xref:System.Windows.Controls.TextBlock.SetFontStyle%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontStyle` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontStyle\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.FontStyleProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the FontStyle attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the FontStyle property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.FontStyle FontStyle { get; set; }\n    return:\n      type: System.Windows.FontStyle\n      description: A member of the <xref href=\"System.Windows.FontStyles\"></xref> class specifying the desired font style. The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontStyle%2A?displayProperty=fullName&gt; value.\n  overload: System.Windows.Controls.TextBlock.FontStyle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontStyleProperty\n  id: FontStyleProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontStyleProperty\n  nameWithType: TextBlock.FontStyleProperty\n  fullName: System.Windows.Controls.TextBlock.FontStyleProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.FontStyle*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontStyleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontWeight\n  id: FontWeight\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontWeight\n  nameWithType: TextBlock.FontWeight\n  fullName: System.Windows.Controls.TextBlock.FontWeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the top-level font weight for the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Any FontWeight settings on child elements override this top-level setting.  \\n  \\n For a list of valid values of font weights, see the <xref:System.Windows.FontWeights> class.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* FontWeight`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is one of the string-format values of a property of the <xref:System.Windows.FontWeights> class. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetFontWeight%2A> and <xref:System.Windows.Controls.TextBlock.SetFontWeight%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `FontWeight` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \\n  \\n<a name=\\\"dependencyPropertyInfo_FontWeight\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.FontWeightProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the FontWeight attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the FontWeight property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.FontWeight FontWeight { get; set; }\n    return:\n      type: System.Windows.FontWeight\n      description: A member of the <xref href=\"System.Windows.FontWeights\"></xref> class specifying the desired font weight. The default is determined by the &lt;xref:System.Windows.SystemFonts.MessageFontWeight%2A?displayProperty=fullName&gt; value.\n  overload: System.Windows.Controls.TextBlock.FontWeight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.FontWeightProperty\n  id: FontWeightProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: FontWeightProperty\n  nameWithType: TextBlock.FontWeightProperty\n  fullName: System.Windows.Controls.TextBlock.FontWeightProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.FontWeight*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FontWeightProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.Foreground\n  id: Foreground\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: Foreground\n  nameWithType: TextBlock.Foreground\n  fullName: System.Windows.Controls.TextBlock.Foreground\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.Media.Brush\"></xref> to apply to the text contents of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.  \\n  \\n Any Foreground settings on child elements override this top-level setting.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* Foreground`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string that resolves to a <xref:System.Windows.Media.Brush> implementation value. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetForeground%2A> and <xref:System.Windows.Controls.TextBlock.SetForeground%2A>. The attached property usage is not common, because most elements that can be contained in a <xref:System.Windows.Controls.TextBlock> support an analogous nonattached `Foreground` property, which the <xref:System.Windows.Controls.TextBlock> uses for rendering.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Foreground\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.ForegroundProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the Foreground attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the Foreground property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.Media.Brush Foreground { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: The brush used to apply to the text contents. The default is &lt;xref:System.Windows.Media.Brushes.Black%2A?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBlock.Foreground*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ForegroundProperty\n  id: ForegroundProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ForegroundProperty\n  nameWithType: TextBlock.ForegroundProperty\n  fullName: System.Windows.Controls.TextBlock.ForegroundProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.Foreground*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ForegroundProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)\n  id: GetBaselineOffset(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetBaselineOffset(DependencyObject)\n  nameWithType: TextBlock.GetBaselineOffset(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetBaselineOffset(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property for a specified dependency object.\n  syntax:\n    content: public static double GetBaselineOffset (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property.\n    return:\n      type: System.Double\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetBaselineOffset*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)\n  id: GetFontFamily(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetFontFamily(DependencyObject)\n  nameWithType: TextBlock.GetFontFamily(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontFamily(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref href=\"System.Windows.Controls.TextBlock.FontFamilyProperty\"></xref> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.Media.FontFamily GetFontFamily (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property.\n    return:\n      type: System.Windows.Media.FontFamily\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetFontFamily*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)\n  id: GetFontSize(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetFontSize(DependencyObject)\n  nameWithType: TextBlock.GetFontSize(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontSize(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property for a specified dependency object.\n  syntax:\n    content: public static double GetFontSize (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property.\n    return:\n      type: System.Double\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetFontSize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)\n  id: GetFontStretch(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetFontStretch(DependencyObject)\n  nameWithType: TextBlock.GetFontStretch(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontStretch(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.FontStretch GetFontStretch (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property.\n    return:\n      type: System.Windows.FontStretch\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetFontStretch*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)\n  id: GetFontStyle(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetFontStyle(DependencyObject)\n  nameWithType: TextBlock.GetFontStyle(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontStyle(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.FontStyle GetFontStyle (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property.\n    return:\n      type: System.Windows.FontStyle\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetFontStyle*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)\n  id: GetFontWeight(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetFontWeight(DependencyObject)\n  nameWithType: TextBlock.GetFontWeight(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontWeight(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.FontWeight GetFontWeight (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property.\n    return:\n      type: System.Windows.FontWeight\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetFontWeight*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)\n  id: GetForeground(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetForeground(DependencyObject)\n  nameWithType: TextBlock.GetForeground(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetForeground(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.Media.Brush GetForeground (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property.\n    return:\n      type: System.Windows.Media.Brush\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetForeground*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)\n  id: GetLineHeight(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetLineHeight(DependencyObject)\n  nameWithType: TextBlock.GetLineHeight(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetLineHeight(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property for a specified dependency object.\n  syntax:\n    content: public static double GetLineHeight (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property.\n    return:\n      type: System.Double\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetLineHeight*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)\n  id: GetLineStackingStrategy(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetLineStackingStrategy(DependencyObject)\n  nameWithType: TextBlock.GetLineStackingStrategy(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetLineStackingStrategy(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property.\n    return:\n      type: System.Windows.LineStackingStrategy\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetLineStackingStrategy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  id: GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetPositionFromPoint(Point,Boolean)\n  nameWithType: TextBlock.GetPositionFromPoint(Point,Boolean)\n  fullName: System.Windows.Controls.TextBlock.GetPositionFromPoint(Point,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the position closest to a specified <xref href=\"System.Windows.Point\"></xref>.\n  remarks: This method always returns a valid <xref:System.Windows.Documents.TextPointer> when `snapToText` is `true`.\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetPositionFromPoint (System.Windows.Point point, bool snapToText);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: A <xref href=\"System.Windows.Point\"></xref> in the coordinate space of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> for which to return a <xref href=\"System.Windows.Documents.TextPointer\"></xref>.\n    - id: snapToText\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to return a <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the insertion point closest to `point`, whether or not `point` is inside a character's bounding box; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if `point` is not inside a character's bounding box.\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> to the specified point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>snapToText</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the specified point does not fall within a character bounding box in the <xref href=\"System.Windows.Controls.TextBlock\"></xref> content area.\n  overload: System.Windows.Controls.TextBlock.GetPositionFromPoint*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Current, valid layout information for the control is unavailable.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)\n  id: GetRectanglesCore(System.Windows.ContentElement)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetRectanglesCore(ContentElement)\n  nameWithType: TextBlock.GetRectanglesCore(ContentElement)\n  fullName: System.Windows.Controls.TextBlock.GetRectanglesCore(ContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a read-only collection of bounding rectangles for a specified <xref href=\"System.Windows.ContentElement\"></xref>.\n  remarks: Each bounding rectangle in the collection corresponds to a line of content in the <xref:System.Windows.ContentElement>.\n  syntax:\n    content: protected virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect> GetRectanglesCore (System.Windows.ContentElement child);\n    parameters:\n    - id: child\n      type: System.Windows.ContentElement\n      description: A <xref href=\"System.Windows.ContentElement\"></xref> for which to generate and return a collection of bounding rectangles.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}\n      description: A read-only collection of bounding rectangles for the specified <xref href=\"System.Windows.ContentElement\"></xref>.\n  overload: System.Windows.Controls.TextBlock.GetRectanglesCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>child</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)\n  id: GetTextAlignment(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetTextAlignment(DependencyObject)\n  nameWithType: TextBlock.GetTextAlignment(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetTextAlignment(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property for a specified dependency object.\n  syntax:\n    content: public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object from which to retrieve the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property.\n    return:\n      type: System.Windows.TextAlignment\n      description: The current value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on the specified dependency object.\n  overload: System.Windows.Controls.TextBlock.GetTextAlignment*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)\n  id: GetVisualChild(System.Int32)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: GetVisualChild(Int32)\n  nameWithType: TextBlock.GetVisualChild(Int32)\n  fullName: System.Windows.Controls.TextBlock.GetVisualChild(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the <xref href=\"System.Windows.Media.Visual\"></xref> child at a specified index.\n  remarks: This method overrides <xref:System.Windows.FrameworkElement.GetVisualChild%2A?displayProperty=fullName>.\n  syntax:\n    content: protected override System.Windows.Media.Visual GetVisualChild (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: A zero-based index specifying the <xref href=\"System.Windows.Media.Visual\"></xref> child to return.  This value must be between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)\n    return:\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> child at the specified index.\n  overload: System.Windows.Controls.TextBlock.GetVisualChild*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not between 0 and (<xref:System.Windows.Controls.TextBlock.VisualChildrenCount*> minus 1)\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  id: HitTestCore(System.Windows.Media.PointHitTestParameters)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: HitTestCore(PointHitTestParameters)\n  nameWithType: TextBlock.HitTestCore(PointHitTestParameters)\n  fullName: System.Windows.Controls.TextBlock.HitTestCore(PointHitTestParameters)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Media.PointHitTestResult\"></xref> for specified <xref href=\"System.Windows.Media.PointHitTestParameters\"></xref>.\n  remarks: \"This method is intended to enable precise hit testing for rendered content.  \\n  \\n This method overrides <xref:System.Windows.UIElement.HitTestCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override sealed System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);\n    parameters:\n    - id: hitTestParameters\n      type: System.Windows.Media.PointHitTestParameters\n      description: A <xref href=\"System.Windows.Media.PointHitTestParameters\"></xref> object specifying the parameters to hit test for.\n    return:\n      type: System.Windows.Media.HitTestResult\n      description: A <xref href=\"System.Windows.Media.PointHitTestResult\"></xref> for the specified hit test parameters.\n  overload: System.Windows.Controls.TextBlock.HitTestCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>hitTestParameters</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.HostedElementsCore\n  id: HostedElementsCore\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: HostedElementsCore\n  nameWithType: TextBlock.HostedElementsCore\n  fullName: System.Windows.Controls.TextBlock.HostedElementsCore\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets an enumerator that can be used iterate the elements hosted by this <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  syntax:\n    content: protected virtual System.Collections.Generic.IEnumerator<System.Windows.IInputElement> HostedElementsCore { get; }\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}\n      description: An enumerator that can iterate elements hosted by this <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.HostedElementsCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.Inlines\n  id: Inlines\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: Inlines\n  nameWithType: TextBlock.Inlines\n  fullName: System.Windows.Controls.TextBlock.Inlines\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets an <xref href=\"System.Windows.Documents.InlineCollection\"></xref> containing the top-level <xref href=\"System.Windows.Documents.Inline\"></xref> elements that comprise the contents of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: Use the <xref:System.Windows.Documents.InlineCollection> returned by this property to enumerate or manipulate the contents of a <xref:System.Windows.Controls.TextBlock>.\n  syntax:\n    content: public System.Windows.Documents.InlineCollection Inlines { get; }\n    return:\n      type: System.Windows.Documents.InlineCollection\n      description: An <xref href=\"System.Windows.Documents.InlineCollection\"></xref> containing the <xref href=\"System.Windows.Documents.Inline\"></xref> elements that comprise the contents of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.Inlines*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)\n  id: InputHitTestCore(System.Windows.Point)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: InputHitTestCore(Point)\n  nameWithType: TextBlock.InputHitTestCore(Point)\n  fullName: System.Windows.Controls.TextBlock.InputHitTestCore(Point)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns the <xref href=\"System.Windows.IInputElement\"></xref> at a specified <xref href=\"System.Windows.Point\"></xref> within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  syntax:\n    content: protected virtual System.Windows.IInputElement InputHitTestCore (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: A <xref href=\"System.Windows.Point\"></xref>, in the coordinate space of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>, for which to return the corresponding <xref href=\"System.Windows.IInputElement\"></xref>.\n    return:\n      type: System.Windows.IInputElement\n      description: The <xref href=\"System.Windows.IInputElement\"></xref> found at the specified Point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no such <xref href=\"System.Windows.IInputElement\"></xref> can be found.\n  overload: System.Windows.Controls.TextBlock.InputHitTestCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabled\n  id: IsHyphenationEnabled\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: IsHyphenationEnabled\n  nameWithType: TextBlock.IsHyphenationEnabled\n  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabled\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.\n  remarks: \"The automatic word hyphenation feature enables a <xref:System.Windows.Controls.TextBlock> to automatically break and hyphenate words, based on current layout conditions.  This enables long words to begin on one line and continue on this next, and tends to achieve a more even distribution of white space in justified text.  Words are broken and hyphenated according to standard grammar rules.  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsHyphenationEnabled\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  syntax:\n    content: public bool IsHyphenationEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that automatic breaking and hyphenation of words is enabled; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.TextBlock.IsHyphenationEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty\n  id: IsHyphenationEnabledProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: IsHyphenationEnabledProperty\n  nameWithType: TextBlock.IsHyphenationEnabledProperty\n  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.IsHyphenationEnabled*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.LineHeight\n  id: LineHeight\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: LineHeight\n  nameWithType: TextBlock.LineHeight\n  fullName: System.Windows.Controls.TextBlock.LineHeight\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the height of each line of content.\n  remarks: \"Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text. To change the size of the text, use the <xref:System.Windows.Controls.TextBlock.FontSize%2A> property.  \\n  \\n In addition to this property, the layout of lines in a <xref:System.Windows.Controls.TextBlock> is affected by its <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property.  \\n  \\n This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineHeight`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string as explained in XAML Values. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineHeight%2A> and <xref:System.Windows.Controls.TextBlock.SetLineHeight%2A>. The attached property usage is not common.  \\n  \\n<a name=\\\"xamlAttributeUsage_LineHeight\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object LineHeight=\\\"double\\\"/>  \\n- or -  \\n<object LineHeight=\\\"qualifiedDouble\\\"/>  \\n- or -  \\n<object LineHeight=\\\"Auto\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_LineHeight\\\"></a>   \\n## XAML Values  \\n *double*  \\n <xref:System.Double>  \\n  \\n String representation of a <xref:System.Double> value equal to or greater than `0.0034` and equal to or less then `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n Auto  \\n Causes the line height to be determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN?displayProperty=fullName>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_LineHeight\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.LineHeightProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the LineHeight attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the LineHeight property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public double LineHeight { get; set; }\n    return:\n      type: System.Double\n      description: The height of line, in device independent pixels, in the range of 0.0034 to 160000. A value of &lt;xref:System.Double?displayProperty=fullName&gt; (equivalent to an attribute value of \"`Auto`\") indicates that the line height is determined automatically from the current font characteristics. The default is &lt;xref:System.Double?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBlock.LineHeight*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: LineHeight is set to a non-positive value.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.LineHeightProperty\n  id: LineHeightProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: LineHeightProperty\n  nameWithType: TextBlock.LineHeightProperty\n  fullName: System.Windows.Controls.TextBlock.LineHeightProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.LineHeight*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.LineStackingStrategy\n  id: LineStackingStrategy\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: LineStackingStrategy\n  nameWithType: TextBlock.LineStackingStrategy\n  fullName: System.Windows.Controls.TextBlock.LineStackingStrategy\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the mechanism by which a line box is determined for each line of text within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* LineStackingStrategy`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.LineStackingStrategy> enumeration. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetLineStackingStrategy%2A> and <xref:System.Windows.Controls.TextBlock.SetLineStackingStrategy%2A>. The attached property usage is not common.  \\n  \\n<a name=\\\"dependencyPropertyInfo_LineStackingStrategy\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.LineStackingStrategyProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to use the LineStackingStrategy property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>. The first <xref:System.Windows.Controls.TextBlock> has a LineStackingStrategy value of <xref:System.Windows.LineStackingStrategy> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy>.  \\n  \\n [!code-xml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/add/codesnippet/xaml/flowmiscsnippets_snip/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  \\n  \\n The following illustration shows the result of the preceding code.  \\n  \\n ![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif \\\"Screenshot: Compare LineStackingStrategy values\\\")\"\n  syntax:\n    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }\n    return:\n      type: System.Windows.LineStackingStrategy\n      description: The mechanism by which a line box is determined for each line of text within the <xref href=\"System.Windows.Controls.TextBlock\"></xref>. The default is <xref href=\"System.Windows.LineStackingStrategy\"></xref>.\n  overload: System.Windows.Controls.TextBlock.LineStackingStrategy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.LineStackingStrategyProperty\n  id: LineStackingStrategyProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: LineStackingStrategyProperty\n  nameWithType: TextBlock.LineStackingStrategyProperty\n  fullName: System.Windows.Controls.TextBlock.LineStackingStrategyProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.LogicalChildren\n  id: LogicalChildren\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: LogicalChildren\n  nameWithType: TextBlock.LogicalChildren\n  fullName: System.Windows.Controls.TextBlock.LogicalChildren\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets an enumerator that can iterate the logical children of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  syntax:\n    content: protected override System.Collections.IEnumerator LogicalChildren { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator for the logical children.\n  overload: System.Windows.Controls.TextBlock.LogicalChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: TextBlock.MeasureOverride(Size)\n  fullName: System.Windows.Controls.TextBlock.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called to re-measure the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Override this method to implement custom sizing behavior.  \\n  \\n This method overrides <xref:System.Windows.FrameworkElement.MeasureOverride%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override sealed System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure specifying any constraints on the size of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure indicating the new size of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)\n  id: OnChildDesiredSizeChangedCore(System.Windows.UIElement)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: OnChildDesiredSizeChangedCore(UIElement)\n  nameWithType: TextBlock.OnChildDesiredSizeChangedCore(UIElement)\n  fullName: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when a child element deriving from <xref href=\"System.Windows.UIElement\"></xref> changes its <xref:System.Windows.UIElement.DesiredSize*>.\n  syntax:\n    content: protected virtual void OnChildDesiredSizeChangedCore (System.Windows.UIElement child);\n    parameters:\n    - id: child\n      type: System.Windows.UIElement\n      description: The child <xref href=\"System.Windows.UIElement\"></xref> element whose <xref:System.Windows.UIElement.DesiredSize*> has changed.\n  overload: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: TextBlock.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.TextBlock.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>.\n  syntax:\n    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the value one or more hosted dependency properties changes.\n  remarks: This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=fullName>.\n  syntax:\n    content: protected override sealed void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: Arguments for the associated event.\n  overload: System.Windows.Controls.TextBlock.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)\n  id: OnRender(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: OnRender(DrawingContext)\n  nameWithType: TextBlock.OnRender(DrawingContext)\n  fullName: System.Windows.Controls.TextBlock.OnRender(DrawingContext)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Renders the contents of a <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: This method is invoked by the layout system to render the contents of the <xref:System.Windows.Controls.TextBlock>.\n  syntax:\n    content: protected override sealed void OnRender (System.Windows.Media.DrawingContext ctx);\n    parameters:\n    - id: ctx\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> to render the control on.\n  overload: System.Windows.Controls.TextBlock.OnRender*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ctx</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.Padding\n  id: Padding\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: TextBlock.Padding\n  fullName: System.Windows.Controls.TextBlock.Padding\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Padding can be described as uniform in all directions (`Padding=\\\"10\\\"`), or as four distinct values that represent left, top, right, and bottom padding independently (`Padding=\\\"5,0,10,20\\\"`).  \\n  \\n If a specified padding thickness exceeds the corresponding content area dimension (for example, the sum of the left and right padding widths exceeds the content area width), the thickness of the padding is proportionally reduced to be no greater than the relevant content area dimension.  \\n  \\n<a name=\\\"xamlAttributeUsage_Padding\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Padding=\\\"uniformThickness\\\"/>  \\n- or -  \\n<object Padding=\\\"independentThickness\\\"/>  \\n- or -  \\n<object Padding=\\\"qualifiedUniformThickness\\\"/>  \\n- or -  \\n<object Padding=\\\"qualifiedIndependentThickness\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Padding\\\"></a>   \\n## XAML Values  \\n *uniformThickness*  \\n String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `\\\"10\\\"` is equivalent to a value of `\\\"10,10,10,10\\\"`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  \\n  \\n *independentThickness*  \\n String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, \\\"5,10,15,20\\\" results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.  \\n  \\n *qualifiedUniformThickness*  \\n A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1in\\\"` provides uniform padding of 1 inch in all directions.  \\n  \\n *qualifiedIndependentThickness*  \\n A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n For example, `\\\"1.5in,0.8in,1.5in,0.8in\\\"`.  Unit specifiers may be mixed or omitted from one or more values.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Padding\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.PaddingProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|\"\n  example:\n  - \"The following example shows how to set the Padding attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the Padding property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.Thickness Padding { get; set; }\n    return:\n      type: System.Windows.Thickness\n      description: A <xref href=\"System.Windows.Thickness\"></xref> structure specifying the amount of padding to apply, in device independent pixels. The default is &lt;xref:System.Double.NaN?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBlock.Padding*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.PaddingProperty\n  id: PaddingProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: PaddingProperty\n  nameWithType: TextBlock.PaddingProperty\n  fullName: System.Windows.Controls.TextBlock.PaddingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.Padding*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PaddingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)\n  id: SetBaselineOffset(System.Windows.DependencyObject,System.Double)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetBaselineOffset(DependencyObject,Double)\n  nameWithType: TextBlock.SetBaselineOffset(DependencyObject,Double)\n  fullName: System.Windows.Controls.TextBlock.SetBaselineOffset(DependencyObject,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetBaselineOffset (System.Windows.DependencyObject element, double value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property.\n    - id: value\n      type: System.Double\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetBaselineOffset*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)\n  id: SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetFontFamily(DependencyObject,FontFamily)\n  nameWithType: TextBlock.SetFontFamily(DependencyObject,FontFamily)\n  fullName: System.Windows.Controls.TextBlock.SetFontFamily(DependencyObject,FontFamily)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetFontFamily (System.Windows.DependencyObject element, System.Windows.Media.FontFamily value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontFamily*> property.\n    - id: value\n      type: System.Windows.Media.FontFamily\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetFontFamily*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)\n  id: SetFontSize(System.Windows.DependencyObject,System.Double)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetFontSize(DependencyObject,Double)\n  nameWithType: TextBlock.SetFontSize(DependencyObject,Double)\n  fullName: System.Windows.Controls.TextBlock.SetFontSize(DependencyObject,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetFontSize (System.Windows.DependencyObject element, double value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontSize*> property.\n    - id: value\n      type: System.Double\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetFontSize*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)\n  id: SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetFontStretch(DependencyObject,FontStretch)\n  nameWithType: TextBlock.SetFontStretch(DependencyObject,FontStretch)\n  fullName: System.Windows.Controls.TextBlock.SetFontStretch(DependencyObject,FontStretch)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetFontStretch (System.Windows.DependencyObject element, System.Windows.FontStretch value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStretch*> property.\n    - id: value\n      type: System.Windows.FontStretch\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetFontStretch*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)\n  id: SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetFontStyle(DependencyObject,FontStyle)\n  nameWithType: TextBlock.SetFontStyle(DependencyObject,FontStyle)\n  fullName: System.Windows.Controls.TextBlock.SetFontStyle(DependencyObject,FontStyle)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetFontStyle (System.Windows.DependencyObject element, System.Windows.FontStyle value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontStyle*> property.\n    - id: value\n      type: System.Windows.FontStyle\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetFontStyle*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)\n  id: SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetFontWeight(DependencyObject,FontWeight)\n  nameWithType: TextBlock.SetFontWeight(DependencyObject,FontWeight)\n  fullName: System.Windows.Controls.TextBlock.SetFontWeight(DependencyObject,FontWeight)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetFontWeight (System.Windows.DependencyObject element, System.Windows.FontWeight value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.FontWeight*> property.\n    - id: value\n      type: System.Windows.FontWeight\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetFontWeight*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)\n  id: SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetForeground(DependencyObject,Brush)\n  nameWithType: TextBlock.SetForeground(DependencyObject,Brush)\n  fullName: System.Windows.Controls.TextBlock.SetForeground(DependencyObject,Brush)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetForeground (System.Windows.DependencyObject element, System.Windows.Media.Brush value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.Foreground*> property.\n    - id: value\n      type: System.Windows.Media.Brush\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetForeground*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)\n  id: SetLineHeight(System.Windows.DependencyObject,System.Double)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetLineHeight(DependencyObject,Double)\n  nameWithType: TextBlock.SetLineHeight(DependencyObject,Double)\n  fullName: System.Windows.Controls.TextBlock.SetLineHeight(DependencyObject,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetLineHeight (System.Windows.DependencyObject element, double value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineHeight*> property.\n    - id: value\n      type: System.Double\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetLineHeight*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <xref:System.Windows.Controls.TextBlock.LineHeight*>is set to a non-positive value.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)\n  id: SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetLineStackingStrategy(DependencyObject,LineStackingStrategy)\n  nameWithType: TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)\n  fullName: System.Windows.Controls.TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy*> property.\n    - id: value\n      type: System.Windows.LineStackingStrategy\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetLineStackingStrategy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)\n  id: SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: SetTextAlignment(DependencyObject,TextAlignment)\n  nameWithType: TextBlock.SetTextAlignment(DependencyObject,TextAlignment)\n  fullName: System.Windows.Controls.TextBlock.SetTextAlignment(DependencyObject,TextAlignment)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> attached property on a specified dependency object.\n  syntax:\n    content: public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The dependency object on which to set the value of the <xref:System.Windows.Controls.TextBlock.TextAlignment*> property.\n    - id: value\n      type: System.Windows.TextAlignment\n      description: The new value to set the property to.\n  overload: System.Windows.Controls.TextBlock.SetTextAlignment*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset\n  id: ShouldSerializeBaselineOffset\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ShouldSerializeBaselineOffset()\n  nameWithType: TextBlock.ShouldSerializeBaselineOffset()\n  fullName: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.TextBlock\"></xref> object.\n  syntax:\n    content: public bool ShouldSerializeBaselineOffset ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBlock.BaselineOffset*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)\n  id: ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ShouldSerializeInlines(XamlDesignerSerializationManager)\n  nameWithType: TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)\n  fullName: System.Windows.Controls.TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.Inlines*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.TextBlock\"></xref> object.\n  syntax:\n    content: public bool ShouldSerializeInlines (System.Windows.Markup.XamlDesignerSerializationManager manager);\n    parameters:\n    - id: manager\n      type: System.Windows.Markup.XamlDesignerSerializationManager\n      description: A serialization service manager object for this object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBlock.Inlines*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.TextBlock.ShouldSerializeInlines*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>manager</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeText\n  id: ShouldSerializeText\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: ShouldSerializeText()\n  nameWithType: TextBlock.ShouldSerializeText()\n  fullName: System.Windows.Controls.TextBlock.ShouldSerializeText()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates whether the effective value of the <xref:System.Windows.Controls.TextBlock.Text*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.TextBlock\"></xref> object.\n  syntax:\n    content: public bool ShouldSerializeText ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.TextBlock.Text*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.TextBlock.ShouldSerializeText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)\n  id: System#IServiceProvider#GetService(System.Type)\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.IServiceProvider.GetService(Type)\n  nameWithType: TextBlock.System.IServiceProvider.GetService(Type)\n  fullName: System.Windows.Controls.TextBlock.System.IServiceProvider.GetService(Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: object IServiceProvider.GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: An object that specifies the type of service object to get.\n    return:\n      type: System.Object\n      description: A service object of type <code>serviceType</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no service object of type <code>serviceType</code>.\n  overload: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)\n  id: System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.Windows.IContentHost.GetRectangles(ContentElement)\n  nameWithType: TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.GetRectanglesCore*> method instead.\n  syntax:\n    content: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect> IContentHost.GetRectangles (System.Windows.ContentElement child);\n    parameters:\n    - id: child\n      type: System.Windows.ContentElement\n      description: A <xref href=\"System.Windows.ContentElement\"></xref> for which to generate and return a collection of bounding rectangles.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}\n      description: A read-only collection of bounding rectangles for the specified <xref href=\"System.Windows.ContentElement\"></xref>.\n  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements\n  id: System#Windows#IContentHost#HostedElements\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.Windows.IContentHost.HostedElements\n  nameWithType: TextBlock.System.Windows.IContentHost.HostedElements\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.HostedElements\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.HostedElementsCore*> property instead.\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.IInputElement> System.Windows.IContentHost.HostedElements { get; }\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}\n      description: Elements hosted by the content host.\n  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)\n  id: System#Windows#IContentHost#InputHitTest(System.Windows.Point)\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.Windows.IContentHost.InputHitTest(Point)\n  nameWithType: TextBlock.System.Windows.IContentHost.InputHitTest(Point)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.InputHitTest(Point)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.InputHitTestCore*> method instead.\n  syntax:\n    content: System.Windows.IInputElement IContentHost.InputHitTest (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: Mouse coordinates relative to the content host.\n    return:\n      type: System.Windows.IInputElement\n      description: The element that has been hit.\n  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)\n  id: System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)\n  nameWithType: TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This method supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*> method instead.\n  syntax:\n    content: void IContentHost.OnChildDesiredSizeChanged (System.Windows.UIElement child);\n    parameters:\n    - id: child\n      type: System.Windows.UIElement\n      description: The child <xref href=\"System.Windows.UIElement\"></xref> element whose <xref:System.Windows.UIElement.DesiredSize*> has changed.\n  overload: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  id: System#Windows#Markup#IAddChild#AddChild(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IAddChild.AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to add as a child.\n  overload: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)\n  id: System#Windows#Markup#IAddChild#AddText(System.String)\n  isEii: true\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IAddChild.AddText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: A string to add to the object.\n  overload: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.Text\n  id: Text\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: Text\n  nameWithType: TextBlock.Text\n  fullName: System.Windows.Controls.TextBlock.Text\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the text contents of a <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"Use this property when you want to show plain text in a <xref:System.Windows.Controls.TextBlock>.  When you need to format the text, add <xref:System.Windows.Documents.Inline> objects to the <xref:System.Windows.Controls.TextBlock.Inlines%2A> property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_Text\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.TextProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the Text attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[SpanSnippets#_TextBlock_Text1XAML](~/add/codesnippet/xaml/SpanSnippets/Window1.xaml#_textblock_text1xaml)]  \\n  \\n Alternately, the contents of a text run may simply be contained by <xref:System.Windows.Controls.TextBlock> element tags.  \\n  \\n The following example shows how to set the Text property programmatically.  \\n  \\n [!code-cs[SpanSnippets#_TextBlock_Text](~/add/codesnippet/csharp/SpanSnippets/Window1.xaml.cs#_textblock_text)]\\n [!code-vb[SpanSnippets#_TextBlock_Text](~/add/codesnippet/visualbasic/spansnippets/window1.xaml.vb#_textblock_text)]\"\n  syntax:\n    content: public string Text { get; set; }\n    return:\n      type: System.String\n      description: The text contents of this <xref href=\"System.Windows.Controls.TextBlock\"></xref>. Note that all non-text content is stripped out, resulting in a plain text representation of the <xref href=\"System.Windows.Controls.TextBlock\"></xref> contents. The default is &lt;xref:System.String.Empty?displayProperty=fullName&gt;.\n  overload: System.Windows.Controls.TextBlock.Text*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextAlignment\n  id: TextAlignment\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextAlignment\n  nameWithType: TextBlock.TextAlignment\n  fullName: System.Windows.Controls.TextBlock.TextAlignment\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates the horizontal alignment of text content.\n  remarks: \"This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is `<`*object* TextAlignment`=\\\"`*value*`\\\".../>`, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Controls.TextBlock>, and *value* is a string value of the <xref:System.Windows.TextAlignment> enumeration. In code, the attached property usage is supported by <xref:System.Windows.Controls.TextBlock.GetTextAlignment%2A> and <xref:System.Windows.Controls.TextBlock.SetTextAlignment%2A>. The attached property usage is not common.  \\n  \\n<a name=\\\"dependencyPropertyInfo_TextAlignment\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.TextAlignmentProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|\"\n  example:\n  - \"The following example shows how to set the TextAlignment attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the TextAlignment property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.TextAlignment TextAlignment { get; set; }\n    return:\n      type: System.Windows.TextAlignment\n      description: One of the <xref href=\"System.Windows.TextAlignment\"></xref> values that specifies the desired alignment. The default is <xref href=\"System.Windows.TextAlignment\"></xref>.\n  overload: System.Windows.Controls.TextBlock.TextAlignment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextAlignmentProperty\n  id: TextAlignmentProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextAlignmentProperty\n  nameWithType: TextBlock.TextAlignmentProperty\n  fullName: System.Windows.Controls.TextBlock.TextAlignmentProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.TextAlignment*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextDecorations\n  id: TextDecorations\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextDecorations\n  nameWithType: TextBlock.TextDecorations\n  fullName: System.Windows.Controls.TextBlock.TextDecorations\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a <xref href=\"System.Windows.TextDecorationCollection\"></xref> that contains the effects to apply to the text of a <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  remarks: \"A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text. There are four types of text decorations: underline, baseline, strikethrough, and overline.  For more information about text decorations, see [How to: Create a Text Decoration](~/add/includes/ajax-current-ext-md.md).  \\n  \\n By default, this property is set to `null` and has no <xref:System.Windows.TextDecorationCollection> associated with it.  Before adding any text effects, create a new <xref:System.Windows.TextDecorationCollection> and assign it to this property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_TextDecorations\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.TextDecorationsProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the TextDecorations attribute.  \\n  \\n [!code-xml[InlineSnippets#_TextBlock_TextDecXAML](~/add/codesnippet/xaml/InlineSnippets/Window1.xaml#_textblock_textdecxaml)]  \\n  \\n The following figure shows how this example renders.  \\n  \\n ![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png \\\"Screenshot: Text with default strikethrough effect\\\")  \\n  \\n The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.  \\n  \\n ![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png \\\"Screenshot: Overline TextDecorator\\\")  \\n  \\n ![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png \\\"Screenshot: Default baseline effect on text\\\")  \\n  \\n ![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png \\\"Screenshot: Text with default underline effect\\\")  \\n  \\n The following example shows how to set the TextDecorations property programmatically.  \\n  \\n [!code-cs[InlineSnippets#_TextBlock_TextDec](~/add/codesnippet/csharp/InlineSnippets/Window1.xaml.cs#_textblock_textdec)]\\n [!code-vb[InlineSnippets#_TextBlock_TextDec](~/add/codesnippet/visualbasic/inlinesnippets/window1.xaml.vb#_textblock_textdec)]\"\n  syntax:\n    content: public System.Windows.TextDecorationCollection TextDecorations { get; set; }\n    return:\n      type: System.Windows.TextDecorationCollection\n      description: A <xref href=\"System.Windows.TextDecorationCollection\"></xref> collection that contains text decorations to apply to this element. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no text decorations applied).\n  overload: System.Windows.Controls.TextBlock.TextDecorations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextDecorationsProperty\n  id: TextDecorationsProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextDecorationsProperty\n  nameWithType: TextBlock.TextDecorationsProperty\n  fullName: System.Windows.Controls.TextBlock.TextDecorationsProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.TextDecorations*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextDecorationsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextEffects\n  id: TextEffects\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextEffects\n  nameWithType: TextBlock.TextEffects\n  fullName: System.Windows.Controls.TextBlock.TextEffects\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the effects to apply to the text content in this element.\n  remarks: \"By default, this property is set to `null` and has no <xref:System.Windows.Media.TextEffectCollection> associated with it.  Before adding any text effects, create a new <xref:System.Windows.Media.TextEffectCollection> and assign it to this property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_TextEffects\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.TextEffectsProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to create a simple text effect and apply it to a text of a <xref:System.Windows.Controls.TextBlock>.  \\n  \\n [!code-vb[TextElementSnippets#_TextBlock_TextEffects](~/add/codesnippet/visualbasic/textelementsnippets/window1.xaml.vb#_textblock_texteffects)]\\n [!code-cs[TextElementSnippets#_TextBlock_TextEffects](~/add/codesnippet/csharp/TextElementSnippets/Window1.xaml.cs#_textblock_texteffects)]\"\n  syntax:\n    content: public System.Windows.Media.TextEffectCollection TextEffects { get; set; }\n    return:\n      type: System.Windows.Media.TextEffectCollection\n      description: A <xref href=\"System.Windows.Media.TextEffectCollection\"></xref> containing one or more <xref href=\"System.Windows.Media.TextEffect\"></xref> objects that define effects to apply to the text of the <xref href=\"System.Windows.Controls.TextBlock\"></xref>. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> (no effects applied).\n  overload: System.Windows.Controls.TextBlock.TextEffects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextEffectsProperty\n  id: TextEffectsProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextEffectsProperty\n  nameWithType: TextBlock.TextEffectsProperty\n  fullName: System.Windows.Controls.TextBlock.TextEffectsProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.TextEffects*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextEffectsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextProperty\n  id: TextProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextProperty\n  nameWithType: TextBlock.TextProperty\n  fullName: System.Windows.Controls.TextBlock.TextProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.Text*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextTrimming\n  id: TextTrimming\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextTrimming\n  nameWithType: TextBlock.TextTrimming\n  fullName: System.Windows.Controls.TextBlock.TextTrimming\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the text trimming behavior to employ when content overflows the content area.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_TextTrimming\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.TextTrimmingProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  syntax:\n    content: public System.Windows.TextTrimming TextTrimming { get; set; }\n    return:\n      type: System.Windows.TextTrimming\n      description: One of the <xref href=\"System.Windows.TextTrimming\"></xref> values that specifies the text trimming behavior to employ. The default is <xref href=\"System.Windows.TextTrimming\"></xref>.\n  overload: System.Windows.Controls.TextBlock.TextTrimming*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextTrimmingProperty\n  id: TextTrimmingProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextTrimmingProperty\n  nameWithType: TextBlock.TextTrimmingProperty\n  fullName: System.Windows.Controls.TextBlock.TextTrimmingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.TextTrimming*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextTrimmingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextWrapping\n  id: TextWrapping\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextWrapping\n  nameWithType: TextBlock.TextWrapping\n  fullName: System.Windows.Controls.TextBlock.TextWrapping\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets how the <xref href=\"System.Windows.Controls.TextBlock\"></xref> should wrap text.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_TextWrapping\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.TextBlock.TextWrappingProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|\"\n  example:\n  - \"The following example shows how to set the TextWrapping attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the TextWrapping property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.TextWrapping TextWrapping { get; set; }\n    return:\n      type: System.Windows.TextWrapping\n      description: One of the <xref href=\"System.Windows.TextWrapping\"></xref> values. The default is <xref href=\"System.Windows.TextWrapping\"></xref>.\n  overload: System.Windows.Controls.TextBlock.TextWrapping*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.TextWrappingProperty\n  id: TextWrappingProperty\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: TextWrappingProperty\n  nameWithType: TextBlock.TextWrappingProperty\n  fullName: System.Windows.Controls.TextBlock.TextWrappingProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.TextBlock.TextWrapping*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TextWrappingProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.Typography\n  id: Typography\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: Typography\n  nameWithType: TextBlock.Typography\n  fullName: System.Windows.Controls.TextBlock.Typography\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the currently effective typography variations for the contents of this element.\n  remarks: The Typography property is applicable only to [!INCLUDE[TLA#tla_opentype](~/add/includes/tlasharptla-opentype-md.md)] fonts. A typography variant has no effect on fonts that do not support the variant.  For more information on this topic, see [Typography in WPF](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example shows how to set the Typography attribute of a <xref:System.Windows.Controls.TextBlock> element.  \\n  \\n [!code-xml[FlowDocumentSnippets#_TextBlockPropsXAML](~/add/codesnippet/xaml/FlowDocumentSnippets/Window1.xaml#_textblockpropsxaml)]  \\n  \\n The following example shows how to set the Typography property programmatically.  \\n  \\n [!code-cs[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/csharp/FlowDocumentSnippets/Window1.xaml.cs#_textblockprops)]\\n [!code-vb[FlowDocumentSnippets#_TextBlockProps](~/add/codesnippet/visualbasic/flowdocumentsnippets/window1.xaml.vb#_textblockprops)]\"\n  syntax:\n    content: public System.Windows.Documents.Typography Typography { get; }\n    return:\n      type: System.Windows.Documents.Typography\n      description: A <xref href=\"System.Windows.Documents.Typography\"></xref> object that specifies the currently effective typography variations. For a list of default typography values, see <xref href=\"System.Windows.Documents.Typography\"></xref>.\n  overload: System.Windows.Controls.TextBlock.Typography*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.TextBlock.VisualChildrenCount\n  id: VisualChildrenCount\n  parent: System.Windows.Controls.TextBlock\n  langs:\n  - csharp\n  name: VisualChildrenCount\n  nameWithType: TextBlock.VisualChildrenCount\n  fullName: System.Windows.Controls.TextBlock.VisualChildrenCount\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the number of <xref href=\"System.Windows.Media.Visual\"></xref> children hosted by the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  syntax:\n    content: protected override int VisualChildrenCount { get; }\n    return:\n      type: System.Int32\n      description: The number of visual children hosted by the <xref href=\"System.Windows.Controls.TextBlock\"></xref>.\n  overload: System.Windows.Controls.TextBlock.VisualChildrenCount*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.FrameworkElement\n  isExternal: false\n  name: System.Windows.FrameworkElement\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Controls.TextBlock.#ctor\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextBlock()\n  nameWithType: TextBlock.TextBlock()\n  fullName: System.Windows.Controls.TextBlock.TextBlock()\n- uid: System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextBlock(Inline)\n  nameWithType: TextBlock.TextBlock(Inline)\n  fullName: System.Windows.Controls.TextBlock.TextBlock(Inline)\n- uid: System.Windows.Documents.Inline\n  parent: System.Windows.Documents\n  isExternal: false\n  name: Inline\n  nameWithType: Inline\n  fullName: System.Windows.Documents.Inline\n- uid: System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: TextBlock.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.TextBlock.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.TextBlock.Background\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Background\n  nameWithType: TextBlock.Background\n  fullName: System.Windows.Controls.TextBlock.Background\n- uid: System.Windows.Media.Brush\n  parent: System.Windows.Media\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Windows.Media.Brush\n- uid: System.Windows.Controls.TextBlock.BackgroundProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BackgroundProperty\n  nameWithType: TextBlock.BackgroundProperty\n  fullName: System.Windows.Controls.TextBlock.BackgroundProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.TextBlock.BaselineOffset\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BaselineOffset\n  nameWithType: TextBlock.BaselineOffset\n  fullName: System.Windows.Controls.TextBlock.BaselineOffset\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Controls.TextBlock.BaselineOffsetProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BaselineOffsetProperty\n  nameWithType: TextBlock.BaselineOffsetProperty\n  fullName: System.Windows.Controls.TextBlock.BaselineOffsetProperty\n- uid: System.Windows.Controls.TextBlock.BreakAfter\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BreakAfter\n  nameWithType: TextBlock.BreakAfter\n  fullName: System.Windows.Controls.TextBlock.BreakAfter\n- uid: System.Windows.LineBreakCondition\n  parent: System.Windows\n  isExternal: false\n  name: LineBreakCondition\n  nameWithType: LineBreakCondition\n  fullName: System.Windows.LineBreakCondition\n- uid: System.Windows.Controls.TextBlock.BreakBefore\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BreakBefore\n  nameWithType: TextBlock.BreakBefore\n  fullName: System.Windows.Controls.TextBlock.BreakBefore\n- uid: System.Windows.Controls.TextBlock.ContentEnd\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ContentEnd\n  nameWithType: TextBlock.ContentEnd\n  fullName: System.Windows.Controls.TextBlock.ContentEnd\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Controls.TextBlock.ContentStart\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ContentStart\n  nameWithType: TextBlock.ContentStart\n  fullName: System.Windows.Controls.TextBlock.ContentStart\n- uid: System.Windows.Controls.TextBlock.FontFamily\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontFamily\n  nameWithType: TextBlock.FontFamily\n  fullName: System.Windows.Controls.TextBlock.FontFamily\n- uid: System.Windows.Media.FontFamily\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamily\n  nameWithType: FontFamily\n  fullName: System.Windows.Media.FontFamily\n- uid: System.Windows.Controls.TextBlock.FontFamilyProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontFamilyProperty\n  nameWithType: TextBlock.FontFamilyProperty\n  fullName: System.Windows.Controls.TextBlock.FontFamilyProperty\n- uid: System.Windows.Controls.TextBlock.FontSize\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontSize\n  nameWithType: TextBlock.FontSize\n  fullName: System.Windows.Controls.TextBlock.FontSize\n- uid: System.Windows.Controls.TextBlock.FontSizeProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontSizeProperty\n  nameWithType: TextBlock.FontSizeProperty\n  fullName: System.Windows.Controls.TextBlock.FontSizeProperty\n- uid: System.Windows.Controls.TextBlock.FontStretch\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontStretch\n  nameWithType: TextBlock.FontStretch\n  fullName: System.Windows.Controls.TextBlock.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.Controls.TextBlock.FontStretchProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontStretchProperty\n  nameWithType: TextBlock.FontStretchProperty\n  fullName: System.Windows.Controls.TextBlock.FontStretchProperty\n- uid: System.Windows.Controls.TextBlock.FontStyle\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontStyle\n  nameWithType: TextBlock.FontStyle\n  fullName: System.Windows.Controls.TextBlock.FontStyle\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.Controls.TextBlock.FontStyleProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontStyleProperty\n  nameWithType: TextBlock.FontStyleProperty\n  fullName: System.Windows.Controls.TextBlock.FontStyleProperty\n- uid: System.Windows.Controls.TextBlock.FontWeight\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontWeight\n  nameWithType: TextBlock.FontWeight\n  fullName: System.Windows.Controls.TextBlock.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.Controls.TextBlock.FontWeightProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontWeightProperty\n  nameWithType: TextBlock.FontWeightProperty\n  fullName: System.Windows.Controls.TextBlock.FontWeightProperty\n- uid: System.Windows.Controls.TextBlock.Foreground\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Foreground\n  nameWithType: TextBlock.Foreground\n  fullName: System.Windows.Controls.TextBlock.Foreground\n- uid: System.Windows.Controls.TextBlock.ForegroundProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ForegroundProperty\n  nameWithType: TextBlock.ForegroundProperty\n  fullName: System.Windows.Controls.TextBlock.ForegroundProperty\n- uid: System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetBaselineOffset(DependencyObject)\n  nameWithType: TextBlock.GetBaselineOffset(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetBaselineOffset(DependencyObject)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontFamily(DependencyObject)\n  nameWithType: TextBlock.GetFontFamily(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontFamily(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontSize(DependencyObject)\n  nameWithType: TextBlock.GetFontSize(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontSize(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontStretch(DependencyObject)\n  nameWithType: TextBlock.GetFontStretch(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontStretch(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontStyle(DependencyObject)\n  nameWithType: TextBlock.GetFontStyle(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontStyle(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontWeight(DependencyObject)\n  nameWithType: TextBlock.GetFontWeight(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetFontWeight(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetForeground(DependencyObject)\n  nameWithType: TextBlock.GetForeground(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetForeground(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetLineHeight(DependencyObject)\n  nameWithType: TextBlock.GetLineHeight(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetLineHeight(DependencyObject)\n- uid: System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetLineStackingStrategy(DependencyObject)\n  nameWithType: TextBlock.GetLineStackingStrategy(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetLineStackingStrategy(DependencyObject)\n- uid: System.Windows.LineStackingStrategy\n  parent: System.Windows\n  isExternal: false\n  name: LineStackingStrategy\n  nameWithType: LineStackingStrategy\n  fullName: System.Windows.LineStackingStrategy\n- uid: System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetPositionFromPoint(Point,Boolean)\n  nameWithType: TextBlock.GetPositionFromPoint(Point,Boolean)\n  fullName: System.Windows.Controls.TextBlock.GetPositionFromPoint(Point,Boolean)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetRectanglesCore(ContentElement)\n  nameWithType: TextBlock.GetRectanglesCore(ContentElement)\n  fullName: System.Windows.Controls.TextBlock.GetRectanglesCore(ContentElement)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<Rect>\n  nameWithType: ReadOnlyCollection<Rect>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Windows.Rect>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Rect\n    name: Rect\n    nameWithType: Rect\n    fullName: Rect\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.ContentElement\n  parent: System.Windows\n  isExternal: false\n  name: ContentElement\n  nameWithType: ContentElement\n  fullName: System.Windows.ContentElement\n- uid: System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetTextAlignment(DependencyObject)\n  nameWithType: TextBlock.GetTextAlignment(DependencyObject)\n  fullName: System.Windows.Controls.TextBlock.GetTextAlignment(DependencyObject)\n- uid: System.Windows.TextAlignment\n  parent: System.Windows\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextAlignment\n  fullName: System.Windows.TextAlignment\n- uid: System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetVisualChild(Int32)\n  nameWithType: TextBlock.GetVisualChild(Int32)\n  fullName: System.Windows.Controls.TextBlock.GetVisualChild(Int32)\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: HitTestCore(PointHitTestParameters)\n  nameWithType: TextBlock.HitTestCore(PointHitTestParameters)\n  fullName: System.Windows.Controls.TextBlock.HitTestCore(PointHitTestParameters)\n- uid: System.Windows.Media.HitTestResult\n  parent: System.Windows.Media\n  isExternal: false\n  name: HitTestResult\n  nameWithType: HitTestResult\n  fullName: System.Windows.Media.HitTestResult\n- uid: System.Windows.Media.PointHitTestParameters\n  parent: System.Windows.Media\n  isExternal: false\n  name: PointHitTestParameters\n  nameWithType: PointHitTestParameters\n  fullName: System.Windows.Media.PointHitTestParameters\n- uid: System.Windows.Controls.TextBlock.HostedElementsCore\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: HostedElementsCore\n  nameWithType: TextBlock.HostedElementsCore\n  fullName: System.Windows.Controls.TextBlock.HostedElementsCore\n- uid: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<IInputElement>\n  nameWithType: IEnumerator<IInputElement>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.IInputElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Windows.IInputElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.IInputElement\n    name: IInputElement\n    nameWithType: IInputElement\n    fullName: IInputElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.TextBlock.Inlines\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Inlines\n  nameWithType: TextBlock.Inlines\n  fullName: System.Windows.Controls.TextBlock.Inlines\n- uid: System.Windows.Documents.InlineCollection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: InlineCollection\n  nameWithType: InlineCollection\n  fullName: System.Windows.Documents.InlineCollection\n- uid: System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: InputHitTestCore(Point)\n  nameWithType: TextBlock.InputHitTestCore(Point)\n  fullName: System.Windows.Controls.TextBlock.InputHitTestCore(Point)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabled\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: IsHyphenationEnabled\n  nameWithType: TextBlock.IsHyphenationEnabled\n  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabled\n- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: IsHyphenationEnabledProperty\n  nameWithType: TextBlock.IsHyphenationEnabledProperty\n  fullName: System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty\n- uid: System.Windows.Controls.TextBlock.LineHeight\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LineHeight\n  nameWithType: TextBlock.LineHeight\n  fullName: System.Windows.Controls.TextBlock.LineHeight\n- uid: System.Windows.Controls.TextBlock.LineHeightProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LineHeightProperty\n  nameWithType: TextBlock.LineHeightProperty\n  fullName: System.Windows.Controls.TextBlock.LineHeightProperty\n- uid: System.Windows.Controls.TextBlock.LineStackingStrategy\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LineStackingStrategy\n  nameWithType: TextBlock.LineStackingStrategy\n  fullName: System.Windows.Controls.TextBlock.LineStackingStrategy\n- uid: System.Windows.Controls.TextBlock.LineStackingStrategyProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LineStackingStrategyProperty\n  nameWithType: TextBlock.LineStackingStrategyProperty\n  fullName: System.Windows.Controls.TextBlock.LineStackingStrategyProperty\n- uid: System.Windows.Controls.TextBlock.LogicalChildren\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: TextBlock.LogicalChildren\n  fullName: System.Windows.Controls.TextBlock.LogicalChildren\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: TextBlock.MeasureOverride(Size)\n  fullName: System.Windows.Controls.TextBlock.MeasureOverride(Size)\n- uid: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnChildDesiredSizeChangedCore(UIElement)\n  nameWithType: TextBlock.OnChildDesiredSizeChangedCore(UIElement)\n  fullName: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(UIElement)\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Controls.TextBlock.OnCreateAutomationPeer\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: TextBlock.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.TextBlock.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.TextBlock.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnRender(DrawingContext)\n  nameWithType: TextBlock.OnRender(DrawingContext)\n  fullName: System.Windows.Controls.TextBlock.OnRender(DrawingContext)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Controls.TextBlock.Padding\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Padding\n  nameWithType: TextBlock.Padding\n  fullName: System.Windows.Controls.TextBlock.Padding\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Controls.TextBlock.PaddingProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: PaddingProperty\n  nameWithType: TextBlock.PaddingProperty\n  fullName: System.Windows.Controls.TextBlock.PaddingProperty\n- uid: System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetBaselineOffset(DependencyObject,Double)\n  nameWithType: TextBlock.SetBaselineOffset(DependencyObject,Double)\n  fullName: System.Windows.Controls.TextBlock.SetBaselineOffset(DependencyObject,Double)\n- uid: System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontFamily(DependencyObject,FontFamily)\n  nameWithType: TextBlock.SetFontFamily(DependencyObject,FontFamily)\n  fullName: System.Windows.Controls.TextBlock.SetFontFamily(DependencyObject,FontFamily)\n- uid: System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontSize(DependencyObject,Double)\n  nameWithType: TextBlock.SetFontSize(DependencyObject,Double)\n  fullName: System.Windows.Controls.TextBlock.SetFontSize(DependencyObject,Double)\n- uid: System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontStretch(DependencyObject,FontStretch)\n  nameWithType: TextBlock.SetFontStretch(DependencyObject,FontStretch)\n  fullName: System.Windows.Controls.TextBlock.SetFontStretch(DependencyObject,FontStretch)\n- uid: System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontStyle(DependencyObject,FontStyle)\n  nameWithType: TextBlock.SetFontStyle(DependencyObject,FontStyle)\n  fullName: System.Windows.Controls.TextBlock.SetFontStyle(DependencyObject,FontStyle)\n- uid: System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontWeight(DependencyObject,FontWeight)\n  nameWithType: TextBlock.SetFontWeight(DependencyObject,FontWeight)\n  fullName: System.Windows.Controls.TextBlock.SetFontWeight(DependencyObject,FontWeight)\n- uid: System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetForeground(DependencyObject,Brush)\n  nameWithType: TextBlock.SetForeground(DependencyObject,Brush)\n  fullName: System.Windows.Controls.TextBlock.SetForeground(DependencyObject,Brush)\n- uid: System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetLineHeight(DependencyObject,Double)\n  nameWithType: TextBlock.SetLineHeight(DependencyObject,Double)\n  fullName: System.Windows.Controls.TextBlock.SetLineHeight(DependencyObject,Double)\n- uid: System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetLineStackingStrategy(DependencyObject,LineStackingStrategy)\n  nameWithType: TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)\n  fullName: System.Windows.Controls.TextBlock.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)\n- uid: System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetTextAlignment(DependencyObject,TextAlignment)\n  nameWithType: TextBlock.SetTextAlignment(DependencyObject,TextAlignment)\n  fullName: System.Windows.Controls.TextBlock.SetTextAlignment(DependencyObject,TextAlignment)\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ShouldSerializeBaselineOffset()\n  nameWithType: TextBlock.ShouldSerializeBaselineOffset()\n  fullName: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset()\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ShouldSerializeInlines(XamlDesignerSerializationManager)\n  nameWithType: TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)\n  fullName: System.Windows.Controls.TextBlock.ShouldSerializeInlines(XamlDesignerSerializationManager)\n- uid: System.Windows.Markup.XamlDesignerSerializationManager\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XamlDesignerSerializationManager\n  nameWithType: XamlDesignerSerializationManager\n  fullName: System.Windows.Markup.XamlDesignerSerializationManager\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeText\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ShouldSerializeText()\n  nameWithType: TextBlock.ShouldSerializeText()\n  fullName: System.Windows.Controls.TextBlock.ShouldSerializeText()\n- uid: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.IServiceProvider.GetService(Type)\n  nameWithType: TextBlock.System.IServiceProvider.GetService(Type)\n  fullName: System.Windows.Controls.TextBlock.System.IServiceProvider.GetService(Type)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.GetRectangles(ContentElement)\n  nameWithType: TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.GetRectangles(ContentElement)\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.HostedElements\n  nameWithType: TextBlock.System.Windows.IContentHost.HostedElements\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.HostedElements\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.InputHitTest(Point)\n  nameWithType: TextBlock.System.Windows.IContentHost.InputHitTest(Point)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.InputHitTest(Point)\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)\n  nameWithType: TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)\n- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddChild(Object)\n- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddText(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.TextBlock.Text\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Text\n  nameWithType: TextBlock.Text\n  fullName: System.Windows.Controls.TextBlock.Text\n- uid: System.Windows.Controls.TextBlock.TextAlignment\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextBlock.TextAlignment\n  fullName: System.Windows.Controls.TextBlock.TextAlignment\n- uid: System.Windows.Controls.TextBlock.TextAlignmentProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextAlignmentProperty\n  nameWithType: TextBlock.TextAlignmentProperty\n  fullName: System.Windows.Controls.TextBlock.TextAlignmentProperty\n- uid: System.Windows.Controls.TextBlock.TextDecorations\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextDecorations\n  nameWithType: TextBlock.TextDecorations\n  fullName: System.Windows.Controls.TextBlock.TextDecorations\n- uid: System.Windows.TextDecorationCollection\n  parent: System.Windows\n  isExternal: false\n  name: TextDecorationCollection\n  nameWithType: TextDecorationCollection\n  fullName: System.Windows.TextDecorationCollection\n- uid: System.Windows.Controls.TextBlock.TextDecorationsProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextDecorationsProperty\n  nameWithType: TextBlock.TextDecorationsProperty\n  fullName: System.Windows.Controls.TextBlock.TextDecorationsProperty\n- uid: System.Windows.Controls.TextBlock.TextEffects\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextEffects\n  nameWithType: TextBlock.TextEffects\n  fullName: System.Windows.Controls.TextBlock.TextEffects\n- uid: System.Windows.Media.TextEffectCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: TextEffectCollection\n  nameWithType: TextEffectCollection\n  fullName: System.Windows.Media.TextEffectCollection\n- uid: System.Windows.Controls.TextBlock.TextEffectsProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextEffectsProperty\n  nameWithType: TextBlock.TextEffectsProperty\n  fullName: System.Windows.Controls.TextBlock.TextEffectsProperty\n- uid: System.Windows.Controls.TextBlock.TextProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextProperty\n  nameWithType: TextBlock.TextProperty\n  fullName: System.Windows.Controls.TextBlock.TextProperty\n- uid: System.Windows.Controls.TextBlock.TextTrimming\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextTrimming\n  nameWithType: TextBlock.TextTrimming\n  fullName: System.Windows.Controls.TextBlock.TextTrimming\n- uid: System.Windows.TextTrimming\n  parent: System.Windows\n  isExternal: false\n  name: TextTrimming\n  nameWithType: TextTrimming\n  fullName: System.Windows.TextTrimming\n- uid: System.Windows.Controls.TextBlock.TextTrimmingProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextTrimmingProperty\n  nameWithType: TextBlock.TextTrimmingProperty\n  fullName: System.Windows.Controls.TextBlock.TextTrimmingProperty\n- uid: System.Windows.Controls.TextBlock.TextWrapping\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextWrapping\n  nameWithType: TextBlock.TextWrapping\n  fullName: System.Windows.Controls.TextBlock.TextWrapping\n- uid: System.Windows.TextWrapping\n  parent: System.Windows\n  isExternal: false\n  name: TextWrapping\n  nameWithType: TextWrapping\n  fullName: System.Windows.TextWrapping\n- uid: System.Windows.Controls.TextBlock.TextWrappingProperty\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextWrappingProperty\n  nameWithType: TextBlock.TextWrappingProperty\n  fullName: System.Windows.Controls.TextBlock.TextWrappingProperty\n- uid: System.Windows.Controls.TextBlock.Typography\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Typography\n  nameWithType: TextBlock.Typography\n  fullName: System.Windows.Controls.TextBlock.Typography\n- uid: System.Windows.Documents.Typography\n  parent: System.Windows.Documents\n  isExternal: false\n  name: Typography\n  nameWithType: Typography\n  fullName: System.Windows.Documents.Typography\n- uid: System.Windows.Controls.TextBlock.VisualChildrenCount\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: VisualChildrenCount\n  nameWithType: TextBlock.VisualChildrenCount\n  fullName: System.Windows.Controls.TextBlock.VisualChildrenCount\n- uid: System.Windows.Controls.TextBlock.#ctor*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextBlock\n  nameWithType: TextBlock.TextBlock\n- uid: System.Windows.Controls.TextBlock.ArrangeOverride*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: TextBlock.ArrangeOverride\n- uid: System.Windows.Controls.TextBlock.Background*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Background\n  nameWithType: TextBlock.Background\n- uid: System.Windows.Controls.TextBlock.BaselineOffset*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BaselineOffset\n  nameWithType: TextBlock.BaselineOffset\n- uid: System.Windows.Controls.TextBlock.BreakAfter*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BreakAfter\n  nameWithType: TextBlock.BreakAfter\n- uid: System.Windows.Controls.TextBlock.BreakBefore*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: BreakBefore\n  nameWithType: TextBlock.BreakBefore\n- uid: System.Windows.Controls.TextBlock.ContentEnd*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ContentEnd\n  nameWithType: TextBlock.ContentEnd\n- uid: System.Windows.Controls.TextBlock.ContentStart*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ContentStart\n  nameWithType: TextBlock.ContentStart\n- uid: System.Windows.Controls.TextBlock.FontFamily*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontFamily\n  nameWithType: TextBlock.FontFamily\n- uid: System.Windows.Controls.TextBlock.FontSize*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontSize\n  nameWithType: TextBlock.FontSize\n- uid: System.Windows.Controls.TextBlock.FontStretch*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontStretch\n  nameWithType: TextBlock.FontStretch\n- uid: System.Windows.Controls.TextBlock.FontStyle*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontStyle\n  nameWithType: TextBlock.FontStyle\n- uid: System.Windows.Controls.TextBlock.FontWeight*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: FontWeight\n  nameWithType: TextBlock.FontWeight\n- uid: System.Windows.Controls.TextBlock.Foreground*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Foreground\n  nameWithType: TextBlock.Foreground\n- uid: System.Windows.Controls.TextBlock.GetBaselineOffset*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetBaselineOffset\n  nameWithType: TextBlock.GetBaselineOffset\n- uid: System.Windows.Controls.TextBlock.GetFontFamily*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontFamily\n  nameWithType: TextBlock.GetFontFamily\n- uid: System.Windows.Controls.TextBlock.GetFontSize*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontSize\n  nameWithType: TextBlock.GetFontSize\n- uid: System.Windows.Controls.TextBlock.GetFontStretch*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontStretch\n  nameWithType: TextBlock.GetFontStretch\n- uid: System.Windows.Controls.TextBlock.GetFontStyle*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontStyle\n  nameWithType: TextBlock.GetFontStyle\n- uid: System.Windows.Controls.TextBlock.GetFontWeight*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetFontWeight\n  nameWithType: TextBlock.GetFontWeight\n- uid: System.Windows.Controls.TextBlock.GetForeground*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetForeground\n  nameWithType: TextBlock.GetForeground\n- uid: System.Windows.Controls.TextBlock.GetLineHeight*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetLineHeight\n  nameWithType: TextBlock.GetLineHeight\n- uid: System.Windows.Controls.TextBlock.GetLineStackingStrategy*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetLineStackingStrategy\n  nameWithType: TextBlock.GetLineStackingStrategy\n- uid: System.Windows.Controls.TextBlock.GetPositionFromPoint*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetPositionFromPoint\n  nameWithType: TextBlock.GetPositionFromPoint\n- uid: System.Windows.Controls.TextBlock.GetRectanglesCore*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetRectanglesCore\n  nameWithType: TextBlock.GetRectanglesCore\n- uid: System.Windows.Controls.TextBlock.GetTextAlignment*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetTextAlignment\n  nameWithType: TextBlock.GetTextAlignment\n- uid: System.Windows.Controls.TextBlock.GetVisualChild*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: GetVisualChild\n  nameWithType: TextBlock.GetVisualChild\n- uid: System.Windows.Controls.TextBlock.HitTestCore*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: HitTestCore\n  nameWithType: TextBlock.HitTestCore\n- uid: System.Windows.Controls.TextBlock.HostedElementsCore*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: HostedElementsCore\n  nameWithType: TextBlock.HostedElementsCore\n- uid: System.Windows.Controls.TextBlock.Inlines*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Inlines\n  nameWithType: TextBlock.Inlines\n- uid: System.Windows.Controls.TextBlock.InputHitTestCore*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: InputHitTestCore\n  nameWithType: TextBlock.InputHitTestCore\n- uid: System.Windows.Controls.TextBlock.IsHyphenationEnabled*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: IsHyphenationEnabled\n  nameWithType: TextBlock.IsHyphenationEnabled\n- uid: System.Windows.Controls.TextBlock.LineHeight*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LineHeight\n  nameWithType: TextBlock.LineHeight\n- uid: System.Windows.Controls.TextBlock.LineStackingStrategy*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LineStackingStrategy\n  nameWithType: TextBlock.LineStackingStrategy\n- uid: System.Windows.Controls.TextBlock.LogicalChildren*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: TextBlock.LogicalChildren\n- uid: System.Windows.Controls.TextBlock.MeasureOverride*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: TextBlock.MeasureOverride\n- uid: System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnChildDesiredSizeChangedCore\n  nameWithType: TextBlock.OnChildDesiredSizeChangedCore\n- uid: System.Windows.Controls.TextBlock.OnCreateAutomationPeer*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: TextBlock.OnCreateAutomationPeer\n- uid: System.Windows.Controls.TextBlock.OnPropertyChanged*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: TextBlock.OnPropertyChanged\n- uid: System.Windows.Controls.TextBlock.OnRender*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: OnRender\n  nameWithType: TextBlock.OnRender\n- uid: System.Windows.Controls.TextBlock.Padding*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Padding\n  nameWithType: TextBlock.Padding\n- uid: System.Windows.Controls.TextBlock.SetBaselineOffset*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetBaselineOffset\n  nameWithType: TextBlock.SetBaselineOffset\n- uid: System.Windows.Controls.TextBlock.SetFontFamily*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontFamily\n  nameWithType: TextBlock.SetFontFamily\n- uid: System.Windows.Controls.TextBlock.SetFontSize*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontSize\n  nameWithType: TextBlock.SetFontSize\n- uid: System.Windows.Controls.TextBlock.SetFontStretch*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontStretch\n  nameWithType: TextBlock.SetFontStretch\n- uid: System.Windows.Controls.TextBlock.SetFontStyle*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontStyle\n  nameWithType: TextBlock.SetFontStyle\n- uid: System.Windows.Controls.TextBlock.SetFontWeight*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetFontWeight\n  nameWithType: TextBlock.SetFontWeight\n- uid: System.Windows.Controls.TextBlock.SetForeground*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetForeground\n  nameWithType: TextBlock.SetForeground\n- uid: System.Windows.Controls.TextBlock.SetLineHeight*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetLineHeight\n  nameWithType: TextBlock.SetLineHeight\n- uid: System.Windows.Controls.TextBlock.SetLineStackingStrategy*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetLineStackingStrategy\n  nameWithType: TextBlock.SetLineStackingStrategy\n- uid: System.Windows.Controls.TextBlock.SetTextAlignment*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: SetTextAlignment\n  nameWithType: TextBlock.SetTextAlignment\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ShouldSerializeBaselineOffset\n  nameWithType: TextBlock.ShouldSerializeBaselineOffset\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeInlines*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ShouldSerializeInlines\n  nameWithType: TextBlock.ShouldSerializeInlines\n- uid: System.Windows.Controls.TextBlock.ShouldSerializeText*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: ShouldSerializeText\n  nameWithType: TextBlock.ShouldSerializeText\n- uid: System.Windows.Controls.TextBlock.System#IServiceProvider#GetService*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.IServiceProvider.GetService\n  nameWithType: TextBlock.System.IServiceProvider.GetService\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.GetRectangles\n  nameWithType: TextBlock.System.Windows.IContentHost.GetRectangles\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.HostedElements\n  nameWithType: TextBlock.System.Windows.IContentHost.HostedElements\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.InputHitTest\n  nameWithType: TextBlock.System.Windows.IContentHost.InputHitTest\n- uid: System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.IContentHost.OnChildDesiredSizeChanged\n  nameWithType: TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged\n- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild\n  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddChild\n- uid: System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText\n  nameWithType: TextBlock.System.Windows.Markup.IAddChild.AddText\n- uid: System.Windows.Controls.TextBlock.Text*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Text\n  nameWithType: TextBlock.Text\n- uid: System.Windows.Controls.TextBlock.TextAlignment*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextAlignment\n  nameWithType: TextBlock.TextAlignment\n- uid: System.Windows.Controls.TextBlock.TextDecorations*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextDecorations\n  nameWithType: TextBlock.TextDecorations\n- uid: System.Windows.Controls.TextBlock.TextEffects*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextEffects\n  nameWithType: TextBlock.TextEffects\n- uid: System.Windows.Controls.TextBlock.TextTrimming*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextTrimming\n  nameWithType: TextBlock.TextTrimming\n- uid: System.Windows.Controls.TextBlock.TextWrapping*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: TextWrapping\n  nameWithType: TextBlock.TextWrapping\n- uid: System.Windows.Controls.TextBlock.Typography*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: Typography\n  nameWithType: TextBlock.Typography\n- uid: System.Windows.Controls.TextBlock.VisualChildrenCount*\n  parent: System.Windows.Controls.TextBlock\n  isExternal: false\n  name: VisualChildrenCount\n  nameWithType: TextBlock.VisualChildrenCount\n"}