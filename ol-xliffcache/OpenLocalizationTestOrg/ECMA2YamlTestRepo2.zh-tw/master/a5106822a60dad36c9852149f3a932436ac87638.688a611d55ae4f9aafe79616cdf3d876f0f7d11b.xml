{"nodes":[{"pos":[6917,6972],"content":"Defines an area that receives and displays ink strokes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines an area that receives and displays ink strokes.","pos":[0,55]}]},{"pos":[6985,7960],"content":"An InkCanvas is an element that can be used to receive and display ink input. This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse. The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input. The InkCanvas enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.       The InkCanvas can be bound to a data source. For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another InkCanvas. You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.","needQuote":false,"needEscape":true,"nodes":[{"content":"An InkCanvas is an element that can be used to receive and display ink input. This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse. The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input. The InkCanvas enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.       The InkCanvas can be bound to a data source. For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another InkCanvas. You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.","pos":[0,973],"nodes":[{"content":"An InkCanvas is an element that can be used to receive and display ink input.","pos":[0,77]},{"content":"This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.","pos":[78,211]},{"content":"The created strokes are represented as &lt;xref:System.Windows.Ink.Stroke&gt; objects, and can be manipulated either programmatically or based on user input.","pos":[212,363],"source":" The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input."},{"content":"The InkCanvas enables users to modify or delete an existing &lt;xref:System.Windows.Ink.Stroke&gt;.","pos":[364,457],"source":" The InkCanvas enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>."},{"content":"The InkCanvas can be bound to a data source.","pos":[464,508]},{"content":"For example, you can bind the &lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt; property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the &lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt; property of another InkCanvas.","pos":[509,782],"source":" For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another InkCanvas."},{"content":"You can also bind properties, such as &lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A&gt; and &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;, to other data sources.","pos":[783,973],"source":" You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources."}]}]},{"pos":[44846,44896],"content":"Initializes a new instance of the InkCanvas class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the InkCanvas class.","pos":[0,50]}]},{"pos":[45439,45531],"content":"Gets the current editing mode of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the current editing mode of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[45544,46442],"content":"The ActiveEditingMode property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.  Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.  When the tablet pen is used in an inverted position, ActiveEditingMode has a value of <xref:System.Windows.Controls.InkCanvasEditingMode>. Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode>.      <a name=\"dependencyPropertyInfo_ActiveEditingMode\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The ActiveEditingMode property indicates the current &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt; of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[0,153],"source":"The ActiveEditingMode property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>."},{"content":"Suppose that the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt; and the &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt; is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[155,424],"source":"  Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"When the tablet pen is used in an inverted position, ActiveEditingMode has a value of &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[426,564],"source":"  When the tablet pen is used in an inverted position, ActiveEditingMode has a value of <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"Otherwise, its value is &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[565,641],"source":" Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_ActiveEditingMode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[647,888],"source":"<a name=\"dependencyPropertyInfo_ActiveEditingMode\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[46936,47023],"content":"The current editing mode of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The current editing mode of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[47547,47592],"content":"Occurs when the current editing mode changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the current editing mode changes.","pos":[0,45]}]},{"pos":[47605,48435],"content":"The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode. For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>. When the user changes the tip of tablet pen, the ActiveEditingModeChanged event occurs.      <a name=\"routedEventInfo_ActiveEditingModeChanged\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt; property changes whenever the &lt;xref:System.Windows.Controls.InkCanvas&gt; enters a new editing mode.","pos":[0,163],"source":"The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode."},{"content":"For example, suppose that the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt; and the &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt; is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[164,446],"source":" For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"When the user changes the tip of tablet pen, the ActiveEditingModeChanged event occurs.","pos":[447,534]},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_ActiveEditingModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","pos":[540,819],"source":"<a name=\"routedEventInfo_ActiveEditingModeChanged\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"}]},{"pos":[48956,48968],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49452,49560],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\"></xref> routed event."},{"pos":[49735,49747],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50211,50306],"content":"Identifies the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode*&gt; dependency property.","pos":[0,95],"source":"Identifies the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode*> dependency property."}]},{"pos":[50491,50503],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50978,51095],"content":"Positions child elements and determines a size for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Positions child elements and determines a size for the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> object."},{"pos":[51298,51395],"content":"The final area within the parent that this element should use to arrange itself and its children.","needQuote":true,"needEscape":true,"nodes":[{"content":"The final area within the parent that this element should use to arrange itself and its children.","pos":[0,97]}]},{"pos":[51459,51480],"content":"The actual size used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual size used.","pos":[0,21]}]},{"pos":[51935,52110],"content":"Gets or sets a <xref href=\"System.Windows.Media.Brush\"></xref>. The brush is used to fill the border area surrounding a <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,63],"source":"Gets or sets a <xref href=\"System.Windows.Media.Brush\"></xref>."},{"content":"The brush is used to fill the border area surrounding a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[64,175],"source":" The brush is used to fill the border area surrounding a <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."}]},{"pos":[52123,52501],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Background\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.BackgroundProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A&gt;|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_Background\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|"},{"pos":[52993,53141],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to fill the border area surrounding a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.Brush\"></xref> used to fill the border area surrounding a <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[53628,53716],"content":"Identifies the <xref:System.Windows.Controls.InkCanvas.Background*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Background*&gt; dependency property.","pos":[0,88],"source":"Identifies the <xref:System.Windows.Controls.InkCanvas.Background*> dependency property."}]},{"pos":[53894,53906],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[54315,54430],"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property.","pos":[0,115],"source":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property."}]},{"pos":[54604,54616],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[55002,55128],"content":"Indicates whether the contents of the Clipboard can be pasted into the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the contents of the Clipboard can be pasted into the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[55140,55366],"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; can support Clipboard data in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>, and text format.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format."},{"pos":[56027,56213],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the contents of the Clipboard can be pasted in; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the contents of the Clipboard can be pasted in; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[56651,56738],"content":"Retrieves child elements of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Retrieves child elements of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[56751,57050],"content":"<bpt id=\"p1\">&lt;a name=\"xamlPropertyElementUsage_Children\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;object&gt;     OneOrMoreUIElements   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_Children\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>OneOrMoreUIElements<ept id=\"p3\">*</ept>    One or more &lt;xref:System.Windows.UIElement&gt; objects.","needQuote":false,"needEscape":true,"source":"<a name=\"xamlPropertyElementUsage_Children\"></a>    ## XAML Property Element Usage      ```   <object>     OneOrMoreUIElements   </object>   ```      <a name=\"xamlValues_Children\"></a>    ## XAML Values    *OneOrMoreUIElements*    One or more <xref:System.Windows.UIElement> objects."},{"pos":[57565,57666],"content":"A collection of child elements located on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A collection of child elements located on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[58133,58190],"content":"Copies selected strokes and/or elements to the Clipboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies selected strokes and/or elements to the Clipboard.","pos":[0,57]}]},{"pos":[58202,58597],"content":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format. Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)].","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; can support Clipboard data in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>, and text format.","pos":[0,226],"source":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format."},{"content":"Strokes to the Clipboard are both <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>.","pos":[227,395],"source":" Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]."}]},{"pos":[59723,59799],"content":"Deletes the selected strokes and elements, and copies them to the Clipboard.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deletes the selected strokes and elements, and copies them to the Clipboard.","pos":[0,76]}]},{"pos":[59811,60206],"content":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format. Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)].","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; can support Clipboard data in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>, and text format.","pos":[0,226],"source":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format."},{"content":"Strokes to the Clipboard are both <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>.","pos":[227,395],"source":" Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]."}]},{"pos":[61363,61502],"content":"Gets or sets the drawing attributes that are applied to new ink strokes made on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the drawing attributes that are applied to new ink strokes made on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[61515,62068],"content":"Setting this property will affect only new strokes that are made after this property is set. To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.      <a name=\"dependencyPropertyInfo_DefaultDrawingAttributes\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"Setting this property will affect only new strokes that are made after this property is set.","pos":[0,92]},{"content":"To apply new drawing attributes to already-created &lt;xref:System.Windows.Ink.Stroke&gt; objects, access them individually using the &lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt; property.","pos":[93,282],"source":" To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_DefaultDrawingAttributes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[288,543],"source":"<a name=\"dependencyPropertyInfo_DefaultDrawingAttributes\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[63539,63633],"content":"The default drawing attributes for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The default drawing attributes for the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[64204,64306],"content":"Identifies the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*&gt; dependency property.","pos":[0,102],"source":"Identifies the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*> dependency property."}]},{"pos":[64498,64510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[65009,65113],"content":"Occurs when the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*> property is replaced.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the &lt;xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*&gt; property is replaced.","pos":[0,104],"source":"Occurs when the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*> property is replaced."}]},{"pos":[65770,65782],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[66269,66373],"content":"Gets or sets the stylus point description for an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the stylus point description for an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[66386,67172],"content":"By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke. You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>. Setting this property will affect only new strokes that are made after the property is set.      <a name=\"xamlTextUsage_DefaultStylusPointDescription\"></a>    ## XAML Text Usage    You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"By default, the &lt;xref:System.Windows.Controls.InkCanvas&gt; stores only the &lt;xref:System.Windows.Input.StylusPointProperties.X&gt;, &lt;xref:System.Windows.Input.StylusPointProperties.Y&gt;, and &lt;xref:System.Windows.Input.StylusPointProperties.NormalPressure&gt; properties for each &lt;xref:System.Windows.Input.StylusPoint&gt; belonging to a stroke.","pos":[0,330],"source":"By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke."},{"content":"You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[331,500],"source":" You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>."},{"content":"Setting this property will affect only new strokes that are made after the property is set.","pos":[501,592]},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_DefaultStylusPointDescription\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    You cannot use this property in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[598,780],"source":"<a name=\"xamlTextUsage_DefaultStylusPointDescription\"></a>    ## XAML Text Usage    You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[68189,68280],"content":"The stylus point description for an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The stylus point description for an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[68774,68889],"content":"Gets or sets the renderer that dynamically draws ink on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the renderer that dynamically draws ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[68902,69577],"content":"You can set the DynamicRenderer property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.      > [!NOTE] >  The DynamicRenderer is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection. When you set the DynamicRenderer, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection. This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can set the DynamicRenderer property to a custom &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; if you want to customize the ink.","pos":[0,144],"source":"You can set the DynamicRenderer property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The DynamicRenderer is a member of the &lt;xref:System.Windows.UIElement.StylusPlugIns%2A&gt; collection.","pos":[150,262],"source":"      > [!NOTE] >  The DynamicRenderer is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection."},{"content":"When you set the DynamicRenderer, the &lt;xref:System.Windows.Controls.InkCanvas&gt; removes the old &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; from the &lt;xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection&gt; and adds the new &lt;xref:System.Windows.Input.StylusPlugIns.DynamicRenderer&gt; to the end of the collection.","pos":[263,594],"source":" When you set the DynamicRenderer, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection."},{"content":"This may change the behavior of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[595,672],"source":" This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>."}]},{"pos":[69787,69889],"content":"The renderer that dynamically draws ink on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The renderer that dynamically draws ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[70349,70418],"content":"Gets or sets the user editing mode used by an active pointing device.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the user editing mode used by an active pointing device.","pos":[0,69]}]},{"pos":[70431,71098],"content":"The default EditingMode is <xref:System.Windows.Controls.InkCanvasEditingMode>. Changing the EditingMode clears any existing selections.       The EditingMode specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>. <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the \"eraser end\" of the stylus contacts the digitizer.      <a name=\"dependencyPropertyInfo_EditingMode\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"The default EditingMode is &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[0,79],"source":"The default EditingMode is <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"Changing the EditingMode clears any existing selections.","pos":[80,136]},{"content":"The EditingMode specifies the mode of the pointing device as it interacts with the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[143,267],"source":"       The EditingMode specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>."},{"content":"&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt; is used by some digitizers when the \"eraser end\" of the stylus contacts the digitizer.","pos":[268,418],"source":" <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the \"eraser end\" of the stylus contacts the digitizer."},{"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_EditingMode\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.EditingModeProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[424,653],"source":"<a name=\"dependencyPropertyInfo_EditingMode\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[71669,71756],"content":"The editing mode used when a pointing device (such as a tablet pen or mouse) is active.","needQuote":true,"needEscape":true,"nodes":[{"content":"The editing mode used when a pointing device (such as a tablet pen or mouse) is active.","pos":[0,87]}]},{"pos":[72244,72408],"content":"Occurs when the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode*&gt; property of an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has been changed.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Controls.InkCanvas.EditingMode*> property of an <xref href=\"System.Windows.Controls.InkCanvas\"></xref> object has been changed."},{"pos":[72421,72910],"content":"This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.      <a name=\"routedEventInfo_EditingModeChanged\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs after the editing mode has been changed; the changes are reflected in the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; property of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[0,205],"source":"This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_EditingModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","pos":[211,478],"source":"<a name=\"routedEventInfo_EditingModeChanged\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"}]},{"pos":[73523,73535],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[73989,74091],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.EditingModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeChanged\"></xref> routed event."},{"pos":[74260,74272],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[74709,74852],"content":"Gets or sets the user editing mode if the stylus is inverted when it interacts with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the user editing mode if the stylus is inverted when it interacts with the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[74865,75407],"content":"This property controls the actions that are performed when the stylus is inverted.       Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,      <a name=\"dependencyPropertyInfo_EditingModeInverted\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|   |Metadata properties set to `true`|None|","needQuote":false,"needEscape":true,"nodes":[{"content":"This property controls the actions that are performed when the stylus is inverted.","pos":[0,82]},{"content":"Similarly, the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,      <bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_EditingModeInverted\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","pos":[89,530],"source":"       Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,      <a name=\"dependencyPropertyInfo_EditingModeInverted\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|   |Metadata properties set to `true`|None|"}]},{"pos":[76042,76130],"content":"The inverted editing mode of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The inverted editing mode of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[76666,76838],"content":"Occurs when the &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted*&gt; property of an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has been changed.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*> property of an <xref href=\"System.Windows.Controls.InkCanvas\"></xref> object has been changed."},{"pos":[76851,77375],"content":"This event occurs after the inverted editing mode has been changed. These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.      <a name=\"routedEventInfo_EditingModeInvertedChanged\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs after the inverted editing mode has been changed.","pos":[0,67]},{"content":"These changes are reflected in the &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt; property of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[68,224],"source":" These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_EditingModeInvertedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","pos":[230,513],"source":"<a name=\"routedEventInfo_EditingModeInvertedChanged\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"}]},{"pos":[78004,78016],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[78510,78620],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\"></xref> routed event."},{"pos":[78797,78809],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[79283,79380],"content":"Identifies the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted*&gt; dependency property.","pos":[0,97],"source":"Identifies the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*> dependency property."}]},{"pos":[79567,79579],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80013,80102],"content":"Identifies the <xref:System.Windows.Controls.InkCanvas.EditingMode*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode*&gt; dependency property.","pos":[0,89],"source":"Identifies the <xref:System.Windows.Controls.InkCanvas.EditingMode*> dependency property."}]},{"pos":[80281,80293],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[80690,80846],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to point-erase ink from an <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Ink.StylusShape\"></xref> used to point-erase ink from an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[80859,81589],"content":"This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.       Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.       If you change the EraserShape, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.      <a name=\"xamlTextUsage_EraserShape\"></a>    ## XAML Text Usage    This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"This shape will be used to erase ink from an &lt;xref:System.Windows.Controls.InkCanvas&gt; when the current &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[0,221],"source":"This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"Individual properties of a &lt;xref:System.Windows.Ink.StylusShape&gt; cannot be modified once the shape has been created.","pos":[228,344],"source":"       Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created."},{"content":"If you change the EraserShape, the cursor rendered on the &lt;xref:System.Windows.Controls.InkCanvas&gt; is not updated until the next &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; change.","pos":[351,543],"source":"       If you change the EraserShape, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change."},{"content":"<bpt id=\"p1\">&lt;a name=\"xamlTextUsage_EraserShape\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Text Usage    This property is not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[549,720],"source":"<a name=\"xamlTextUsage_EraserShape\"></a>    ## XAML Text Usage    This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[82188,82280],"content":"The eraser shape associated with the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The eraser shape associated with the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[82713,82802],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> detects a gesture.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> detects a gesture."},{"pos":[82815,83088],"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_Gesture\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.GestureEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Controls.InkCanvasGestureEventHandler&gt;|","needQuote":false,"needEscape":true,"source":"<a name=\"routedEventInfo_Gesture\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|"},{"pos":[83797,83809],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84208,84299],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.Gesture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.InkCanvas.Gesture\"></xref> routed event."},{"pos":[84457,84469],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[84939,85091],"content":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,152],"source":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[85609,85657],"content":"The element of which to get the bottom property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element of which to get the bottom property.","pos":[0,48]}]},{"pos":[85715,85762],"content":"The bottom coordinate of the dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bottom coordinate of the dependency object.","pos":[0,47]}]},{"pos":[86255,86378],"content":"Returns a collection of application gestures that are recognized by <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a collection of application gestures that are recognized by <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[87036,87136],"content":"A collection of gestures that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> recognizes.","needQuote":true,"needEscape":true,"source":"A collection of gestures that the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> recognizes."},{"pos":[87327,87477],"content":"The &lt;xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[87920,88070],"content":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,150],"source":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[88586,88632],"content":"The element of which to get the left property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element of which to get the left property.","pos":[0,46]}]},{"pos":[88690,88735],"content":"The left coordinate of the dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The left coordinate of the dependency object.","pos":[0,45]}]},{"pos":[89255,89406],"content":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,151],"source":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[89923,89970],"content":"The element of which to get the right property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element of which to get the right property.","pos":[0,47]}]},{"pos":[90028,90074],"content":"The right coordinate of the dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The right coordinate of the dependency object.","pos":[0,46]}]},{"pos":[90571,90726],"content":"Retrieves the <bpt id=\"p1\">&lt;xref href=\"System.Windows.FrameworkElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that are selected in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Retrieves the <xref href=\"System.Windows.FrameworkElement\"></xref> objects that are selected in the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[90739,91439],"content":"This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.       To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.       If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects. Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.       To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.       If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects. Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.","pos":[0,696],"nodes":[{"content":"This method returns only &lt;xref:System.Windows.FrameworkElement&gt; objects, not &lt;xref:System.Windows.Ink.Stroke&gt; objects.","pos":[0,118],"source":"This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects."},{"content":"To retrieve selected &lt;xref:System.Windows.Ink.Stroke&gt; objects, call the &lt;xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A&gt; method.","pos":[125,267],"source":"       To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method."},{"content":"If the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; of &lt;xref:System.Windows.Controls.InkCanvas&gt; is set to &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;, users can select &lt;xref:System.Windows.Ink.Stroke&gt; objects and &lt;xref:System.Windows.FrameworkElement&gt; objects.","pos":[274,557],"source":"       If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects."},{"content":"Alternatively, both types of objects can be selected using code:  just call the &lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt; method.","pos":[558,696],"source":" Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method."}]}]},{"pos":[92053,92123],"content":"Array of <bpt id=\"p1\">&lt;xref href=\"System.Windows.FrameworkElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Array of <xref href=\"System.Windows.FrameworkElement\"></xref> objects."},{"pos":[92626,92837],"content":"Retrieves a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents selected <bpt id=\"p2\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects on the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Retrieves a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that represents selected <xref href=\"System.Windows.Ink.Stroke\"></xref> objects on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[92850,93497],"content":"This method returns <xref:System.Windows.Ink.Stroke> objects, only. To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.       If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects. Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method returns <xref:System.Windows.Ink.Stroke> objects, only. To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.       If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects. Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.","pos":[0,645],"nodes":[{"content":"This method returns &lt;xref:System.Windows.Ink.Stroke&gt; objects, only.","pos":[0,67],"source":"This method returns <xref:System.Windows.Ink.Stroke> objects, only."},{"content":"To retrieve selected &lt;xref:System.Windows.FrameworkElement&gt; objects, call the &lt;xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A&gt; method.","pos":[68,217],"source":" To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method."},{"content":"If the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; of &lt;xref:System.Windows.Controls.InkCanvas&gt; is set to &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;, users can select &lt;xref:System.Windows.Ink.Stroke&gt; objects and &lt;xref:System.Windows.FrameworkElement&gt; objects.","pos":[224,507],"source":"       If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects."},{"content":"Alternatively, both types of objects can be selected using code: just call the &lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt; method.","pos":[508,645],"source":" Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method."}]}]},{"pos":[94018,94053],"content":"The collection of selected strokes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection of selected strokes.","pos":[0,35]}]},{"pos":[94555,94670],"content":"Gets the bounds of the selected strokes and elements on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the bounds of the selected strokes and elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[95156,95230],"content":"The smallest rectangle that encompasses all selected strokes and elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"The smallest rectangle that encompasses all selected strokes and elements.","pos":[0,74]}]},{"pos":[95751,95900],"content":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,149],"source":"Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[96415,96460],"content":"The element of which to get the top property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element of which to get the top property.","pos":[0,45]}]},{"pos":[96518,96562],"content":"The top coordinate of the dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The top coordinate of the dependency object.","pos":[0,44]}]},{"pos":[97075,97216],"content":"Overrides <xref:System.Windows.Media.Visual.GetVisualChild*>, and returns a child at the specified index from a collection of child elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Overrides &lt;xref:System.Windows.Media.Visual.GetVisualChild*&gt;, and returns a child at the specified index from a collection of child elements.","pos":[0,141],"source":"Overrides <xref:System.Windows.Media.Visual.GetVisualChild*>, and returns a child at the specified index from a collection of child elements."}]},{"pos":[97391,97461],"content":"The zero-based index of the requested child element in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the requested child element in the collection.","pos":[0,70]}]},{"pos":[97533,97709],"content":"The requested child element. This should not return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; if the provided index is out of range, an exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested child element.","pos":[0,28]},{"content":"This should not return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; if the provided index is out of range, an exception is thrown.","pos":[29,176],"source":" This should not return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; if the provided index is out of range, an exception is thrown."}]},{"pos":[98328,98456],"content":"Determines whether a given point falls within the rendering bounds of an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines whether a given point falls within the rendering bounds of an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[98722,98813],"content":"An object that specifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to hit test against.","needQuote":true,"needEscape":true,"source":"An object that specifies the <xref href=\"System.Windows.Point\"></xref> to hit test against."},{"pos":[98892,99004],"content":"An object that represents the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is returned from a hit test.","needQuote":true,"needEscape":true,"source":"An object that represents the <xref href=\"System.Windows.Media.Visual\"></xref> that is returned from a hit test."},{"pos":[99548,99659],"content":"Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.","pos":[0,111]}]},{"pos":[99671,99861],"content":"Use the HitTestSelection method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.  This is useful when performing drag and drop operations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the HitTestSelection method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.  This is useful when performing drag and drop operations.","pos":[0,190],"nodes":[{"content":"Use the HitTestSelection method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.","pos":[0,132]},{"content":"This is useful when performing drag and drop operations.","pos":[134,190]}]}]},{"pos":[100586,100608],"content":"The point to hit test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point to hit test.","pos":[0,22]}]},{"pos":[100704,100805],"content":"A value that indicates which part of the selection adorner intersects or surrounds a specified point.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that indicates which part of the selection adorner intersects or surrounds a specified point.","pos":[0,101]}]},{"pos":[101271,101374],"content":"Gets the ink presenter that displays ink on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the ink presenter that displays ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[101547,101645],"content":"The ink presenter that displays ink on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The ink presenter that displays ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[102187,102281],"content":"Gets (determines) whether the gesture recognition component is available on the user's system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets (determines) whether the gesture recognition component is available on the user's system.","pos":[0,94]}]},{"pos":[102943,103121],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the recognition component is available; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the recognition component is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[103596,103709],"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property.","pos":[0,113],"source":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property."}]},{"pos":[103881,103893],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[104310,104349],"content":"Returns enumerator to logical children.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns enumerator to logical children.","pos":[0,39]}]},{"pos":[104522,104534],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[105072,105240],"content":"Measures the size in layout required for child elements and determines a size for the <bpt id=\"p1\">[</bpt>System.Windows.Controls.InkCanvas<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> object.","needQuote":true,"needEscape":true,"source":"Measures the size in layout required for child elements and determines a size for the [System.Windows.Controls.InkCanvas](~/add/includes/ajax-current-ext-md.md) object."},{"pos":[105447,105621],"content":"The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.","needQuote":true,"needEscape":true,"nodes":[{"content":"The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.","pos":[0,174],"nodes":[{"content":"The available size that this element can give to child elements.","pos":[0,64]},{"content":"Infinity can be specified as a value to indicate that the element will size to whatever content is available.","pos":[65,174]}]}]},{"pos":[105685,105796],"content":"The size that this element determines it needs during layout, based on its calculations of child element sizes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size that this element determines it needs during layout, based on its calculations of child element sizes.","pos":[0,111]}]},{"pos":[106256,106436],"content":"Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[106449,106955],"content":"If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected. This border enables the user to move the selected objects. If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.       If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.","needQuote":false,"needEscape":true,"nodes":[{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, an adorner border is drawn around ink strokes and/or elements when they are selected.","pos":[0,120],"source":"If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected."},{"content":"This border enables the user to move the selected objects.","pos":[121,179]},{"content":"If &lt;xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A&gt; is <ph id=\"ph1\">`true`</ph>, the adorner enables the user to resize the strokes and/or elements as well.","pos":[180,327],"source":" If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well."},{"content":"If this property is set to <ph id=\"ph1\">`false`</ph> while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.","pos":[334,504],"source":"       If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects."}]},{"pos":[107427,107668],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a user can move strokes and/or elements on the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a user can move strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[108312,108409],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\"></xref> event."},{"pos":[108609,108624],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[109154,109394],"content":"Provides an appropriate <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.InkCanvasAutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation for this control, as part of the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure.","needQuote":true,"needEscape":true,"source":"Provides an appropriate <xref href=\"System.Windows.Automation.Peers.InkCanvasAutomationPeer\"></xref> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure."},{"pos":[109620,109860],"content":"Provides an appropriate <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.InkCanvasAutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation for this control, as part of the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure.","needQuote":true,"needEscape":true,"source":"Provides an appropriate <xref href=\"System.Windows.Automation.Peers.InkCanvasAutomationPeer\"></xref> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure."},{"pos":[110658,110763],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\"></xref> event."},{"pos":[111017,111032],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[111669,111760],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.EditingModeChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeChanged\"></xref> event."},{"pos":[111772,111977],"content":"This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event occurs after the editing mode has been changed; the changes are reflected in the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; property of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[0,205],"source":"This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>."}]},{"pos":[112171,112186],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[112849,112948],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\"></xref> event."},{"pos":[112960,113178],"content":"This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event occurs after the inverted editing mode has been changed; the changes reflected in the &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt; property of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[0,218],"source":"This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>."}]},{"pos":[113380,113395],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[114039,114119],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.Gesture\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.Gesture\"></xref> event."},{"pos":[114340,114355],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[115047,115344],"content":"Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkElement\"></xref> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <xref:System.Windows.DependencyObject.OnPropertyChanged*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoked whenever the effective value of any dependency property on this <bpt id=\"p1\">&lt;xref href=\"System.Windows.FrameworkElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has been updated.","pos":[0,142],"source":"Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkElement\"></xref> has been updated."},{"content":"The specific dependency property that changed is reported in the arguments parameter.","pos":[143,228]},{"content":"Overrides &lt;xref:System.Windows.DependencyObject.OnPropertyChanged*&gt;.","pos":[229,297],"source":" Overrides <xref:System.Windows.DependencyObject.OnPropertyChanged*>."}]},{"pos":[115574,115661],"content":"The event data that describes the property that changed, as well as old and new values.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data that describes the property that changed, as well as old and new values.","pos":[0,87]}]},{"pos":[116225,116314],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.SelectionChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionChanged\"></xref> event."},{"pos":[116326,116579],"content":"This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.","pos":[0,253],"nodes":[{"content":"This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.","pos":[0,137]},{"content":"Before the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A&gt; method is called.","pos":[138,253],"source":" Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called."}]}]},{"pos":[116736,116751],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[117485,117575],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.SelectionChanging\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionChanging\"></xref> event."},{"pos":[117587,117831],"content":"This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied. After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied. After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.","pos":[0,244],"nodes":[{"content":"This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.","pos":[0,124]},{"content":"After the change has been applied, the &lt;xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A&gt; method is called.","pos":[125,244],"source":" After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called."}]}]},{"pos":[118082,118097],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[118653,118745],"content":"An event announcing that the user selected and moved a selection of strokes and/or elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"An event announcing that the user selected and moved a selection of strokes and/or elements.","pos":[0,92]}]},{"pos":[118757,118997],"content":"This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.","pos":[0,240],"nodes":[{"content":"This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.","pos":[0,126]},{"content":"Before the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A&gt; method is called.","pos":[127,240],"source":" Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called."}]}]},{"pos":[119152,119161],"content":"Not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]}]},{"pos":[119878,119966],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.SelectionMoving\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionMoving\"></xref> event."},{"pos":[119978,120222],"content":"This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied. After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied. After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.","pos":[0,244],"nodes":[{"content":"This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.","pos":[0,132]},{"content":"After the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A&gt; method is called.","pos":[133,244],"source":" After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called."}]}]},{"pos":[120469,120484],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[121048,121137],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.SelectionResized\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionResized\"></xref> event."},{"pos":[121149,121393],"content":"This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.","pos":[0,244],"nodes":[{"content":"This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.","pos":[0,128]},{"content":"Before the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A&gt; method is called.","pos":[129,244],"source":" Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called."}]}]},{"pos":[121550,121565],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[122294,122384],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.SelectionResizing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionResizing\"></xref> event."},{"pos":[122396,122644],"content":"This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied. After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied. After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.","pos":[0,248],"nodes":[{"content":"This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.","pos":[0,129]},{"content":"After the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A&gt; method will be called.","pos":[130,248],"source":" After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called."}]}]},{"pos":[122893,122908],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[123623,123711],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.StrokeCollected\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokeCollected\"></xref> event."},{"pos":[123724,124023],"content":"OnStrokeCollected is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.       A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the OnStrokeCollected method.","needQuote":false,"needEscape":true,"nodes":[{"content":"OnStrokeCollected is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.       A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the OnStrokeCollected method.","pos":[0,297],"nodes":[{"content":"OnStrokeCollected is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.","pos":[0,142]},{"content":"A programmatic addition of strokes to the &lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt; collection will not call the OnStrokeCollected method.","pos":[149,297],"source":"       A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the OnStrokeCollected method."}]}]},{"pos":[124269,124284],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[124874,124959],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.StrokeErased\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokeErased\"></xref> event."},{"pos":[125147,125162],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[125852,125938],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.StrokeErasing\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokeErasing\"></xref> event."},{"pos":[126177,126192],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[126903,126991],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.StrokesReplaced\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokesReplaced\"></xref> event."},{"pos":[127236,127251],"content":"The event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event data.","pos":[0,15]}]},{"pos":[127687,127809],"content":"Pastes the contents of the Clipboard to the top-left corner of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Pastes the contents of the Clipboard to the top-left corner of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[127821,128047],"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; can support Clipboard data in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>, and text format.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format."},{"pos":[129129,129245],"content":"Pastes the contents of the Clipboard to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at a given point.","needQuote":true,"needEscape":true,"source":"Pastes the contents of the Clipboard to the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> at a given point."},{"pos":[129257,129483],"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; can support Clipboard data in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> format, <ph id=\"ph2\">[!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)]</ph>, and text format.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format."},{"pos":[130168,130208],"content":"The point at which to paste the strokes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point at which to paste the strokes.","pos":[0,40]}]},{"pos":[130708,130812],"content":"Gets or sets formats that can be pasted onto the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets formats that can be pasted onto the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[130825,131593],"content":"<a name=\"xamlPropertyElementUsage_PreferredPasteFormats\"></a>    ## XAML Property Element Usage      ```   <object>     <object.PreferredPasteFormats>       InkCanvasClipboardFormats     </object.PreferredPasteFormats>   </object>   ```      <a name=\"xamlValues_PreferredPasteFormats\"></a>    ## XAML Values    *InkCanvasClipboardFormats*    An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values. Specifying an array in XAML requires `x:Array` usage. Specifying an enumeration value as an element that declares an array member requires `x:Static` usage. For more information, see [x:Array Markup Extension](~/add/includes/ajax-current-ext-md.md) and [x:Static Markup Extension](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;a name=\"xamlPropertyElementUsage_PreferredPasteFormats\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## XAML Property Element Usage      <ph id=\"ph1\">```   &lt;object&gt;     &lt;object.PreferredPasteFormats&gt;       InkCanvasClipboardFormats     &lt;/object.PreferredPasteFormats&gt;   &lt;/object&gt;   ```</ph>      <bpt id=\"p2\">&lt;a name=\"xamlValues_PreferredPasteFormats\"&gt;</bpt><ept id=\"p2\">&lt;/a&gt;</ept>    ## XAML Values    <bpt id=\"p3\">*</bpt>InkCanvasClipboardFormats<ept id=\"p3\">*</ept>    An array of &lt;xref:System.Windows.Controls.InkCanvasClipboardFormat&gt; enumeration values.","pos":[0,429],"source":"<a name=\"xamlPropertyElementUsage_PreferredPasteFormats\"></a>    ## XAML Property Element Usage      ```   <object>     <object.PreferredPasteFormats>       InkCanvasClipboardFormats     </object.PreferredPasteFormats>   </object>   ```      <a name=\"xamlValues_PreferredPasteFormats\"></a>    ## XAML Values    *InkCanvasClipboardFormats*    An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values."},{"content":"Specifying an array in XAML requires <ph id=\"ph1\">`x:Array`</ph> usage.","pos":[430,483],"source":" Specifying an array in XAML requires `x:Array` usage."},{"content":"Specifying an enumeration value as an element that declares an array member requires <ph id=\"ph1\">`x:Static`</ph> usage.","pos":[484,586],"source":" Specifying an enumeration value as an element that declares an array member requires `x:Static` usage."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>x:Array Markup Extension<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>x:Static Markup Extension<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[587,750],"source":" For more information, see [x:Array Markup Extension](~/add/includes/ajax-current-ext-md.md) and [x:Static Markup Extension](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[132574,132695],"content":"A collection of enumeration values. The default is <xref href=\"System.Windows.Controls.InkCanvasClipboardFormat\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of enumeration values.","pos":[0,35]},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvasClipboardFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,121],"source":" The default is <xref href=\"System.Windows.Controls.InkCanvasClipboardFormat\"></xref>."}]},{"pos":[133171,133342],"content":"Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[133355,133854],"content":"If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected. This border enables the user to resize the selected objects. If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.       If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.","needQuote":false,"needEscape":true,"nodes":[{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, an adorner border is drawn around ink strokes and/or elements when they are selected.","pos":[0,120],"source":"If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected."},{"content":"This border enables the user to resize the selected objects.","pos":[121,181]},{"content":"If &lt;xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A&gt; is <ph id=\"ph1\">`true`</ph>, the adorner enables the user to move the strokes and/or elements as well.","pos":[182,325],"source":" If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well."},{"content":"If this property is set to <ph id=\"ph1\">`false`</ph> while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.","pos":[332,497],"source":"       If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects."}]},{"pos":[134328,134571],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a user can resize strokes and/or elements on the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a user can resize strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[135036,135151],"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached propertyy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached propertyy.","pos":[0,115],"source":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached propertyy."}]},{"pos":[135324,135336],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[135910,135981],"content":"Selects a set of <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Selects a set of <xref href=\"System.Windows.UIElement\"></xref> objects."},{"pos":[135994,136622],"content":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.       Selected strokes are displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.UIElement> objects will not display differently when selected. If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, Select ignores the <xref:System.Windows.UIElement>.","needQuote":false,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Windows.Controls.InkCanvas&gt; can contain &lt;xref:System.Windows.Ink.Stroke&gt; objects, which are created in response to user stylus input and &lt;xref:System.Windows.UIElement&gt; objects, such as &lt;xref:System.Windows.Controls.Image&gt; and &lt;xref:System.Windows.Controls.Button&gt; objects.","pos":[0,289],"source":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects."},{"content":"Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.","pos":[296,396]},{"content":"&lt;xref:System.Windows.UIElement&gt; objects will not display differently when selected.","pos":[397,480],"source":" <xref:System.Windows.UIElement> objects will not display differently when selected."},{"content":"If a &lt;xref:System.Windows.UIElement&gt; in <ph id=\"ph1\">`selectedElements`</ph> is not in the Children collection, Select ignores the &lt;xref:System.Windows.UIElement&gt;.","pos":[481,626],"source":" If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, Select ignores the <xref:System.Windows.UIElement>."}]},{"pos":[137465,137545],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to select.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Windows.UIElement\"></xref> objects to select."},{"pos":[138097,138173],"content":"Selects a set of ink <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Selects a set of ink <xref href=\"System.Windows.Ink.Stroke\"></xref> objects."},{"pos":[138186,138681],"content":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.       Selected strokes are displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.FrameworkElement> objects do not display differently when selected.","needQuote":false,"needEscape":true,"nodes":[{"content":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.       Selected strokes are displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.FrameworkElement> objects do not display differently when selected.","pos":[0,493],"nodes":[{"content":"An &lt;xref:System.Windows.Controls.InkCanvas&gt; can contain &lt;xref:System.Windows.Ink.Stroke&gt; objects, which are created in response to user stylus input, and &lt;xref:System.Windows.FrameworkElement&gt; objects, such as &lt;xref:System.Windows.Controls.Image&gt; and &lt;xref:System.Windows.Controls.Button&gt; objects.","pos":[0,297],"source":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects."},{"content":"Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.","pos":[304,404]},{"content":"&lt;xref:System.Windows.FrameworkElement&gt; objects do not display differently when selected.","pos":[405,493],"source":" <xref:System.Windows.FrameworkElement> objects do not display differently when selected."}]}]},{"pos":[139465,139546],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to select.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects to select."},{"pos":[139709,139834],"content":"One or more strokes in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selectedStrokes</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not in the &lt;xref:System.Windows.Controls.InkCanvas.Strokes*&gt; property.","needQuote":true,"needEscape":true,"source":"One or more strokes in <code>selectedStrokes</code> is not in the <xref:System.Windows.Controls.InkCanvas.Strokes*> property."},{"pos":[140514,140644],"content":"Selects a combination of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Selects a combination of <xref href=\"System.Windows.Ink.Stroke\"></xref> and <xref href=\"System.Windows.UIElement\"></xref> objects."},{"pos":[140657,141333],"content":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.       Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.UIElement> objects will not display differently when selected. If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.","needQuote":false,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Windows.Controls.InkCanvas&gt; can contain &lt;xref:System.Windows.Ink.Stroke&gt; objects, which are created in response to user stylus input and &lt;xref:System.Windows.UIElement&gt; objects, such as &lt;xref:System.Windows.Controls.Image&gt; and &lt;xref:System.Windows.Controls.Button&gt; objects.","pos":[0,289],"source":"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects."},{"content":"Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.","pos":[296,400]},{"content":"&lt;xref:System.Windows.UIElement&gt; objects will not display differently when selected.","pos":[401,484],"source":" <xref:System.Windows.UIElement> objects will not display differently when selected."},{"content":"If a &lt;xref:System.Windows.UIElement&gt; in <ph id=\"ph1\">`selectedElements`</ph> is not in the Children collection, &lt;xref:System.Windows.Controls.InkCanvas.Select%2A&gt; ignores the &lt;xref:System.Windows.UIElement&gt;.","pos":[485,674],"source":" If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>."}]},{"pos":[142200,142281],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to select.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects to select."},{"pos":[142405,142485],"content":"A collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects to select.","needQuote":true,"needEscape":true,"source":"A collection of <xref href=\"System.Windows.UIElement\"></xref> objects to select."},{"pos":[142648,142782],"content":"One or more strokes in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selectedStrokes</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not included in the &lt;xref:System.Windows.Controls.InkCanvas.Strokes*&gt; property.","needQuote":true,"needEscape":true,"source":"One or more strokes in <code>selectedStrokes</code> is not included in the <xref:System.Windows.Controls.InkCanvas.Strokes*> property."},{"pos":[143184,143280],"content":"Occurs when the selection on the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> changes.","needQuote":true,"needEscape":true,"source":"Occurs when the selection on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> changes."},{"pos":[143293,143622],"content":"This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.       If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.       If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.","pos":[0,327],"nodes":[{"content":"This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.","pos":[0,106]},{"content":"If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the &lt;xref:System.Windows.Controls.InkCanvas.SelectionChanging&gt; event.","pos":[113,327],"source":"       If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event."}]}]},{"pos":[144070,144082],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[144506,144577],"content":"Occurs when a new set of ink strokes and/or elements is being selected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a new set of ink strokes and/or elements is being selected.","pos":[0,71]}]},{"pos":[144590,145471],"content":"The SelectionChanging event is raised when strokes and/or elements are selected by the user - but before the change is applied.       The SelectionChanging event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object. <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.       After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.      > [!NOTE] >  The SelectionChanging event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SelectionChanging event is raised when strokes and/or elements are selected by the user - but before the change is applied.","pos":[0,127]},{"content":"The SelectionChanging event is processed when the &lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler&gt; receives an &lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs&gt; object.","pos":[134,340],"source":"       The SelectionChanging event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object."},{"content":"&lt;xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs&gt; provides methods for accessing &lt;xref:System.Windows.FrameworkElement&gt; and &lt;xref:System.Windows.Ink.StrokeCollection&gt; objects after they are selected by the user.","pos":[341,569],"source":" <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user."},{"content":"After the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.SelectionChanged&gt; event is raised.","pos":[576,683],"source":"       After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The SelectionChanging event does not occur when the selected strokes are deleted or when the &lt;xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A&gt; property changes.","pos":[689,874],"source":"      > [!NOTE] >  The SelectionChanging event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes."}]},{"pos":[145974,145986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[146395,146462],"content":"Occurs after the user moves a selection of strokes and/or elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs after the user moves a selection of strokes and/or elements.","pos":[0,67]}]},{"pos":[146474,146715],"content":"This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position. Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.","needQuote":true,"needEscape":true,"nodes":[{"content":"This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position. Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.","pos":[0,241],"nodes":[{"content":"This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.","pos":[0,149]},{"content":"Add an event handler to the &lt;xref:System.Windows.Controls.InkCanvas.SelectionMoving&gt; event.","pos":[150,241],"source":" Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event."}]}]},{"pos":[147176,147188],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[147602,147656],"content":"Occurs before selected strokes and elements are moved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before selected strokes and elements are moved.","pos":[0,54]}]},{"pos":[147669,148504],"content":"This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.       After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.       After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.","pos":[0,831],"nodes":[{"content":"This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.","pos":[0,129]},{"content":"The event handler receives an argument of type &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs&gt; with two properties: &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt; and &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;.","pos":[136,438],"source":"       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>."},{"content":"&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt; defines the boundaries of the selection before the move and &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt; defines the boundaries of the selection after the move.","pos":[439,718],"source":" <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move."},{"content":"After the change is applied, the &lt;xref:System.Windows.Controls.InkCanvas.SelectionMoved&gt; event will occur.","pos":[725,831],"source":"       After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur."}]}]},{"pos":[149072,149084],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[149503,149583],"content":"Occurs when a selection of strokes and/or elements has been resized by the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a selection of strokes and/or elements has been resized by the user.","pos":[0,80]}]},{"pos":[149596,149884],"content":"This event is raised after a selection of strokes and/or elements is resized.       If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event is raised after a selection of strokes and/or elements is resized.       If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.","pos":[0,286],"nodes":[{"content":"This event is raised after a selection of strokes and/or elements is resized.","pos":[0,77]},{"content":"If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the &lt;xref:System.Windows.Controls.InkCanvas.SelectionResizing&gt; event.","pos":[84,286],"source":"       If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event."}]}]},{"pos":[150368,150380],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[150804,150860],"content":"Occurs before selected strokes and elements are resized.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs before selected strokes and elements are resized.","pos":[0,56]}]},{"pos":[150873,151784],"content":"This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.       After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.       After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.","pos":[0,907],"nodes":[{"content":"This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.","pos":[0,131]},{"content":"The event handler receives an argument of type &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs&gt; that contains two properties: &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt; and &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt;.","pos":[138,449],"source":"       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>."},{"content":"&lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A&gt; defines the boundaries of the selection before the resizing operation and &lt;xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A&gt; defines the boundaries of the selection after the resizing operation.","pos":[450,757],"source":" <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation."},{"content":"After the strokes and/or elements are updated with the new size, the &lt;xref:System.Windows.Controls.InkCanvas.SelectionResized&gt; event is raised.","pos":[764,907],"source":"       After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised."}]}]},{"pos":[152324,152336],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[152855,153007],"content":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,152],"source":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[153538,153586],"content":"The element on which to set the bottom property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element on which to set the bottom property.","pos":[0,48]}]},{"pos":[153649,153684],"content":"The bottom coordinate of <ph id=\"ph1\">`element`</ph>.","needQuote":true,"needEscape":true,"source":"The bottom coordinate of `element`."},{"pos":[154428,154537],"content":"Sets the application gestures that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will recognize.","needQuote":true,"needEscape":true,"source":"Sets the application gestures that the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> will recognize."},{"pos":[154550,155045],"content":"The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.       [!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]  [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]   [!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)] [!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]","needQuote":false,"needEscape":true,"nodes":[{"content":"The following example demonstrates how to set up an &lt;xref:System.Windows.Controls.InkCanvas&gt; to recognize application gestures.","pos":[0,127],"source":"The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>GestureSample#3<ept id=\"p2\">](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>GestureSample#3<ept id=\"p4\">](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)</ept><ept id=\"p3\">]</ept>   <bpt id=\"p5\">[!code-cs</bpt><bpt id=\"p6\">[</bpt>GestureSample#1<ept id=\"p6\">](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)</ept><ept id=\"p5\">]</ept> <bpt id=\"p7\">[!code-vb</bpt><bpt id=\"p8\">[</bpt>GestureSample#1<ept id=\"p8\">](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)</ept><ept id=\"p7\">]</ept>","pos":[134,490],"source":"[!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]  [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]   [!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)] [!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]"}]},{"pos":[155357,155473],"content":"A collection of application gestures that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will recognize.","needQuote":true,"needEscape":true,"source":"A collection of application gestures that the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> will recognize."},{"pos":[155664,155814],"content":"The &lt;xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[156306,156456],"content":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,150],"source":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[156985,157031],"content":"The element on which to set the left property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element on which to set the left property.","pos":[0,46]}]},{"pos":[157094,157127],"content":"The left coordinate of <ph id=\"ph1\">`element`</ph>.","needQuote":true,"needEscape":true,"source":"The left coordinate of `element`."},{"pos":[157696,157847],"content":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,151],"source":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[158377,158424],"content":"The element on which to set the right property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element on which to set the right property.","pos":[0,47]}]},{"pos":[158487,158521],"content":"The right coordinate of <ph id=\"ph1\">`element`</ph>.","needQuote":true,"needEscape":true,"source":"The right coordinate of `element`."},{"pos":[159081,159230],"content":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property for a given dependency object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the value of the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property for a given dependency object.","pos":[0,149],"source":"Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property for a given dependency object."}]},{"pos":[159758,159803],"content":"The element on which to set the top property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element on which to set the top property.","pos":[0,45]}]},{"pos":[159866,159898],"content":"The top coordinate of <ph id=\"ph1\">`element`</ph>.","needQuote":true,"needEscape":true,"source":"The top coordinate of `element`."},{"pos":[160366,160480],"content":"Occurs when a stroke drawn by the user is added to the <xref:System.Windows.Controls.InkCanvas.Strokes*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when a stroke drawn by the user is added to the &lt;xref:System.Windows.Controls.InkCanvas.Strokes*&gt; property.","pos":[0,114],"source":"Occurs when a stroke drawn by the user is added to the <xref:System.Windows.Controls.InkCanvas.Strokes*> property."}]},{"pos":[160493,161462],"content":"This event is raised when a user completes a stroke using a pointing device. For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke. The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.       The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.      <a name=\"routedEventInfo_StrokeCollected\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|","needQuote":false,"needEscape":true,"nodes":[{"content":"This event is raised when a user completes a stroke using a pointing device.","pos":[0,76]},{"content":"For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.","pos":[77,186]},{"content":"The event handler receives an argument of type &lt;xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs&gt;, which references the completed stroke.","pos":[193,344],"source":"       The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke."},{"content":"The stroke is also added to the &lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt; property of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[345,486],"source":" The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>."},{"content":"The programmatic addition of a &lt;xref:System.Windows.Ink.Stroke&gt; object to the &lt;xref:System.Windows.Controls.InkCanvas.Strokes%2A&gt; collection does not raise this event.","pos":[493,660],"source":"       The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StrokeCollected\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler&gt;|","pos":[666,954],"source":"<a name=\"routedEventInfo_StrokeCollected\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|"}]},{"pos":[162035,162047],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[162486,162585],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.StrokeCollected\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.InkCanvas.StrokeCollected\"></xref> routed event."},{"pos":[162751,162763],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[163162,163195],"content":"Occurs when user erases a stroke.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when user erases a stroke.","pos":[0,33]}]},{"pos":[163208,163716],"content":"This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.      <a name=\"routedEventInfo_StrokeErasing\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|","needQuote":false,"needEscape":true,"nodes":[{"content":"This event occurs when a user erases ink whether the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; property is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt; or &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[0,235],"source":"This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>."},{"content":"<bpt id=\"p1\">&lt;a name=\"routedEventInfo_StrokeErasing\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|","pos":[241,497],"source":"<a name=\"routedEventInfo_StrokeErasing\"></a>    ## Routed Event Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|   |Routing strategy|Bubbling|   |Delegate|<xref:System.Windows.RoutedEventHandler>|"}]},{"pos":[164553,164565],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[164989,165085],"content":"Identifies the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas.StrokeErased\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> routed event.","needQuote":true,"needEscape":true,"source":"Identifies the <xref href=\"System.Windows.Controls.InkCanvas.StrokeErased\"></xref> routed event."},{"pos":[165248,165260],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[165664,165706],"content":"Occurs just before a user erases a stroke.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs just before a user erases a stroke.","pos":[0,42]}]},{"pos":[165718,166214],"content":"Handle this event when you want to check whether a stroke should be erased. Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased. You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle this event when you want to check whether a stroke should be erased.","pos":[0,75]},{"content":"Set the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; property to <ph id=\"ph1\">`true`</ph> if you want to prevent the stroke from being erased.","pos":[76,210],"source":" Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased."},{"content":"You can use this technique when the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; or &lt;xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A&gt; property is set to &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt; or &lt;xref:System.Windows.Controls.InkCanvasEditingMode&gt;.","pos":[211,496],"source":" You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>."}]},{"pos":[166855,166867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[167244,167406],"content":"Gets or sets the collection of ink <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects collected by the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the collection of ink <xref href=\"System.Windows.Ink.Stroke\"></xref> objects collected by the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[167419,167648],"content":"<bpt id=\"p1\">&lt;a name=\"dependencyPropertyInfo_Strokes\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.InkCanvas.StrokesProperty&gt;|   |Metadata properties set to <ph id=\"ph1\">`true`</ph>|None|","needQuote":false,"needEscape":true,"source":"<a name=\"dependencyPropertyInfo_Strokes\"></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|   |Metadata properties set to `true`|None|"},{"pos":[168821,168970],"content":"The collection of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects contained within the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects contained within the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[169439,169524],"content":"Identifies the <xref:System.Windows.Controls.InkCanvas.Strokes*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Strokes*&gt; dependency property.","pos":[0,85],"source":"Identifies the <xref:System.Windows.Controls.InkCanvas.Strokes*> dependency property."}]},{"pos":[169699,169711],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[170125,170212],"content":"Occurs when the <xref:System.Windows.Controls.InkCanvas.Strokes*> property is replaced.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the &lt;xref:System.Windows.Controls.InkCanvas.Strokes*&gt; property is replaced.","pos":[0,87],"source":"Occurs when the <xref:System.Windows.Controls.InkCanvas.Strokes*> property is replaced."}]},{"pos":[171098,171110],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[171718,171806],"content":"Adds the specified object to the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds the specified object to the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>."},{"pos":[171947,171971],"content":"The child object to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The child object to add.","pos":[0,24]}]},{"pos":[172662,172757],"content":"Adds the text that within the tags in markup. Always throws an <xref:System.ArgumentException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the text that within the tags in markup. Always throws an <xref:System.ArgumentException>.","pos":[0,95],"nodes":[{"content":"Adds the text that within the tags in markup.","pos":[0,45]},{"content":"Always throws an &lt;xref:System.ArgumentException&gt;.","pos":[46,95],"source":" Always throws an <xref:System.ArgumentException>."}]}]},{"pos":[172903,172912],"content":"Not used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not used.","pos":[0,9]}]},{"pos":[173393,173505],"content":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> attached property.","pos":[0,112],"source":"Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property."}]},{"pos":[173676,173688],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[174105,174281],"content":"Gets or sets a Boolean value that indicates whether to override standard <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> cursor functionality to support a custom cursor.","needQuote":true,"needEscape":true,"source":"Gets or sets a Boolean value that indicates whether to override standard <xref href=\"System.Windows.Controls.InkCanvas\"></xref> cursor functionality to support a custom cursor."},{"pos":[174293,174775],"content":"The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>. If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Windows.Controls.InkCanvas&gt; will change the cursor style to reflect the current &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt; while the cursor is within the bounds of the &lt;xref:System.Windows.Controls.InkCanvas&gt;.","pos":[0,239],"source":"The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>."},{"content":"If this behavior is not wanted, for example, when the &lt;xref:System.Windows.Controls.InkCanvas&gt; uses a custom cursor, set this property to <ph id=\"ph1\">`true`</ph>, and the cursor will not change with the &lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;.","pos":[240,482],"source":" If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>."}]},{"pos":[175259,175482],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.InkCanvas\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is using a custom cursor; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> is using a custom cursor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[175982,176043],"content":"Gets the number of visual child elements within this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of visual child elements within this element.","pos":[0,61]}]},{"pos":[176175,176228],"content":"The number of visual child elements for this element.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of visual child elements for this element.","pos":[0,53]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.InkCanvas\n  id: InkCanvas\n  children:\n  - System.Windows.Controls.InkCanvas.#ctor\n  - System.Windows.Controls.InkCanvas.ActiveEditingMode\n  - System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\n  - System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent\n  - System.Windows.Controls.InkCanvas.ActiveEditingModeProperty\n  - System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.InkCanvas.Background\n  - System.Windows.Controls.InkCanvas.BackgroundProperty\n  - System.Windows.Controls.InkCanvas.BottomProperty\n  - System.Windows.Controls.InkCanvas.CanPaste\n  - System.Windows.Controls.InkCanvas.Children\n  - System.Windows.Controls.InkCanvas.CopySelection\n  - System.Windows.Controls.InkCanvas.CutSelection\n  - System.Windows.Controls.InkCanvas.DefaultDrawingAttributes\n  - System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty\n  - System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\n  - System.Windows.Controls.InkCanvas.DefaultStylusPointDescription\n  - System.Windows.Controls.InkCanvas.DynamicRenderer\n  - System.Windows.Controls.InkCanvas.EditingMode\n  - System.Windows.Controls.InkCanvas.EditingModeChanged\n  - System.Windows.Controls.InkCanvas.EditingModeChangedEvent\n  - System.Windows.Controls.InkCanvas.EditingModeInverted\n  - System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\n  - System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent\n  - System.Windows.Controls.InkCanvas.EditingModeInvertedProperty\n  - System.Windows.Controls.InkCanvas.EditingModeProperty\n  - System.Windows.Controls.InkCanvas.EraserShape\n  - System.Windows.Controls.InkCanvas.Gesture\n  - System.Windows.Controls.InkCanvas.GestureEvent\n  - System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)\n  - System.Windows.Controls.InkCanvas.GetEnabledGestures\n  - System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)\n  - System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)\n  - System.Windows.Controls.InkCanvas.GetSelectedElements\n  - System.Windows.Controls.InkCanvas.GetSelectedStrokes\n  - System.Windows.Controls.InkCanvas.GetSelectionBounds\n  - System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)\n  - System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)\n  - System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)\n  - System.Windows.Controls.InkCanvas.InkPresenter\n  - System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable\n  - System.Windows.Controls.InkCanvas.LeftProperty\n  - System.Windows.Controls.InkCanvas.LogicalChildren\n  - System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.InkCanvas.MoveEnabled\n  - System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnCreateAutomationPeer\n  - System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)\n  - System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)\n  - System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)\n  - System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)\n  - System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  - System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)\n  - System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  - System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)\n  - System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)\n  - System.Windows.Controls.InkCanvas.Paste\n  - System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)\n  - System.Windows.Controls.InkCanvas.PreferredPasteFormats\n  - System.Windows.Controls.InkCanvas.ResizeEnabled\n  - System.Windows.Controls.InkCanvas.RightProperty\n  - System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  - System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)\n  - System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  - System.Windows.Controls.InkCanvas.SelectionChanged\n  - System.Windows.Controls.InkCanvas.SelectionChanging\n  - System.Windows.Controls.InkCanvas.SelectionMoved\n  - System.Windows.Controls.InkCanvas.SelectionMoving\n  - System.Windows.Controls.InkCanvas.SelectionResized\n  - System.Windows.Controls.InkCanvas.SelectionResizing\n  - System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)\n  - System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})\n  - System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)\n  - System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)\n  - System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)\n  - System.Windows.Controls.InkCanvas.StrokeCollected\n  - System.Windows.Controls.InkCanvas.StrokeCollectedEvent\n  - System.Windows.Controls.InkCanvas.StrokeErased\n  - System.Windows.Controls.InkCanvas.StrokeErasedEvent\n  - System.Windows.Controls.InkCanvas.StrokeErasing\n  - System.Windows.Controls.InkCanvas.Strokes\n  - System.Windows.Controls.InkCanvas.StrokesProperty\n  - System.Windows.Controls.InkCanvas.StrokesReplaced\n  - System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)\n  - System.Windows.Controls.InkCanvas.TopProperty\n  - System.Windows.Controls.InkCanvas.UseCustomCursor\n  - System.Windows.Controls.InkCanvas.VisualChildrenCount\n  langs:\n  - csharp\n  name: InkCanvas\n  nameWithType: InkCanvas\n  fullName: System.Windows.Controls.InkCanvas\n  type: Class\n  summary: Defines an area that receives and displays ink strokes.\n  remarks: \"An InkCanvas is an element that can be used to receive and display ink input. This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse. The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input. The InkCanvas enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.  \\n  \\n The InkCanvas can be bound to a data source. For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another InkCanvas. You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.\"\n  example:\n  - \"The following example demonstrates how to simulate the use of both a pen and a highlighter on the same InkCanvas. The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`. It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.  \\n  \\n [!code-cs[DrawingAttributes#3](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#3)]\\n [!code-vb[DrawingAttributes#3](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#3)]  \\n  \\n The following example declares two InkCanvas objects in XAML and establishes data binding between them and other data sources. The first InkCanvas, called `ic`, is bound to two data sources. The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML. The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second InkCanvas are bound to the first InkCanvas in the following code.  \\n  \\n [!code-xml[InkCanvasBinding#1](~/add/codesnippet/xaml/t-system.windows.control_114_2.xaml)]\\n [!code-xml[InkCanvasBinding#1](~/add/codesnippet/xaml/t-system.windows.control_114_2.xaml)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Children\")]\n\n      public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  implements:\n  - System.Windows.Markup.IAddChild\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnApplyTemplate\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: InkCanvas()\n  nameWithType: InkCanvas.InkCanvas()\n  fullName: System.Windows.Controls.InkCanvas.InkCanvas()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the InkCanvas class.\n  syntax:\n    content: public InkCanvas ();\n    parameters: []\n  overload: System.Windows.Controls.InkCanvas.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingMode\n  id: ActiveEditingMode\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: ActiveEditingMode\n  nameWithType: InkCanvas.ActiveEditingMode\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingMode\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the current editing mode of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"The ActiveEditingMode property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.  Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.  When the tablet pen is used in an inverted position, ActiveEditingMode has a value of <xref:System.Windows.Controls.InkCanvasEditingMode>. Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_ActiveEditingMode\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example reports the value of ActiveEditingMode whenever it changes.  \\n  \\n [!code-cs[InkCanvasSamples#36](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#36)]\\n [!code-vb[InkCanvasSamples#36](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#36)]\"\n  syntax:\n    content: public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }\n    return:\n      type: System.Windows.Controls.InkCanvasEditingMode\n      description: The current editing mode of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.ActiveEditingMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\n  id: ActiveEditingModeChanged\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: ActiveEditingModeChanged\n  nameWithType: InkCanvas.ActiveEditingModeChanged\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the current editing mode changes.\n  remarks: \"The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode. For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>. When the user changes the tip of tablet pen, the ActiveEditingModeChanged event occurs.  \\n  \\n<a name=\\\"routedEventInfo_ActiveEditingModeChanged\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.  \\n  \\n [!code-cs[InkCanvasSamples#36](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#36)]\\n [!code-vb[InkCanvasSamples#36](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#36)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent\n  id: ActiveEditingModeChangedEvent\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: ActiveEditingModeChangedEvent\n  nameWithType: InkCanvas.ActiveEditingModeChangedEvent\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty\n  id: ActiveEditingModeProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: ActiveEditingModeProperty\n  nameWithType: InkCanvas.ActiveEditingModeProperty\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)\n  id: ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: ArrangeOverride(Size)\n  nameWithType: InkCanvas.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.InkCanvas.ArrangeOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Positions child elements and determines a size for the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> object.\n  syntax:\n    content: protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);\n    parameters:\n    - id: arrangeSize\n      type: System.Windows.Size\n      description: The final area within the parent that this element should use to arrange itself and its children.\n    return:\n      type: System.Windows.Size\n      description: The actual size used.\n  overload: System.Windows.Controls.InkCanvas.ArrangeOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Background\n  id: Background\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Background\n  nameWithType: InkCanvas.Background\n  fullName: System.Windows.Controls.InkCanvas.Background\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a <xref href=\"System.Windows.Media.Brush\"></xref>. The brush is used to fill the border area surrounding a <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Background\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  \\n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|\"\n  example:\n  - \"The following example demonstrates how to set the Background property on an <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#37](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#37)]\\n [!code-vb[InkCanvasSamples#37](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#37)]\"\n  syntax:\n    content: public System.Windows.Media.Brush Background { get; set; }\n    return:\n      type: System.Windows.Media.Brush\n      description: A <xref href=\"System.Windows.Media.Brush\"></xref> used to fill the border area surrounding a <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.Background*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.BackgroundProperty\n  id: BackgroundProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: BackgroundProperty\n  nameWithType: InkCanvas.BackgroundProperty\n  fullName: System.Windows.Controls.InkCanvas.BackgroundProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.InkCanvas.Background*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BackgroundProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.BottomProperty\n  id: BottomProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: BottomProperty\n  nameWithType: InkCanvas.BottomProperty\n  fullName: System.Windows.Controls.InkCanvas.BottomProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty BottomProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.CanPaste\n  id: CanPaste\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: CanPaste()\n  nameWithType: InkCanvas.CanPaste()\n  fullName: System.Windows.Controls.InkCanvas.CanPaste()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Indicates whether the contents of the Clipboard can be pasted into the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format.\n  example:\n  - \"The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.  \\n  \\n [!code-cs[InkCanvasSamples#1](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#1)]\\n [!code-vb[InkCanvasSamples#1](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public bool CanPaste ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the contents of the Clipboard can be pasted in; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.CanPaste*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Children\n  id: Children\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Children\n  nameWithType: InkCanvas.Children\n  fullName: System.Windows.Controls.InkCanvas.Children\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Retrieves child elements of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"<a name=\\\"xamlPropertyElementUsage_Children\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  OneOrMoreUIElements  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_Children\\\"></a>   \\n## XAML Values  \\n *OneOrMoreUIElements*  \\n One or more <xref:System.Windows.UIElement> objects.\"\n  example:\n  - \"The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#8](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#8)]\\n [!code-vb[InkCanvasSamples#8](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#8)]\"\n  syntax:\n    content: public System.Windows.Controls.UIElementCollection Children { get; }\n    return:\n      type: System.Windows.Controls.UIElementCollection\n      description: A collection of child elements located on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.Children*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.CopySelection\n  id: CopySelection\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: CopySelection()\n  nameWithType: InkCanvas.CopySelection()\n  fullName: System.Windows.Controls.InkCanvas.CopySelection()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Copies selected strokes and/or elements to the Clipboard.\n  remarks: The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format. Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)].\n  example:\n  - \"The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard. This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and thatboth controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#3](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#3)]\\n [!code-vb[InkCanvasSamples#3](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#3)]\"\n  syntax:\n    content: public void CopySelection ();\n    parameters: []\n  overload: System.Windows.Controls.InkCanvas.CopySelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.CutSelection\n  id: CutSelection\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: CutSelection()\n  nameWithType: InkCanvas.CutSelection()\n  fullName: System.Windows.Controls.InkCanvas.CutSelection()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Deletes the selected strokes and elements, and copies them to the Clipboard.\n  remarks: The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format. Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)].\n  example:\n  - \"The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#4](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#4)]\\n [!code-vb[InkCanvasSamples#4](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#4)]\"\n  syntax:\n    content: public void CutSelection ();\n    parameters: []\n  overload: System.Windows.Controls.InkCanvas.CutSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes\n  id: DefaultDrawingAttributes\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: DefaultDrawingAttributes\n  nameWithType: InkCanvas.DefaultDrawingAttributes\n  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the drawing attributes that are applied to new ink strokes made on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"Setting this property will affect only new strokes that are made after this property is set. To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.  \\n  \\n<a name=\\\"dependencyPropertyInfo_DefaultDrawingAttributes\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>. The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`. It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHilighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.  \\n  \\n [!code-cs[DrawingAttributes#3](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#3)]\\n [!code-vb[DrawingAttributes#3](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#3)]  \\n  \\n The following example demonstrates how to bind the DefaultDrawingAttributes property to a data source.  \\n  \\n [!code-xml[InkCanvasBinding#3](~/add/codesnippet/xaml/p-system.windows.control_51_2.xaml)]\\n [!code-xml[InkCanvasBinding#3](~/add/codesnippet/xaml/p-system.windows.control_51_2.xaml)]  \\n[!code-xml[InkCanvasBinding#4](~/add/codesnippet/xaml/p-system.windows.control_51_3.xaml)]\\n[!code-xml[InkCanvasBinding#4](~/add/codesnippet/xaml/p-system.windows.control_51_3.xaml)]\"\n  syntax:\n    content: public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }\n    return:\n      type: System.Windows.Ink.DrawingAttributes\n      description: The default drawing attributes for the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty\n  id: DefaultDrawingAttributesProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: DefaultDrawingAttributesProperty\n  nameWithType: InkCanvas.DefaultDrawingAttributesProperty\n  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\n  id: DefaultDrawingAttributesReplaced\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: DefaultDrawingAttributesReplaced\n  nameWithType: InkCanvas.DefaultDrawingAttributesReplaced\n  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*> property is replaced.\n  remarks: ''\n  example:\n  - \"The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.  \\n  \\n [!code-cs[DrawingAttributes#17](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#17)]\\n [!code-vb[DrawingAttributes#17](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#17)]\"\n  syntax:\n    content: public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;\n    return:\n      type: System.Windows.Ink.DrawingAttributesReplacedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription\n  id: DefaultStylusPointDescription\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: DefaultStylusPointDescription\n  nameWithType: InkCanvas.DefaultStylusPointDescription\n  fullName: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the stylus point description for an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke. You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>. Setting this property will affect only new strokes that are made after the property is set.  \\n  \\n<a name=\\\"xamlTextUsage_DefaultStylusPointDescription\\\"></a>   \\n## XAML Text Usage  \\n You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following example sets the DefaultStylusPointDescription so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.  \\n  \\n> [!NOTE]\\n>  Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the DefaultStylusPointDescription is set to contain the additional property.  \\n  \\n [!code-cs[InkCanvasSamples#9](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#9)]\\n [!code-vb[InkCanvasSamples#9](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#9)]\"\n  syntax:\n    content: public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }\n    return:\n      type: System.Windows.Input.StylusPointDescription\n      description: The stylus point description for an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.DynamicRenderer\n  id: DynamicRenderer\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: DynamicRenderer\n  nameWithType: InkCanvas.DynamicRenderer\n  fullName: System.Windows.Controls.InkCanvas.DynamicRenderer\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the renderer that dynamically draws ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"You can set the DynamicRenderer property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.  \\n  \\n> [!NOTE]\\n>  The DynamicRenderer is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection. When you set the DynamicRenderer, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection. This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.\"\n  syntax:\n    content: protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }\n    return:\n      type: System.Windows.Input.StylusPlugIns.DynamicRenderer\n      description: The renderer that dynamically draws ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.DynamicRenderer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingMode\n  id: EditingMode\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingMode\n  nameWithType: InkCanvas.EditingMode\n  fullName: System.Windows.Controls.InkCanvas.EditingMode\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the user editing mode used by an active pointing device.\n  remarks: \"The default EditingMode is <xref:System.Windows.Controls.InkCanvasEditingMode>. Changing the EditingMode clears any existing selections.  \\n  \\n The EditingMode specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>. <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the \\\"eraser end\\\" of the stylus contacts the digitizer.  \\n  \\n<a name=\\\"dependencyPropertyInfo_EditingMode\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-vb[ICEditingModeSample#1](~/add/codesnippet/visualbasic/InkCanvasEditingModeSample/Window1.xaml.vb#1)]\\n [!code-cs[ICEditingModeSample#1](~/add/codesnippet/csharp/InkCanvasEditingModeSample/Window1.xaml.cs#1)]\"\n  syntax:\n    content: public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }\n    return:\n      type: System.Windows.Controls.InkCanvasEditingMode\n      description: The editing mode used when a pointing device (such as a tablet pen or mouse) is active.\n  overload: System.Windows.Controls.InkCanvas.EditingMode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeChanged\n  id: EditingModeChanged\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeChanged\n  nameWithType: InkCanvas.EditingModeChanged\n  fullName: System.Windows.Controls.InkCanvas.EditingModeChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the <xref:System.Windows.Controls.InkCanvas.EditingMode*> property of an <xref href=\"System.Windows.Controls.InkCanvas\"></xref> object has been changed.\n  remarks: \"This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n<a name=\\\"routedEventInfo_EditingModeChanged\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.  \\n  \\n [!code-cs[InkCanvasSamples#21](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#21)]\\n [!code-vb[InkCanvasSamples#21](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#21)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler EditingModeChanged;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeChangedEvent\n  id: EditingModeChangedEvent\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeChangedEvent\n  nameWithType: InkCanvas.EditingModeChangedEvent\n  fullName: System.Windows.Controls.InkCanvas.EditingModeChangedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeChanged\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeInverted\n  id: EditingModeInverted\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeInverted\n  nameWithType: InkCanvas.EditingModeInverted\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInverted\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the user editing mode if the stylus is inverted when it interacts with the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"This property controls the actions that are performed when the stylus is inverted.  \\n  \\n Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,  \\n  \\n<a name=\\\"dependencyPropertyInfo_EditingModeInverted\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus. An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.  \\n  \\n [!code-cs[InkCanvasSamples#6](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#6)]\\n [!code-vb[InkCanvasSamples#6](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#6)]\"\n  syntax:\n    content: public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }\n    return:\n      type: System.Windows.Controls.InkCanvasEditingMode\n      description: The inverted editing mode of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.EditingModeInverted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\n  id: EditingModeInvertedChanged\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeInvertedChanged\n  nameWithType: InkCanvas.EditingModeInvertedChanged\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*> property of an <xref href=\"System.Windows.Controls.InkCanvas\"></xref> object has been changed.\n  remarks: \"This event occurs after the inverted editing mode has been changed. These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n<a name=\\\"routedEventInfo_EditingModeInvertedChanged\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.  \\n  \\n [!code-cs[InkCanvasSamples#20](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#20)]\\n [!code-vb[InkCanvasSamples#20](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#20)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent\n  id: EditingModeInvertedChangedEvent\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeInvertedChangedEvent\n  nameWithType: InkCanvas.EditingModeInvertedChangedEvent\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty\n  id: EditingModeInvertedProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeInvertedProperty\n  nameWithType: InkCanvas.EditingModeInvertedProperty\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EditingModeProperty\n  id: EditingModeProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EditingModeProperty\n  nameWithType: InkCanvas.EditingModeProperty\n  fullName: System.Windows.Controls.InkCanvas.EditingModeProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.InkCanvas.EditingMode*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty EditingModeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.EraserShape\n  id: EraserShape\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: EraserShape\n  nameWithType: InkCanvas.EraserShape\n  fullName: System.Windows.Controls.InkCanvas.EraserShape\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.Ink.StylusShape\"></xref> used to point-erase ink from an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode>.  \\n  \\n Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.  \\n  \\n If you change the EraserShape, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.  \\n  \\n<a name=\\\"xamlTextUsage_EraserShape\\\"></a>   \\n## XAML Text Usage  \\n This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus. An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.  \\n  \\n [!code-cs[InkCanvasSamples#6](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#6)]\\n [!code-vb[InkCanvasSamples#6](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#6)]\"\n  syntax:\n    content: public System.Windows.Ink.StylusShape EraserShape { get; set; }\n    return:\n      type: System.Windows.Ink.StylusShape\n      description: The eraser shape associated with the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.EraserShape*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Gesture\n  id: Gesture\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Gesture\n  nameWithType: InkCanvas.Gesture\n  fullName: System.Windows.Controls.InkCanvas.Gesture\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> detects a gesture.\n  remarks: \"<a name=\\\"routedEventInfo_Gesture\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|\"\n  example:\n  - \"The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.  \\n  \\n [!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]\\n [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]  \\n[!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)]\\n[!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;\n    return:\n      type: System.Windows.Controls.InkCanvasGestureEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GestureEvent\n  id: GestureEvent\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GestureEvent\n  nameWithType: InkCanvas.GestureEvent\n  fullName: System.Windows.Controls.InkCanvas.GestureEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.InkCanvas.Gesture\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GestureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)\n  id: GetBottom(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetBottom(UIElement)\n  nameWithType: InkCanvas.GetBottom(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetBottom(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#34](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#34)]\\n [!code-vb[InkCanvasSamples#34](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#34)]\"\n  syntax:\n    content: public static double GetBottom (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element of which to get the bottom property.\n    return:\n      type: System.Double\n      description: The bottom coordinate of the dependency object.\n  overload: System.Windows.Controls.InkCanvas.GetBottom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetEnabledGestures\n  id: GetEnabledGestures\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetEnabledGestures()\n  nameWithType: InkCanvas.GetEnabledGestures()\n  fullName: System.Windows.Controls.InkCanvas.GetEnabledGestures()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a collection of application gestures that are recognized by <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#24](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#24)]\\n [!code-vb[InkCanvasSamples#24](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#24)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture> GetEnabledGestures ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}\n      description: A collection of gestures that the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> recognizes.\n  overload: System.Windows.Controls.InkCanvas.GetEnabledGestures*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)\n  id: GetLeft(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetLeft(UIElement)\n  nameWithType: InkCanvas.GetLeft(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetLeft(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#31](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#31)]\\n [!code-vb[InkCanvasSamples#31](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#31)]\"\n  syntax:\n    content: public static double GetLeft (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element of which to get the left property.\n    return:\n      type: System.Double\n      description: The left coordinate of the dependency object.\n  overload: System.Windows.Controls.InkCanvas.GetLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)\n  id: GetRight(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetRight(UIElement)\n  nameWithType: InkCanvas.GetRight(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetRight(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#32](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#32)]\\n [!code-vb[InkCanvasSamples#32](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#32)]\"\n  syntax:\n    content: public static double GetRight (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element of which to get the right property.\n    return:\n      type: System.Double\n      description: The right coordinate of the dependency object.\n  overload: System.Windows.Controls.InkCanvas.GetRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetSelectedElements\n  id: GetSelectedElements\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetSelectedElements()\n  nameWithType: InkCanvas.GetSelectedElements()\n  fullName: System.Windows.Controls.InkCanvas.GetSelectedElements()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Retrieves the <xref href=\"System.Windows.FrameworkElement\"></xref> objects that are selected in the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.  \\n  \\n To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.  \\n  \\n If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects. Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.\"\n  example:\n  - \"The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#12](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#12)]\\n [!code-vb[InkCanvasSamples#12](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#12)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.UIElement> GetSelectedElements ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.UIElement}\n      description: Array of <xref href=\"System.Windows.FrameworkElement\"></xref> objects.\n  overload: System.Windows.Controls.InkCanvas.GetSelectedElements*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetSelectedStrokes\n  id: GetSelectedStrokes\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetSelectedStrokes()\n  nameWithType: InkCanvas.GetSelectedStrokes()\n  fullName: System.Windows.Controls.InkCanvas.GetSelectedStrokes()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Retrieves a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that represents selected <xref href=\"System.Windows.Ink.Stroke\"></xref> objects on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"This method returns <xref:System.Windows.Ink.Stroke> objects, only. To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.  \\n  \\n If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects. Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.\"\n  example:\n  - \"The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#11](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#11)]\\n [!code-vb[InkCanvasSamples#11](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#11)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();\n    parameters: []\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: The collection of selected strokes.\n  overload: System.Windows.Controls.InkCanvas.GetSelectedStrokes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetSelectionBounds\n  id: GetSelectionBounds\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetSelectionBounds()\n  nameWithType: InkCanvas.GetSelectionBounds()\n  fullName: System.Windows.Controls.InkCanvas.GetSelectionBounds()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the bounds of the selected strokes and elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example prevents the user from making a selection smaller than its original size.  \\n  \\n [!code-cs[InkCanvasSamples#16](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#16)]\\n [!code-vb[InkCanvasSamples#16](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#16)]\"\n  syntax:\n    content: public System.Windows.Rect GetSelectionBounds ();\n    parameters: []\n    return:\n      type: System.Windows.Rect\n      description: The smallest rectangle that encompasses all selected strokes and elements.\n  overload: System.Windows.Controls.InkCanvas.GetSelectionBounds*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)\n  id: GetTop(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetTop(UIElement)\n  nameWithType: InkCanvas.GetTop(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetTop(UIElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#33](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#33)]\\n [!code-vb[InkCanvasSamples#33](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#33)]\"\n  syntax:\n    content: public static double GetTop (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element of which to get the top property.\n    return:\n      type: System.Double\n      description: The top coordinate of the dependency object.\n  overload: System.Windows.Controls.InkCanvas.GetTop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)\n  id: GetVisualChild(System.Int32)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: GetVisualChild(Int32)\n  nameWithType: InkCanvas.GetVisualChild(Int32)\n  fullName: System.Windows.Controls.InkCanvas.GetVisualChild(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Overrides <xref:System.Windows.Media.Visual.GetVisualChild*>, and returns a child at the specified index from a collection of child elements.\n  syntax:\n    content: protected override System.Windows.Media.Visual GetVisualChild (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the requested child element in the collection.\n    return:\n      type: System.Windows.Media.Visual\n      description: The requested child element. This should not return <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>; if the provided index is out of range, an exception is thrown.\n  overload: System.Windows.Controls.InkCanvas.GetVisualChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  id: HitTestCore(System.Windows.Media.PointHitTestParameters)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: HitTestCore(PointHitTestParameters)\n  nameWithType: InkCanvas.HitTestCore(PointHitTestParameters)\n  fullName: System.Windows.Controls.InkCanvas.HitTestCore(PointHitTestParameters)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Determines whether a given point falls within the rendering bounds of an <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  syntax:\n    content: protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);\n    parameters:\n    - id: hitTestParams\n      type: System.Windows.Media.PointHitTestParameters\n      description: An object that specifies the <xref href=\"System.Windows.Point\"></xref> to hit test against.\n    return:\n      type: System.Windows.Media.HitTestResult\n      description: An object that represents the <xref href=\"System.Windows.Media.Visual\"></xref> that is returned from a hit test.\n  overload: System.Windows.Controls.InkCanvas.HitTestCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)\n  id: HitTestSelection(System.Windows.Point)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: HitTestSelection(Point)\n  nameWithType: InkCanvas.HitTestSelection(Point)\n  fullName: System.Windows.Controls.InkCanvas.HitTestSelection(Point)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.\n  remarks: Use the HitTestSelection method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.  This is useful when performing drag and drop operations.\n  example:\n  - \"The following example demonstrates how use HitTestSelection to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.  To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[InkDragDrop#3](~/add/codesnippet/csharp/InkDragDrop/Window1.xaml.cs#3)]\\n [!code-vb[InkDragDrop#3](~/add/codesnippet/visualbasic/InkDragDrop/Window1.xaml.vb#3)]\"\n  syntax:\n    content: public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to hit test.\n    return:\n      type: System.Windows.Controls.InkCanvasSelectionHitResult\n      description: A value that indicates which part of the selection adorner intersects or surrounds a specified point.\n  overload: System.Windows.Controls.InkCanvas.HitTestSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.InkPresenter\n  id: InkPresenter\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: InkPresenter\n  nameWithType: InkCanvas.InkPresenter\n  fullName: System.Windows.Controls.InkCanvas.InkPresenter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the ink presenter that displays ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  syntax:\n    content: protected System.Windows.Controls.InkPresenter InkPresenter { get; }\n    return:\n      type: System.Windows.Controls.InkPresenter\n      description: The ink presenter that displays ink on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.InkPresenter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable\n  id: IsGestureRecognizerAvailable\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: IsGestureRecognizerAvailable\n  nameWithType: InkCanvas.IsGestureRecognizerAvailable\n  fullName: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets (determines) whether the gesture recognition component is available on the user's system.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.  \\n  \\n [!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]\\n [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]  \\n[!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)]\\n[!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public bool IsGestureRecognizerAvailable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the recognition component is available; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.LeftProperty\n  id: LeftProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: LeftProperty\n  nameWithType: InkCanvas.LeftProperty\n  fullName: System.Windows.Controls.InkCanvas.LeftProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty LeftProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.LogicalChildren\n  id: LogicalChildren\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: LogicalChildren\n  nameWithType: InkCanvas.LogicalChildren\n  fullName: System.Windows.Controls.InkCanvas.LogicalChildren\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns enumerator to logical children.\n  syntax:\n    content: protected override System.Collections.IEnumerator LogicalChildren { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Windows.Controls.InkCanvas.LogicalChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: InkCanvas.MeasureOverride(Size)\n  fullName: System.Windows.Controls.InkCanvas.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Measures the size in layout required for child elements and determines a size for the [System.Windows.Controls.InkCanvas](~/add/includes/ajax-current-ext-md.md) object.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);\n    parameters:\n    - id: availableSize\n      type: System.Windows.Size\n      description: The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.\n    return:\n      type: System.Windows.Size\n      description: The size that this element determines it needs during layout, based on its calculations of child element sizes.\n  overload: System.Windows.Controls.InkCanvas.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.MoveEnabled\n  id: MoveEnabled\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: MoveEnabled\n  nameWithType: InkCanvas.MoveEnabled\n  fullName: System.Windows.Controls.InkCanvas.MoveEnabled\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected. This border enables the user to move the selected objects. If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.  \\n  \\n If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.\"\n  example:\n  - \"The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#7](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#7)]\\n [!code-vb[InkCanvasSamples#7](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#7)]\"\n  syntax:\n    content: public bool MoveEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a user can move strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.MoveEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)\n  id: OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnActiveEditingModeChanged(RoutedEventArgs)\n  nameWithType: InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: InkCanvas.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Provides an appropriate <xref href=\"System.Windows.Automation.Peers.InkCanvasAutomationPeer\"></xref> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure.\n  syntax:\n    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: Provides an appropriate <xref href=\"System.Windows.Automation.Peers.InkCanvasAutomationPeer\"></xref> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure.\n  overload: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  id: OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  nameWithType: InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\"></xref> event.\n  syntax:\n    content: protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.DrawingAttributesReplacedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)\n  id: OnEditingModeChanged(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnEditingModeChanged(RoutedEventArgs)\n  nameWithType: InkCanvas.OnEditingModeChanged(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnEditingModeChanged(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeChanged\"></xref> event.\n  remarks: This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.\n  syntax:\n    content: protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnEditingModeChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)\n  id: OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnEditingModeInvertedChanged(RoutedEventArgs)\n  nameWithType: InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\"></xref> event.\n  remarks: This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.\n  syntax:\n    content: protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)\n  id: OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnGesture(InkCanvasGestureEventArgs)\n  nameWithType: InkCanvas.OnGesture(InkCanvasGestureEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnGesture(InkCanvasGestureEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.Gesture\"></xref> event.\n  syntax:\n    content: protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasGestureEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnGesture*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  id: OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Invoked whenever the effective value of any dependency property on this <xref href=\"System.Windows.FrameworkElement\"></xref> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <xref:System.Windows.DependencyObject.OnPropertyChanged*>.\n  syntax:\n    content: protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The event data that describes the property that changed, as well as old and new values.\n  overload: System.Windows.Controls.InkCanvas.OnPropertyChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)\n  id: OnSelectionChanged(System.EventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnSelectionChanged(EventArgs)\n  nameWithType: InkCanvas.OnSelectionChanged(EventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanged(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionChanged\"></xref> event.\n  remarks: This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.\n  syntax:\n    content: protected virtual void OnSelectionChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnSelectionChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)\n  id: OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnSelectionChanging(InkCanvasSelectionChangingEventArgs)\n  nameWithType: InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionChanging\"></xref> event.\n  remarks: This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied. After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.\n  syntax:\n    content: protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasSelectionChangingEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnSelectionChanging*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)\n  id: OnSelectionMoved(System.EventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnSelectionMoved(EventArgs)\n  nameWithType: InkCanvas.OnSelectionMoved(EventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoved(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: An event announcing that the user selected and moved a selection of strokes and/or elements.\n  remarks: This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.\n  syntax:\n    content: protected virtual void OnSelectionMoved (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: Not used.\n  overload: System.Windows.Controls.InkCanvas.OnSelectionMoved*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  id: OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnSelectionMoving(InkCanvasSelectionEditingEventArgs)\n  nameWithType: InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionMoving\"></xref> event.\n  remarks: This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied. After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.\n  syntax:\n    content: protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasSelectionEditingEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnSelectionMoving*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)\n  id: OnSelectionResized(System.EventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnSelectionResized(EventArgs)\n  nameWithType: InkCanvas.OnSelectionResized(EventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionResized(EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionResized\"></xref> event.\n  remarks: This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied. Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.\n  syntax:\n    content: protected virtual void OnSelectionResized (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnSelectionResized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  id: OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnSelectionResizing(InkCanvasSelectionEditingEventArgs)\n  nameWithType: InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.SelectionResizing\"></xref> event.\n  remarks: This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied. After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.\n  syntax:\n    content: protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasSelectionEditingEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnSelectionResizing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)\n  id: OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)\n  nameWithType: InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokeCollected\"></xref> event.\n  remarks: \"OnStrokeCollected is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.  \\n  \\n A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the OnStrokeCollected method.\"\n  syntax:\n    content: protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasStrokeCollectedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnStrokeCollected*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)\n  id: OnStrokeErased(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnStrokeErased(RoutedEventArgs)\n  nameWithType: InkCanvas.OnStrokeErased(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokeErased(RoutedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokeErased\"></xref> event.\n  syntax:\n    content: protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.RoutedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnStrokeErased*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)\n  id: OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnStrokeErasing(InkCanvasStrokeErasingEventArgs)\n  nameWithType: InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokeErasing\"></xref> event.\n  syntax:\n    content: protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasStrokeErasingEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnStrokeErasing*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)\n  id: OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)\n  nameWithType: InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Raises the <xref href=\"System.Windows.Controls.InkCanvas.StrokesReplaced\"></xref> event.\n  syntax:\n    content: protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Controls.InkCanvasStrokesReplacedEventArgs\n      description: The event data.\n  overload: System.Windows.Controls.InkCanvas.OnStrokesReplaced*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Paste\n  id: Paste\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Paste()\n  nameWithType: InkCanvas.Paste()\n  fullName: System.Windows.Controls.InkCanvas.Paste()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Pastes the contents of the Clipboard to the top-left corner of the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format.\n  example:\n  - \"The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.  \\n  \\n [!code-cs[InkCanvasSamples#1](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#1)]\\n [!code-vb[InkCanvasSamples#1](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public void Paste ();\n    parameters: []\n  overload: System.Windows.Controls.InkCanvas.Paste*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)\n  id: Paste(System.Windows.Point)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Paste(Point)\n  nameWithType: InkCanvas.Paste(Point)\n  fullName: System.Windows.Controls.InkCanvas.Paste(Point)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Pastes the contents of the Clipboard to the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> at a given point.\n  remarks: The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)], and text format.\n  example:\n  - \"The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.  \\n  \\n [!code-cs[InkCanvasSamples#1](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#1)]\\n [!code-vb[InkCanvasSamples#1](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public void Paste (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point at which to paste the strokes.\n  overload: System.Windows.Controls.InkCanvas.Paste*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.PreferredPasteFormats\n  id: PreferredPasteFormats\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: PreferredPasteFormats\n  nameWithType: InkCanvas.PreferredPasteFormats\n  fullName: System.Windows.Controls.InkCanvas.PreferredPasteFormats\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets formats that can be pasted onto the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"<a name=\\\"xamlPropertyElementUsage_PreferredPasteFormats\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.PreferredPasteFormats>  \\n    InkCanvasClipboardFormats  \\n  </object.PreferredPasteFormats>  \\n</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_PreferredPasteFormats\\\"></a>   \\n## XAML Values  \\n *InkCanvasClipboardFormats*  \\n An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values. Specifying an array in XAML requires `x:Array` usage. Specifying an enumeration value as an element that declares an array member requires `x:Static` usage. For more information, see [x:Array Markup Extension](~/add/includes/ajax-current-ext-md.md) and [x:Static Markup Extension](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example sets the PreferredPasteFormats to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/add/includes/tlasharptla-isf-md.md)].  \\n  \\n [!code-cs[InkCanvasSamples#26](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#26)]\\n [!code-vb[InkCanvasSamples#26](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#26)]  \\n  \\n The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)].  \\n  \\n [!code-xml[InkCanvasSamples#38](~/add/codesnippet/xaml/InkCanvasSamples/Window2.xaml#38)]\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Controls.InkCanvasClipboardFormat> PreferredPasteFormats { get; set; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Controls.InkCanvasClipboardFormat}\n      description: A collection of enumeration values. The default is <xref href=\"System.Windows.Controls.InkCanvasClipboardFormat\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.PreferredPasteFormats*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.ResizeEnabled\n  id: ResizeEnabled\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: ResizeEnabled\n  nameWithType: InkCanvas.ResizeEnabled\n  fullName: System.Windows.Controls.InkCanvas.ResizeEnabled\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected. This border enables the user to resize the selected objects. If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.  \\n  \\n If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.\"\n  example:\n  - \"The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#7](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#7)]\\n [!code-vb[InkCanvasSamples#7](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#7)]\"\n  syntax:\n    content: public bool ResizeEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a user can resize strokes and/or elements on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.ResizeEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.RightProperty\n  id: RightProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: RightProperty\n  nameWithType: InkCanvas.RightProperty\n  fullName: System.Windows.Controls.InkCanvas.RightProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached propertyy.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty RightProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  id: Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Select(IEnumerable<UIElement>)\n  nameWithType: InkCanvas.Select(IEnumerable<UIElement>)\n  fullName: System.Windows.Controls.InkCanvas.Select(IEnumerable<UIElement>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Selects a set of <xref href=\"System.Windows.UIElement\"></xref> objects.\n  remarks: \"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.  \\n  \\n Selected strokes are displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.UIElement> objects will not display differently when selected. If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, Select ignores the <xref:System.Windows.UIElement>.\"\n  example:\n  - \"The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#2](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#2)]\\n [!code-vb[InkCanvasSamples#2](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#2)]\"\n  syntax:\n    content: public void Select (System.Collections.Generic.IEnumerable<System.Windows.UIElement> selectedElements);\n    parameters:\n    - id: selectedElements\n      type: System.Collections.Generic.IEnumerable{System.Windows.UIElement}\n      description: A collection of <xref href=\"System.Windows.UIElement\"></xref> objects to select.\n  overload: System.Windows.Controls.InkCanvas.Select*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)\n  id: Select(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Select(StrokeCollection)\n  nameWithType: InkCanvas.Select(StrokeCollection)\n  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Selects a set of ink <xref href=\"System.Windows.Ink.Stroke\"></xref> objects.\n  remarks: \"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.  \\n  \\n Selected strokes are displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.FrameworkElement> objects do not display differently when selected.\"\n  example:\n  - \"The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.  This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#2](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#2)]\\n [!code-vb[InkCanvasSamples#2](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#2)]\"\n  syntax:\n    content: public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);\n    parameters:\n    - id: selectedStrokes\n      type: System.Windows.Ink.StrokeCollection\n      description: A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects to select.\n  overload: System.Windows.Controls.InkCanvas.Select*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more strokes in <code>selectedStrokes</code> is not in the <xref:System.Windows.Controls.InkCanvas.Strokes*> property.\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  id: Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Select(StrokeCollection,IEnumerable<UIElement>)\n  nameWithType: InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)\n  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Selects a combination of <xref href=\"System.Windows.Ink.Stroke\"></xref> and <xref href=\"System.Windows.UIElement\"></xref> objects.\n  remarks: \"An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.  \\n  \\n Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation. <xref:System.Windows.UIElement> objects will not display differently when selected. If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.\"\n  example:\n  - \"The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.  This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#2](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#2)]\\n [!code-vb[InkCanvasSamples#2](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#2)]\"\n  syntax:\n    content: public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable<System.Windows.UIElement> selectedElements);\n    parameters:\n    - id: selectedStrokes\n      type: System.Windows.Ink.StrokeCollection\n      description: A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects to select.\n    - id: selectedElements\n      type: System.Collections.Generic.IEnumerable{System.Windows.UIElement}\n      description: A collection of <xref href=\"System.Windows.UIElement\"></xref> objects to select.\n  overload: System.Windows.Controls.InkCanvas.Select*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: One or more strokes in <code>selectedStrokes</code> is not included in the <xref:System.Windows.Controls.InkCanvas.Strokes*> property.\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SelectionChanged\n  id: SelectionChanged\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SelectionChanged\n  nameWithType: InkCanvas.SelectionChanged\n  fullName: System.Windows.Controls.InkCanvas.SelectionChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the selection on the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> changes.\n  remarks: \"This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.  \\n  \\n If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.\"\n  example:\n  - \"The following example prevents the user from making a selection smaller than its original size.  \\n  \\n [!code-cs[InkCanvasSamples#16](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#16)]\\n [!code-vb[InkCanvasSamples#16](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#16)]\"\n  syntax:\n    content: public event EventHandler SelectionChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SelectionChanging\n  id: SelectionChanging\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SelectionChanging\n  nameWithType: InkCanvas.SelectionChanging\n  fullName: System.Windows.Controls.InkCanvas.SelectionChanging\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a new set of ink strokes and/or elements is being selected.\n  remarks: \"The SelectionChanging event is raised when strokes and/or elements are selected by the user - but before the change is applied.  \\n  \\n The SelectionChanging event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object. <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.  \\n  \\n After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.  \\n  \\n> [!NOTE]\\n>  The SelectionChanging event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.\"\n  example:\n  - \"The following example makes selected strokes royal blue.  \\n  \\n [!code-cs[InkCanvasSamples#14](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#14)]\\n [!code-vb[InkCanvasSamples#14](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#14)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;\n    return:\n      type: System.Windows.Controls.InkCanvasSelectionChangingEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SelectionMoved\n  id: SelectionMoved\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SelectionMoved\n  nameWithType: InkCanvas.SelectionMoved\n  fullName: System.Windows.Controls.InkCanvas.SelectionMoved\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs after the user moves a selection of strokes and/or elements.\n  remarks: This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position. Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.\n  example:\n  - \"The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.  \\n  \\n [!code-cs[InkCanvasSamples#19](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#19)]\\n [!code-vb[InkCanvasSamples#19](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#19)]\"\n  syntax:\n    content: public event EventHandler SelectionMoved;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SelectionMoving\n  id: SelectionMoving\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SelectionMoving\n  nameWithType: InkCanvas.SelectionMoving\n  fullName: System.Windows.Controls.InkCanvas.SelectionMoving\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs before selected strokes and elements are moved.\n  remarks: \"This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.  \\n  \\n The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.  \\n  \\n After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.\"\n  example:\n  - \"The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#13](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#13)]\\n [!code-vb[InkCanvasSamples#13](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#13)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;\n    return:\n      type: System.Windows.Controls.InkCanvasSelectionEditingEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SelectionResized\n  id: SelectionResized\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SelectionResized\n  nameWithType: InkCanvas.SelectionResized\n  fullName: System.Windows.Controls.InkCanvas.SelectionResized\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a selection of strokes and/or elements has been resized by the user.\n  remarks: \"This event is raised after a selection of strokes and/or elements is resized.  \\n  \\n If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.\"\n  example:\n  - \"The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.  \\n  \\n [!code-cs[InkCanvasSamples#23](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#23)]\\n [!code-vb[InkCanvasSamples#23](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#23)]\"\n  syntax:\n    content: public event EventHandler SelectionResized;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SelectionResizing\n  id: SelectionResizing\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SelectionResizing\n  nameWithType: InkCanvas.SelectionResizing\n  fullName: System.Windows.Controls.InkCanvas.SelectionResizing\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs before selected strokes and elements are resized.\n  remarks: \"This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.  \\n  \\n The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>. <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.  \\n  \\n After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.\"\n  example:\n  - \"The following example prevents the user from making a selection smaller than its original size.  \\n  \\n [!code-cs[InkCanvasSamples#16](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#16)]\\n [!code-vb[InkCanvasSamples#16](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#16)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;\n    return:\n      type: System.Windows.Controls.InkCanvasSelectionEditingEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)\n  id: SetBottom(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SetBottom(UIElement,Double)\n  nameWithType: InkCanvas.SetBottom(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetBottom(UIElement,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Bottom%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#28](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#28)]\\n [!code-vb[InkCanvasSamples#28](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#28)]\"\n  syntax:\n    content: public static void SetBottom (System.Windows.UIElement element, double length);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to set the bottom property.\n    - id: length\n      type: System.Double\n      description: The bottom coordinate of `element`.\n  overload: System.Windows.Controls.InkCanvas.SetBottom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})\n  id: SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)\n  nameWithType: InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)\n  fullName: System.Windows.Controls.InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the application gestures that the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> will recognize.\n  remarks: \"The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.  \\n  \\n [!code-cs[GestureSample#3](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#3)]\\n [!code-vb[GestureSample#3](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#3)]  \\n[!code-cs[GestureSample#1](~/add/codesnippet/csharp/GestureSample/Window1.xaml.cs#1)]\\n[!code-vb[GestureSample#1](~/add/codesnippet/visualbasic/GestureSample/Window1.xaml.vb#1)]\"\n  syntax:\n    content: public void SetEnabledGestures (System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture> applicationGestures);\n    parameters:\n    - id: applicationGestures\n      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}\n      description: A collection of application gestures that the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> will recognize.\n  overload: System.Windows.Controls.InkCanvas.SetEnabledGestures*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)\n  id: SetLeft(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SetLeft(UIElement,Double)\n  nameWithType: InkCanvas.SetLeft(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetLeft(UIElement,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Left%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#29](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#29)]\\n [!code-vb[InkCanvasSamples#29](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#29)]\"\n  syntax:\n    content: public static void SetLeft (System.Windows.UIElement element, double length);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to set the left property.\n    - id: length\n      type: System.Double\n      description: The left coordinate of `element`.\n  overload: System.Windows.Controls.InkCanvas.SetLeft*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)\n  id: SetRight(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SetRight(UIElement,Double)\n  nameWithType: InkCanvas.SetRight(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetRight(UIElement,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Right%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#30](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#30)]\\n [!code-vb[InkCanvasSamples#30](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#30)]\"\n  syntax:\n    content: public static void SetRight (System.Windows.UIElement element, double length);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to set the right property.\n    - id: length\n      type: System.Double\n      description: The right coordinate of `element`.\n  overload: System.Windows.Controls.InkCanvas.SetRight*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)\n  id: SetTop(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: SetTop(UIElement,Double)\n  nameWithType: InkCanvas.SetTop(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetTop(UIElement,Double)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Sets the value of the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property for a given dependency object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-cs[InkCanvasSamples#27](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#27)]\\n [!code-vb[InkCanvasSamples#27](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#27)]\"\n  syntax:\n    content: public static void SetTop (System.Windows.UIElement element, double length);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to set the top property.\n    - id: length\n      type: System.Double\n      description: The top coordinate of `element`.\n  overload: System.Windows.Controls.InkCanvas.SetTop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokeCollected\n  id: StrokeCollected\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokeCollected\n  nameWithType: InkCanvas.StrokeCollected\n  fullName: System.Windows.Controls.InkCanvas.StrokeCollected\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when a stroke drawn by the user is added to the <xref:System.Windows.Controls.InkCanvas.Strokes*> property.\n  remarks: \"This event is raised when a user completes a stroke using a pointing device. For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.  \\n  \\n The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke. The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.  \\n  \\n<a name=\\\"routedEventInfo_StrokeCollected\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|\"\n  example:\n  - \"The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#22](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#22)]\\n [!code-vb[InkCanvasSamples#22](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#22)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;\n    return:\n      type: System.Windows.Controls.InkCanvasStrokeCollectedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokeCollectedEvent\n  id: StrokeCollectedEvent\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokeCollectedEvent\n  nameWithType: InkCanvas.StrokeCollectedEvent\n  fullName: System.Windows.Controls.InkCanvas.StrokeCollectedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.InkCanvas.StrokeCollected\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokeErased\n  id: StrokeErased\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokeErased\n  nameWithType: InkCanvas.StrokeErased\n  fullName: System.Windows.Controls.InkCanvas.StrokeErased\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when user erases a stroke.\n  remarks: \"This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.  \\n  \\n<a name=\\\"routedEventInfo_StrokeErasing\\\"></a>   \\n## Routed Event Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  \\n|Routing strategy|Bubbling|  \\n|Delegate|<xref:System.Windows.RoutedEventHandler>|\"\n  example:\n  - \"The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the StrokeErased event occurs. If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases. This is because the old stroke was replaced by two new strokes.  \\n  \\n [!code-cs[InkCanvasSamples#18](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#18)]\\n [!code-vb[InkCanvasSamples#18](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#18)]\"\n  syntax:\n    content: public event System.Windows.RoutedEventHandler StrokeErased;\n    return:\n      type: System.Windows.RoutedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokeErasedEvent\n  id: StrokeErasedEvent\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokeErasedEvent\n  nameWithType: InkCanvas.StrokeErasedEvent\n  fullName: System.Windows.Controls.InkCanvas.StrokeErasedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref href=\"System.Windows.Controls.InkCanvas.StrokeErased\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent StrokeErasedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokeErasing\n  id: StrokeErasing\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokeErasing\n  nameWithType: InkCanvas.StrokeErasing\n  fullName: System.Windows.Controls.InkCanvas.StrokeErasing\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs just before a user erases a stroke.\n  remarks: Handle this event when you want to check whether a stroke should be erased. Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased. You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode> or <xref:System.Windows.Controls.InkCanvasEditingMode>.\n  example:\n  - \"The following example prevents any strokes rendered as highlighters from being erased. The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.  \\n  \\n [!code-cs[DrawingAttributes#16](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#16)]\\n [!code-vb[DrawingAttributes#16](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#16)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;\n    return:\n      type: System.Windows.Controls.InkCanvasStrokeErasingEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.Strokes\n  id: Strokes\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: Strokes\n  nameWithType: InkCanvas.Strokes\n  fullName: System.Windows.Controls.InkCanvas.Strokes\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the collection of ink <xref href=\"System.Windows.Ink.Stroke\"></xref> objects collected by the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_Strokes\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>. In this example, player one and player two each use an individual \\\"inking surface\\\" even though they share the same <xref:System.Windows.Controls.InkCanvas>. This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.  \\n  \\n [!code-cs[InkCanvasSamples#15](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#15)]\\n [!code-vb[InkCanvasSamples#15](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#15)]  \\n  \\n The following example demonstrates how to bind the Strokes property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-xml[InkCanvasBinding#2](~/add/codesnippet/xaml/p-system.windows.control_84_2.xaml)]\\n [!code-xml[InkCanvasBinding#2](~/add/codesnippet/xaml/p-system.windows.control_84_2.xaml)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection Strokes { get; set; }\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: The collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects contained within the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.Strokes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokesProperty\n  id: StrokesProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokesProperty\n  nameWithType: InkCanvas.StrokesProperty\n  fullName: System.Windows.Controls.InkCanvas.StrokesProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.InkCanvas.Strokes*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StrokesProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.StrokesReplaced\n  id: StrokesReplaced\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: StrokesReplaced\n  nameWithType: InkCanvas.StrokesReplaced\n  fullName: System.Windows.Controls.InkCanvas.StrokesReplaced\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Occurs when the <xref:System.Windows.Controls.InkCanvas.Strokes*> property is replaced.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>. In this example, player one and player two each use an individual \\\"inking surface\\\" even though they share the same <xref:System.Windows.Controls.InkCanvas>. This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.  \\n  \\n [!code-cs[InkCanvasSamples#15](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#15)]\\n [!code-vb[InkCanvasSamples#15](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#15)]\"\n  syntax:\n    content: public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;\n    return:\n      type: System.Windows.Controls.InkCanvasStrokesReplacedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  id: System#Windows#Markup#IAddChild#AddChild(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Adds the specified object to the <xref href=\"System.Windows.Controls.InkCanvas\"></xref>.\n  syntax:\n    content: void IAddChild.AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The child object to add.\n  overload: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)\n  id: System#Windows#Markup#IAddChild#AddText(System.String)\n  isEii: true\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Adds the text that within the tags in markup. Always throws an <xref:System.ArgumentException>.\n  syntax:\n    content: void IAddChild.AddText (string textData);\n    parameters:\n    - id: textData\n      type: System.String\n      description: Not used.\n  overload: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.TopProperty\n  id: TopProperty\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: TopProperty\n  nameWithType: InkCanvas.TopProperty\n  fullName: System.Windows.Controls.InkCanvas.TopProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the &lt;xref:System.Windows.Controls.InkCanvas.Top%2A?displayProperty=fullName&gt; attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TopProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.UseCustomCursor\n  id: UseCustomCursor\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: UseCustomCursor\n  nameWithType: InkCanvas.UseCustomCursor\n  fullName: System.Windows.Controls.InkCanvas.UseCustomCursor\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a Boolean value that indicates whether to override standard <xref href=\"System.Windows.Controls.InkCanvas\"></xref> cursor functionality to support a custom cursor.\n  remarks: The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>. If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.\n  example:\n  - \"The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.  \\n  \\n [!code-cs[InkCanvasSamples#5](~/add/codesnippet/csharp/InkCanvasSamples/Window1.xaml.cs#5)]\\n [!code-vb[InkCanvasSamples#5](~/add/codesnippet/visualbasic/InkCanvasSamples/Window1.xaml.vb#5)]\"\n  syntax:\n    content: public bool UseCustomCursor { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Controls.InkCanvas\"></xref> is using a custom cursor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.InkCanvas.UseCustomCursor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.InkCanvas.VisualChildrenCount\n  id: VisualChildrenCount\n  parent: System.Windows.Controls.InkCanvas\n  langs:\n  - csharp\n  name: VisualChildrenCount\n  nameWithType: InkCanvas.VisualChildrenCount\n  fullName: System.Windows.Controls.InkCanvas.VisualChildrenCount\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the number of visual child elements within this element.\n  syntax:\n    content: protected override int VisualChildrenCount { get; }\n    return:\n      type: System.Int32\n      description: The number of visual child elements for this element.\n  overload: System.Windows.Controls.InkCanvas.VisualChildrenCount*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.FrameworkElement\n  isExternal: false\n  name: System.Windows.FrameworkElement\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Windows.Controls.InkCanvas.#ctor\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: InkCanvas()\n  nameWithType: InkCanvas.InkCanvas()\n  fullName: System.Windows.Controls.InkCanvas.InkCanvas()\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingMode\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ActiveEditingMode\n  nameWithType: InkCanvas.ActiveEditingMode\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingMode\n- uid: System.Windows.Controls.InkCanvasEditingMode\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasEditingMode\n  nameWithType: InkCanvasEditingMode\n  fullName: System.Windows.Controls.InkCanvasEditingMode\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ActiveEditingModeChanged\n  nameWithType: InkCanvas.ActiveEditingModeChanged\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChanged\n- uid: System.Windows.RoutedEventHandler\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventHandler\n  nameWithType: RoutedEventHandler\n  fullName: System.Windows.RoutedEventHandler\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ActiveEditingModeChangedEvent\n  nameWithType: InkCanvas.ActiveEditingModeChangedEvent\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ActiveEditingModeProperty\n  nameWithType: InkCanvas.ActiveEditingModeProperty\n  fullName: System.Windows.Controls.InkCanvas.ActiveEditingModeProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ArrangeOverride(Size)\n  nameWithType: InkCanvas.ArrangeOverride(Size)\n  fullName: System.Windows.Controls.InkCanvas.ArrangeOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.InkCanvas.Background\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Background\n  nameWithType: InkCanvas.Background\n  fullName: System.Windows.Controls.InkCanvas.Background\n- uid: System.Windows.Media.Brush\n  parent: System.Windows.Media\n  isExternal: false\n  name: Brush\n  nameWithType: Brush\n  fullName: System.Windows.Media.Brush\n- uid: System.Windows.Controls.InkCanvas.BackgroundProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: BackgroundProperty\n  nameWithType: InkCanvas.BackgroundProperty\n  fullName: System.Windows.Controls.InkCanvas.BackgroundProperty\n- uid: System.Windows.Controls.InkCanvas.BottomProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: BottomProperty\n  nameWithType: InkCanvas.BottomProperty\n  fullName: System.Windows.Controls.InkCanvas.BottomProperty\n- uid: System.Windows.Controls.InkCanvas.CanPaste\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: CanPaste()\n  nameWithType: InkCanvas.CanPaste()\n  fullName: System.Windows.Controls.InkCanvas.CanPaste()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.InkCanvas.Children\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Children\n  nameWithType: InkCanvas.Children\n  fullName: System.Windows.Controls.InkCanvas.Children\n- uid: System.Windows.Controls.UIElementCollection\n  parent: System.Windows.Controls\n  isExternal: false\n  name: UIElementCollection\n  nameWithType: UIElementCollection\n  fullName: System.Windows.Controls.UIElementCollection\n- uid: System.Windows.Controls.InkCanvas.CopySelection\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: CopySelection()\n  nameWithType: InkCanvas.CopySelection()\n  fullName: System.Windows.Controls.InkCanvas.CopySelection()\n- uid: System.Windows.Controls.InkCanvas.CutSelection\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: CutSelection()\n  nameWithType: InkCanvas.CutSelection()\n  fullName: System.Windows.Controls.InkCanvas.CutSelection()\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DefaultDrawingAttributes\n  nameWithType: InkCanvas.DefaultDrawingAttributes\n  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes\n- uid: System.Windows.Ink.DrawingAttributes\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributes\n  nameWithType: DrawingAttributes\n  fullName: System.Windows.Ink.DrawingAttributes\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DefaultDrawingAttributesProperty\n  nameWithType: InkCanvas.DefaultDrawingAttributesProperty\n  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DefaultDrawingAttributesReplaced\n  nameWithType: InkCanvas.DefaultDrawingAttributesReplaced\n  fullName: System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced\n- uid: System.Windows.Ink.DrawingAttributesReplacedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributesReplacedEventHandler\n  nameWithType: DrawingAttributesReplacedEventHandler\n  fullName: System.Windows.Ink.DrawingAttributesReplacedEventHandler\n- uid: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DefaultStylusPointDescription\n  nameWithType: InkCanvas.DefaultStylusPointDescription\n  fullName: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription\n- uid: System.Windows.Input.StylusPointDescription\n  parent: System.Windows.Input\n  isExternal: false\n  name: StylusPointDescription\n  nameWithType: StylusPointDescription\n  fullName: System.Windows.Input.StylusPointDescription\n- uid: System.Windows.Controls.InkCanvas.DynamicRenderer\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DynamicRenderer\n  nameWithType: InkCanvas.DynamicRenderer\n  fullName: System.Windows.Controls.InkCanvas.DynamicRenderer\n- uid: System.Windows.Input.StylusPlugIns.DynamicRenderer\n  parent: System.Windows.Input.StylusPlugIns\n  isExternal: false\n  name: DynamicRenderer\n  nameWithType: DynamicRenderer\n  fullName: System.Windows.Input.StylusPlugIns.DynamicRenderer\n- uid: System.Windows.Controls.InkCanvas.EditingMode\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingMode\n  nameWithType: InkCanvas.EditingMode\n  fullName: System.Windows.Controls.InkCanvas.EditingMode\n- uid: System.Windows.Controls.InkCanvas.EditingModeChanged\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeChanged\n  nameWithType: InkCanvas.EditingModeChanged\n  fullName: System.Windows.Controls.InkCanvas.EditingModeChanged\n- uid: System.Windows.Controls.InkCanvas.EditingModeChangedEvent\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeChangedEvent\n  nameWithType: InkCanvas.EditingModeChangedEvent\n  fullName: System.Windows.Controls.InkCanvas.EditingModeChangedEvent\n- uid: System.Windows.Controls.InkCanvas.EditingModeInverted\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeInverted\n  nameWithType: InkCanvas.EditingModeInverted\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInverted\n- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeInvertedChanged\n  nameWithType: InkCanvas.EditingModeInvertedChanged\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChanged\n- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeInvertedChangedEvent\n  nameWithType: InkCanvas.EditingModeInvertedChangedEvent\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent\n- uid: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeInvertedProperty\n  nameWithType: InkCanvas.EditingModeInvertedProperty\n  fullName: System.Windows.Controls.InkCanvas.EditingModeInvertedProperty\n- uid: System.Windows.Controls.InkCanvas.EditingModeProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeProperty\n  nameWithType: InkCanvas.EditingModeProperty\n  fullName: System.Windows.Controls.InkCanvas.EditingModeProperty\n- uid: System.Windows.Controls.InkCanvas.EraserShape\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EraserShape\n  nameWithType: InkCanvas.EraserShape\n  fullName: System.Windows.Controls.InkCanvas.EraserShape\n- uid: System.Windows.Ink.StylusShape\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusShape\n  nameWithType: StylusShape\n  fullName: System.Windows.Ink.StylusShape\n- uid: System.Windows.Controls.InkCanvas.Gesture\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Gesture\n  nameWithType: InkCanvas.Gesture\n  fullName: System.Windows.Controls.InkCanvas.Gesture\n- uid: System.Windows.Controls.InkCanvasGestureEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasGestureEventHandler\n  nameWithType: InkCanvasGestureEventHandler\n  fullName: System.Windows.Controls.InkCanvasGestureEventHandler\n- uid: System.Windows.Controls.InkCanvas.GestureEvent\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GestureEvent\n  nameWithType: InkCanvas.GestureEvent\n  fullName: System.Windows.Controls.InkCanvas.GestureEvent\n- uid: System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetBottom(UIElement)\n  nameWithType: InkCanvas.GetBottom(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetBottom(UIElement)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Controls.InkCanvas.GetEnabledGestures\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetEnabledGestures()\n  nameWithType: InkCanvas.GetEnabledGestures()\n  fullName: System.Windows.Controls.InkCanvas.GetEnabledGestures()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ApplicationGesture>\n  nameWithType: ReadOnlyCollection<ApplicationGesture>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Ink.ApplicationGesture\n    name: ApplicationGesture\n    nameWithType: ApplicationGesture\n    fullName: ApplicationGesture\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetLeft(UIElement)\n  nameWithType: InkCanvas.GetLeft(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetLeft(UIElement)\n- uid: System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetRight(UIElement)\n  nameWithType: InkCanvas.GetRight(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetRight(UIElement)\n- uid: System.Windows.Controls.InkCanvas.GetSelectedElements\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetSelectedElements()\n  nameWithType: InkCanvas.GetSelectedElements()\n  fullName: System.Windows.Controls.InkCanvas.GetSelectedElements()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.UIElement}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<UIElement>\n  nameWithType: ReadOnlyCollection<UIElement>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.UIElement>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Windows.UIElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.UIElement\n    name: UIElement\n    nameWithType: UIElement\n    fullName: UIElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.InkCanvas.GetSelectedStrokes\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetSelectedStrokes()\n  nameWithType: InkCanvas.GetSelectedStrokes()\n  fullName: System.Windows.Controls.InkCanvas.GetSelectedStrokes()\n- uid: System.Windows.Ink.StrokeCollection\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n- uid: System.Windows.Controls.InkCanvas.GetSelectionBounds\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetSelectionBounds()\n  nameWithType: InkCanvas.GetSelectionBounds()\n  fullName: System.Windows.Controls.InkCanvas.GetSelectionBounds()\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetTop(UIElement)\n  nameWithType: InkCanvas.GetTop(UIElement)\n  fullName: System.Windows.Controls.InkCanvas.GetTop(UIElement)\n- uid: System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetVisualChild(Int32)\n  nameWithType: InkCanvas.GetVisualChild(Int32)\n  fullName: System.Windows.Controls.InkCanvas.GetVisualChild(Int32)\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: HitTestCore(PointHitTestParameters)\n  nameWithType: InkCanvas.HitTestCore(PointHitTestParameters)\n  fullName: System.Windows.Controls.InkCanvas.HitTestCore(PointHitTestParameters)\n- uid: System.Windows.Media.HitTestResult\n  parent: System.Windows.Media\n  isExternal: false\n  name: HitTestResult\n  nameWithType: HitTestResult\n  fullName: System.Windows.Media.HitTestResult\n- uid: System.Windows.Media.PointHitTestParameters\n  parent: System.Windows.Media\n  isExternal: false\n  name: PointHitTestParameters\n  nameWithType: PointHitTestParameters\n  fullName: System.Windows.Media.PointHitTestParameters\n- uid: System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: HitTestSelection(Point)\n  nameWithType: InkCanvas.HitTestSelection(Point)\n  fullName: System.Windows.Controls.InkCanvas.HitTestSelection(Point)\n- uid: System.Windows.Controls.InkCanvasSelectionHitResult\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasSelectionHitResult\n  nameWithType: InkCanvasSelectionHitResult\n  fullName: System.Windows.Controls.InkCanvasSelectionHitResult\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Controls.InkCanvas.InkPresenter\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: InkPresenter\n  nameWithType: InkCanvas.InkPresenter\n  fullName: System.Windows.Controls.InkCanvas.InkPresenter\n- uid: System.Windows.Controls.InkPresenter\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkPresenter\n  nameWithType: InkPresenter\n  fullName: System.Windows.Controls.InkPresenter\n- uid: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: IsGestureRecognizerAvailable\n  nameWithType: InkCanvas.IsGestureRecognizerAvailable\n  fullName: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable\n- uid: System.Windows.Controls.InkCanvas.LeftProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: LeftProperty\n  nameWithType: InkCanvas.LeftProperty\n  fullName: System.Windows.Controls.InkCanvas.LeftProperty\n- uid: System.Windows.Controls.InkCanvas.LogicalChildren\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: InkCanvas.LogicalChildren\n  fullName: System.Windows.Controls.InkCanvas.LogicalChildren\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: InkCanvas.MeasureOverride(Size)\n  fullName: System.Windows.Controls.InkCanvas.MeasureOverride(Size)\n- uid: System.Windows.Controls.InkCanvas.MoveEnabled\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: MoveEnabled\n  nameWithType: InkCanvas.MoveEnabled\n  fullName: System.Windows.Controls.InkCanvas.MoveEnabled\n- uid: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnActiveEditingModeChanged(RoutedEventArgs)\n  nameWithType: InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(RoutedEventArgs)\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: InkCanvas.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  nameWithType: InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(DrawingAttributesReplacedEventArgs)\n- uid: System.Windows.Ink.DrawingAttributesReplacedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: DrawingAttributesReplacedEventArgs\n  nameWithType: DrawingAttributesReplacedEventArgs\n  fullName: System.Windows.Ink.DrawingAttributesReplacedEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnEditingModeChanged(RoutedEventArgs)\n  nameWithType: InkCanvas.OnEditingModeChanged(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnEditingModeChanged(RoutedEventArgs)\n- uid: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnEditingModeInvertedChanged(RoutedEventArgs)\n  nameWithType: InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(RoutedEventArgs)\n- uid: System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnGesture(InkCanvasGestureEventArgs)\n  nameWithType: InkCanvas.OnGesture(InkCanvasGestureEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnGesture(InkCanvasGestureEventArgs)\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasGestureEventArgs\n  nameWithType: InkCanvasGestureEventArgs\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionChanged(EventArgs)\n  nameWithType: InkCanvas.OnSelectionChanged(EventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionChanging(InkCanvasSelectionChangingEventArgs)\n  nameWithType: InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionChanging(InkCanvasSelectionChangingEventArgs)\n- uid: System.Windows.Controls.InkCanvasSelectionChangingEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasSelectionChangingEventArgs\n  nameWithType: InkCanvasSelectionChangingEventArgs\n  fullName: System.Windows.Controls.InkCanvasSelectionChangingEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionMoved(EventArgs)\n  nameWithType: InkCanvas.OnSelectionMoved(EventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoved(EventArgs)\n- uid: System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionMoving(InkCanvasSelectionEditingEventArgs)\n  nameWithType: InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionMoving(InkCanvasSelectionEditingEventArgs)\n- uid: System.Windows.Controls.InkCanvasSelectionEditingEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasSelectionEditingEventArgs\n  nameWithType: InkCanvasSelectionEditingEventArgs\n  fullName: System.Windows.Controls.InkCanvasSelectionEditingEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionResized(EventArgs)\n  nameWithType: InkCanvas.OnSelectionResized(EventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionResized(EventArgs)\n- uid: System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionResizing(InkCanvasSelectionEditingEventArgs)\n  nameWithType: InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnSelectionResizing(InkCanvasSelectionEditingEventArgs)\n- uid: System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)\n  nameWithType: InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokeCollected(InkCanvasStrokeCollectedEventArgs)\n- uid: System.Windows.Controls.InkCanvasStrokeCollectedEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasStrokeCollectedEventArgs\n  nameWithType: InkCanvasStrokeCollectedEventArgs\n  fullName: System.Windows.Controls.InkCanvasStrokeCollectedEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokeErased(RoutedEventArgs)\n  nameWithType: InkCanvas.OnStrokeErased(RoutedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokeErased(RoutedEventArgs)\n- uid: System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokeErasing(InkCanvasStrokeErasingEventArgs)\n  nameWithType: InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokeErasing(InkCanvasStrokeErasingEventArgs)\n- uid: System.Windows.Controls.InkCanvasStrokeErasingEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasStrokeErasingEventArgs\n  nameWithType: InkCanvasStrokeErasingEventArgs\n  fullName: System.Windows.Controls.InkCanvasStrokeErasingEventArgs\n- uid: System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)\n  nameWithType: InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)\n  fullName: System.Windows.Controls.InkCanvas.OnStrokesReplaced(InkCanvasStrokesReplacedEventArgs)\n- uid: System.Windows.Controls.InkCanvasStrokesReplacedEventArgs\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasStrokesReplacedEventArgs\n  nameWithType: InkCanvasStrokesReplacedEventArgs\n  fullName: System.Windows.Controls.InkCanvasStrokesReplacedEventArgs\n- uid: System.Windows.Controls.InkCanvas.Paste\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Paste()\n  nameWithType: InkCanvas.Paste()\n  fullName: System.Windows.Controls.InkCanvas.Paste()\n- uid: System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Paste(Point)\n  nameWithType: InkCanvas.Paste(Point)\n  fullName: System.Windows.Controls.InkCanvas.Paste(Point)\n- uid: System.Windows.Controls.InkCanvas.PreferredPasteFormats\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: PreferredPasteFormats\n  nameWithType: InkCanvas.PreferredPasteFormats\n  fullName: System.Windows.Controls.InkCanvas.PreferredPasteFormats\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Controls.InkCanvasClipboardFormat}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<InkCanvasClipboardFormat>\n  nameWithType: IEnumerable<InkCanvasClipboardFormat>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Controls.InkCanvasClipboardFormat>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Controls.InkCanvasClipboardFormat>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Controls.InkCanvasClipboardFormat\n    name: InkCanvasClipboardFormat\n    nameWithType: InkCanvasClipboardFormat\n    fullName: InkCanvasClipboardFormat\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.InkCanvas.ResizeEnabled\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ResizeEnabled\n  nameWithType: InkCanvas.ResizeEnabled\n  fullName: System.Windows.Controls.InkCanvas.ResizeEnabled\n- uid: System.Windows.Controls.InkCanvas.RightProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: RightProperty\n  nameWithType: InkCanvas.RightProperty\n  fullName: System.Windows.Controls.InkCanvas.RightProperty\n- uid: System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Select(IEnumerable<UIElement>)\n  nameWithType: InkCanvas.Select(IEnumerable<UIElement>)\n  fullName: System.Windows.Controls.InkCanvas.Select(IEnumerable<UIElement>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.UIElement}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<UIElement>\n  nameWithType: IEnumerable<UIElement>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.UIElement>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.UIElement>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.UIElement\n    name: UIElement\n    nameWithType: UIElement\n    fullName: UIElement\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Select(StrokeCollection)\n  nameWithType: InkCanvas.Select(StrokeCollection)\n  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection)\n- uid: System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Select(StrokeCollection,IEnumerable<UIElement>)\n  nameWithType: InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)\n  fullName: System.Windows.Controls.InkCanvas.Select(StrokeCollection,IEnumerable<UIElement>)\n- uid: System.Windows.Controls.InkCanvas.SelectionChanged\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SelectionChanged\n  nameWithType: InkCanvas.SelectionChanged\n  fullName: System.Windows.Controls.InkCanvas.SelectionChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Controls.InkCanvas.SelectionChanging\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SelectionChanging\n  nameWithType: InkCanvas.SelectionChanging\n  fullName: System.Windows.Controls.InkCanvas.SelectionChanging\n- uid: System.Windows.Controls.InkCanvasSelectionChangingEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasSelectionChangingEventHandler\n  nameWithType: InkCanvasSelectionChangingEventHandler\n  fullName: System.Windows.Controls.InkCanvasSelectionChangingEventHandler\n- uid: System.Windows.Controls.InkCanvas.SelectionMoved\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SelectionMoved\n  nameWithType: InkCanvas.SelectionMoved\n  fullName: System.Windows.Controls.InkCanvas.SelectionMoved\n- uid: System.Windows.Controls.InkCanvas.SelectionMoving\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SelectionMoving\n  nameWithType: InkCanvas.SelectionMoving\n  fullName: System.Windows.Controls.InkCanvas.SelectionMoving\n- uid: System.Windows.Controls.InkCanvasSelectionEditingEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasSelectionEditingEventHandler\n  nameWithType: InkCanvasSelectionEditingEventHandler\n  fullName: System.Windows.Controls.InkCanvasSelectionEditingEventHandler\n- uid: System.Windows.Controls.InkCanvas.SelectionResized\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SelectionResized\n  nameWithType: InkCanvas.SelectionResized\n  fullName: System.Windows.Controls.InkCanvas.SelectionResized\n- uid: System.Windows.Controls.InkCanvas.SelectionResizing\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SelectionResizing\n  nameWithType: InkCanvas.SelectionResizing\n  fullName: System.Windows.Controls.InkCanvas.SelectionResizing\n- uid: System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetBottom(UIElement,Double)\n  nameWithType: InkCanvas.SetBottom(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetBottom(UIElement,Double)\n- uid: System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)\n  nameWithType: InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)\n  fullName: System.Windows.Controls.InkCanvas.SetEnabledGestures(IEnumerable<ApplicationGesture>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<ApplicationGesture>\n  nameWithType: IEnumerable<ApplicationGesture>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Ink.ApplicationGesture>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Ink.ApplicationGesture\n    name: ApplicationGesture\n    nameWithType: ApplicationGesture\n    fullName: ApplicationGesture\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetLeft(UIElement,Double)\n  nameWithType: InkCanvas.SetLeft(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetLeft(UIElement,Double)\n- uid: System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetRight(UIElement,Double)\n  nameWithType: InkCanvas.SetRight(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetRight(UIElement,Double)\n- uid: System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetTop(UIElement,Double)\n  nameWithType: InkCanvas.SetTop(UIElement,Double)\n  fullName: System.Windows.Controls.InkCanvas.SetTop(UIElement,Double)\n- uid: System.Windows.Controls.InkCanvas.StrokeCollected\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokeCollected\n  nameWithType: InkCanvas.StrokeCollected\n  fullName: System.Windows.Controls.InkCanvas.StrokeCollected\n- uid: System.Windows.Controls.InkCanvasStrokeCollectedEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasStrokeCollectedEventHandler\n  nameWithType: InkCanvasStrokeCollectedEventHandler\n  fullName: System.Windows.Controls.InkCanvasStrokeCollectedEventHandler\n- uid: System.Windows.Controls.InkCanvas.StrokeCollectedEvent\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokeCollectedEvent\n  nameWithType: InkCanvas.StrokeCollectedEvent\n  fullName: System.Windows.Controls.InkCanvas.StrokeCollectedEvent\n- uid: System.Windows.Controls.InkCanvas.StrokeErased\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokeErased\n  nameWithType: InkCanvas.StrokeErased\n  fullName: System.Windows.Controls.InkCanvas.StrokeErased\n- uid: System.Windows.Controls.InkCanvas.StrokeErasedEvent\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokeErasedEvent\n  nameWithType: InkCanvas.StrokeErasedEvent\n  fullName: System.Windows.Controls.InkCanvas.StrokeErasedEvent\n- uid: System.Windows.Controls.InkCanvas.StrokeErasing\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokeErasing\n  nameWithType: InkCanvas.StrokeErasing\n  fullName: System.Windows.Controls.InkCanvas.StrokeErasing\n- uid: System.Windows.Controls.InkCanvasStrokeErasingEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasStrokeErasingEventHandler\n  nameWithType: InkCanvasStrokeErasingEventHandler\n  fullName: System.Windows.Controls.InkCanvasStrokeErasingEventHandler\n- uid: System.Windows.Controls.InkCanvas.Strokes\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Strokes\n  nameWithType: InkCanvas.Strokes\n  fullName: System.Windows.Controls.InkCanvas.Strokes\n- uid: System.Windows.Controls.InkCanvas.StrokesProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokesProperty\n  nameWithType: InkCanvas.StrokesProperty\n  fullName: System.Windows.Controls.InkCanvas.StrokesProperty\n- uid: System.Windows.Controls.InkCanvas.StrokesReplaced\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: StrokesReplaced\n  nameWithType: InkCanvas.StrokesReplaced\n  fullName: System.Windows.Controls.InkCanvas.StrokesReplaced\n- uid: System.Windows.Controls.InkCanvasStrokesReplacedEventHandler\n  parent: System.Windows.Controls\n  isExternal: false\n  name: InkCanvasStrokesReplacedEventHandler\n  nameWithType: InkCanvasStrokesReplacedEventHandler\n  fullName: System.Windows.Controls.InkCanvasStrokesReplacedEventHandler\n- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.InkCanvas.System.Windows.Markup.IAddChild.AddText(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.InkCanvas.TopProperty\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: TopProperty\n  nameWithType: InkCanvas.TopProperty\n  fullName: System.Windows.Controls.InkCanvas.TopProperty\n- uid: System.Windows.Controls.InkCanvas.UseCustomCursor\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: UseCustomCursor\n  nameWithType: InkCanvas.UseCustomCursor\n  fullName: System.Windows.Controls.InkCanvas.UseCustomCursor\n- uid: System.Windows.Controls.InkCanvas.VisualChildrenCount\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: VisualChildrenCount\n  nameWithType: InkCanvas.VisualChildrenCount\n  fullName: System.Windows.Controls.InkCanvas.VisualChildrenCount\n- uid: System.Windows.Controls.InkCanvas.#ctor*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: InkCanvas\n  nameWithType: InkCanvas.InkCanvas\n- uid: System.Windows.Controls.InkCanvas.ActiveEditingMode*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ActiveEditingMode\n  nameWithType: InkCanvas.ActiveEditingMode\n- uid: System.Windows.Controls.InkCanvas.ArrangeOverride*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ArrangeOverride\n  nameWithType: InkCanvas.ArrangeOverride\n- uid: System.Windows.Controls.InkCanvas.Background*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Background\n  nameWithType: InkCanvas.Background\n- uid: System.Windows.Controls.InkCanvas.CanPaste*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: CanPaste\n  nameWithType: InkCanvas.CanPaste\n- uid: System.Windows.Controls.InkCanvas.Children*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Children\n  nameWithType: InkCanvas.Children\n- uid: System.Windows.Controls.InkCanvas.CopySelection*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: CopySelection\n  nameWithType: InkCanvas.CopySelection\n- uid: System.Windows.Controls.InkCanvas.CutSelection*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: CutSelection\n  nameWithType: InkCanvas.CutSelection\n- uid: System.Windows.Controls.InkCanvas.DefaultDrawingAttributes*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DefaultDrawingAttributes\n  nameWithType: InkCanvas.DefaultDrawingAttributes\n- uid: System.Windows.Controls.InkCanvas.DefaultStylusPointDescription*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DefaultStylusPointDescription\n  nameWithType: InkCanvas.DefaultStylusPointDescription\n- uid: System.Windows.Controls.InkCanvas.DynamicRenderer*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: DynamicRenderer\n  nameWithType: InkCanvas.DynamicRenderer\n- uid: System.Windows.Controls.InkCanvas.EditingMode*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingMode\n  nameWithType: InkCanvas.EditingMode\n- uid: System.Windows.Controls.InkCanvas.EditingModeInverted*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EditingModeInverted\n  nameWithType: InkCanvas.EditingModeInverted\n- uid: System.Windows.Controls.InkCanvas.EraserShape*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: EraserShape\n  nameWithType: InkCanvas.EraserShape\n- uid: System.Windows.Controls.InkCanvas.GetBottom*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetBottom\n  nameWithType: InkCanvas.GetBottom\n- uid: System.Windows.Controls.InkCanvas.GetEnabledGestures*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetEnabledGestures\n  nameWithType: InkCanvas.GetEnabledGestures\n- uid: System.Windows.Controls.InkCanvas.GetLeft*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetLeft\n  nameWithType: InkCanvas.GetLeft\n- uid: System.Windows.Controls.InkCanvas.GetRight*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetRight\n  nameWithType: InkCanvas.GetRight\n- uid: System.Windows.Controls.InkCanvas.GetSelectedElements*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetSelectedElements\n  nameWithType: InkCanvas.GetSelectedElements\n- uid: System.Windows.Controls.InkCanvas.GetSelectedStrokes*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetSelectedStrokes\n  nameWithType: InkCanvas.GetSelectedStrokes\n- uid: System.Windows.Controls.InkCanvas.GetSelectionBounds*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetSelectionBounds\n  nameWithType: InkCanvas.GetSelectionBounds\n- uid: System.Windows.Controls.InkCanvas.GetTop*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetTop\n  nameWithType: InkCanvas.GetTop\n- uid: System.Windows.Controls.InkCanvas.GetVisualChild*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: GetVisualChild\n  nameWithType: InkCanvas.GetVisualChild\n- uid: System.Windows.Controls.InkCanvas.HitTestCore*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: HitTestCore\n  nameWithType: InkCanvas.HitTestCore\n- uid: System.Windows.Controls.InkCanvas.HitTestSelection*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: HitTestSelection\n  nameWithType: InkCanvas.HitTestSelection\n- uid: System.Windows.Controls.InkCanvas.InkPresenter*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: InkPresenter\n  nameWithType: InkCanvas.InkPresenter\n- uid: System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: IsGestureRecognizerAvailable\n  nameWithType: InkCanvas.IsGestureRecognizerAvailable\n- uid: System.Windows.Controls.InkCanvas.LogicalChildren*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: InkCanvas.LogicalChildren\n- uid: System.Windows.Controls.InkCanvas.MeasureOverride*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: InkCanvas.MeasureOverride\n- uid: System.Windows.Controls.InkCanvas.MoveEnabled*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: MoveEnabled\n  nameWithType: InkCanvas.MoveEnabled\n- uid: System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnActiveEditingModeChanged\n  nameWithType: InkCanvas.OnActiveEditingModeChanged\n- uid: System.Windows.Controls.InkCanvas.OnCreateAutomationPeer*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: InkCanvas.OnCreateAutomationPeer\n- uid: System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnDefaultDrawingAttributesReplaced\n  nameWithType: InkCanvas.OnDefaultDrawingAttributesReplaced\n- uid: System.Windows.Controls.InkCanvas.OnEditingModeChanged*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnEditingModeChanged\n  nameWithType: InkCanvas.OnEditingModeChanged\n- uid: System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnEditingModeInvertedChanged\n  nameWithType: InkCanvas.OnEditingModeInvertedChanged\n- uid: System.Windows.Controls.InkCanvas.OnGesture*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnGesture\n  nameWithType: InkCanvas.OnGesture\n- uid: System.Windows.Controls.InkCanvas.OnPropertyChanged*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: InkCanvas.OnPropertyChanged\n- uid: System.Windows.Controls.InkCanvas.OnSelectionChanged*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionChanged\n  nameWithType: InkCanvas.OnSelectionChanged\n- uid: System.Windows.Controls.InkCanvas.OnSelectionChanging*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionChanging\n  nameWithType: InkCanvas.OnSelectionChanging\n- uid: System.Windows.Controls.InkCanvas.OnSelectionMoved*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionMoved\n  nameWithType: InkCanvas.OnSelectionMoved\n- uid: System.Windows.Controls.InkCanvas.OnSelectionMoving*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionMoving\n  nameWithType: InkCanvas.OnSelectionMoving\n- uid: System.Windows.Controls.InkCanvas.OnSelectionResized*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionResized\n  nameWithType: InkCanvas.OnSelectionResized\n- uid: System.Windows.Controls.InkCanvas.OnSelectionResizing*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnSelectionResizing\n  nameWithType: InkCanvas.OnSelectionResizing\n- uid: System.Windows.Controls.InkCanvas.OnStrokeCollected*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokeCollected\n  nameWithType: InkCanvas.OnStrokeCollected\n- uid: System.Windows.Controls.InkCanvas.OnStrokeErased*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokeErased\n  nameWithType: InkCanvas.OnStrokeErased\n- uid: System.Windows.Controls.InkCanvas.OnStrokeErasing*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokeErasing\n  nameWithType: InkCanvas.OnStrokeErasing\n- uid: System.Windows.Controls.InkCanvas.OnStrokesReplaced*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: OnStrokesReplaced\n  nameWithType: InkCanvas.OnStrokesReplaced\n- uid: System.Windows.Controls.InkCanvas.Paste*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Paste\n  nameWithType: InkCanvas.Paste\n- uid: System.Windows.Controls.InkCanvas.PreferredPasteFormats*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: PreferredPasteFormats\n  nameWithType: InkCanvas.PreferredPasteFormats\n- uid: System.Windows.Controls.InkCanvas.ResizeEnabled*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: ResizeEnabled\n  nameWithType: InkCanvas.ResizeEnabled\n- uid: System.Windows.Controls.InkCanvas.Select*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Select\n  nameWithType: InkCanvas.Select\n- uid: System.Windows.Controls.InkCanvas.SetBottom*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetBottom\n  nameWithType: InkCanvas.SetBottom\n- uid: System.Windows.Controls.InkCanvas.SetEnabledGestures*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetEnabledGestures\n  nameWithType: InkCanvas.SetEnabledGestures\n- uid: System.Windows.Controls.InkCanvas.SetLeft*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetLeft\n  nameWithType: InkCanvas.SetLeft\n- uid: System.Windows.Controls.InkCanvas.SetRight*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetRight\n  nameWithType: InkCanvas.SetRight\n- uid: System.Windows.Controls.InkCanvas.SetTop*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: SetTop\n  nameWithType: InkCanvas.SetTop\n- uid: System.Windows.Controls.InkCanvas.Strokes*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: Strokes\n  nameWithType: InkCanvas.Strokes\n- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild\n  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddChild\n- uid: System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText\n  nameWithType: InkCanvas.System.Windows.Markup.IAddChild.AddText\n- uid: System.Windows.Controls.InkCanvas.UseCustomCursor*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: UseCustomCursor\n  nameWithType: InkCanvas.UseCustomCursor\n- uid: System.Windows.Controls.InkCanvas.VisualChildrenCount*\n  parent: System.Windows.Controls.InkCanvas\n  isExternal: false\n  name: VisualChildrenCount\n  nameWithType: InkCanvas.VisualChildrenCount\n"}