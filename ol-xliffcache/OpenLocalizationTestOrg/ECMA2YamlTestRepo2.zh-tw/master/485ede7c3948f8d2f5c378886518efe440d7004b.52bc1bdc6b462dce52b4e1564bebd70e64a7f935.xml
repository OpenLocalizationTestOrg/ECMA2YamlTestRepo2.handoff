{"nodes":[{"pos":[4062,4113],"content":"Represents a collection of security token handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of security token handlers.","pos":[0,51]}]},{"pos":[4914,5034],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class."},{"pos":[5046,5095],"content":"The new collection does not contain any handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new collection does not contain any handlers.","pos":[0,49]}]},{"pos":[6088,6242],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified token handlers.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class with the specified token handlers."},{"pos":[6254,6426],"content":"Do not use this constructor to attempt to clone an instance of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;class, use the <bpt id=\"p1\">**</bpt>Clone<ept id=\"p1\">**</ept> method instead.","needQuote":true,"needEscape":true,"source":"Do not use this constructor to attempt to clone an instance of the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>class, use the **Clone** method instead."},{"pos":[6744,6805],"content":"The token handlers with which to initialize the new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token handlers with which to initialize the new instance.","pos":[0,61]}]},{"pos":[7660,7813],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified configuration.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class with the specified configuration."},{"pos":[7825,7874],"content":"The new collection does not contain any handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new collection does not contain any handlers.","pos":[0,49]}]},{"pos":[8148,8204],"content":"The base configuration to associate with the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base configuration to associate with the collection.","pos":[0,56]}]},{"pos":[9339,9511],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified token handlers and configuration.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class with the specified token handlers and configuration."},{"pos":[9523,9695],"content":"Do not use this constructor to attempt to clone an instance of the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection&gt;class, use the <bpt id=\"p1\">**</bpt>Clone<ept id=\"p1\">**</ept> method instead.","needQuote":true,"needEscape":true,"source":"Do not use this constructor to attempt to clone an instance of the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>class, use the **Clone** method instead."},{"pos":[10090,10151],"content":"The token handlers with which to initialize the new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token handlers with which to initialize the new instance.","pos":[0,61]}]},{"pos":[10269,10325],"content":"The base configuration to associate with the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base configuration to associate with the collection.","pos":[0,56]}]},{"pos":[11068,11271],"content":"Adds the specified token handler to this collection. If a handler with the same token type identifier as the specified handler already exists in the collection, it is replaced with the specified handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the specified token handler to this collection. If a handler with the same token type identifier as the specified handler already exists in the collection, it is replaced with the specified handler.","pos":[0,203],"nodes":[{"content":"Adds the specified token handler to this collection.","pos":[0,52]},{"content":"If a handler with the same token type identifier as the specified handler already exists in the collection, it is replaced with the specified handler.","pos":[53,203]}]}]},{"pos":[11494,11537],"content":"The token handler to add to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token handler to add to the collection.","pos":[0,43]}]},{"pos":[12268,12488],"content":"Returns a value that indicates whether the specified key identifier clause can be read by one of the handlers in this collection or by the base <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.WSSecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified key identifier clause can be read by one of the handlers in this collection or by the base <xref href=\"System.ServiceModel.Security.WSSecurityTokenSerializer\"></xref>."},{"pos":[12667,12748],"content":"An XML reader positioned at the start element. The reader should not be advanced.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element. The reader should not be advanced.","pos":[0,81],"nodes":[{"content":"An XML reader positioned at the start element.","pos":[0,46]},{"content":"The reader should not be advanced.","pos":[47,81]}]}]},{"pos":[12807,12983],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier clause can be read; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause can be read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13748,13967],"content":"Returns a value that indicates whether the specified key identifier clause can be read by one of the handlers in the collection or by the base <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.WSSecurityTokenSerializer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether the specified key identifier clause can be read by one of the handlers in the collection or by the base <xref href=\"System.ServiceModel.Security.WSSecurityTokenSerializer\"></xref>."},{"pos":[14161,14242],"content":"An XML reader positioned at the start element. The reader should not be advanced.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element. The reader should not be advanced.","pos":[0,81],"nodes":[{"content":"An XML reader positioned at the start element.","pos":[0,46]},{"content":"The reader should not be advanced.","pos":[47,81]}]}]},{"pos":[14301,14477],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key identifier clause can be read; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause can be read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15133,15273],"content":"Returns a value that indicates whether the specified string representation of a token can be read by one of the handlers in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified string representation of a token can be read by one of the handlers in this collection.","pos":[0,140]}]},{"pos":[15285,15569],"content":"The method invokes the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName> method on the token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) in the collection to determine whether the token can be read.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method invokes the &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName&gt; method on the token handlers (&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler&gt;) in the collection to determine whether the token can be read.","pos":[0,284],"source":"The method invokes the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName> method on the token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) in the collection to determine whether the token can be read."}]},{"pos":[15723,15757],"content":"The token represented as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token represented as a string.","pos":[0,34]}]},{"pos":[15816,16028],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the collection contains a token handler that can read the specified token; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains a token handler that can read the specified token; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16230,16338],"content":"<ph id=\"ph1\">&lt;code&gt;tokenString&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or an empty string.","needQuote":true,"needEscape":true,"source":"<code>tokenString</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."},{"pos":[16897,17010],"content":"Returns a value that indicates whether the specified token can be read by one of the handlers in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified token can be read by one of the handlers in this collection.","pos":[0,113]}]},{"pos":[17175,17256],"content":"An XML reader positioned at the start element. The reader should not be advanced.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element. The reader should not be advanced.","pos":[0,81],"nodes":[{"content":"An XML reader positioned at the start element.","pos":[0,46]},{"content":"The reader should not be advanced.","pos":[47,81]}]}]},{"pos":[17315,17475],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the token can be read; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token can be read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18195,18314],"content":"Returns a value that indicates whether the specified token can be serialized by one of the handlers in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value that indicates whether the specified token can be serialized by one of the handlers in this collection.","pos":[0,119]}]},{"pos":[18520,18556],"content":"The security token to be serialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token to be serialized.","pos":[0,36]}]},{"pos":[18615,18804],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the token can be serialized by one of the handlers; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token can be serialized by one of the handlers; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[19385,19470],"content":"Clears all of the handlers from this collection. (Override of the base class method.)","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears all of the handlers from this collection. (Override of the base class method.)","pos":[0,85],"nodes":[{"content":"Clears all of the handlers from this collection.","pos":[0,48]},{"content":"(Override of the base class method.)","pos":[49,85]}]}]},{"pos":[20140,20220],"content":"Gets and sets the base configuration for this security token handler collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets and sets the base configuration for this security token handler collection.","pos":[0,80]}]},{"pos":[20441,20492],"content":"The configuration for the token handler collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration for the token handler collection.","pos":[0,51]}]},{"pos":[21238,21468],"content":"Creates a system default collection of basic security token handlers, each of which has the system default configuration. The token handlers in this collection must be configured with service specific data before they can be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a system default collection of basic security token handlers, each of which has the system default configuration. The token handlers in this collection must be configured with service specific data before they can be used.","pos":[0,230],"nodes":[{"content":"Creates a system default collection of basic security token handlers, each of which has the system default configuration.","pos":[0,121]},{"content":"The token handlers in this collection must be configured with service specific data before they can be used.","pos":[122,230]}]}]},{"pos":[21734,21827],"content":"A security token handler collection that contains the default, basic security token handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security token handler collection that contains the default, basic security token handlers.","pos":[0,93]}]},{"pos":[22828,23132],"content":"Creates a system default collection of basic security token handlers and associates the specified configuration with the new collection. Each of the handlers has the system default configuration. The token handlers in this collection must be configured with service specific data before they can be used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a system default collection of basic security token handlers and associates the specified configuration with the new collection. Each of the handlers has the system default configuration. The token handlers in this collection must be configured with service specific data before they can be used.","pos":[0,304],"nodes":[{"content":"Creates a system default collection of basic security token handlers and associates the specified configuration with the new collection.","pos":[0,136]},{"content":"Each of the handlers has the system default configuration.","pos":[137,195]},{"content":"The token handlers in this collection must be configured with service specific data before they can be used.","pos":[196,304]}]}]},{"pos":[23485,23544],"content":"The configuration to associate with the handler collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The configuration to associate with the handler collection.","pos":[0,59]}]},{"pos":[23647,23740],"content":"A security token handler collection that contains the default, basic security token handlers.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security token handler collection that contains the default, basic security token handlers.","pos":[0,93]}]},{"pos":[24531,24583],"content":"Creates a token from the specified token descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a token from the specified token descriptor.","pos":[0,52]}]},{"pos":[24864,24996],"content":"The token descriptor from which the token is to be created. Properties of the token descriptor are set before this method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token descriptor from which the token is to be created. Properties of the token descriptor are set before this method is called.","pos":[0,132],"nodes":[{"content":"The token descriptor from which the token is to be created.","pos":[0,59]},{"content":"Properties of the token descriptor are set before this method is called.","pos":[60,132]}]}]},{"pos":[25082,25151],"content":"A security token that matches the properties of the token descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security token that matches the properties of the token descriptor.","pos":[0,69]}]},{"pos":[25934,26049],"content":"Inserts the specified token handler in this collection at the specified index. (Override of the base class method.)","needQuote":true,"needEscape":true,"nodes":[{"content":"Inserts the specified token handler in this collection at the specified index. (Override of the base class method.)","pos":[0,115],"nodes":[{"content":"Inserts the specified token handler in this collection at the specified index.","pos":[0,78]},{"content":"(Override of the base class method.)","pos":[79,115]}]}]},{"pos":[26252,26313],"content":"The zero-based index at which the handler should be inserted.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index at which the handler should be inserted.","pos":[0,61]}]},{"pos":[26409,26437],"content":"The token handler to insert.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token handler to insert.","pos":[0,28]}]},{"pos":[27112,27199],"content":"Gets a token handler from this collection that can handle the specified security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a token handler from this collection that can handle the specified security token.","pos":[0,87]}]},{"pos":[27447,27498],"content":"The token for which the handler should be returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token for which the handler should be returned.","pos":[0,51]}]},{"pos":[27591,27643],"content":"A token handler that can handle the specified token.","needQuote":true,"needEscape":true,"nodes":[{"content":"A token handler that can handle the specified token.","pos":[0,52]}]},{"pos":[28235,28323],"content":"Gets a token handler from this collection that can handle the specified type identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a token handler from this collection that can handle the specified type identifier.","pos":[0,88]}]},{"pos":[28536,28573],"content":"A URI that identifies the token type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A URI that identifies the token type.","pos":[0,37]}]},{"pos":[28666,28754],"content":"A token handler that can handle tokens that correspond to the specified type identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"A token handler that can handle tokens that correspond to the specified type identifier.","pos":[0,88]}]},{"pos":[29336,29415],"content":"Gets the handler from this collection that can handle the specified token type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the handler from this collection that can handle the specified token type.","pos":[0,79]}]},{"pos":[29604,29640],"content":"The type of the token to be handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the token to be handled.","pos":[0,36]}]},{"pos":[29733,29794],"content":"A token handler that can handle tokens of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A token handler that can handle tokens of the specified type.","pos":[0,61]}]},{"pos":[30502,30569],"content":"Deserializes a key identifier clause from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes a key identifier clause from the specified XML reader.","pos":[0,67]}]},{"pos":[30796,30903],"content":"An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.","pos":[0,107]}]},{"pos":[31003,31055],"content":"The key identifier clause deserialized from the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause deserialized from the XML.","pos":[0,52]}]},{"pos":[31802,31869],"content":"Deserializes a key identifier clause from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes a key identifier clause from the specified XML reader.","pos":[0,67]}]},{"pos":[32111,32218],"content":"An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.","pos":[0,107]}]},{"pos":[32318,32370],"content":"The key identifier clause deserialized from the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause deserialized from the XML.","pos":[0,52]}]},{"pos":[33008,33064],"content":"Deserializes a security token from the specified string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes a security token from the specified string.","pos":[0,56]}]},{"pos":[33252,33299],"content":"The string from which to deserialize the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string from which to deserialize the token.","pos":[0,47]}]},{"pos":[33385,33443],"content":"The token that was deserialized from the specified string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token that was deserialized from the specified string.","pos":[0,58]}]},{"pos":[34086,34146],"content":"Deserializes a security token from the specified XML reader.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes a security token from the specified XML reader.","pos":[0,60]}]},{"pos":[34345,34404],"content":"An XML reader positioned at the start element of the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the token.","pos":[0,59]}]},{"pos":[34490,34535],"content":"The security token deserialized from the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The security token deserialized from the XML.","pos":[0,45]}]},{"pos":[35155,35256],"content":"Removes the handler at the specified index from this collection. (Override of the base class method.)","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the handler at the specified index from this collection. (Override of the base class method.)","pos":[0,101],"nodes":[{"content":"Removes the handler at the specified index from this collection.","pos":[0,64]},{"content":"(Override of the base class method.)","pos":[65,101]}]}]},{"pos":[35404,35450],"content":"The zero-based index of the handler to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the handler to remove.","pos":[0,46]}]},{"pos":[36217,36312],"content":"Replaces the token handler at the specified index in the collection with the specified handler.","needQuote":true,"needEscape":true,"nodes":[{"content":"Replaces the token handler at the specified index in the collection with the specified handler.","pos":[0,95]}]},{"pos":[36512,36559],"content":"The zero-based index of the element to replace.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the element to replace.","pos":[0,47]}]},{"pos":[36655,36716],"content":"The new token handler for the element at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new token handler for the element at the specified index.","pos":[0,61]}]},{"pos":[37337,37430],"content":"Gets a list of the type identifiers of the tokens handled by the handlers in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of the type identifiers of the tokens handled by the handlers in this collection.","pos":[0,93]}]},{"pos":[37635,37668],"content":"The list of type identifier URIs.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of type identifier URIs.","pos":[0,33]}]},{"pos":[38252,38330],"content":"Gets a list of the types of the tokens handled by handlers in this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of the types of the tokens handled by handlers in this collection.","pos":[0,78]}]},{"pos":[38521,38539],"content":"The list of types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of types.","pos":[0,18]}]},{"pos":[39257,39296],"content":"Validates the specified security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified security token.","pos":[0,39]}]},{"pos":[39586,39608],"content":"The token to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to validate.","pos":[0,22]}]},{"pos":[39741,39788],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[40706,40760],"content":"Serializes the specified key identifier clause to XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified key identifier clause to XML.","pos":[0,54]}]},{"pos":[41014,41029],"content":"The XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer.","pos":[0,15]}]},{"pos":[41147,41186],"content":"The key identifier clause to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to serialize.","pos":[0,39]}]},{"pos":[42135,42189],"content":"Serializes the specified key identifier clause to XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified key identifier clause to XML.","pos":[0,54]}]},{"pos":[42458,42473],"content":"The XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer.","pos":[0,15]}]},{"pos":[42591,42630],"content":"The key identifier clause to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier clause to serialize.","pos":[0,39]}]},{"pos":[43351,43403],"content":"Serializes the specified security token to a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified security token to a string.","pos":[0,52]}]},{"pos":[43608,43631],"content":"The token to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to serialize.","pos":[0,23]}]},{"pos":[43689,43726],"content":"The string serialized from the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string serialized from the token.","pos":[0,37]}]},{"pos":[43926,44009],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[44120,44205],"content":"The collection does not contain a handler capable of serializing the specified token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not contain a handler capable of serializing the specified token.","pos":[0,85]}]},{"pos":[44880,44927],"content":"Serializes the specified security token to XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified security token to XML.","pos":[0,47]}]},{"pos":[45139,45154],"content":"The XML writer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer.","pos":[0,15]}]},{"pos":[45244,45267],"content":"The token to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to serialize.","pos":[0,23]}]},{"pos":[45468,45669],"content":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,83],"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,185],"source":"       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[45781,45866],"content":"The collection does not contain a handler capable of serializing the specified token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection does not contain a handler capable of serializing the specified token.","pos":[0,85]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  id: SecurityTokenHandlerCollection\n  children:\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollection\n  nameWithType: SecurityTokenHandlerCollection\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  type: Class\n  summary: Represents a collection of security token handlers.\n  syntax:\n    content: 'public class SecurityTokenHandlerCollection : System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.SecurityTokenHandler>'\n  inheritance:\n  - System.Collections.ObjectModel.Collection`1\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollection()\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class.\n  remarks: The new collection does not contain any handlers.\n  syntax:\n    content: public SecurityTokenHandlerCollection ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})'\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class with the specified token handlers.\n  remarks: Do not use this constructor to attempt to clone an instance of the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>class, use the **Clone** method instead.\n  syntax:\n    content: public SecurityTokenHandlerCollection (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler> handlers);\n    parameters:\n    - id: handlers\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}\n      description: The token handlers with which to initialize the new instance.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)'\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class with the specified configuration.\n  remarks: The new collection does not contain any handlers.\n  syntax:\n    content: public SecurityTokenHandlerCollection (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);\n    parameters:\n    - id: configuration\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The base configuration to associate with the collection.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)'\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerCollection\"></xref> class with the specified token handlers and configuration.\n  remarks: Do not use this constructor to attempt to clone an instance of the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>class, use the **Clone** method instead.\n  syntax:\n    content: public SecurityTokenHandlerCollection (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler> handlers, System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);\n    parameters:\n    - id: handlers\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}\n      description: The token handlers with which to initialize the new instance.\n    - id: configuration\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The base configuration to associate with the collection.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)\n  id: AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: AddOrReplace(SecurityTokenHandler)\n  nameWithType: SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Adds the specified token handler to this collection. If a handler with the same token type identifier as the specified handler already exists in the collection, it is replaced with the specified handler.\n  syntax:\n    content: public void AddOrReplace (System.IdentityModel.Tokens.SecurityTokenHandler handler);\n    parameters:\n    - id: handler\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: The token handler to add to the collection.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified key identifier clause can be read by one of the handlers in this collection or by the base <xref href=\"System.ServiceModel.Security.WSSecurityTokenSerializer\"></xref>.\n  syntax:\n    content: public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause can be read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClauseCore(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified key identifier clause can be read by one of the handlers in the collection or by the base <xref href=\"System.ServiceModel.Security.WSSecurityTokenSerializer\"></xref>.\n  syntax:\n    content: protected virtual bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key identifier clause can be read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)\n  id: CanReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CanReadToken(String)\n  nameWithType: SecurityTokenHandlerCollection.CanReadToken(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified string representation of a token can be read by one of the handlers in this collection.\n  remarks: The method invokes the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName> method on the token handlers (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) in the collection to determine whether the token can be read.\n  syntax:\n    content: public bool CanReadToken (string tokenString);\n    parameters:\n    - id: tokenString\n      type: System.String\n      description: The token represented as a string.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the collection contains a token handler that can read the specified token; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>tokenString</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified token can be read by one of the handlers in this collection.\n  syntax:\n    content: public bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token can be read; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)\n  id: CanWriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CanWriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified token can be serialized by one of the handlers in this collection.\n  syntax:\n    content: public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token to be serialized.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the token can be serialized by one of the handlers; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems\n  id: ClearItems\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: ClearItems()\n  nameWithType: SecurityTokenHandlerCollection.ClearItems()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Clears all of the handlers from this collection. (Override of the base class method.)\n  syntax:\n    content: protected override void ClearItems ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration\n  id: Configuration\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: Configuration\n  nameWithType: SecurityTokenHandlerCollection.Configuration\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets and sets the base configuration for this security token handler collection.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The configuration for the token handler collection.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection\n  id: CreateDefaultSecurityTokenHandlerCollection\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CreateDefaultSecurityTokenHandlerCollection()\n  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a system default collection of basic security token handlers, each of which has the system default configuration. The token handlers in this collection must be configured with service specific data before they can be used.\n  syntax:\n    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollection CreateDefaultSecurityTokenHandlerCollection ();\n    parameters: []\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n      description: A security token handler collection that contains the default, basic security token handlers.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  id: CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a system default collection of basic security token handlers and associates the specified configuration with the new collection. Each of the handlers has the system default configuration. The token handlers in this collection must be configured with service specific data before they can be used.\n  syntax:\n    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollection CreateDefaultSecurityTokenHandlerCollection (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);\n    parameters:\n    - id: configuration\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n      description: The configuration to associate with the handler collection.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n      description: A security token handler collection that contains the default, basic security token handlers.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a token from the specified token descriptor.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);\n    parameters:\n    - id: tokenDescriptor\n      type: System.IdentityModel.Tokens.SecurityTokenDescriptor\n      description: The token descriptor from which the token is to be created. Properties of the token descriptor are set before this method is called.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: A security token that matches the properties of the token descriptor.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  id: InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32,SecurityTokenHandler)\n  nameWithType: SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Inserts the specified token handler in this collection at the specified index. (Override of the base class method.)\n  syntax:\n    content: protected override void InsertItem (int index, System.IdentityModel.Tokens.SecurityTokenHandler item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which the handler should be inserted.\n    - id: item\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: The token handler to insert.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)\n  id: Item(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: Item(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.Item(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(SecurityToken)\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a token handler from this collection that can handle the specified security token.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[System.IdentityModel.Tokens.SecurityToken token] { get; }\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token for which the handler should be returned.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: A token handler that can handle the specified token.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: SecurityTokenHandlerCollection.Item(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a token handler from this collection that can handle the specified type identifier.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[string tokenTypeIdentifier] { get; }\n    parameters:\n    - id: tokenTypeIdentifier\n      type: System.String\n      description: A URI that identifies the token type.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: A token handler that can handle tokens that correspond to the specified type identifier.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)\n  id: Item(System.Type)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: Item(Type)\n  nameWithType: SecurityTokenHandlerCollection.Item(Type)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(Type)\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the handler from this collection that can handle the specified token type.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[Type tokenType] { get; }\n    parameters:\n    - id: tokenType\n      type: System.Type\n      description: The type of the token to be handled.\n    return:\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: A token handler that can handle tokens of the specified type.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a key identifier clause from the specified XML reader.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause deserialized from the XML.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClauseCore(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a key identifier clause from the specified XML reader.\n  syntax:\n    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause deserialized from the XML.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)\n  id: ReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: ReadToken(String)\n  nameWithType: SecurityTokenHandlerCollection.ReadToken(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a security token from the specified string.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);\n    parameters:\n    - id: tokenString\n      type: System.String\n      description: The string from which to deserialize the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token that was deserialized from the specified string.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a security token from the specified XML reader.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token deserialized from the XML.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: SecurityTokenHandlerCollection.RemoveItem(Int32)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Removes the handler at the specified index from this collection. (Override of the base class method.)\n  syntax:\n    content: protected override void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the handler to remove.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  id: SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: SetItem(Int32,SecurityTokenHandler)\n  nameWithType: SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Replaces the token handler at the specified index in the collection with the specified handler.\n  syntax:\n    content: protected override void SetItem (int index, System.IdentityModel.Tokens.SecurityTokenHandler item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to replace.\n    - id: item\n      type: System.IdentityModel.Tokens.SecurityTokenHandler\n      description: The new token handler for the element at the specified index.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers\n  id: TokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: TokenTypeIdentifiers\n  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a list of the type identifiers of the tokens handled by the handlers in this collection.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<string> TokenTypeIdentifiers { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The list of type identifier URIs.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes\n  id: TokenTypes\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: TokenTypes\n  nameWithType: SecurityTokenHandlerCollection.TokenTypes\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a list of the types of the tokens handled by handlers in this collection.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Type> TokenTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: The list of types.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified security token.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to validate.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified key identifier clause to XML.\n  syntax:\n    content: public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer.\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to serialize.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified key identifier clause to XML.\n  syntax:\n    content: protected virtual void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer.\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to serialize.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: WriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.WriteToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified security token to a string.\n  syntax:\n    content: public string WriteToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to serialize.\n    return:\n      type: System.String\n      description: The string serialized from the token.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The collection does not contain a handler capable of serializing the specified token.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified security token to XML.\n  syntax:\n    content: public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to serialize.\n  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The collection does not contain a handler capable of serializing the specified token.\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.SecurityTokenHandler>\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SecurityTokenHandlerCollection()\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<SecurityTokenHandler>\n  nameWithType: IEnumerable<SecurityTokenHandler>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityTokenHandler\n    name: SecurityTokenHandler\n    nameWithType: SecurityTokenHandler\n    fullName: SecurityTokenHandler\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerConfiguration\n  nameWithType: SecurityTokenHandlerConfiguration\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: AddOrReplace(SecurityTokenHandler)\n  nameWithType: SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandler\n  nameWithType: SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadKeyIdentifierClauseCore(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadToken(String)\n  nameWithType: SecurityTokenHandlerCollection.CanReadToken(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanWriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ClearItems()\n  nameWithType: SecurityTokenHandlerCollection.ClearItems()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: Configuration\n  nameWithType: SecurityTokenHandlerCollection.Configuration\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CreateDefaultSecurityTokenHandlerCollection()\n  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandlerCollection\n  nameWithType: SecurityTokenHandlerCollection\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)\n- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenDescriptor\n  nameWithType: SecurityTokenDescriptor\n  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: InsertItem(Int32,SecurityTokenHandler)\n  nameWithType: SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: Item(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.Item(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: SecurityTokenHandlerCollection.Item(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: Item(Type)\n  nameWithType: SecurityTokenHandlerCollection.Item(Type)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadKeyIdentifierClauseCore(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadToken(String)\n  nameWithType: SecurityTokenHandlerCollection.ReadToken(String)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: SecurityTokenHandlerCollection.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: SecurityTokenHandlerCollection.RemoveItem(Int32)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(Int32)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SetItem(Int32,SecurityTokenHandler)\n  nameWithType: SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: TokenTypeIdentifiers\n  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: TokenTypes\n  nameWithType: SecurityTokenHandlerCollection.TokenTypes\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.WriteToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SecurityTokenHandlerCollection\n  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: AddOrReplace\n  nameWithType: SecurityTokenHandlerCollection.AddOrReplace\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadKeyIdentifierClauseCore\n  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanReadToken\n  nameWithType: SecurityTokenHandlerCollection.CanReadToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: SecurityTokenHandlerCollection.CanWriteToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ClearItems\n  nameWithType: SecurityTokenHandlerCollection.ClearItems\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: Configuration\n  nameWithType: SecurityTokenHandlerCollection.Configuration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CreateDefaultSecurityTokenHandlerCollection\n  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: CreateToken\n  nameWithType: SecurityTokenHandlerCollection.CreateToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: SecurityTokenHandlerCollection.InsertItem\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: Item\n  nameWithType: SecurityTokenHandlerCollection.Item\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadKeyIdentifierClauseCore\n  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ReadToken\n  nameWithType: SecurityTokenHandlerCollection.ReadToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: RemoveItem\n  nameWithType: SecurityTokenHandlerCollection.RemoveItem\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: SecurityTokenHandlerCollection.SetItem\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: TokenTypeIdentifiers\n  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: TokenTypes\n  nameWithType: SecurityTokenHandlerCollection.TokenTypes\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: ValidateToken\n  nameWithType: SecurityTokenHandlerCollection.ValidateToken\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteKeyIdentifierClause\n  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteKeyIdentifierClauseCore\n  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore\n- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*\n  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection\n  isExternal: false\n  name: WriteToken\n  nameWithType: SecurityTokenHandlerCollection.WriteToken\n"}