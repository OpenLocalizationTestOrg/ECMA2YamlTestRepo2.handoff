{"nodes":[{"pos":[1161,1173],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2644,2656],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2707,2719],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2808,2820],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3653,3665],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3716,3728],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3817,3829],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5242,5254],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5305,5317],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5423,5435],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5541,5553],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5642,5654],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6907,6919],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6970,6982],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7088,7100],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7206,7218],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7307,7319],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7855,7867],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.AuditRule`1\n  id: AuditRule`1\n  children:\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.AuditRule`1.Rights\n  langs:\n  - csharp\n  name: AuditRule<T>\n  nameWithType: AuditRule<T>\n  fullName: System.Security.AccessControl.AuditRule<T>\n  type: Class\n  syntax:\n    content: 'public class AuditRule<T> : System.Security.AccessControl.AuditRule where T : struct'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(IdentityReference,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: To be added.\n  overload: System.Security.AccessControl.AuditRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(String,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (string identity, T rights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: To be added.\n  overload: System.Security.AccessControl.AuditRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (System.Security.Principal.IdentityReference identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: To be added.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: To be added.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: To be added.\n  overload: System.Security.AccessControl.AuditRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public AuditRule (string identity, T rights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.String\n      description: To be added.\n    - id: rights\n      type: T\n      description: To be added.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: To be added.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: To be added.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: To be added.\n  overload: System.Security.AccessControl.AuditRule`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.AccessControl.AuditRule`1.Rights\n  id: Rights\n  parent: System.Security.AccessControl.AuditRule`1\n  langs:\n  - csharp\n  name: Rights\n  nameWithType: AuditRule<T>.Rights\n  fullName: System.Security.AccessControl.AuditRule<T>.Rights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public T Rights { get; }\n    return:\n      type: T\n      description: To be added.\n  overload: System.Security.AccessControl.AuditRule`1.Rights*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(IdentityReference,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(String,T,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,AuditFlags)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.AuditRule<T>.AuditRule(String,T,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.AccessControl.AuditRule`1.Rights\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: Rights\n  nameWithType: AuditRule<T>.Rights\n  fullName: System.Security.AccessControl.AuditRule<T>.Rights\n- uid: System.Security.AccessControl.AuditRule`1.#ctor*\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: AuditRule<T>\n  nameWithType: AuditRule<T>.AuditRule<T>\n- uid: System.Security.AccessControl.AuditRule`1.Rights*\n  parent: System.Security.AccessControl.AuditRule`1\n  isExternal: false\n  name: Rights\n  nameWithType: AuditRule<T>.Rights\n"}