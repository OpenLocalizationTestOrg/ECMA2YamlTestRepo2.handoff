{"nodes":[{"pos":[1950,2144],"content":"Represents a collection of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects in the <xref href=\"System.Web.UI.WebControls.TreeView\"></xref> control. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a collection of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeView\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> control.","pos":[0,162],"source":"Represents a collection of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects in the <xref href=\"System.Web.UI.WebControls.TreeView\"></xref> control."},{"content":"This class cannot be inherited.","pos":[163,194]}]},{"pos":[2157,5148],"content":"The TreeNodeCollection class is used to store and manage a collection of <xref:System.Web.UI.WebControls.TreeNode> objects in the <xref:System.Web.UI.WebControls.TreeView> control. The <xref:System.Web.UI.WebControls.TreeView> control uses the TreeNodeCollection class in two of its properties. It stores its root nodes in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property and its selected nodes in the <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> property. The TreeNodeCollection collection is also used for the <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> property to store child nodes (if any).       The TreeNodeCollection class supports several ways to access the items in the collection:      -   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> indexer to retrieve a <xref:System.Web.UI.WebControls.TreeNode> object directly at a specific zero-based index.      -   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to iterate through the collection.      -   Use `foreach` (C#) or `For Each` (Visual Basic) to iterate through the collection.      -   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the collection into an <xref:System.Array> object.       You can programmatically manage the TreeNodeCollection by adding and removing <xref:System.Web.UI.WebControls.TreeNode> objects. To add nodes to the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> or <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> method. To remove nodes from the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, or <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method.      > [!NOTE] >  When the <xref:System.Web.UI.WebControls.TreeView> control is bound to a data source, the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> collections are automatically populated each time binding occurs. Any changes to the collections between bindings will be lost. To retain these changes, either update the data source or manually rebuild the collection each time you bind.       The TreeNodeCollection contains properties and methods that allow you to retrieve information about the collection itself. To find out how many items are in the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> property. If you want to determine whether the collection contains a certain <xref:System.Web.UI.WebControls.TreeNode> object, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> method. To get the index of a <xref:System.Web.UI.WebControls.TreeNode> object in the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The TreeNodeCollection class is used to store and manage a collection of &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects in the &lt;xref:System.Web.UI.WebControls.TreeView&gt; control.","pos":[0,180],"source":"The TreeNodeCollection class is used to store and manage a collection of <xref:System.Web.UI.WebControls.TreeNode> objects in the <xref:System.Web.UI.WebControls.TreeView> control."},{"content":"The &lt;xref:System.Web.UI.WebControls.TreeView&gt; control uses the TreeNodeCollection class in two of its properties.","pos":[181,294],"source":" The <xref:System.Web.UI.WebControls.TreeView> control uses the TreeNodeCollection class in two of its properties."},{"content":"It stores its root nodes in the &lt;xref:System.Web.UI.WebControls.TreeView.Nodes%2A&gt; property and its selected nodes in the &lt;xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A&gt; property.","pos":[295,484],"source":" It stores its root nodes in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property and its selected nodes in the <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> property."},{"content":"The TreeNodeCollection collection is also used for the &lt;xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A&gt; property to store child nodes (if any).","pos":[485,635],"source":" The TreeNodeCollection collection is also used for the <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> property to store child nodes (if any)."},{"content":"The TreeNodeCollection class supports several ways to access the items in the collection:      -   Use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A&gt; indexer to retrieve a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object directly at a specific zero-based index.","pos":[642,920],"source":"       The TreeNodeCollection class supports several ways to access the items in the collection:      -   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> indexer to retrieve a <xref:System.Web.UI.WebControls.TreeNode> object directly at a specific zero-based index."},{"content":"-   Use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A&gt; method to create an enumerator that can be used to iterate through the collection.","pos":[926,1089],"source":"      -   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to iterate through the collection."},{"content":"-   Use <ph id=\"ph1\">`foreach`</ph> (C#) or <ph id=\"ph2\">`For Each`</ph> (Visual Basic) to iterate through the collection.","pos":[1095,1181],"source":"      -   Use `foreach` (C#) or `For Each` (Visual Basic) to iterate through the collection."},{"content":"-   Use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A&gt; method to copy the contents of the collection into an &lt;xref:System.Array&gt; object.","pos":[1187,1342],"source":"      -   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the collection into an <xref:System.Array> object."},{"content":"You can programmatically manage the TreeNodeCollection by adding and removing &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects.","pos":[1349,1477],"source":"       You can programmatically manage the TreeNodeCollection by adding and removing <xref:System.Web.UI.WebControls.TreeNode> objects."},{"content":"To add nodes to the collection, use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A&gt; or &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A&gt; method.","pos":[1478,1648],"source":" To add nodes to the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> or <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> method."},{"content":"To remove nodes from the collection, use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A&gt;, &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A&gt;, or &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A&gt; method.","pos":[1649,1893],"source":" To remove nodes from the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, or <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When the &lt;xref:System.Web.UI.WebControls.TreeView&gt; control is bound to a data source, the &lt;xref:System.Web.UI.WebControls.TreeView.Nodes%2A&gt; and &lt;xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A&gt; collections are automatically populated each time binding occurs.","pos":[1899,2178],"source":"      > [!NOTE] >  When the <xref:System.Web.UI.WebControls.TreeView> control is bound to a data source, the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> collections are automatically populated each time binding occurs."},{"content":"Any changes to the collections between bindings will be lost.","pos":[2179,2240]},{"content":"To retain these changes, either update the data source or manually rebuild the collection each time you bind.","pos":[2241,2350]},{"content":"The TreeNodeCollection contains properties and methods that allow you to retrieve information about the collection itself.","pos":[2357,2479]},{"content":"To find out how many items are in the collection, use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A&gt; property.","pos":[2480,2608],"source":" To find out how many items are in the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> property."},{"content":"If you want to determine whether the collection contains a certain &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object, use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A&gt; method.","pos":[2609,2805],"source":" If you want to determine whether the collection contains a certain <xref:System.Web.UI.WebControls.TreeNode> object, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> method."},{"content":"To get the index of a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object in the collection, use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A&gt; method.","pos":[2806,2974],"source":" To get the index of a <xref:System.Web.UI.WebControls.TreeNode> object in the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> method."}]},{"pos":[6362,6493],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the default values.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> class using the default values."},{"pos":[6506,7035],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.TreeNodeCollection> class using the default values. This constructor is commonly used when creating a collection of root nodes where a parent node (or owner) is not required.      > [!NOTE] >  When creating a collection of non-root nodes, you should use the overloaded constructor that takes the `owner` parameter, instead of this constructor, to specify the parent node.       This constructor is used primarily by control developers.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; class using the default values.","pos":[0,140],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.TreeNodeCollection> class using the default values."},{"content":"This constructor is commonly used when creating a collection of root nodes where a parent node (or owner) is not required.","pos":[141,263]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When creating a collection of non-root nodes, you should use the overloaded constructor that takes the <ph id=\"ph2\">`owner`</ph> parameter, instead of this constructor, to specify the parent node.","pos":[269,460],"source":"      > [!NOTE] >  When creating a collection of non-root nodes, you should use the overloaded constructor that takes the `owner` parameter, instead of this constructor, to specify the parent node."},{"content":"This constructor is used primarily by control developers.","pos":[467,524]}]},{"pos":[7718,7867],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified parent node (or owner).","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> class using the specified parent node (or owner)."},{"pos":[7880,8374],"content":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.TreeNodeCollection> class using the specified parent node (or owner). This constructor is commonly used when creating a collection of non-root nodes where you need to specify the parent node.      > [!NOTE] >  When creating a collection of root nodes, consider using the default constructor because root nodes do not have a parent node.       This constructor is used primarily by control developers.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use this constructor to initialize a new instance of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; class using the specified parent node (or owner).","pos":[0,158],"source":"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.TreeNodeCollection> class using the specified parent node (or owner)."},{"content":"This constructor is commonly used when creating a collection of non-root nodes where you need to specify the parent node.","pos":[159,280]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When creating a collection of root nodes, consider using the default constructor because root nodes do not have a parent node.","pos":[286,425],"source":"      > [!NOTE] >  When creating a collection of root nodes, consider using the default constructor because root nodes do not have a parent node."},{"content":"This constructor is used primarily by control developers.","pos":[432,489]}]},{"pos":[8567,8684],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the parent node of the collection.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object that represents the parent node of the collection."},{"pos":[9238,9414],"content":"Appends the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to the end of the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Appends the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to the end of the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[9427,10053],"content":"Use the Add method to append the specified <xref:System.Web.UI.WebControls.TreeNode> object to the end of the <xref:System.Web.UI.WebControls.TreeNodeCollection>.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> allows you to add null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.       As an alternative, you can insert a <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> at a specific index by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Add method to append the specified &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object to the end of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[0,162],"source":"Use the Add method to append the specified <xref:System.Web.UI.WebControls.TreeNode> object to the end of the <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; allows you to add null references (Nothing in Visual Basic), as well as duplicate &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects.","pos":[168,369],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> allows you to add null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects."},{"content":"As an alternative, you can insert a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; at a specific index by using the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A&gt; method.","pos":[376,621],"source":"       As an alternative, you can insert a <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> at a specific index by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> method."}]},{"pos":[10820,10897],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to append.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to append."},{"pos":[11503,11698],"content":"Inserts the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object in a <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object at the specified index location.","needQuote":true,"needEscape":true,"source":"Inserts the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object in a <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object at the specified index location."},{"pos":[11711,12354],"content":"Use the AddAt method to insert the specified <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified zero-based index.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> allows you to insert null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.       As an alternative, you can append a <xref:System.Web.UI.WebControls.TreeNode> object to the end of the <xref:System.Web.UI.WebControls.TreeNodeCollection> by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the AddAt method to insert the specified &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; at the specified zero-based index.","pos":[0,187],"source":"Use the AddAt method to insert the specified <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified zero-based index."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; allows you to insert null references (Nothing in Visual Basic), as well as duplicate &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects.","pos":[193,397],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> allows you to insert null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects."},{"content":"As an alternative, you can append a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object to the end of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; by using the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A&gt; method.","pos":[404,638],"source":"       As an alternative, you can append a <xref:System.Web.UI.WebControls.TreeNode> object to the end of the <xref:System.Web.UI.WebControls.TreeNodeCollection> by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> method."}]},{"pos":[13114,13230],"content":"The zero-based index location at which to insert the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The zero-based index location at which to insert the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object."},{"pos":[13313,13387],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to add.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to add."},{"pos":[13568,13651],"content":"<ph id=\"ph1\">&lt;code&gt;child&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>child</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14038,14123],"content":"Empties the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Empties the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[14136,14499],"content":"Use the Clear method to remove every <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection>.      > [!NOTE] >  To remove an individual node from the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> or <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Clear method to remove every &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object from the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[0,147],"source":"Use the Clear method to remove every <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To remove an individual node from the collection, use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A&gt; or &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A&gt; method.","pos":[153,360],"source":"      > [!NOTE] >  To remove an individual node from the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> or <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> method."}]},{"pos":[15722,15839],"content":"Determines whether the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is in the collection.","needQuote":true,"needEscape":true,"source":"Determines whether the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object is in the collection."},{"pos":[15851,16211],"content":"Use the Contains method to determine whether a <xref:System.Web.UI.WebControls.TreeNode> object is contained in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. This method is commonly used to test for the existence of a <xref:System.Web.UI.WebControls.TreeNode> object before performing a task, such as adding or removing the node from the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the Contains method to determine whether a <xref:System.Web.UI.WebControls.TreeNode> object is contained in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. This method is commonly used to test for the existence of a <xref:System.Web.UI.WebControls.TreeNode> object before performing a task, such as adding or removing the node from the collection.","pos":[0,360],"nodes":[{"content":"Use the Contains method to determine whether a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object is contained in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[0,168],"source":"Use the Contains method to determine whether a <xref:System.Web.UI.WebControls.TreeNode> object is contained in the <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"This method is commonly used to test for the existence of a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object before performing a task, such as adding or removing the node from the collection.","pos":[169,360],"source":" This method is commonly used to test for the existence of a <xref:System.Web.UI.WebControls.TreeNode> object before performing a task, such as adding or removing the node from the collection."}]}]},{"pos":[16942,17017],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to find.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to find."},{"pos":[17076,17323],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object is contained in the collection; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object is contained in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17949,18210],"content":"Copies all the items from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to a compatible one-dimensional array of <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects, starting at the specified index in the target array.","needQuote":true,"needEscape":true,"source":"Copies all the items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object to a compatible one-dimensional array of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects, starting at the specified index in the target array."},{"pos":[18223,18853],"content":"Use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.","pos":[0,628],"nodes":[{"content":"Use the CopyTo method to copy the contents of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; into the specified zero-based &lt;xref:System.Array?displayProperty=fullName&gt; object.","pos":[0,184],"source":"Use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object."},{"content":"Items are copied starting at the specified index of the target array.","pos":[185,254]},{"content":"With the &lt;xref:System.Array?displayProperty=fullName&gt; object, you can then use array syntax to access the items in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[255,426],"source":" With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"As an alternative, you can also use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A&gt; method to create an enumerator that can be used to access the items in the collection.","pos":[433,628],"source":"       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection."}]}]},{"pos":[19589,19781],"content":"A zero-based array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects that receives the copied items from the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A zero-based array of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects that receives the copied items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>."},{"pos":[19842,19922],"content":"The position in the target array at which to start receiving the copied content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position in the target array at which to start receiving the copied content.","pos":[0,80]}]},{"pos":[20387,20492],"content":"Gets the number of items in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the number of items in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[20504,20817],"content":"Use the Count property to determine the number of items in a <xref:System.Web.UI.WebControls.TreeNodeCollection>. This property is commonly used when iterating through a collection to determine the upper bound of the collection. The Count property is also commonly used to determine whether a collection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the Count property to determine the number of items in a <xref:System.Web.UI.WebControls.TreeNodeCollection>. This property is commonly used when iterating through a collection to determine the upper bound of the collection. The Count property is also commonly used to determine whether a collection is empty.","pos":[0,313],"nodes":[{"content":"Use the Count property to determine the number of items in a &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[0,113],"source":"Use the Count property to determine the number of items in a <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"This property is commonly used when iterating through a collection to determine the upper bound of the collection.","pos":[114,228]},{"content":"The Count property is also commonly used to determine whether a collection is empty.","pos":[229,313]}]}]},{"pos":[21442,21535],"content":"The number of items in the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The number of items in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>."},{"pos":[22043,22176],"content":"Returns an enumerator that can be used to iterate through a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns an enumerator that can be used to iterate through a <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[22189,23501],"content":"Use the GetEnumerator method to create an enumerator that can be easily iterated through to get each item in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. To get the item currently pointed to in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property. Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method to move to the next item. If you need to move the enumerator back to the beginning of the collection, use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method.      > [!NOTE] >  After you create an enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property is undefined.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to create an <xref:System.Array?displayProperty=fullName> object that can be used to access the items in the collection. Another alternative is to use a `foreach` or `For Each` structure to iterate through the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the GetEnumerator method to create an enumerator that can be easily iterated through to get each item in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[0,165],"source":"Use the GetEnumerator method to create an enumerator that can be easily iterated through to get each item in the <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"To get the item currently pointed to in the enumerator, use the &lt;xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName&gt; property.","pos":[166,313],"source":" To get the item currently pointed to in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property."},{"content":"Use the &lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName&gt; method to move to the next item.","pos":[314,429],"source":" Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method to move to the next item."},{"content":"If you need to move the enumerator back to the beginning of the collection, use the &lt;xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName&gt; method.","pos":[430,593],"source":" If you need to move the enumerator back to the beginning of the collection, use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  After you create an enumerator or use the &lt;xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName&gt; method, you must call the &lt;xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName&gt; method.","pos":[599,834],"source":"      > [!NOTE] >  After you create an enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method."},{"content":"Otherwise, the item represented by the &lt;xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName&gt; property is undefined.","pos":[835,970],"source":" Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property is undefined."},{"content":"As an alternative, you can also use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A&gt; method to create an &lt;xref:System.Array?displayProperty=fullName&gt; object that can be used to access the items in the collection.","pos":[977,1206],"source":"       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to create an <xref:System.Array?displayProperty=fullName> object that can be used to access the items in the collection."},{"content":"Another alternative is to use a <ph id=\"ph1\">`foreach`</ph> or <ph id=\"ph2\">`For Each`</ph> structure to iterate through the collection.","pos":[1207,1307],"source":" Another alternative is to use a `foreach` or `For Each` structure to iterate through the collection."}]},{"pos":[24101,24221],"content":"An enumerator that can be used to iterate through the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An enumerator that can be used to iterate through the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>."},{"pos":[24803,24904],"content":"Determines the index of the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines the index of the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object."},{"pos":[24917,25299],"content":"Use the IndexOf method to determine the zero-based index of the specified <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> object. If the node is not in the collection, the method returns -1.      > [!NOTE] >  If the specified node appears multiple times in the collection, the index of the first occurrence is returned.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the IndexOf method to determine the zero-based index of the specified &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; object.","pos":[0,189],"source":"Use the IndexOf method to determine the zero-based index of the specified <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> object."},{"content":"If the node is not in the collection, the method returns -1.","pos":[190,250]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the specified node appears multiple times in the collection, the index of the first occurrence is returned.","pos":[256,379],"source":"      > [!NOTE] >  If the specified node appears multiple times in the collection, the index of the first occurrence is returned."}]},{"pos":[25963,26040],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to locate.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to locate."},{"pos":[26097,26266],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> within the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if found; otherwise, -1.","needQuote":true,"needEscape":true,"source":"The zero-based index of the first occurrence of <code>value</code> within the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>, if found; otherwise, -1."},{"pos":[26777,26919],"content":"Gets a value indicating whether access to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is synchronized (thread safe).","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether access to the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> is synchronized (thread safe)."},{"pos":[26932,27471],"content":"The IsSynchronized property is used to indicate whether access to the <xref:System.Web.UI.WebControls.TreeNodeCollection> is synchronized (thread safe). This property is derived from the <xref:System.Collections.ICollection?displayProperty=fullName> class and is overridden to always return `false`.       For more information on the IsSynchronized property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IsSynchronized property is used to indicate whether access to the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; is synchronized (thread safe).","pos":[0,152],"source":"The IsSynchronized property is used to indicate whether access to the <xref:System.Web.UI.WebControls.TreeNodeCollection> is synchronized (thread safe)."},{"content":"This property is derived from the &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; class and is overridden to always return <ph id=\"ph1\">`false`</ph>.","pos":[153,299],"source":" This property is derived from the <xref:System.Collections.ICollection?displayProperty=fullName> class and is overridden to always return `false`."},{"content":"For more information on the IsSynchronized property, see the &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt; property of the &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; interface.","pos":[306,537],"source":"       For more information on the IsSynchronized property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."}]},{"pos":[27590,27653],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[28170,28345],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object at the specified index in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[28357,28693],"content":"Use this indexer to access a <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified index using array notation. The indexer allows you to modify or replace a <xref:System.Web.UI.WebControls.TreeNode> object in the collection directly. The collection is zero-based.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this indexer to access a <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified index using array notation. The indexer allows you to modify or replace a <xref:System.Web.UI.WebControls.TreeNode> object in the collection directly. The collection is zero-based.","pos":[0,336],"nodes":[{"content":"Use this indexer to access a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object from the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; at the specified index using array notation.","pos":[0,183],"source":"Use this indexer to access a <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified index using array notation."},{"content":"The indexer allows you to modify or replace a &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object in the collection directly.","pos":[184,306],"source":" The indexer allows you to modify or replace a <xref:System.Web.UI.WebControls.TreeNode> object in the collection directly."},{"content":"The collection is zero-based.","pos":[307,336]}]}]},{"pos":[29436,29539],"content":"The zero-based index of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to retrieve.","needQuote":true,"needEscape":true,"source":"The zero-based index of the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to retrieve."},{"pos":[29618,29781],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index in the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object at the specified index in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>."},{"pos":[30349,30516],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object from the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[30529,31220],"content":"Use the Remove method to remove the specified node from the collection. All items that follow that node are then moved up to fill in the vacant position. The indexes of the moved items are also updated.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> can contain null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.       As an alternative, you can remove a node at a specific index by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> method. You can also remove every node in the collection by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the Remove method to remove the specified node from the collection.","pos":[0,71]},{"content":"All items that follow that node are then moved up to fill in the vacant position.","pos":[72,153]},{"content":"The indexes of the moved items are also updated.","pos":[154,202]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; can contain null references (Nothing in Visual Basic), as well as duplicate &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects.","pos":[208,403],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> can contain null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects."},{"content":"As an alternative, you can remove a node at a specific index by using the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A&gt; method.","pos":[410,555],"source":"       As an alternative, you can remove a node at a specific index by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> method."},{"content":"You can also remove every node in the collection by using the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A&gt; method.","pos":[556,686],"source":" You can also remove every node in the collection by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method."}]},{"pos":[31998,32075],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to remove."},{"pos":[32257,32340],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32785,32974],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object at the specified index location from the <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object at the specified index location from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[32987,33827],"content":"Use the RemoveAt method to remove the <xref:System.Web.UI.WebControls.TreeNode> object at the specified zero-based index location from a <xref:System.Web.UI.WebControls.TreeNodeCollection>. All items that follow that node are then moved up to fill in the vacant position. The indexes of the moved items are also updated.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> can contain null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.       As an alternative, you can remove a specific <xref:System.Web.UI.WebControls.TreeNode> object by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> method. You can also remove every node in the collection by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the RemoveAt method to remove the &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object at the specified zero-based index location from a &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[0,189],"source":"Use the RemoveAt method to remove the <xref:System.Web.UI.WebControls.TreeNode> object at the specified zero-based index location from a <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"All items that follow that node are then moved up to fill in the vacant position.","pos":[190,271]},{"content":"The indexes of the moved items are also updated.","pos":[272,320]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; can contain null references (Nothing in Visual Basic), as well as duplicate &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects.","pos":[326,521],"source":"      > [!NOTE] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection> can contain null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects."},{"content":"As an alternative, you can remove a specific &lt;xref:System.Web.UI.WebControls.TreeNode&gt; object by using the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A&gt; method.","pos":[528,704],"source":"       As an alternative, you can remove a specific <xref:System.Web.UI.WebControls.TreeNode> object by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> method."},{"content":"You can also remove every node in the collection by using the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A&gt; method.","pos":[705,835],"source":" You can also remove every node in the collection by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method."}]},{"pos":[34562,34614],"content":"The zero-based index location of the node to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index location of the node to remove.","pos":[0,52]}]},{"pos":[35096,35230],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object."},{"pos":[35243,37068],"content":"The SyncRoot property provides a synchronized version of the <xref:System.Web.UI.WebControls.TreeNodeCollection> that can be used with synchronizing (threading) code.      > [!CAUTION] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> property of this class always returns `false`, which indicates that the <xref:System.Web.UI.WebControls.TreeNodeCollection> class is not synchronized (not thread safe).       Synchronizing code must perform operations on the SyncRoot object of the <xref:System.Web.UI.WebControls.TreeNodeCollection>, not directly on the <xref:System.Web.UI.WebControls.TreeNodeCollection> itself. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Web.UI.WebControls.TreeNodeCollection> object.      > [!NOTE] >  The object returned in this implementation is the <xref:System.Collections.ArrayList?displayProperty=fullName> object used to store the <xref:System.Web.UI.WebControls.TreeNode> objects in the collection.       Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.       For more information on the <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SyncRoot property provides a synchronized version of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; that can be used with synchronizing (threading) code.","pos":[0,166],"source":"The SyncRoot property provides a synchronized version of the <xref:System.Web.UI.WebControls.TreeNodeCollection> that can be used with synchronizing (threading) code."},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  The &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A&gt; property of this class always returns <ph id=\"ph2\">`false`</ph>, which indicates that the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; class is not synchronized (not thread safe).","pos":[172,430],"source":"      > [!CAUTION] >  The <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> property of this class always returns `false`, which indicates that the <xref:System.Web.UI.WebControls.TreeNodeCollection> class is not synchronized (not thread safe)."},{"content":"Synchronizing code must perform operations on the SyncRoot object of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;, not directly on the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; itself.","pos":[437,642],"source":"       Synchronizing code must perform operations on the SyncRoot object of the <xref:System.Web.UI.WebControls.TreeNodeCollection>, not directly on the <xref:System.Web.UI.WebControls.TreeNodeCollection> itself."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[643,724]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; object.","pos":[725,896],"source":" Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Web.UI.WebControls.TreeNodeCollection> object."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The object returned in this implementation is the &lt;xref:System.Collections.ArrayList?displayProperty=fullName&gt; object used to store the &lt;xref:System.Web.UI.WebControls.TreeNode&gt; objects in the collection.","pos":[902,1119],"source":"      > [!NOTE] >  The object returned in this implementation is the <xref:System.Collections.ArrayList?displayProperty=fullName> object used to store the <xref:System.Web.UI.WebControls.TreeNode> objects in the collection."},{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[1126,1204]},{"content":"Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.","pos":[1205,1344]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[1345,1526]},{"content":"For more information on the &lt;xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A&gt; property, see the &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt; property of the &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; interface.","pos":[1533,1813],"source":"       For more information on the <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."}]},{"pos":[37182,37348],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Object?displayProperty=fullName&gt; that can be used to synchronize access to the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>."},{"pos":[38080,38319],"content":"Copies all the items from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to a compatible one-dimensional <ph id=\"ph1\">&amp;lt;</ph>xref:System.Array?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>, starting at the specified index in the target array.","needQuote":true,"needEscape":true,"source":"Copies all the items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object to a compatible one-dimensional &lt;xref:System.Array?displayProperty=fullName&gt;, starting at the specified index in the target array."},{"pos":[38332,39017],"content":"Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>.       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.","pos":[0,683],"nodes":[{"content":"Use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A&gt; method to copy the contents of the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt; into the specified zero-based &lt;xref:System.Array?displayProperty=fullName&gt; object.","pos":[0,239],"source":"Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object."},{"content":"Items are copied starting at the specified index of the target array.","pos":[240,309]},{"content":"With the &lt;xref:System.Array?displayProperty=fullName&gt; object, you can then use array syntax to access the items in the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection&gt;.","pos":[310,481],"source":" With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>."},{"content":"As an alternative, you can also use the &lt;xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A&gt; method to create an enumerator that can be used to access the items in the collection.","pos":[488,683],"source":"       As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection."}]}]},{"pos":[39750,39927],"content":"A zero-based <ph id=\"ph1\">&amp;lt;</ph>xref:System.Array?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object that receives the copied items from the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A zero-based &lt;xref:System.Array?displayProperty=fullName&gt; object that receives the copied items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>."},{"pos":[39988,40068],"content":"The position in the target array at which to start receiving the copied content.","needQuote":true,"needEscape":true,"nodes":[{"content":"The position in the target array at which to start receiving the copied content.","pos":[0,80]}]},{"pos":[40273,40375],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is not an array of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNode\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"<code>array</code> is not an array of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects."},{"pos":[40982,41127],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is saving changes to its view state.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object is saving changes to its view state."},{"pos":[41271,41450],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the control is marked to save its state; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is marked to save its state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42202,42315],"content":"Loads the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object's previously saved view state.","needQuote":true,"needEscape":true,"source":"Loads the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object's previously saved view state."},{"pos":[42465,42561],"content":"A &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the saved view state values.","pos":[0,96],"source":"A &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values."}]},{"pos":[43259,43348],"content":"Saves the changes to view state to a &lt;xref:System.Object?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Saves the changes to view state to a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,89],"source":"Saves the changes to view state to a &lt;xref:System.Object?displayProperty=fullName&gt;."}]},{"pos":[43487,43580],"content":"The &lt;xref:System.Object?displayProperty=fullName&gt; that contains the view state changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">&amp;lt;</ph>xref:System.Object?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> that contains the view state changes.","pos":[0,93],"source":"The &lt;xref:System.Object?displayProperty=fullName&gt; that contains the view state changes."}]},{"pos":[44283,44398],"content":"Instructs the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to track changes to its view state.","needQuote":true,"needEscape":true,"source":"Instructs the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> to track changes to its view state."},{"pos":[44410,44549],"content":"After this method has been called on a server control, the &lt;xref:System.Web.UI.Control.IsTrackingViewState%2A&gt; property will return <ph id=\"ph1\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"After this method has been called on a server control, the <xref:System.Web.UI.Control.IsTrackingViewState%2A> property will return `true`."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.TreeNodeCollection\n  id: TreeNodeCollection\n  children:\n  - System.Web.UI.WebControls.TreeNodeCollection.#ctor\n  - System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)\n  - System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)\n  - System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)\n  - System.Web.UI.WebControls.TreeNodeCollection.Clear\n  - System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)\n  - System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)\n  - System.Web.UI.WebControls.TreeNodeCollection.Count\n  - System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator\n  - System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)\n  - System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized\n  - System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)\n  - System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)\n  - System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)\n  - System.Web.UI.WebControls.TreeNodeCollection.SyncRoot\n  - System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState\n  langs:\n  - csharp\n  name: TreeNodeCollection\n  nameWithType: TreeNodeCollection\n  fullName: System.Web.UI.WebControls.TreeNodeCollection\n  type: Class\n  summary: Represents a collection of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects in the <xref href=\"System.Web.UI.WebControls.TreeView\"></xref> control. This class cannot be inherited.\n  remarks: \"The TreeNodeCollection class is used to store and manage a collection of <xref:System.Web.UI.WebControls.TreeNode> objects in the <xref:System.Web.UI.WebControls.TreeView> control. The <xref:System.Web.UI.WebControls.TreeView> control uses the TreeNodeCollection class in two of its properties. It stores its root nodes in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property and its selected nodes in the <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> property. The TreeNodeCollection collection is also used for the <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> property to store child nodes (if any).  \\n  \\n The TreeNodeCollection class supports several ways to access the items in the collection:  \\n  \\n-   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> indexer to retrieve a <xref:System.Web.UI.WebControls.TreeNode> object directly at a specific zero-based index.  \\n  \\n-   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to iterate through the collection.  \\n  \\n-   Use `foreach` (C#) or `For Each` (Visual Basic) to iterate through the collection.  \\n  \\n-   Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the collection into an <xref:System.Array> object.  \\n  \\n You can programmatically manage the TreeNodeCollection by adding and removing <xref:System.Web.UI.WebControls.TreeNode> objects. To add nodes to the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> or <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> method. To remove nodes from the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, or <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method.  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Web.UI.WebControls.TreeView> control is bound to a data source, the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> collections are automatically populated each time binding occurs. Any changes to the collections between bindings will be lost. To retain these changes, either update the data source or manually rebuild the collection each time you bind.  \\n  \\n The TreeNodeCollection contains properties and methods that allow you to retrieve information about the collection itself. To find out how many items are in the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> property. If you want to determine whether the collection contains a certain <xref:System.Web.UI.WebControls.TreeNode> object, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> method. To get the index of a <xref:System.Web.UI.WebControls.TreeNode> object in the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> method.\"\n  example:\n  - \"The following example demonstrates how to programmatically add nodes to and remove them from a TreeNodeCollection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a TreeNodeCollection object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_136_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_136_1.aspx)]\"\n  syntax:\n    content: 'public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.Web.UI.IStateManager\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: TreeNodeCollection()\n  nameWithType: TreeNodeCollection.TreeNodeCollection()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> class using the default values.\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.TreeNodeCollection> class using the default values. This constructor is commonly used when creating a collection of root nodes where a parent node (or owner) is not required.  \\n  \\n> [!NOTE]\\n>  When creating a collection of non-root nodes, you should use the overloaded constructor that takes the `owner` parameter, instead of this constructor, to specify the parent node.  \\n  \\n This constructor is used primarily by control developers.\"\n  syntax:\n    content: public TreeNodeCollection ();\n    parameters: []\n  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)\n  id: '#ctor(System.Web.UI.WebControls.TreeNode)'\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: TreeNodeCollection(TreeNode)\n  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> class using the specified parent node (or owner).\n  remarks: \"Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.TreeNodeCollection> class using the specified parent node (or owner). This constructor is commonly used when creating a collection of non-root nodes where you need to specify the parent node.  \\n  \\n> [!NOTE]\\n>  When creating a collection of root nodes, consider using the default constructor because root nodes do not have a parent node.  \\n  \\n This constructor is used primarily by control developers.\"\n  syntax:\n    content: public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);\n    parameters:\n    - id: owner\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object that represents the parent node of the collection.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)\n  id: Add(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: Add(TreeNode)\n  nameWithType: TreeNodeCollection.Add(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Appends the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to the end of the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: \"Use the Add method to append the specified <xref:System.Web.UI.WebControls.TreeNode> object to the end of the <xref:System.Web.UI.WebControls.TreeNodeCollection>.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.TreeNodeCollection> allows you to add null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.  \\n  \\n As an alternative, you can insert a <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> at a specific index by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> method.\"\n  example:\n  - \"The following example demonstrates how to use the Add method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/370e49fd-05e7-49aa-a3d5-_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/370e49fd-05e7-49aa-a3d5-_1.aspx)]\"\n  syntax:\n    content: public void Add (System.Web.UI.WebControls.TreeNode child);\n    parameters:\n    - id: child\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to append.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)\n  id: AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: AddAt(Int32,TreeNode)\n  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Inserts the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object in a <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object at the specified index location.\n  remarks: \"Use the AddAt method to insert the specified <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified zero-based index.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.TreeNodeCollection> allows you to insert null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.  \\n  \\n As an alternative, you can append a <xref:System.Web.UI.WebControls.TreeNode> object to the end of the <xref:System.Web.UI.WebControls.TreeNodeCollection> by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> method.\"\n  example:\n  - \"The following example demonstrates how to use the AddAt method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/646d7369-5544-4d90-8475-_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/646d7369-5544-4d90-8475-_1.aspx)]\"\n  syntax:\n    content: public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index location at which to insert the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object.\n    - id: child\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to add.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.AddAt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>child</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear\n  id: Clear\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TreeNodeCollection.Clear()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Empties the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: \"Use the Clear method to remove every <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection>.  \\n  \\n> [!NOTE]\\n>  To remove an individual node from the collection, use the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> or <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> method.\"\n  example:\n  - \"The following example demonstrates how to use the Clear method to programmatically empty a <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_111_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_111_1.aspx)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Web.UI.WebControls.TreeNodeCollection.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)\n  id: Contains(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: Contains(TreeNode)\n  nameWithType: TreeNodeCollection.Contains(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines whether the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object is in the collection.\n  remarks: Use the Contains method to determine whether a <xref:System.Web.UI.WebControls.TreeNode> object is contained in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. This method is commonly used to test for the existence of a <xref:System.Web.UI.WebControls.TreeNode> object before performing a task, such as adding or removing the node from the collection.\n  example:\n  - \"The following example demonstrates how to use the Contains method to determine whether the selected node is in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> collection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/8b0f37ed-79bf-4881-ba56-_1.aspx)]\\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/8b0f37ed-79bf-4881-ba56-_1.aspx)]\"\n  syntax:\n    content: public bool Contains (System.Web.UI.WebControls.TreeNode c);\n    parameters:\n    - id: c\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object is contained in the collection; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)\n  id: CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: CopyTo(TreeNode[],Int32)\n  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Copies all the items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object to a compatible one-dimensional array of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects, starting at the specified index in the target array.\n  remarks: \"Use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>.  \\n  \\n As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.\"\n  example:\n  - \"The following example demonstrates how to use the CopyTo method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\"\n  syntax:\n    content: public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);\n    parameters:\n    - id: nodeArray\n      type: System.Web.UI.WebControls.TreeNode[]\n      description: A zero-based array of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects that receives the copied items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The position in the target array at which to start receiving the copied content.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Count\n  id: Count\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TreeNodeCollection.Count\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the number of items in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: Use the Count property to determine the number of items in a <xref:System.Web.UI.WebControls.TreeNodeCollection>. This property is commonly used when iterating through a collection to determine the upper bound of the collection. The Count property is also commonly used to determine whether a collection is empty.\n  example:\n  - \"The following example demonstrates how to use the Count property to determine the number of items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. It then performs a preorder traversal of the <xref:System.Web.UI.WebControls.TreeView> control to display the text of each node.  \\n  \\n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_146_1.aspx)]\\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_146_1.aspx)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of items in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TreeNodeCollection.GetEnumerator()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Returns an enumerator that can be used to iterate through a <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: \"Use the GetEnumerator method to create an enumerator that can be easily iterated through to get each item in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. To get the item currently pointed to in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property. Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method to move to the next item. If you need to move the enumerator back to the beginning of the collection, use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method.  \\n  \\n> [!NOTE]\\n>  After you create an enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property is undefined.  \\n  \\n As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to create an <xref:System.Array?displayProperty=fullName> object that can be used to access the items in the collection. Another alternative is to use a `foreach` or `For Each` structure to iterate through the collection.\"\n  example:\n  - \"The following example demonstrates how to use the GetEnumerator method to create an enumerator that contains root nodes of the <xref:System.Web.UI.WebControls.TreeView> control.  \\n  \\n [!code-cs[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_193_1.aspx)]\\n [!code-vb[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_193_1.aspx)]\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can be used to iterate through the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)\n  id: IndexOf(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: IndexOf(TreeNode)\n  nameWithType: TreeNodeCollection.IndexOf(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Determines the index of the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object.\n  remarks: \"Use the IndexOf method to determine the zero-based index of the specified <xref:System.Web.UI.WebControls.TreeNode> object in the <xref:System.Web.UI.WebControls.TreeNodeCollection> object. If the node is not in the collection, the method returns -1.  \\n  \\n> [!NOTE]\\n>  If the specified node appears multiple times in the collection, the index of the first occurrence is returned.\"\n  example:\n  - \"The following example demonstrates how to use the IndexOf method to determine the index of a root node. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/be69754f-ce4e-4152-80b4-_1.aspx)]\\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/be69754f-ce4e-4152-80b4-_1.aspx)]\"\n  syntax:\n    content: public int IndexOf (System.Web.UI.WebControls.TreeNode value);\n    parameters:\n    - id: value\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to locate.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>value</code> within the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>, if found; otherwise, -1.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: TreeNodeCollection.IsSynchronized\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether access to the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> is synchronized (thread safe).\n  remarks: \"The IsSynchronized property is used to indicate whether access to the <xref:System.Web.UI.WebControls.TreeNodeCollection> is synchronized (thread safe). This property is derived from the <xref:System.Collections.ICollection?displayProperty=fullName> class and is overridden to always return `false`.  \\n  \\n For more information on the IsSynchronized property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface.\"\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TreeNodeCollection.Item(Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object at the specified index in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: Use this indexer to access a <xref:System.Web.UI.WebControls.TreeNode> object from the <xref:System.Web.UI.WebControls.TreeNodeCollection> at the specified index using array notation. The indexer allows you to modify or replace a <xref:System.Web.UI.WebControls.TreeNode> object in the collection directly. The collection is zero-based.\n  example:\n  - \"The following example demonstrates how to use the indexer to access an element in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1077_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1077_1.aspx)]\"\n  syntax:\n    content: public System.Web.UI.WebControls.TreeNode this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to retrieve.\n    return:\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object at the specified index in the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)\n  id: Remove(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: Remove(TreeNode)\n  nameWithType: TreeNodeCollection.Remove(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Removes the specified <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: \"Use the Remove method to remove the specified node from the collection. All items that follow that node are then moved up to fill in the vacant position. The indexes of the moved items are also updated.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.TreeNodeCollection> can contain null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.  \\n  \\n As an alternative, you can remove a node at a specific index by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> method. You can also remove every node in the collection by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method.\"\n  example:\n  - \"The following example demonstrates how to use the Remove method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/f8fda58d-8ad1-430c-83d7-_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/f8fda58d-8ad1-430c-83d7-_1.aspx)]\"\n  syntax:\n    content: public void Remove (System.Web.UI.WebControls.TreeNode value);\n    parameters:\n    - id: value\n      type: System.Web.UI.WebControls.TreeNode\n      description: The <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object to remove.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: TreeNodeCollection.RemoveAt(Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Removes the <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> object at the specified index location from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: \"Use the RemoveAt method to remove the <xref:System.Web.UI.WebControls.TreeNode> object at the specified zero-based index location from a <xref:System.Web.UI.WebControls.TreeNodeCollection>. All items that follow that node are then moved up to fill in the vacant position. The indexes of the moved items are also updated.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.WebControls.TreeNodeCollection> can contain null references (Nothing in Visual Basic), as well as duplicate <xref:System.Web.UI.WebControls.TreeNode> objects.  \\n  \\n As an alternative, you can remove a specific <xref:System.Web.UI.WebControls.TreeNode> object by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> method. You can also remove every node in the collection by using the <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> method.\"\n  example:\n  - \"The following example demonstrates how to use the RemoveAt method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_37_1.aspx)]\\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_37_1.aspx)]\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index location of the node to remove.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: TreeNodeCollection.SyncRoot\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object.\n  remarks: \"The SyncRoot property provides a synchronized version of the <xref:System.Web.UI.WebControls.TreeNodeCollection> that can be used with synchronizing (threading) code.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> property of this class always returns `false`, which indicates that the <xref:System.Web.UI.WebControls.TreeNodeCollection> class is not synchronized (not thread safe).  \\n  \\n Synchronizing code must perform operations on the SyncRoot object of the <xref:System.Web.UI.WebControls.TreeNodeCollection>, not directly on the <xref:System.Web.UI.WebControls.TreeNodeCollection> itself. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n> [!NOTE]\\n>  The object returned in this implementation is the <xref:System.Collections.ArrayList?displayProperty=fullName> object used to store the <xref:System.Web.UI.WebControls.TreeNode> objects in the collection.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.  \\n  \\n For more information on the <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface.\"\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: A &lt;xref:System.Object?displayProperty=fullName&gt; that can be used to synchronize access to the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Copies all the items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object to a compatible one-dimensional &lt;xref:System.Array?displayProperty=fullName&gt;, starting at the specified index in the target array.\n  remarks: \"Use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the contents of the <xref:System.Web.UI.WebControls.TreeNodeCollection> into the specified zero-based <xref:System.Array?displayProperty=fullName> object. Items are copied starting at the specified index of the target array. With the <xref:System.Array?displayProperty=fullName> object, you can then use array syntax to access the items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>.  \\n  \\n As an alternative, you can also use the <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> method to create an enumerator that can be used to access the items in the collection.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \\n  \\n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/58422549-a31a-41f3-a6a6-_1.aspx)]\\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/58422549-a31a-41f3-a6a6-_1.aspx)]\"\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: A zero-based &lt;xref:System.Array?displayProperty=fullName&gt; object that receives the copied items from the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The position in the target array at which to start receiving the copied content.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>array</code> is not an array of <xref href=\"System.Web.UI.WebControls.TreeNode\"></xref> objects.\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  id: System#Web#UI#IStateManager#IsTrackingViewState\n  isEii: true\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object is saving changes to its view state.\n  syntax:\n    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the control is marked to save its state; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  id: System#Web#UI#IStateManager#LoadViewState(System.Object)\n  isEii: true\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.LoadViewState(Object)\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Loads the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> object's previously saved view state.\n  syntax:\n    content: void IStateManager.LoadViewState (object state);\n    parameters:\n    - id: state\n      type: System.Object\n      description: A &lt;xref:System.Object?displayProperty=fullName&gt; that contains the saved view state values.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState\n  id: System#Web#UI#IStateManager#SaveViewState\n  isEii: true\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.SaveViewState()\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Saves the changes to view state to a &lt;xref:System.Object?displayProperty=fullName&gt;.\n  syntax:\n    content: object IStateManager.SaveViewState ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The &lt;xref:System.Object?displayProperty=fullName&gt; that contains the view state changes.\n  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState\n  id: System#Web#UI#IStateManager#TrackViewState\n  isEii: true\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  langs:\n  - csharp\n  name: System.Web.UI.IStateManager.TrackViewState()\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Instructs the <xref href=\"System.Web.UI.WebControls.TreeNodeCollection\"></xref> to track changes to its view state.\n  remarks: After this method has been called on a server control, the <xref:System.Web.UI.Control.IsTrackingViewState%2A> property will return `true`.\n  syntax:\n    content: void IStateManager.TrackViewState ();\n    parameters: []\n  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: TreeNodeCollection()\n  nameWithType: TreeNodeCollection.TreeNodeCollection()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()\n- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: TreeNodeCollection(TreeNode)\n  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)\n- uid: System.Web.UI.WebControls.TreeNode\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: TreeNode\n  nameWithType: TreeNode\n  fullName: System.Web.UI.WebControls.TreeNode\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Add(TreeNode)\n  nameWithType: TreeNodeCollection.Add(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)\n- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: AddAt(Int32,TreeNode)\n  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TreeNodeCollection.Clear()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Contains(TreeNode)\n  nameWithType: TreeNodeCollection.Contains(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: CopyTo(TreeNode[],Int32)\n  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)\n- uid: System.Web.UI.WebControls.TreeNode[]\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: TreeNode\n  nameWithType: TreeNode\n  fullName: System.Web.UI.WebControls.TreeNode[]\n  spec.csharp:\n  - uid: System.Web.UI.WebControls.TreeNode\n    name: TreeNode\n    nameWithType: TreeNode\n    fullName: TreeNode[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Count\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Count\n  nameWithType: TreeNodeCollection.Count\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count\n- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TreeNodeCollection.GetEnumerator()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: IndexOf(TreeNode)\n  nameWithType: TreeNodeCollection.IndexOf(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)\n- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: TreeNodeCollection.IsSynchronized\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TreeNodeCollection.Item(Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Remove(TreeNode)\n  nameWithType: TreeNodeCollection.Remove(TreeNode)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)\n- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: TreeNodeCollection.RemoveAt(Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)\n- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: TreeNodeCollection.SyncRoot\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState(Object)\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState()\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState()\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()\n  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()\n- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: TreeNodeCollection\n  nameWithType: TreeNodeCollection.TreeNodeCollection\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Add*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Add\n  nameWithType: TreeNodeCollection.Add\n- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: AddAt\n  nameWithType: TreeNodeCollection.AddAt\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Clear\n  nameWithType: TreeNodeCollection.Clear\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Contains\n  nameWithType: TreeNodeCollection.Contains\n- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: TreeNodeCollection.CopyTo\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Count*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Count\n  nameWithType: TreeNodeCollection.Count\n- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: TreeNodeCollection.GetEnumerator\n- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: TreeNodeCollection.IndexOf\n- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: TreeNodeCollection.IsSynchronized\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Item*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Item\n  nameWithType: TreeNodeCollection.Item\n- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: Remove\n  nameWithType: TreeNodeCollection.Remove\n- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: TreeNodeCollection.RemoveAt\n- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: TreeNodeCollection.SyncRoot\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.IsTrackingViewState\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.LoadViewState\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.SaveViewState\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState\n- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*\n  parent: System.Web.UI.WebControls.TreeNodeCollection\n  isExternal: false\n  name: System.Web.UI.IStateManager.TrackViewState\n  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState\n"}