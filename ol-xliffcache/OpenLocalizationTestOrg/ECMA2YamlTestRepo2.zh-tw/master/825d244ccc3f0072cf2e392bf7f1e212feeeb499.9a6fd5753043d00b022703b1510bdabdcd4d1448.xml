{"nodes":[{"pos":[391,761],"content":"Wraps the COM+ <xref uid=\"langword_csharp_ByotServerEx\" name=\"ByotServerEx\" href=\"\"></xref> class and the COM+ DTC interfaces <xref uid=\"langword_csharp_ICreateWithTransactionEx\" name=\"ICreateWithTransactionEx\" href=\"\"></xref> and <xref uid=\"langword_csharp_ICreateWithTipTransactionEx\" name=\"ICreateWithTipTransactionEx\" href=\"\"></xref>. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Wraps the COM+ <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_ByotServerEx\" name=\"ByotServerEx\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and the COM+ DTC interfaces <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_ICreateWithTransactionEx\" name=\"ICreateWithTransactionEx\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_ICreateWithTipTransactionEx\" name=\"ICreateWithTipTransactionEx\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,338],"source":"Wraps the COM+ <xref uid=\"langword_csharp_ByotServerEx\" name=\"ByotServerEx\" href=\"\"></xref> class and the COM+ DTC interfaces <xref uid=\"langword_csharp_ICreateWithTransactionEx\" name=\"ICreateWithTransactionEx\" href=\"\"></xref> and <xref uid=\"langword_csharp_ICreateWithTipTransactionEx\" name=\"ICreateWithTipTransactionEx\" href=\"\"></xref>."},{"content":"This class cannot be inherited.","pos":[339,370]}]},{"pos":[774,1758],"content":"BYOT (Bring Your Own Transaction) allows a component to be created with or to inherit an external transaction. That is, a component that does not already have an associated transaction can acquire a transaction. COM+ allows setting an arbitrary pre-existing Distributed Transaction Coordinator (DTC) or Transaction Internet Protocol (TIP) transaction as the transaction property of a new component's context. This allows COM+ components to be associated with transactions whose lifetimes are controlled by a transaction processing (TP) monitor, Object/Task Selector (OTS), or database management system (DBMS).       BYOT transactions must be used with caution. In certain situations, they can result in a transaction spanning multiple synchronization domains—that is, they allow parallelism with another transaction, causing a deadlock condition.       Automatic transactions, rather than BYOT transactions, are the preferred programming model for writers of business components.","needQuote":false,"needEscape":true,"nodes":[{"content":"BYOT (Bring Your Own Transaction) allows a component to be created with or to inherit an external transaction. That is, a component that does not already have an associated transaction can acquire a transaction. COM+ allows setting an arbitrary pre-existing Distributed Transaction Coordinator (DTC) or Transaction Internet Protocol (TIP) transaction as the transaction property of a new component's context. This allows COM+ components to be associated with transactions whose lifetimes are controlled by a transaction processing (TP) monitor, Object/Task Selector (OTS), or database management system (DBMS).       BYOT transactions must be used with caution. In certain situations, they can result in a transaction spanning multiple synchronization domains—that is, they allow parallelism with another transaction, causing a deadlock condition.       Automatic transactions, rather than BYOT transactions, are the preferred programming model for writers of business components.","pos":[0,980],"nodes":[{"content":"BYOT (Bring Your Own Transaction) allows a component to be created with or to inherit an external transaction.","pos":[0,110]},{"content":"That is, a component that does not already have an associated transaction can acquire a transaction.","pos":[111,211]},{"content":"COM+ allows setting an arbitrary pre-existing Distributed Transaction Coordinator (DTC) or Transaction Internet Protocol (TIP) transaction as the transaction property of a new component's context.","pos":[212,408]},{"content":"This allows COM+ components to be associated with transactions whose lifetimes are controlled by a transaction processing (TP) monitor, Object/Task Selector (OTS), or database management system (DBMS).","pos":[409,610]},{"content":"BYOT transactions must be used with caution.","pos":[617,661]},{"content":"In certain situations, they can result in a transaction spanning multiple synchronization domains—that is, they allow parallelism with another transaction, causing a deadlock condition.","pos":[662,847]},{"content":"Automatic transactions, rather than BYOT transactions, are the preferred programming model for writers of business components.","pos":[854,980]}]}]},{"pos":[2408,2517],"content":"Creates an object that is enlisted within a manual transaction using the Transaction Internet Protocol (TIP).","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that is enlisted within a manual transaction using the Transaction Internet Protocol (TIP).","pos":[0,109]}]},{"pos":[2529,2653],"content":"CreateWithTipTransaction performs the managed equivalent of the COM+ DTC method <ph id=\"ph1\">`ICreateWithTIPTransaction::CreateInstance`</ph>.","needQuote":true,"needEscape":true,"source":"CreateWithTipTransaction performs the managed equivalent of the COM+ DTC method `ICreateWithTIPTransaction::CreateInstance`."},{"pos":[2820,2859],"content":"A TIP URL that specifies a transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"A TIP URL that specifies a transaction.","pos":[0,39]}]},{"pos":[2915,2924],"content":"The type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type.","pos":[0,9]}]},{"pos":[2982,3008],"content":"The requested transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested transaction.","pos":[0,26]}]},{"pos":[3607,3670],"content":"Creates an object that is enlisted within a manual transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an object that is enlisted within a manual transaction.","pos":[0,63]}]},{"pos":[3682,3838],"content":"CreateWithTransaction performs the managed equivalent of the COM+ Distributed Transaction Coordinator (DTC) method <ph id=\"ph1\">`ICreateWithTransaction::CreateInstance`</ph>.","needQuote":true,"needEscape":true,"source":"CreateWithTransaction performs the managed equivalent of the COM+ Distributed Transaction Coordinator (DTC) method `ICreateWithTransaction::CreateInstance`."},{"pos":[4018,4174],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ITransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object that specifies a transaction.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.EnterpriseServices.ITransaction\"></xref> or <xref href=\"System.Transactions.Transaction\"></xref> object that specifies a transaction."},{"pos":[4230,4249],"content":"The specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified type.","pos":[0,19]}]},{"pos":[4307,4333],"content":"The requested transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested transaction.","pos":[0,26]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.BYOT\n  id: BYOT\n  children:\n  - System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)\n  - System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)\n  langs:\n  - csharp\n  name: BYOT\n  nameWithType: BYOT\n  fullName: System.EnterpriseServices.BYOT\n  type: Class\n  summary: Wraps the COM+ <xref uid=\"langword_csharp_ByotServerEx\" name=\"ByotServerEx\" href=\"\"></xref> class and the COM+ DTC interfaces <xref uid=\"langword_csharp_ICreateWithTransactionEx\" name=\"ICreateWithTransactionEx\" href=\"\"></xref> and <xref uid=\"langword_csharp_ICreateWithTipTransactionEx\" name=\"ICreateWithTipTransactionEx\" href=\"\"></xref>. This class cannot be inherited.\n  remarks: \"BYOT (Bring Your Own Transaction) allows a component to be created with or to inherit an external transaction. That is, a component that does not already have an associated transaction can acquire a transaction. COM+ allows setting an arbitrary pre-existing Distributed Transaction Coordinator (DTC) or Transaction Internet Protocol (TIP) transaction as the transaction property of a new component's context. This allows COM+ components to be associated with transactions whose lifetimes are controlled by a transaction processing (TP) monitor, Object/Task Selector (OTS), or database management system (DBMS).  \\n  \\n BYOT transactions must be used with caution. In certain situations, they can result in a transaction spanning multiple synchronization domains—that is, they allow parallelism with another transaction, causing a deadlock condition.  \\n  \\n Automatic transactions, rather than BYOT transactions, are the preferred programming model for writers of business components.\"\n  syntax:\n    content: public sealed class BYOT\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)\n  id: CreateWithTipTransaction(System.String,System.Type)\n  parent: System.EnterpriseServices.BYOT\n  langs:\n  - csharp\n  name: CreateWithTipTransaction(String,Type)\n  nameWithType: BYOT.CreateWithTipTransaction(String,Type)\n  fullName: System.EnterpriseServices.BYOT.CreateWithTipTransaction(String,Type)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Creates an object that is enlisted within a manual transaction using the Transaction Internet Protocol (TIP).\n  remarks: CreateWithTipTransaction performs the managed equivalent of the COM+ DTC method `ICreateWithTIPTransaction::CreateInstance`.\n  syntax:\n    content: public static object CreateWithTipTransaction (string url, Type t);\n    parameters:\n    - id: url\n      type: System.String\n      description: A TIP URL that specifies a transaction.\n    - id: t\n      type: System.Type\n      description: The type.\n    return:\n      type: System.Object\n      description: The requested transaction.\n  overload: System.EnterpriseServices.BYOT.CreateWithTipTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)\n  id: CreateWithTransaction(System.Object,System.Type)\n  parent: System.EnterpriseServices.BYOT\n  langs:\n  - csharp\n  name: CreateWithTransaction(Object,Type)\n  nameWithType: BYOT.CreateWithTransaction(Object,Type)\n  fullName: System.EnterpriseServices.BYOT.CreateWithTransaction(Object,Type)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Creates an object that is enlisted within a manual transaction.\n  remarks: CreateWithTransaction performs the managed equivalent of the COM+ Distributed Transaction Coordinator (DTC) method `ICreateWithTransaction::CreateInstance`.\n  syntax:\n    content: public static object CreateWithTransaction (object transaction, Type t);\n    parameters:\n    - id: transaction\n      type: System.Object\n      description: The <xref href=\"System.EnterpriseServices.ITransaction\"></xref> or <xref href=\"System.Transactions.Transaction\"></xref> object that specifies a transaction.\n    - id: t\n      type: System.Type\n      description: The specified type.\n    return:\n      type: System.Object\n      description: The requested transaction.\n  overload: System.EnterpriseServices.BYOT.CreateWithTransaction*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)\n  parent: System.EnterpriseServices.BYOT\n  isExternal: false\n  name: CreateWithTipTransaction(String,Type)\n  nameWithType: BYOT.CreateWithTipTransaction(String,Type)\n  fullName: System.EnterpriseServices.BYOT.CreateWithTipTransaction(String,Type)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)\n  parent: System.EnterpriseServices.BYOT\n  isExternal: false\n  name: CreateWithTransaction(Object,Type)\n  nameWithType: BYOT.CreateWithTransaction(Object,Type)\n  fullName: System.EnterpriseServices.BYOT.CreateWithTransaction(Object,Type)\n- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction*\n  parent: System.EnterpriseServices.BYOT\n  isExternal: false\n  name: CreateWithTipTransaction\n  nameWithType: BYOT.CreateWithTipTransaction\n- uid: System.EnterpriseServices.BYOT.CreateWithTransaction*\n  parent: System.EnterpriseServices.BYOT\n  isExternal: false\n  name: CreateWithTransaction\n  nameWithType: BYOT.CreateWithTransaction\n"}