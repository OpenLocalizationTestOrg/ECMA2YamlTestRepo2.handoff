{"nodes":[{"pos":[2228,2305],"content":"Provides support for reading and writing metadata to and from a bitmap image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides support for reading and writing metadata to and from a bitmap image.","pos":[0,77]}]},{"pos":[2318,3650],"content":"Metadata that is associated with an image is data that describes the image but is not necessary to display the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.       [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].       If a BitmapMetadata is exposed by a <xref:System.Windows.Media.Imaging.BitmapFrame> that is obtained by using a <xref:System.Windows.Media.Imaging.BitmapDecoder>, it is read-only by default and mutable operations will throw an exception. If it is exposed by a <xref:System.Windows.Media.Imaging.BitmapFrame> that wraps another <xref:System.Windows.Media.Imaging.BitmapSource>, it is mutable on construction.       The <xref:System.Windows.Media.Imaging.BitmapMetadata.SetQuery%2A> and <xref:System.Windows.Media.Imaging.BitmapMetadata.GetQuery%2A> methods can be used to construct and read metadata queries.","needQuote":false,"needEscape":true,"nodes":[{"content":"Metadata that is associated with an image is data that describes the image but is not necessary to display the image.","pos":[0,117]},{"content":"Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.","pos":[118,245]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> supports the following image metadata schemas: <ph id=\"ph2\">[!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)]</ph>, tEXt (<ph id=\"ph3\">[!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)]</ph> Textual Data), <ph id=\"ph4\">[!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)]</ph>, <ph id=\"ph5\">[!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)]</ph>, and <ph id=\"ph6\">[!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]</ph>.","pos":[252,712],"source":"[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]."},{"content":"If a BitmapMetadata is exposed by a &lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt; that is obtained by using a &lt;xref:System.Windows.Media.Imaging.BitmapDecoder&gt;, it is read-only by default and mutable operations will throw an exception.","pos":[719,956],"source":"       If a BitmapMetadata is exposed by a <xref:System.Windows.Media.Imaging.BitmapFrame> that is obtained by using a <xref:System.Windows.Media.Imaging.BitmapDecoder>, it is read-only by default and mutable operations will throw an exception."},{"content":"If it is exposed by a &lt;xref:System.Windows.Media.Imaging.BitmapFrame&gt; that wraps another &lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;, it is mutable on construction.","pos":[957,1126],"source":" If it is exposed by a <xref:System.Windows.Media.Imaging.BitmapFrame> that wraps another <xref:System.Windows.Media.Imaging.BitmapSource>, it is mutable on construction."},{"content":"The &lt;xref:System.Windows.Media.Imaging.BitmapMetadata.SetQuery%2A&gt; and &lt;xref:System.Windows.Media.Imaging.BitmapMetadata.GetQuery%2A&gt; methods can be used to construct and read metadata queries.","pos":[1133,1326],"source":"       The <xref:System.Windows.Media.Imaging.BitmapMetadata.SetQuery%2A> and <xref:System.Windows.Media.Imaging.BitmapMetadata.GetQuery%2A> methods can be used to construct and read metadata queries."}]},{"pos":[7317,7452],"content":"Initializes a new instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for use with the specified image format.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> for use with the specified image format."},{"pos":[8061,8137],"content":"The format of the bitmap image, specified as \"gif\", \"jpg\", \"png\", or \"tiff\".","needQuote":true,"needEscape":true,"nodes":[{"content":"The format of the bitmap image, specified as \"gif\", \"jpg\", \"png\", or \"tiff\".","pos":[0,76]}]},{"pos":[8317,8410],"content":"<ph id=\"ph1\">&lt;code&gt;containerFormat&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>containerFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8845,8960],"content":"Gets or sets a value that identifies the name of the application that was used to construct or alter an image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that identifies the name of the application that was used to construct or alter an image file.","pos":[0,115]}]},{"pos":[9474,9552],"content":"The name of the application that was used to construct or alter an image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the application that was used to construct or alter an image file.","pos":[0,78]}]},{"pos":[10032,10092],"content":"Gets or sets a value that represents the author of an image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that represents the author of an image.","pos":[0,60]}]},{"pos":[10699,10723],"content":"The author of the image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The author of the image.","pos":[0,24]}]},{"pos":[11254,11348],"content":"Gets or sets a value that identifies the camera manufacturer that is associated with an image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that identifies the camera manufacturer that is associated with an image.","pos":[0,94]}]},{"pos":[11865,11922],"content":"The camera manufacturer that is associated with an image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The camera manufacturer that is associated with an image.","pos":[0,57]}]},{"pos":[12430,12519],"content":"Gets or sets a value that identifies the camera model that was used to capture the image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that identifies the camera model that was used to capture the image.","pos":[0,89]}]},{"pos":[13029,13081],"content":"The camera model that was used to capture the image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The camera model that was used to capture the image.","pos":[0,52]}]},{"pos":[13556,13700],"content":"Creates a modifiable clone of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, making deep copies of this object's values.","needQuote":true,"needEscape":true,"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>, making deep copies of this object's values."},{"pos":[13713,14201],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.       When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.       When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[0,484],"nodes":[{"content":"This method is used to produce modifiable copies of frozen &lt;xref:System.Windows.Freezable&gt; objects (or any &lt;xref:System.Windows.Freezable&gt; object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version.","pos":[148,207]},{"content":"For more information, see &lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;.","pos":[214,306],"source":"       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[313,484]}]}]},{"pos":[14393,14709],"content":"A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>","needQuote":true,"needEscape":true,"nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's &lt;xref:System.Windows.Freezable.IsFrozen<bpt id=\"p1\">*</bpt>&gt; property is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> even if the source's &lt;xref:System.Windows.Freezable.IsFrozen<ept id=\"p1\">*</ept>&gt; property is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>","pos":[42,316],"source":" The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>"}]},{"pos":[15277,15391],"content":"Makes this instance a deep copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>."},{"pos":[15404,16027],"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.       When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.       When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[0,619],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.Clone%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,200],"source":"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.Clone%2A&gt; instead of calling this method directly.","pos":[201,338],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName&gt;.","pos":[345,441],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[448,619]}]}]},{"pos":[16228,16306],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> to clone."},{"pos":[16938,17190],"content":"Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a modifiable deep copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using current property values.","pos":[0,155],"source":"Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> using current property values."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[156,252]}]},{"pos":[17203,17682],"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.","pos":[0,477],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,212],"source":"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call &lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt; instead of calling this method directly.","pos":[213,362],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName&gt;.","pos":[369,477],"source":"       For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>."}]}]},{"pos":[17895,17973],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to clone.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> to clone."},{"pos":[18464,18550],"content":"Gets or sets a value that represents a comment that is associated with the image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that represents a comment that is associated with the image file.","pos":[0,86]}]},{"pos":[19056,19105],"content":"A comment that is associated with the image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"A comment that is associated with the image file.","pos":[0,49]}]},{"pos":[19664,19792],"content":"Determines whether a given query string exists within a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Determines whether a given query string exists within a <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object."},{"pos":[19805,20528],"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.       [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image.","pos":[0,126]},{"content":"Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.","pos":[127,254]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> supports the following image metadata schemas: <ph id=\"ph2\">[!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)]</ph>, tEXt (<ph id=\"ph3\">[!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)]</ph> Textual Data), <ph id=\"ph4\">[!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)]</ph>, <ph id=\"ph5\">[!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)]</ph>, and <ph id=\"ph6\">[!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]</ph>.","pos":[261,721],"source":"[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]."}]},{"pos":[20672,20803],"content":"Identifies the string that is being queried in the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Identifies the string that is being queried in the current <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object."},{"pos":[20862,21053],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the query string is found within the metadata store; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the query string is found within the metadata store; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[21241,21324],"content":"<ph id=\"ph1\">&lt;code&gt;query&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21729,21826],"content":"Gets or sets a value that indicates copyright information that is associated with the image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates copyright information that is associated with the image file.","pos":[0,97]}]},{"pos":[22334,22399],"content":"The copyright information that is associated with the image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The copyright information that is associated with the image file.","pos":[0,65]}]},{"pos":[22937,23006],"content":"An Implementation of <xref:System.Windows.Freezable.CreateInstance*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An Implementation of &lt;xref:System.Windows.Freezable.CreateInstance*&gt;.","pos":[0,69],"source":"An Implementation of <xref:System.Windows.Freezable.CreateInstance*>."}]},{"pos":[23184,23201],"content":"The new instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new instance.","pos":[0,17]}]},{"pos":[23699,23769],"content":"Gets or sets a value that indicates the date that the image was taken.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the date that the image was taken.","pos":[0,70]}]},{"pos":[24277,24311],"content":"The date that the image was taken.","needQuote":true,"needEscape":true,"nodes":[{"content":"The date that the image was taken.","pos":[0,34]}]},{"pos":[24785,24838],"content":"Gets a value that identifies the format of the image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the format of the image.","pos":[0,53]}]},{"pos":[25379,25410],"content":"The format of the bitmap image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format of the bitmap image.","pos":[0,31]}]},{"pos":[26009,26126],"content":"Makes this instance a clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Makes this instance a clone of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object."},{"pos":[26139,27001],"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.","pos":[0,858],"nodes":[{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[0,171]},{"content":"Note that if these properties contain resource references or data bindings, &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; will fail when trying to freeze the object and will throw an &lt;xref:System.InvalidOperationException&gt;.","pos":[172,396],"source":" Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>."},{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[403,609],"source":"       This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt; instead of calling this method directly.","pos":[610,749],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName&gt;.","pos":[756,858],"source":"       For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>."}]}]},{"pos":[27208,27304],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to clone and freeze.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object to clone and freeze."},{"pos":[27972,28186],"content":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>. Resource references, data bindings, and animations are not copied, but their current values are.","needQuote":true,"needEscape":true,"nodes":[{"content":"Makes this instance a frozen clone of the specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,117],"source":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>."},{"content":"Resource references, data bindings, and animations are not copied, but their current values are.","pos":[118,214]}]},{"pos":[28199,28692],"content":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.       For more information, see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.","pos":[0,491],"nodes":[{"content":"This method is called by the &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,218],"source":"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt; instead of calling this method directly.","pos":[219,370],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly."},{"content":"For more information, see &lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName&gt;.","pos":[377,491],"source":"       For more information, see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>."}]}]},{"pos":[28911,28999],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to copy and freeze.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> to copy and freeze."},{"pos":[29553,29647],"content":"Provides access to a metadata query reader that can extract metadata from a bitmap image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to a metadata query reader that can extract metadata from a bitmap image file.","pos":[0,94]}]},{"pos":[29660,30383],"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.       [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image.","pos":[0,126]},{"content":"Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.","pos":[127,254]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> supports the following image metadata schemas: <ph id=\"ph2\">[!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)]</ph>, tEXt (<ph id=\"ph3\">[!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)]</ph> Textual Data), <ph id=\"ph4\">[!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)]</ph>, <ph id=\"ph5\">[!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)]</ph>, and <ph id=\"ph6\">[!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]</ph>.","pos":[261,721],"source":"[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]."}]},{"pos":[31528,31659],"content":"Identifies the string that is being queried in the current <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Identifies the string that is being queried in the current <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object."},{"pos":[31717,31762],"content":"The metadata at the specified query location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata at the specified query location.","pos":[0,45]}]},{"pos":[31945,32028],"content":"<ph id=\"ph1\">&lt;code&gt;query&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32443,32572],"content":"Gets a value that determines whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is a fixed size.","needQuote":true,"needEscape":true,"source":"Gets a value that determines whether the <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object is a fixed size."},{"pos":[33117,33426],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a fixed size; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,224],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[225,309],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[33922,34017],"content":"Gets a value that indicates whether the metadata that is associated with an image is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the metadata that is associated with an image is read-only.","pos":[0,95]}]},{"pos":[34561,34811],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the metadata is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the metadata is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,165],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the metadata is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[166,250],"source":" The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[35296,35365],"content":"Gets or sets a collection of keywords that describe the bitmap image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a collection of keywords that describe the bitmap image.","pos":[0,69]}]},{"pos":[35585,35619],"content":"A read-only collection of strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"A read-only collection of strings.","pos":[0,34]}]},{"pos":[36102,36198],"content":"Gets a value that identifies the base location of the metadata that is associated with an image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that identifies the base location of the metadata that is associated with an image.","pos":[0,96]}]},{"pos":[36741,36781],"content":"The base location of the image metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base location of the image metadata.","pos":[0,40]}]},{"pos":[37254,37308],"content":"Gets or sets a value that identifies the image rating.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that identifies the image rating.","pos":[0,54]}]},{"pos":[37420,37453],"content":"The rating value between 0 and 5.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rating value between 0 and 5.","pos":[0,33]}]},{"pos":[38001,38111],"content":"Removes a metadata query from an instance of <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Removes a metadata query from an instance of <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>."},{"pos":[38124,38847],"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.       [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image.","pos":[0,126]},{"content":"Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.","pos":[127,254]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> supports the following image metadata schemas: <ph id=\"ph2\">[!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)]</ph>, tEXt (<ph id=\"ph3\">[!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)]</ph> Textual Data), <ph id=\"ph4\">[!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)]</ph>, <ph id=\"ph5\">[!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)]</ph>, and <ph id=\"ph6\">[!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]</ph>.","pos":[261,721],"source":"[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]."}]},{"pos":[38989,39018],"content":"The metadata query to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata query to remove.","pos":[0,29]}]},{"pos":[39204,39287],"content":"<ph id=\"ph1\">&lt;code&gt;query&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[39398,39438],"content":"Occurs when image metadata is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when image metadata is read-only.","pos":[0,40]}]},{"pos":[39939,40029],"content":"Provides access to a metadata query writer that can write metadata to a bitmap image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to a metadata query writer that can write metadata to a bitmap image file.","pos":[0,90]}]},{"pos":[40042,40765],"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.       [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].","needQuote":false,"needEscape":true,"nodes":[{"content":"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image.","pos":[0,126]},{"content":"Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.","pos":[127,254]},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> supports the following image metadata schemas: <ph id=\"ph2\">[!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)]</ph>, tEXt (<ph id=\"ph3\">[!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)]</ph> Textual Data), <ph id=\"ph4\">[!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)]</ph>, <ph id=\"ph5\">[!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)]</ph>, and <ph id=\"ph6\">[!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]</ph>.","pos":[261,721],"source":"[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)]."}]},{"pos":[41922,41976],"content":"Identifies the location of the metadata to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the location of the metadata to be written.","pos":[0,54]}]},{"pos":[42038,42078],"content":"The value of the metadata to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the metadata to be written.","pos":[0,40]}]},{"pos":[42556,42631],"content":"Gets or sets a value that indicates the subject matter of the bitmap image.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates the subject matter of the bitmap image.","pos":[0,75]}]},{"pos":[43137,43169],"content":"The subject of the bitmap image.","needQuote":true,"needEscape":true,"nodes":[{"content":"The subject of the bitmap image.","pos":[0,32]}]},{"pos":[44090,44102],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44842,44966],"content":"For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,124],"source":"For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."}]},{"pos":[44978,45189],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Media.Imaging.BitmapMetadata> instance is cast to an <xref:System.Collections.IEnumerable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Media.Imaging.BitmapMetadata> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,211],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Media.Imaging.BitmapMetadata&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.","pos":[60,211],"source":" It can be used only when the <xref:System.Windows.Media.Imaging.BitmapMetadata> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]},{"pos":[45367,45466],"content":"An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; object that can be used to iterate through the collection.","pos":[0,99],"source":"An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection."}]},{"pos":[45970,46034],"content":"Gets or sets a value that identifies the title of an image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that identifies the title of an image file.","pos":[0,64]}]},{"pos":[46538,46565],"content":"The title of an image file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The title of an image file.","pos":[0,27]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Imaging.BitmapMetadata\n  id: BitmapMetadata\n  children:\n  - System.Windows.Media.Imaging.BitmapMetadata.#ctor(System.String)\n  - System.Windows.Media.Imaging.BitmapMetadata.ApplicationName\n  - System.Windows.Media.Imaging.BitmapMetadata.Author\n  - System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer\n  - System.Windows.Media.Imaging.BitmapMetadata.CameraModel\n  - System.Windows.Media.Imaging.BitmapMetadata.Clone\n  - System.Windows.Media.Imaging.BitmapMetadata.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.Imaging.BitmapMetadata.Comment\n  - System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(System.String)\n  - System.Windows.Media.Imaging.BitmapMetadata.Copyright\n  - System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore\n  - System.Windows.Media.Imaging.BitmapMetadata.DateTaken\n  - System.Windows.Media.Imaging.BitmapMetadata.Format\n  - System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Imaging.BitmapMetadata.GetQuery(System.String)\n  - System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize\n  - System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly\n  - System.Windows.Media.Imaging.BitmapMetadata.Keywords\n  - System.Windows.Media.Imaging.BitmapMetadata.Location\n  - System.Windows.Media.Imaging.BitmapMetadata.Rating\n  - System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(System.String)\n  - System.Windows.Media.Imaging.BitmapMetadata.SetQuery(System.String,System.Object)\n  - System.Windows.Media.Imaging.BitmapMetadata.Subject\n  - System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator\n  - System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.Imaging.BitmapMetadata.Title\n  langs:\n  - csharp\n  name: BitmapMetadata\n  nameWithType: BitmapMetadata\n  fullName: System.Windows.Media.Imaging.BitmapMetadata\n  type: Class\n  summary: Provides support for reading and writing metadata to and from a bitmap image.\n  remarks: \"Metadata that is associated with an image is data that describes the image but is not necessary to display the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.  \\n  \\n [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].  \\n  \\n If a BitmapMetadata is exposed by a <xref:System.Windows.Media.Imaging.BitmapFrame> that is obtained by using a <xref:System.Windows.Media.Imaging.BitmapDecoder>, it is read-only by default and mutable operations will throw an exception. If it is exposed by a <xref:System.Windows.Media.Imaging.BitmapFrame> that wraps another <xref:System.Windows.Media.Imaging.BitmapSource>, it is mutable on construction.  \\n  \\n The <xref:System.Windows.Media.Imaging.BitmapMetadata.SetQuery%2A> and <xref:System.Windows.Media.Imaging.BitmapMetadata.GetQuery%2A> methods can be used to construct and read metadata queries.\"\n  example:\n  - \"The following example demonstrates how to write metadata to a [!INCLUDE[TLA#tla_tiff](~/add/includes/tlasharptla-tiff-md.md)] image by using the IFD and [!INCLUDE[TLA2#tla_exif](~/add/includes/tla2sharptla-exif-md.md)] schemas.  \\n  \\n [!code-vb[BitmapFrameExample#7](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#7)]\\n [!code-cs[BitmapFrameExample#7](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#7)]\"\n  syntax:\n    content: 'public class BitmapMetadata : System.Windows.Media.ImageMetadata, System.Collections.Generic.IEnumerable<string>'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.ImageMetadata\n  implements:\n  - System.Collections.Generic.IEnumerable<System.String>\n  inheritedMembers:\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: BitmapMetadata(String)\n  nameWithType: BitmapMetadata.BitmapMetadata(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadata(String)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Initializes a new instance of <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> for use with the specified image format.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to write metadata to a [!INCLUDE[TLA#tla_tiff](~/add/includes/tlasharptla-tiff-md.md)] image by using the IFD and [!INCLUDE[TLA2#tla_exif](~/add/includes/tla2sharptla-exif-md.md)] schemas.  \\n  \\n [!code-vb[BitmapFrameExample#7](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#7)]\\n [!code-cs[BitmapFrameExample#7](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#7)]\"\n  syntax:\n    content: public BitmapMetadata (string containerFormat);\n    parameters:\n    - id: containerFormat\n      type: System.String\n      description: The format of the bitmap image, specified as \"gif\", \"jpg\", \"png\", or \"tiff\".\n  overload: System.Windows.Media.Imaging.BitmapMetadata.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>containerFormat</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.ApplicationName\n  id: ApplicationName\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: BitmapMetadata.ApplicationName\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.ApplicationName\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that identifies the name of the application that was used to construct or alter an image file.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: The name of the application that was used to construct or alter an image file.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.ApplicationName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Author\n  id: Author\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Author\n  nameWithType: BitmapMetadata.Author\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Author\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that represents the author of an image.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> Author { get; set; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: The author of the image.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Author*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer\n  id: CameraManufacturer\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: CameraManufacturer\n  nameWithType: BitmapMetadata.CameraManufacturer\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that identifies the camera manufacturer that is associated with an image.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string CameraManufacturer { get; set; }\n    return:\n      type: System.String\n      description: The camera manufacturer that is associated with an image.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CameraModel\n  id: CameraModel\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: CameraModel\n  nameWithType: BitmapMetadata.CameraModel\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CameraModel\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that identifies the camera model that was used to capture the image.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string CameraModel { get; set; }\n    return:\n      type: System.String\n      description: The camera model that was used to capture the image.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.CameraModel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Clone\n  id: Clone\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BitmapMetadata.Clone()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>, making deep copies of this object's values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.  \\n  \\n When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\"\n  syntax:\n    content: public System.Windows.Media.Imaging.BitmapMetadata Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Imaging.BitmapMetadata\n      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> even if the source's <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=\"langword_csharp_true.\" name=\"true.\" href=\"\"></xref>\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: BitmapMetadata.CloneCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Makes this instance a deep copy of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>.  \\n  \\n When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\"\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> to clone.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.CloneCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: BitmapMetadata.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Makes this instance a modifiable deep copy of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> to clone.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Comment\n  id: Comment\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Comment\n  nameWithType: BitmapMetadata.Comment\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Comment\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that represents a comment that is associated with the image file.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string Comment { get; set; }\n    return:\n      type: System.String\n      description: A comment that is associated with the image file.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Comment*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(System.String)\n  id: ContainsQuery(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: ContainsQuery(String)\n  nameWithType: BitmapMetadata.ContainsQuery(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Determines whether a given query string exists within a <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object.\n  remarks: \"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.  \\n  \\n [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].\"\n  syntax:\n    content: public bool ContainsQuery (string query);\n    parameters:\n    - id: query\n      type: System.String\n      description: Identifies the string that is being queried in the current <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the query string is found within the metadata store; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Copyright\n  id: Copyright\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Copyright\n  nameWithType: BitmapMetadata.Copyright\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Copyright\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that indicates copyright information that is associated with the image file.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string Copyright { get; set; }\n    return:\n      type: System.String\n      description: The copyright information that is associated with the image file.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Copyright*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BitmapMetadata.CreateInstanceCore()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: An Implementation of <xref:System.Windows.Freezable.CreateInstance*>.\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.DateTaken\n  id: DateTaken\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: DateTaken\n  nameWithType: BitmapMetadata.DateTaken\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.DateTaken\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that indicates the date that the image was taken.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string DateTaken { get; set; }\n    return:\n      type: System.String\n      description: The date that the image was taken.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.DateTaken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Format\n  id: Format\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Format\n  nameWithType: BitmapMetadata.Format\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Format\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the format of the image.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to read various properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> object and send their values to a <xref:System.Windows.MessageBox> as strings.  \\n  \\n [!code-vb[BitmapFrameExample#9](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#9)]\\n [!code-cs[BitmapFrameExample#9](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#9)]\"\n  syntax:\n    content: public string Format { get; }\n    return:\n      type: System.String\n      description: The format of the bitmap image.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Format*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: BitmapMetadata.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Makes this instance a clone of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object.\n  remarks: \"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.  \\n  \\n This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object to clone and freeze.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: BitmapMetadata.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>. Resource references, data bindings, and animations are not copied, but their current values are.\n  remarks: \"This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.  \\n  \\n For more information, see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> to copy and freeze.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetQuery(System.String)\n  id: GetQuery(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: GetQuery(String)\n  nameWithType: BitmapMetadata.GetQuery(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.GetQuery(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Provides access to a metadata query reader that can extract metadata from a bitmap image file.\n  remarks: \"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.  \\n  \\n [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Media.Imaging.BitmapMetadata.SetQuery%2A> method to write metadata to a [!INCLUDE[TLA#tla_png](~/add/includes/tlasharptla-png-md.md)] file.  \\n  \\n [!code-cpp[bitmapmetadata#SetQuery](~/add/codesnippet/cpp/bitmapmetadata/BitmapMetadata.cpp#setquery)]\\n [!code-cs[bitmapmetadata#SetQuery](~/add/codesnippet/csharp/BitmapMetadata/BitmapMetadata.cs#setquery)]\\n [!code-vb[bitmapmetadata#SetQuery](~/add/codesnippet/visualbasic/BitmapMetadata/BitmapMetadata.vb#setquery)]  \\n  \\n After the metadata is written, the GetQuery method is used to read that data and emit it as a text string.  \\n  \\n [!code-cpp[bitmapmetadata#GetQuery](~/add/codesnippet/cpp/bitmapmetadata/BitmapMetadata.cpp#getquery)]\\n [!code-cs[bitmapmetadata#GetQuery](~/add/codesnippet/csharp/BitmapMetadata/BitmapMetadata.cs#getquery)]\\n [!code-vb[bitmapmetadata#GetQuery](~/add/codesnippet/visualbasic/BitmapMetadata/BitmapMetadata.vb#getquery)]\"\n  syntax:\n    content: public object GetQuery (string query);\n    parameters:\n    - id: query\n      type: System.String\n      description: Identifies the string that is being queried in the current <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object.\n    return:\n      type: System.Object\n      description: The metadata at the specified query location.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.GetQuery*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize\n  id: IsFixedSize\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: BitmapMetadata.IsFixedSize\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that determines whether the <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> object is a fixed size.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to read various properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> object and send their values to a <xref:System.Windows.MessageBox> as strings.  \\n  \\n [!code-vb[BitmapFrameExample#9](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#9)]\\n [!code-cs[BitmapFrameExample#9](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#9)]\"\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref> is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: BitmapMetadata.IsReadOnly\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that indicates whether the metadata that is associated with an image is read-only.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to read various properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> object and send their values to a <xref:System.Windows.MessageBox> as strings.  \\n  \\n [!code-vb[BitmapFrameExample#9](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#9)]\\n [!code-cs[BitmapFrameExample#9](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#9)]\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the metadata is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Keywords\n  id: Keywords\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Keywords\n  nameWithType: BitmapMetadata.Keywords\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Keywords\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a collection of keywords that describe the bitmap image.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> Keywords { get; set; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A read-only collection of strings.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Keywords*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Location\n  id: Location\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Location\n  nameWithType: BitmapMetadata.Location\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Location\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets a value that identifies the base location of the metadata that is associated with an image.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to read various properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> object and send their values to a <xref:System.Windows.MessageBox> as strings.  \\n  \\n [!code-vb[BitmapFrameExample#9](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#9)]\\n [!code-cs[BitmapFrameExample#9](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#9)]\"\n  syntax:\n    content: public string Location { get; }\n    return:\n      type: System.String\n      description: The base location of the image metadata.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Location*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Rating\n  id: Rating\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Rating\n  nameWithType: BitmapMetadata.Rating\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Rating\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that identifies the image rating.\n  syntax:\n    content: public int Rating { get; set; }\n    return:\n      type: System.Int32\n      description: The rating value between 0 and 5.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Rating*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(System.String)\n  id: RemoveQuery(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: RemoveQuery(String)\n  nameWithType: BitmapMetadata.RemoveQuery(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Removes a metadata query from an instance of <xref href=\"System.Windows.Media.Imaging.BitmapMetadata\"></xref>.\n  remarks: \"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.  \\n  \\n [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].\"\n  syntax:\n    content: public void RemoveQuery (string query);\n    parameters:\n    - id: query\n      type: System.String\n      description: The metadata query to remove.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Occurs when image metadata is read-only.\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.SetQuery(System.String,System.Object)\n  id: SetQuery(System.String,System.Object)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: SetQuery(String,Object)\n  nameWithType: BitmapMetadata.SetQuery(String,Object)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.SetQuery(String,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Provides access to a metadata query writer that can write metadata to a bitmap image file.\n  remarks: \"Metadata that is associated with an image is data that describes the image but that is not necessary for display of the image. Each supported bitmap image format handles metadata differently, but the facility for reading and writing metadata is the same.  \\n  \\n [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] supports the following image metadata schemas: [!INCLUDE[TLA#tla_exif](~/add/includes/tlasharptla-exif-md.md)], tEXt ([!INCLUDE[TLA2#tla_png](~/add/includes/tla2sharptla-png-md.md)] Textual Data), [!INCLUDE[TLA#tla_ifd](~/add/includes/tlasharptla-ifd-md.md)], [!INCLUDE[TLA#tla_iptc](~/add/includes/tlasharptla-iptc-md.md)], and [!INCLUDE[TLA#tla_xmp](~/add/includes/tlasharptla-xmp-md.md)].\"\n  example:\n  - \"The following code example demonstrates how to use the SetQuery method to write metadata to a [!INCLUDE[TLA#tla_png](~/add/includes/tlasharptla-png-md.md)] file.  \\n  \\n [!code-cpp[bitmapmetadata#SetQuery](~/add/codesnippet/cpp/bitmapmetadata/BitmapMetadata.cpp#setquery)]\\n [!code-cs[bitmapmetadata#SetQuery](~/add/codesnippet/csharp/BitmapMetadata/BitmapMetadata.cs#setquery)]\\n [!code-vb[bitmapmetadata#SetQuery](~/add/codesnippet/visualbasic/BitmapMetadata/BitmapMetadata.vb#setquery)]  \\n  \\n After the metadata is written, the <xref:System.Windows.Media.Imaging.BitmapMetadata.GetQuery%2A> method is used to read that data and emit it as a text string.  \\n  \\n [!code-cpp[bitmapmetadata#GetQuery](~/add/codesnippet/cpp/bitmapmetadata/BitmapMetadata.cpp#getquery)]\\n [!code-cs[bitmapmetadata#GetQuery](~/add/codesnippet/csharp/BitmapMetadata/BitmapMetadata.cs#getquery)]\\n [!code-vb[bitmapmetadata#GetQuery](~/add/codesnippet/visualbasic/BitmapMetadata/BitmapMetadata.vb#getquery)]\"\n  syntax:\n    content: public void SetQuery (string query, object value);\n    parameters:\n    - id: query\n      type: System.String\n      description: Identifies the location of the metadata to be written.\n    - id: value\n      type: System.Object\n      description: The value of the metadata to be written.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.SetQuery*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Subject\n  id: Subject\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Subject\n  nameWithType: BitmapMetadata.Subject\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Subject\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that indicates the subject matter of the bitmap image.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string Subject { get; set; }\n    return:\n      type: System.String\n      description: The subject of the bitmap image.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Subject*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#String}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: BitmapMetadata.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  syntax:\n    content: System.Collections.Generic.IEnumerator<string> IEnumerable<string>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.String}\n      description: To be added.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable<System#String>#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: BitmapMetadata.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Media.Imaging.BitmapMetadata> instance is cast to an <xref:System.Collections.IEnumerable> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Title\n  id: Title\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  langs:\n  - csharp\n  name: Title\n  nameWithType: BitmapMetadata.Title\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Title\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Imaging\n  summary: Gets or sets a value that identifies the title of an image file.\n  remarks: ''\n  example:\n  - \"The following code example shows how to write metadata to a bitmap image by using friendly properties of the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.  \\n  \\n [!code-vb[BitmapFrameExample#8](~/add/codesnippet/visualbasic/BitmapFrame/BitmapFrame.vb#8)]\\n [!code-cs[BitmapFrameExample#8](~/add/codesnippet/csharp/BitmapFrame/BitmapFrame.cs#8)]\"\n  syntax:\n    content: public string Title { get; set; }\n    return:\n      type: System.String\n      description: The title of an image file.\n  overload: System.Windows.Media.Imaging.BitmapMetadata.Title*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Media.ImageMetadata\n  isExternal: false\n  name: System.Windows.Media.ImageMetadata\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Media.Imaging.BitmapMetadata.#ctor(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: BitmapMetadata(String)\n  nameWithType: BitmapMetadata.BitmapMetadata(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadata(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Imaging.BitmapMetadata.ApplicationName\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: ApplicationName\n  nameWithType: BitmapMetadata.ApplicationName\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.ApplicationName\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Author\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Author\n  nameWithType: BitmapMetadata.Author\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Author\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CameraManufacturer\n  nameWithType: BitmapMetadata.CameraManufacturer\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CameraModel\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CameraModel\n  nameWithType: BitmapMetadata.CameraModel\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CameraModel\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Clone\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Clone()\n  nameWithType: BitmapMetadata.Clone()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Clone()\n- uid: System.Windows.Media.Imaging.BitmapMetadata\n  parent: System.Windows.Media.Imaging\n  isExternal: false\n  name: BitmapMetadata\n  nameWithType: BitmapMetadata\n  fullName: System.Windows.Media.Imaging.BitmapMetadata\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: BitmapMetadata.CloneCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: BitmapMetadata.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Comment\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Comment\n  nameWithType: BitmapMetadata.Comment\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Comment\n- uid: System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: ContainsQuery(String)\n  nameWithType: BitmapMetadata.ContainsQuery(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Copyright\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Copyright\n  nameWithType: BitmapMetadata.Copyright\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Copyright\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BitmapMetadata.CreateInstanceCore()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore()\n- uid: System.Windows.Media.Imaging.BitmapMetadata.DateTaken\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: DateTaken\n  nameWithType: BitmapMetadata.DateTaken\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.DateTaken\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Format\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Format\n  nameWithType: BitmapMetadata.Format\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Format\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: BitmapMetadata.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: BitmapMetadata.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetQuery(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: GetQuery(String)\n  nameWithType: BitmapMetadata.GetQuery(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.GetQuery(String)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: BitmapMetadata.IsFixedSize\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize\n- uid: System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BitmapMetadata.IsReadOnly\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Keywords\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Keywords\n  nameWithType: BitmapMetadata.Keywords\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Keywords\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Location\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Location\n  nameWithType: BitmapMetadata.Location\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Location\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Rating\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Rating\n  nameWithType: BitmapMetadata.Rating\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Rating\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(System.String)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: RemoveQuery(String)\n  nameWithType: BitmapMetadata.RemoveQuery(String)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(String)\n- uid: System.Windows.Media.Imaging.BitmapMetadata.SetQuery(System.String,System.Object)\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: SetQuery(String,Object)\n  nameWithType: BitmapMetadata.SetQuery(String,Object)\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.SetQuery(String,Object)\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Subject\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Subject\n  nameWithType: BitmapMetadata.Subject\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Subject\n- uid: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: BitmapMetadata.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<String>\n  nameWithType: IEnumerator<String>\n  fullName: System.Collections.Generic.IEnumerator<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: BitmapMetadata.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Title\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Title\n  nameWithType: BitmapMetadata.Title\n  fullName: System.Windows.Media.Imaging.BitmapMetadata.Title\n- uid: System.Windows.Media.Imaging.BitmapMetadata.#ctor*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: BitmapMetadata\n  nameWithType: BitmapMetadata.BitmapMetadata\n- uid: System.Windows.Media.Imaging.BitmapMetadata.ApplicationName*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: ApplicationName\n  nameWithType: BitmapMetadata.ApplicationName\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Author*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Author\n  nameWithType: BitmapMetadata.Author\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CameraManufacturer*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CameraManufacturer\n  nameWithType: BitmapMetadata.CameraManufacturer\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CameraModel*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CameraModel\n  nameWithType: BitmapMetadata.CameraModel\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Clone*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Clone\n  nameWithType: BitmapMetadata.Clone\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CloneCore*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CloneCore\n  nameWithType: BitmapMetadata.CloneCore\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CloneCurrentValueCore\n  nameWithType: BitmapMetadata.CloneCurrentValueCore\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Comment*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Comment\n  nameWithType: BitmapMetadata.Comment\n- uid: System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: ContainsQuery\n  nameWithType: BitmapMetadata.ContainsQuery\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Copyright*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Copyright\n  nameWithType: BitmapMetadata.Copyright\n- uid: System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: BitmapMetadata.CreateInstanceCore\n- uid: System.Windows.Media.Imaging.BitmapMetadata.DateTaken*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: DateTaken\n  nameWithType: BitmapMetadata.DateTaken\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Format*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Format\n  nameWithType: BitmapMetadata.Format\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: GetAsFrozenCore\n  nameWithType: BitmapMetadata.GetAsFrozenCore\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore\n  nameWithType: BitmapMetadata.GetCurrentValueAsFrozenCore\n- uid: System.Windows.Media.Imaging.BitmapMetadata.GetQuery*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: GetQuery\n  nameWithType: BitmapMetadata.GetQuery\n- uid: System.Windows.Media.Imaging.BitmapMetadata.IsFixedSize*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: BitmapMetadata.IsFixedSize\n- uid: System.Windows.Media.Imaging.BitmapMetadata.IsReadOnly*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BitmapMetadata.IsReadOnly\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Keywords*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Keywords\n  nameWithType: BitmapMetadata.Keywords\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Location*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Location\n  nameWithType: BitmapMetadata.Location\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Rating*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Rating\n  nameWithType: BitmapMetadata.Rating\n- uid: System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: RemoveQuery\n  nameWithType: BitmapMetadata.RemoveQuery\n- uid: System.Windows.Media.Imaging.BitmapMetadata.SetQuery*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: SetQuery\n  nameWithType: BitmapMetadata.SetQuery\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Subject*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Subject\n  nameWithType: BitmapMetadata.Subject\n- uid: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable<System#String>#GetEnumerator*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.String>.GetEnumerator\n  nameWithType: BitmapMetadata.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator\n- uid: System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: BitmapMetadata.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Windows.Media.Imaging.BitmapMetadata.Title*\n  parent: System.Windows.Media.Imaging.BitmapMetadata\n  isExternal: false\n  name: Title\n  nameWithType: BitmapMetadata.Title\n"}