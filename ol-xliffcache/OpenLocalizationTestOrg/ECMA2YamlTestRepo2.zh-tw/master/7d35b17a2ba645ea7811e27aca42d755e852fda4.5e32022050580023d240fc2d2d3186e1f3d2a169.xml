{"nodes":[{"pos":[729,832],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.ManipulationBoundaryFeedback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.UIElement.ManipulationBoundaryFeedback\"></xref> event."},{"pos":[1942,1993],"content":"Gets the unused portion of the direct manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the unused portion of the direct manipulation.","pos":[0,51]}]},{"pos":[2171,2217],"content":"The unused portion of the direct manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The unused portion of the direct manipulation.","pos":[0,46]}]},{"pos":[3136,3148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3218,3230],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3863,3999],"content":"Gets the container that the <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*> property is relative to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the container that the &lt;xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*&gt; property is relative to.","pos":[0,136],"source":"Gets the container that the <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*> property is relative to."}]},{"pos":[4162,4293],"content":"The container that the <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*> property is relative to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The container that the &lt;xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*&gt; property is relative to.","pos":[0,131],"source":"The container that the <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*> property is relative to."}]},{"pos":[4884,4969],"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","pos":[0,85]}]},{"pos":[5213,5293],"content":"A collection of objects that represents the touch contacts for the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of objects that represents the touch contacts for the manipulation.","pos":[0,80]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  id: ManipulationBoundaryFeedbackEventArgs\n  children:\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  langs:\n  - csharp\n  name: ManipulationBoundaryFeedbackEventArgs\n  nameWithType: ManipulationBoundaryFeedbackEventArgs\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Windows.UIElement.ManipulationBoundaryFeedback\"></xref> event.\n  syntax:\n    content: 'public sealed class ManipulationBoundaryFeedbackEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  id: BoundaryFeedback\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: BoundaryFeedback\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the unused portion of the direct manipulation.\n  syntax:\n    content: public System.Windows.Input.ManipulationDelta BoundaryFeedback { get; }\n    return:\n      type: System.Windows.Input.ManipulationDelta\n      description: The unused portion of the direct manipulation.\n  overload: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: To be added.\n    - id: genericTarget\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  id: ManipulationContainer\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: ManipulationContainer\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the container that the <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*> property is relative to.\n  syntax:\n    content: public System.Windows.IInputElement ManipulationContainer { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The container that the <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*> property is relative to.\n  overload: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  id: Manipulators\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: Manipulators\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a collection of objects that represents the touch contacts for the manipulation.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n      description: A collection of objects that represents the touch contacts for the manipulation.\n  overload: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: BoundaryFeedback\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n- uid: System.Windows.Input.ManipulationDelta\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<IManipulator>\n  nameWithType: IEnumerable<IManipulator>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Input.IManipulator>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Input.IManipulator\n    name: IManipulator\n    nameWithType: IManipulator\n    fullName: IManipulator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback*\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: BoundaryFeedback\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer*\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators*\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.Manipulators\n"}