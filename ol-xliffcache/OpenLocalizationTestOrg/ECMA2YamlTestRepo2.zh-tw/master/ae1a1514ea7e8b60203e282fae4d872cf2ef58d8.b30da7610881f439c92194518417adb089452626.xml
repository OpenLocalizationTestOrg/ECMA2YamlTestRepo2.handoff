{"nodes":[{"pos":[3409,3520],"content":"Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.","pos":[0,111]}]},{"pos":[4330,4366],"content":"Adds metadata to the matching types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds metadata to the matching types.","pos":[0,36]}]},{"pos":[4587,4604],"content":"The metadata key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata key.","pos":[0,17]}]},{"pos":[4694,4760],"content":"A function that returns the metadata value, given the target type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A function that returns the metadata value, given the target type.","pos":[0,66]}]},{"pos":[4863,4901],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[5608,5644],"content":"Adds metadata to the matching types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds metadata to the matching types.","pos":[0,36]}]},{"pos":[5851,5868],"content":"The metadata key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata key.","pos":[0,17]}]},{"pos":[5930,5949],"content":"The metadata value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata value.","pos":[0,19]}]},{"pos":[6052,6090],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[6675,6724],"content":"Specifies that matching types should be exported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that matching types should be exported.","pos":[0,49]}]},{"pos":[6946,6984],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[7781,7896],"content":"Specifies that matching types should be exported, and provides configuration information for the resulting exports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that matching types should be exported, and provides configuration information for the resulting exports.","pos":[0,115]}]},{"pos":[8238,8388],"content":"An object that contains configuration information about the export. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,150],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8491,8529],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[9328,9340],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10479,10491],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10594,10606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11239,11314],"content":"Specifies that all the interfaces of the matching types should be exported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies that all the interfaces of the matching types should be exported.","pos":[0,75]}]},{"pos":[11546,11584],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[12331,12407],"content":"Specifies a set of interfaces on the matching types that should be exported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of interfaces on the matching types that should be exported.","pos":[0,76]}]},{"pos":[12419,12559],"content":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method will not export &lt;xref:System.IDisposable&gt; or &lt;xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification&gt; objects.","pos":[0,140],"source":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects."}]},{"pos":[12804,12851],"content":"A predicate that specifies a set of interfaces.","needQuote":true,"needEscape":true,"nodes":[{"content":"A predicate that specifies a set of interfaces.","pos":[0,47]}]},{"pos":[12954,12992],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[13198,13291],"content":"<ph id=\"ph1\">&lt;code&gt;interfaceFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>interfaceFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[14189,14331],"content":"Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.","pos":[0,142]}]},{"pos":[14343,14483],"content":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method will not export &lt;xref:System.IDisposable&gt; or &lt;xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification&gt; objects.","pos":[0,140],"source":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects."}]},{"pos":[14823,14870],"content":"A predicate that specifies a set of interfaces.","needQuote":true,"needEscape":true,"nodes":[{"content":"A predicate that specifies a set of interfaces.","pos":[0,47]}]},{"pos":[15020,15170],"content":"An object that contains configuration information about the export. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,150],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[15273,15311],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[15517,15610],"content":"<ph id=\"ph1\">&lt;code&gt;interfaceFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>interfaceFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[16313,16389],"content":"Specifies a set of properties that should be exported on the matching types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of properties that should be exported on the matching types.","pos":[0,76]}]},{"pos":[16677,16724],"content":"A predicate that specifies a set of properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]},{"pos":[16827,16865],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[17071,17163],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18185,18319],"content":"Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.","pos":[0,134]}]},{"pos":[18728,18775],"content":"A predicate that specifies a set of properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]},{"pos":[18944,19094],"content":"An object that contains configuration information about the export. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,150],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[19197,19235],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[19441,19533],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20521,20533],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20636,20648],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22185,22197],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22366,22378],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22481,22493],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23305,23381],"content":"Specifies a set of properties on the matching types that should be imported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of properties on the matching types that should be imported.","pos":[0,76]}]},{"pos":[23669,23716],"content":"A predicate that specifies a set of properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]},{"pos":[23819,23857],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[24063,24155],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[25177,25328],"content":"Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.","pos":[0,151]}]},{"pos":[25737,25784],"content":"A predicate that specifies a set of properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]},{"pos":[25953,26103],"content":"An object that contains configuration information about the import. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains configuration information about the import.","pos":[0,67]},{"content":"The default value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,150],"source":" The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[26206,26244],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[26450,26542],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[27530,27542],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27645,27657],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29194,29206],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29375,29387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29490,29502],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30429,30514],"content":"Specifies the constructor that matching types should use as an importing constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the constructor that matching types should use as an importing constructor.","pos":[0,85]}]},{"pos":[30877,30944],"content":"A function that chooses one constructor from a set of constructors.","needQuote":true,"needEscape":true,"nodes":[{"content":"A function that chooses one constructor from a set of constructors.","pos":[0,67]}]},{"pos":[31047,31085],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[31292,31387],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>constructorFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[31482,31582],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>constructorFilter</code> returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[31693,31790],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns a constructor that is not associated with the target type.","needQuote":true,"needEscape":true,"source":"<code>constructorFilter</code> returns a constructor that is not associated with the target type."},{"pos":[32932,33082],"content":"Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.","pos":[0,150]}]},{"pos":[33567,33634],"content":"A function that chooses one constructor from a set of constructors.","needQuote":true,"needEscape":true,"nodes":[{"content":"A function that chooses one constructor from a set of constructors.","pos":[0,67]}]},{"pos":[33804,33961],"content":"An object that contains configuration information for the importing constructor. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains configuration information for the importing constructor.","pos":[0,80]},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[81,157],"source":" The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[34064,34102],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]},{"pos":[34309,34404],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>constructorFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[34499,34599],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>constructorFilter</code> returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[34710,34807],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns a constructor that is not associated with the target type.","needQuote":true,"needEscape":true,"source":"<code>constructorFilter</code> returns a constructor that is not associated with the target type."},{"pos":[35488,35537],"content":"Specifies the creation policy for matching types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the creation policy for matching types.","pos":[0,49]}]},{"pos":[35833,35853],"content":"The creation policy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The creation policy.","pos":[0,20]}]},{"pos":[35956,35994],"content":"The current object, to allow chaining.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  id: PartBuilder\n  children:\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  langs:\n  - csharp\n  name: PartBuilder\n  nameWithType: PartBuilder\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder\n  type: Class\n  summary: Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.\n  syntax:\n    content: public class PartBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  id: AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: AddMetadata(String,Func<Type,Object>)\n  nameWithType: PartBuilder.AddMetadata(String,Func<Type,Object>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Func<Type,Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Adds metadata to the matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, Func<Type,object> itemFunc);\n    parameters:\n    - id: name\n      type: System.String\n      description: The metadata key.\n    - id: itemFunc\n      type: System.Func{System.Type,System.Object}\n      description: A function that returns the metadata value, given the target type.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  id: AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: AddMetadata(String,Object)\n  nameWithType: PartBuilder.AddMetadata(String,Object)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Adds metadata to the matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The metadata key.\n    - id: value\n      type: System.Object\n      description: The metadata value.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export\n  id: Export\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that matching types should be exported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that matching types should be exported, and provides configuration information for the resulting exports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export (Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  id: Export``1\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export<T> ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export<T> (Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  id: ExportInterfaces\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportInterfaces()\n  nameWithType: PartBuilder.ExportInterfaces()\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that all the interfaces of the matching types should be exported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  id: ExportInterfaces(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportInterfaces(Predicate<Type>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of interfaces on the matching types that should be exported.\n  remarks: This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate<Type> interfaceFilter);\n    parameters:\n    - id: interfaceFilter\n      type: System.Predicate{System.Type}\n      description: A predicate that specifies a set of interfaces.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>interfaceFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.\n  remarks: This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate<Type> interfaceFilter, Action<Type,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: interfaceFilter\n      type: System.Predicate{System.Type}\n      description: A predicate that specifies a set of interfaces.\n    - id: exportConfiguration\n      type: System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>interfaceFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties that should be exported on the matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    - id: exportConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: To be added.\n    - id: exportConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be imported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    - id: importConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information about the import. The default value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: To be added.\n    - id: importConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: To be added.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: To be added.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  id: SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the constructor that matching types should use as an importing constructor.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo> constructorFilter);\n    parameters:\n    - id: constructorFilter\n      type: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}\n      description: A function that chooses one constructor from a set of constructors.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>constructorFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>constructorFilter</code> returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>constructorFilter</code> returns a constructor that is not associated with the target type.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo> constructorFilter, Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: constructorFilter\n      type: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}\n      description: A function that chooses one constructor from a set of constructors.\n    - id: importConfiguration\n      type: System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information for the importing constructor. The default is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>constructorFilter</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>constructorFilter</code> returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>constructorFilter</code> returns a constructor that is not associated with the target type.\n  platform:\n  - net462\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  id: SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: SetCreationPolicy(CreationPolicy)\n  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(CreationPolicy)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the creation policy for matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy (System.ComponentModel.Composition.CreationPolicy creationPolicy);\n    parameters:\n    - id: creationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: The creation policy.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata(String,Func<Type,Object>)\n  nameWithType: PartBuilder.AddMetadata(String,Func<Type,Object>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Func<Type,Object>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder\n  nameWithType: PartBuilder\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Func{System.Type,System.Object}\n  parent: System\n  isExternal: true\n  name: Func<Type,Object>\n  nameWithType: Func<Type,Object>\n  fullName: System.Func<System.Type,System.Object>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Type,System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata(String,Object)\n  nameWithType: PartBuilder.AddMetadata(String,Object)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(String,Object)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)\n- uid: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<ExportBuilder>\n  nameWithType: Action<ExportBuilder>\n  fullName: System.Action<System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.ComponentModel.Composition.Registration.ExportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.Export(Action<ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces()\n  nameWithType: PartBuilder.ExportInterfaces()\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces(Predicate<Type>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>)\n- uid: System.Predicate{System.Type}\n  parent: System\n  isExternal: true\n  name: Predicate<Type>\n  nameWithType: Predicate<Type>\n  fullName: System.Predicate<System.Type>\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    nameWithType: Predicate\n    fullName: Predicate<System.Type>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(Predicate<Type>,Action<Type,ExportBuilder>)\n- uid: System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<Type,ExportBuilder>\n  nameWithType: Action<Type,ExportBuilder>\n  fullName: System.Action<System.Type,System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Type,System.ComponentModel.Composition.Registration.ExportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n- uid: System.Predicate{System.Reflection.PropertyInfo}\n  parent: System\n  isExternal: true\n  name: Predicate<PropertyInfo>\n  nameWithType: Predicate<PropertyInfo>\n  fullName: System.Predicate<System.Reflection.PropertyInfo>\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    nameWithType: Predicate\n    fullName: Predicate<System.Reflection.PropertyInfo>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: PropertyInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n- uid: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<PropertyInfo,ExportBuilder>\n  nameWithType: Action<PropertyInfo,ExportBuilder>\n  fullName: System.Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: PropertyInfo\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n- uid: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<PropertyInfo,ImportBuilder>\n  nameWithType: Action<PropertyInfo,ImportBuilder>\n  fullName: System.Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: PropertyInfo\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ImportBuilder\n    name: ImportBuilder\n    nameWithType: ImportBuilder\n    fullName: ImportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(Predicate<PropertyInfo>,Action<PropertyInfo,ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>)\n- uid: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}\n  parent: System\n  isExternal: true\n  name: Func<ConstructorInfo,ConstructorInfo>\n  nameWithType: Func<ConstructorInfo,ConstructorInfo>\n  fullName: System.Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: ConstructorInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: ConstructorInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(Func<ConstructorInfo,ConstructorInfo>,Action<ParameterInfo,ImportBuilder>)\n- uid: System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n  parent: System\n  isExternal: true\n  name: Action<ParameterInfo,ImportBuilder>\n  nameWithType: Action<ParameterInfo,ImportBuilder>\n  fullName: System.Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: ParameterInfo\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ImportBuilder\n    name: ImportBuilder\n    nameWithType: ImportBuilder\n    fullName: ImportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SetCreationPolicy(CreationPolicy)\n  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(CreationPolicy)\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata\n  nameWithType: PartBuilder.AddMetadata\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export\n  nameWithType: PartBuilder.Export\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export<T>*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export<T>\n  nameWithType: PartBuilder.Export<T>\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces\n  nameWithType: PartBuilder.ExportInterfaces\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties\n  nameWithType: PartBuilder.ExportProperties\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties<T>*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties<T>\n  nameWithType: PartBuilder.ExportProperties<T>\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties\n  nameWithType: PartBuilder.ImportProperties\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties<T>*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties<T>\n  nameWithType: PartBuilder.ImportProperties<T>\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor\n  nameWithType: PartBuilder.SelectConstructor\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SetCreationPolicy\n  nameWithType: PartBuilder.SetCreationPolicy\n"}