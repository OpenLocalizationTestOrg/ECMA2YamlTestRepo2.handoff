{"nodes":[{"pos":[562,593],"content":"Task to move one or more files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Task to move one or more files.","pos":[0,31]}]},{"pos":[605,658],"content":"This does not support moving directories (ie, xcopy).","needQuote":true,"needEscape":true,"nodes":[{"content":"This does not support moving directories (ie, xcopy).","pos":[0,53]}]},{"pos":[1688,1729],"content":"Creates a task to move one or more files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a task to move one or more files.","pos":[0,41]}]},{"pos":[2186,2246],"content":"Stop and return (in an undefined state) as soon as possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stop and return (in an undefined state) as soon as possible.","pos":[0,60]}]},{"pos":[2757,2852],"content":"Gets or sets the destination files that represent the destination of the matching source files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the destination files that represent the destination of the matching source files.","pos":[0,95]}]},{"pos":[3033,3087],"content":"Returns an item that represents the destination files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an item that represents the destination files.","pos":[0,54]}]},{"pos":[3548,3605],"content":"Gets or sets the destination folder for the source files.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the destination folder for the source files.","pos":[0,57]}]},{"pos":[3783,3835],"content":"Returns an item representing the destination folder.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an item representing the destination folder.","pos":[0,52]}]},{"pos":[4251,4269],"content":"Executes the move.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the move.","pos":[0,18]}]},{"pos":[4403,4459],"content":"Returns true if the move is successful, false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the move is successful, false otherwise.","pos":[0,56]}]},{"pos":[4876,4941],"content":"Gets an item representing the files that were successfully moved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an item representing the files that were successfully moved.","pos":[0,65]}]},{"pos":[5111,5179],"content":"Returns an item representing the files that were successfully moved.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an item representing the files that were successfully moved.","pos":[0,68]}]},{"pos":[5659,5791],"content":"Gets or sets a switch that selects whether files in the destination folder that have the read-only attribute set can be overwritten.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a switch that selects whether files in the destination folder that have the read-only attribute set can be overwritten.","pos":[0,132]}]},{"pos":[5803,5855],"content":"The default is to not allow files to be overwritten.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default is to not allow files to be overwritten.","pos":[0,52]}]},{"pos":[5986,6048],"content":"Returns true if the files can be overwritten, false otherwise.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns true if the files can be overwritten, false otherwise.","pos":[0,62]}]},{"pos":[6485,6545],"content":"Gets or sets an item representing the list of files to move.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an item representing the list of files to move.","pos":[0,60]}]},{"pos":[6721,6776],"content":"Returns an item representing the list of files to move.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an item representing the list of files to move.","pos":[0,55]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.Move\n  id: Move\n  children:\n  - Microsoft.Build.Tasks.Move.#ctor\n  - Microsoft.Build.Tasks.Move.Cancel\n  - Microsoft.Build.Tasks.Move.DestinationFiles\n  - Microsoft.Build.Tasks.Move.DestinationFolder\n  - Microsoft.Build.Tasks.Move.Execute\n  - Microsoft.Build.Tasks.Move.MovedFiles\n  - Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles\n  - Microsoft.Build.Tasks.Move.SourceFiles\n  langs:\n  - csharp\n  name: Move\n  nameWithType: Move\n  fullName: Microsoft.Build.Tasks.Move\n  type: Class\n  summary: Task to move one or more files.\n  remarks: This does not support moving directories (ie, xcopy).\n  syntax:\n    content: 'public class Move : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Tasks.TaskExtension\n  implements:\n  - Microsoft.Build.Framework.ICancelableTask\n  inheritedMembers:\n  - Microsoft.Build.Tasks.TaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: Move()\n  nameWithType: Move.Move()\n  fullName: Microsoft.Build.Tasks.Move.Move()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Creates a task to move one or more files.\n  syntax:\n    content: public Move ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.Move.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.Cancel\n  id: Cancel\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: Move.Cancel()\n  fullName: Microsoft.Build.Tasks.Move.Cancel()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Stop and return (in an undefined state) as soon as possible.\n  syntax:\n    content: public void Cancel ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.Move.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.DestinationFiles\n  id: DestinationFiles\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: DestinationFiles\n  nameWithType: Move.DestinationFiles\n  fullName: Microsoft.Build.Tasks.Move.DestinationFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the destination files that represent the destination of the matching source files.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: Returns an item that represents the destination files.\n  overload: Microsoft.Build.Tasks.Move.DestinationFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.DestinationFolder\n  id: DestinationFolder\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: DestinationFolder\n  nameWithType: Move.DestinationFolder\n  fullName: Microsoft.Build.Tasks.Move.DestinationFolder\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets the destination folder for the source files.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem\n      description: Returns an item representing the destination folder.\n  overload: Microsoft.Build.Tasks.Move.DestinationFolder*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: Move.Execute()\n  fullName: Microsoft.Build.Tasks.Move.Execute()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Executes the move.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Returns true if the move is successful, false otherwise.\n  overload: Microsoft.Build.Tasks.Move.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.MovedFiles\n  id: MovedFiles\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: MovedFiles\n  nameWithType: Move.MovedFiles\n  fullName: Microsoft.Build.Tasks.Move.MovedFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets an item representing the files that were successfully moved.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] MovedFiles { get; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: Returns an item representing the files that were successfully moved.\n  overload: Microsoft.Build.Tasks.Move.MovedFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles\n  id: OverwriteReadOnlyFiles\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: OverwriteReadOnlyFiles\n  nameWithType: Move.OverwriteReadOnlyFiles\n  fullName: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a switch that selects whether files in the destination folder that have the read-only attribute set can be overwritten.\n  remarks: The default is to not allow files to be overwritten.\n  syntax:\n    content: public bool OverwriteReadOnlyFiles { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns true if the files can be overwritten, false otherwise.\n  overload: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Tasks.Move.SourceFiles\n  id: SourceFiles\n  parent: Microsoft.Build.Tasks.Move\n  langs:\n  - csharp\n  name: SourceFiles\n  nameWithType: Move.SourceFiles\n  fullName: Microsoft.Build.Tasks.Move.SourceFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets an item representing the list of files to move.\n  syntax:\n    content: public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: Returns an item representing the list of files to move.\n  overload: Microsoft.Build.Tasks.Move.SourceFiles*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Tasks.TaskExtension\n  isExternal: false\n  name: Microsoft.Build.Tasks.TaskExtension\n- uid: Microsoft.Build.Tasks.Move.#ctor\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: Move()\n  nameWithType: Move.Move()\n  fullName: Microsoft.Build.Tasks.Move.Move()\n- uid: Microsoft.Build.Tasks.Move.Cancel\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: Cancel()\n  nameWithType: Move.Cancel()\n  fullName: Microsoft.Build.Tasks.Move.Cancel()\n- uid: Microsoft.Build.Tasks.Move.DestinationFiles\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: DestinationFiles\n  nameWithType: Move.DestinationFiles\n  fullName: Microsoft.Build.Tasks.Move.DestinationFiles\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: ITaskItem[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.Move.DestinationFolder\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: DestinationFolder\n  nameWithType: Move.DestinationFolder\n  fullName: Microsoft.Build.Tasks.Move.DestinationFolder\n- uid: Microsoft.Build.Framework.ITaskItem\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem\n- uid: Microsoft.Build.Tasks.Move.Execute\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: Execute()\n  nameWithType: Move.Execute()\n  fullName: Microsoft.Build.Tasks.Move.Execute()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.Move.MovedFiles\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: MovedFiles\n  nameWithType: Move.MovedFiles\n  fullName: Microsoft.Build.Tasks.Move.MovedFiles\n- uid: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: OverwriteReadOnlyFiles\n  nameWithType: Move.OverwriteReadOnlyFiles\n  fullName: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles\n- uid: Microsoft.Build.Tasks.Move.SourceFiles\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: SourceFiles\n  nameWithType: Move.SourceFiles\n  fullName: Microsoft.Build.Tasks.Move.SourceFiles\n- uid: Microsoft.Build.Tasks.Move.#ctor*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: Move\n  nameWithType: Move.Move\n- uid: Microsoft.Build.Tasks.Move.Cancel*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: Cancel\n  nameWithType: Move.Cancel\n- uid: Microsoft.Build.Tasks.Move.DestinationFiles*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: DestinationFiles\n  nameWithType: Move.DestinationFiles\n- uid: Microsoft.Build.Tasks.Move.DestinationFolder*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: DestinationFolder\n  nameWithType: Move.DestinationFolder\n- uid: Microsoft.Build.Tasks.Move.Execute*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: Execute\n  nameWithType: Move.Execute\n- uid: Microsoft.Build.Tasks.Move.MovedFiles*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: MovedFiles\n  nameWithType: Move.MovedFiles\n- uid: Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: OverwriteReadOnlyFiles\n  nameWithType: Move.OverwriteReadOnlyFiles\n- uid: Microsoft.Build.Tasks.Move.SourceFiles*\n  parent: Microsoft.Build.Tasks.Move\n  isExternal: false\n  name: SourceFiles\n  nameWithType: Move.SourceFiles\n"}