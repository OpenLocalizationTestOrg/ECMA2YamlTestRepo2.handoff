{"nodes":[{"pos":[1053,1141],"content":"Controls access to stores containing X.509 certificates. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls access to stores containing X.509 certificates. This class cannot be inherited.","pos":[0,88],"nodes":[{"content":"Controls access to stores containing X.509 certificates.","pos":[0,56]},{"content":"This class cannot be inherited.","pos":[57,88]}]}]},{"pos":[1153,1317],"content":"StorePermission controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.","needQuote":true,"needEscape":true,"nodes":[{"content":"StorePermission controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.","pos":[0,164],"nodes":[{"content":"StorePermission controls the access that code is granted to X.509 stores.","pos":[0,73]},{"content":"The permission is based on flags representing the access levels that apply to every store.","pos":[74,164]}]}]},{"pos":[2760,2927],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with either fully restricted or unrestricted permission state.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with either fully restricted or unrestricted permission state."},{"pos":[2939,3202],"content":"The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores. If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The permission object provides either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to X.509 stores.","pos":[0,105],"source":"The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores."},{"content":"If fully restricted (<ph id=\"ph1\">`None`</ph>), the &lt;xref:System.Security.Permissions.StorePermission.Flags%2A&gt; property can then be set to specify the type of access allowed.","pos":[106,263],"source":" If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed."}]},{"pos":[3409,3492],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[3664,3769],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."},{"pos":[4345,4476],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified access.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with the specified access."},{"pos":[4488,4671],"content":"The `flag` parameter specifies the permitted access to X.509 stores. The specified permitted access applies to all stores. It is not possible to specify access to an individual store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`flag`</ph> parameter specifies the permitted access to X.509 stores.","pos":[0,68],"source":"The `flag` parameter specifies the permitted access to X.509 stores."},{"content":"The specified permitted access applies to all stores.","pos":[69,122]},{"content":"It is not possible to specify access to an individual store.","pos":[123,183]}]},{"pos":[4886,4992],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values."},{"pos":[5164,5289],"content":"<ph id=\"ph1\">&lt;code&gt;flag&lt;/code&gt;</ph> is not a valid combination of <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"<code>flag</code> is not a valid combination of <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values."},{"pos":[5663,5727],"content":"Creates and returns an identical copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]},{"pos":[5739,5829],"content":"A copy of a permission represents the same access to resources as the original permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]},{"pos":[5996,6029],"content":"A copy of the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]},{"pos":[6483,6626],"content":"Gets or sets the type of <bpt id=\"p1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> access allowed by the current permission.","needQuote":true,"needEscape":true,"source":"Gets or sets the type of <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"></xref> access allowed by the current permission."},{"pos":[6638,6784],"content":"The Flags property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Flags property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.","pos":[0,146],"nodes":[{"content":"The Flags property specifies the permitted access to X.509 stores.","pos":[0,66]},{"content":"X.509 stores are physical stores used to persist and manage X.509 certificates.","pos":[67,146]}]}]},{"pos":[6976,7082],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values."},{"pos":[7254,7410],"content":"An attempt is made to set this property to an invalid value. See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An attempt is made to set this property to an invalid value.","pos":[0,60]},{"content":"See <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the valid values.","pos":[61,156],"source":" See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values."}]},{"pos":[7910,7980],"content":"Reconstructs a permission with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]},{"pos":[7992,8339],"content":"The FromXml method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The FromXml method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.","pos":[0,347],"nodes":[{"content":"The FromXml method reconstructs a &lt;xref:System.Security.Permissions.StorePermission&gt; object from an XML encoding defined by the &lt;xref:System.Security.SecurityElement&gt; class.","pos":[0,173],"source":"The FromXml method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class."},{"content":"Use the &lt;xref:System.Security.Permissions.StorePermission.ToXml%2A&gt; method to XML-encode the &lt;xref:System.Security.Permissions.StorePermission&gt;, including state information.","pos":[174,347],"source":" Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information."}]}]},{"pos":[8548,8671],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the XML encoding to use to reconstruct the permission.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding to use to reconstruct the permission."},{"pos":[8853,8946],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9042,9191],"content":"<code>securityElement</code> is not a valid permission element.       -or-       The version number in <code>securityElement</code> is not valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not a valid permission element.","pos":[0,63],"source":"<code>securityElement</code> is not a valid permission element."},{"content":"-or-       The version number in <ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not valid.","pos":[70,145],"source":"       -or-       The version number in <code>securityElement</code> is not valid."}]},{"pos":[9682,9795],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]},{"pos":[9807,10017],"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,210],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common.","pos":[0,130]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[131,210]}]}]},{"pos":[10225,10334],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]},{"pos":[10406,10625],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the intersection is empty.","pos":[106,219],"source":" This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."}]},{"pos":[10801,10942],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> s not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"<code>target</code> s not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[11437,11519],"content":"Determines whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]},{"pos":[11531,11972],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[173,299],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","pos":[300,441],"source":" If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."}]},{"pos":[12158,12275],"content":"A permission to test for the subset relationship. This permission must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to test for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,117],"nodes":[{"content":"A permission to test for the subset relationship.","pos":[0,49]},{"content":"This permission must be of the same type as the current permission.","pos":[50,117]}]}]},{"pos":[12334,12536],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12713,12855],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."},{"pos":[13279,13353],"content":"Returns a value indicating whether the current permission is unrestricted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]},{"pos":[13365,13455],"content":"An unrestricted permission represents access to all resources protected by the permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"An unrestricted permission represents access to all resources protected by the permission.","pos":[0,90]}]},{"pos":[13587,13765],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission is unrestricted; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14233,14297],"content":"Creates an XML encoding of the permission and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]},{"pos":[14309,14465],"content":"Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Security.Permissions.StorePermission.FromXml%2A&gt; method to restore the state information from a &lt;xref:System.Security.SecurityElement&gt;.","pos":[0,156],"source":"Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>."}]},{"pos":[14641,14777],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains an XML encoding of the permission, including any state information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including any state information."},{"pos":[15327,15421],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[15433,15643],"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,210],"nodes":[{"content":"The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission.","pos":[0,149]},{"content":"Any demand that passes either permission passes their union.","pos":[150,210]}]}]},{"pos":[15847,15954],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[16026,16124],"content":"A new permission that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]},{"pos":[16296,16438],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and is not of the same type as the current permission.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.StorePermission\n  id: StorePermission\n  children:\n  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  - System.Security.Permissions.StorePermission.Copy\n  - System.Security.Permissions.StorePermission.Flags\n  - System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.StorePermission.IsUnrestricted\n  - System.Security.Permissions.StorePermission.ToXml\n  - System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: StorePermission\n  nameWithType: StorePermission\n  fullName: System.Security.Permissions.StorePermission\n  type: Class\n  summary: Controls access to stores containing X.509 certificates. This class cannot be inherited.\n  remarks: StorePermission controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.\n  syntax:\n    content: 'public sealed class StorePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: StorePermission(PermissionState)\n  nameWithType: StorePermission.StorePermission(PermissionState)\n  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with either fully restricted or unrestricted permission state.\n  remarks: The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores. If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed.\n  syntax:\n    content: public StorePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.StorePermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  id: '#ctor(System.Security.Permissions.StorePermissionFlags)'\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: StorePermission(StorePermissionFlags)\n  nameWithType: StorePermission.StorePermission(StorePermissionFlags)\n  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with the specified access.\n  remarks: The `flag` parameter specifies the permitted access to X.509 stores. The specified permitted access applies to all stores. It is not possible to specify access to an individual store.\n  syntax:\n    content: public StorePermission (System.Security.Permissions.StorePermissionFlags flag);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.StorePermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.StorePermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>flag</code> is not a valid combination of <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: StorePermission.Copy()\n  fullName: System.Security.Permissions.StorePermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.StorePermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: StorePermission.Flags\n  fullName: System.Security.Permissions.StorePermission.Flags\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Gets or sets the type of <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"></xref> access allowed by the current permission.\n  remarks: The Flags property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.\n  syntax:\n    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.StorePermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.StorePermission.Flags*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set this property to an invalid value. See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values.\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: StorePermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  remarks: The FromXml method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains the XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.StorePermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>securityElement</code> is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number in <code>securityElement</code> is not valid.\"\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: StorePermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Security.Permissions.StorePermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> s not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: StorePermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to test for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.StorePermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: StorePermission.IsUnrestricted()\n  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission is unrestricted; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Security.Permissions.StorePermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: StorePermission.ToXml()\n  fullName: System.Security.Permissions.StorePermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.StorePermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: StorePermission.Union(IPermission)\n  fullName: System.Security.Permissions.StorePermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to Union is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.StorePermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and is not of the same type as the current permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: StorePermission(PermissionState)\n  nameWithType: StorePermission.StorePermission(PermissionState)\n  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: StorePermission(StorePermissionFlags)\n  nameWithType: StorePermission.StorePermission(StorePermissionFlags)\n  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)\n- uid: System.Security.Permissions.StorePermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: StorePermissionFlags\n  nameWithType: StorePermissionFlags\n  fullName: System.Security.Permissions.StorePermissionFlags\n- uid: System.Security.Permissions.StorePermission.Copy\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Copy()\n  nameWithType: StorePermission.Copy()\n  fullName: System.Security.Permissions.StorePermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StorePermission.Flags\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Flags\n  nameWithType: StorePermission.Flags\n  fullName: System.Security.Permissions.StorePermission.Flags\n- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: StorePermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: StorePermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)\n- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: StorePermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.StorePermission.IsUnrestricted\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: StorePermission.IsUnrestricted()\n  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()\n- uid: System.Security.Permissions.StorePermission.ToXml\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: StorePermission.ToXml()\n  fullName: System.Security.Permissions.StorePermission.ToXml()\n- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: StorePermission.Union(IPermission)\n  fullName: System.Security.Permissions.StorePermission.Union(IPermission)\n- uid: System.Security.Permissions.StorePermission.#ctor*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: StorePermission\n  nameWithType: StorePermission.StorePermission\n- uid: System.Security.Permissions.StorePermission.Copy*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Copy\n  nameWithType: StorePermission.Copy\n- uid: System.Security.Permissions.StorePermission.Flags*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Flags\n  nameWithType: StorePermission.Flags\n- uid: System.Security.Permissions.StorePermission.FromXml*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: FromXml\n  nameWithType: StorePermission.FromXml\n- uid: System.Security.Permissions.StorePermission.Intersect*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Intersect\n  nameWithType: StorePermission.Intersect\n- uid: System.Security.Permissions.StorePermission.IsSubsetOf*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: StorePermission.IsSubsetOf\n- uid: System.Security.Permissions.StorePermission.IsUnrestricted*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: StorePermission.IsUnrestricted\n- uid: System.Security.Permissions.StorePermission.ToXml*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: StorePermission.ToXml\n- uid: System.Security.Permissions.StorePermission.Union*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Union\n  nameWithType: StorePermission.Union\n"}