{"nodes":[{"pos":[1641,1758],"content":"Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.","pos":[0,117]}]},{"pos":[1771,4717],"content":"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The delimiter is used to terminate each field in a line of output. For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\",\") as a delimiter and create a comma-separated value (CSV) file.      > [!IMPORTANT] >  <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.       You can enable or disable a DelimitedListTraceListener through the application configuration file and then use the configured DelimitedListTraceListener in your application. Alternately, you can create a DelimitedListTraceListener in your code.      > [!NOTE] >  The DelimitedListTraceListener delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>. Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited.       To configure a DelimitedListTraceListener, edit the configuration file that corresponds to the name of your application. In this file, you can add a listener, set the properties for a listener, or remove a listener. The configuration file should be formatted as shown in the following example:      ```   <configuration>     <system.diagnostics>       <trace autoflush=\"false\" indentsize=\"4\">         <listeners>           <add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\",\"              initializeData=\"delimitedOutput.csv\"              traceOutputOptions=\"ProcessId, DateTime\" />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.      > [!NOTE] >  Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information. Listener methods, except for constructors, should not be called directly from application code.","needQuote":false,"needEscape":true,"nodes":[{"content":"The trace output is in a delimited text format that uses the delimiter specified by the &lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt; property.","pos":[0,163],"source":"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property."},{"content":"The delimiter is used to terminate each field in a line of output.","pos":[164,230]},{"content":"For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\",\") as a delimiter and create a comma-separated value (CSV) file.","pos":[231,399]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  &lt;xref:System.IDisposable&gt; interface.","pos":[405,459],"source":"      > [!IMPORTANT] >  <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[460,554]},{"content":"To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a<ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block.","pos":[555,665],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[666,773],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.","pos":[774,907],"source":" For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."},{"content":"You can enable or disable a DelimitedListTraceListener through the application configuration file and then use the configured DelimitedListTraceListener in your application.","pos":[914,1087]},{"content":"Alternately, you can create a DelimitedListTraceListener in your code.","pos":[1088,1158]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The DelimitedListTraceListener delimits only text that is emitted by using the methods that have names starting with the word <ph id=\"ph2\">`Trace`</ph>, such as &lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName&gt; or &lt;xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName&gt;.","pos":[1164,1488],"source":"      > [!NOTE] >  The DelimitedListTraceListener delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>."},{"content":"Trace data that is emitted by using the &lt;xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName&gt; methods is not delimited.","pos":[1489,1712],"source":" Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited."},{"content":"To configure a DelimitedListTraceListener, edit the configuration file that corresponds to the name of your application.","pos":[1719,1839]},{"content":"In this file, you can add a listener, set the properties for a listener, or remove a listener.","pos":[1840,1934]},{"content":"The configuration file should be formatted as shown in the following example:      <ph id=\"ph1\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush=\"false\" indentsize=\"4\"&gt;         &lt;listeners&gt;           &lt;add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\",\"              initializeData=\"delimitedOutput.csv\"              traceOutputOptions=\"ProcessId, DateTime\" /&gt;         &lt;/listeners&gt;       &lt;/trace&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph><ph id=\"ph2\">      &gt; </ph><ph id=\"ph3\">[!NOTE]</ph> &gt;  If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","pos":[1935,2588],"source":" The configuration file should be formatted as shown in the following example:      ```   <configuration>     <system.diagnostics>       <trace autoflush=\"false\" indentsize=\"4\">         <listeners>           <add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\",\"              initializeData=\"delimitedOutput.csv\"              traceOutputOptions=\"ProcessId, DateTime\" />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Listeners are intended to be used by methods of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace information.","pos":[2594,2802],"source":"      > [!NOTE] >  Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information."},{"content":"Listener methods, except for constructors, should not be called directly from application code.","pos":[2803,2898]}]},{"pos":[7425,7575],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes to the specified output stream.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream."},{"pos":[7587,7701],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]},{"pos":[7867,7917],"content":"The <xref:System.IO.Stream> to receive the output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.Stream&gt; to receive the output.","pos":[0,50],"source":"The <xref:System.IO.Stream> to receive the output."}]},{"pos":[8099,8183],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>stream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8714,8862],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes to the specified text writer.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer."},{"pos":[8874,8988],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]},{"pos":[9162,9216],"content":"The <xref:System.IO.TextWriter> to receive the output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.TextWriter&gt; to receive the output.","pos":[0,54],"source":"The <xref:System.IO.TextWriter> to receive the output."}]},{"pos":[9398,9482],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9987,10128],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes to the specified file.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file."},{"pos":[10140,10254],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]},{"pos":[10411,10454],"content":"The name of the file to receive the output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to receive the output.","pos":[0,43]}]},{"pos":[10636,10722],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>fileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[11282,11459],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes to the specified output stream and has the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream and has the specified name."},{"pos":[11472,12171],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`.  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":      ```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to the value of the <ph id=\"ph1\">`name`</ph> parameter, or to an empty string (\"\") if the <ph id=\"ph2\">`name`</ph> parameter is <ph id=\"ph3\">`null`</ph>.","pos":[0,189],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property can be used as an index into the <ph id=\"ph1\">`Listeners`</ph> collection to programmatically change the properties for the listener.","pos":[191,367],"source":"  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the &lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt; property for the instance of &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; that has the name \"delimListener\":      <ph id=\"ph1\">```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```</ph>","pos":[368,687],"source":" For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":      ```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```"}]},{"pos":[12351,12401],"content":"The <xref:System.IO.Stream> to receive the output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.Stream&gt; to receive the output.","pos":[0,50],"source":"The <xref:System.IO.Stream> to receive the output."}]},{"pos":[12462,12513],"content":"The name of the new instance of the trace listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the new instance of the trace listener.","pos":[0,51]}]},{"pos":[12695,12779],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>stream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13359,13534],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes to the specified text writer and has the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer and has the specified name."},{"pos":[13547,14244],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":      ```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor initializes the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property to the value of the <ph id=\"ph1\">`name`</ph> parameter, or to an empty string (\"\") if the <ph id=\"ph2\">`name`</ph> parameter is <ph id=\"ph3\">`null`</ph>.","pos":[0,189],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property can be used as an index into the <ph id=\"ph1\">`Listeners`</ph> collection to programmatically change the properties for the listener.","pos":[190,366],"source":" The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener."},{"content":"For example the following code sets the &lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt; property for the instance of &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; that has the name \"delimListener\":      <ph id=\"ph1\">```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```</ph>","pos":[367,685],"source":" For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":      ```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```"}]},{"pos":[14432,14486],"content":"The <xref:System.IO.TextWriter> to receive the output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IO.TextWriter&gt; to receive the output.","pos":[0,54],"source":"The <xref:System.IO.TextWriter> to receive the output."}]},{"pos":[14547,14598],"content":"The name of the new instance of the trace listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the new instance of the trace listener.","pos":[0,51]}]},{"pos":[14780,14864],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15418,15586],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that writes to the specified file and has the specified name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file and has the specified name."},{"pos":[15599,16700],"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.      > [!NOTE] >  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.       The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":      ```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor initializes a new instance of the &lt;xref:System.IO.StreamWriter&gt; class for the specified file on the specified path, using &lt;xref:System.Text.Encoding.UTF8%2A&gt; encoding.","pos":[0,184],"source":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding."},{"content":"If the file exists, it is appended to.","pos":[185,223]},{"content":"If the file does not exist, a new file is created.","pos":[224,274]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","pos":[280,411],"source":"      > [!NOTE] >  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character."},{"content":"The &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property is set to the value of the <ph id=\"ph1\">`name`</ph> parameter, or to an empty string (\"\") if the <ph id=\"ph2\">`name`</ph> parameter is <ph id=\"ph3\">`null`</ph>.","pos":[418,585],"source":"       The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property can be used as an index into the <ph id=\"ph1\">`Listeners`</ph> collection to programmatically change the properties for the listener.","pos":[586,762],"source":" The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the &lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt; property for the instance of &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; that has the name \"delimListener\":      <ph id=\"ph1\">```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```</ph>","pos":[763,1082],"source":" For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":      ```   ((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"   ```"}]},{"pos":[16871,16914],"content":"The name of the file to receive the output.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file to receive the output.","pos":[0,43]}]},{"pos":[16975,17026],"content":"The name of the new instance of the trace listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the new instance of the trace listener.","pos":[0,51]}]},{"pos":[17208,17294],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>fileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17697,17747],"content":"Gets or sets the delimiter for the delimited list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the delimiter for the delimited list.","pos":[0,50]}]},{"pos":[17760,18464],"content":"The default delimiter is \";\" (semicolon). The following configuration file example shows the setting of the Delimiter property using the `delimiter` attribute in a configuration file:      ```   <configuration>     <system.diagnostics>       <trace autoflush=\"false\" indentsize=\"4\">         <listeners>           <add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\":\"              initializeData=\"delimitedOutput.txt\"              traceOutputOptions=\"ProcessId, DateTime\" />           <remove name=\"Default\" />         </listeners>       </trace>     </system.diagnostics>   </configuration>      ```","needQuote":false,"needEscape":true,"nodes":[{"content":"The default delimiter is \";\" (semicolon).","pos":[0,41]},{"content":"The following configuration file example shows the setting of the Delimiter property using the <ph id=\"ph1\">`delimiter`</ph> attribute in a configuration file:      <ph id=\"ph2\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush=\"false\" indentsize=\"4\"&gt;         &lt;listeners&gt;           &lt;add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\":\"              initializeData=\"delimitedOutput.txt\"              traceOutputOptions=\"ProcessId, DateTime\" /&gt;           &lt;remove name=\"Default\" /&gt;         &lt;/listeners&gt;       &lt;/trace&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;      ```</ph>","pos":[42,668],"source":" The following configuration file example shows the setting of the Delimiter property using the `delimiter` attribute in a configuration file:      ```   <configuration>     <system.diagnostics>       <trace autoflush=\"false\" indentsize=\"4\">         <listeners>           <add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\":\"              initializeData=\"delimitedOutput.txt\"              traceOutputOptions=\"ProcessId, DateTime\" />           <remove name=\"Default\" />         </listeners>       </trace>     </system.diagnostics>   </configuration>      ```"}]},{"pos":[18584,18621],"content":"The delimiter for the delimited list.","needQuote":true,"needEscape":true,"nodes":[{"content":"The delimiter for the delimited list.","pos":[0,37]}]},{"pos":[18807,18888],"content":"Delimiter is set to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Delimiter is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18983,19024],"content":"Delimiter is set to an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"Delimiter is set to an empty string (\"\").","pos":[0,41]}]},{"pos":[19496,19586],"content":"Returns the custom configuration file attribute supported by the delimited trace listener.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the custom configuration file attribute supported by the delimited trace listener.","pos":[0,90]}]},{"pos":[19599,20584],"content":"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class. The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:      ```   <configuration>     <system.diagnostics>       <trace autoflush=\"false\" indentsize=\"4\">         <listeners>           <add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\":\"              initializeData=\"delimitedOutput.txt\"              traceOutputOptions=\"ProcessId, DateTime\" />           <remove name=\"Default\" />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class.","pos":[0,126]},{"content":"The custom attribute for &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; is used to set the &lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt; property.","pos":[127,299],"source":" The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property."},{"content":"The following configuration file example shows the use of the <ph id=\"ph1\">`delimiter`</ph> attribute to set the &lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt; property:      <ph id=\"ph2\">```   &lt;configuration&gt;     &lt;system.diagnostics&gt;       &lt;trace autoflush=\"false\" indentsize=\"4\"&gt;         &lt;listeners&gt;           &lt;add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\":\"              initializeData=\"delimitedOutput.txt\"              traceOutputOptions=\"ProcessId, DateTime\" /&gt;           &lt;remove name=\"Default\" /&gt;         &lt;/listeners&gt;       &lt;/trace&gt;     &lt;/system.diagnostics&gt;   &lt;/configuration&gt;   ```</ph>","pos":[300,952],"source":" The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:      ```   <configuration>     <system.diagnostics>       <trace autoflush=\"false\" indentsize=\"4\">         <listeners>           <add name=\"delimitedListener\"              type=\"System.Diagnostics.DelimitedListTraceListener\"              delimiter=\":\"              initializeData=\"delimitedOutput.txt\"              traceOutputOptions=\"ProcessId, DateTime\" />           <remove name=\"Default\" />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```"}]},{"pos":[20742,20800],"content":"A string array that contains the single value \"delimiter\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A string array that contains the single value \"delimiter\".","pos":[0,58]}]},{"pos":[21678,21770],"content":"Writes trace information, a data object, and event information to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes trace information, a data object, and event information to the output file or stream.","pos":[0,92]}]},{"pos":[21783,22432],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data object is converted to a string using the `ToString` method of the object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.      > [!IMPORTANT] >  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","needQuote":false,"needEscape":true,"nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header.","pos":[0,85],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header."},{"content":"The data object is converted to a string using the <ph id=\"ph1\">`ToString`</ph> method of the object.","pos":[86,169],"source":" The data object is converted to a string using the `ToString` method of the object."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.","pos":[170,328],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A&gt; method is not intended to be called by application code.","pos":[334,478],"source":"      > [!IMPORTANT] >  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data.","pos":[479,646],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]},{"pos":[22721,22863],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."},{"pos":[22926,23031],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]},{"pos":[23117,23245],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."},{"pos":[23303,23338],"content":"A numeric identifier for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]},{"pos":[23399,23451],"content":"A data object to write to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data object to write to the output file or stream.","pos":[0,52]}]},{"pos":[24326,24429],"content":"Writes trace information, an array of data objects, and event information to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes trace information, an array of data objects, and event information to the output file or stream.","pos":[0,103]}]},{"pos":[24442,25093],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data objects are converted to strings using the `ToString` method of each object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.      > [!IMPORTANT] >  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","needQuote":false,"needEscape":true,"nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header.","pos":[0,85],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header."},{"content":"The data objects are converted to strings using the <ph id=\"ph1\">`ToString`</ph> method of each object.","pos":[86,171],"source":" The data objects are converted to strings using the `ToString` method of each object."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.","pos":[172,330],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A&gt; method is not intended to be called by application code.","pos":[336,480],"source":"      > [!IMPORTANT] >  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data.","pos":[481,648],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]},{"pos":[25384,25526],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."},{"pos":[25589,25694],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]},{"pos":[25780,25908],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."},{"pos":[25966,26001],"content":"A numeric identifier for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]},{"pos":[26064,26127],"content":"An array of data objects to write to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of data objects to write to the output file or stream.","pos":[0,63]}]},{"pos":[26997,27085],"content":"Writes trace information, a message, and event information to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes trace information, a message, and event information to the output file or stream.","pos":[0,88]}]},{"pos":[27098,27696],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.      > [!IMPORTANT] >  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","needQuote":false,"needEscape":true,"nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header, followed by the <ph id=\"ph4\">`message`</ph> data.","pos":[0,117],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.","pos":[118,276],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A&gt; method is not intended to be called by application code.","pos":[282,427],"source":"      > [!IMPORTANT] >  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data.","pos":[428,595],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]},{"pos":[27989,28131],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."},{"pos":[28194,28299],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]},{"pos":[28385,28513],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."},{"pos":[28571,28606],"content":"A numeric identifier for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]},{"pos":[28670,28726],"content":"The trace message to write to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The trace message to write to the output file or stream.","pos":[0,56]}]},{"pos":[29656,29763],"content":"Writes trace information, a formatted array of objects, and event information to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes trace information, a formatted array of objects, and event information to the output file or stream.","pos":[0,107]}]},{"pos":[30958,31100],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."},{"pos":[31163,31268],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]},{"pos":[31354,31482],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."},{"pos":[31540,31575],"content":"A numeric identifier for the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]},{"pos":[31638,31741],"content":"A format string that contains zero or more format items that correspond to objects in the <ph id=\"ph1\">`args`</ph> array.","needQuote":true,"needEscape":true,"source":"A format string that contains zero or more format items that correspond to objects in the `args` array."},{"pos":[31804,31855],"content":"An array containing zero or more objects to format.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array containing zero or more objects to format.","pos":[0,51]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DelimitedListTraceListener\n  id: DelimitedListTraceListener\n  children:\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.Delimiter\n  - System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  langs:\n  - csharp\n  name: DelimitedListTraceListener\n  nameWithType: DelimitedListTraceListener\n  fullName: System.Diagnostics.DelimitedListTraceListener\n  type: Class\n  summary: Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.\n  remarks: \"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The delimiter is used to terminate each field in a line of output. For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\\\",\\\") as a delimiter and create a comma-separated value (CSV) file.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \\n  \\n You can enable or disable a DelimitedListTraceListener through the application configuration file and then use the configured DelimitedListTraceListener in your application. Alternately, you can create a DelimitedListTraceListener in your code.  \\n  \\n> [!NOTE]\\n>  The DelimitedListTraceListener delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>. Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited.  \\n  \\n To configure a DelimitedListTraceListener, edit the configuration file that corresponds to the name of your application. In this file, you can add a listener, set the properties for a listener, or remove a listener. The configuration file should be formatted as shown in the following example:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"delimitedListener\\\"   \\n          type=\\\"System.Diagnostics.DelimitedListTraceListener\\\"   \\n          delimiter=\\\",\\\"   \\n          initializeData=\\\"delimitedOutput.csv\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n> [!NOTE]\\n>  If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \\n  \\n> [!NOTE]\\n>  Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information. Listener methods, except for constructors, should not be called directly from application code.\"\n  syntax:\n    content: 'public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Diagnostics.TraceListener\n  - System.Diagnostics.TextWriterTraceListener\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.TextWriterTraceListener.Close\n  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TextWriterTraceListener.Flush\n  - System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  - System.Diagnostics.TextWriterTraceListener.Writer\n  - System.Diagnostics.TraceListener.Attributes\n  - System.Diagnostics.TraceListener.Dispose\n  - System.Diagnostics.TraceListener.Fail(System.String)\n  - System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  - System.Diagnostics.TraceListener.Filter\n  - System.Diagnostics.TraceListener.IndentLevel\n  - System.Diagnostics.TraceListener.IndentSize\n  - System.Diagnostics.TraceListener.IsThreadSafe\n  - System.Diagnostics.TraceListener.Name\n  - System.Diagnostics.TraceListener.NeedIndent\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - System.Diagnostics.TraceListener.TraceOutputOptions\n  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  - System.Diagnostics.TraceListener.Write(System.Object)\n  - System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  - System.Diagnostics.TraceListener.Write(System.String,System.String)\n  - System.Diagnostics.TraceListener.WriteIndent\n  - System.Diagnostics.TraceListener.WriteLine(System.Object)\n  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(Stream)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> to receive the output.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(TextWriter)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to receive the output.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  syntax:\n    content: public DelimitedListTraceListener (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file to receive the output.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  id: '#ctor(System.IO.Stream,System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(Stream,String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream and has the specified name.\n  remarks: \"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\\\"\\\") if the `name` parameter is `null`.  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \\\"delimListener\\\":  \\n  \\n```  \\n((DelimitedListTraceListener)Trace.Listeners[\\\"delimListener\\\"]).Delimiter = \\\":\\\"  \\n```\"\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.Stream stream, string name);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref:System.IO.Stream> to receive the output.\n    - id: name\n      type: System.String\n      description: The name of the new instance of the trace listener.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  id: '#ctor(System.IO.TextWriter,System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(TextWriter,String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer and has the specified name.\n  remarks: \"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\\\"\\\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \\\"delimListener\\\":  \\n  \\n```  \\n((DelimitedListTraceListener)Trace.Listeners[\\\"delimListener\\\"]).Delimiter = \\\":\\\"  \\n```\"\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.TextWriter writer, string name);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref:System.IO.TextWriter> to receive the output.\n    - id: name\n      type: System.String\n      description: The name of the new instance of the trace listener.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(String,String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file and has the specified name.\n  remarks: \"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \\n  \\n> [!NOTE]\\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \\\"?\\\" character.  \\n  \\n The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\\\"\\\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \\\"delimListener\\\":  \\n  \\n```  \\n((DelimitedListTraceListener)Trace.Listeners[\\\"delimListener\\\"]).Delimiter = \\\":\\\"  \\n```\"\n  syntax:\n    content: public DelimitedListTraceListener (string fileName, string name);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file to receive the output.\n    - id: name\n      type: System.String\n      description: The name of the new instance of the trace listener.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter\n  id: Delimiter\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: Delimiter\n  nameWithType: DelimitedListTraceListener.Delimiter\n  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets the delimiter for the delimited list.\n  remarks: \"The default delimiter is \\\";\\\" (semicolon). The following configuration file example shows the setting of the Delimiter property using the `delimiter` attribute in a configuration file:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"delimitedListener\\\"   \\n          type=\\\"System.Diagnostics.DelimitedListTraceListener\\\"   \\n          delimiter=\\\":\\\"   \\n          initializeData=\\\"delimitedOutput.txt\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n        <remove name=\\\"Default\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n  \\n```\"\n  syntax:\n    content: public string Delimiter { get; set; }\n    return:\n      type: System.String\n      description: The delimiter for the delimited list.\n  overload: System.Diagnostics.DelimitedListTraceListener.Delimiter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Delimiter is set to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Delimiter is set to an empty string (\"\").\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  id: GetSupportedAttributes\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: GetSupportedAttributes()\n  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()\n  fullName: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Returns the custom configuration file attribute supported by the delimited trace listener.\n  remarks: \"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class. The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"delimitedListener\\\"   \\n          type=\\\"System.Diagnostics.DelimitedListTraceListener\\\"   \\n          delimiter=\\\":\\\"   \\n          initializeData=\\\"delimitedOutput.txt\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n        <remove name=\\\"Default\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  syntax:\n    content: protected override string[] GetSupportedAttributes ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: A string array that contains the single value \"delimiter\".\n  overload: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, a data object, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data object is converted to a string using the `ToString` method of the object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: data\n      type: System.Object\n      description: A data object to write to the output file or stream.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, an array of data objects, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data objects are converted to strings using the `ToString` method of each object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: data\n      type: System.Object[]\n      description: An array of data objects to write to the output file or stream.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, a message, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: message\n      type: System.String\n      description: The trace message to write to the output file or stream.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Writes trace information, a formatted array of objects, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header. The `args` object array is converted to a string using the [String.Format(String, Object\\\\[\\\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method, passing the `format` string and `args` array to format the string as the message portion of the trace. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: format\n      type: System.String\n      description: A format string that contains zero or more format items that correspond to objects in the `args` array.\n    - id: args\n      type: System.Object[]\n      description: An array containing zero or more objects to format.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: System.Diagnostics.TextWriterTraceListener\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(Stream)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(TextWriter)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: true\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(Stream,String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(TextWriter,String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(String,String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String,String)\n- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: Delimiter\n  nameWithType: DelimitedListTraceListener.Delimiter\n  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter\n- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: GetSupportedAttributes()\n  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()\n  fullName: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener\n- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: Delimiter\n  nameWithType: DelimitedListTraceListener.Delimiter\n- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: GetSupportedAttributes\n  nameWithType: DelimitedListTraceListener.GetSupportedAttributes\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceData\n  nameWithType: DelimitedListTraceListener.TraceData\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceEvent\n  nameWithType: DelimitedListTraceListener.TraceEvent\n"}