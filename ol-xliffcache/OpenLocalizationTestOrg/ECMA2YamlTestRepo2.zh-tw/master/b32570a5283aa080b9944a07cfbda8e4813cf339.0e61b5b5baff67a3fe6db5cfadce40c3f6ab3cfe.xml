{"nodes":[{"pos":[1078,1170],"content":"Represents a cookie handler that writes cookie data so that cookies never exceed a set size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a cookie handler that writes cookie data so that cookies never exceed a set size.","pos":[0,92]}]},{"pos":[4405,4550],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ChunkedCookieHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses the default chunk size.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.ChunkedCookieHandler\"></xref> class that uses the default chunk size."},{"pos":[4562,4676],"content":"The default chunk size is specified by <xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default chunk size is specified by &lt;xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize&gt;.","pos":[0,114],"source":"The default chunk size is specified by <xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize>."}]},{"pos":[5362,5507],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ChunkedCookieHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that uses a specified chunk size.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Services.ChunkedCookieHandler\"></xref> class that uses a specified chunk size."},{"pos":[5520,5893],"content":"You must be careful when adjusting the chunk size. Web browsers have different limits on the size of cookies and the number of cookies that are allowed in total and per domain. For example, the original Netscape specification specified these limits: 300 cookies total, 4096 bytes per cookie header (including metadata, not just the cookie value), and 20 cookies per domain.","needQuote":false,"needEscape":true,"nodes":[{"content":"You must be careful when adjusting the chunk size. Web browsers have different limits on the size of cookies and the number of cookies that are allowed in total and per domain. For example, the original Netscape specification specified these limits: 300 cookies total, 4096 bytes per cookie header (including metadata, not just the cookie value), and 20 cookies per domain.","pos":[0,373],"nodes":[{"content":"You must be careful when adjusting the chunk size.","pos":[0,50]},{"content":"Web browsers have different limits on the size of cookies and the number of cookies that are allowed in total and per domain.","pos":[51,176]},{"content":"For example, the original Netscape specification specified these limits: 300 cookies total, 4096 bytes per cookie header (including metadata, not just the cookie value), and 20 cookies per domain.","pos":[177,373]}]}]},{"pos":[6043,6093],"content":"The chunk size that will be used to write cookies.","needQuote":true,"needEscape":true,"nodes":[{"content":"The chunk size that will be used to write cookies.","pos":[0,50]}]},{"pos":[6292,6451],"content":"<ph id=\"ph1\">&lt;code&gt;chunkSize&lt;/code&gt;</ph>' is less than the minimum chunk size of 1000 (<bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>).","needQuote":true,"needEscape":true,"source":"<code>chunkSize</code>' is less than the minimum chunk size of 1000 (<xref href=\"System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\"></xref>)."},{"pos":[6897,6946],"content":"Gets the chunk size used by the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the chunk size used by the current instance.","pos":[0,49]}]},{"pos":[7056,7081],"content":"The chunk size, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The chunk size, in bytes.","pos":[0,25]}]},{"pos":[7650,7692],"content":"The default chunk size of 2000 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default chunk size of 2000 characters.","pos":[0,42]}]},{"pos":[7814,7826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8724,8736],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8797,8809],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8872,8884],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8957,8969],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9539,9581],"content":"The minimum chunk size of 1000 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minimum chunk size of 1000 characters.","pos":[0,42]}]},{"pos":[9703,9715],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10477,10489],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10562,10574],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10632,10644],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11893,11905],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11966,11978],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12039,12051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12114,12126],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12199,12211],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12275,12287],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12353,12365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12438,12450],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Services.ChunkedCookieHandler\n  id: ChunkedCookieHandler\n  children:\n  - System.IdentityModel.Services.ChunkedCookieHandler.#ctor\n  - System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)\n  - System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize\n  - System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize\n  - System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)\n  - System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\n  - System.IdentityModel.Services.ChunkedCookieHandler.ReadCore(System.String,System.Web.HttpContext)\n  - System.IdentityModel.Services.ChunkedCookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)\n  langs:\n  - csharp\n  name: ChunkedCookieHandler\n  nameWithType: ChunkedCookieHandler\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler\n  type: Class\n  summary: Represents a cookie handler that writes cookie data so that cookies never exceed a set size.\n  remarks: \"The ChunkedCookieHandler class presents the cookie as a logical entity, so that, in the case of cookies with a size that exceeds a specified threshold (the chunk size), a single call to the [Write(Byte\\\\[\\\\], Boolean, DateTime)](assetId:///M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)?qualifyHint=False&autoUpgrade=True) method breaks the data into a series of actual client-side cookies, none of which exceeds the chunk size.  \\n  \\n Cookie names are constructed based on the `name` parameter to the <xref:System.IdentityModel.Services.CookieHandler.Write%2A>, <xref:System.IdentityModel.Services.CookieHandler.Read%2A>, or <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> methods. The cookie names are constructed by appending a number to the base name: name, name1, name2, and so on.\"\n  syntax:\n    content: 'public sealed class ChunkedCookieHandler : System.IdentityModel.Services.CookieHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Services.CookieHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Services.CookieHandler.Delete\n  - System.IdentityModel.Services.CookieHandler.Delete(System.String)\n  - System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)\n  - System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)\n  - System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)\n  - System.IdentityModel.Services.CookieHandler.Domain\n  - System.IdentityModel.Services.CookieHandler.HideFromClientScript\n  - System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)\n  - System.IdentityModel.Services.CookieHandler.Name\n  - System.IdentityModel.Services.CookieHandler.Path\n  - System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime\n  - System.IdentityModel.Services.CookieHandler.Read\n  - System.IdentityModel.Services.CookieHandler.Read(System.String)\n  - System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)\n  - System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)\n  - System.IdentityModel.Services.CookieHandler.RequireSsl\n  - System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)\n  - System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)\n  - System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)\n  - System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: ChunkedCookieHandler()\n  nameWithType: ChunkedCookieHandler.ChunkedCookieHandler()\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ChunkedCookieHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.ChunkedCookieHandler\"></xref> class that uses the default chunk size.\n  remarks: The default chunk size is specified by <xref:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize>.\n  syntax:\n    content: public ChunkedCookieHandler ();\n    parameters: []\n  overload: System.IdentityModel.Services.ChunkedCookieHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: ChunkedCookieHandler(Int32)\n  nameWithType: ChunkedCookieHandler.ChunkedCookieHandler(Int32)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ChunkedCookieHandler(Int32)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Services.ChunkedCookieHandler\"></xref> class that uses a specified chunk size.\n  remarks: 'You must be careful when adjusting the chunk size. Web browsers have different limits on the size of cookies and the number of cookies that are allowed in total and per domain. For example, the original Netscape specification specified these limits: 300 cookies total, 4096 bytes per cookie header (including metadata, not just the cookie value), and 20 cookies per domain.'\n  syntax:\n    content: public ChunkedCookieHandler (int chunkSize);\n    parameters:\n    - id: chunkSize\n      type: System.Int32\n      description: The chunk size that will be used to write cookies.\n  overload: System.IdentityModel.Services.ChunkedCookieHandler.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>chunkSize</code>' is less than the minimum chunk size of 1000 (<xref href=\"System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\"></xref>).\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize\n  id: ChunkSize\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: ChunkSize\n  nameWithType: ChunkedCookieHandler.ChunkSize\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize\n  type: Property\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: Gets the chunk size used by the current instance.\n  syntax:\n    content: public int ChunkSize { get; }\n    return:\n      type: System.Int32\n      description: The chunk size, in bytes.\n  overload: System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize\n  id: DefaultChunkSize\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: DefaultChunkSize\n  nameWithType: ChunkedCookieHandler.DefaultChunkSize\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize\n  type: Field\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: The default chunk size of 2000 characters.\n  syntax:\n    content: public const int DefaultChunkSize = 2000;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)\n  id: DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: DeleteCore(String,String,String,HttpContext)\n  nameWithType: ChunkedCookieHandler.DeleteCore(String,String,String,HttpContext)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore(String,String,String,HttpContext)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  syntax:\n    content: protected override void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: domain\n      type: System.String\n      description: To be added.\n    - id: context\n      type: System.Web.HttpContext\n      description: To be added.\n  overload: System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\n  id: MinimumChunkSize\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: MinimumChunkSize\n  nameWithType: ChunkedCookieHandler.MinimumChunkSize\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\n  type: Field\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  summary: The minimum chunk size of 1000 characters.\n  syntax:\n    content: public const int MinimumChunkSize = 1000;\n    return:\n      type: System.Int32\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.ReadCore(System.String,System.Web.HttpContext)\n  id: ReadCore(System.String,System.Web.HttpContext)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: ReadCore(String,HttpContext)\n  nameWithType: ChunkedCookieHandler.ReadCore(String,HttpContext)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ReadCore(String,HttpContext)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  syntax:\n    content: protected override byte[] ReadCore (string name, System.Web.HttpContext context);\n    parameters:\n    - id: name\n      type: System.String\n      description: To be added.\n    - id: context\n      type: System.Web.HttpContext\n      description: To be added.\n    return:\n      type: System.Byte[]\n      description: To be added.\n  overload: System.IdentityModel.Services.ChunkedCookieHandler.ReadCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)\n  id: WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  langs:\n  - csharp\n  name: WriteCore(Byte[],String,String,String,DateTime,Boolean,Boolean,HttpContext)\n  nameWithType: ChunkedCookieHandler.WriteCore(Byte[],String,String,String,DateTime,Boolean,Boolean,HttpContext)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.WriteCore(Byte[],String,String,String,DateTime,Boolean,Boolean,HttpContext)\n  type: Method\n  assemblies:\n  - System.IdentityModel.Services\n  namespace: System.IdentityModel.Services\n  syntax:\n    content: protected override void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: To be added.\n    - id: name\n      type: System.String\n      description: To be added.\n    - id: path\n      type: System.String\n      description: To be added.\n    - id: domain\n      type: System.String\n      description: To be added.\n    - id: expirationTime\n      type: System.DateTime\n      description: To be added.\n    - id: secure\n      type: System.Boolean\n      description: To be added.\n    - id: httpOnly\n      type: System.Boolean\n      description: To be added.\n    - id: context\n      type: System.Web.HttpContext\n      description: To be added.\n  overload: System.IdentityModel.Services.ChunkedCookieHandler.WriteCore*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Services.CookieHandler\n  isExternal: false\n  name: System.IdentityModel.Services.CookieHandler\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.#ctor\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ChunkedCookieHandler()\n  nameWithType: ChunkedCookieHandler.ChunkedCookieHandler()\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ChunkedCookieHandler()\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ChunkedCookieHandler(Int32)\n  nameWithType: ChunkedCookieHandler.ChunkedCookieHandler(Int32)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ChunkedCookieHandler(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ChunkSize\n  nameWithType: ChunkedCookieHandler.ChunkSize\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: DefaultChunkSize\n  nameWithType: ChunkedCookieHandler.DefaultChunkSize\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: DeleteCore(String,String,String,HttpContext)\n  nameWithType: ChunkedCookieHandler.DeleteCore(String,String,String,HttpContext)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore(String,String,String,HttpContext)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: MinimumChunkSize\n  nameWithType: ChunkedCookieHandler.MinimumChunkSize\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.ReadCore(System.String,System.Web.HttpContext)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ReadCore(String,HttpContext)\n  nameWithType: ChunkedCookieHandler.ReadCore(String,HttpContext)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.ReadCore(String,HttpContext)\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: WriteCore(Byte[],String,String,String,DateTime,Boolean,Boolean,HttpContext)\n  nameWithType: ChunkedCookieHandler.WriteCore(Byte[],String,String,String,DateTime,Boolean,Boolean,HttpContext)\n  fullName: System.IdentityModel.Services.ChunkedCookieHandler.WriteCore(Byte[],String,String,String,DateTime,Boolean,Boolean,HttpContext)\n- uid: System.DateTime\n  parent: System\n  isExternal: true\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.#ctor*\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ChunkedCookieHandler\n  nameWithType: ChunkedCookieHandler.ChunkedCookieHandler\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize*\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ChunkSize\n  nameWithType: ChunkedCookieHandler.ChunkSize\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.DeleteCore*\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: DeleteCore\n  nameWithType: ChunkedCookieHandler.DeleteCore\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.ReadCore*\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: ReadCore\n  nameWithType: ChunkedCookieHandler.ReadCore\n- uid: System.IdentityModel.Services.ChunkedCookieHandler.WriteCore*\n  parent: System.IdentityModel.Services.ChunkedCookieHandler\n  isExternal: false\n  name: WriteCore\n  nameWithType: ChunkedCookieHandler.WriteCore\n"}