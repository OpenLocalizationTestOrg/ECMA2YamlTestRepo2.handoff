{"nodes":[{"pos":[771,919],"content":"Provides the stack functionality for a stack of client response channel sinks that must be invoked during an asynchronous message response decoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the stack functionality for a stack of client response channel sinks that must be invoked during an asynchronous message response decoding.","pos":[0,148]}]},{"pos":[1824,1913],"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Requests asynchronous processing of a method call on the sinks in the current sink stack.","pos":[0,89]}]},{"pos":[1925,2176],"content":"The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>.","pos":[0,251],"nodes":[{"content":"The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack.","pos":[0,110]},{"content":"For additional information, see &lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName&gt;.","pos":[111,251],"source":" For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>."}]}]},{"pos":[2436,2490],"content":"The headers retrieved from the server response stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The headers retrieved from the server response stream.","pos":[0,54]}]},{"pos":[2556,2603],"content":"The stream coming back from the transport sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stream coming back from the transport sink.","pos":[0,47]}]},{"pos":[2845,2877],"content":"The current sink stack is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current sink stack is empty.","pos":[0,32]}]},{"pos":[2990,3051],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[3639,3692],"content":"Dispatches the specified exception on the reply sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispatches the specified exception on the reply sink.","pos":[0,53]}]},{"pos":[3704,3986],"content":"The DispatchException method dispatches the specified exception to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DispatchException method dispatches the specified exception to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.","pos":[0,282],"nodes":[{"content":"The DispatchException method dispatches the specified exception to the server through the reply sink specified in the constructor of the current sink stack.","pos":[0,156]},{"content":"If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.","pos":[157,282]}]}]},{"pos":[4131,4171],"content":"The exception to dispatch to the server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception to dispatch to the server.","pos":[0,40]}]},{"pos":[4394,4455],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[5107,5164],"content":"Dispatches the specified reply message on the reply sink.","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispatches the specified reply message on the reply sink.","pos":[0,57]}]},{"pos":[5176,5457],"content":"The DispatchReplyMessage method dispatches the specified message to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"The DispatchReplyMessage method dispatches the specified message to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.","pos":[0,281],"nodes":[{"content":"The DispatchReplyMessage method dispatches the specified message to the server through the reply sink specified in the constructor of the current sink stack.","pos":[0,157]},{"content":"If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.","pos":[158,281]}]}]},{"pos":[5668,5748],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMessage\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to dispatch.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> to dispatch."},{"pos":[5974,6035],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  id: IClientResponseChannelSinkStack\n  children:\n  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(System.Exception)\n  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  langs:\n  - csharp\n  name: IClientResponseChannelSinkStack\n  nameWithType: IClientResponseChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  type: Interface\n  summary: Provides the stack functionality for a stack of client response channel sinks that must be invoked during an asynchronous message response decoding.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IClientResponseChannelSinkStack\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  langs:\n  - csharp\n  name: AsyncProcessResponse(ITransportHeaders,Stream)\n  nameWithType: IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Requests asynchronous processing of a method call on the sinks in the current sink stack.\n  remarks: The AsyncProcessResponse method initializes asynchronous processing on the top sink in the current sink stack. For additional information, see <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A?displayProperty=fullName>.\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers retrieved from the server response stream.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream coming back from the transport sink.\n  overload: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse*\n  exceptions:\n  - type: System.Runtime.Remoting.RemotingException\n    commentId: T:System.Runtime.Remoting.RemotingException\n    description: The current sink stack is empty.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(System.Exception)\n  id: DispatchException(System.Exception)\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  langs:\n  - csharp\n  name: DispatchException(Exception)\n  nameWithType: IClientResponseChannelSinkStack.DispatchException(Exception)\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(Exception)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Dispatches the specified exception on the reply sink.\n  remarks: The DispatchException method dispatches the specified exception to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the exception is not transmitted, and no new exception is thrown.\n  syntax:\n    content: public void DispatchException (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: The exception to dispatch to the server.\n  overload: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  id: DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  langs:\n  - csharp\n  name: DispatchReplyMessage(IMessage)\n  nameWithType: IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Dispatches the specified reply message on the reply sink.\n  remarks: The DispatchReplyMessage method dispatches the specified message to the server through the reply sink specified in the constructor of the current sink stack. If the current sink stack was created without a reply sink, the message is not transmitted, and no new exception is thrown.\n  syntax:\n    content: public void DispatchReplyMessage (System.Runtime.Remoting.Messaging.IMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> to dispatch.\n  overload: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.Remoting.RemotingException\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: RemotingException\n  nameWithType: RemotingException\n  fullName: System.Runtime.Remoting.RemotingException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse(ITransportHeaders,Stream)\n  nameWithType: IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse(ITransportHeaders,Stream)\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: true\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(System.Exception)\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  isExternal: false\n  name: DispatchException(Exception)\n  nameWithType: IClientResponseChannelSinkStack.DispatchException(Exception)\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(System.Runtime.Remoting.Messaging.IMessage)\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  isExternal: false\n  name: DispatchReplyMessage(IMessage)\n  nameWithType: IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)\n  fullName: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage(IMessage)\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: IClientResponseChannelSinkStack.AsyncProcessResponse\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchException*\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  isExternal: false\n  name: DispatchException\n  nameWithType: IClientResponseChannelSinkStack.DispatchException\n- uid: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack.DispatchReplyMessage*\n  parent: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack\n  isExternal: false\n  name: DispatchReplyMessage\n  nameWithType: IClientResponseChannelSinkStack.DispatchReplyMessage\n"}