{"nodes":[{"pos":[347,587],"content":"Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the type of <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to create.","pos":[0,82],"source":"Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create."},{"content":"A peer name is either secured or unsecured.","pos":[83,126]},{"content":"A secured peer name provides a proof of ownership of the name.","pos":[127,189]},{"content":"An unsecured peer name has no identity associated.","pos":[190,240]}]},{"pos":[600,1874],"content":"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.       The format of a peer name is: *Authority.Classifier*. The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name. The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator. Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.       Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731). Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.       **Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application. Security of the application is implementation-dependent.","needQuote":false,"needEscape":true,"nodes":[{"content":"A node must have access to the private key associated with the public key, used in creating the secured &lt;xref:System.Net.PeerToPeer.PeerName&gt;, in order to prove ownership.","pos":[0,171],"source":"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership."},{"content":"The node does not have a relationship to a public key.","pos":[172,226]},{"content":"The format of a peer name is: <bpt id=\"p1\">*</bpt>Authority.Classifier<ept id=\"p1\">*</ept>.","pos":[233,286],"source":"       The format of a peer name is: *Authority.Classifier*."},{"content":"The value of &lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt; depends on whether the name is a secured peer name or an unsecured peer name.","pos":[287,428],"source":" The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name."},{"content":"The &lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt; part of the name can be set to any string that contains 15 or fewer Unicode characters, including the <ph id=\"ph1\">`null`</ph> terminator.","pos":[429,605],"source":" The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator."},{"content":"Once the &lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;, &lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt; and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.","pos":[606,838],"source":" Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name."},{"content":"Only the owner, or peer host, can register a secure peer name with the <bpt id=\"p1\">[</bpt>PNRP Namespace Provider API<ept id=\"p1\">](http://go.microsoft.com/fwlink?LinkID=92731)</ept>.","pos":[845,991],"source":"       Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731)."},{"content":"Any node can claim ownership to any unsecured &lt;xref:System.Net.PeerToPeer.PeerName&gt;.","pos":[992,1076],"source":" Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>."},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> Using a secured &lt;xref:System.Net.PeerToPeer.PeerName&gt; does not ensure the overall security of a networking application.","pos":[1083,1211],"source":"**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application."},{"content":"Security of the application is implementation-dependent.","pos":[1212,1268]}]},{"pos":[2304,2408],"content":"Create a secured <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the identity of current user.","needQuote":true,"needEscape":true,"source":"Create a secured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user."},{"pos":[2518,2530],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2907,3014],"content":"Create an unsecured <bpt id=\"p1\">&lt;xref href=\"System.Net.PeerToPeer.PeerName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the identity of current user.","needQuote":true,"needEscape":true,"source":"Create an unsecured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user."},{"pos":[3126,3138],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.PeerToPeer.PeerNameType\n  id: PeerNameType\n  children:\n  - System.Net.PeerToPeer.PeerNameType.Secured\n  - System.Net.PeerToPeer.PeerNameType.Unsecured\n  langs:\n  - csharp\n  name: PeerNameType\n  nameWithType: PeerNameType\n  fullName: System.Net.PeerToPeer.PeerNameType\n  type: Enum\n  summary: Defines the type of <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated.\n  remarks: \"A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.  \\n  \\n The format of a peer name is: *Authority.Classifier*. The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name. The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator. Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.  \\n  \\n Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731). Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.  \\n  \\n **Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application. Security of the application is implementation-dependent.\"\n  syntax:\n    content: public enum PeerNameType\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerNameType.Secured\n  id: Secured\n  parent: System.Net.PeerToPeer.PeerNameType\n  langs:\n  - csharp\n  name: Secured\n  nameWithType: PeerNameType.Secured\n  fullName: System.Net.PeerToPeer.PeerNameType.Secured\n  type: Field\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Create a secured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user.\n  syntax:\n    content: Secured\n    return:\n      type: System.Net.PeerToPeer.PeerNameType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.PeerToPeer.PeerNameType.Unsecured\n  id: Unsecured\n  parent: System.Net.PeerToPeer.PeerNameType\n  langs:\n  - csharp\n  name: Unsecured\n  nameWithType: PeerNameType.Unsecured\n  fullName: System.Net.PeerToPeer.PeerNameType.Unsecured\n  type: Field\n  assemblies:\n  - System.Net\n  namespace: System.Net.PeerToPeer\n  summary: Create an unsecured <xref href=\"System.Net.PeerToPeer.PeerName\"></xref> using the identity of current user.\n  syntax:\n    content: Unsecured\n    return:\n      type: System.Net.PeerToPeer.PeerNameType\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Net.PeerToPeer.PeerNameType.Secured\n  parent: System.Net.PeerToPeer.PeerNameType\n  isExternal: false\n  name: Secured\n  nameWithType: PeerNameType.Secured\n  fullName: System.Net.PeerToPeer.PeerNameType.Secured\n- uid: System.Net.PeerToPeer.PeerNameType\n  parent: System.Net.PeerToPeer\n  isExternal: false\n  name: PeerNameType\n  nameWithType: PeerNameType\n  fullName: System.Net.PeerToPeer.PeerNameType\n- uid: System.Net.PeerToPeer.PeerNameType.Unsecured\n  parent: System.Net.PeerToPeer.PeerNameType\n  isExternal: false\n  name: Unsecured\n  nameWithType: PeerNameType.Unsecured\n  fullName: System.Net.PeerToPeer.PeerNameType.Unsecured\n"}