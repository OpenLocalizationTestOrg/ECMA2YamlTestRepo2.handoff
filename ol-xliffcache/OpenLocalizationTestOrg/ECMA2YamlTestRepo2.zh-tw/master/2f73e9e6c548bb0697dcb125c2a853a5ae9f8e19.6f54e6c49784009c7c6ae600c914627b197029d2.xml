{"nodes":[{"pos":[571,794],"content":"Contains arguments relevant to all drag-and-drop events (<xref:System.Windows.DragDrop.DragEnter>, <xref:System.Windows.DragDrop.DragLeave>, <xref:System.Windows.DragDrop.DragOver>, and <xref:System.Windows.DragDrop.Drop>).","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains arguments relevant to all drag-and-drop events (&lt;xref:System.Windows.DragDrop.DragEnter&gt;, &lt;xref:System.Windows.DragDrop.DragLeave&gt;, &lt;xref:System.Windows.DragDrop.DragOver&gt;, and &lt;xref:System.Windows.DragDrop.Drop&gt;).","pos":[0,223],"source":"Contains arguments relevant to all drag-and-drop events (<xref:System.Windows.DragDrop.DragEnter>, <xref:System.Windows.DragDrop.DragLeave>, <xref:System.Windows.DragDrop.DragOver>, and <xref:System.Windows.DragDrop.Drop>)."}]},{"pos":[1608,1773],"content":"Gets a member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragDropEffects\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration that specifies which operations are allowed by the originator of the drag event.","needQuote":true,"needEscape":true,"source":"Gets a member of the <xref href=\"System.Windows.DragDropEffects\"></xref> enumeration that specifies which operations are allowed by the originator of the drag event."},{"pos":[1785,2251],"content":"When a drag-and-drop operation is initiated by calling the <xref:System.Windows.DragDrop.DoDragDrop%2A> method, permissible operations are specified with a member of the <xref:System.Windows.DragDropEffects> enumeration. For example, when dragging a read-only file the drag initiator should indicate that the file can be copied, but not moved.  Before attempting to perform an operation on dragged data, examine this property to ensure that the operation is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"When a drag-and-drop operation is initiated by calling the <xref:System.Windows.DragDrop.DoDragDrop%2A> method, permissible operations are specified with a member of the <xref:System.Windows.DragDropEffects> enumeration. For example, when dragging a read-only file the drag initiator should indicate that the file can be copied, but not moved.  Before attempting to perform an operation on dragged data, examine this property to ensure that the operation is allowed.","pos":[0,466],"nodes":[{"content":"When a drag-and-drop operation is initiated by calling the &lt;xref:System.Windows.DragDrop.DoDragDrop%2A&gt; method, permissible operations are specified with a member of the &lt;xref:System.Windows.DragDropEffects&gt; enumeration.","pos":[0,220],"source":"When a drag-and-drop operation is initiated by calling the <xref:System.Windows.DragDrop.DoDragDrop%2A> method, permissible operations are specified with a member of the <xref:System.Windows.DragDropEffects> enumeration."},{"content":"For example, when dragging a read-only file the drag initiator should indicate that the file can be copied, but not moved.","pos":[221,343]},{"content":"Before attempting to perform an operation on dragged data, examine this property to ensure that the operation is allowed.","pos":[345,466]}]}]},{"pos":[2411,2571],"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragDropEffects\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration that specifies which operations are allowed by the originator of the drag event.","needQuote":true,"needEscape":true,"source":"A member of the <xref href=\"System.Windows.DragDropEffects\"></xref> enumeration that specifies which operations are allowed by the originator of the drag event."},{"pos":[2965,3052],"content":"Gets a data object that contains the data associated with the corresponding drag event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a data object that contains the data associated with the corresponding drag event.","pos":[0,87]}]},{"pos":[3194,3277],"content":"A data object that contains the data associated with the corresponding drag event..","needQuote":true,"needEscape":true,"nodes":[{"content":"A data object that contains the data associated with the corresponding drag event..","pos":[0,83]}]},{"pos":[3676,3724],"content":"Gets or sets the target drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the target drag-and-drop operation.","pos":[0,48]}]},{"pos":[3736,3980],"content":"By default, the effect specified in this property determines the mouse cursor for the target of a drag-and-drop operation. This is useful to provide feedback to the user on the operation that will occur when the corresponding object is dropped.","needQuote":true,"needEscape":true,"nodes":[{"content":"By default, the effect specified in this property determines the mouse cursor for the target of a drag-and-drop operation. This is useful to provide feedback to the user on the operation that will occur when the corresponding object is dropped.","pos":[0,244],"nodes":[{"content":"By default, the effect specified in this property determines the mouse cursor for the target of a drag-and-drop operation.","pos":[0,122]},{"content":"This is useful to provide feedback to the user on the operation that will occur when the corresponding object is dropped.","pos":[123,244]}]}]},{"pos":[4138,4264],"content":"A member of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragDropEffects\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration specifying the target drag-and-drop operation.","needQuote":true,"needEscape":true,"source":"A member of the <xref href=\"System.Windows.DragDropEffects\"></xref> enumeration specifying the target drag-and-drop operation."},{"pos":[4789,4892],"content":"Returns a drop point that is relative to a specified <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a drop point that is relative to a specified <xref href=\"System.Windows.IInputElement\"></xref>."},{"pos":[5096,5195],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.IInputElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for which to get a relative drop point.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.IInputElement\"></xref> object for which to get a relative drop point."},{"pos":[5260,5342],"content":"A drop point that is relative to the element specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">relativeTo</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A drop point that is relative to the element specified in <code>relativeTo</code>."},{"pos":[5513,5561],"content":"Raised when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">relativeTo</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">**</bpt>null<ept id=\"p2\">**</ept>.","needQuote":true,"needEscape":true,"source":"Raised when <code>relativeTo</code> is **null**."},{"pos":[6254,6266],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6336,6348],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6771,6900],"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.","pos":[0,129]}]},{"pos":[6912,7151],"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","pos":[0,239],"nodes":[{"content":"The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key.","pos":[0,99]},{"content":"For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.","pos":[100,239]}]}]},{"pos":[7310,7408],"content":"One or more members of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.DragDropKeyStates\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> flag enumeration.","needQuote":true,"needEscape":true,"source":"One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DragEventArgs\n  id: DragEventArgs\n  children:\n  - System.Windows.DragEventArgs.AllowedEffects\n  - System.Windows.DragEventArgs.Data\n  - System.Windows.DragEventArgs.Effects\n  - System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)\n  - System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.DragEventArgs.KeyStates\n  langs:\n  - csharp\n  name: DragEventArgs\n  nameWithType: DragEventArgs\n  fullName: System.Windows.DragEventArgs\n  type: Class\n  summary: Contains arguments relevant to all drag-and-drop events (<xref:System.Windows.DragDrop.DragEnter>, <xref:System.Windows.DragDrop.DragLeave>, <xref:System.Windows.DragDrop.DragOver>, and <xref:System.Windows.DragDrop.Drop>).\n  syntax:\n    content: 'public sealed class DragEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.DragEventArgs.AllowedEffects\n  id: AllowedEffects\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: AllowedEffects\n  nameWithType: DragEventArgs.AllowedEffects\n  fullName: System.Windows.DragEventArgs.AllowedEffects\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a member of the <xref href=\"System.Windows.DragDropEffects\"></xref> enumeration that specifies which operations are allowed by the originator of the drag event.\n  remarks: When a drag-and-drop operation is initiated by calling the <xref:System.Windows.DragDrop.DoDragDrop%2A> method, permissible operations are specified with a member of the <xref:System.Windows.DragDropEffects> enumeration. For example, when dragging a read-only file the drag initiator should indicate that the file can be copied, but not moved.  Before attempting to perform an operation on dragged data, examine this property to ensure that the operation is allowed.\n  syntax:\n    content: public System.Windows.DragDropEffects AllowedEffects { get; }\n    return:\n      type: System.Windows.DragDropEffects\n      description: A member of the <xref href=\"System.Windows.DragDropEffects\"></xref> enumeration that specifies which operations are allowed by the originator of the drag event.\n  overload: System.Windows.DragEventArgs.AllowedEffects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DragEventArgs.Data\n  id: Data\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: Data\n  nameWithType: DragEventArgs.Data\n  fullName: System.Windows.DragEventArgs.Data\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a data object that contains the data associated with the corresponding drag event.\n  syntax:\n    content: public System.Windows.IDataObject Data { get; }\n    return:\n      type: System.Windows.IDataObject\n      description: A data object that contains the data associated with the corresponding drag event..\n  overload: System.Windows.DragEventArgs.Data*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DragEventArgs.Effects\n  id: Effects\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: Effects\n  nameWithType: DragEventArgs.Effects\n  fullName: System.Windows.DragEventArgs.Effects\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets the target drag-and-drop operation.\n  remarks: By default, the effect specified in this property determines the mouse cursor for the target of a drag-and-drop operation. This is useful to provide feedback to the user on the operation that will occur when the corresponding object is dropped.\n  syntax:\n    content: public System.Windows.DragDropEffects Effects { get; set; }\n    return:\n      type: System.Windows.DragDropEffects\n      description: A member of the <xref href=\"System.Windows.DragDropEffects\"></xref> enumeration specifying the target drag-and-drop operation.\n  overload: System.Windows.DragEventArgs.Effects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)\n  id: GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: GetPosition(IInputElement)\n  nameWithType: DragEventArgs.GetPosition(IInputElement)\n  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Returns a drop point that is relative to a specified <xref href=\"System.Windows.IInputElement\"></xref>.\n  syntax:\n    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: An <xref href=\"System.Windows.IInputElement\"></xref> object for which to get a relative drop point.\n    return:\n      type: System.Windows.Point\n      description: A drop point that is relative to the element specified in <code>relativeTo</code>.\n  overload: System.Windows.DragEventArgs.GetPosition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Raised when <code>relativeTo</code> is **null**.\n  platform:\n  - net462\n- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: To be added.\n    - id: genericTarget\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.DragEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.DragEventArgs.KeyStates\n  id: KeyStates\n  parent: System.Windows.DragEventArgs\n  langs:\n  - csharp\n  name: KeyStates\n  nameWithType: DragEventArgs.KeyStates\n  fullName: System.Windows.DragEventArgs.KeyStates\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.\n  remarks: The effect of a drag-and-drop operation can be adjusted depending on the state of a particular key. For example, data may either be copied or moved depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.\n  syntax:\n    content: public System.Windows.DragDropKeyStates KeyStates { get; }\n    return:\n      type: System.Windows.DragDropKeyStates\n      description: One or more members of the <xref href=\"System.Windows.DragDropKeyStates\"></xref> flag enumeration.\n  overload: System.Windows.DragEventArgs.KeyStates*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: System.Windows.RoutedEventArgs\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Windows.DragEventArgs.AllowedEffects\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: AllowedEffects\n  nameWithType: DragEventArgs.AllowedEffects\n  fullName: System.Windows.DragEventArgs.AllowedEffects\n- uid: System.Windows.DragDropEffects\n  parent: System.Windows\n  isExternal: false\n  name: DragDropEffects\n  nameWithType: DragDropEffects\n  fullName: System.Windows.DragDropEffects\n- uid: System.Windows.DragEventArgs.Data\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DragEventArgs.Data\n  fullName: System.Windows.DragEventArgs.Data\n- uid: System.Windows.IDataObject\n  parent: System.Windows\n  isExternal: false\n  name: IDataObject\n  nameWithType: IDataObject\n  fullName: System.Windows.IDataObject\n- uid: System.Windows.DragEventArgs.Effects\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: Effects\n  nameWithType: DragEventArgs.Effects\n  fullName: System.Windows.DragEventArgs.Effects\n- uid: System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: GetPosition(IInputElement)\n  nameWithType: DragEventArgs.GetPosition(IInputElement)\n  fullName: System.Windows.DragEventArgs.GetPosition(IInputElement)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: DragEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.DragEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.DragEventArgs.KeyStates\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: DragEventArgs.KeyStates\n  fullName: System.Windows.DragEventArgs.KeyStates\n- uid: System.Windows.DragDropKeyStates\n  parent: System.Windows\n  isExternal: false\n  name: DragDropKeyStates\n  nameWithType: DragDropKeyStates\n  fullName: System.Windows.DragDropKeyStates\n- uid: System.Windows.DragEventArgs.AllowedEffects*\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: AllowedEffects\n  nameWithType: DragEventArgs.AllowedEffects\n- uid: System.Windows.DragEventArgs.Data*\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: Data\n  nameWithType: DragEventArgs.Data\n- uid: System.Windows.DragEventArgs.Effects*\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: Effects\n  nameWithType: DragEventArgs.Effects\n- uid: System.Windows.DragEventArgs.GetPosition*\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: GetPosition\n  nameWithType: DragEventArgs.GetPosition\n- uid: System.Windows.DragEventArgs.InvokeEventHandler*\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: DragEventArgs.InvokeEventHandler\n- uid: System.Windows.DragEventArgs.KeyStates*\n  parent: System.Windows.DragEventArgs\n  isExternal: false\n  name: KeyStates\n  nameWithType: DragEventArgs.KeyStates\n"}