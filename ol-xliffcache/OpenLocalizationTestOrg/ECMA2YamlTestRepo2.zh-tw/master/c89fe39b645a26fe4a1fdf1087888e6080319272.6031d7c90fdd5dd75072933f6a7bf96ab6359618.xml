{"nodes":[{"pos":[1223,1257],"content":"Represents a variable declaration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a variable declaration.","pos":[0,34]}]},{"pos":[1270,1973],"content":"CodeVariableDeclarationStatement can be used to represent code that declares a variable.       The <xref:System.CodeDom.CodeVariableDeclarationStatement.Type%2A> property specifies the type of the variable to declare. The <xref:System.CodeDom.CodeVariableDeclarationStatement.Name%2A> property specifies the name of the variable to declare. The <xref:System.CodeDom.CodeVariableDeclarationStatement.InitExpression%2A> property is optional, and specifies an initialization expression to assign to the variable after it is created.      > [!NOTE] >  Some languages can implement the optional variable initialization expression by making a separate assignment statement after the variable declaration.","needQuote":false,"needEscape":true,"nodes":[{"content":"CodeVariableDeclarationStatement can be used to represent code that declares a variable.","pos":[0,88]},{"content":"The &lt;xref:System.CodeDom.CodeVariableDeclarationStatement.Type%2A&gt; property specifies the type of the variable to declare.","pos":[95,217],"source":"       The <xref:System.CodeDom.CodeVariableDeclarationStatement.Type%2A> property specifies the type of the variable to declare."},{"content":"The &lt;xref:System.CodeDom.CodeVariableDeclarationStatement.Name%2A&gt; property specifies the name of the variable to declare.","pos":[218,340],"source":" The <xref:System.CodeDom.CodeVariableDeclarationStatement.Name%2A> property specifies the name of the variable to declare."},{"content":"The &lt;xref:System.CodeDom.CodeVariableDeclarationStatement.InitExpression%2A&gt; property is optional, and specifies an initialization expression to assign to the variable after it is created.","pos":[341,529],"source":" The <xref:System.CodeDom.CodeVariableDeclarationStatement.InitExpression%2A> property is optional, and specifies an initialization expression to assign to the variable after it is created."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Some languages can implement the optional variable initialization expression by making a separate assignment statement after the variable declaration.","pos":[535,698],"source":"      > [!NOTE] >  Some languages can implement the optional variable initialization expression by making a separate assignment statement after the variable declaration."}]},{"pos":[3513,3622],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class."},{"pos":[4443,4586],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified type and name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified type and name."},{"pos":[4799,4900],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the data type of the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the data type of the variable."},{"pos":[4961,4986],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[5650,5812],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified data type name and variable name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type name and variable name."},{"pos":[5980,6022],"content":"The name of the data type of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the data type of the variable.","pos":[0,42]}]},{"pos":[6083,6108],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[6762,6919],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified data type and variable name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type and variable name."},{"pos":[7083,7114],"content":"The data type for the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data type for the variable.","pos":[0,31]}]},{"pos":[7175,7200],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[8040,8225],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified data type, variable name, and initialization expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type, variable name, and initialization expression."},{"pos":[8484,8580],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the type of the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the variable."},{"pos":[8641,8666],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[8753,8868],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the initialization expression for the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable."},{"pos":[9637,9822],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified data type, variable name, and initialization expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type, variable name, and initialization expression."},{"pos":[10036,10078],"content":"The name of the data type of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the data type of the variable.","pos":[0,42]}]},{"pos":[10139,10164],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[10251,10366],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the initialization expression for the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable."},{"pos":[11125,11310],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified data type, variable name, and initialization expression.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type, variable name, and initialization expression."},{"pos":[11520,11550],"content":"The data type of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data type of the variable.","pos":[0,30]}]},{"pos":[11611,11636],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[11723,11838],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the initialization expression for the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable."},{"pos":[12358,12418],"content":"Gets or sets the initialization expression for the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the initialization expression for the variable.","pos":[0,60]}]},{"pos":[12581,12696],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the initialization expression for the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable."},{"pos":[13175,13213],"content":"Gets or sets the name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the variable.","pos":[0,38]}]},{"pos":[13327,13352],"content":"The name of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the variable.","pos":[0,25]}]},{"pos":[13821,13864],"content":"Gets or sets the data type of the variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the data type of the variable.","pos":[0,43]}]},{"pos":[14023,14124],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeTypeReference\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the data type of the variable.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the data type of the variable."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.CodeDom.CodeVariableDeclarationStatement\n  id: CodeVariableDeclarationStatement\n  children:\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String)\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String)\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String)\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String,System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)\n  - System.CodeDom.CodeVariableDeclarationStatement.InitExpression\n  - System.CodeDom.CodeVariableDeclarationStatement.Name\n  - System.CodeDom.CodeVariableDeclarationStatement.Type\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement\n  nameWithType: CodeVariableDeclarationStatement\n  fullName: System.CodeDom.CodeVariableDeclarationStatement\n  type: Class\n  summary: Represents a variable declaration.\n  remarks: \"CodeVariableDeclarationStatement can be used to represent code that declares a variable.  \\n  \\n The <xref:System.CodeDom.CodeVariableDeclarationStatement.Type%2A> property specifies the type of the variable to declare. The <xref:System.CodeDom.CodeVariableDeclarationStatement.Name%2A> property specifies the name of the variable to declare. The <xref:System.CodeDom.CodeVariableDeclarationStatement.InitExpression%2A> property is optional, and specifies an initialization expression to assign to the variable after it is created.  \\n  \\n> [!NOTE]\\n>  Some languages can implement the optional variable initialization expression by making a separate assignment statement after the variable declaration.\"\n  example:\n  - \"This example demonstrates using a CodeVariableDeclarationStatement to declare a variable.  \\n  \\n [!code-cpp[CodeVariableDeclarationStatementExample#2](~/add/codesnippet/cpp/t-system.codedom.codevar_1_1.cpp)]\\n [!code-cs[CodeVariableDeclarationStatementExample#2](~/add/codesnippet/csharp/t-system.codedom.codevar_1_1.cs)]\\n [!code-vb[CodeVariableDeclarationStatementExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codevar_1_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CodeVariableDeclarationStatement : System.CodeDom.CodeStatement\n  inheritance:\n  - System.Object\n  - System.CodeDom.CodeObject\n  - System.CodeDom.CodeStatement\n  implements: []\n  inheritedMembers:\n  - System.CodeDom.CodeObject.UserData\n  - System.CodeDom.CodeStatement.EndDirectives\n  - System.CodeDom.CodeStatement.LinePragma\n  - System.CodeDom.CodeStatement.StartDirectives\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor\n  id: '#ctor'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement()\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement()\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class.\n  syntax:\n    content: public CodeVariableDeclarationStatement ();\n    parameters: []\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String)\n  id: '#ctor(System.CodeDom.CodeTypeReference,System.String)'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement(CodeTypeReference,String)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified type and name.\n  syntax:\n    content: public CodeVariableDeclarationStatement (System.CodeDom.CodeTypeReference type, string name);\n    parameters:\n    - id: type\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the data type of the variable.\n    - id: name\n      type: System.String\n      description: The name of the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement(String,String)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type name and variable name.\n  syntax:\n    content: public CodeVariableDeclarationStatement (string type, string name);\n    parameters:\n    - id: type\n      type: System.String\n      description: The name of the data type of the variable.\n    - id: name\n      type: System.String\n      description: The name of the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement(Type,String)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type and variable name.\n  syntax:\n    content: public CodeVariableDeclarationStatement (Type type, string name);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The data type for the variable.\n    - id: name\n      type: System.String\n      description: The name of the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)\n  id: '#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement(CodeTypeReference,String,CodeExpression)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String,CodeExpression)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String,CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type, variable name, and initialization expression.\n  syntax:\n    content: public CodeVariableDeclarationStatement (System.CodeDom.CodeTypeReference type, string name, System.CodeDom.CodeExpression initExpression);\n    parameters:\n    - id: type\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the type of the variable.\n    - id: name\n      type: System.String\n      description: The name of the variable.\n    - id: initExpression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String,System.CodeDom.CodeExpression)\n  id: '#ctor(System.String,System.String,System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement(String,String,CodeExpression)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String,CodeExpression)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String,CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type, variable name, and initialization expression.\n  syntax:\n    content: public CodeVariableDeclarationStatement (string type, string name, System.CodeDom.CodeExpression initExpression);\n    parameters:\n    - id: type\n      type: System.String\n      description: The name of the data type of the variable.\n    - id: name\n      type: System.String\n      description: The name of the variable.\n    - id: initExpression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)\n  id: '#ctor(System.Type,System.String,System.CodeDom.CodeExpression)'\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: CodeVariableDeclarationStatement(Type,String,CodeExpression)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String,CodeExpression)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String,CodeExpression)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Initializes a new instance of the <xref href=\"System.CodeDom.CodeVariableDeclarationStatement\"></xref> class using the specified data type, variable name, and initialization expression.\n  syntax:\n    content: public CodeVariableDeclarationStatement (Type type, string name, System.CodeDom.CodeExpression initExpression);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The data type of the variable.\n    - id: name\n      type: System.String\n      description: The name of the variable.\n    - id: initExpression\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.InitExpression\n  id: InitExpression\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: InitExpression\n  nameWithType: CodeVariableDeclarationStatement.InitExpression\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.InitExpression\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the initialization expression for the variable.\n  syntax:\n    content: public System.CodeDom.CodeExpression InitExpression { get; set; }\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that indicates the initialization expression for the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.InitExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.Name\n  id: Name\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: CodeVariableDeclarationStatement.Name\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.Name\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the name of the variable.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.CodeDom.CodeVariableDeclarationStatement.Type\n  id: Type\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  langs:\n  - csharp\n  name: Type\n  nameWithType: CodeVariableDeclarationStatement.Type\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.Type\n  type: Property\n  assemblies:\n  - System\n  namespace: System.CodeDom\n  summary: Gets or sets the data type of the variable.\n  syntax:\n    content: public System.CodeDom.CodeTypeReference Type { get; set; }\n    return:\n      type: System.CodeDom.CodeTypeReference\n      description: A <xref href=\"System.CodeDom.CodeTypeReference\"></xref> that indicates the data type of the variable.\n  overload: System.CodeDom.CodeVariableDeclarationStatement.Type*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.CodeDom.CodeStatement\n  isExternal: false\n  name: System.CodeDom.CodeStatement\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement()\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement()\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement()\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String)\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement(CodeTypeReference,String)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String)\n- uid: System.CodeDom.CodeTypeReference\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeTypeReference\n  nameWithType: CodeTypeReference\n  fullName: System.CodeDom.CodeTypeReference\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String)\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement(String,String)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String)\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String)\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement(Type,String)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement(CodeTypeReference,String,CodeExpression)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String,CodeExpression)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(CodeTypeReference,String,CodeExpression)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String,System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement(String,String,CodeExpression)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String,CodeExpression)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(String,String,CodeExpression)\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement(Type,String,CodeExpression)\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String,CodeExpression)\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.CodeVariableDeclarationStatement(Type,String,CodeExpression)\n- uid: System.CodeDom.CodeVariableDeclarationStatement.InitExpression\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: InitExpression\n  nameWithType: CodeVariableDeclarationStatement.InitExpression\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.InitExpression\n- uid: System.CodeDom.CodeVariableDeclarationStatement.Name\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: Name\n  nameWithType: CodeVariableDeclarationStatement.Name\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.Name\n- uid: System.CodeDom.CodeVariableDeclarationStatement.Type\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: Type\n  nameWithType: CodeVariableDeclarationStatement.Type\n  fullName: System.CodeDom.CodeVariableDeclarationStatement.Type\n- uid: System.CodeDom.CodeVariableDeclarationStatement.#ctor*\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: CodeVariableDeclarationStatement\n  nameWithType: CodeVariableDeclarationStatement.CodeVariableDeclarationStatement\n- uid: System.CodeDom.CodeVariableDeclarationStatement.InitExpression*\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: InitExpression\n  nameWithType: CodeVariableDeclarationStatement.InitExpression\n- uid: System.CodeDom.CodeVariableDeclarationStatement.Name*\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: Name\n  nameWithType: CodeVariableDeclarationStatement.Name\n- uid: System.CodeDom.CodeVariableDeclarationStatement.Type*\n  parent: System.CodeDom.CodeVariableDeclarationStatement\n  isExternal: false\n  name: Type\n  nameWithType: CodeVariableDeclarationStatement.Type\n"}