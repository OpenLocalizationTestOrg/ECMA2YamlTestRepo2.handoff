{"nodes":[{"pos":[427,543],"content":"Configures a set of preloaded profile properties and the location of a custom implementation of the profile service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Configures a set of preloaded profile properties and the location of a custom implementation of the profile service.","pos":[0,116]}]},{"pos":[556,2260],"content":"The ProfileServiceManager class corresponds to the <xref:System.Web.UI.ScriptManager.ProfileService%2A> property that can be added to the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.       You can use ProfileServiceManager to specify a set of profile properties that will be preloaded when the page is rendered and will be available to client script. Also, instead of using the built-in profile Web service provided by AJAX features of ASP.NET, you can use this class to provide the path of an alternative implementation of the Web service that will be used for loading or saving profile properties from script.       To use the profile service in your application, you must enable it in the configuration file. If you use the built-in profile Web service and do not have to preload properties, you do not have to explicitly declare the profile service manager on the page.       To declaratively specify a set of preloaded properties, or a custom profile Web service, include a `<ProfileService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example.      ```   <asp:ScriptManager ID=\"SM1\" runat=\"server\">     <ProfileService LoadProperties=\"propertyA,propertyB\" Path=\"MyProfileService.asmx\" />   </asp:ScriptManager>   ```       You can also programmatically configure the profile service to preload properties or to use a custom profile Web service.       The following example shows the basic class structure that must be implemented in a custom profile Web service.       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]","needQuote":false,"needEscape":true,"nodes":[{"content":"The ProfileServiceManager class corresponds to the &lt;xref:System.Web.UI.ScriptManager.ProfileService%2A&gt; property that can be added to the &lt;xref:System.Web.UI.ScriptManager&gt; or &lt;xref:System.Web.UI.ScriptManagerProxy&gt; control.","pos":[0,224],"source":"The ProfileServiceManager class corresponds to the <xref:System.Web.UI.ScriptManager.ProfileService%2A> property that can be added to the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"You can use ProfileServiceManager to specify a set of profile properties that will be preloaded when the page is rendered and will be available to client script.","pos":[231,392]},{"content":"Also, instead of using the built-in profile Web service provided by AJAX features of ASP.NET, you can use this class to provide the path of an alternative implementation of the Web service that will be used for loading or saving profile properties from script.","pos":[393,653]},{"content":"To use the profile service in your application, you must enable it in the configuration file.","pos":[660,753]},{"content":"If you use the built-in profile Web service and do not have to preload properties, you do not have to explicitly declare the profile service manager on the page.","pos":[754,915]},{"content":"To declaratively specify a set of preloaded properties, or a custom profile Web service, include a <ph id=\"ph1\">`&lt;ProfileService&gt;`</ph> element inside the <ph id=\"ph2\">`&lt;asp:ScriptManager&gt;`</ph> element on the page, as shown in the following example.","pos":[922,1136],"source":"       To declaratively specify a set of preloaded properties, or a custom profile Web service, include a `<ProfileService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example."},{"content":"<ph id=\"ph1\">```   &lt;asp:ScriptManager ID=\"SM1\" runat=\"server\"&gt;     &lt;ProfileService LoadProperties=\"propertyA,propertyB\" Path=\"MyProfileService.asmx\" /&gt;   &lt;/asp:ScriptManager&gt;   ```</ph>       You can also programmatically configure the profile service to preload properties or to use a custom profile Web service.","pos":[1142,1437],"source":"```   <asp:ScriptManager ID=\"SM1\" runat=\"server\">     <ProfileService LoadProperties=\"propertyA,propertyB\" Path=\"MyProfileService.asmx\" />   </asp:ScriptManager>   ```       You can also programmatically configure the profile service to preload properties or to use a custom profile Web service."},{"content":"The following example shows the basic class structure that must be implemented in a custom profile Web service.","pos":[1444,1555]},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>XpsCreate#XpsCreateAddPkgContent<ept id=\"p2\">](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)</ept><ept id=\"p1\">]</ept>","pos":[1562,1678],"source":"[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"}]},{"pos":[2978,3075],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.ProfileServiceManager\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> class."},{"pos":[3625,3729],"content":"Gets or sets an array that contains the profile properties that will be made available to client script.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets an array that contains the profile properties that will be made available to client script.","pos":[0,104]}]},{"pos":[3742,4837],"content":"If LoadProperties contains at least one string that corresponds to the name of a profile property, then the built-in profile service in the Web application retrieves the current user's profile data for each of the specified profile properties. The profile property values are serialized and then made available to client script through the [properties Field](~/add/includes/ajax-current-ext-md.md) collection.      > [!NOTE] >  To set this property declaratively, use a comma-separated list of property names. For grouped property values, use the syntax *GroupName*.*PropertyName*.       When LoadProperties is an empty array, no profile data is preloaded.       The LoadProperties property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When LoadProperties is set on both the <xref:System.Web.UI.ScriptManager> control and on one or more <xref:System.Web.UI.ScriptManagerProxy> controls, the set of properties is determined by merging all the specified properties. Duplicate properties are ignored.","needQuote":false,"needEscape":true,"nodes":[{"content":"If LoadProperties contains at least one string that corresponds to the name of a profile property, then the built-in profile service in the Web application retrieves the current user's profile data for each of the specified profile properties.","pos":[0,243]},{"content":"The profile property values are serialized and then made available to client script through the <bpt id=\"p1\">[</bpt>properties Field<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> collection.","pos":[244,409],"source":" The profile property values are serialized and then made available to client script through the [properties Field](~/add/includes/ajax-current-ext-md.md) collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To set this property declaratively, use a comma-separated list of property names.","pos":[415,509],"source":"      > [!NOTE] >  To set this property declaratively, use a comma-separated list of property names."},{"content":"For grouped property values, use the syntax <bpt id=\"p1\">*</bpt>GroupName<ept id=\"p1\">*</ept>.<bpt id=\"p2\">*</bpt>PropertyName<ept id=\"p2\">*</ept>.","pos":[510,581],"source":" For grouped property values, use the syntax *GroupName*.*PropertyName*."},{"content":"When LoadProperties is an empty array, no profile data is preloaded.","pos":[588,656]},{"content":"The LoadProperties property can be specified in the &lt;xref:System.Web.UI.ScriptManager&gt; control or in an associated &lt;xref:System.Web.UI.ScriptManagerProxy&gt; control.","pos":[663,826],"source":"       The LoadProperties property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"When LoadProperties is set on both the &lt;xref:System.Web.UI.ScriptManager&gt; control and on one or more &lt;xref:System.Web.UI.ScriptManagerProxy&gt; controls, the set of properties is determined by merging all the specified properties.","pos":[827,1054],"source":" When LoadProperties is set on both the <xref:System.Web.UI.ScriptManager> control and on one or more <xref:System.Web.UI.ScriptManagerProxy> controls, the set of properties is determined by merging all the specified properties."},{"content":"Duplicate properties are ignored.","pos":[1055,1088]}]},{"pos":[4966,5121],"content":"A string array that contains the names of the profile properties that will be preloaded and made available to client script. The default is an empty array.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string array that contains the names of the profile properties that will be preloaded and made available to client script. The default is an empty array.","pos":[0,155],"nodes":[{"content":"A string array that contains the names of the profile properties that will be preloaded and made available to client script.","pos":[0,124]},{"content":"The default is an empty array.","pos":[125,155]}]}]},{"pos":[5294,5403],"content":"The LoadProperties property includes property names that are not in the current application’s profile schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"The LoadProperties property includes property names that are not in the current application’s profile schema.","pos":[0,109]}]},{"pos":[5756,5832],"content":"Gets or sets the path of a custom implementation of the profile Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the path of a custom implementation of the profile Web service.","pos":[0,76]}]},{"pos":[5845,6790],"content":"Relative virtual paths, absolute virtual paths, and fully-qualified paths are allowed.       If the Path property is not set, the return value is <xref:System.String>. In this case, the AJAX features of ASP.NET will then use the built-in profile Web service that corresponds to the following internal default path: ~/ScriptServices_ProfileService.asmx. The same behavior occurs if you set Path to be an empty value or `null`.       Path can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When Path is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:      -   If there are multiple proxies in the control hierarchy, Path does not have to be set on each proxy instance.      -   If Path is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.","needQuote":false,"needEscape":true,"nodes":[{"content":"Relative virtual paths, absolute virtual paths, and fully-qualified paths are allowed.","pos":[0,86]},{"content":"If the Path property is not set, the return value is &lt;xref:System.String&gt;.","pos":[93,167],"source":"       If the Path property is not set, the return value is <xref:System.String>."},{"content":"In this case, the AJAX features of ASP.NET will then use the built-in profile Web service that corresponds to the following internal default path: ~/ScriptServices_ProfileService.asmx.","pos":[168,352]},{"content":"The same behavior occurs if you set Path to be an empty value or <ph id=\"ph1\">`null`</ph>.","pos":[353,425],"source":" The same behavior occurs if you set Path to be an empty value or `null`."},{"content":"Path can be specified in the &lt;xref:System.Web.UI.ScriptManager&gt; control or in an associated &lt;xref:System.Web.UI.ScriptManagerProxy&gt; control.","pos":[432,572],"source":"       Path can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"When Path is set at the &lt;xref:System.Web.UI.ScriptManagerProxy&gt; level, the following caveats apply:      -   If there are multiple proxies in the control hierarchy, Path does not have to be set on each proxy instance.","pos":[573,790],"source":" When Path is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:      -   If there are multiple proxies in the control hierarchy, Path does not have to be set on each proxy instance."},{"content":"-   If Path is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.","pos":[796,937]}]},{"pos":[6905,6968],"content":"The path of a custom implementation of the profile Web service.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path of a custom implementation of the profile Web service.","pos":[0,63]}]},{"pos":[7131,7190],"content":"More than one unique path was set in the control hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"More than one unique path was set in the control hierarchy.","pos":[0,59]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ProfileServiceManager\n  id: ProfileServiceManager\n  children:\n  - System.Web.UI.ProfileServiceManager.#ctor\n  - System.Web.UI.ProfileServiceManager.LoadProperties\n  - System.Web.UI.ProfileServiceManager.Path\n  langs:\n  - csharp\n  name: ProfileServiceManager\n  nameWithType: ProfileServiceManager\n  fullName: System.Web.UI.ProfileServiceManager\n  type: Class\n  summary: Configures a set of preloaded profile properties and the location of a custom implementation of the profile service.\n  remarks: \"The ProfileServiceManager class corresponds to the <xref:System.Web.UI.ScriptManager.ProfileService%2A> property that can be added to the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n You can use ProfileServiceManager to specify a set of profile properties that will be preloaded when the page is rendered and will be available to client script. Also, instead of using the built-in profile Web service provided by AJAX features of ASP.NET, you can use this class to provide the path of an alternative implementation of the Web service that will be used for loading or saving profile properties from script.  \\n  \\n To use the profile service in your application, you must enable it in the configuration file. If you use the built-in profile Web service and do not have to preload properties, you do not have to explicitly declare the profile service manager on the page.  \\n  \\n To declaratively specify a set of preloaded properties, or a custom profile Web service, include a `<ProfileService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <ProfileService LoadProperties=\\\"propertyA,propertyB\\\" Path=\\\"MyProfileService.asmx\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically configure the profile service to preload properties or to use a custom profile Web service.  \\n  \\n The following example shows the basic class structure that must be implemented in a custom profile Web service.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultProperty(\"Path\")]\n\n      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]\n\n      public class ProfileServiceManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.ProfileServiceManager.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.ProfileServiceManager\n  langs:\n  - csharp\n  name: ProfileServiceManager()\n  nameWithType: ProfileServiceManager.ProfileServiceManager()\n  fullName: System.Web.UI.ProfileServiceManager.ProfileServiceManager()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> class.\n  syntax:\n    content: public ProfileServiceManager ();\n    parameters: []\n  overload: System.Web.UI.ProfileServiceManager.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.ProfileServiceManager.LoadProperties\n  id: LoadProperties\n  parent: System.Web.UI.ProfileServiceManager\n  langs:\n  - csharp\n  name: LoadProperties\n  nameWithType: ProfileServiceManager.LoadProperties\n  fullName: System.Web.UI.ProfileServiceManager.LoadProperties\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets an array that contains the profile properties that will be made available to client script.\n  remarks: \"If LoadProperties contains at least one string that corresponds to the name of a profile property, then the built-in profile service in the Web application retrieves the current user's profile data for each of the specified profile properties. The profile property values are serialized and then made available to client script through the [properties Field](~/add/includes/ajax-current-ext-md.md) collection.  \\n  \\n> [!NOTE]\\n>  To set this property declaratively, use a comma-separated list of property names. For grouped property values, use the syntax *GroupName*.*PropertyName*.  \\n  \\n When LoadProperties is an empty array, no profile data is preloaded.  \\n  \\n The LoadProperties property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When LoadProperties is set on both the <xref:System.Web.UI.ScriptManager> control and on one or more <xref:System.Web.UI.ScriptManagerProxy> controls, the set of properties is determined by merging all the specified properties. Duplicate properties are ignored.\"\n  syntax:\n    content: public string[] LoadProperties { get; set; }\n    return:\n      type: System.String[]\n      description: A string array that contains the names of the profile properties that will be preloaded and made available to client script. The default is an empty array.\n  overload: System.Web.UI.ProfileServiceManager.LoadProperties*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The LoadProperties property includes property names that are not in the current application’s profile schema.\n  platform:\n  - net462\n- uid: System.Web.UI.ProfileServiceManager.Path\n  id: Path\n  parent: System.Web.UI.ProfileServiceManager\n  langs:\n  - csharp\n  name: Path\n  nameWithType: ProfileServiceManager.Path\n  fullName: System.Web.UI.ProfileServiceManager.Path\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the path of a custom implementation of the profile Web service.\n  remarks: \"Relative virtual paths, absolute virtual paths, and fully-qualified paths are allowed.  \\n  \\n If the Path property is not set, the return value is <xref:System.String>. In this case, the AJAX features of ASP.NET will then use the built-in profile Web service that corresponds to the following internal default path: ~/ScriptServices_ProfileService.asmx. The same behavior occurs if you set Path to be an empty value or `null`.  \\n  \\n Path can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When Path is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:  \\n  \\n-   If there are multiple proxies in the control hierarchy, Path does not have to be set on each proxy instance.  \\n  \\n-   If Path is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path of a custom implementation of the profile Web service.\n  overload: System.Web.UI.ProfileServiceManager.Path*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: More than one unique path was set in the control hierarchy.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Web.UI.ProfileServiceManager.#ctor\n  parent: System.Web.UI.ProfileServiceManager\n  isExternal: false\n  name: ProfileServiceManager()\n  nameWithType: ProfileServiceManager.ProfileServiceManager()\n  fullName: System.Web.UI.ProfileServiceManager.ProfileServiceManager()\n- uid: System.Web.UI.ProfileServiceManager.LoadProperties\n  parent: System.Web.UI.ProfileServiceManager\n  isExternal: false\n  name: LoadProperties\n  nameWithType: ProfileServiceManager.LoadProperties\n  fullName: System.Web.UI.ProfileServiceManager.LoadProperties\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.UI.ProfileServiceManager.Path\n  parent: System.Web.UI.ProfileServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: ProfileServiceManager.Path\n  fullName: System.Web.UI.ProfileServiceManager.Path\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.ProfileServiceManager.#ctor*\n  parent: System.Web.UI.ProfileServiceManager\n  isExternal: false\n  name: ProfileServiceManager\n  nameWithType: ProfileServiceManager.ProfileServiceManager\n- uid: System.Web.UI.ProfileServiceManager.LoadProperties*\n  parent: System.Web.UI.ProfileServiceManager\n  isExternal: false\n  name: LoadProperties\n  nameWithType: ProfileServiceManager.LoadProperties\n- uid: System.Web.UI.ProfileServiceManager.Path*\n  parent: System.Web.UI.ProfileServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: ProfileServiceManager.Path\n"}