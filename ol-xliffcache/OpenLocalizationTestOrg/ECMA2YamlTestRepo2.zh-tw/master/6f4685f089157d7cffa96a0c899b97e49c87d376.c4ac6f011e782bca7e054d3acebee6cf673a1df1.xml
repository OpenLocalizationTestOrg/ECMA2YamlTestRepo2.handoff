{"nodes":[{"pos":[1458,1529],"content":"Provides a means to specify a XAML type in terms of name and namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a means to specify a XAML type in terms of name and namespace.","pos":[0,71]}]},{"pos":[1541,1867],"content":"<xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas XamlTypeName is more of a data structure that provides different ways of specifying that type. XamlTypeName also provides static helper methods for generating a XamlTypeName by resolving an existing type identifier in a XAML namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"<xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas XamlTypeName is more of a data structure that provides different ways of specifying that type. XamlTypeName also provides static helper methods for generating a XamlTypeName by resolving an existing type identifier in a XAML namespace.","pos":[0,326],"nodes":[{"content":"&lt;xref:System.Xaml.XamlType&gt; is the type information class in the XAML type system, whereas XamlTypeName is more of a data structure that provides different ways of specifying that type.","pos":[0,185],"source":"<xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas XamlTypeName is more of a data structure that provides different ways of specifying that type."},{"content":"XamlTypeName also provides static helper methods for generating a XamlTypeName by resolving an existing type identifier in a XAML namespace.","pos":[186,326]}]}]},{"pos":[2457,2550],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class."},{"pos":[3116,3273],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on an existing <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class, based on an existing <xref href=\"System.Xaml.XamlType\"></xref>."},{"pos":[3437,3491],"content":"An existing <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An existing <xref href=\"System.Xaml.XamlType\"></xref>."},{"pos":[3659,3745],"content":"<ph id=\"ph1\">&lt;code&gt;xamlType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>xamlType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4206,4336],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on name and namespace strings.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class, based on name and namespace strings."},{"pos":[4502,4540],"content":"The XAML namespace that contains name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML namespace that contains name.","pos":[0,38]}]},{"pos":[4601,4691],"content":"The name of the type to create a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The name of the type to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> for."},{"pos":[5442,5610],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, based on name and namespace strings as well as an array of type arguments.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class, based on name and namespace strings as well as an array of type arguments."},{"pos":[5622,5721],"content":"This is the signature to use if you are specifying a generic type and type arguments for that type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This is the signature to use if you are specifying a generic type and type arguments for that type.","pos":[0,99]}]},{"pos":[5974,6014],"content":"The XAML namespace that contains <ph id=\"ph1\">`name`</ph>.","needQuote":true,"needEscape":true,"source":"The XAML namespace that contains `name`."},{"pos":[6075,6165],"content":"The name of the type to create a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"The name of the type to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> for."},{"pos":[6293,6398],"content":"An array of type arguments, each of which must be a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of type arguments, each of which must be a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>."},{"pos":[6793,6883],"content":"Gets the name used to construct this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name used to construct this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>."},{"pos":[6895,7077],"content":"If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Name is <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a &lt;xref:System.Xaml.XamlType&gt; was used to construct this &lt;xref:System.Xaml.Schema.XamlTypeName&gt;, the value of Name is &lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName&gt;.","pos":[0,182],"source":"If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Name is <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>."}]},{"pos":[7191,7212],"content":"The name of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type.","pos":[0,21]}]},{"pos":[7631,7742],"content":"Gets the XAML namespace identifier used to construct this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the XAML namespace identifier used to construct this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>."},{"pos":[7754,7914],"content":"If a &lt;xref:System.Xaml.XamlType&gt; was used to construct this &lt;xref:System.Xaml.Schema.XamlTypeName&gt;, the value of Namespace is <ph id=\"ph1\">`xamlType.GetXamlNamespaces()[0]`</ph>.","needQuote":true,"needEscape":true,"source":"If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Namespace is `xamlType.GetXamlNamespaces()[0]`."},{"pos":[8033,8063],"content":"The XAML namespace identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XAML namespace identifier.","pos":[0,30]}]},{"pos":[8658,8813],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on a type name and an object that can resolve a markup prefix into a namespace.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a type name and an object that can resolve a markup prefix into a namespace."},{"pos":[9042,9131],"content":"The type name to create a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for.","needQuote":true,"needEscape":true,"source":"The type name to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value for."},{"pos":[9226,9328],"content":"An object or service provider that implements <bpt id=\"p1\">&lt;xref href=\"System.Xaml.IXamlNamespaceResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>."},{"pos":[9404,9469],"content":"The created <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>."},{"pos":[9637,9757],"content":"<ph id=\"ph1\">&lt;code&gt;typeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>typeName</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9848,9872],"content":"String cannot be parsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"String cannot be parsed.","pos":[0,24]}]},{"pos":[10415,10605],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace."},{"pos":[10618,11063],"content":"The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:      <ph id=\"ph1\">```   NestedTypeName = Name | Name '+' NestedTypeName   TypeName = NestedTypeName | NestedTypeName ‘[]’   XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs   TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’   XamlTypeNameList = XamlTypeName XamlTypeNameList1   XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList   ```</ph>","needQuote":false,"needEscape":true,"source":"The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:      ```   NestedTypeName = Name | Name '+' NestedTypeName   TypeName = NestedTypeName | NestedTypeName ‘[]’   XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs   TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’   XamlTypeNameList = XamlTypeName XamlTypeNameList1   XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList   ```"},{"pos":[11339,11390],"content":"A string that contains multiple types. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains multiple types. See Remarks.","pos":[0,51],"nodes":[{"content":"A string that contains multiple types.","pos":[0,38]},{"content":"See Remarks.","pos":[39,51]}]}]},{"pos":[11485,11587],"content":"An object or service provider that implements <bpt id=\"p1\">&lt;xref href=\"System.Xaml.IXamlNamespaceResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>."},{"pos":[11697,11762],"content":"The created <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>."},{"pos":[11934,12058],"content":"<ph id=\"ph1\">&lt;code&gt;typeNameList&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>typeNameList</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12149,12173],"content":"String cannot be parsed.","needQuote":true,"needEscape":true,"nodes":[{"content":"String cannot be parsed.","pos":[0,24]}]},{"pos":[12524,12644],"content":"Converts the value of this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to its equivalent string representation.","needQuote":true,"needEscape":true,"source":"Converts the value of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> to its equivalent string representation."},{"pos":[12656,12821],"content":"This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`. s","needQuote":true,"needEscape":true,"nodes":[{"content":"This signature is equivalent to calling &lt;xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29&gt;, passing <ph id=\"ph1\">`null`</ph> for <ph id=\"ph2\">`prefixLookup`</ph>.","pos":[0,163],"source":"This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`."},{"content":"s","pos":[164,165]}]},{"pos":[12957,13056],"content":"The equivalent string representation of this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> .","needQuote":true,"needEscape":true,"source":"The equivalent string representation of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> ."},{"pos":[13616,13810],"content":"Converts the value of this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.","needQuote":true,"needEscape":true,"source":"Converts the value of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type."},{"pos":[14013,14051],"content":"A service reference for prefix lookup.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service reference for prefix lookup.","pos":[0,38]}]},{"pos":[14109,14133],"content":"A prefixed usage string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A prefixed usage string.","pos":[0,24]}]},{"pos":[14313,14628],"content":"<xref:System.Xaml.Schema.XamlTypeName.Namespace*> for this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <xref:System.Xaml.Schema.XamlTypeName.Name*> is not valid.       -or-       Could not look up the prefix.","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Xaml.Schema.XamlTypeName.Namespace<bpt id=\"p1\">*</bpt>&gt; for this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.       -or-       &lt;xref:System.Xaml.Schema.XamlTypeName.Name<ept id=\"p1\">*</ept>&gt; is not valid.","pos":[0,252],"source":"<xref:System.Xaml.Schema.XamlTypeName.Namespace*> for this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <xref:System.Xaml.Schema.XamlTypeName.Name*> is not valid."},{"content":"-or-       Could not look up the prefix.","pos":[259,299]}]},{"pos":[15310,15512],"content":"Converts the value of this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.","needQuote":true,"needEscape":true,"source":"Converts the value of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types."},{"pos":[15833,15849],"content":"A list of types.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of types.","pos":[0,16]}]},{"pos":[15939,15977],"content":"A service reference for prefix lookup.","needQuote":true,"needEscape":true,"nodes":[{"content":"A service reference for prefix lookup.","pos":[0,38]}]},{"pos":[16035,16077],"content":"A concatenated string of all type results.","needQuote":true,"needEscape":true,"nodes":[{"content":"A concatenated string of all type results.","pos":[0,42]}]},{"pos":[16248,16367],"content":"<ph id=\"ph1\">&lt;code&gt;prefixLookup&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;typeNameList&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>prefixLookup</code> or <code>typeNameList</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17010,17165],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on a type name and an object that can resolve a markup prefix into a namespace.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a type name and an object that can resolve a markup prefix into a namespace."},{"pos":[17414,17503],"content":"The type name to create a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value for.","needQuote":true,"needEscape":true,"source":"The type name to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value for."},{"pos":[17598,17700],"content":"An object or service provider that implements <bpt id=\"p1\">&lt;xref href=\"System.Xaml.IXamlNamespaceResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>."},{"pos":[17781,17958],"content":"Out parameter that contains the created <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the return value is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Out parameter that contains the created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> if the return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[18017,18229],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the parse was successful and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains a useful value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parse was successful and <code>result</code> contains a useful value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18400,18520],"content":"<ph id=\"ph1\">&lt;code&gt;typeName&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>typeName</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19272,19462],"content":"Provides a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.","needQuote":true,"needEscape":true,"source":"Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace."},{"pos":[19757,19808],"content":"A string that contains multiple types. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains multiple types. See Remarks.","pos":[0,51],"nodes":[{"content":"A string that contains multiple types.","pos":[0,38]},{"content":"See Remarks.","pos":[39,51]}]}]},{"pos":[19903,20005],"content":"An object or service provider that implements <bpt id=\"p1\">&lt;xref href=\"System.Xaml.IXamlNamespaceResolver\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>."},{"pos":[20120,20297],"content":"Out parameter that contains the created <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the return value is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Out parameter that contains the created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> if the return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[20356,20568],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the parse was successful and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains a useful value; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parse was successful and <code>result</code> contains a useful value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20743,20867],"content":"<ph id=\"ph1\">&lt;code&gt;typeNameList&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;namespaceResolver&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>typeNameList</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[21239,21339],"content":"Gets the type arguments used to construct this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeName\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the type arguments used to construct this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>."},{"pos":[21351,21538],"content":"If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of TypeArguments is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"If a &lt;xref:System.Xaml.XamlType&gt; was used to construct this &lt;xref:System.Xaml.Schema.XamlTypeName&gt;, the value of TypeArguments is formed from &lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;.","pos":[0,187],"source":"If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of TypeArguments is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>."}]},{"pos":[21767,21807],"content":"The type arguments, if any. May be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type arguments, if any. May be null.","pos":[0,40],"nodes":[{"content":"The type arguments, if any.","pos":[0,27]},{"content":"May be null.","pos":[28,40]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.Schema.XamlTypeName\n  id: XamlTypeName\n  children:\n  - System.Xaml.Schema.XamlTypeName.#ctor\n  - System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)\n  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)\n  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})\n  - System.Xaml.Schema.XamlTypeName.Name\n  - System.Xaml.Schema.XamlTypeName.Namespace\n  - System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)\n  - System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)\n  - System.Xaml.Schema.XamlTypeName.ToString\n  - System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)\n  - System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)\n  - System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)\n  - System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)\n  - System.Xaml.Schema.XamlTypeName.TypeArguments\n  langs:\n  - csharp\n  name: XamlTypeName\n  nameWithType: XamlTypeName\n  fullName: System.Xaml.Schema.XamlTypeName\n  type: Class\n  summary: Provides a means to specify a XAML type in terms of name and namespace.\n  remarks: <xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas XamlTypeName is more of a data structure that provides different ways of specifying that type. XamlTypeName also provides static helper methods for generating a XamlTypeName by resolving an existing type identifier in a XAML namespace.\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{{{Namespace}}}{Name}{TypeArgStringForDebugger}\")]\n\n      public class XamlTypeName\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.#ctor\n  id: '#ctor'\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: XamlTypeName()\n  nameWithType: XamlTypeName.XamlTypeName()\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class.\n  syntax:\n    content: public XamlTypeName ();\n    parameters: []\n  overload: System.Xaml.Schema.XamlTypeName.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)\n  id: '#ctor(System.Xaml.XamlType)'\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: XamlTypeName(XamlType)\n  nameWithType: XamlTypeName.XamlTypeName(XamlType)\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class, based on an existing <xref href=\"System.Xaml.XamlType\"></xref>.\n  syntax:\n    content: public XamlTypeName (System.Xaml.XamlType xamlType);\n    parameters:\n    - id: xamlType\n      type: System.Xaml.XamlType\n      description: An existing <xref href=\"System.Xaml.XamlType\"></xref>.\n  overload: System.Xaml.Schema.XamlTypeName.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>xamlType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: XamlTypeName(String,String)\n  nameWithType: XamlTypeName.XamlTypeName(String,String)\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class, based on name and namespace strings.\n  syntax:\n    content: public XamlTypeName (string xamlNamespace, string name);\n    parameters:\n    - id: xamlNamespace\n      type: System.String\n      description: The XAML namespace that contains name.\n    - id: name\n      type: System.String\n      description: The name of the type to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> for.\n  overload: System.Xaml.Schema.XamlTypeName.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})\n  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})'\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)\n  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> class, based on name and namespace strings as well as an array of type arguments.\n  remarks: This is the signature to use if you are specifying a generic type and type arguments for that type.\n  syntax:\n    content: public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName> typeArguments);\n    parameters:\n    - id: xamlNamespace\n      type: System.String\n      description: The XAML namespace that contains `name`.\n    - id: name\n      type: System.String\n      description: The name of the type to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> for.\n    - id: typeArguments\n      type: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}\n      description: An array of type arguments, each of which must be a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>.\n  overload: System.Xaml.Schema.XamlTypeName.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.Name\n  id: Name\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XamlTypeName.Name\n  fullName: System.Xaml.Schema.XamlTypeName.Name\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Gets the name used to construct this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>.\n  remarks: If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Name is <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the type.\n  overload: System.Xaml.Schema.XamlTypeName.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.Namespace\n  id: Namespace\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: XamlTypeName.Namespace\n  fullName: System.Xaml.Schema.XamlTypeName.Namespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Gets the XAML namespace identifier used to construct this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>.\n  remarks: If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of Namespace is `xamlType.GetXamlNamespaces()[0]`.\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The XAML namespace identifier.\n  overload: System.Xaml.Schema.XamlTypeName.Namespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)\n  id: Parse(System.String,System.Xaml.IXamlNamespaceResolver)\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: Parse(String,IXamlNamespaceResolver)\n  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)\n  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a type name and an object that can resolve a markup prefix into a namespace.\n  syntax:\n    content: public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The type name to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value for.\n    - id: namespaceResolver\n      type: System.Xaml.IXamlNamespaceResolver\n      description: An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>.\n    return:\n      type: System.Xaml.Schema.XamlTypeName\n      description: The created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>.\n  overload: System.Xaml.Schema.XamlTypeName.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>typeName</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: String cannot be parsed.\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)\n  id: ParseList(System.String,System.Xaml.IXamlNamespaceResolver)\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: ParseList(String,IXamlNamespaceResolver)\n  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)\n  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.\n  remarks: \"The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:  \\n  \\n```  \\nNestedTypeName = Name | Name '+' NestedTypeName  \\nTypeName = NestedTypeName | NestedTypeName ‘[]’  \\nXamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs  \\nTypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’  \\nXamlTypeNameList = XamlTypeName XamlTypeNameList1  \\nXamlTypeNameList1 = empty | ‘,’ XamlTypeNameList  \\n```\"\n  syntax:\n    content: public static System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);\n    parameters:\n    - id: typeNameList\n      type: System.String\n      description: A string that contains multiple types. See Remarks.\n    - id: namespaceResolver\n      type: System.Xaml.IXamlNamespaceResolver\n      description: An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>.\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}\n      description: The created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>.\n  overload: System.Xaml.Schema.XamlTypeName.ParseList*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>typeNameList</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: String cannot be parsed.\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.ToString\n  id: ToString\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: XamlTypeName.ToString()\n  fullName: System.Xaml.Schema.XamlTypeName.ToString()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Converts the value of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> to its equivalent string representation.\n  remarks: This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`. s\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The equivalent string representation of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> .\n  overload: System.Xaml.Schema.XamlTypeName.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)\n  id: ToString(System.Xaml.INamespacePrefixLookup)\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: ToString(INamespacePrefixLookup)\n  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)\n  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Converts the value of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.\n  syntax:\n    content: public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);\n    parameters:\n    - id: prefixLookup\n      type: System.Xaml.INamespacePrefixLookup\n      description: A service reference for prefix lookup.\n    return:\n      type: System.String\n      description: A prefixed usage string.\n  overload: System.Xaml.Schema.XamlTypeName.ToString*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<xref:System.Xaml.Schema.XamlTypeName.Namespace*> for this <xref href=\\\"System.Xaml.Schema.XamlTypeName\\\"></xref> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <xref:System.Xaml.Schema.XamlTypeName.Name*> is not valid.  \\n  \\n -or-  \\n  \\n Could not look up the prefix.\"\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)\n  id: ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)\n  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)\n  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Converts the value of this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.\n  syntax:\n    content: public static string ToString (System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);\n    parameters:\n    - id: typeNameList\n      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}\n      description: A list of types.\n    - id: prefixLookup\n      type: System.Xaml.INamespacePrefixLookup\n      description: A service reference for prefix lookup.\n    return:\n      type: System.String\n      description: A concatenated string of all type results.\n  overload: System.Xaml.Schema.XamlTypeName.ToString*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>prefixLookup</code> or <code>typeNameList</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)\n  id: TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)\n  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)\n  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a type name and an object that can resolve a markup prefix into a namespace.\n  syntax:\n    content: public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The type name to create a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value for.\n    - id: namespaceResolver\n      type: System.Xaml.IXamlNamespaceResolver\n      description: An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>.\n    - id: result\n      type: System.Xaml.Schema.XamlTypeName\n      description: Out parameter that contains the created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> if the return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parse was successful and <code>result</code> contains a useful value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.Schema.XamlTypeName.TryParse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>typeName</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)\n  id: TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)\n  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)\n  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Provides a <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.\n  syntax:\n    content: public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> result);\n    parameters:\n    - id: typeNameList\n      type: System.String\n      description: A string that contains multiple types. See Remarks.\n    - id: namespaceResolver\n      type: System.Xaml.IXamlNamespaceResolver\n      description: An object or service provider that implements <xref href=\"System.Xaml.IXamlNamespaceResolver\"></xref>.\n    - id: result\n      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}\n      description: Out parameter that contains the created <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref> if the return value is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the parse was successful and <code>result</code> contains a useful value; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.Schema.XamlTypeName.TryParseList*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>typeNameList</code> or <code>namespaceResolver</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.Schema.XamlTypeName.TypeArguments\n  id: TypeArguments\n  parent: System.Xaml.Schema.XamlTypeName\n  langs:\n  - csharp\n  name: TypeArguments\n  nameWithType: XamlTypeName.TypeArguments\n  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Gets the type arguments used to construct this <xref href=\"System.Xaml.Schema.XamlTypeName\"></xref>.\n  remarks: If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of TypeArguments is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>.\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> TypeArguments { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}\n      description: The type arguments, if any. May be null.\n  overload: System.Xaml.Schema.XamlTypeName.TypeArguments*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Xaml.Schema.XamlTypeName.#ctor\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: XamlTypeName()\n  nameWithType: XamlTypeName.XamlTypeName()\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()\n- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: XamlTypeName(XamlType)\n  nameWithType: XamlTypeName.XamlTypeName(XamlType)\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: XamlTypeName(String,String)\n  nameWithType: XamlTypeName.XamlTypeName(String,String)\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)\n  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)\n  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)\n- uid: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<XamlTypeName>\n  nameWithType: IEnumerable<XamlTypeName>\n  fullName: System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Xaml.Schema.XamlTypeName>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.Schema.XamlTypeName\n    name: XamlTypeName\n    nameWithType: XamlTypeName\n    fullName: XamlTypeName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.Schema.XamlTypeName.Name\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: Name\n  nameWithType: XamlTypeName.Name\n  fullName: System.Xaml.Schema.XamlTypeName.Name\n- uid: System.Xaml.Schema.XamlTypeName.Namespace\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: Namespace\n  nameWithType: XamlTypeName.Namespace\n  fullName: System.Xaml.Schema.XamlTypeName.Namespace\n- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: Parse(String,IXamlNamespaceResolver)\n  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)\n  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)\n- uid: System.Xaml.Schema.XamlTypeName\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlTypeName\n  nameWithType: XamlTypeName\n  fullName: System.Xaml.Schema.XamlTypeName\n- uid: System.Xaml.IXamlNamespaceResolver\n  parent: System.Xaml\n  isExternal: false\n  name: IXamlNamespaceResolver\n  nameWithType: IXamlNamespaceResolver\n  fullName: System.Xaml.IXamlNamespaceResolver\n- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: ParseList(String,IXamlNamespaceResolver)\n  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)\n  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)\n- uid: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<XamlTypeName>\n  nameWithType: IList<XamlTypeName>\n  fullName: System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Xaml.Schema.XamlTypeName>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.Schema.XamlTypeName\n    name: XamlTypeName\n    nameWithType: XamlTypeName\n    fullName: XamlTypeName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.Schema.XamlTypeName.ToString\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: ToString()\n  nameWithType: XamlTypeName.ToString()\n  fullName: System.Xaml.Schema.XamlTypeName.ToString()\n- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: ToString(INamespacePrefixLookup)\n  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)\n  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)\n- uid: System.Xaml.INamespacePrefixLookup\n  parent: System.Xaml\n  isExternal: false\n  name: INamespacePrefixLookup\n  nameWithType: INamespacePrefixLookup\n  fullName: System.Xaml.INamespacePrefixLookup\n- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)\n  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)\n  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)\n- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)\n  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)\n  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)\n  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)\n  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)\n- uid: System.Xaml.Schema.XamlTypeName.TypeArguments\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: TypeArguments\n  nameWithType: XamlTypeName.TypeArguments\n  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments\n- uid: System.Xaml.Schema.XamlTypeName.#ctor*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: XamlTypeName\n  nameWithType: XamlTypeName.XamlTypeName\n- uid: System.Xaml.Schema.XamlTypeName.Name*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: Name\n  nameWithType: XamlTypeName.Name\n- uid: System.Xaml.Schema.XamlTypeName.Namespace*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: Namespace\n  nameWithType: XamlTypeName.Namespace\n- uid: System.Xaml.Schema.XamlTypeName.Parse*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: Parse\n  nameWithType: XamlTypeName.Parse\n- uid: System.Xaml.Schema.XamlTypeName.ParseList*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: ParseList\n  nameWithType: XamlTypeName.ParseList\n- uid: System.Xaml.Schema.XamlTypeName.ToString*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: ToString\n  nameWithType: XamlTypeName.ToString\n- uid: System.Xaml.Schema.XamlTypeName.TryParse*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: TryParse\n  nameWithType: XamlTypeName.TryParse\n- uid: System.Xaml.Schema.XamlTypeName.TryParseList*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: TryParseList\n  nameWithType: XamlTypeName.TryParseList\n- uid: System.Xaml.Schema.XamlTypeName.TypeArguments*\n  parent: System.Xaml.Schema.XamlTypeName\n  isExternal: false\n  name: TypeArguments\n  nameWithType: XamlTypeName.TypeArguments\n"}