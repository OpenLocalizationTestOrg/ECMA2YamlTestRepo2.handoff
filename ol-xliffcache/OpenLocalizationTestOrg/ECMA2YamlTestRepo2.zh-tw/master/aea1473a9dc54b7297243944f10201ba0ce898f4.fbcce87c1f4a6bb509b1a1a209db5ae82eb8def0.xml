{"nodes":[{"pos":[551,634],"content":"Indicates whether a listener should trace a message based on the source of a trace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a listener should trace a message based on the source of a trace.","pos":[0,83]}]},{"pos":[2250,2384],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.SourceFilter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, specifying the name of the trace source.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Diagnostics.SourceFilter\"></xref> class, specifying the name of the trace source."},{"pos":[2396,2516],"content":"The value of the <ph id=\"ph1\">`source`</ph> parameter is used to initialize the &lt;xref:System.Diagnostics.SourceFilter.Source%2A&gt; property.","needQuote":true,"needEscape":true,"source":"The value of the `source` parameter is used to initialize the <xref:System.Diagnostics.SourceFilter.Source%2A> property."},{"pos":[3317,3346],"content":"The name of the trace source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the trace source.","pos":[0,29]}]},{"pos":[4314,4375],"content":"Determines whether the trace listener should trace the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the trace listener should trace the event.","pos":[0,61]}]},{"pos":[4387,4536],"content":"If the value of the <ph id=\"ph1\">`source`</ph> parameter matches the value of the &lt;xref:System.Diagnostics.SourceFilter.Source%2A&gt; property, the method returns <ph id=\"ph2\">`true`</ph>.","needQuote":true,"needEscape":true,"source":"If the value of the `source` parameter matches the value of the <xref:System.Diagnostics.SourceFilter.Source%2A> property, the method returns `true`."},{"pos":[4871,4939],"content":"An object that represents the information cache for the trace event.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that represents the information cache for the trace event.","pos":[0,68]}]},{"pos":[5002,5025],"content":"The name of the source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the source.","pos":[0,23]}]},{"pos":[5111,5172],"content":"One of the enumeration values that identifies the event type.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that identifies the event type.","pos":[0,61]}]},{"pos":[5230,5256],"content":"A trace identifier number.","needQuote":true,"needEscape":true,"nodes":[{"content":"A trace identifier number.","pos":[0,26]}]},{"pos":[5328,5402],"content":"The format to use for writing an array of arguments or a message to write.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format to use for writing an array of arguments or a message to write.","pos":[0,74]}]},{"pos":[5465,5494],"content":"An array of argument objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of argument objects.","pos":[0,29]}]},{"pos":[5556,5576],"content":"A trace data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A trace data object.","pos":[0,20]}]},{"pos":[5639,5670],"content":"An array of trace data objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of trace data objects.","pos":[0,31]}]},{"pos":[5729,5897],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the trace should be produced; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the trace should be produced; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6071,6155],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>source</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6487,6529],"content":"Gets or sets the name of the trace source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of the trace source.","pos":[0,42]}]},{"pos":[6541,6797],"content":"Source identifies the trace source for which to write trace information. Trace information will not be written for other trace sources. The name of the trace source is the `name` parameter from the constructor for the <xref:System.Diagnostics.TraceSource>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Source identifies the trace source for which to write trace information.","pos":[0,72]},{"content":"Trace information will not be written for other trace sources.","pos":[73,135]},{"content":"The name of the trace source is the <ph id=\"ph1\">`name`</ph> parameter from the constructor for the &lt;xref:System.Diagnostics.TraceSource&gt;.","pos":[136,256],"source":" The name of the trace source is the `name` parameter from the constructor for the <xref:System.Diagnostics.TraceSource>."}]},{"pos":[6913,6942],"content":"The name of the trace source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the trace source.","pos":[0,29]}]},{"pos":[7111,7185],"content":"The value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SourceFilter\n  id: SourceFilter\n  children:\n  - System.Diagnostics.SourceFilter.#ctor(System.String)\n  - System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  - System.Diagnostics.SourceFilter.Source\n  langs:\n  - csharp\n  name: SourceFilter\n  nameWithType: SourceFilter\n  fullName: System.Diagnostics.SourceFilter\n  type: Class\n  summary: Indicates whether a listener should trace a message based on the source of a trace.\n  remarks: \"One of several different types of filters can be assigned to a trace listener to provide a layer of screening beyond that provided by the trace switch. The filter can be used to control the level of tracing that is produced by the listener.  \\n  \\n This class filters events based on a specific trace source set by the user.  \\n  \\n SourceFilter overrides the [TraceFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object\\\\[\\\\], Object, Object\\\\[\\\\])](assetId:///M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])?qualifyHint=False&autoUpgrade=True) method and defines a <xref:System.Diagnostics.SourceFilter.Source%2A> property that specifies the name of the trace source to be traced by the listener.  \\n  \\n> [!NOTE]\\n>  This filter is provided because multiple trace sources can simultaneously use the same trace listener.\"\n  syntax:\n    content: 'public class SourceFilter : System.Diagnostics.TraceFilter'\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceFilter\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SourceFilter.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.SourceFilter\n  langs:\n  - csharp\n  name: SourceFilter(String)\n  nameWithType: SourceFilter.SourceFilter(String)\n  fullName: System.Diagnostics.SourceFilter.SourceFilter(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.SourceFilter\"></xref> class, specifying the name of the trace source.\n  remarks: The value of the `source` parameter is used to initialize the <xref:System.Diagnostics.SourceFilter.Source%2A> property.\n  example:\n  - \"The following code example calls the <xref:System.Diagnostics.TraceSource.TraceData%2A> method using two different source filters, one with a fictitious name, the other with the name of the current trace source. In the first case, the trace is not written to the console; in the second case, the trace is written. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \\n  \\n [!code-cs[System.Diagnostics.TraceSource#28](~/add/codesnippet/csharp/m-system.diagnostics.sou_1_1.cs)]\\n [!code-vb[System.Diagnostics.TraceSource#28](~/add/codesnippet/visualbasic/m-system.diagnostics.sou_1_1.vb)]\"\n  syntax:\n    content: public SourceFilter (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: The name of the trace source.\n  overload: System.Diagnostics.SourceFilter.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  id: ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  parent: System.Diagnostics.SourceFilter\n  langs:\n  - csharp\n  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  nameWithType: SourceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  fullName: System.Diagnostics.SourceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Determines whether the trace listener should trace the event.\n  remarks: If the value of the `source` parameter matches the value of the <xref:System.Diagnostics.SourceFilter.Source%2A> property, the method returns `true`.\n  syntax:\n    content: public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);\n    parameters:\n    - id: cache\n      type: System.Diagnostics.TraceEventCache\n      description: An object that represents the information cache for the trace event.\n    - id: source\n      type: System.String\n      description: The name of the source.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the enumeration values that identifies the event type.\n    - id: id\n      type: System.Int32\n      description: A trace identifier number.\n    - id: formatOrMessage\n      type: System.String\n      description: The format to use for writing an array of arguments or a message to write.\n    - id: args\n      type: System.Object[]\n      description: An array of argument objects.\n    - id: data1\n      type: System.Object\n      description: A trace data object.\n    - id: data\n      type: System.Object[]\n      description: An array of trace data objects.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the trace should be produced; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Diagnostics.SourceFilter.ShouldTrace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>source</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Diagnostics.SourceFilter.Source\n  id: Source\n  parent: System.Diagnostics.SourceFilter\n  langs:\n  - csharp\n  name: Source\n  nameWithType: SourceFilter.Source\n  fullName: System.Diagnostics.SourceFilter.Source\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets or sets the name of the trace source.\n  remarks: Source identifies the trace source for which to write trace information. Trace information will not be written for other trace sources. The name of the trace source is the `name` parameter from the constructor for the <xref:System.Diagnostics.TraceSource>.\n  syntax:\n    content: public string Source { get; set; }\n    return:\n      type: System.String\n      description: The name of the trace source.\n  overload: System.Diagnostics.SourceFilter.Source*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Diagnostics.TraceFilter\n  isExternal: false\n  name: System.Diagnostics.TraceFilter\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Diagnostics.SourceFilter.#ctor(System.String)\n  parent: System.Diagnostics.SourceFilter\n  isExternal: false\n  name: SourceFilter(String)\n  nameWithType: SourceFilter.SourceFilter(String)\n  fullName: System.Diagnostics.SourceFilter.SourceFilter(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])\n  parent: System.Diagnostics.SourceFilter\n  isExternal: false\n  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  nameWithType: SourceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n  fullName: System.Diagnostics.SourceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.SourceFilter.Source\n  parent: System.Diagnostics.SourceFilter\n  isExternal: false\n  name: Source\n  nameWithType: SourceFilter.Source\n  fullName: System.Diagnostics.SourceFilter.Source\n- uid: System.Diagnostics.SourceFilter.#ctor*\n  parent: System.Diagnostics.SourceFilter\n  isExternal: false\n  name: SourceFilter\n  nameWithType: SourceFilter.SourceFilter\n- uid: System.Diagnostics.SourceFilter.ShouldTrace*\n  parent: System.Diagnostics.SourceFilter\n  isExternal: false\n  name: ShouldTrace\n  nameWithType: SourceFilter.ShouldTrace\n- uid: System.Diagnostics.SourceFilter.Source*\n  parent: System.Diagnostics.SourceFilter\n  isExternal: false\n  name: Source\n  nameWithType: SourceFilter.Source\n"}