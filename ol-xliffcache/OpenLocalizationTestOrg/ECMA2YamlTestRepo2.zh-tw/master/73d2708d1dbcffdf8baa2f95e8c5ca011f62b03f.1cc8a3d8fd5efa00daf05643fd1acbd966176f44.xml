{"nodes":[{"pos":[740,805],"content":"Represents the address of an electronic mail sender or recipient.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the address of an electronic mail sender or recipient.","pos":[0,65]}]},{"pos":[4998,5115],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Mail.MailAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified address.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Mail.MailAddress\"></xref> class using the specified address."},{"pos":[5128,5879],"content":"The `address` parameter can contain a display name and the associated e-mail address if you enclose the address in angle brackets. For example:       `\"Tom Smith <tsmith@contoso.com>\"`       White space is permitted between the display name and the angle brackets.       The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address.      |Property|Value|   |--------------|-----------|   |<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`\"Tom Smith\"`|   |<xref:System.Net.Mail.MailAddress.Host%2A>|`\"contoso.com\"`|   |<xref:System.Net.Mail.MailAddress.User%2A>|`\"tsmith\"`|   |<xref:System.Net.Mail.MailAddress.Address%2A>|`\"tsmith@contoso.com\"`|","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`address`</ph> parameter can contain a display name and the associated e-mail address if you enclose the address in angle brackets.","pos":[0,130],"source":"The `address` parameter can contain a display name and the associated e-mail address if you enclose the address in angle brackets."},{"content":"For example:       <ph id=\"ph1\">`\"Tom Smith &lt;tsmith@contoso.com&gt;\"`</ph>       White space is permitted between the display name and the angle brackets.","pos":[131,264],"source":" For example:       `\"Tom Smith <tsmith@contoso.com>\"`       White space is permitted between the display name and the angle brackets."},{"content":"The following table shows the property values for a &lt;xref:System.Net.Mail.MailAddress&gt; object constructed using the preceding example address.","pos":[271,413],"source":"       The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address."},{"content":"|Property|Value|   |--------------|-----------|   |&lt;xref:System.Net.Mail.MailAddress.DisplayName%2A&gt;|<ph id=\"ph1\">`\"Tom Smith\"`</ph>|   |&lt;xref:System.Net.Mail.MailAddress.Host%2A&gt;|<ph id=\"ph2\">`\"contoso.com\"`</ph>|   |&lt;xref:System.Net.Mail.MailAddress.User%2A&gt;|<ph id=\"ph3\">`\"tsmith\"`</ph>|   |&lt;xref:System.Net.Mail.MailAddress.Address%2A&gt;|<ph id=\"ph4\">`\"tsmith@contoso.com\"`</ph><ph id=\"ph5\">|</ph>","pos":[419,728],"source":"      |Property|Value|   |--------------|-----------|   |<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`\"Tom Smith\"`|   |<xref:System.Net.Mail.MailAddress.Host%2A>|`\"contoso.com\"`|   |<xref:System.Net.Mail.MailAddress.User%2A>|`\"tsmith\"`|   |<xref:System.Net.Mail.MailAddress.Address%2A>|`\"tsmith@contoso.com\"`|"}]},{"pos":[6399,6454],"content":"A <xref:System.String> that contains an e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains an e-mail address.","pos":[0,55],"source":"A <xref:System.String> that contains an e-mail address."}]},{"pos":[6618,6703],"content":"<code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[21,85],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[6798,6879],"content":"<code>address</code> is &lt;xref:System.String?displayProperty=fullName&gt; (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> (\"\").","pos":[21,81],"source":"is &lt;xref:System.String?displayProperty=fullName&gt; (\"\")."}]},{"pos":[6970,7021],"content":"<code>address</code> is not in a recognized format.","needQuote":true,"needEscape":true,"nodes":[{"content":"is not in a recognized format.","pos":[21,51]}]},{"pos":[7458,7592],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Mail.MailAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified address and display name.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Mail.MailAddress\"></xref> class using the specified address and display name."},{"pos":[7605,8121],"content":"Leading and trailing white space in the display name is preserved.       If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding. Encoding non-ASCII characters is discussed in RFC 1522, which is available at [http://www.ietf.org](http://www.ietf.org).       If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String?displayProperty=fullName>, `displayName` overrides the value specified in `address`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Leading and trailing white space in the display name is preserved.","pos":[0,66]},{"content":"If <ph id=\"ph1\">`displayName`</ph> contains non-ASCII characters, the iso-8859-1 character set is used for the <ph id=\"ph2\">`displayName`</ph> encoding.","pos":[73,189],"source":"       If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding."},{"content":"Encoding non-ASCII characters is discussed in RFC 1522, which is available at <bpt id=\"p1\">[</bpt>http://www.ietf.org<ept id=\"p1\">](http://www.ietf.org)</ept>.","pos":[190,311],"source":" Encoding non-ASCII characters is discussed in RFC 1522, which is available at [http://www.ietf.org](http://www.ietf.org)."},{"content":"If <ph id=\"ph1\">`address`</ph> contains a display name, and <ph id=\"ph2\">`displayName`</ph> is not <ph id=\"ph3\">`null`</ph> and is not equal to &lt;xref:System.String?displayProperty=fullName&gt;, <ph id=\"ph4\">`displayName`</ph> overrides the value specified in <ph id=\"ph5\">`address`</ph>.","pos":[318,512],"source":"       If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String?displayProperty=fullName>, `displayName` overrides the value specified in `address`."}]},{"pos":[8631,8686],"content":"A <xref:System.String> that contains an e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains an e-mail address.","pos":[0,55],"source":"A <xref:System.String> that contains an e-mail address."}]},{"pos":[8754,8918],"content":"A <xref:System.String> that contains the display name associated with `address`. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the display name associated with <ph id=\"ph1\">`address`</ph>.","pos":[0,80],"source":"A <xref:System.String> that contains the display name associated with `address`."},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[81,164],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9082,9167],"content":"<code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[21,85],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[9262,9343],"content":"<code>address</code> is &lt;xref:System.String?displayProperty=fullName&gt; (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> (\"\").","pos":[21,81],"source":"is &lt;xref:System.String?displayProperty=fullName&gt; (\"\")."}]},{"pos":[9435,9559],"content":"<code>address</code> is not in a recognized format.       -or-       <code>address</code> contains non-ASCII characters.","needQuote":false,"needEscape":true,"nodes":[{"content":"is not in a recognized format.       -or-","pos":[21,62],"nodes":[{"content":"is not in a recognized format.","pos":[0,30]},{"content":"-or-","pos":[37,41]}]},{"content":"contains non-ASCII characters.","pos":[90,120]}]},{"pos":[10066,10211],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Mail.MailAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified address, display name, and encoding.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Mail.MailAddress\"></xref> class using the specified address, display name, and encoding."},{"pos":[10224,11375],"content":"Leading and trailing white space in the display name is preserved.       If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=fullName>, `displayName` overrides the value specified in `address`.       The MailAddress method does not check if the `displayName` parameter is valid. This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property. Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter. The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter. <xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified.       For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Leading and trailing white space in the display name is preserved.","pos":[0,66]},{"content":"If <ph id=\"ph1\">`address`</ph> contains a display name, and <ph id=\"ph2\">`displayName`</ph> is not <ph id=\"ph3\">`null`</ph> and is not equal to &lt;xref:System.String.Empty?displayProperty=fullName&gt;, <ph id=\"ph4\">`displayName`</ph> overrides the value specified in <ph id=\"ph5\">`address`</ph>.","pos":[73,273],"source":"       If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=fullName>, `displayName` overrides the value specified in `address`."},{"content":"The MailAddress method does not check if the <ph id=\"ph1\">`displayName`</ph> parameter is valid.","pos":[280,358],"source":"       The MailAddress method does not check if the `displayName` parameter is valid."},{"content":"This method removes surrounding quotes not displayed by the &lt;xref:System.Net.Mail.MailAddress.DisplayName%2A&gt; property.","pos":[359,478],"source":" This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property."},{"content":"Quotes will be added before transmission, except where &lt;xref:System.Text.Encoding.ASCII%2A&gt; or &lt;xref:System.Text.Encoding.Unicode%2A&gt; is specified in the <ph id=\"ph1\">`displayNameEncoding`</ph> parameter.","pos":[479,665],"source":" Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter."},{"content":"The encoding specified in the <ph id=\"ph1\">`displayNameEncoding`</ph> parameter will be applied to the &lt;xref:System.Net.Mail.MailAddress.DisplayName%2A&gt; property before transmission &lt;xref:System.Text.Encoding.ASCII%2A&gt; or &lt;xref:System.Text.Encoding.Unicode%2A&gt; is specified in the <ph id=\"ph2\">`displayNameEncoding`</ph> parameter.","pos":[666,961],"source":" The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter."},{"content":"&lt;xref:System.Text.Encoding.UTF8%2A&gt; is the default encoding if none is specified.","pos":[962,1043],"source":" <xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified."},{"content":"For more information on supported mail address formats, see &lt;xref:System.Net.Mail.MailAddress&gt;.","pos":[1050,1145],"source":"       For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>."}]},{"pos":[12001,12056],"content":"A <xref:System.String> that contains an e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains an e-mail address.","pos":[0,55],"source":"A <xref:System.String> that contains an e-mail address."}]},{"pos":[12124,12204],"content":"A &lt;xref:System.String&gt; that contains the display name associated with <ph id=\"ph1\">`address`</ph>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that contains the display name associated with `address`."},{"pos":[12287,12373],"content":"The &lt;xref:System.Text.Encoding&gt; that defines the character set used for <ph id=\"ph1\">`displayName`</ph>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Text.Encoding> that defines the character set used for `displayName`."},{"pos":[12538,12746],"content":"<code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>displayName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>displayName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","pos":[20,192],"nodes":[{"content":"is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[1,65],"source":" is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;displayName&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[72,172],"source":"       -or-       <code>displayName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]}]},{"pos":[12843,13047],"content":"<code>address</code> is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\"\").       -or-       <code>displayName</code> is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\"\").","needQuote":false,"needEscape":true,"nodes":[{"content":" is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\"\").       -or-       <code>displayName</code> is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\"\").","pos":[20,196],"nodes":[{"content":"is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> (\"\").","pos":[1,67],"source":" is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\"\")."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;displayName&lt;/code&gt;</ph> is <ph id=\"ph2\">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id=\"ph3\">&amp;gt;</ph> (\"\").","pos":[74,176],"source":"       -or-       <code>displayName</code> is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\"\")."}]}]},{"pos":[13140,13264],"content":"<code>address</code> is not in a recognized format.       -or-       <code>address</code> contains non-ASCII characters.","needQuote":false,"needEscape":true,"nodes":[{"content":"is not in a recognized format.       -or-","pos":[21,62],"nodes":[{"content":"is not in a recognized format.","pos":[0,30]},{"content":"-or-","pos":[37,41]}]},{"content":"contains non-ASCII characters.","pos":[90,120]}]},{"pos":[13586,13651],"content":"Gets the e-mail address specified when this instance was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the e-mail address specified when this instance was created.","pos":[0,65]}]},{"pos":[13663,13782],"content":"The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value returned by this property does not include the &lt;xref:System.Net.Mail.MailAddress.DisplayName%2A&gt; information.","pos":[0,119],"source":"The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information."}]},{"pos":[14171,14227],"content":"A <xref:System.String> that contains the e-mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the e-mail address.","pos":[0,56],"source":"A <xref:System.String> that contains the e-mail address."}]},{"pos":[14634,14752],"content":"Gets the display name composed from the display name and address information specified when this instance was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the display name composed from the display name and address information specified when this instance was created.","pos":[0,118]}]},{"pos":[14765,15105],"content":"Display names that contain non-ASCII characters are returned in human-readable form. Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the DisplayName.       Some software programs that are used to read e-mail display the DisplayName property value instead of, or in addition to, the e-mail address.","needQuote":false,"needEscape":true,"nodes":[{"content":"Display names that contain non-ASCII characters are returned in human-readable form. Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the DisplayName.       Some software programs that are used to read e-mail display the DisplayName property value instead of, or in addition to, the e-mail address.","pos":[0,338],"nodes":[{"content":"Display names that contain non-ASCII characters are returned in human-readable form.","pos":[0,84]},{"content":"Use the &lt;xref:System.Net.Mail.MailAddress.ToString%2A&gt; method to get the encoded form of the DisplayName.","pos":[85,190],"source":" Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the DisplayName."},{"content":"Some software programs that are used to read e-mail display the DisplayName property value instead of, or in addition to, the e-mail address.","pos":[197,338]}]}]},{"pos":[15508,15707],"content":"A <xref:System.String> that contains the display name; otherwise, &lt;xref:System.String?displayProperty=fullName&gt; (\"\") if no display name information was specified when this instance was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the display name; otherwise, <ph id=\"ph1\">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> (\"\") if no display name information was specified when this instance was created.","pos":[0,199],"source":"A <xref:System.String> that contains the display name; otherwise, &lt;xref:System.String?displayProperty=fullName&gt; (\"\") if no display name information was specified when this instance was created."}]},{"pos":[16145,16173],"content":"Compares two mail addresses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Compares two mail addresses.","pos":[0,28]}]},{"pos":[16318,16413],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Mail.MailAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to compare to the current instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Mail.MailAddress\"></xref> instance to compare to the current instance."},{"pos":[16472,16644],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two mail addresses are equal; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two mail addresses are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17054,17094],"content":"Returns a hash value for a mail address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a hash value for a mail address.","pos":[0,40]}]},{"pos":[17106,17217],"content":"The GetHashCode method returns a hash code of the mail address. This value can be used as a key in hash tables.","needQuote":true,"needEscape":true,"nodes":[{"content":"The GetHashCode method returns a hash code of the mail address. This value can be used as a key in hash tables.","pos":[0,111],"nodes":[{"content":"The GetHashCode method returns a hash code of the mail address.","pos":[0,63]},{"content":"This value can be used as a key in hash tables.","pos":[64,111]}]}]},{"pos":[17352,17374],"content":"An integer hash value.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer hash value.","pos":[0,22]}]},{"pos":[17750,17828],"content":"Gets the host portion of the address specified when this instance was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the host portion of the address specified when this instance was created.","pos":[0,78]}]},{"pos":[17840,18004],"content":"In a typical e-mail address, the host string includes all information following the \"`@`\" sign. For example, in `\"tsmith@contoso.com\"`, the host is `\"contoso.com\"`.","needQuote":true,"needEscape":true,"nodes":[{"content":"In a typical e-mail address, the host string includes all information following the \"<ph id=\"ph1\">`@`</ph>\" sign.","pos":[0,95],"source":"In a typical e-mail address, the host string includes all information following the \"`@`\" sign."},{"content":"For example, in <ph id=\"ph1\">`\"tsmith@contoso.com\"`</ph>, the host is <ph id=\"ph2\">`\"contoso.com\"`</ph>.","pos":[96,164],"source":" For example, in `\"tsmith@contoso.com\"`, the host is `\"contoso.com\"`."}]},{"pos":[18381,18526],"content":"A <xref:System.String> that contains the name of the host computer that accepts e-mail for the <xref:System.Net.Mail.MailAddress.User*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the name of the host computer that accepts e-mail for the &lt;xref:System.Net.Mail.MailAddress.User*&gt; property.","pos":[0,145],"source":"A <xref:System.String> that contains the name of the host computer that accepts e-mail for the <xref:System.Net.Mail.MailAddress.User*> property."}]},{"pos":[18919,18968],"content":"Returns a string representation of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a string representation of this instance.","pos":[0,49]}]},{"pos":[20101,20208],"content":"A &lt;xref:System.String&gt; that contains the contents of this <bpt id=\"p1\">&lt;xref href=\"System.Net.Mail.MailAddress\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref:System.String> that contains the contents of this <xref href=\"System.Net.Mail.MailAddress\"></xref>."},{"pos":[20581,20665],"content":"Gets the user information from the address specified when this instance was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the user information from the address specified when this instance was created.","pos":[0,84]}]},{"pos":[20677,20836],"content":"In a typical e-mail address, the user string includes all information preceding the \"`@`\" sign. For example, in `\"tsmith@contoso.com\"`, the user is `\"tsmith\"`.","needQuote":true,"needEscape":true,"nodes":[{"content":"In a typical e-mail address, the user string includes all information preceding the \"<ph id=\"ph1\">`@`</ph>\" sign.","pos":[0,95],"source":"In a typical e-mail address, the user string includes all information preceding the \"`@`\" sign."},{"content":"For example, in <ph id=\"ph1\">`\"tsmith@contoso.com\"`</ph>, the user is <ph id=\"ph2\">`\"tsmith\"`</ph>.","pos":[96,159],"source":" For example, in `\"tsmith@contoso.com\"`, the user is `\"tsmith\"`."}]},{"pos":[21213,21323],"content":"A <xref:System.String> that contains the user name portion of the <xref:System.Net.Mail.MailAddress.Address*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the user name portion of the &lt;xref:System.Net.Mail.MailAddress.Address*&gt;.","pos":[0,110],"source":"A <xref:System.String> that contains the user name portion of the <xref:System.Net.Mail.MailAddress.Address*>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Mail.MailAddress\n  id: MailAddress\n  children:\n  - System.Net.Mail.MailAddress.#ctor(System.String)\n  - System.Net.Mail.MailAddress.#ctor(System.String,System.String)\n  - System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)\n  - System.Net.Mail.MailAddress.Address\n  - System.Net.Mail.MailAddress.DisplayName\n  - System.Net.Mail.MailAddress.Equals(System.Object)\n  - System.Net.Mail.MailAddress.GetHashCode\n  - System.Net.Mail.MailAddress.Host\n  - System.Net.Mail.MailAddress.ToString\n  - System.Net.Mail.MailAddress.User\n  langs:\n  - csharp\n  name: MailAddress\n  nameWithType: MailAddress\n  fullName: System.Net.Mail.MailAddress\n  type: Class\n  summary: Represents the address of an electronic mail sender or recipient.\n  remarks: \"The MailAddress class is used by the <xref:System.Net.Mail.SmtpClient> and <xref:System.Net.Mail.MailMessage> classes to store address information for e-mail messages.  \\n  \\n A mail address is composed of a <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name and optionally, a <xref:System.Net.Mail.MailAddress.DisplayName%2A>. The <xref:System.Net.Mail.MailAddress.DisplayName%2A> can contain non-ASCII characters if you encode them.  \\n  \\n The MailAddress class supports the following mail address formats:  \\n  \\n-   A simple address format of `user@host`. If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is not set, this is the mail address format generated.  \\n  \\n-   A standard quoted display name format of `\\\"display name\\\" <user@host>`. If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is set, this is the format generated.  \\n  \\n-   Angle brackets are added around the <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name for `\\\"display name\\\" user@host` if these are not included.  \\n  \\n-   Quotes are added around the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for `display name <user@host>`, if these are not included.  \\n  \\n-   Unicode characters are supported in the <xref:System.Net.Mail.MailAddress.DisplayName%2A>. property.  \\n  \\n-   A <xref:System.Net.Mail.MailAddress.User%2A> name with quotes. For example, `\\\"user name\\\"@host`.  \\n  \\n-   Consecutive and trailing dots in user names. For example, `user...name..@host`.  \\n  \\n-   Bracketed domain literals. For example, `<user@[my domain]>`.  \\n  \\n-   Comments. For example, `(comment)\\\"display name\\\"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. Comments are removed before transmission.  \\n  \\n A comma is used to separate elements in a list of mail addresses. As a result, a comma should not be used in unquoted display names in a list. The following mail addresses would be allowed  \\n  \\n `\\\"John, Doe\\\" <user@host>, \\\"Bob, Smith\\\" <user2@host>`  \\n  \\n The following mail address would not be allowed:  \\n  \\n `John, Doe <user@host>, Bob, Smith <user2@host>`  \\n  \\n Quotes can be embedded in a quoted string, but they must be escaped. The following mail addresses would be allowed  \\n  \\n `\\\"John \\\\\\\"Jr\\\\\\\" Doe\\\" <user@host>`  \\n  \\n `\\\"\\\\\\\"John \\\\\\\\\\\\\\\"Jr\\\\\\\\\\\\\\\" Doe\\\\\\\" <user@host>\\\"`  \\n  \\n The following mail address would not be allowed:  \\n  \\n `\\\"John \\\"Jr\\\" Doe\\\" <user@host>`  \\n  \\n When the username is note quoted, all text between the start of the string (or comma) and the address are considered part of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, including comments.  \\n  \\n -- Example: (non comment) unquoted display (non comment) name (non comment) \\\\<user@host>  \\n  \\n Although the MailAddress class accepts a mail address as valid, other mail servers may not accept the mail address.  \\n  \\n The MailAddress class does not support the following mail address formats:  \\n  \\n Mixed quoted and unquoted display names. For example, `display \\\"name\\\" <user@host>`  \\n  \\n Groups, as defined in RFC 2822 Section 3.4 published by the IETF.  \\n  \\n The obsolete user name formats of `\\\"user\\\".\\\"name\\\"@host, user.\\\"name\\\"@host` or `\\\"user\\\".name@host`\"\n  example:\n  - \"The following code example demonstrates sending an e-mail message by using the <xref:System.Net.Mail.SmtpClient>, MailAddress, and <xref:System.Net.Mail.MailMessage> classes.  \\n  \\n [!code-cpp[NclMailSync#10](~/add/codesnippet/cpp/t-system.net.mail.mailad_1_1.cpp)]\\n [!code-cs[NclMailSync#10](~/add/codesnippet/csharp/t-system.net.mail.mailad_1_1.cs)]\"\n  syntax:\n    content: public class MailAddress\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: MailAddress(String)\n  nameWithType: MailAddress.MailAddress(String)\n  fullName: System.Net.Mail.MailAddress.MailAddress(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Initializes a new instance of the <xref href=\"System.Net.Mail.MailAddress\"></xref> class using the specified address.\n  remarks: \"The `address` parameter can contain a display name and the associated e-mail address if you enclose the address in angle brackets. For example:  \\n  \\n `\\\"Tom Smith <tsmith@contoso.com>\\\"`  \\n  \\n White space is permitted between the display name and the angle brackets.  \\n  \\n The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`\\\"Tom Smith\\\"`|  \\n|<xref:System.Net.Mail.MailAddress.Host%2A>|`\\\"contoso.com\\\"`|  \\n|<xref:System.Net.Mail.MailAddress.User%2A>|`\\\"tsmith\\\"`|  \\n|<xref:System.Net.Mail.MailAddress.Address%2A>|`\\\"tsmith@contoso.com\\\"`|\"\n  example:\n  - \"The following code example uses this constructor to create a <xref:System.Net.Mail.MailAddress> object for the <xref:System.Net.Mail.MailMessage.Bcc%2A> recipient of an e-mail message.  \\n  \\n [!code-cpp[NclMailSync#9](~/add/codesnippet/cpp/m-system.net.mail.mailad_1_1.cpp)]\\n [!code-cs[NclMailSync#9](~/add/codesnippet/csharp/m-system.net.mail.mailad_1_1.cs)]\"\n  syntax:\n    content: public MailAddress (string address);\n    parameters:\n    - id: address\n      type: System.String\n      description: A <xref:System.String> that contains an e-mail address.\n  overload: System.Net.Mail.MailAddress.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>address</code> is &lt;xref:System.String?displayProperty=fullName&gt; (\"\").\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>address</code> is not in a recognized format.\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: MailAddress(String,String)\n  nameWithType: MailAddress.MailAddress(String,String)\n  fullName: System.Net.Mail.MailAddress.MailAddress(String,String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Initializes a new instance of the <xref href=\"System.Net.Mail.MailAddress\"></xref> class using the specified address and display name.\n  remarks: \"Leading and trailing white space in the display name is preserved.  \\n  \\n If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding. Encoding non-ASCII characters is discussed in RFC 1522, which is available at [http://www.ietf.org](http://www.ietf.org).  \\n  \\n If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String?displayProperty=fullName>, `displayName` overrides the value specified in `address`.\"\n  example:\n  - \"The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender and recipient of an e-mail message.  \\n  \\n [!code-cpp[NclMailSync#9](~/add/codesnippet/cpp/m-system.net.mail.mailad_0_1.cpp)]\\n [!code-cs[NclMailSync#9](~/add/codesnippet/csharp/m-system.net.mail.mailad_0_1.cs)]\"\n  syntax:\n    content: public MailAddress (string address, string displayName);\n    parameters:\n    - id: address\n      type: System.String\n      description: A <xref:System.String> that contains an e-mail address.\n    - id: displayName\n      type: System.String\n      description: A <xref:System.String> that contains the display name associated with `address`. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Net.Mail.MailAddress.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>address</code> is &lt;xref:System.String?displayProperty=fullName&gt; (\"\").\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>address</code> is not in a recognized format.  \\n  \\n -or-  \\n  \\n <code>address</code> contains non-ASCII characters.\"\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)\n  id: '#ctor(System.String,System.String,System.Text.Encoding)'\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: MailAddress(String,String,Encoding)\n  nameWithType: MailAddress.MailAddress(String,String,Encoding)\n  fullName: System.Net.Mail.MailAddress.MailAddress(String,String,Encoding)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Initializes a new instance of the <xref href=\"System.Net.Mail.MailAddress\"></xref> class using the specified address, display name, and encoding.\n  remarks: \"Leading and trailing white space in the display name is preserved.  \\n  \\n If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=fullName>, `displayName` overrides the value specified in `address`.  \\n  \\n The MailAddress method does not check if the `displayName` parameter is valid. This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property. Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter. The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter. <xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified.  \\n  \\n For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>.\"\n  example:\n  - \"The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender of an e-mail message.  \\n  \\n [!code-cs[NclMailASync#2](~/add/codesnippet/csharp/3eef20fd-9220-4c25-85a3-_1.cs)]\\n [!code-cpp[NclMailASync#2](~/add/codesnippet/cpp/3eef20fd-9220-4c25-85a3-_1.cpp)]\\n [!code-vb[NclMailASync#2](~/add/codesnippet/visualbasic/3eef20fd-9220-4c25-85a3-_1.vb)]\"\n  syntax:\n    content: public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);\n    parameters:\n    - id: address\n      type: System.String\n      description: A <xref:System.String> that contains an e-mail address.\n    - id: displayName\n      type: System.String\n      description: A <xref:System.String> that contains the display name associated with `address`.\n    - id: displayNameEncoding\n      type: System.Text.Encoding\n      description: The <xref:System.Text.Encoding> that defines the character set used for `displayName`.\n  overload: System.Net.Mail.MailAddress.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>address</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>displayName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>address</code> is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>displayName</code> is &lt;xref:System.String.Empty?displayProperty=fullName&gt; (\\\"\\\").\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>address</code> is not in a recognized format.  \\n  \\n -or-  \\n  \\n <code>address</code> contains non-ASCII characters.\"\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.Address\n  id: Address\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: Address\n  nameWithType: MailAddress.Address\n  fullName: System.Net.Mail.MailAddress.Address\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Gets the e-mail address specified when this instance was created.\n  remarks: The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information.\n  example:\n  - \"The following code example displays the address for an e-mail message recipient.  \\n  \\n [!code-cpp[NclMailSync#10](~/add/codesnippet/cpp/p-system.net.mail.mailad_2_1.cpp)]\\n [!code-cs[NclMailSync#10](~/add/codesnippet/csharp/p-system.net.mail.mailad_2_1.cs)]\"\n  syntax:\n    content: public string Address { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the e-mail address.\n  overload: System.Net.Mail.MailAddress.Address*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.DisplayName\n  id: DisplayName\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: MailAddress.DisplayName\n  fullName: System.Net.Mail.MailAddress.DisplayName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Gets the display name composed from the display name and address information specified when this instance was created.\n  remarks: \"Display names that contain non-ASCII characters are returned in human-readable form. Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the DisplayName.  \\n  \\n Some software programs that are used to read e-mail display the DisplayName property value instead of, or in addition to, the e-mail address.\"\n  example:\n  - \"The following code example displays the DisplayName for the recipient of an e-mail message.  \\n  \\n [!code-cpp[NclMailSync#9](~/add/codesnippet/cpp/p-system.net.mail.mailad_3_1.cpp)]\\n [!code-cs[NclMailSync#9](~/add/codesnippet/csharp/p-system.net.mail.mailad_3_1.cs)]\"\n  syntax:\n    content: public string DisplayName { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the display name; otherwise, &lt;xref:System.String?displayProperty=fullName&gt; (\"\") if no display name information was specified when this instance was created.\n  overload: System.Net.Mail.MailAddress.DisplayName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MailAddress.Equals(Object)\n  fullName: System.Net.Mail.MailAddress.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Compares two mail addresses.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: A <xref href=\"System.Net.Mail.MailAddress\"></xref> instance to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two mail addresses are equal; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Mail.MailAddress.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MailAddress.GetHashCode()\n  fullName: System.Net.Mail.MailAddress.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Returns a hash value for a mail address.\n  remarks: The GetHashCode method returns a hash code of the mail address. This value can be used as a key in hash tables.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer hash value.\n  overload: System.Net.Mail.MailAddress.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.Host\n  id: Host\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: Host\n  nameWithType: MailAddress.Host\n  fullName: System.Net.Mail.MailAddress.Host\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Gets the host portion of the address specified when this instance was created.\n  remarks: In a typical e-mail address, the host string includes all information following the \"`@`\" sign. For example, in `\"tsmith@contoso.com\"`, the host is `\"contoso.com\"`.\n  example:\n  - \"The following code example displays the destination of an e-mail message.  \\n  \\n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/p-system.net.mail.mailad_0_1.cpp)]\\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/p-system.net.mail.mailad_0_1.cs)]\"\n  syntax:\n    content: public string Host { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the name of the host computer that accepts e-mail for the <xref:System.Net.Mail.MailAddress.User*> property.\n  overload: System.Net.Mail.MailAddress.Host*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.ToString\n  id: ToString\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MailAddress.ToString()\n  fullName: System.Net.Mail.MailAddress.ToString()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Returns a string representation of this instance.\n  remarks: \"The string returned by this method is not necessarily identical to the string specified when the instance was created. If the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property is not `null` and not equal to <xref:System.String.Empty?displayProperty=fullName> (\\\"\\\"), ToString returns a string composed using the following syntax:  \\n  \\n <xref:System.Net.Mail.MailAddress.DisplayName%2A> \\\\<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  \\n  \\n If <xref:System.Net.Mail.MailAddress.DisplayName%2A> is `null` or is equal to <xref:System.String.Empty?displayProperty=fullName>, ToString returns the value of the <xref:System.Net.Mail.MailAddress.Address%2A> property.\"\n  example:\n  - \"The following code example displays the destination of an e-mail message.  \\n  \\n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/m-system.net.mail.mailad_2_1.cpp)]\\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/m-system.net.mail.mailad_2_1.cs)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the contents of this <xref href=\"System.Net.Mail.MailAddress\"></xref>.\n  overload: System.Net.Mail.MailAddress.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Mail.MailAddress.User\n  id: User\n  parent: System.Net.Mail.MailAddress\n  langs:\n  - csharp\n  name: User\n  nameWithType: MailAddress.User\n  fullName: System.Net.Mail.MailAddress.User\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Mail\n  summary: Gets the user information from the address specified when this instance was created.\n  remarks: In a typical e-mail address, the user string includes all information preceding the \"`@`\" sign. For example, in `\"tsmith@contoso.com\"`, the user is `\"tsmith\"`.\n  example:\n  - \"The following code example displays the destination of an e-mail message.  \\n  \\n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/p-system.net.mail.mailad_1_1.cpp)]\\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/p-system.net.mail.mailad_1_1.cs)]\"\n  syntax:\n    content: public string User { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the user name portion of the <xref:System.Net.Mail.MailAddress.Address*>.\n  overload: System.Net.Mail.MailAddress.User*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.Net.Mail.MailAddress.#ctor(System.String)\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: MailAddress(String)\n  nameWithType: MailAddress.MailAddress(String)\n  fullName: System.Net.Mail.MailAddress.MailAddress(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Mail.MailAddress.#ctor(System.String,System.String)\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: MailAddress(String,String)\n  nameWithType: MailAddress.MailAddress(String,String)\n  fullName: System.Net.Mail.MailAddress.MailAddress(String,String)\n- uid: System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: MailAddress(String,String,Encoding)\n  nameWithType: MailAddress.MailAddress(String,String,Encoding)\n  fullName: System.Net.Mail.MailAddress.MailAddress(String,String,Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: true\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Net.Mail.MailAddress.Address\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: Address\n  nameWithType: MailAddress.Address\n  fullName: System.Net.Mail.MailAddress.Address\n- uid: System.Net.Mail.MailAddress.DisplayName\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: DisplayName\n  nameWithType: MailAddress.DisplayName\n  fullName: System.Net.Mail.MailAddress.DisplayName\n- uid: System.Net.Mail.MailAddress.Equals(System.Object)\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MailAddress.Equals(Object)\n  fullName: System.Net.Mail.MailAddress.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Mail.MailAddress.GetHashCode\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MailAddress.GetHashCode()\n  fullName: System.Net.Mail.MailAddress.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Mail.MailAddress.Host\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: Host\n  nameWithType: MailAddress.Host\n  fullName: System.Net.Mail.MailAddress.Host\n- uid: System.Net.Mail.MailAddress.ToString\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: ToString()\n  nameWithType: MailAddress.ToString()\n  fullName: System.Net.Mail.MailAddress.ToString()\n- uid: System.Net.Mail.MailAddress.User\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: User\n  nameWithType: MailAddress.User\n  fullName: System.Net.Mail.MailAddress.User\n- uid: System.Net.Mail.MailAddress.#ctor*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: MailAddress\n  nameWithType: MailAddress.MailAddress\n- uid: System.Net.Mail.MailAddress.Address*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: Address\n  nameWithType: MailAddress.Address\n- uid: System.Net.Mail.MailAddress.DisplayName*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: DisplayName\n  nameWithType: MailAddress.DisplayName\n- uid: System.Net.Mail.MailAddress.Equals*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: Equals\n  nameWithType: MailAddress.Equals\n- uid: System.Net.Mail.MailAddress.GetHashCode*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: GetHashCode\n  nameWithType: MailAddress.GetHashCode\n- uid: System.Net.Mail.MailAddress.Host*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: Host\n  nameWithType: MailAddress.Host\n- uid: System.Net.Mail.MailAddress.ToString*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: ToString\n  nameWithType: MailAddress.ToString\n- uid: System.Net.Mail.MailAddress.User*\n  parent: System.Net.Mail.MailAddress\n  isExternal: false\n  name: User\n  nameWithType: MailAddress.User\n"}