{"nodes":[{"pos":[2250,2363],"content":"Serves as the base class for all data source view classes, which define the capabilities of data source controls.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serves as the base class for all data source view classes, which define the capabilities of data source controls.","pos":[0,113]}]},{"pos":[2376,4932],"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.       You use the data source controls that are provided with ASP.NET, including <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, and <xref:System.Web.UI.WebControls.XmlDataSource>, to perform most Web development tasks. You use the base <xref:System.Web.UI.DataSourceControl> and DataSourceView classes when you want to implement your own custom data source control.       You can think of a data source control as the combination of the <xref:System.Web.UI.IDataSource> object and its associated lists of data, called data source views. Each list of data is represented by a DataSourceView object. The DataSourceView class is the base class for all data source views, or lists of data, associated with data source controls. Data source views define the capabilities of a data source control. Because the underlying data storage contains one or more lists of data, a data source control is always associated with one or more named data source views. The data source control uses the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method to enumerate the data source views currently associated with the data source control and the <xref:System.Web.UI.DataSourceControl.GetView%2A> method to retrieve a specific data source view instance by name.       All DataSourceView objects support data retrieval from the underlying data source using the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. All views optionally support a basic set of operations, including operations such as <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, and <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.DataSourceControl.GetView%2A> and <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> methods, and by querying the view at design time or run time.","needQuote":false,"needEscape":true,"nodes":[{"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.       You use the data source controls that are provided with ASP.NET, including <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, and <xref:System.Web.UI.WebControls.XmlDataSource>, to perform most Web development tasks. You use the base <xref:System.Web.UI.DataSourceControl> and DataSourceView classes when you want to implement your own custom data source control.       You can think of a data source control as the combination of the <xref:System.Web.UI.IDataSource> object and its associated lists of data, called data source views. Each list of data is represented by a DataSourceView object. The DataSourceView class is the base class for all data source views, or lists of data, associated with data source controls. Data source views define the capabilities of a data source control. Because the underlying data storage contains one or more lists of data, a data source control is always associated with one or more named data source views. The data source control uses the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method to enumerate the data source views currently associated with the data source control and the <xref:System.Web.UI.DataSourceControl.GetView%2A> method to retrieve a specific data source view instance by name.       All DataSourceView objects support data retrieval from the underlying data source using the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. All views optionally support a basic set of operations, including operations such as <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, and <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.DataSourceControl.GetView%2A> and <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> methods, and by querying the view at design time or run time.","pos":[0,2550],"nodes":[{"content":"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data in a consistent fashion.","pos":[0,118]},{"content":"Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls.","pos":[119,274]},{"content":"Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on.","pos":[275,397]},{"content":"Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.","pos":[398,534]},{"content":"You use the data source controls that are provided with ASP.NET, including &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt;, &lt;xref:System.Web.UI.WebControls.AccessDataSource&gt;, and &lt;xref:System.Web.UI.WebControls.XmlDataSource&gt;, to perform most Web development tasks.","pos":[541,805],"source":"       You use the data source controls that are provided with ASP.NET, including <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, and <xref:System.Web.UI.WebControls.XmlDataSource>, to perform most Web development tasks."},{"content":"You use the base &lt;xref:System.Web.UI.DataSourceControl&gt; and DataSourceView classes when you want to implement your own custom data source control.","pos":[806,952],"source":" You use the base <xref:System.Web.UI.DataSourceControl> and DataSourceView classes when you want to implement your own custom data source control."},{"content":"You can think of a data source control as the combination of the &lt;xref:System.Web.UI.IDataSource&gt; object and its associated lists of data, called data source views.","pos":[959,1123],"source":"       You can think of a data source control as the combination of the <xref:System.Web.UI.IDataSource> object and its associated lists of data, called data source views."},{"content":"Each list of data is represented by a DataSourceView object.","pos":[1124,1184]},{"content":"The DataSourceView class is the base class for all data source views, or lists of data, associated with data source controls.","pos":[1185,1310]},{"content":"Data source views define the capabilities of a data source control.","pos":[1311,1378]},{"content":"Because the underlying data storage contains one or more lists of data, a data source control is always associated with one or more named data source views.","pos":[1379,1535]},{"content":"The data source control uses the &lt;xref:System.Web.UI.DataSourceControl.GetViewNames%2A&gt; method to enumerate the data source views currently associated with the data source control and the &lt;xref:System.Web.UI.DataSourceControl.GetView%2A&gt; method to retrieve a specific data source view instance by name.","pos":[1536,1838],"source":" The data source control uses the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method to enumerate the data source views currently associated with the data source control and the <xref:System.Web.UI.DataSourceControl.GetView%2A> method to retrieve a specific data source view instance by name."},{"content":"All DataSourceView objects support data retrieval from the underlying data source using the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; method.","pos":[1845,1997],"source":"       All DataSourceView objects support data retrieval from the underlying data source using the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method."},{"content":"All views optionally support a basic set of operations, including operations such as &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt;, &lt;xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A&gt;, and &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt;.","pos":[1998,2248],"source":" All views optionally support a basic set of operations, including operations such as <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, and <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>."},{"content":"A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the &lt;xref:System.Web.UI.DataSourceControl.GetView%2A&gt; and &lt;xref:System.Web.UI.DataSourceControl.GetViewNames%2A&gt; methods, and by querying the view at design time or run time.","pos":[2249,2550],"source":" A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.DataSourceControl.GetView%2A> and <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> methods, and by querying the view at design time or run time."}]}]},{"pos":[6283,6373],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.DataSourceView\"></xref> class."},{"pos":[6563,6665],"content":"The data source control that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated with.","needQuote":true,"needEscape":true,"source":"The data source control that the <xref href=\"System.Web.UI.DataSourceView\"></xref> is associated with."},{"pos":[6730,6803],"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The name of the <xref href=\"System.Web.UI.DataSourceView\"></xref> object."},{"pos":[7516,7771],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports the &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete*&gt; operation.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports the <xref:System.Web.UI.DataSourceView.ExecuteDelete*> operation."},{"pos":[7783,8194],"content":"The CanDelete property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation. For example, even though a data source view supports the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operation in general, if a required property or some other data is not set, the CanDelete property returns `false`, as a delete operation would fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanDelete property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation.","pos":[0,151]},{"content":"For example, even though a data source view supports the &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt; operation in general, if a required property or some other data is not set, the CanDelete property returns <ph id=\"ph1\">`false`</ph>, as a delete operation would fail.","pos":[152,411],"source":" For example, even though a data source view supports the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operation in general, if a required property or some other data is not set, the CanDelete property returns `false`, as a delete operation would fail."}]},{"pos":[8889,9157],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The base class implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,268],"source":" The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9622,9679],"content":"Determines whether the specified command can be executed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the specified command can be executed.","pos":[0,57]}]},{"pos":[9839,9863],"content":"The name of the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the command.","pos":[0,24]}]},{"pos":[9922,10089],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the command can be executed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the command can be executed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10498,10753],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports the &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert*&gt; operation.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports the <xref:System.Web.UI.DataSourceView.ExecuteInsert*> operation."},{"pos":[10765,11175],"content":"The CanInsert property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation. For example, even though a data source control supports the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operation, if a required insert command or some other data is not set, the CanInsert property returns `false`, as an insert operation would fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanInsert property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation.","pos":[0,151]},{"content":"For example, even though a data source control supports the &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt; operation, if a required insert command or some other data is not set, the CanInsert property returns <ph id=\"ph1\">`false`</ph>, as an insert operation would fail.","pos":[152,410],"source":" For example, even though a data source control supports the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operation, if a required insert command or some other data is not set, the CanInsert property returns `false`, as an insert operation would fail."}]},{"pos":[11870,12138],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The base class implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,268],"source":" The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12536,12825],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports paging through the data retrieved by the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect*&gt; method.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports paging through the data retrieved by the <xref:System.Web.UI.DataSourceView.ExecuteSelect*> method."},{"pos":[12837,13201],"content":"A data-bound control can request paging by adding the <xref:System.Web.UI.DataSourceCapabilities> field to the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. If a data-bound control requests paging, but the CanPage property returns `false`, the data source view throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data-bound control can request paging by adding the &lt;xref:System.Web.UI.DataSourceCapabilities&gt; field to the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object passed to the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; method.","pos":[0,239],"source":"A data-bound control can request paging by adding the <xref:System.Web.UI.DataSourceCapabilities> field to the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method."},{"content":"If a data-bound control requests paging, but the CanPage property returns <ph id=\"ph1\">`false`</ph>, the data source view throws an exception.","pos":[240,364],"source":" If a data-bound control requests paging, but the CanPage property returns `false`, the data source view throws an exception."}]},{"pos":[13320,13588],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The base class implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,268],"source":" The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[14069,14321],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports retrieving the total number of data rows, instead of the data.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports retrieving the total number of data rows, instead of the data."},{"pos":[14333,14786],"content":"A data-bound control can request a total row count by adding the <xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> field to the <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. If a data-bound control requests a total row count, but the CanRetrieveTotalRowCount property returns `false`, the data source view throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data-bound control can request a total row count by adding the &lt;xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName&gt; field to the &lt;xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName&gt; object passed to the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; method.","pos":[0,300],"source":"A data-bound control can request a total row count by adding the <xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> field to the <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method."},{"content":"If a data-bound control requests a total row count, but the CanRetrieveTotalRowCount property returns <ph id=\"ph1\">`false`</ph>, the data source view throws an exception.","pos":[301,453],"source":" If a data-bound control requests a total row count, but the CanRetrieveTotalRowCount property returns `false`, the data source view throws an exception."}]},{"pos":[14922,15190],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The base class implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,268],"source":" The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[15603,15837],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports a sorted view on the underlying data source.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports a sorted view on the underlying data source."},{"pos":[15849,16215],"content":"A data-bound control can request sorting by adding the <xref:System.Web.UI.DataSourceCapabilities> field to the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. If a data-bound control requests sorting, but the CanSort property returns `false`, the data source view throws an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"A data-bound control can request sorting by adding the &lt;xref:System.Web.UI.DataSourceCapabilities&gt; field to the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object passed to the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; method.","pos":[0,240],"source":"A data-bound control can request sorting by adding the <xref:System.Web.UI.DataSourceCapabilities> field to the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method."},{"content":"If a data-bound control requests sorting, but the CanSort property returns <ph id=\"ph1\">`false`</ph>, the data source view throws an exception.","pos":[241,366],"source":" If a data-bound control requests sorting, but the CanSort property returns `false`, the data source view throws an exception."}]},{"pos":[16838,17103],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,265],"source":" The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[17509,17764],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the current <bpt id=\"p2\">&lt;xref href=\"System.Web.UI.DataSourceControl\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object supports the &lt;xref:System.Web.UI.DataSourceView.ExecuteUpdate*&gt; operation.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports the <xref:System.Web.UI.DataSourceView.ExecuteUpdate*> operation."},{"pos":[17776,18185],"content":"The CanUpdate property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation. For example, even though a data-bound control supports the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operation, if a required update command or some other data is not set, the CanUpdate property returns `false`, as an update operation would fail.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CanUpdate property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation.","pos":[0,151]},{"content":"For example, even though a data-bound control supports the &lt;xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A&gt; operation, if a required update command or some other data is not set, the CanUpdate property returns <ph id=\"ph1\">`false`</ph>, as an update operation would fail.","pos":[152,409],"source":" For example, even though a data-bound control supports the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operation, if a required update command or some other data is not set, the CanUpdate property returns `false`, as an update operation would fail."}]},{"pos":[18882,19147],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the operation is supported; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[167,265],"source":" The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[19612,19657],"content":"Occurs when the data source view has changed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the data source view has changed.","pos":[0,45]}]},{"pos":[19670,19999],"content":"The change to the data source view could be due to a change in the values of its properties, or to a change in the data due to a data operation performed by the data source view.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","needQuote":false,"needEscape":true,"nodes":[{"content":"The change to the data source view could be due to a change in the values of its properties, or to a change in the data due to a data operation performed by the data source view.","pos":[0,178]},{"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[185,327],"source":"       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]},{"pos":[20136,20148],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20876,21015],"content":"Performs an asynchronous delete operation on the list of data that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Performs an asynchronous delete operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents."},{"pos":[21027,21767],"content":"The Delete method is the asynchronous data deletion interface for all data source view objects. The Delete method calls the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method using any `keys` and `oldValues` parameter values supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operation has completed. The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Delete method is the asynchronous data deletion interface for all data source view objects.","pos":[0,95]},{"content":"The Delete method calls the &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt; method using any <ph id=\"ph1\">`keys`</ph> and <ph id=\"ph2\">`oldValues`</ph> parameter values supplied.","pos":[96,243],"source":" The Delete method calls the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method using any `keys` and `oldValues` parameter values supplied."},{"content":"The <ph id=\"ph1\">`callback`</ph> parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt; operation has completed.","pos":[244,474],"source":" The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operation has completed."},{"content":"The method uses the parameters of the &lt;xref:System.Web.UI.DataSourceViewOperationCallback&gt; delegate to return the number of affected records and any &lt;xref:System.Exception&gt; exception that is thrown by the &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete%2A&gt; method.","pos":[475,740],"source":" The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method."}]},{"pos":[22048,22193],"content":"An <xref:System.Collections.IDictionary> of object or row keys to be deleted by the <xref:System.Web.UI.DataSourceView.ExecuteDelete*> operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of object or row keys to be deleted by the &lt;xref:System.Web.UI.DataSourceView.ExecuteDelete*&gt; operation.","pos":[0,145],"source":"An <xref:System.Collections.IDictionary> of object or row keys to be deleted by the <xref:System.Web.UI.DataSourceView.ExecuteDelete*> operation."}]},{"pos":[22276,22392],"content":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs that represent data elements and their original values.","pos":[0,116],"source":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values."}]},{"pos":[22489,22655],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> delegate that is used to notify a data-bound control when the asynchronous operation is complete.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete."},{"pos":[22821,22965],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supplied is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[23289,23353],"content":"Gets a list of event-handler delegates for the data source view.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of event-handler delegates for the data source view.","pos":[0,64]}]},{"pos":[23365,23689],"content":"This property is of type <xref:System.ComponentModel.EventHandlerList>, which uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries with this property will be slow.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is of type <xref:System.ComponentModel.EventHandlerList>, which uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries with this property will be slow.","pos":[0,324],"nodes":[{"content":"This property is of type &lt;xref:System.ComponentModel.EventHandlerList&gt;, which uses a linear search algorithm to find entries in the list of delegates.","pos":[0,150],"source":"This property is of type <xref:System.ComponentModel.EventHandlerList>, which uses a linear search algorithm to find entries in the list of delegates."},{"content":"A linear search algorithm is inefficient when working with a large number of entries.","pos":[151,236]},{"content":"Therefore, when you have a large list, finding entries with this property will be slow.","pos":[237,324]}]}]},{"pos":[23860,23896],"content":"The list of event-handler delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The list of event-handler delegates.","pos":[0,36]}]},{"pos":[24574,24605],"content":"Executes the specified command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the specified command.","pos":[0,31]}]},{"pos":[24847,24871],"content":"The name of the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the command.","pos":[0,24]}]},{"pos":[24949,24999],"content":"A dictionary of object keys or row keys to act on.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of object keys or row keys to act on.","pos":[0,50]}]},{"pos":[25079,25158],"content":"A dictionary of name/value pairs that represent data elements and their values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of name/value pairs that represent data elements and their values.","pos":[0,79]}]},{"pos":[25215,25271],"content":"The number of items that were affected by the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items that were affected by the operation.","pos":[0,56]}]},{"pos":[26145,26176],"content":"Executes the specified command.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the specified command.","pos":[0,31]}]},{"pos":[26188,26224],"content":"This method does not return a value.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method does not return a value.","pos":[0,36]}]},{"pos":[26520,26544],"content":"The name of the command.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the command.","pos":[0,24]}]},{"pos":[26622,26672],"content":"A dictionary of object keys or row keys to act on.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of object keys or row keys to act on.","pos":[0,50]}]},{"pos":[26752,26831],"content":"A dictionary of name/value pairs that represent data elements and their values.","needQuote":true,"needEscape":true,"nodes":[{"content":"A dictionary of name/value pairs that represent data elements and their values.","pos":[0,79]}]},{"pos":[26928,27004],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> object."},{"pos":[27636,27761],"content":"Performs a delete operation on the list of data that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Performs a delete operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents."},{"pos":[27774,28854],"content":"Data-bound controls can determine whether the ExecuteDelete operation is supported by a data source control by retrieving the <xref:System.Web.UI.DataSourceView> object using the <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> method, and checking the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property.       The `keys` parameter represents the object or row keys of the data to delete. For data sources that represent relational data, such as the <xref:System.Web.UI.WebControls.SqlDataSource> control, the `keys` parameter is a collection of database primary keys. In other scenarios, the `keys` parameter is a collection of name/value pairs and is used to filter a list of data. Any data matching a name/value pair is deleted.      > [!NOTE] >  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception. If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteDelete method if your class supports deletion from the underlying data storage.","needQuote":false,"needEscape":true,"nodes":[{"content":"Data-bound controls can determine whether the ExecuteDelete operation is supported by a data source control by retrieving the &lt;xref:System.Web.UI.DataSourceView&gt; object using the &lt;xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName&gt; method, and checking the &lt;xref:System.Web.UI.DataSourceView.CanDelete%2A&gt; property.","pos":[0,337],"source":"Data-bound controls can determine whether the ExecuteDelete operation is supported by a data source control by retrieving the <xref:System.Web.UI.DataSourceView> object using the <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> method, and checking the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property."},{"content":"The <ph id=\"ph1\">`keys`</ph> parameter represents the object or row keys of the data to delete.","pos":[344,421],"source":"       The `keys` parameter represents the object or row keys of the data to delete."},{"content":"For data sources that represent relational data, such as the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, the <ph id=\"ph1\">`keys`</ph> parameter is a collection of database primary keys.","pos":[422,601],"source":" For data sources that represent relational data, such as the <xref:System.Web.UI.WebControls.SqlDataSource> control, the `keys` parameter is a collection of database primary keys."},{"content":"In other scenarios, the <ph id=\"ph1\">`keys`</ph> parameter is a collection of name/value pairs and is used to filter a list of data.","pos":[602,716],"source":" In other scenarios, the `keys` parameter is a collection of name/value pairs and is used to filter a list of data."},{"content":"Any data matching a name/value pair is deleted.","pos":[717,764]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.DataSourceView&gt; class's default implementation is to throw a &lt;xref:System.NotSupportedException&gt; exception.","pos":[770,914],"source":"      > [!NOTE] >  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception."},{"content":"If you extend the &lt;xref:System.Web.UI.DataSourceView&gt; class, override the ExecuteDelete method if your class supports deletion from the underlying data storage.","pos":[915,1075],"source":" If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteDelete method if your class supports deletion from the underlying data storage."}]},{"pos":[29657,29765],"content":"An <xref:System.Collections.IDictionary> of object or row keys to be deleted by the ExecuteDelete operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of object or row keys to be deleted by the ExecuteDelete operation.","pos":[0,108],"source":"An <xref:System.Collections.IDictionary> of object or row keys to be deleted by the ExecuteDelete operation."}]},{"pos":[29848,29964],"content":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs that represent data elements and their original values.","pos":[0,116],"source":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values."}]},{"pos":[30021,30092],"content":"The number of items that were deleted from the underlying data storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items that were deleted from the underlying data storage.","pos":[0,71]}]},{"pos":[30265,30367],"content":"The ExecuteDelete operation is not supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The ExecuteDelete operation is not supported by the <xref href=\"System.Web.UI.DataSourceView\"></xref>."},{"pos":[30827,30953],"content":"Performs an insert operation on the list of data that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Performs an insert operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents."},{"pos":[30966,31728],"content":"Data-bound controls can determine whether the ExecuteInsert operation is supported by a data source control by retrieving the <xref:System.Web.UI.DataSourceView> object using the <xref:System.Web.UI.DataSourceControl.GetView%2A> method, and checking the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property.       The `values` parameter is a set of name/value pairs that represents data columns or fields and corresponding values to insert.      > [!NOTE] >  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception. If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteInsert method if your class supports insertion into the underlying data storage.","needQuote":false,"needEscape":true,"nodes":[{"content":"Data-bound controls can determine whether the ExecuteInsert operation is supported by a data source control by retrieving the &lt;xref:System.Web.UI.DataSourceView&gt; object using the &lt;xref:System.Web.UI.DataSourceControl.GetView%2A&gt; method, and checking the &lt;xref:System.Web.UI.DataSourceView.CanInsert%2A&gt; property.","pos":[0,312],"source":"Data-bound controls can determine whether the ExecuteInsert operation is supported by a data source control by retrieving the <xref:System.Web.UI.DataSourceView> object using the <xref:System.Web.UI.DataSourceControl.GetView%2A> method, and checking the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property."},{"content":"The <ph id=\"ph1\">`values`</ph> parameter is a set of name/value pairs that represents data columns or fields and corresponding values to insert.","pos":[319,445],"source":"       The `values` parameter is a set of name/value pairs that represents data columns or fields and corresponding values to insert."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.DataSourceView&gt; class's default implementation is to throw a &lt;xref:System.NotSupportedException&gt; exception.","pos":[451,595],"source":"      > [!NOTE] >  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception."},{"content":"If you extend the &lt;xref:System.Web.UI.DataSourceView&gt; class, override the ExecuteInsert method if your class supports insertion into the underlying data storage.","pos":[596,757],"source":" If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteInsert method if your class supports insertion into the underlying data storage."}]},{"pos":[32497,32590],"content":"An <xref:System.Collections.IDictionary> of name/value pairs used during an insert operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs used during an insert operation.","pos":[0,93],"source":"An <xref:System.Collections.IDictionary> of name/value pairs used during an insert operation."}]},{"pos":[32647,32719],"content":"The number of items that were inserted into the underlying data storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items that were inserted into the underlying data storage.","pos":[0,72]}]},{"pos":[32892,32994],"content":"The ExecuteInsert operation is not supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The ExecuteInsert operation is not supported by the <xref href=\"System.Web.UI.DataSourceView\"></xref>."},{"pos":[33514,33567],"content":"Gets a list of data from the underlying data storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of data from the underlying data storage.","pos":[0,53]}]},{"pos":[33579,34159],"content":"The ExecuteSelect method is called to retrieve data from the underlying data store and return it as an <xref:System.Collections.IEnumerable> object. All data source controls support data retrieval from their underlying data storage, even if other operations such as insertion and sorting are not supported. Because a data-bound control can request a list of data at any time as a result of a <xref:System.Web.UI.IDataSource.DataSourceChanged> event or a <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method call, the data retrieval must be performed on demand.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ExecuteSelect method is called to retrieve data from the underlying data store and return it as an <xref:System.Collections.IEnumerable> object. All data source controls support data retrieval from their underlying data storage, even if other operations such as insertion and sorting are not supported. Because a data-bound control can request a list of data at any time as a result of a <xref:System.Web.UI.IDataSource.DataSourceChanged> event or a <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method call, the data retrieval must be performed on demand.","pos":[0,580],"nodes":[{"content":"The ExecuteSelect method is called to retrieve data from the underlying data store and return it as an &lt;xref:System.Collections.IEnumerable&gt; object.","pos":[0,148],"source":"The ExecuteSelect method is called to retrieve data from the underlying data store and return it as an <xref:System.Collections.IEnumerable> object."},{"content":"All data source controls support data retrieval from their underlying data storage, even if other operations such as insertion and sorting are not supported.","pos":[149,306]},{"content":"Because a data-bound control can request a list of data at any time as a result of a &lt;xref:System.Web.UI.IDataSource.DataSourceChanged&gt; event or a &lt;xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A&gt; method call, the data retrieval must be performed on demand.","pos":[307,580],"source":" Because a data-bound control can request a list of data at any time as a result of a <xref:System.Web.UI.IDataSource.DataSourceChanged> event or a <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method call, the data retrieval must be performed on demand."}]}]},{"pos":[35349,35487],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceSelectArguments\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to request operations on the data beyond basic data retrieval.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> that is used to request operations on the data beyond basic data retrieval."},{"pos":[35562,35649],"content":"An <xref:System.Collections.IEnumerable> list of data from the underlying data storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerable&gt; list of data from the underlying data storage.","pos":[0,87],"source":"An <xref:System.Collections.IEnumerable> list of data from the underlying data storage."}]},{"pos":[36378,36504],"content":"Performs an update operation on the list of data that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Performs an update operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents."},{"pos":[36517,37755],"content":"Data-bound controls can determine whether the ExecuteUpdate operation is supported by a data source control by using the <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> method to retrieve the <xref:System.Web.UI.DataSourceView> object and checking the value of the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property.       The `keys` parameter represents the object or row keys of the data to update. For data sources that represent relational data, such as the <xref:System.Web.UI.WebControls.SqlDataSource> control, the `keys` parameter is a collection of database primary keys. In other scenarios, the `keys` parameter is a collection of name/value pairs and is used to filter a list of data. Any data matching a name/value pair is updated with the values found in the `values` parameter, which is a set of name/value pairs that represents new values for existing fields or columns.      > [!NOTE] >  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception. If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteUpdate method if your class supports updating data in the underlying data storage.","needQuote":false,"needEscape":true,"nodes":[{"content":"Data-bound controls can determine whether the ExecuteUpdate operation is supported by a data source control by using the &lt;xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName&gt; method to retrieve the &lt;xref:System.Web.UI.DataSourceView&gt; object and checking the value of the &lt;xref:System.Web.UI.DataSourceView.CanUpdate%2A&gt; property.","pos":[0,350],"source":"Data-bound controls can determine whether the ExecuteUpdate operation is supported by a data source control by using the <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> method to retrieve the <xref:System.Web.UI.DataSourceView> object and checking the value of the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property."},{"content":"The <ph id=\"ph1\">`keys`</ph> parameter represents the object or row keys of the data to update.","pos":[357,434],"source":"       The `keys` parameter represents the object or row keys of the data to update."},{"content":"For data sources that represent relational data, such as the &lt;xref:System.Web.UI.WebControls.SqlDataSource&gt; control, the <ph id=\"ph1\">`keys`</ph> parameter is a collection of database primary keys.","pos":[435,614],"source":" For data sources that represent relational data, such as the <xref:System.Web.UI.WebControls.SqlDataSource> control, the `keys` parameter is a collection of database primary keys."},{"content":"In other scenarios, the <ph id=\"ph1\">`keys`</ph> parameter is a collection of name/value pairs and is used to filter a list of data.","pos":[615,729],"source":" In other scenarios, the `keys` parameter is a collection of name/value pairs and is used to filter a list of data."},{"content":"Any data matching a name/value pair is updated with the values found in the <ph id=\"ph1\">`values`</ph> parameter, which is a set of name/value pairs that represents new values for existing fields or columns.","pos":[730,919],"source":" Any data matching a name/value pair is updated with the values found in the `values` parameter, which is a set of name/value pairs that represents new values for existing fields or columns."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The &lt;xref:System.Web.UI.DataSourceView&gt; class's default implementation is to throw a &lt;xref:System.NotSupportedException&gt; exception.","pos":[925,1069],"source":"      > [!NOTE] >  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception."},{"content":"If you extend the &lt;xref:System.Web.UI.DataSourceView&gt; class, override the ExecuteUpdate method if your class supports updating data in the underlying data storage.","pos":[1070,1233],"source":" If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteUpdate method if your class supports updating data in the underlying data storage."}]},{"pos":[38599,38700],"content":"An <xref:System.Collections.IDictionary> of object or row keys to be updated by the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of object or row keys to be updated by the update operation.","pos":[0,101],"source":"An <xref:System.Collections.IDictionary> of object or row keys to be updated by the update operation."}]},{"pos":[38780,38891],"content":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their new values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs that represent data elements and their new values.","pos":[0,111],"source":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their new values."}]},{"pos":[38974,39090],"content":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs that represent data elements and their original values.","pos":[0,116],"source":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values."}]},{"pos":[39147,39216],"content":"The number of items that were updated in the underlying data storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of items that were updated in the underlying data storage.","pos":[0,69]}]},{"pos":[39389,39491],"content":"The ExecuteUpdate operation is not supported by the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The ExecuteUpdate operation is not supported by the <xref href=\"System.Web.UI.DataSourceView\"></xref>."},{"pos":[40104,40243],"content":"Performs an asynchronous insert operation on the list of data that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Performs an asynchronous insert operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents."},{"pos":[40255,40970],"content":"The Insert method is the asynchronous data insertion interface for all data source view objects. The Insert method calls the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method using any `values` supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operation has completed. The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Insert method is the asynchronous data insertion interface for all data source view objects.","pos":[0,96]},{"content":"The Insert method calls the &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt; method using any <ph id=\"ph1\">`values`</ph> supplied.","pos":[97,213],"source":" The Insert method calls the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method using any `values` supplied."},{"content":"The <ph id=\"ph1\">`callback`</ph> parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt; operation has completed.","pos":[214,444],"source":" The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operation has completed."},{"content":"The method uses the parameters of the &lt;xref:System.Web.UI.DataSourceViewOperationCallback&gt; delegate to return the number of affected records and any &lt;xref:System.Exception&gt; exception that is thrown by the &lt;xref:System.Web.UI.DataSourceView.ExecuteInsert%2A&gt; method call.","pos":[445,715],"source":" The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method call."}]},{"pos":[41213,41306],"content":"An <xref:System.Collections.IDictionary> of name/value pairs used during an insert operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs used during an insert operation.","pos":[0,93],"source":"An <xref:System.Collections.IDictionary> of name/value pairs used during an insert operation."}]},{"pos":[41403,41569],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> delegate that is used to notify a data-bound control when the asynchronous operation is complete.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete."},{"pos":[41735,41879],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supplied is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[42193,42231],"content":"Gets the name of the data source view.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the data source view.","pos":[0,38]}]},{"pos":[42340,42501],"content":"The name of the <xref href=\"System.Web.UI.DataSourceView\"></xref>, if it has one. The default value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if it has one.","pos":[0,81],"source":"The name of the <xref href=\"System.Web.UI.DataSourceView\"></xref>, if it has one."},{"content":"The default value is <ph id=\"ph1\">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[82,161],"source":" The default value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."}]},{"pos":[43041,43130],"content":"Raises the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView.DataSourceViewChanged\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Raises the <xref href=\"System.Web.UI.DataSourceView.DataSourceViewChanged\"></xref> event."},{"pos":[43143,43815],"content":"The OnDataSourceViewChanged method notifies a data-bound control that the underlying data source has changed and that the control should rebind and perform any necessary work. Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The OnDataSourceViewChanged method notifies a data-bound control that the underlying data source has changed and that the control should rebind and perform any necessary work.","pos":[0,175]},{"content":"Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.","pos":[176,284]},{"content":"Raising an event invokes the event handler through a delegate.","pos":[291,353]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[354,474],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."},{"content":"The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate.","pos":[481,593]},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[594,668]}]},{"pos":[43978,44030],"content":"An <xref:System.EventArgs> that contains event data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.EventArgs&gt; that contains event data.","pos":[0,52],"source":"An <xref:System.EventArgs> that contains event data."}]},{"pos":[44708,44954],"content":"Called by the &lt;xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError<bpt id=\"p1\">*</bpt>&gt; method to compare the capabilities requested for an &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect<ept id=\"p1\">*</ept>&gt; operation against those that the view supports.","needQuote":true,"needEscape":true,"source":"Called by the <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError*> method to compare the capabilities requested for an <xref:System.Web.UI.DataSourceView.ExecuteSelect*> operation against those that the view supports."},{"pos":[44966,45322],"content":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities requested by a data-bound control, represented by the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.Select%2A> method, and compare it to the capabilities supported by the data source view.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities requested by a data-bound control, represented by the &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; object passed to the &lt;xref:System.Web.UI.DataSourceView.Select%2A&gt; method, and compare it to the capabilities supported by the data source view.","pos":[0,356],"source":"The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities requested by a data-bound control, represented by the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.Select%2A> method, and compare it to the capabilities supported by the data source view."}]},{"pos":[45557,45698],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceCapabilities\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values that is compared against the capabilities that the view supports.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.UI.DataSourceCapabilities\"></xref> values that is compared against the capabilities that the view supports."},{"pos":[45889,45964],"content":"The data source view does not support the data source capability specified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data source view does not support the data source capability specified.","pos":[0,75]}]},{"pos":[46622,46690],"content":"Gets a list of data asynchronously from the underlying data storage.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of data asynchronously from the underlying data storage.","pos":[0,68]}]},{"pos":[46702,47366],"content":"The Select method is the asynchronous data retrieval interface for all data source view objects. The Select method calls the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method, passing any <xref:System.Web.UI.DataSourceSelectArguments> supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> operation has completed. The data returned by the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> call is returned in the parameter of the <xref:System.Web.UI.DataSourceViewSelectCallback> delegate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Select method is the asynchronous data retrieval interface for all data source view objects.","pos":[0,96]},{"content":"The Select method calls the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; method, passing any &lt;xref:System.Web.UI.DataSourceSelectArguments&gt; supplied.","pos":[97,254],"source":" The Select method calls the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method, passing any <xref:System.Web.UI.DataSourceSelectArguments> supplied."},{"content":"The <ph id=\"ph1\">`callback`</ph> parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; operation has completed.","pos":[255,485],"source":" The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> operation has completed."},{"content":"The data returned by the &lt;xref:System.Web.UI.DataSourceView.ExecuteSelect%2A&gt; call is returned in the parameter of the &lt;xref:System.Web.UI.DataSourceViewSelectCallback&gt; delegate.","pos":[486,664],"source":" The data returned by the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> call is returned in the parameter of the <xref:System.Web.UI.DataSourceViewSelectCallback> delegate."}]},{"pos":[47630,47768],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceSelectArguments\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used to request operations on the data beyond basic data retrieval.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> that is used to request operations on the data beyond basic data retrieval."},{"pos":[47862,48025],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewSelectCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> delegate that is used to notify a data-bound control when the asynchronous operation is complete.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceViewSelectCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete."},{"pos":[48191,48332],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewSelectCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supplied is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.DataSourceViewSelectCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[49141,49280],"content":"Performs an asynchronous update operation on the list of data that the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceView\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object represents.","needQuote":true,"needEscape":true,"source":"Performs an asynchronous update operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents."},{"pos":[49292,50045],"content":"The Update method is the asynchronous data modification interface for all data source view objects. The Update method calls the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method using any `keys`, `values`, and `oldValues` parameter values supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operation has completed. The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> call.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Update method is the asynchronous data modification interface for all data source view objects.","pos":[0,99]},{"content":"The Update method calls the &lt;xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A&gt; method using any <ph id=\"ph1\">`keys`</ph>, <ph id=\"ph2\">`values`</ph>, and <ph id=\"ph3\">`oldValues`</ph> parameter values supplied.","pos":[100,258],"source":" The Update method calls the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method using any `keys`, `values`, and `oldValues` parameter values supplied."},{"content":"The <ph id=\"ph1\">`callback`</ph> parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the &lt;xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A&gt; operation has completed.","pos":[259,489],"source":" The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operation has completed."},{"content":"The method uses the parameters of the &lt;xref:System.Web.UI.DataSourceViewOperationCallback&gt; delegate to return the number of affected records and any &lt;xref:System.Exception&gt; exception that is thrown by the &lt;xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A&gt; call.","pos":[490,753],"source":" The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> call."}]},{"pos":[50365,50466],"content":"An <xref:System.Collections.IDictionary> of object or row keys to be updated by the update operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of object or row keys to be updated by the update operation.","pos":[0,101],"source":"An <xref:System.Collections.IDictionary> of object or row keys to be updated by the update operation."}]},{"pos":[50546,50657],"content":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their new values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs that represent data elements and their new values.","pos":[0,111],"source":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their new values."}]},{"pos":[50740,50856],"content":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionary&gt; of name/value pairs that represent data elements and their original values.","pos":[0,116],"source":"An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values."}]},{"pos":[50953,51119],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> delegate that is used to notify a data-bound control when the asynchronous operation is complete.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete."},{"pos":[51285,51429],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.DataSourceViewOperationCallback\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> supplied is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.DataSourceView\n  id: DataSourceView\n  children:\n  - System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)\n  - System.Web.UI.DataSourceView.CanDelete\n  - System.Web.UI.DataSourceView.CanExecute(System.String)\n  - System.Web.UI.DataSourceView.CanInsert\n  - System.Web.UI.DataSourceView.CanPage\n  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount\n  - System.Web.UI.DataSourceView.CanSort\n  - System.Web.UI.DataSourceView.CanUpdate\n  - System.Web.UI.DataSourceView.DataSourceViewChanged\n  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  - System.Web.UI.DataSourceView.Events\n  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)\n  - System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  - System.Web.UI.DataSourceView.Name\n  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)\n  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)\n  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  langs:\n  - csharp\n  name: DataSourceView\n  nameWithType: DataSourceView\n  fullName: System.Web.UI.DataSourceView\n  type: Class\n  summary: Serves as the base class for all data source view classes, which define the capabilities of data source controls.\n  remarks: \"ASP.NET supports a data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.  \\n  \\n You use the data source controls that are provided with ASP.NET, including <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, and <xref:System.Web.UI.WebControls.XmlDataSource>, to perform most Web development tasks. You use the base <xref:System.Web.UI.DataSourceControl> and DataSourceView classes when you want to implement your own custom data source control.  \\n  \\n You can think of a data source control as the combination of the <xref:System.Web.UI.IDataSource> object and its associated lists of data, called data source views. Each list of data is represented by a DataSourceView object. The DataSourceView class is the base class for all data source views, or lists of data, associated with data source controls. Data source views define the capabilities of a data source control. Because the underlying data storage contains one or more lists of data, a data source control is always associated with one or more named data source views. The data source control uses the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method to enumerate the data source views currently associated with the data source control and the <xref:System.Web.UI.DataSourceControl.GetView%2A> method to retrieve a specific data source view instance by name.  \\n  \\n All DataSourceView objects support data retrieval from the underlying data source using the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. All views optionally support a basic set of operations, including operations such as <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, and <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. A data-bound control can discover the capabilities of a data source control by retrieving an associated data source view using the <xref:System.Web.UI.DataSourceControl.GetView%2A> and <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> methods, and by querying the view at design time or run time.\"\n  example:\n  - \"The following code example demonstrates how to extend the DataSourceView class to create a strongly typed view class for a data source control. The `CsVDataSourceView` class defines the capabilities of the `CsvDataSource` data source control and provides an implementation for data-bound controls to use data stored in comma-separated value (.csv) files. For more information on the `CsvDataSource` data source control, see the <xref:System.Web.UI.DataSourceControl> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.datasour_1_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_1_1.vb)]\"\n  syntax:\n    content: public abstract class DataSourceView\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)\n  id: '#ctor(System.Web.UI.IDataSource,System.String)'\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: DataSourceView(IDataSource,String)\n  nameWithType: DataSourceView.DataSourceView(IDataSource,String)\n  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.DataSourceView\"></xref> class.\n  syntax:\n    content: protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);\n    parameters:\n    - id: owner\n      type: System.Web.UI.IDataSource\n      description: The data source control that the <xref href=\"System.Web.UI.DataSourceView\"></xref> is associated with.\n    - id: viewName\n      type: System.String\n      description: The name of the <xref href=\"System.Web.UI.DataSourceView\"></xref> object.\n  overload: System.Web.UI.DataSourceView.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>owner</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n \\\\- or -  \\n  \\n <code>viewName</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanDelete\n  id: CanDelete\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanDelete\n  nameWithType: DataSourceView.CanDelete\n  fullName: System.Web.UI.DataSourceView.CanDelete\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports the <xref:System.Web.UI.DataSourceView.ExecuteDelete*> operation.\n  remarks: The CanDelete property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation. For example, even though a data source view supports the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operation in general, if a required property or some other data is not set, the CanDelete property returns `false`, as a delete operation would fail.\n  example:\n  - \"The following code example demonstrates how to override the CanDelete property and the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/p-system.web.ui.datasour_3_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_3_1.vb)]\"\n  syntax:\n    content: public virtual bool CanDelete { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanDelete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanExecute(System.String)\n  id: CanExecute(System.String)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanExecute(String)\n  nameWithType: DataSourceView.CanExecute(String)\n  fullName: System.Web.UI.DataSourceView.CanExecute(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Determines whether the specified command can be executed.\n  syntax:\n    content: public virtual bool CanExecute (string commandName);\n    parameters:\n    - id: commandName\n      type: System.String\n      description: The name of the command.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the command can be executed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanExecute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanInsert\n  id: CanInsert\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanInsert\n  nameWithType: DataSourceView.CanInsert\n  fullName: System.Web.UI.DataSourceView.CanInsert\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports the <xref:System.Web.UI.DataSourceView.ExecuteInsert*> operation.\n  remarks: The CanInsert property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation. For example, even though a data source control supports the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operation, if a required insert command or some other data is not set, the CanInsert property returns `false`, as an insert operation would fail.\n  example:\n  - \"The following code example demonstrates how to override the CanInsert property and the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/p-system.web.ui.datasour_2_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_2_1.vb)]\"\n  syntax:\n    content: public virtual bool CanInsert { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanInsert*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanPage\n  id: CanPage\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanPage\n  nameWithType: DataSourceView.CanPage\n  fullName: System.Web.UI.DataSourceView.CanPage\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports paging through the data retrieved by the <xref:System.Web.UI.DataSourceView.ExecuteSelect*> method.\n  remarks: A data-bound control can request paging by adding the <xref:System.Web.UI.DataSourceCapabilities> field to the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. If a data-bound control requests paging, but the CanPage property returns `false`, the data source view throws an exception.\n  syntax:\n    content: public virtual bool CanPage { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanPage*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount\n  id: CanRetrieveTotalRowCount\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanRetrieveTotalRowCount\n  nameWithType: DataSourceView.CanRetrieveTotalRowCount\n  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports retrieving the total number of data rows, instead of the data.\n  remarks: A data-bound control can request a total row count by adding the <xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> field to the <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. If a data-bound control requests a total row count, but the CanRetrieveTotalRowCount property returns `false`, the data source view throws an exception.\n  syntax:\n    content: public virtual bool CanRetrieveTotalRowCount { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The base class implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanSort\n  id: CanSort\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanSort\n  nameWithType: DataSourceView.CanSort\n  fullName: System.Web.UI.DataSourceView.CanSort\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports a sorted view on the underlying data source.\n  remarks: A data-bound control can request sorting by adding the <xref:System.Web.UI.DataSourceCapabilities> field to the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method. If a data-bound control requests sorting, but the CanSort property returns `false`, the data source view throws an exception.\n  example:\n  - \"The following code example demonstrates how to override the CanSort property in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.datasour_1_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_1_1.vb)]\"\n  syntax:\n    content: public virtual bool CanSort { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanSort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.CanUpdate\n  id: CanUpdate\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: CanUpdate\n  nameWithType: DataSourceView.CanUpdate\n  fullName: System.Web.UI.DataSourceView.CanUpdate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a value indicating whether the <xref href=\"System.Web.UI.DataSourceView\"></xref> object associated with the current <xref href=\"System.Web.UI.DataSourceControl\"></xref> object supports the <xref:System.Web.UI.DataSourceView.ExecuteUpdate*> operation.\n  remarks: The CanUpdate property reflects not only a capability of the data source control, but also whether it is currently appropriate to perform an operation. For example, even though a data-bound control supports the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operation, if a required update command or some other data is not set, the CanUpdate property returns `false`, as an update operation would fail.\n  example:\n  - \"The following code example demonstrates how to override the CanUpdate property and the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/p-system.web.ui.datasour_0_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_0_1.vb)]\"\n  syntax:\n    content: public virtual bool CanUpdate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the operation is supported; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.UI.DataSourceView.CanUpdate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.DataSourceViewChanged\n  id: DataSourceViewChanged\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: DataSourceViewChanged\n  nameWithType: DataSourceView.DataSourceViewChanged\n  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Occurs when the data source view has changed.\n  remarks: \"The change to the data source view could be due to a change in the values of its properties, or to a change in the data due to a data operation performed by the data source view.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event EventHandler DataSourceViewChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs an asynchronous delete operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents.\n  remarks: The Delete method is the asynchronous data deletion interface for all data source view objects. The Delete method calls the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method using any `keys` and `oldValues` parameter values supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operation has completed. The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method.\n  syntax:\n    content: public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of object or row keys to be deleted by the <xref:System.Web.UI.DataSourceView.ExecuteDelete*> operation.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.\n    - id: callback\n      type: System.Web.UI.DataSourceViewOperationCallback\n      description: A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete.\n  overload: System.Web.UI.DataSourceView.Delete*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.Events\n  id: Events\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: Events\n  nameWithType: DataSourceView.Events\n  fullName: System.Web.UI.DataSourceView.Events\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a list of event-handler delegates for the data source view.\n  remarks: This property is of type <xref:System.ComponentModel.EventHandlerList>, which uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries with this property will be slow.\n  syntax:\n    content: protected System.ComponentModel.EventHandlerList Events { get; }\n    return:\n      type: System.ComponentModel.EventHandlerList\n      description: The list of event-handler delegates.\n  overload: System.Web.UI.DataSourceView.Events*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)\n  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: ExecuteCommand(String,IDictionary,IDictionary)\n  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Executes the specified command.\n  syntax:\n    content: protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);\n    parameters:\n    - id: commandName\n      type: System.String\n      description: The name of the command.\n    - id: keys\n      type: System.Collections.IDictionary\n      description: A dictionary of object keys or row keys to act on.\n    - id: values\n      type: System.Collections.IDictionary\n      description: A dictionary of name/value pairs that represent data elements and their values.\n    return:\n      type: System.Int32\n      description: The number of items that were affected by the operation.\n  overload: System.Web.UI.DataSourceView.ExecuteCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Executes the specified command.\n  remarks: This method does not return a value.\n  syntax:\n    content: public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);\n    parameters:\n    - id: commandName\n      type: System.String\n      description: The name of the command.\n    - id: keys\n      type: System.Collections.IDictionary\n      description: A dictionary of object keys or row keys to act on.\n    - id: values\n      type: System.Collections.IDictionary\n      description: A dictionary of name/value pairs that represent data elements and their values.\n    - id: callback\n      type: System.Web.UI.DataSourceViewOperationCallback\n      description: A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> object.\n  overload: System.Web.UI.DataSourceView.ExecuteCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: ExecuteDelete(IDictionary,IDictionary)\n  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs a delete operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents.\n  remarks: \"Data-bound controls can determine whether the ExecuteDelete operation is supported by a data source control by retrieving the <xref:System.Web.UI.DataSourceView> object using the <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> method, and checking the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property.  \\n  \\n The `keys` parameter represents the object or row keys of the data to delete. For data sources that represent relational data, such as the <xref:System.Web.UI.WebControls.SqlDataSource> control, the `keys` parameter is a collection of database primary keys. In other scenarios, the `keys` parameter is a collection of name/value pairs and is used to filter a list of data. Any data matching a name/value pair is deleted.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception. If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteDelete method if your class supports deletion from the underlying data storage.\"\n  example:\n  - \"The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property and the ExecuteDelete method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/84991e4a-bbbd-47a3-bfea-_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/84991e4a-bbbd-47a3-bfea-_1.vb)]\"\n  syntax:\n    content: protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of object or row keys to be deleted by the ExecuteDelete operation.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.\n    return:\n      type: System.Int32\n      description: The number of items that were deleted from the underlying data storage.\n  overload: System.Web.UI.DataSourceView.ExecuteDelete*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The ExecuteDelete operation is not supported by the <xref href=\"System.Web.UI.DataSourceView\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)\n  id: ExecuteInsert(System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: ExecuteInsert(IDictionary)\n  nameWithType: DataSourceView.ExecuteInsert(IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs an insert operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents.\n  remarks: \"Data-bound controls can determine whether the ExecuteInsert operation is supported by a data source control by retrieving the <xref:System.Web.UI.DataSourceView> object using the <xref:System.Web.UI.DataSourceControl.GetView%2A> method, and checking the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property.  \\n  \\n The `values` parameter is a set of name/value pairs that represents data columns or fields and corresponding values to insert.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception. If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteInsert method if your class supports insertion into the underlying data storage.\"\n  example:\n  - \"The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property and the ExecuteInsert method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/m-system.web.ui.datasour_0_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_0_1.vb)]\"\n  syntax:\n    content: protected virtual int ExecuteInsert (System.Collections.IDictionary values);\n    parameters:\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs used during an insert operation.\n    return:\n      type: System.Int32\n      description: The number of items that were inserted into the underlying data storage.\n  overload: System.Web.UI.DataSourceView.ExecuteInsert*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The ExecuteInsert operation is not supported by the <xref href=\"System.Web.UI.DataSourceView\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: ExecuteSelect(DataSourceSelectArguments)\n  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)\n  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a list of data from the underlying data storage.\n  remarks: The ExecuteSelect method is called to retrieve data from the underlying data store and return it as an <xref:System.Collections.IEnumerable> object. All data source controls support data retrieval from their underlying data storage, even if other operations such as insertion and sorting are not supported. Because a data-bound control can request a list of data at any time as a result of a <xref:System.Web.UI.IDataSource.DataSourceChanged> event or a <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method call, the data retrieval must be performed on demand.\n  example:\n  - \"The following code example demonstrates how to override the ExecuteSelect method in a class that extends the <xref:System.Web.UI.DataSourceView> class. The `CsvDataSourceView` opens a comma-separated value (.csv) file, parses it line by line, and creates a <xref:System.Data.DataTable> object and a <xref:System.Data.DataView> object to hold the data in memory. Finally, a sort expression is applied if one is supplied by the <xref:System.Web.UI.DataSourceSelectArguments> object, and the <xref:System.Data.DataView> object is returned as an <xref:System.Collections.IEnumerable> instance. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/csharp/9907e30e-e760-42a4-aba2-_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/visualbasic/9907e30e-e760-42a4-aba2-_1.vb)]\"\n  syntax:\n    content: protected abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);\n    parameters:\n    - id: arguments\n      type: System.Web.UI.DataSourceSelectArguments\n      description: A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> that is used to request operations on the data beyond basic data retrieval.\n    return:\n      type: System.Collections.IEnumerable\n      description: An <xref:System.Collections.IEnumerable> list of data from the underlying data storage.\n  overload: System.Web.UI.DataSourceView.ExecuteSelect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs an update operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents.\n  remarks: \"Data-bound controls can determine whether the ExecuteUpdate operation is supported by a data source control by using the <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> method to retrieve the <xref:System.Web.UI.DataSourceView> object and checking the value of the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property.  \\n  \\n The `keys` parameter represents the object or row keys of the data to update. For data sources that represent relational data, such as the <xref:System.Web.UI.WebControls.SqlDataSource> control, the `keys` parameter is a collection of database primary keys. In other scenarios, the `keys` parameter is a collection of name/value pairs and is used to filter a list of data. Any data matching a name/value pair is updated with the values found in the `values` parameter, which is a set of name/value pairs that represents new values for existing fields or columns.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Web.UI.DataSourceView> class's default implementation is to throw a <xref:System.NotSupportedException> exception. If you extend the <xref:System.Web.UI.DataSourceView> class, override the ExecuteUpdate method if your class supports updating data in the underlying data storage.\"\n  example:\n  - \"The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property and the ExecuteUpdate method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \\n  \\n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/41646def-d513-4cd2-ab48-_1.cs)]\\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/41646def-d513-4cd2-ab48-_1.vb)]\"\n  syntax:\n    content: protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of object or row keys to be updated by the update operation.\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their new values.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.\n    return:\n      type: System.Int32\n      description: The number of items that were updated in the underlying data storage.\n  overload: System.Web.UI.DataSourceView.ExecuteUpdate*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The ExecuteUpdate operation is not supported by the <xref href=\"System.Web.UI.DataSourceView\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  id: Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: Insert(IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs an asynchronous insert operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents.\n  remarks: The Insert method is the asynchronous data insertion interface for all data source view objects. The Insert method calls the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method using any `values` supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operation has completed. The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method call.\n  syntax:\n    content: public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);\n    parameters:\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs used during an insert operation.\n    - id: callback\n      type: System.Web.UI.DataSourceViewOperationCallback\n      description: A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete.\n  overload: System.Web.UI.DataSourceView.Insert*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.Name\n  id: Name\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: Name\n  nameWithType: DataSourceView.Name\n  fullName: System.Web.UI.DataSourceView.Name\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the name of the data source view.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Web.UI.DataSourceView\"></xref>, if it has one. The default value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;.\n  overload: System.Web.UI.DataSourceView.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)\n  id: OnDataSourceViewChanged(System.EventArgs)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: OnDataSourceViewChanged(EventArgs)\n  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)\n  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.DataSourceView.DataSourceViewChanged\"></xref> event.\n  remarks: \"The OnDataSourceViewChanged method notifies a data-bound control that the underlying data source has changed and that the control should rebind and perform any necessary work. Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDataSourceViewChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref:System.EventArgs> that contains event data.\n  overload: System.Web.UI.DataSourceView.OnDataSourceViewChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Called by the <xref:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError*> method to compare the capabilities requested for an <xref:System.Web.UI.DataSourceView.ExecuteSelect*> operation against those that the view supports.\n  remarks: The RaiseUnsupportedCapabilityError method is used by the data source view to examine each of the capabilities requested by a data-bound control, represented by the <xref:System.Web.UI.DataSourceSelectArguments> object passed to the <xref:System.Web.UI.DataSourceView.Select%2A> method, and compare it to the capabilities supported by the data source view.\n  syntax:\n    content: protected virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);\n    parameters:\n    - id: capability\n      type: System.Web.UI.DataSourceCapabilities\n      description: One of the <xref href=\"System.Web.UI.DataSourceCapabilities\"></xref> values that is compared against the capabilities that the view supports.\n  overload: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The data source view does not support the data source capability specified.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)\n  id: Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)\n  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)\n  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets a list of data asynchronously from the underlying data storage.\n  remarks: The Select method is the asynchronous data retrieval interface for all data source view objects. The Select method calls the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> method, passing any <xref:System.Web.UI.DataSourceSelectArguments> supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> operation has completed. The data returned by the <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> call is returned in the parameter of the <xref:System.Web.UI.DataSourceViewSelectCallback> delegate.\n  syntax:\n    content: public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);\n    parameters:\n    - id: arguments\n      type: System.Web.UI.DataSourceSelectArguments\n      description: A <xref href=\"System.Web.UI.DataSourceSelectArguments\"></xref> that is used to request operations on the data beyond basic data retrieval.\n    - id: callback\n      type: System.Web.UI.DataSourceViewSelectCallback\n      description: A <xref href=\"System.Web.UI.DataSourceViewSelectCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete.\n  overload: System.Web.UI.DataSourceView.Select*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Web.UI.DataSourceViewSelectCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  langs:\n  - csharp\n  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Performs an asynchronous update operation on the list of data that the <xref href=\"System.Web.UI.DataSourceView\"></xref> object represents.\n  remarks: The Update method is the asynchronous data modification interface for all data source view objects. The Update method calls the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method using any `keys`, `values`, and `oldValues` parameter values supplied. The `callback` parameter is a delegate that a data-bound control passes to the data source view, which is used to notify the data-bound control when the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operation has completed. The method uses the parameters of the <xref:System.Web.UI.DataSourceViewOperationCallback> delegate to return the number of affected records and any <xref:System.Exception> exception that is thrown by the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> call.\n  syntax:\n    content: public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);\n    parameters:\n    - id: keys\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of object or row keys to be updated by the update operation.\n    - id: values\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their new values.\n    - id: oldValues\n      type: System.Collections.IDictionary\n      description: An <xref:System.Collections.IDictionary> of name/value pairs that represent data elements and their original values.\n    - id: callback\n      type: System.Web.UI.DataSourceViewOperationCallback\n      description: A <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> delegate that is used to notify a data-bound control when the asynchronous operation is complete.\n  overload: System.Web.UI.DataSourceView.Update*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <xref href=\"System.Web.UI.DataSourceViewOperationCallback\"></xref> supplied is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: DataSourceView(IDataSource,String)\n  nameWithType: DataSourceView.DataSourceView(IDataSource,String)\n  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)\n- uid: System.Web.UI.IDataSource\n  parent: System.Web.UI\n  isExternal: false\n  name: IDataSource\n  nameWithType: IDataSource\n  fullName: System.Web.UI.IDataSource\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.DataSourceView.CanDelete\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanDelete\n  nameWithType: DataSourceView.CanDelete\n  fullName: System.Web.UI.DataSourceView.CanDelete\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.DataSourceView.CanExecute(System.String)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanExecute(String)\n  nameWithType: DataSourceView.CanExecute(String)\n  fullName: System.Web.UI.DataSourceView.CanExecute(String)\n- uid: System.Web.UI.DataSourceView.CanInsert\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanInsert\n  nameWithType: DataSourceView.CanInsert\n  fullName: System.Web.UI.DataSourceView.CanInsert\n- uid: System.Web.UI.DataSourceView.CanPage\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanPage\n  nameWithType: DataSourceView.CanPage\n  fullName: System.Web.UI.DataSourceView.CanPage\n- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanRetrieveTotalRowCount\n  nameWithType: DataSourceView.CanRetrieveTotalRowCount\n  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount\n- uid: System.Web.UI.DataSourceView.CanSort\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanSort\n  nameWithType: DataSourceView.CanSort\n  fullName: System.Web.UI.DataSourceView.CanSort\n- uid: System.Web.UI.DataSourceView.CanUpdate\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanUpdate\n  nameWithType: DataSourceView.CanUpdate\n  fullName: System.Web.UI.DataSourceView.CanUpdate\n- uid: System.Web.UI.DataSourceView.DataSourceViewChanged\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: DataSourceViewChanged\n  nameWithType: DataSourceView.DataSourceViewChanged\n  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: true\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Web.UI.DataSourceViewOperationCallback\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceViewOperationCallback\n  nameWithType: DataSourceViewOperationCallback\n  fullName: System.Web.UI.DataSourceViewOperationCallback\n- uid: System.Web.UI.DataSourceView.Events\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Events\n  nameWithType: DataSourceView.Events\n  fullName: System.Web.UI.DataSourceView.Events\n- uid: System.ComponentModel.EventHandlerList\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventHandlerList\n  nameWithType: EventHandlerList\n  fullName: System.ComponentModel.EventHandlerList\n- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteCommand(String,IDictionary,IDictionary)\n  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)\n- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteDelete(IDictionary,IDictionary)\n  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)\n- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteInsert(IDictionary)\n  nameWithType: DataSourceView.ExecuteInsert(IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)\n- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteSelect(DataSourceSelectArguments)\n  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)\n  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Web.UI.DataSourceSelectArguments\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceSelectArguments\n  nameWithType: DataSourceSelectArguments\n  fullName: System.Web.UI.DataSourceSelectArguments\n- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)\n- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Insert(IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)\n- uid: System.Web.UI.DataSourceView.Name\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Name\n  nameWithType: DataSourceView.Name\n  fullName: System.Web.UI.DataSourceView.Name\n- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: OnDataSourceViewChanged(EventArgs)\n  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)\n  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: true\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)\n- uid: System.Web.UI.DataSourceCapabilities\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceCapabilities\n  nameWithType: DataSourceCapabilities\n  fullName: System.Web.UI.DataSourceCapabilities\n- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)\n  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)\n  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)\n- uid: System.Web.UI.DataSourceViewSelectCallback\n  parent: System.Web.UI\n  isExternal: false\n  name: DataSourceViewSelectCallback\n  nameWithType: DataSourceViewSelectCallback\n  fullName: System.Web.UI.DataSourceViewSelectCallback\n- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)\n  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)\n- uid: System.Web.UI.DataSourceView.#ctor*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: DataSourceView\n  nameWithType: DataSourceView.DataSourceView\n- uid: System.Web.UI.DataSourceView.CanDelete*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanDelete\n  nameWithType: DataSourceView.CanDelete\n- uid: System.Web.UI.DataSourceView.CanExecute*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanExecute\n  nameWithType: DataSourceView.CanExecute\n- uid: System.Web.UI.DataSourceView.CanInsert*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanInsert\n  nameWithType: DataSourceView.CanInsert\n- uid: System.Web.UI.DataSourceView.CanPage*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanPage\n  nameWithType: DataSourceView.CanPage\n- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanRetrieveTotalRowCount\n  nameWithType: DataSourceView.CanRetrieveTotalRowCount\n- uid: System.Web.UI.DataSourceView.CanSort*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanSort\n  nameWithType: DataSourceView.CanSort\n- uid: System.Web.UI.DataSourceView.CanUpdate*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: CanUpdate\n  nameWithType: DataSourceView.CanUpdate\n- uid: System.Web.UI.DataSourceView.Delete*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Delete\n  nameWithType: DataSourceView.Delete\n- uid: System.Web.UI.DataSourceView.Events*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Events\n  nameWithType: DataSourceView.Events\n- uid: System.Web.UI.DataSourceView.ExecuteCommand*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteCommand\n  nameWithType: DataSourceView.ExecuteCommand\n- uid: System.Web.UI.DataSourceView.ExecuteDelete*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteDelete\n  nameWithType: DataSourceView.ExecuteDelete\n- uid: System.Web.UI.DataSourceView.ExecuteInsert*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteInsert\n  nameWithType: DataSourceView.ExecuteInsert\n- uid: System.Web.UI.DataSourceView.ExecuteSelect*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteSelect\n  nameWithType: DataSourceView.ExecuteSelect\n- uid: System.Web.UI.DataSourceView.ExecuteUpdate*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: ExecuteUpdate\n  nameWithType: DataSourceView.ExecuteUpdate\n- uid: System.Web.UI.DataSourceView.Insert*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Insert\n  nameWithType: DataSourceView.Insert\n- uid: System.Web.UI.DataSourceView.Name*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Name\n  nameWithType: DataSourceView.Name\n- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: OnDataSourceViewChanged\n  nameWithType: DataSourceView.OnDataSourceViewChanged\n- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: RaiseUnsupportedCapabilityError\n  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError\n- uid: System.Web.UI.DataSourceView.Select*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Select\n  nameWithType: DataSourceView.Select\n- uid: System.Web.UI.DataSourceView.Update*\n  parent: System.Web.UI.DataSourceView\n  isExternal: false\n  name: Update\n  nameWithType: DataSourceView.Update\n"}