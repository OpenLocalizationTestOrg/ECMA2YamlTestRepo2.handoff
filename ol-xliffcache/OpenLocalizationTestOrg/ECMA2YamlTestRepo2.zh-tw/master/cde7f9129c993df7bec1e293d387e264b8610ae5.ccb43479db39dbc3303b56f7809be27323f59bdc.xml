{"nodes":[{"pos":[4474,4486],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6331,6343],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7458,7470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8375,8387],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8446,8458],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9421,9433],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9492,9504],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9568,9580],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11309,11321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11380,11392],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12290,12302],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12361,12373],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13582,13594],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13660,13672],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[14297,14309],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15310,15322],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15419,15431],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[16132,16144],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17103,17115],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18197,18209],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18303,18315],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[18374,18386],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19512,19524],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19618,19630],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[19689,19701],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20947,20959],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21094,21106],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21165,21177],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22464,22476],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22611,22623],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[22682,22694],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23650,23662],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23721,23733],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[23792,23804],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24798,24810],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24869,24881],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[24940,24952],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26068,26080],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26182,26194],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[26253,26265],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27422,27434],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27536,27548],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27607,27619],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28525,28537],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28594,28606],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29269,29281],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30160,30172],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30228,30240],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31010,31022],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32154,32166],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32225,32237],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33103,33115],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33174,33186],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34096,34108],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35108,35120],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35179,35191],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35250,35262],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35985,35997],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  id: MessageFilterTable`1\n  children:\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  - System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  langs:\n  - csharp\n  name: MessageFilterTable<TFilterData>\n  nameWithType: MessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public class MessageFilterTable<TFilterData> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n    typeParameters:\n    - id: TFilterData\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: MessageFilterTable()\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.MessageFilterTable()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public MessageFilterTable ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: MessageFilterTable(Int32)\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable(Int32)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.MessageFilterTable(Int32)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public MessageFilterTable (int defaultPriority);\n    parameters:\n    - id: defaultPriority\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  id: Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(MessageFilter,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  id: Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Add(MessageFilter,TFilterData,Int32)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData,Int32)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData,Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data, int priority);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    - id: priority\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  id: Clear\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: MessageFilterTable<TFilterData>.Clear()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  id: ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: ContainsKey(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  nameWithType: MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  id: Count\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: MessageFilterTable<TFilterData>.Count\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Count\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  id: CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: CreateFilterTable(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData> CreateFilterTable (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  id: DefaultPriority\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: DefaultPriority\n  nameWithType: MessageFilterTable<TFilterData>.DefaultPriority\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.DefaultPriority\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public int DefaultPriority { get; set; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(Message,MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  id: GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilter(MessageBuffer,MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(Message,ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  id: GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(Message,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  id: GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValue(MessageBuffer,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(Message,ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  id: GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection<TFilterData> results);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: To be added.\n    - id: results\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  id: GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: GetPriority(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public int GetPriority (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: MessageFilterTable<TFilterData>.IsReadOnly\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Item(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Item(MessageFilter)\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: TFilterData\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  id: Keys\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: MessageFilterTable<TFilterData>.Keys\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Keys\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  id: Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Remove(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Remove(MessageFilter)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  id: TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: TryGetValue(MessageFilter,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);\n    parameters:\n    - id: filter\n      type: System.ServiceModel.Dispatcher.MessageFilter\n      description: To be added.\n    - id: data\n      type: TFilterData\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  id: Values\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  langs:\n  - csharp\n  name: Values\n  nameWithType: MessageFilterTable<TFilterData>.Values\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Values\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  syntax:\n    content: public System.Collections.Generic.ICollection<TFilterData> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TFilterData}\n      description: To be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: MessageFilterTable()\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.MessageFilterTable()\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: MessageFilterTable(Int32)\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable(Int32)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.MessageFilterTable(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Add(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<MessageFilter,TFilterData>\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add(MessageFilter,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n- uid: TFilterData\n  isExternal: true\n  name: TFilterData\n  nameWithType: TFilterData\n  fullName: TFilterData\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add(MessageFilter,TFilterData,Int32)\n  nameWithType: MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData,Int32)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Add(MessageFilter,TFilterData,Int32)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Clear()\n  nameWithType: MessageFilterTable<TFilterData>.Clear()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Clear()\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Contains(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Contains(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: ContainsKey(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.ContainsKey(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  nameWithType: MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.CopyTo(KeyValuePair<MessageFilter,TFilterData>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}[]\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<MessageFilter,TFilterData>\n  nameWithType: KeyValuePair<MessageFilter,TFilterData>\n  fullName: System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>[]\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: MessageFilterTable<TFilterData>.Count\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Count\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CreateFilterTable(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.CreateFilterTable(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: IMessageFilterTable<TFilterData>\n  nameWithType: IMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: DefaultPriority\n  nameWithType: MessageFilterTable<TFilterData>.DefaultPriority\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.DefaultPriority\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,TFilterData}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  nameWithType: IEnumerator<KeyValuePair<MessageFilter,TFilterData>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(Message,MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter(MessageBuffer,MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(Message,ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)\n- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<MessageFilter>\n  nameWithType: ICollection<MessageFilter>\n  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.ServiceModel.Dispatcher.MessageFilter>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Dispatcher.MessageFilter\n    name: MessageFilter\n    nameWithType: MessageFilter\n    fullName: MessageFilter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(Message,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue(MessageBuffer,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(Message,ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)\n- uid: System.Collections.Generic.ICollection{TFilterData}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<TFilterData>\n  nameWithType: ICollection<TFilterData>\n  fullName: System.Collections.Generic.ICollection<TFilterData>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<TFilterData>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TFilterData\n    name: TFilterData\n    nameWithType: TFilterData\n    fullName: TFilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetPriority(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.GetPriority(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MessageFilterTable<TFilterData>.IsReadOnly\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.IsReadOnly\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Item(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Item(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Item(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: MessageFilterTable<TFilterData>.Keys\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Keys\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Remove(KeyValuePair<MessageFilter,TFilterData>)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Remove(KeyValuePair<MessageFilter,TFilterData>)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Remove(MessageFilter)\n  nameWithType: MessageFilterTable<TFilterData>.Remove(MessageFilter)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Remove(MessageFilter)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: TryGetValue(MessageFilter,TFilterData)\n  nameWithType: MessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.TryGetValue(MessageFilter,TFilterData)\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: MessageFilterTable<TFilterData>.Values\n  fullName: System.ServiceModel.Dispatcher.MessageFilterTable<TFilterData>.Values\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: MessageFilterTable<TFilterData>\n  nameWithType: MessageFilterTable<TFilterData>.MessageFilterTable<TFilterData>\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Add*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Add\n  nameWithType: MessageFilterTable<TFilterData>.Add\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Clear\n  nameWithType: MessageFilterTable<TFilterData>.Clear\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Contains\n  nameWithType: MessageFilterTable<TFilterData>.Contains\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: ContainsKey\n  nameWithType: MessageFilterTable<TFilterData>.ContainsKey\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: MessageFilterTable<TFilterData>.CopyTo\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Count*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Count\n  nameWithType: MessageFilterTable<TFilterData>.Count\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: CreateFilterTable\n  nameWithType: MessageFilterTable<TFilterData>.CreateFilterTable\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: DefaultPriority\n  nameWithType: MessageFilterTable<TFilterData>.DefaultPriority\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: MessageFilterTable<TFilterData>.GetEnumerator\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilter\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilter\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingFilters\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingFilters\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValue\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValue\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetMatchingValues\n  nameWithType: MessageFilterTable<TFilterData>.GetMatchingValues\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: GetPriority\n  nameWithType: MessageFilterTable<TFilterData>.GetPriority\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MessageFilterTable<TFilterData>.IsReadOnly\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Item*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Item\n  nameWithType: MessageFilterTable<TFilterData>.Item\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Keys\n  nameWithType: MessageFilterTable<TFilterData>.Keys\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Remove\n  nameWithType: MessageFilterTable<TFilterData>.Remove\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: MessageFilterTable<TFilterData>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: TryGetValue\n  nameWithType: MessageFilterTable<TFilterData>.TryGetValue\n- uid: System.ServiceModel.Dispatcher.MessageFilterTable`1.Values*\n  parent: System.ServiceModel.Dispatcher.MessageFilterTable`1\n  isExternal: false\n  name: Values\n  nameWithType: MessageFilterTable<TFilterData>.Values\n"}