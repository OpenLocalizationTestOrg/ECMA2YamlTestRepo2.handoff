{"nodes":[{"pos":[5456,5587],"content":"Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.","pos":[0,131]}]},{"pos":[5600,7831],"content":"Accessibility applications can adjust features of the application to improve usability for users with disabilities.       For users who are visually impaired, you can adjust software and operating system features to comply with their needs. For example, you can enlarge text and images and render them with a contrast. In addition, you can accommodate color-blindness with the appropriate use of colors. For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.       For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text. For example, when turned on, the `SoundSentry` feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.       For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility. Control Panel offers assistance. For example, one alternative is to use the numeric keypad instead of the mouse for navigation. Another option, called `StickyKeys`, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.       For users with cognitive and language disabilities, you can design software programs to better accommodate their needs. For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.       For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.       For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.      > [!NOTE] >  To use the AccessibleObject, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. Windows Forms only supports Active Accessibility 2.0.","needQuote":false,"needEscape":true,"nodes":[{"content":"Accessibility applications can adjust features of the application to improve usability for users with disabilities.","pos":[0,115]},{"content":"For users who are visually impaired, you can adjust software and operating system features to comply with their needs.","pos":[122,240]},{"content":"For example, you can enlarge text and images and render them with a contrast.","pos":[241,318]},{"content":"In addition, you can accommodate color-blindness with the appropriate use of colors.","pos":[319,403]},{"content":"For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.","pos":[404,585]},{"content":"For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text.","pos":[592,744]},{"content":"For example, when turned on, the <ph id=\"ph1\">`SoundSentry`</ph> feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.","pos":[745,910],"source":" For example, when turned on, the `SoundSentry` feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound."},{"content":"For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility.","pos":[917,1067]},{"content":"Control Panel offers assistance.","pos":[1068,1100]},{"content":"For example, one alternative is to use the numeric keypad instead of the mouse for navigation.","pos":[1101,1195]},{"content":"Another option, called <ph id=\"ph1\">`StickyKeys`</ph>, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.","pos":[1196,1363],"source":" Another option, called `StickyKeys`, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time."},{"content":"For users with cognitive and language disabilities, you can design software programs to better accommodate their needs.","pos":[1370,1489]},{"content":"For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.","pos":[1490,1662]},{"content":"For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.","pos":[1669,1776]},{"content":"For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.","pos":[1783,1980]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To use the AccessibleObject, you must add a reference to the <ph id=\"ph2\">`Accessibility`</ph> assembly installed with the <ph id=\"ph3\">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.","pos":[1986,2162],"source":"      > [!NOTE] >  To use the AccessibleObject, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."},{"content":"Windows Forms only supports Active Accessibility 2.0.","pos":[2163,2216]}]},{"pos":[10352,10451],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> class."},{"pos":[10463,10671],"content":"Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.","pos":[0,208]}]},{"pos":[11364,11547],"content":"Gets the number of child interfaces that belong to this object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of child interfaces that belong to this object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;.","pos":[0,183],"nodes":[{"content":"Gets the number of child interfaces that belong to this object.","pos":[0,63]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[64,183],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;."}]}]},{"pos":[11559,11759],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]}]},{"pos":[11892,12011],"content":"The number of child accessible objects that belong to this object. If the object has no child objects, this value is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of child accessible objects that belong to this object. If the object has no child objects, this value is 0.","pos":[0,119],"nodes":[{"content":"The number of child accessible objects that belong to this object.","pos":[0,66]},{"content":"If the object has no child objects, this value is 0.","pos":[67,119]}]}]},{"pos":[12745,12956],"content":"Performs the specified object's default action. Not all objects have a default action. For a description of this member, see &lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs the specified object's default action. Not all objects have a default action. For a description of this member, see &lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;.","pos":[0,211],"nodes":[{"content":"Performs the specified object's default action.","pos":[0,47]},{"content":"Not all objects have a default action.","pos":[48,86]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[87,211],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;."}]}]},{"pos":[12968,13168],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]}]},{"pos":[13325,13454],"content":"The child ID in the <bpt id=\"p1\">&lt;xref href=\"Accessibility.IAccessible\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> interface/child ID pair that represents the accessible object.","needQuote":true,"needEscape":true,"source":"The child ID in the <xref href=\"Accessibility.IAccessible\"></xref> interface/child ID pair that represents the accessible object."},{"pos":[14091,14250],"content":"Gets the object that has the keyboard focus. For a description of this member, see &lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object that has the keyboard focus. For a description of this member, see &lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;.","pos":[0,159],"nodes":[{"content":"Gets the object that has the keyboard focus.","pos":[0,44]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[45,159],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;."}]}]},{"pos":[14263,15082],"content":"The return value type of the IAccessible.accFocus property depends on the object that has keyboard focus. The following table describes the object types that the IAccessible.accFocus property returns.      |Type|Description|   |----------|-----------------|   |`null`|This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.|   |integer|0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.|   |<xref:Accessibility.IAccessible>|The child accessible object that has the keyboard focus.|       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The return value type of the IAccessible.accFocus property depends on the object that has keyboard focus.","pos":[0,105]},{"content":"The following table describes the object types that the IAccessible.accFocus property returns.","pos":[106,200]},{"content":"|Type|Description|   |----------|-----------------|   |<ph id=\"ph1\">`null`</ph>|This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.|   |integer|0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.|   |&lt;xref:Accessibility.IAccessible&gt;|The child accessible object that has the keyboard focus.|       This member is an explicit interface member implementation.","pos":[206,670],"source":"      |Type|Description|   |----------|-----------------|   |`null`|This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.|   |integer|0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.|   |<xref:Accessibility.IAccessible>|The child accessible object that has the keyboard focus.|       This member is an explicit interface member implementation."},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[671,811],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]},{"pos":[15215,15250],"content":"The object that has keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that has keyboard focus.","pos":[0,35]}]},{"pos":[15978,16153],"content":"Gets the child object at the specified screen coordinates. For a description of this member, see &lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the child object at the specified screen coordinates. For a description of this member, see &lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;.","pos":[0,175],"nodes":[{"content":"Gets the child object at the specified screen coordinates.","pos":[0,58]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[59,175],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;."}]}]},{"pos":[16166,16813],"content":"The following table describes the object types that the IAccessible.accHitTest method can return.      |Type|Description|   |----------|-----------------|   |<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|   |integer|0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.|       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table describes the object types that the IAccessible.accHitTest method can return.      |Type|Description|   |----------|-----------------|   |<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|   |integer|0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.|       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","pos":[0,640],"nodes":[{"content":"The following table describes the object types that the IAccessible.accHitTest method can return.","pos":[0,97]},{"content":"|Type|Description|   |----------|-----------------|   |&lt;xref:Accessibility.IAccessible&gt;|The accessible object at the specified direction.|   |integer|0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.|       This member is an explicit interface member implementation.","pos":[103,499],"source":"      |Type|Description|   |----------|-----------------|   |<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|   |integer|0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.|       This member is an explicit interface member implementation."},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[500,640],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]}]},{"pos":[16967,16993],"content":"The horizontal coordinate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The horizontal coordinate.","pos":[0,26]}]},{"pos":[17053,17077],"content":"The vertical coordinate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vertical coordinate.","pos":[0,24]}]},{"pos":[17135,17224],"content":"The accessible object at the point specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">xLeft</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">yTop</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The accessible object at the point specified by <code>xLeft</code> and <code>yTop</code>."},{"pos":[18104,18264],"content":"Gets the object's current screen location. For a description of this member, see &lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object's current screen location. For a description of this member, see &lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;.","pos":[0,160],"nodes":[{"content":"Gets the object's current screen location.","pos":[0,42]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[43,160],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;."}]}]},{"pos":[18276,18476],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]}]},{"pos":[18692,18810],"content":"When this method returns, contains the x-coordinate of the object’s left edge. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the x-coordinate of the object’s left edge. This parameter is passed uninitialized.","pos":[0,118],"nodes":[{"content":"When this method returns, contains the x-coordinate of the object’s left edge.","pos":[0,78]},{"content":"This parameter is passed uninitialized.","pos":[79,118]}]}]},{"pos":[18871,18988],"content":"When this method returns, contains the y-coordinate of the object’s top edge. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the y-coordinate of the object’s top edge. This parameter is passed uninitialized.","pos":[0,117],"nodes":[{"content":"When this method returns, contains the y-coordinate of the object’s top edge.","pos":[0,77]},{"content":"This parameter is passed uninitialized.","pos":[78,117]}]}]},{"pos":[19052,19151],"content":"When this method returns, contains the width of the object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the width of the object. This parameter is passed uninitialized.","pos":[0,99],"nodes":[{"content":"When this method returns, contains the width of the object.","pos":[0,59]},{"content":"This parameter is passed uninitialized.","pos":[60,99]}]}]},{"pos":[19216,19316],"content":"When this method returns, contains the height of the object. This parameter is passed uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the height of the object. This parameter is passed uninitialized.","pos":[0,100],"nodes":[{"content":"When this method returns, contains the height of the object.","pos":[0,60]},{"content":"This parameter is passed uninitialized.","pos":[61,100]}]}]},{"pos":[19380,19546],"content":"The ID number of the accessible object. This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID number of the accessible object. This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.","pos":[0,166],"nodes":[{"content":"The ID number of the accessible object.","pos":[0,39]},{"content":"This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.","pos":[40,166]}]}]},{"pos":[20287,20470],"content":"Navigates to an accessible object relative to the current object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigates to an accessible object relative to the current object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;.","pos":[0,183],"nodes":[{"content":"Navigates to an accessible object relative to the current object.","pos":[0,65]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[66,183],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;."}]}]},{"pos":[20483,21202],"content":"The following table describes the object types that the IAccessible.accNavigate method can return.      |Type|Description|   |----------|-----------------|   |`null`|There is not an accessible object at the specified direction.|   |<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|   |integer|The child ID that identifies the accessible object at the specified direction. Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.|       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table describes the object types that the IAccessible.accNavigate method can return.","pos":[0,98]},{"content":"|Type|Description|   |----------|-----------------|   |<ph id=\"ph1\">`null`</ph>|There is not an accessible object at the specified direction.|   |&lt;xref:Accessibility.IAccessible&gt;|The accessible object at the specified direction.|   |integer|The child ID that identifies the accessible object at the specified direction.","pos":[104,405],"source":"      |Type|Description|   |----------|-----------------|   |`null`|There is not an accessible object at the specified direction.|   |<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|   |integer|The child ID that identifies the accessible object at the specified direction."},{"content":"Use the parent &lt;xref:Accessibility.IAccessible&gt; and the child ID to access the accessible object.|       This member is an explicit interface member implementation.","pos":[406,570],"source":" Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.|       This member is an explicit interface member implementation."},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[571,711],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]},{"pos":[21365,21493],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleNavigation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumerations that specifies the direction to navigate.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.AccessibleNavigation\"></xref> enumerations that specifies the direction to navigate."},{"pos":[21557,21705],"content":"The ID number of the accessible object. This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID number of the accessible object. This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.","pos":[0,148],"nodes":[{"content":"The ID number of the accessible object.","pos":[0,39]},{"content":"This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.","pos":[40,148]}]}]},{"pos":[21763,21842],"content":"The accessible object positioned at the value specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">navDir</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The accessible object positioned at the value specified by <code>navDir</code>."},{"pos":[22477,22642],"content":"Gets the parent accessible object of this object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parent accessible object of this object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;.","pos":[0,165],"nodes":[{"content":"Gets the parent accessible object of this object.","pos":[0,49]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[50,165],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;."}]}]},{"pos":[22654,22855],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface..","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface..","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface..","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.."}]}]},{"pos":[22988,23184],"content":"An <bpt id=\"p1\">&lt;xref href=\"Accessibility.IAccessible\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the parent of the accessible object, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is no parent object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"Accessibility.IAccessible\"></xref> that represents the parent of the accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent object."},{"pos":[23913,24105],"content":"Modifies the selection or moves the keyboard focus of the accessible object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifies the selection or moves the keyboard focus of the accessible object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;.","pos":[0,192],"nodes":[{"content":"Modifies the selection or moves the keyboard focus of the accessible object.","pos":[0,76]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[77,192],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;."}]}]},{"pos":[24118,25739],"content":"The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling `Select` to perform complex selection operations.      |Operation|Flag Combination|   |---------------|----------------------|   |To simulate a click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To select a target item by simulating CTRL+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To cancel selection of a target item by simulating CTRL+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To simulate SHIFT+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To select a range of objects and put focus on the last object|Specify <xref:System.Windows.Forms.AccessibleSelection> on the starting object to set the selection anchor. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection> on the last object.|   |To deselect all objects|Specify <xref:System.Windows.Forms.AccessibleSelection> on any object. This flag deselects all selected objects except the one just selected. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection> on the same object.|       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following describes which &lt;xref:System.Windows.Forms.AccessibleSelection&gt; values to specify when calling <ph id=\"ph1\">`Select`</ph> to perform complex selection operations.","pos":[0,158],"source":"The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling `Select` to perform complex selection operations."},{"content":"|Operation|Flag Combination|   |---------------|----------------------|   |To simulate a click|&lt;xref:System.Windows.Forms.AccessibleSelection&gt; OR &lt;xref:System.Windows.Forms.AccessibleSelection&gt;|   |To select a target item by simulating CTRL+click|&lt;xref:System.Windows.Forms.AccessibleSelection&gt; OR &lt;xref:System.Windows.Forms.AccessibleSelection&gt;|   |To cancel selection of a target item by simulating CTRL+click|&lt;xref:System.Windows.Forms.AccessibleSelection&gt; OR &lt;xref:System.Windows.Forms.AccessibleSelection&gt;|   |To simulate SHIFT+click|&lt;xref:System.Windows.Forms.AccessibleSelection&gt; OR &lt;xref:System.Windows.Forms.AccessibleSelection&gt;|   |To select a range of objects and put focus on the last object|Specify &lt;xref:System.Windows.Forms.AccessibleSelection&gt; on the starting object to set the selection anchor.","pos":[164,975],"source":"      |Operation|Flag Combination|   |---------------|----------------------|   |To simulate a click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To select a target item by simulating CTRL+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To cancel selection of a target item by simulating CTRL+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To simulate SHIFT+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|   |To select a range of objects and put focus on the last object|Specify <xref:System.Windows.Forms.AccessibleSelection> on the starting object to set the selection anchor."},{"content":"Then call Select again and specify &lt;xref:System.Windows.Forms.AccessibleSelection&gt; OR &lt;xref:System.Windows.Forms.AccessibleSelection&gt; on the last object.|   |To deselect all objects|Specify &lt;xref:System.Windows.Forms.AccessibleSelection&gt; on any object.","pos":[976,1228],"source":" Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection> on the last object.|   |To deselect all objects|Specify <xref:System.Windows.Forms.AccessibleSelection> on any object."},{"content":"This flag deselects all selected objects except the one just selected.","pos":[1229,1299]},{"content":"Then call Select again and specify &lt;xref:System.Windows.Forms.AccessibleSelection&gt; on the same object.|       This member is an explicit interface member implementation.","pos":[1300,1469],"source":" Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection> on the same object.|       This member is an explicit interface member implementation."},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[1470,1610],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]},{"pos":[25908,26006],"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleSelection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"A bitwise combination of the <xref href=\"System.Windows.Forms.AccessibleSelection\"></xref> values."},{"pos":[26070,26244],"content":"The ID number of the accessible object on which to perform the selection. This parameter is 0 to select the object, or a child ID to select one of the object's child objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ID number of the accessible object on which to perform the selection. This parameter is 0 to select the object, or a child ID to select one of the object's child objects.","pos":[0,174],"nodes":[{"content":"The ID number of the accessible object on which to perform the selection.","pos":[0,73]},{"content":"This parameter is 0 to select the object, or a child ID to select one of the object's child objects.","pos":[74,174]}]}]},{"pos":[26892,27067],"content":"Gets the selected child objects of an accessible object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the selected child objects of an accessible object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;.","pos":[0,175],"nodes":[{"content":"Gets the selected child objects of an accessible object.","pos":[0,56]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[57,175],"source":" For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;."}]}]},{"pos":[27080,27816],"content":"The following table describes the object types that the IAccessible.accSelection property returns      |Type|Description|   |----------|-----------------|   |`null`|No child objects are selected.|   |<xref:Accessibility.IAccessible>|The child accessible object that is selected.|   |integer|The child ID that identifies the accessible object that is selected. Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.|   |`IEnumVARIANT`|A list of child objects that are selected.|       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following table describes the object types that the IAccessible.accSelection property returns      |Type|Description|   |----------|-----------------|   |<ph id=\"ph1\">`null`</ph>|No child objects are selected.|   |&lt;xref:Accessibility.IAccessible&gt;|The child accessible object that is selected.|   |integer|The child ID that identifies the accessible object that is selected.","pos":[0,359],"source":"The following table describes the object types that the IAccessible.accSelection property returns      |Type|Description|   |----------|-----------------|   |`null`|No child objects are selected.|   |<xref:Accessibility.IAccessible>|The child accessible object that is selected.|   |integer|The child ID that identifies the accessible object that is selected."},{"content":"Use the parent &lt;xref:Accessibility.IAccessible&gt; and the child ID to access the accessible object.|   |<ph id=\"ph1\">`IEnumVARIANT`</ph>|A list of child objects that are selected.|       This member is an explicit interface member implementation.","pos":[360,586],"source":" Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.|   |`IEnumVARIANT`|A list of child objects that are selected.|       This member is an explicit interface member implementation."},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:Accessibility.IAccessible&gt; interface.","pos":[587,727],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface."}]},{"pos":[27953,28004],"content":"The selected child objects of an accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected child objects of an accessible object.","pos":[0,51]}]},{"pos":[28848,28860],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28918,28930],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29822,29834],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29892,29904],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30792,30804],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30862,30874],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31718,31730],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[31788,31800],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32743,32755],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32819,32831],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[32888,32900],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33814,33826],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33884,33896],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34745,34757],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[34815,34827],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35664,35676],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[35734,35746],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36589,36601],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[36659,36671],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37515,37527],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[37585,37597],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38498,38510],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38574,38586],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39493,39505],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39570,39582],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40059,40111],"content":"Gets the location and size of the accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the location and size of the accessible object.","pos":[0,52]}]},{"pos":[40123,40696],"content":"The Bounds property retrieves the object's bounding rectangle in screen coordinates. If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region. Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Bounds property retrieves the object's bounding rectangle in screen coordinates. If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region. Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.","pos":[0,573],"nodes":[{"content":"The Bounds property retrieves the object's bounding rectangle in screen coordinates.","pos":[0,84]},{"content":"If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region.","pos":[85,233]},{"content":"Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the &lt;xref:System.Windows.Forms.AccessibleObject.HitTest%2A&gt; method, because &lt;xref:System.Windows.Forms.AccessibleObject.HitTest%2A&gt; determines the object's boundaries on a pixel-by-pixel basis.","pos":[234,573],"source":" Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis."}]}]},{"pos":[42476,42576],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the bounds of the accessible object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the accessible object."},{"pos":[42781,42823],"content":"The bounds of control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The bounds of control cannot be retrieved.","pos":[0,42]}]},{"pos":[43228,43329],"content":"Gets a string that describes the default action of the object. Not all objects have a default action.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that describes the default action of the object. Not all objects have a default action.","pos":[0,101],"nodes":[{"content":"Gets a string that describes the default action of the object.","pos":[0,62]},{"content":"Not all objects have a default action.","pos":[63,101]}]}]},{"pos":[43341,43624],"content":"The string describes the action that is performed on an object, not what the object does as a result. That is, a toolbar button that prints a document has a default action of \"Press\" rather than \"Prints the current document.\" Do not confuse an object's default action with its value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string describes the action that is performed on an object, not what the object does as a result. That is, a toolbar button that prints a document has a default action of \"Press\" rather than \"Prints the current document.\" Do not confuse an object's default action with its value.","pos":[0,283],"nodes":[{"content":"The string describes the action that is performed on an object, not what the object does as a result.","pos":[0,101]},{"content":"That is, a toolbar button that prints a document has a default action of \"Press\" rather than \"Prints the current document.\"","pos":[102,225]},{"content":"Do not confuse an object's default action with its value.","pos":[226,283]}]}]},{"pos":[43750,43902],"content":"A description of the default action for an object, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this object has no default action.","needQuote":true,"needEscape":true,"source":"A description of the default action for an object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this object has no default action."},{"pos":[44114,44169],"content":"The default action for the control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default action for the control cannot be retrieved.","pos":[0,55]}]},{"pos":[44564,44675],"content":"Gets a string that describes the visual appearance of the specified object. Not all objects have a description.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that describes the visual appearance of the specified object. Not all objects have a description.","pos":[0,111],"nodes":[{"content":"Gets a string that describes the visual appearance of the specified object.","pos":[0,75]},{"content":"Not all objects have a description.","pos":[76,111]}]}]},{"pos":[44687,44754],"content":"This property describes the object's visual appearance to the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property describes the object's visual appearance to the user.","pos":[0,67]}]},{"pos":[44878,45045],"content":"A description of the object's visual appearance to the user, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object does not have a description.","needQuote":true,"needEscape":true,"source":"A description of the object's visual appearance to the user, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object does not have a description."},{"pos":[45255,45307],"content":"The description for the control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The description for the control cannot be retrieved.","pos":[0,52]}]},{"pos":[45726,45793],"content":"Performs the default action associated with this accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Performs the default action associated with this accessible object.","pos":[0,67]}]},{"pos":[45805,46156],"content":"Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property. A client can use automation (if supported) instead of DoDefaultAction to perform an object's default action. However, DoDefaultAction provides an easy way to perform an object's most commonly used action.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property. A client can use automation (if supported) instead of DoDefaultAction to perform an object's default action. However, DoDefaultAction provides an easy way to perform an object's most commonly used action.","pos":[0,351],"nodes":[{"content":"Clients can retrieve the object's default action by inspecting an object's &lt;xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A&gt; property.","pos":[0,146],"source":"Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property."},{"content":"A client can use automation (if supported) instead of DoDefaultAction to perform an object's default action.","pos":[147,255]},{"content":"However, DoDefaultAction provides an easy way to perform an object's most commonly used action.","pos":[256,351]}]}]},{"pos":[46452,46507],"content":"The default action for the control cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default action for the control cannot be performed.","pos":[0,55]}]},{"pos":[46934,47002],"content":"Retrieves the accessible child corresponding to the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the accessible child corresponding to the specified index.","pos":[0,68]}]},{"pos":[48772,48817],"content":"The zero-based index of the accessible child.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the accessible child.","pos":[0,45]}]},{"pos":[48899,49035],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the accessible child corresponding to the specified index.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the accessible child corresponding to the specified index."},{"pos":[49521,49588],"content":"Retrieves the number of children belonging to an accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the number of children belonging to an accessible object.","pos":[0,67]}]},{"pos":[51370,51427],"content":"The number of children belonging to an accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of children belonging to an accessible object.","pos":[0,57]}]},{"pos":[51903,51952],"content":"Retrieves the object that has the keyboard focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the object that has the keyboard focus.","pos":[0,49]}]},{"pos":[51965,52371],"content":"The concept of keyboard focus is related to that of an active window. An active window is the foreground window in which the user is working. The object with the keyboard focus is either the active window or a child object of the active window.       Only one object or item within a container can have the focus at any one time. The object with the keyboard focus is not necessarily the selected object.","needQuote":false,"needEscape":true,"nodes":[{"content":"The concept of keyboard focus is related to that of an active window. An active window is the foreground window in which the user is working. The object with the keyboard focus is either the active window or a child object of the active window.       Only one object or item within a container can have the focus at any one time. The object with the keyboard focus is not necessarily the selected object.","pos":[0,404],"nodes":[{"content":"The concept of keyboard focus is related to that of an active window.","pos":[0,69]},{"content":"An active window is the foreground window in which the user is working.","pos":[70,141]},{"content":"The object with the keyboard focus is either the active window or a child object of the active window.","pos":[142,244]},{"content":"Only one object or item within a container can have the focus at any one time.","pos":[251,329]},{"content":"The object with the keyboard focus is not necessarily the selected object.","pos":[330,404]}]}]},{"pos":[52564,52834],"content":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object has focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the currently focused child.","pos":[0,105],"source":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that specifies the currently focused child."},{"content":"This method returns the calling object if the object itself is focused.","pos":[106,177]},{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no object has focus.","pos":[178,270],"source":" Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object has focus."}]},{"pos":[53043,53075],"content":"The control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control cannot be retrieved.","pos":[0,32]}]},{"pos":[53529,53645],"content":"Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.","pos":[0,116]}]},{"pos":[53657,53929],"content":"To display help for the <xref:System.Windows.Forms.AccessibleObject> using the Windows Help system, you can pass the file name and topic ID to the appropriate <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName> method of <xref:System.Windows.Forms.Help>.","needQuote":true,"needEscape":true,"nodes":[{"content":"To display help for the &lt;xref:System.Windows.Forms.AccessibleObject&gt; using the Windows Help system, you can pass the file name and topic ID to the appropriate &lt;xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName&gt; method of &lt;xref:System.Windows.Forms.Help&gt;.","pos":[0,272],"source":"To display help for the <xref:System.Windows.Forms.AccessibleObject> using the Windows Help system, you can pass the file name and topic ID to the appropriate <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName> method of <xref:System.Windows.Forms.Help>."}]},{"pos":[54088,54187],"content":"On return, this property contains the path to the Help file associated with this accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"On return, this property contains the path to the Help file associated with this accessible object.","pos":[0,99]}]},{"pos":[54244,54430],"content":"An identifier for a Help topic, or -1 if there is no Help topic. On return, the <code>fileName</code> parameter contains the path to the Help file associated with this accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An identifier for a Help topic, or -1 if there is no Help topic.","pos":[0,64]},{"content":"On return, the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains the path to the Help file associated with this accessible object.","pos":[65,186],"source":" On return, the <code>fileName</code> parameter contains the path to the Help file associated with this accessible object."}]},{"pos":[54641,54692],"content":"The Help topic for the control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Help topic for the control cannot be retrieved.","pos":[0,51]}]},{"pos":[55091,55130],"content":"Retrieves the currently selected child.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the currently selected child.","pos":[0,39]}]},{"pos":[55323,55652],"content":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if is no child is currently selected and the object itself does not have focus.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the currently selected child.","pos":[0,107],"source":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the currently selected child."},{"content":"This method returns the calling object if the object itself is selected.","pos":[108,180]},{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if is no child is currently selected and the object itself does not have focus.","pos":[181,329],"source":" Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if is no child is currently selected and the object itself does not have focus."}]},{"pos":[55862,55901],"content":"The selected child cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selected child cannot be retrieved.","pos":[0,39]}]},{"pos":[56261,56330],"content":"Gets a description of what the object does or how the object is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a description of what the object does or how the object is used.","pos":[0,69]}]},{"pos":[56447,56642],"content":"A <xref:System.String> that contains the description of what the object does or how the object is used. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no help is defined.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.String&gt; that contains the description of what the object does or how the object is used.","pos":[0,103],"source":"A <xref:System.String> that contains the description of what the object does or how the object is used."},{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no help is defined.","pos":[104,195],"source":" Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no help is defined."}]},{"pos":[56845,56897],"content":"The help string for the control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The help string for the control cannot be retrieved.","pos":[0,52]}]},{"pos":[57363,57426],"content":"Retrieves the child object at the specified screen coordinates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the child object at the specified screen coordinates.","pos":[0,63]}]},{"pos":[57438,57719],"content":"For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> can fail if tested with HitTest, because HitTest determines the object's boundaries on a pixel-by-pixel basis.","needQuote":true,"needEscape":true,"nodes":[{"content":"For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by &lt;xref:System.Windows.Forms.AccessibleObject.Bounds%2A&gt; can fail if tested with HitTest, because HitTest determines the object's boundaries on a pixel-by-pixel basis.","pos":[0,281],"source":"For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> can fail if tested with HitTest, because HitTest determines the object's boundaries on a pixel-by-pixel basis."}]},{"pos":[57892,57925],"content":"The horizontal screen coordinate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The horizontal screen coordinate.","pos":[0,33]}]},{"pos":[57982,58013],"content":"The vertical screen coordinate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The vertical screen coordinate.","pos":[0,31]}]},{"pos":[58095,58421],"content":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object is at the tested location.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the child object at the given screen coordinates.","pos":[0,127],"source":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the child object at the given screen coordinates."},{"content":"This method returns the calling object if the object itself is at the location specified.","pos":[128,217]},{"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no object is at the tested location.","pos":[218,326],"source":" Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object is at the tested location."}]},{"pos":[58627,58660],"content":"The control cannot be hit tested.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control cannot be hit tested.","pos":[0,33]}]},{"pos":[59080,59142],"content":"Gets the shortcut key or access key for the accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the shortcut key or access key for the accessible object.","pos":[0,62]}]},{"pos":[59154,59804],"content":"An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control. For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the `File` menu. To use the access key of a menu item, the menu containing the item must be active. Controls such as toolbar buttons and menu items often have an associated shortcut key. A menu item can have both an access key and a shortcut key associated with it. If the value of the KeyboardShortcut property is a single character, you can assume it is an access key.","needQuote":true,"needEscape":true,"nodes":[{"content":"An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control.","pos":[0,143]},{"content":"For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the <ph id=\"ph1\">`File`</ph> menu.","pos":[144,296],"source":" For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the `File` menu."},{"content":"To use the access key of a menu item, the menu containing the item must be active.","pos":[297,379]},{"content":"Controls such as toolbar buttons and menu items often have an associated shortcut key.","pos":[380,466]},{"content":"A menu item can have both an access key and a shortcut key associated with it.","pos":[467,545]},{"content":"If the value of the KeyboardShortcut property is a single character, you can assume it is an access key.","pos":[546,650]}]},{"pos":[59933,60110],"content":"The shortcut key or access key for the accessible object, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no shortcut key associated with the object.","needQuote":true,"needEscape":true,"source":"The shortcut key or access key for the accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no shortcut key associated with the object."},{"pos":[60325,60374],"content":"The shortcut for the control cannot be retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The shortcut for the control cannot be retrieved.","pos":[0,49]}]},{"pos":[60734,60763],"content":"Gets or sets the object name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the object name.","pos":[0,29]}]},{"pos":[60775,61049],"content":"The Name property is a string used by clients to identify, find, or announce an object for the user. To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Name property is a string used by clients to identify, find, or announce an object for the user. To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving.","pos":[0,274],"nodes":[{"content":"The Name property is a string used by clients to identify, find, or announce an object for the user.","pos":[0,100]},{"content":"To access the name of a child object, you must first call &lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt; with the index of the child whose name you are retrieving.","pos":[101,274],"source":" To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving."}]}]},{"pos":[62798,62912],"content":"The object name, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property has not been set.","needQuote":true,"needEscape":true,"source":"The object name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the property has not been set."},{"pos":[63115,63166],"content":"The name of the control cannot be retrieved or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the control cannot be retrieved or set.","pos":[0,51]}]},{"pos":[63696,63735],"content":"Navigates to another accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigates to another accessible object.","pos":[0,39]}]},{"pos":[63747,64340],"content":"Navigation, both spatial and logical, is always restricted to the user interface elements within a container. With spatial navigation, clients can navigate only to a sibling of the starting object. Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object. This method does not change the selection or focus. To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>. The Navigate method retrieves only user interface elements that have a defined screen location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigation, both spatial and logical, is always restricted to the user interface elements within a container. With spatial navigation, clients can navigate only to a sibling of the starting object. Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object. This method does not change the selection or focus. To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>. The Navigate method retrieves only user interface elements that have a defined screen location.","pos":[0,593],"nodes":[{"content":"Navigation, both spatial and logical, is always restricted to the user interface elements within a container.","pos":[0,109]},{"content":"With spatial navigation, clients can navigate only to a sibling of the starting object.","pos":[110,197]},{"content":"Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object.","pos":[198,341]},{"content":"This method does not change the selection or focus.","pos":[342,393]},{"content":"To change the focus or to select an object, use &lt;xref:System.Windows.Forms.AccessibleObject.Select%2A&gt;.","pos":[394,497],"source":" To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>."},{"content":"The Navigate method retrieves only user interface elements that have a defined screen location.","pos":[498,593]}]}]},{"pos":[66205,66286],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleNavigation\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.AccessibleNavigation\"></xref> values."},{"pos":[66368,66527],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents one of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.AccessibleNavigation\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents one of the <xref href=\"System.Windows.Forms.AccessibleNavigation\"></xref> values."},{"pos":[66734,66763],"content":"The navigation attempt fails.","needQuote":true,"needEscape":true,"nodes":[{"content":"The navigation attempt fails.","pos":[0,29]}]},{"pos":[67133,67173],"content":"Gets the parent of an accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the parent of an accessible object.","pos":[0,40]}]},{"pos":[68990,69197],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the parent of an accessible object, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if there is no parent object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the parent of an accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent object."},{"pos":[69632,69672],"content":"Gets the role of this accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the role of this accessible object.","pos":[0,40]}]},{"pos":[69684,69749],"content":"The role of the object helps describe the function of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The role of the object helps describe the function of the object.","pos":[0,65]}]},{"pos":[71547,71713],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleRole\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values, or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.AccessibleRole\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if no role has been specified.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> values, or <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> if no role has been specified."},{"pos":[72301,72377],"content":"Modifies the selection or moves the keyboard focus of the accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifies the selection or moves the keyboard focus of the accessible object.","pos":[0,76]}]},{"pos":[72390,74411],"content":"Applications can use this method to perform complex selection operations.       The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling Select to perform complex selection operations.      |Operation|Flag Combination|   |---------------|----------------------|   |To simulate a click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> **Note:**  This combination will not select the desired control if called from within your own application. It will have the desired effect, however, if called from an external application.|   |To select a target item by simulating CTRL + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   |To cancel selection of a target item by simulating CTRL + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   |To simulate SHIFT + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   |To select a range of objects and put focus on the last object|Specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the starting object to set the selection anchor. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>`OR`<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the last object.|   |To deselect all objects|Specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on any object. This flag deselects all selected objects except the one just selected. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the same object.|","needQuote":false,"needEscape":true,"nodes":[{"content":"Applications can use this method to perform complex selection operations.","pos":[0,73]},{"content":"The following describes which &lt;xref:System.Windows.Forms.AccessibleSelection&gt; values to specify when calling Select to perform complex selection operations.","pos":[80,236],"source":"       The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling Select to perform complex selection operations."},{"content":"|Operation|Flag Combination|   |---------------|----------------------|   |To simulate a click|&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; <ph id=\"ph1\">`OR`</ph> &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; <bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>  This combination will not select the desired control if called from within your own application.","pos":[242,595],"source":"      |Operation|Flag Combination|   |---------------|----------------------|   |To simulate a click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> **Note:**  This combination will not select the desired control if called from within your own application."},{"content":"It will have the desired effect, however, if called from an external application.|   |To select a target item by simulating CTRL + click|&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; <ph id=\"ph1\">`OR`</ph> &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;|   |To cancel selection of a target item by simulating CTRL + click|&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; <ph id=\"ph2\">`OR`</ph> &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;|   |To simulate SHIFT + click|&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; <ph id=\"ph3\">`OR`</ph> &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;|   |To select a range of objects and put focus on the last object|Specify &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; on the starting object to set the selection anchor.","pos":[596,1482],"source":" It will have the desired effect, however, if called from an external application.|   |To select a target item by simulating CTRL + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   |To cancel selection of a target item by simulating CTRL + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   |To simulate SHIFT + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|   |To select a range of objects and put focus on the last object|Specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the starting object to set the selection anchor."},{"content":"Then call Select again and specify &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;<ph id=\"ph1\">`OR`</ph>&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; on the last object.|   |To deselect all objects|Specify &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; on any object.","pos":[1483,1810],"source":" Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>`OR`<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the last object.|   |To deselect all objects|Specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on any object."},{"content":"This flag deselects all selected objects except the one just selected.","pos":[1811,1881]},{"content":"Then call Select again and specify &lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt; on the same object.|","pos":[1882,2010],"source":" Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the same object.|"}]},{"pos":[76236,76316],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleSelection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.AccessibleSelection\"></xref> values."},{"pos":[76521,76555],"content":"The selection cannot be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The selection cannot be performed.","pos":[0,34]}]},{"pos":[76920,76961],"content":"Gets the state of this accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the state of this accessible object.","pos":[0,41]}]},{"pos":[78779,78945],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleStates\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values, or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.AccessibleStates\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, if no state has been set.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Windows.Forms.AccessibleStates\"></xref> values, or <xref href=\"System.Windows.Forms.AccessibleStates\"></xref>, if no state has been set."},{"pos":[79701,79953],"content":"Gets the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; object corresponding to the specified field and binding flag. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; object corresponding to the specified field and binding flag. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;.","pos":[0,252],"nodes":[{"content":"Gets the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object corresponding to the specified field and binding flag.","pos":[0,136],"source":"Gets the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; object corresponding to the specified field and binding flag."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[137,252],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;."}]}]},{"pos":[79965,80166],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[80371,80401],"content":"The name of the field to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the field to find.","pos":[0,30]}]},{"pos":[80486,80536],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[80608,80809],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object containing the field information for the named object that meets the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; object containing the field information for the named object that meets the search constraints specified in <code>bindingAttr</code>."},{"pos":[81039,81096],"content":"The object implements multiple fields with the same name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object implements multiple fields with the same name.","pos":[0,57]}]},{"pos":[81734,81991],"content":"Gets an array of &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; objects corresponding to all fields of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; objects corresponding to all fields of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;.","pos":[0,257],"nodes":[{"content":"Gets an array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects corresponding to all fields of the current class.","pos":[0,140],"source":"Gets an array of &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; objects corresponding to all fields of the current class."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[141,257],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;."}]}]},{"pos":[82004,82510],"content":"Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that nonpublic fields are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public fields are included in the search.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that nonpublic fields are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public fields are included in the search.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,504],"nodes":[{"content":"Each field must have a unique name.","pos":[0,35]},{"content":"The &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt; flag specifies that nonpublic fields are included in the search.","pos":[36,167],"source":" The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that nonpublic fields are included in the search."},{"content":"The &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt; flag specifies that public fields are included in the search.","pos":[168,296],"source":" The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public fields are included in the search."},{"content":"This member is an explicit interface member implementation.","pos":[303,362]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[363,504],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[82730,82780],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[82854,83076],"content":"An array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.FieldInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; objects containing all the field information for this reflection object that meets the search constraints specified in <code>bindingAttr</code>."},{"pos":[83868,84159],"content":"Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding to all public members or to all members that match a specified name. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding to all public members or to all members that match a specified name. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;.","pos":[0,291],"nodes":[{"content":"Gets an array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MemberInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects corresponding to all public members or to all members that match a specified name.","pos":[0,174],"source":"Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding to all public members or to all members that match a specified name."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[175,291],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;."}]}]},{"pos":[84171,84372],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[84581,84612],"content":"The name of the member to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to find.","pos":[0,31]}]},{"pos":[84697,84747],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[84822,84937],"content":"An array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects matching the name parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MemberInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects matching the name parameter.","pos":[0,115],"source":"An array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects matching the name parameter."}]},{"pos":[85685,85977],"content":"Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding either to all public members or to all members of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding either to all public members or to all members of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;.","pos":[0,292],"nodes":[{"content":"Gets an array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MemberInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects corresponding either to all public members or to all members of the current class.","pos":[0,174],"source":"Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding either to all public members or to all members of the current class."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[175,292],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;."}]}]},{"pos":[85989,86190],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[86411,86461],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[86536,86688],"content":"An array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects containing all the member information for this reflection object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MemberInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects containing all the member information for this reflection object.","pos":[0,152],"source":"An array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects containing all the member information for this reflection object."}]},{"pos":[87481,87750],"content":"Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method under specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method under specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;.","pos":[0,269],"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object corresponding to a specified method under specified search constraints.","pos":[0,152],"source":"Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method under specified search constraints."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[153,269],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;."}]}]},{"pos":[87762,87963],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[88170,88201],"content":"The name of the member to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to find.","pos":[0,31]}]},{"pos":[88286,88336],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[88409,88627],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object containing the method information, with the match being based on the method name and search constraints specified in <code>bindingAttr</code>."},{"pos":[88858,88916],"content":"The object implements multiple methods with the same name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object implements multiple methods with the same name.","pos":[0,58]}]},{"pos":[89859,90153],"content":"Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method, using a Type array to choose from among overloaded methods. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method, using a Type array to choose from among overloaded methods. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;.","pos":[0,294],"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object corresponding to a specified method, using a Type array to choose from among overloaded methods.","pos":[0,177],"source":"Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method, using a Type array to choose from among overloaded methods."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[178,294],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;."}]}]},{"pos":[90166,90704],"content":"The return value is a match based on the method name, the <xref:System.Reflection.BindingFlags?displayProperty=fullName> enumeration, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo?displayProperty=fullName> that describes the signature of the method.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The return value is a match based on the method name, the &lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt; enumeration, the kind of type conversion specified by the <ph id=\"ph1\">`binder`</ph> parameter, the overload, and the &lt;xref:System.Reflection.ParameterInfo?displayProperty=fullName&gt; that describes the signature of the method.","pos":[0,328],"source":"The return value is a match based on the method name, the <xref:System.Reflection.BindingFlags?displayProperty=fullName> enumeration, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo?displayProperty=fullName> that describes the signature of the method."},{"content":"This member is an explicit interface member implementation.","pos":[335,394]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[395,536],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]},{"pos":[91008,91039],"content":"The name of the member to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to find.","pos":[0,31]}]},{"pos":[91124,91174],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[91248,91366],"content":"An object that implements <bpt id=\"p1\">&lt;xref href=\"System.Reflection.Binder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, containing properties related to this method.","needQuote":true,"needEscape":true,"source":"An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method."},{"pos":[91428,91477],"content":"An array used to choose among overloaded methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array used to choose among overloaded methods.","pos":[0,49]}]},{"pos":[91567,91689],"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","pos":[0,122]}]},{"pos":[91762,91825],"content":"The requested method that matches all the specified parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The requested method that matches all the specified parameters.","pos":[0,63]}]},{"pos":[92056,92114],"content":"The object implements multiple methods with the same name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object implements multiple methods with the same name.","pos":[0,58]}]},{"pos":[92757,93027],"content":"Gets an array of &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; objects with all public methods or all methods of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; objects with all public methods or all methods of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;.","pos":[0,270],"nodes":[{"content":"Gets an array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects with all public methods or all methods of the current class.","pos":[0,152],"source":"Gets an array of &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; objects with all public methods or all methods of the current class."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[153,270],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;."}]}]},{"pos":[93039,93240],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[93461,93511],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[93586,93856],"content":"An array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.MethodInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_bindingAttr\" name=\"bindingAttr\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An array of &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; objects containing all the methods defined for this reflection object that meet the search constraints specified in <xref uid=\"langword_csharp_bindingAttr\" name=\"bindingAttr\" href=\"\"></xref>."},{"pos":[94620,94916],"content":"Gets an array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects corresponding to all public properties or to all properties of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects corresponding to all public properties or to all properties of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;.","pos":[0,296],"nodes":[{"content":"Gets an array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects corresponding to all public properties or to all properties of the current class.","pos":[0,175],"source":"Gets an array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects corresponding to all public properties or to all properties of the current class."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[176,296],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;."}]}]},{"pos":[94928,95129],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[95355,95404],"content":"The binding attribute used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attribute used to control the search.","pos":[0,49]}]},{"pos":[95481,95626],"content":"An array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects for all the properties defined on the reflection object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> objects for all the properties defined on the reflection object.","pos":[0,145],"source":"An array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects for all the properties defined on the reflection object."}]},{"pos":[96432,96707],"content":"Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property under specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property under specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;.","pos":[0,275],"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object corresponding to a specified property under specified search constraints.","pos":[0,156],"source":"Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property under specified search constraints."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[157,275],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;."}]}]},{"pos":[96719,96920],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[97131,97164],"content":"The name of the property to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the property to find.","pos":[0,33]}]},{"pos":[97249,97299],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[97374,97646],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object for the located property that meets the search constraints specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">bindingAttr</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the property was not located.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object for the located property that meets the search constraints specified in <code>bindingAttr</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the property was not located."},{"pos":[97879,97937],"content":"The object implements multiple methods with the same name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object implements multiple methods with the same name.","pos":[0,58]}]},{"pos":[98929,99203],"content":"Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property with specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property with specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;.","pos":[0,274],"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object corresponding to a specified property with specified search constraints.","pos":[0,155],"source":"Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property with specified search constraints."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[156,274],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;."}]}]},{"pos":[99215,99416],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[99740,99771],"content":"The name of the member to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to find.","pos":[0,31]}]},{"pos":[99856,99906],"content":"The binding attributes used to control the search.","needQuote":true,"needEscape":true,"nodes":[{"content":"The binding attributes used to control the search.","pos":[0,50]}]},{"pos":[99980,100059],"content":"An object that implements Binder, containing properties related to this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that implements Binder, containing properties related to this method.","pos":[0,79]}]},{"pos":[100124,100173],"content":"An array used to choose among overloaded methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array used to choose among overloaded methods.","pos":[0,49]}]},{"pos":[100235,100357],"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","pos":[0,122]}]},{"pos":[100447,100495],"content":"An array used to choose the parameter modifiers.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array used to choose the parameter modifiers.","pos":[0,48]}]},{"pos":[100570,100847],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.PropertyInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the property was not located.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object for the located property, if a property with the specified name was located in this reflection object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the property was not located."},{"pos":[102132,102279],"content":"Invokes a specified member. For a description of this member, see &lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes a specified member. For a description of this member, see &lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;.","pos":[0,147],"nodes":[{"content":"Invokes a specified member.","pos":[0,27]},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[28,147],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;."}]}]},{"pos":[102292,103068],"content":"The `invokeAttr` parameter may be a constructor, method, property, or field. A suitable invocation attribute must be specified. Invoke the default member of a class by passing the empty string (\"\") as the name of the member.       The `modifiers` parameter has the same length as the `args` parameter, representing the invoked member's argument attributes in the metadata. A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault. These represent [In], [Out], [retval], [optional], and a default parameter, respectively.       This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`invokeAttr`</ph> parameter may be a constructor, method, property, or field.","pos":[0,76],"source":"The `invokeAttr` parameter may be a constructor, method, property, or field."},{"content":"A suitable invocation attribute must be specified.","pos":[77,127]},{"content":"Invoke the default member of a class by passing the empty string (\"\") as the name of the member.","pos":[128,224]},{"content":"The <ph id=\"ph1\">`modifiers`</ph> parameter has the same length as the <ph id=\"ph2\">`args`</ph> parameter, representing the invoked member's argument attributes in the metadata.","pos":[231,372],"source":"       The `modifiers` parameter has the same length as the `args` parameter, representing the invoked member's argument attributes in the metadata."},{"content":"A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault.","pos":[373,472]},{"content":"These represent [In], [Out], [retval], [optional], and a default parameter, respectively.","pos":[473,562]},{"content":"This member is an explicit interface member implementation.","pos":[569,628]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[629,770],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]},{"pos":[103436,103467],"content":"The name of the member to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the member to find.","pos":[0,31]}]},{"pos":[103551,103636],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> invocation attributes.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> invocation attributes."},{"pos":[103710,103848],"content":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags. Implements Binder, containing properties related to this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.BindingFlags\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> bit flags.","pos":[0,73],"source":"One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags."},{"content":"Implements Binder, containing properties related to this method.","pos":[74,138]}]},{"pos":[103911,104008],"content":"The object on which to invoke the specified member. This parameter is ignored for static members.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object on which to invoke the specified member. This parameter is ignored for static members.","pos":[0,97],"nodes":[{"content":"The object on which to invoke the specified member.","pos":[0,51]},{"content":"This parameter is ignored for static members.","pos":[52,97]}]}]},{"pos":[104071,104230],"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.","pos":[0,159],"nodes":[{"content":"An array of objects that contains the number, order, and type of the parameters of the member to be invoked.","pos":[0,108]},{"content":"This is an empty array if there are no parameters.","pos":[109,159]}]}]},{"pos":[104320,104397],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.Reflection.ParameterModifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects."},{"pos":[104480,104603],"content":"An instance of &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; used to govern the coercion of types.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of <ph id=\"ph1\">&amp;lt;</ph>xref:System.Globalization.CultureInfo?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> used to govern the coercion of types.","pos":[0,123],"source":"An instance of &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; used to govern the coercion of types."}]},{"pos":[104677,104706],"content":"A String array of parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"A String array of parameters.","pos":[0,29]}]},{"pos":[104764,104785],"content":"The specified member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified member.","pos":[0,21]}]},{"pos":[104985,105047],"content":"More than one argument is specified for a field set operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"More than one argument is specified for a field set operation.","pos":[0,62]}]},{"pos":[105150,105188],"content":"The field or property cannot be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The field or property cannot be found.","pos":[0,38]}]},{"pos":[105293,105320],"content":"The method cannot be found.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method cannot be found.","pos":[0,27]}]},{"pos":[105433,105553],"content":"A private member is invoked without the necessary <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.ReflectionPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A private member is invoked without the necessary <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref>."},{"pos":[106142,106370],"content":"Gets the underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object. For a description of this member, see &lt;xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the underlying type that represents the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,100],"source":"Gets the underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object."},{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[101,228],"source":" For a description of this member, see &lt;xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName&gt;."}]},{"pos":[106382,106583],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.","pos":[0,201],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Windows.Forms.AccessibleObject&gt; instance is cast to an &lt;xref:System.Reflection.IReflect&gt; interface.","pos":[60,201],"source":" It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface."}]}]},{"pos":[106724,106819],"content":"The underlying type that represents the <bpt id=\"p1\">&lt;xref href=\"System.Reflection.IReflect\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object."},{"pos":[107442,107579],"content":"Associates an object with an instance of an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> based on the handle of the object.","needQuote":true,"needEscape":true,"source":"Associates an object with an instance of an <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> based on the handle of the object."},{"pos":[107592,108378],"content":"Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods. This function is similar to `CreateStdAccessibleProxy`, except that `CreateStdAccessibleProxy` enables you to specify the class name as a parameter, whereas `CreateStdAccessibleObject` uses the class name associated with the `hwnd`.       Calling this version of the `UseStdAccessible` is the same as calling the two parameter version with an objid of CLIENT.","needQuote":false,"needEscape":true,"nodes":[{"content":"Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.","pos":[0,124]},{"content":"Server applications call <ph id=\"ph1\">`CreateStdAccessibleObject`</ph> and override the &lt;xref:Accessibility.IAccessible&gt; methods and properties as needed to match their custom object.","pos":[125,290],"source":" Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object."},{"content":"This approach saves server developers the work of fully implementing all the &lt;xref:Accessibility.IAccessible&gt; properties and methods.","pos":[291,424],"source":" This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods."},{"content":"This function is similar to <ph id=\"ph1\">`CreateStdAccessibleProxy`</ph>, except that <ph id=\"ph2\">`CreateStdAccessibleProxy`</ph> enables you to specify the class name as a parameter, whereas <ph id=\"ph3\">`CreateStdAccessibleObject`</ph> uses the class name associated with the <ph id=\"ph4\">`hwnd`</ph>.","pos":[425,657],"source":" This function is similar to `CreateStdAccessibleProxy`, except that `CreateStdAccessibleProxy` enables you to specify the class name as a parameter, whereas `CreateStdAccessibleObject` uses the class name associated with the `hwnd`."},{"content":"Calling this version of the <ph id=\"ph1\">`UseStdAccessible`</ph> is the same as calling the two parameter version with an objid of CLIENT.","pos":[664,784],"source":"       Calling this version of the `UseStdAccessible` is the same as calling the two parameter version with an objid of CLIENT."}]},{"pos":[108537,108600],"content":"An <xref:System.IntPtr> that contains the handle of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; that contains the handle of the object.","pos":[0,63],"source":"An <xref:System.IntPtr> that contains the handle of the object."}]},{"pos":[109243,109398],"content":"Associates an object with an instance of an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.AccessibleObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> based on the handle and the object id of the object.","needQuote":true,"needEscape":true,"source":"Associates an object with an instance of an <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> based on the handle and the object id of the object."},{"pos":[109411,111309],"content":"Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.       Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.       Valid `objid` values.      |Object|Value|Description|   |------------|-----------|-----------------|   |ALERT|0xFFFFFFF6|Refers to a message associated with a window or application.|   |CARET|0xFFFFFFF8|Refers to the text insertion bar (caret) in the window.|   |CLIENT|0xFFFFFFFC|Refers to the window's client area. In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.|   |CURSOR|0xFFFFFFF7|Refers to the mouse pointer. There is only one mouse pointer in the system and it is not a child of a window.|   |HSCROLL|0xFFFFFFFA|Refers to the window's horizontal scroll bar.|   |MENU|0xFFFFFFFD|Refers to the window's menu bar.|   |SIZEGRIP|0xFFFFFFF9|Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.|   |SOUND|0xFFFFFFF5|Refers to a sound object. Sound objects do not have screen locations or children, but do have name and state attributes. They are children of the application playing the sound.|   |SYSMENU|0xFFFFFFFF|Refers to the window's system menu.|   |TITLEBAR|0xFFFFFFFE|Refers to the window's title bar.|   |VSCROLL|0xFFFFFFFB|Refers to the window's vertical scroll bar.|   |WINDOW|0x00000000|Refers to the window itself rather than to a child object.|","needQuote":false,"needEscape":true,"nodes":[{"content":"Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.","pos":[0,126]},{"content":"Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.","pos":[133,257]},{"content":"Server applications call <ph id=\"ph1\">`CreateStdAccessibleObject`</ph> and override the &lt;xref:Accessibility.IAccessible&gt; methods and properties as needed to match their custom object.","pos":[258,423],"source":" Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object."},{"content":"This approach saves server developers the work of fully implementing all the &lt;xref:Accessibility.IAccessible&gt; properties and methods.","pos":[424,557],"source":" This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods."},{"content":"Valid <ph id=\"ph1\">`objid`</ph> values.","pos":[564,585],"source":"       Valid `objid` values."},{"content":"|Object|Value|Description|   |------------|-----------|-----------------|   |ALERT|0xFFFFFFF6|Refers to a message associated with a window or application.|   |CARET|0xFFFFFFF8|Refers to the text insertion bar (caret) in the window.|   |CLIENT|0xFFFFFFFC|Refers to the window's client area.","pos":[591,880]},{"content":"In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.|   |CURSOR|0xFFFFFFF7|Refers to the mouse pointer.","pos":[881,1071]},{"content":"There is only one mouse pointer in the system and it is not a child of a window.|   |HSCROLL|0xFFFFFFFA|Refers to the window's horizontal scroll bar.|   |MENU|0xFFFFFFFD|Refers to the window's menu bar.|   |SIZEGRIP|0xFFFFFFF9|Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.|   |SOUND|0xFFFFFFF5|Refers to a sound object.","pos":[1072,1462]},{"content":"Sound objects do not have screen locations or children, but do have name and state attributes.","pos":[1463,1557]},{"content":"They are children of the application playing the sound.|   |SYSMENU|0xFFFFFFFF|Refers to the window's system menu.|   |TITLEBAR|0xFFFFFFFE|Refers to the window's title bar.|   |VSCROLL|0xFFFFFFFB|Refers to the window's vertical scroll bar.|   |WINDOW|0x00000000|Refers to the window itself rather than to a child object.|","pos":[1558,1879]}]},{"pos":[111479,111542],"content":"An <xref:System.IntPtr> that contains the handle of the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.IntPtr&gt; that contains the handle of the object.","pos":[0,63],"source":"An <xref:System.IntPtr> that contains the handle of the object."}]},{"pos":[111603,111680],"content":"An Int that defines the type of object that the <ph id=\"ph1\">`handle`</ph> parameter refers to.","needQuote":true,"needEscape":true,"source":"An Int that defines the type of object that the `handle` parameter refers to."},{"pos":[112137,112184],"content":"Gets or sets the value of an accessible object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the value of an accessible object.","pos":[0,47]}]},{"pos":[112197,113099],"content":"Typically, the Value property represents visual information contained by the object. Not all objects support the Value property.       In most cases, the Value property is used to tell the client about what visual information an object contains. For example, the value for an edit control is the text it contains, but a menu item has no value.       The Value property can provide hierarchical information in cases such as a tree view control. Although the parent object in the tree view control does not provide information in the Value property, each item within the control has a zero-based value that represents its level within the hierarchy. Top-level items have a value of zero, second-level items have a value of one, and so on.      > [!NOTE] >  The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.","needQuote":false,"needEscape":true,"nodes":[{"content":"Typically, the Value property represents visual information contained by the object.","pos":[0,84]},{"content":"Not all objects support the Value property.","pos":[85,128]},{"content":"In most cases, the Value property is used to tell the client about what visual information an object contains.","pos":[135,245]},{"content":"For example, the value for an edit control is the text it contains, but a menu item has no value.","pos":[246,343]},{"content":"The Value property can provide hierarchical information in cases such as a tree view control.","pos":[350,443]},{"content":"Although the parent object in the tree view control does not provide information in the Value property, each item within the control has a zero-based value that represents its level within the hierarchy.","pos":[444,647]},{"content":"Top-level items have a value of zero, second-level items have a value of one, and so on.","pos":[648,736]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.","pos":[742,895],"source":"      > [!NOTE] >  The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive."}]},{"pos":[113223,113353],"content":"The value of an accessible object, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object has no value set.","needQuote":true,"needEscape":true,"source":"The value of an accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object has no value set."},{"pos":[113557,113594],"content":"The value cannot be set or retrieved.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value cannot be set or retrieved.","pos":[0,37]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.AccessibleObject\n  id: AccessibleObject\n  children:\n  - System.Windows.Forms.AccessibleObject.#ctor\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)\n  - System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)\n  - System.Windows.Forms.AccessibleObject.Bounds\n  - System.Windows.Forms.AccessibleObject.DefaultAction\n  - System.Windows.Forms.AccessibleObject.Description\n  - System.Windows.Forms.AccessibleObject.DoDefaultAction\n  - System.Windows.Forms.AccessibleObject.GetChild(System.Int32)\n  - System.Windows.Forms.AccessibleObject.GetChildCount\n  - System.Windows.Forms.AccessibleObject.GetFocused\n  - System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)\n  - System.Windows.Forms.AccessibleObject.GetSelected\n  - System.Windows.Forms.AccessibleObject.Help\n  - System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)\n  - System.Windows.Forms.AccessibleObject.KeyboardShortcut\n  - System.Windows.Forms.AccessibleObject.Name\n  - System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)\n  - System.Windows.Forms.AccessibleObject.Parent\n  - System.Windows.Forms.AccessibleObject.Role\n  - System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)\n  - System.Windows.Forms.AccessibleObject.State\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType\n  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)\n  - System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)\n  - System.Windows.Forms.AccessibleObject.Value\n  langs:\n  - csharp\n  name: AccessibleObject\n  nameWithType: AccessibleObject\n  fullName: System.Windows.Forms.AccessibleObject\n  type: Class\n  summary: Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.\n  remarks: \"Accessibility applications can adjust features of the application to improve usability for users with disabilities.  \\n  \\n For users who are visually impaired, you can adjust software and operating system features to comply with their needs. For example, you can enlarge text and images and render them with a contrast. In addition, you can accommodate color-blindness with the appropriate use of colors. For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.  \\n  \\n For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text. For example, when turned on, the `SoundSentry` feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.  \\n  \\n For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility. Control Panel offers assistance. For example, one alternative is to use the numeric keypad instead of the mouse for navigation. Another option, called `StickyKeys`, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.  \\n  \\n For users with cognitive and language disabilities, you can design software programs to better accommodate their needs. For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.  \\n  \\n For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.  \\n  \\n For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.  \\n  \\n> [!NOTE]\\n>  To use the AccessibleObject, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. Windows Forms only supports Active Accessibility 2.0.\"\n  example:\n  - \"The following code example demonstrates the creation of an accessibility-aware chart control, using the AccessibleObject and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Because the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/visualbasic/t-system.windows.forms.a_7_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/csharp/t-system.windows.forms.a_7_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/add/codesnippet/cpp/t-system.windows.forms.a_7_1.cpp)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Runtime.InteropServices.StandardOleMarshalObject\n  implements:\n  - Accessibility.IAccessible\n  - System.Reflection.IReflect\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: AccessibleObject()\n  nameWithType: AccessibleObject.AccessibleObject()\n  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> class.\n  remarks: Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.\n  syntax:\n    content: public AccessibleObject ();\n    parameters: []\n  overload: System.Windows.Forms.AccessibleObject.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount\n  id: Accessibility#IAccessible#accChildCount\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accChildCount\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the number of child interfaces that belong to this object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accChildCount%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\n  syntax:\n    content: int Accessibility.IAccessible.accChildCount { get; }\n    return:\n      type: System.Int32\n      description: The number of child accessible objects that belong to this object. If the object has no child objects, this value is 0.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)\n  id: Accessibility#IAccessible#accDoDefaultAction(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accDoDefaultAction(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Performs the specified object's default action. Not all objects have a default action. For a description of this member, see &lt;xref:Accessibility.IAccessible.accDoDefaultAction%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\n  syntax:\n    content: void IAccessible.accDoDefaultAction (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: The child ID in the <xref href=\"Accessibility.IAccessible\"></xref> interface/child ID pair that represents the accessible object.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus\n  id: Accessibility#IAccessible#accFocus\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accFocus\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the object that has the keyboard focus. For a description of this member, see &lt;xref:Accessibility.IAccessible.accFocus%2A?displayProperty=fullName&gt;.\n  remarks: \"The return value type of the IAccessible.accFocus property depends on the object that has keyboard focus. The following table describes the object types that the IAccessible.accFocus property returns.  \\n  \\n|Type|Description|  \\n|----------|-----------------|  \\n|`null`|This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.|  \\n|integer|0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.|  \\n|<xref:Accessibility.IAccessible>|The child accessible object that has the keyboard focus.|  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\"\n  syntax:\n    content: object Accessibility.IAccessible.accFocus { get; }\n    return:\n      type: System.Object\n      description: The object that has keyboard focus.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)\n  id: Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accHitTest(Int32,Int32)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the child object at the specified screen coordinates. For a description of this member, see &lt;xref:Accessibility.IAccessible.accHitTest%2A?displayProperty=fullName&gt;.\n  remarks: \"The following table describes the object types that the IAccessible.accHitTest method can return.  \\n  \\n|Type|Description|  \\n|----------|-----------------|  \\n|<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|  \\n|integer|0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.|  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\"\n  syntax:\n    content: object IAccessible.accHitTest (int xLeft, int yTop);\n    parameters:\n    - id: xLeft\n      type: System.Int32\n      description: The horizontal coordinate.\n    - id: yTop\n      type: System.Int32\n      description: The vertical coordinate.\n    return:\n      type: System.Object\n      description: The accessible object at the point specified by <code>xLeft</code> and <code>yTop</code>.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)\n  id: Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the object's current screen location. For a description of this member, see &lt;xref:Accessibility.IAccessible.accLocation%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\n  syntax:\n    content: void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);\n    parameters:\n    - id: pxLeft\n      type: System.Int32\n      description: When this method returns, contains the x-coordinate of the object’s left edge. This parameter is passed uninitialized.\n    - id: pyTop\n      type: System.Int32\n      description: When this method returns, contains the y-coordinate of the object’s top edge. This parameter is passed uninitialized.\n    - id: pcxWidth\n      type: System.Int32\n      description: When this method returns, contains the width of the object. This parameter is passed uninitialized.\n    - id: pcyHeight\n      type: System.Int32\n      description: When this method returns, contains the height of the object. This parameter is passed uninitialized.\n    - id: childID\n      type: System.Object\n      description: The ID number of the accessible object. This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)\n  id: Accessibility#IAccessible#accNavigate(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accNavigate(Int32,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Navigates to an accessible object relative to the current object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accNavigate%2A?displayProperty=fullName&gt;.\n  remarks: \"The following table describes the object types that the IAccessible.accNavigate method can return.  \\n  \\n|Type|Description|  \\n|----------|-----------------|  \\n|`null`|There is not an accessible object at the specified direction.|  \\n|<xref:Accessibility.IAccessible>|The accessible object at the specified direction.|  \\n|integer|The child ID that identifies the accessible object at the specified direction. Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.|  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\"\n  syntax:\n    content: object IAccessible.accNavigate (int navDir, object childID);\n    parameters:\n    - id: navDir\n      type: System.Int32\n      description: One of the <xref href=\"System.Windows.Forms.AccessibleNavigation\"></xref> enumerations that specifies the direction to navigate.\n    - id: childID\n      type: System.Object\n      description: The ID number of the accessible object. This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.\n    return:\n      type: System.Object\n      description: The accessible object positioned at the value specified by <code>navDir</code>.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent\n  id: Accessibility#IAccessible#accParent\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accParent\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the parent accessible object of this object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accParent%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface..\n  syntax:\n    content: object Accessibility.IAccessible.accParent { get; }\n    return:\n      type: System.Object\n      description: An <xref href=\"Accessibility.IAccessible\"></xref> that represents the parent of the accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent object.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)\n  id: Accessibility#IAccessible#accSelect(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accSelect(Int32,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Modifies the selection or moves the keyboard focus of the accessible object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelect%2A?displayProperty=fullName&gt;.\n  remarks: \"The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling `Select` to perform complex selection operations.  \\n  \\n|Operation|Flag Combination|  \\n|---------------|----------------------|  \\n|To simulate a click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  \\n|To select a target item by simulating CTRL+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  \\n|To cancel selection of a target item by simulating CTRL+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  \\n|To simulate SHIFT+click|<xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection>|  \\n|To select a range of objects and put focus on the last object|Specify <xref:System.Windows.Forms.AccessibleSelection> on the starting object to set the selection anchor. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection> OR <xref:System.Windows.Forms.AccessibleSelection> on the last object.|  \\n|To deselect all objects|Specify <xref:System.Windows.Forms.AccessibleSelection> on any object. This flag deselects all selected objects except the one just selected. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection> on the same object.|  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\"\n  syntax:\n    content: void IAccessible.accSelect (int flagsSelect, object childID);\n    parameters:\n    - id: flagsSelect\n      type: System.Int32\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.AccessibleSelection\"></xref> values.\n    - id: childID\n      type: System.Object\n      description: The ID number of the accessible object on which to perform the selection. This parameter is 0 to select the object, or a child ID to select one of the object's child objects.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection\n  id: Accessibility#IAccessible#accSelection\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.accSelection\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the selected child objects of an accessible object. For a description of this member, see &lt;xref:Accessibility.IAccessible.accSelection%2A?displayProperty=fullName&gt;.\n  remarks: \"The following table describes the object types that the IAccessible.accSelection property returns  \\n  \\n|Type|Description|  \\n|----------|-----------------|  \\n|`null`|No child objects are selected.|  \\n|<xref:Accessibility.IAccessible>|The child accessible object that is selected.|  \\n|integer|The child ID that identifies the accessible object that is selected. Use the parent <xref:Accessibility.IAccessible> and the child ID to access the accessible object.|  \\n|`IEnumVARIANT`|A list of child objects that are selected.|  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:Accessibility.IAccessible> interface.\"\n  syntax:\n    content: object Accessibility.IAccessible.accSelection { get; }\n    return:\n      type: System.Object\n      description: The selected child objects of an accessible object.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)\n  id: Accessibility#IAccessible#get_accChild(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accChild(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: object IAccessible.get_accChild (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)\n  id: Accessibility#IAccessible#get_accDefaultAction(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accDefaultAction(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: string IAccessible.get_accDefaultAction (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)\n  id: Accessibility#IAccessible#get_accDescription(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accDescription(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: string IAccessible.get_accDescription (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)\n  id: Accessibility#IAccessible#get_accHelp(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accHelp(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: string IAccessible.get_accHelp (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)\n  id: Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);\n    parameters:\n    - id: pszHelpFile\n      type: System.String\n      description: To be added.\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)\n  id: Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: string IAccessible.get_accKeyboardShortcut (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)\n  id: Accessibility#IAccessible#get_accName(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accName(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: string IAccessible.get_accName (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)\n  id: Accessibility#IAccessible#get_accRole(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accRole(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: object IAccessible.get_accRole (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)\n  id: Accessibility#IAccessible#get_accState(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accState(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: object IAccessible.get_accState (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)\n  id: Accessibility#IAccessible#get_accValue(System.Object)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.get_accValue(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: string IAccessible.get_accValue (object childID);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)\n  id: Accessibility#IAccessible#set_accName(System.Object,System.String)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.set_accName(Object,String)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: void IAccessible.set_accName (object childID, string newName);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    - id: newName\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)\n  id: Accessibility#IAccessible#set_accValue(System.Object,System.String)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Accessibility.IAccessible.set_accValue(Object,String)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  syntax:\n    content: void IAccessible.set_accValue (object childID, string newValue);\n    parameters:\n    - id: childID\n      type: System.Object\n      description: To be added.\n    - id: newValue\n      type: System.String\n      description: To be added.\n  overload: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Bounds\n  id: Bounds\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Bounds\n  nameWithType: AccessibleObject.Bounds\n  fullName: System.Windows.Forms.AccessibleObject.Bounds\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the location and size of the accessible object.\n  remarks: The Bounds property retrieves the object's bounding rectangle in screen coordinates. If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region. Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> method, because <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> determines the object's boundaries on a pixel-by-pixel basis.\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the Bounds property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_14_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_14_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_14_1.cpp)]\"\n  syntax:\n    content: public virtual System.Drawing.Rectangle Bounds { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the accessible object.\n  overload: System.Windows.Forms.AccessibleObject.Bounds*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The bounds of control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.DefaultAction\n  id: DefaultAction\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: DefaultAction\n  nameWithType: AccessibleObject.DefaultAction\n  fullName: System.Windows.Forms.AccessibleObject.DefaultAction\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a string that describes the default action of the object. Not all objects have a default action.\n  remarks: The string describes the action that is performed on an object, not what the object does as a result. That is, a toolbar button that prints a document has a default action of \"Press\" rather than \"Prints the current document.\" Do not confuse an object's default action with its value.\n  syntax:\n    content: public virtual string DefaultAction { get; }\n    return:\n      type: System.String\n      description: A description of the default action for an object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this object has no default action.\n  overload: System.Windows.Forms.AccessibleObject.DefaultAction*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The default action for the control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Description\n  id: Description\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Description\n  nameWithType: AccessibleObject.Description\n  fullName: System.Windows.Forms.AccessibleObject.Description\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a string that describes the visual appearance of the specified object. Not all objects have a description.\n  remarks: This property describes the object's visual appearance to the user.\n  syntax:\n    content: public virtual string Description { get; }\n    return:\n      type: System.String\n      description: A description of the object's visual appearance to the user, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object does not have a description.\n  overload: System.Windows.Forms.AccessibleObject.Description*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The description for the control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction\n  id: DoDefaultAction\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: DoDefaultAction()\n  nameWithType: AccessibleObject.DoDefaultAction()\n  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Performs the default action associated with this accessible object.\n  remarks: Clients can retrieve the object's default action by inspecting an object's <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> property. A client can use automation (if supported) instead of DoDefaultAction to perform an object's default action. However, DoDefaultAction provides an easy way to perform an object's most commonly used action.\n  syntax:\n    content: public virtual void DoDefaultAction ();\n    parameters: []\n  overload: System.Windows.Forms.AccessibleObject.DoDefaultAction*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The default action for the control cannot be performed.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)\n  id: GetChild(System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: GetChild(Int32)\n  nameWithType: AccessibleObject.GetChild(Int32)\n  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the accessible child corresponding to the specified index.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the GetChild method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the GetChild method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_1_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_1_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_1_1.cpp)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleObject GetChild (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the accessible child.\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the accessible child corresponding to the specified index.\n  overload: System.Windows.Forms.AccessibleObject.GetChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.GetChildCount\n  id: GetChildCount\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: GetChildCount()\n  nameWithType: AccessibleObject.GetChildCount()\n  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the number of children belonging to an accessible object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code demonstrates shows overriding the GetChildCount method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/m-system.windows.forms.a_7_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/m-system.windows.forms.a_7_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/m-system.windows.forms.a_7_1.cpp)]\"\n  syntax:\n    content: public virtual int GetChildCount ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of children belonging to an accessible object.\n  overload: System.Windows.Forms.AccessibleObject.GetChildCount*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.GetFocused\n  id: GetFocused\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: GetFocused()\n  nameWithType: AccessibleObject.GetFocused()\n  fullName: System.Windows.Forms.AccessibleObject.GetFocused()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the object that has the keyboard focus.\n  remarks: \"The concept of keyboard focus is related to that of an active window. An active window is the foreground window in which the user is working. The object with the keyboard focus is either the active window or a child object of the active window.  \\n  \\n Only one object or item within a container can have the focus at any one time. The object with the keyboard focus is not necessarily the selected object.\"\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleObject GetFocused ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object has focus.\n  overload: System.Windows.Forms.AccessibleObject.GetFocused*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)\n  id: GetHelpTopic(System.String@)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: GetHelpTopic(String)\n  nameWithType: AccessibleObject.GetHelpTopic(String)\n  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.\n  remarks: To display help for the <xref:System.Windows.Forms.AccessibleObject> using the Windows Help system, you can pass the file name and topic ID to the appropriate <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName> method of <xref:System.Windows.Forms.Help>.\n  syntax:\n    content: public virtual int GetHelpTopic (out string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: On return, this property contains the path to the Help file associated with this accessible object.\n    return:\n      type: System.Int32\n      description: An identifier for a Help topic, or -1 if there is no Help topic. On return, the <code>fileName</code> parameter contains the path to the Help file associated with this accessible object.\n  overload: System.Windows.Forms.AccessibleObject.GetHelpTopic*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The Help topic for the control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.GetSelected\n  id: GetSelected\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: GetSelected()\n  nameWithType: AccessibleObject.GetSelected()\n  fullName: System.Windows.Forms.AccessibleObject.GetSelected()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the currently selected child.\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleObject GetSelected ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if is no child is currently selected and the object itself does not have focus.\n  overload: System.Windows.Forms.AccessibleObject.GetSelected*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The selected child cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Help\n  id: Help\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Help\n  nameWithType: AccessibleObject.Help\n  fullName: System.Windows.Forms.AccessibleObject.Help\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a description of what the object does or how the object is used.\n  syntax:\n    content: public virtual string Help { get; }\n    return:\n      type: System.String\n      description: A <xref:System.String> that contains the description of what the object does or how the object is used. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no help is defined.\n  overload: System.Windows.Forms.AccessibleObject.Help*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The help string for the control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)\n  id: HitTest(System.Int32,System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: HitTest(Int32,Int32)\n  nameWithType: AccessibleObject.HitTest(Int32,Int32)\n  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the child object at the specified screen coordinates.\n  remarks: For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> can fail if tested with HitTest, because HitTest determines the object's boundaries on a pixel-by-pixel basis.\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The horizontal screen coordinate.\n    - id: y\n      type: System.Int32\n      description: The vertical screen coordinate.\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object is at the tested location.\n  overload: System.Windows.Forms.AccessibleObject.HitTest*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The control cannot be hit tested.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut\n  id: KeyboardShortcut\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: KeyboardShortcut\n  nameWithType: AccessibleObject.KeyboardShortcut\n  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the shortcut key or access key for the accessible object.\n  remarks: An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control. For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the `File` menu. To use the access key of a menu item, the menu containing the item must be active. Controls such as toolbar buttons and menu items often have an associated shortcut key. A menu item can have both an access key and a shortcut key associated with it. If the value of the KeyboardShortcut property is a single character, you can assume it is an access key.\n  syntax:\n    content: public virtual string KeyboardShortcut { get; }\n    return:\n      type: System.String\n      description: The shortcut key or access key for the accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no shortcut key associated with the object.\n  overload: System.Windows.Forms.AccessibleObject.KeyboardShortcut*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The shortcut for the control cannot be retrieved.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Name\n  id: Name\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Name\n  nameWithType: AccessibleObject.Name\n  fullName: System.Windows.Forms.AccessibleObject.Name\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the object name.\n  remarks: The Name property is a string used by clients to identify, find, or announce an object for the user. To access the name of a child object, you must first call <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> with the index of the child whose name you are retrieving.\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the Name property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_7_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_7_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_7_1.cpp)]\"\n  syntax:\n    content: public virtual string Name { get; set; }\n    return:\n      type: System.String\n      description: The object name, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the property has not been set.\n  overload: System.Windows.Forms.AccessibleObject.Name*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The name of the control cannot be retrieved or set.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)\n  id: Navigate(System.Windows.Forms.AccessibleNavigation)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Navigate(AccessibleNavigation)\n  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)\n  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Navigates to another accessible object.\n  remarks: Navigation, both spatial and logical, is always restricted to the user interface elements within a container. With spatial navigation, clients can navigate only to a sibling of the starting object. Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object. This method does not change the selection or focus. To change the focus or to select an object, use <xref:System.Windows.Forms.AccessibleObject.Select%2A>. The Navigate method retrieves only user interface elements that have a defined screen location.\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code demonstrates shows overriding the Navigate method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/b72d660b-5a96-4d26-9d1d-_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/b72d660b-5a96-4d26-9d1d-_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/b72d660b-5a96-4d26-9d1d-_1.cpp)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);\n    parameters:\n    - id: navdir\n      type: System.Windows.Forms.AccessibleNavigation\n      description: One of the <xref href=\"System.Windows.Forms.AccessibleNavigation\"></xref> values.\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents one of the <xref href=\"System.Windows.Forms.AccessibleNavigation\"></xref> values.\n  overload: System.Windows.Forms.AccessibleObject.Navigate*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The navigation attempt fails.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Parent\n  id: Parent\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: AccessibleObject.Parent\n  fullName: System.Windows.Forms.AccessibleObject.Parent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the parent of an accessible object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the Parent property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/p-system.windows.forms.a_9_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/p-system.windows.forms.a_9_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/p-system.windows.forms.a_9_1.cpp)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleObject Parent { get; }\n    return:\n      type: System.Windows.Forms.AccessibleObject\n      description: An <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> that represents the parent of an accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no parent object.\n  overload: System.Windows.Forms.AccessibleObject.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Role\n  id: Role\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Role\n  nameWithType: AccessibleObject.Role\n  fullName: System.Windows.Forms.AccessibleObject.Role\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the role of this accessible object.\n  remarks: The role of the object helps describe the function of the object.\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the Role property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_13_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_13_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_13_1.cpp)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleRole Role { get; }\n    return:\n      type: System.Windows.Forms.AccessibleRole\n      description: One of the <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> values, or <xref href=\"System.Windows.Forms.AccessibleRole\"></xref> if no role has been specified.\n  overload: System.Windows.Forms.AccessibleObject.Role*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)\n  id: Select(System.Windows.Forms.AccessibleSelection)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Select(AccessibleSelection)\n  nameWithType: AccessibleObject.Select(AccessibleSelection)\n  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Modifies the selection or moves the keyboard focus of the accessible object.\n  remarks: \"Applications can use this method to perform complex selection operations.  \\n  \\n The following describes which <xref:System.Windows.Forms.AccessibleSelection> values to specify when calling Select to perform complex selection operations.  \\n  \\n|Operation|Flag Combination|  \\n|---------------|----------------------|  \\n|To simulate a click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> **Note:**  This combination will not select the desired control if called from within your own application. It will have the desired effect, however, if called from an external application.|  \\n|To select a target item by simulating CTRL + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  \\n|To cancel selection of a target item by simulating CTRL + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  \\n|To simulate SHIFT + click|<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> `OR` <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>|  \\n|To select a range of objects and put focus on the last object|Specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the starting object to set the selection anchor. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName>`OR`<xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the last object.|  \\n|To deselect all objects|Specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on any object. This flag deselects all selected objects except the one just selected. Then call Select again and specify <xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName> on the same object.|\"\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code demonstrates shows overriding the Select method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/visualbasic/f0c27e30-bd9a-4501-a7a0-_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/csharp/f0c27e30-bd9a-4501-a7a0-_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/add/codesnippet/cpp/f0c27e30-bd9a-4501-a7a0-_1.cpp)]\"\n  syntax:\n    content: public virtual void Select (System.Windows.Forms.AccessibleSelection flags);\n    parameters:\n    - id: flags\n      type: System.Windows.Forms.AccessibleSelection\n      description: One of the <xref href=\"System.Windows.Forms.AccessibleSelection\"></xref> values.\n  overload: System.Windows.Forms.AccessibleObject.Select*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The selection cannot be performed.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.State\n  id: State\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: State\n  nameWithType: AccessibleObject.State\n  fullName: System.Windows.Forms.AccessibleObject.State\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the state of this accessible object.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \\n  \\n This code excerpt demonstrates overriding the State property. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \\n  \\n [!code-vb[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/visualbasic/p-system.windows.forms.a_10_1.vb)]\\n [!code-cs[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/csharp/p-system.windows.forms.a_10_1.cs)]\\n [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/add/codesnippet/cpp/p-system.windows.forms.a_10_1.cpp)]\"\n  syntax:\n    content: public virtual System.Windows.Forms.AccessibleStates State { get; }\n    return:\n      type: System.Windows.Forms.AccessibleStates\n      description: One of the <xref href=\"System.Windows.Forms.AccessibleStates\"></xref> values, or <xref href=\"System.Windows.Forms.AccessibleStates\"></xref>, if no state has been set.\n  overload: System.Windows.Forms.AccessibleObject.State*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetField(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; object corresponding to the specified field and binding flag. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetField%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; object containing the field information for the named object that meets the search constraints specified in <code>bindingAttr</code>.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple fields with the same name.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetFields(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; objects corresponding to all fields of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetFields%2A?displayProperty=fullName&gt;.\n  remarks: \"Each field must have a unique name. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that nonpublic fields are included in the search. The <xref:System.Reflection.BindingFlags?displayProperty=fullName> flag specifies that public fields are included in the search.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\"\n  syntax:\n    content: System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: An array of &lt;xref:System.Reflection.FieldInfo?displayProperty=fullName&gt; objects containing all the field information for this reflection object that meets the search constraints specified in <code>bindingAttr</code>.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetMember(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding to all public members or to all members that match a specified name. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMember%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects matching the name parameter.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetMembers(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects corresponding either to all public members or to all members of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMembers%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: An array of &lt;xref:System.Reflection.MemberInfo?displayProperty=fullName&gt; objects containing all the member information for this reflection object.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method under specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object containing the method information, with the match being based on the method name and search constraints specified in <code>bindingAttr</code>.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple methods with the same name.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  id: System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; object corresponding to a specified method, using a Type array to choose from among overloaded methods. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethod%2A?displayProperty=fullName&gt;.\n  remarks: \"The return value is a match based on the method name, the <xref:System.Reflection.BindingFlags?displayProperty=fullName> enumeration, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo?displayProperty=fullName> that describes the signature of the method.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\"\n  syntax:\n    content: System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that implements <xref href=\"System.Reflection.Binder\"></xref>, containing properties related to this method.\n    - id: types\n      type: System.Type[]\n      description: An array used to choose among overloaded methods.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.\n    return:\n      type: System.Reflection.MethodInfo\n      description: The requested method that matches all the specified parameters.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple methods with the same name.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetMethods(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; objects with all public methods or all methods of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetMethods%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array of &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; objects containing all the methods defined for this reflection object that meet the search constraints specified in <xref uid=\"langword_csharp_bindingAttr\" name=\"bindingAttr\" href=\"\"></xref>.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetProperties(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects corresponding to all public properties or to all properties of the current class. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperties%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attribute used to control the search.\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: An array of &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; objects for all the properties defined on the reflection object.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)\n  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property under specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object for the located property that meets the search constraints specified in <code>bindingAttr</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the property was not located.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*\n  exceptions:\n  - type: System.Reflection.AmbiguousMatchException\n    commentId: T:System.Reflection.AmbiguousMatchException\n    description: The object implements multiple methods with the same name.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object corresponding to a specified property with specified search constraints. For a description of this member, see &lt;xref:System.Reflection.IReflect.GetProperty%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: The binding attributes used to control the search.\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that implements Binder, containing properties related to this method.\n    - id: returnType\n      type: System.Type\n      description: An array used to choose among overloaded methods.\n    - id: types\n      type: System.Type[]\n      description: An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array used to choose the parameter modifiers.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: A &lt;xref:System.Reflection.PropertyInfo?displayProperty=fullName&gt; object for the located property, if a property with the specified name was located in this reflection object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the property was not located.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  id: System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Invokes a specified member. For a description of this member, see &lt;xref:System.Reflection.IReflect.InvokeMember%2A?displayProperty=fullName&gt;.\n  remarks: \"The `invokeAttr` parameter may be a constructor, method, property, or field. A suitable invocation attribute must be specified. Invoke the default member of a class by passing the empty string (\\\"\\\") as the name of the member.  \\n  \\n The `modifiers` parameter has the same length as the `args` parameter, representing the invoked member's argument attributes in the metadata. A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault. These represent [In], [Out], [retval], [optional], and a default parameter, respectively.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\"\n  syntax:\n    content: object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the member to find.\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: One of the <xref href=\"System.Reflection.BindingFlags\"></xref> invocation attributes.\n    - id: binder\n      type: System.Reflection.Binder\n      description: One of the <xref href=\"System.Reflection.BindingFlags\"></xref> bit flags. Implements Binder, containing properties related to this method.\n    - id: target\n      type: System.Object\n      description: The object on which to invoke the specified member. This parameter is ignored for static members.\n    - id: args\n      type: System.Object[]\n      description: An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of <xref href=\"System.Reflection.ParameterModifier\"></xref> objects.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An instance of &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; used to govern the coercion of types.\n    - id: namedParameters\n      type: System.String[]\n      description: A String array of parameters.\n    return:\n      type: System.Object\n      description: The specified member.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: More than one argument is specified for a field set operation.\n  - type: System.MissingFieldException\n    commentId: T:System.MissingFieldException\n    description: The field or property cannot be found.\n  - type: System.MissingMethodException\n    commentId: T:System.MissingMethodException\n    description: The method cannot be found.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A private member is invoked without the necessary <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref>.\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType\n  id: System#Reflection#IReflect#UnderlyingSystemType\n  isEii: true\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: System.Reflection.IReflect.UnderlyingSystemType\n  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object. For a description of this member, see &lt;xref:System.Reflection.IReflect.UnderlyingSystemType%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.AccessibleObject> instance is cast to an <xref:System.Reflection.IReflect> interface.\n  syntax:\n    content: Type System.Reflection.IReflect.UnderlyingSystemType { get; }\n    return:\n      type: System.Type\n      description: The underlying type that represents the <xref href=\"System.Reflection.IReflect\"></xref> object.\n  overload: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)\n  id: UseStdAccessibleObjects(System.IntPtr)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: UseStdAccessibleObjects(IntPtr)\n  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)\n  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Associates an object with an instance of an <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> based on the handle of the object.\n  remarks: \"Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods. This function is similar to `CreateStdAccessibleProxy`, except that `CreateStdAccessibleProxy` enables you to specify the class name as a parameter, whereas `CreateStdAccessibleObject` uses the class name associated with the `hwnd`.  \\n  \\n Calling this version of the `UseStdAccessible` is the same as calling the two parameter version with an objid of CLIENT.\"\n  syntax:\n    content: protected void UseStdAccessibleObjects (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> that contains the handle of the object.\n  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)\n  id: UseStdAccessibleObjects(System.IntPtr,System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: UseStdAccessibleObjects(IntPtr,Int32)\n  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)\n  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Associates an object with an instance of an <xref href=\"System.Windows.Forms.AccessibleObject\"></xref> based on the handle and the object id of the object.\n  remarks: \"Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.  \\n  \\n Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call `CreateStdAccessibleObject` and override the <xref:Accessibility.IAccessible> methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the <xref:Accessibility.IAccessible> properties and methods.  \\n  \\n Valid `objid` values.  \\n  \\n|Object|Value|Description|  \\n|------------|-----------|-----------------|  \\n|ALERT|0xFFFFFFF6|Refers to a message associated with a window or application.|  \\n|CARET|0xFFFFFFF8|Refers to the text insertion bar (caret) in the window.|  \\n|CLIENT|0xFFFFFFFC|Refers to the window's client area. In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.|  \\n|CURSOR|0xFFFFFFF7|Refers to the mouse pointer. There is only one mouse pointer in the system and it is not a child of a window.|  \\n|HSCROLL|0xFFFFFFFA|Refers to the window's horizontal scroll bar.|  \\n|MENU|0xFFFFFFFD|Refers to the window's menu bar.|  \\n|SIZEGRIP|0xFFFFFFF9|Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.|  \\n|SOUND|0xFFFFFFF5|Refers to a sound object. Sound objects do not have screen locations or children, but do have name and state attributes. They are children of the application playing the sound.|  \\n|SYSMENU|0xFFFFFFFF|Refers to the window's system menu.|  \\n|TITLEBAR|0xFFFFFFFE|Refers to the window's title bar.|  \\n|VSCROLL|0xFFFFFFFB|Refers to the window's vertical scroll bar.|  \\n|WINDOW|0x00000000|Refers to the window itself rather than to a child object.|\"\n  syntax:\n    content: protected void UseStdAccessibleObjects (IntPtr handle, int objid);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: An <xref:System.IntPtr> that contains the handle of the object.\n    - id: objid\n      type: System.Int32\n      description: An Int that defines the type of object that the `handle` parameter refers to.\n  overload: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.AccessibleObject.Value\n  id: Value\n  parent: System.Windows.Forms.AccessibleObject\n  langs:\n  - csharp\n  name: Value\n  nameWithType: AccessibleObject.Value\n  fullName: System.Windows.Forms.AccessibleObject.Value\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the value of an accessible object.\n  remarks: \"Typically, the Value property represents visual information contained by the object. Not all objects support the Value property.  \\n  \\n In most cases, the Value property is used to tell the client about what visual information an object contains. For example, the value for an edit control is the text it contains, but a menu item has no value.  \\n  \\n The Value property can provide hierarchical information in cases such as a tree view control. Although the parent object in the tree view control does not provide information in the Value property, each item within the control has a zero-based value that represents its level within the hierarchy. Top-level items have a value of zero, second-level items have a value of one, and so on.  \\n  \\n> [!NOTE]\\n>  The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.\"\n  syntax:\n    content: public virtual string Value { get; set; }\n    return:\n      type: System.String\n      description: The value of an accessible object, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the object has no value set.\n  overload: System.Windows.Forms.AccessibleObject.Value*\n  exceptions:\n  - type: System.Runtime.InteropServices.COMException\n    commentId: T:System.Runtime.InteropServices.COMException\n    description: The value cannot be set or retrieved.\n  platform:\n  - net462\nreferences:\n- uid: System.Runtime.InteropServices.StandardOleMarshalObject\n  isExternal: false\n  name: System.Runtime.InteropServices.StandardOleMarshalObject\n- uid: System.Runtime.InteropServices.COMException\n  isExternal: true\n  name: System.Runtime.InteropServices.COMException\n- uid: System.Reflection.AmbiguousMatchException\n  isExternal: true\n  name: System.Reflection.AmbiguousMatchException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.MissingFieldException\n  isExternal: true\n  name: System.MissingFieldException\n- uid: System.MissingMethodException\n  isExternal: true\n  name: System.MissingMethodException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Windows.Forms.AccessibleObject.#ctor\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: AccessibleObject()\n  nameWithType: AccessibleObject.AccessibleObject()\n  fullName: System.Windows.Forms.AccessibleObject.AccessibleObject()\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accChildCount\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accChildCount\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accDoDefaultAction(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accDoDefaultAction(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accFocus\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accFocus\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accHitTest(Int32,Int32)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accHitTest(Int32,Int32)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accNavigate(Int32,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accNavigate(Int32,Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accParent\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accParent\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accSelect(Int32,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelect(Int32,Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accSelection\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.accSelection\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accChild(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accChild(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accDefaultAction(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDefaultAction(Object)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accDescription(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accDescription(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accHelp(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelp(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accHelpTopic(String,Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accHelpTopic(String,Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accKeyboardShortcut(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accName(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accName(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accRole(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accRole(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accState(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accState(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accValue(Object)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue(Object)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.get_accValue(Object)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.set_accName(Object,String)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accName(Object,String)\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.set_accValue(Object,String)\n  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)\n  fullName: System.Windows.Forms.AccessibleObject.Accessibility.IAccessible.set_accValue(Object,String)\n- uid: System.Windows.Forms.AccessibleObject.Bounds\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Bounds\n  nameWithType: AccessibleObject.Bounds\n  fullName: System.Windows.Forms.AccessibleObject.Bounds\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.AccessibleObject.DefaultAction\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: DefaultAction\n  nameWithType: AccessibleObject.DefaultAction\n  fullName: System.Windows.Forms.AccessibleObject.DefaultAction\n- uid: System.Windows.Forms.AccessibleObject.Description\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Description\n  nameWithType: AccessibleObject.Description\n  fullName: System.Windows.Forms.AccessibleObject.Description\n- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: DoDefaultAction()\n  nameWithType: AccessibleObject.DoDefaultAction()\n  fullName: System.Windows.Forms.AccessibleObject.DoDefaultAction()\n- uid: System.Windows.Forms.AccessibleObject.GetChild(System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetChild(Int32)\n  nameWithType: AccessibleObject.GetChild(Int32)\n  fullName: System.Windows.Forms.AccessibleObject.GetChild(Int32)\n- uid: System.Windows.Forms.AccessibleObject\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleObject\n  nameWithType: AccessibleObject\n  fullName: System.Windows.Forms.AccessibleObject\n- uid: System.Windows.Forms.AccessibleObject.GetChildCount\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetChildCount()\n  nameWithType: AccessibleObject.GetChildCount()\n  fullName: System.Windows.Forms.AccessibleObject.GetChildCount()\n- uid: System.Windows.Forms.AccessibleObject.GetFocused\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetFocused()\n  nameWithType: AccessibleObject.GetFocused()\n  fullName: System.Windows.Forms.AccessibleObject.GetFocused()\n- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetHelpTopic(String)\n  nameWithType: AccessibleObject.GetHelpTopic(String)\n  fullName: System.Windows.Forms.AccessibleObject.GetHelpTopic(String)\n- uid: System.Windows.Forms.AccessibleObject.GetSelected\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetSelected()\n  nameWithType: AccessibleObject.GetSelected()\n  fullName: System.Windows.Forms.AccessibleObject.GetSelected()\n- uid: System.Windows.Forms.AccessibleObject.Help\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Help\n  nameWithType: AccessibleObject.Help\n  fullName: System.Windows.Forms.AccessibleObject.Help\n- uid: System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: HitTest(Int32,Int32)\n  nameWithType: AccessibleObject.HitTest(Int32,Int32)\n  fullName: System.Windows.Forms.AccessibleObject.HitTest(Int32,Int32)\n- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: KeyboardShortcut\n  nameWithType: AccessibleObject.KeyboardShortcut\n  fullName: System.Windows.Forms.AccessibleObject.KeyboardShortcut\n- uid: System.Windows.Forms.AccessibleObject.Name\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Name\n  nameWithType: AccessibleObject.Name\n  fullName: System.Windows.Forms.AccessibleObject.Name\n- uid: System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Navigate(AccessibleNavigation)\n  nameWithType: AccessibleObject.Navigate(AccessibleNavigation)\n  fullName: System.Windows.Forms.AccessibleObject.Navigate(AccessibleNavigation)\n- uid: System.Windows.Forms.AccessibleNavigation\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleNavigation\n  nameWithType: AccessibleNavigation\n  fullName: System.Windows.Forms.AccessibleNavigation\n- uid: System.Windows.Forms.AccessibleObject.Parent\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Parent\n  nameWithType: AccessibleObject.Parent\n  fullName: System.Windows.Forms.AccessibleObject.Parent\n- uid: System.Windows.Forms.AccessibleObject.Role\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Role\n  nameWithType: AccessibleObject.Role\n  fullName: System.Windows.Forms.AccessibleObject.Role\n- uid: System.Windows.Forms.AccessibleRole\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleRole\n  nameWithType: AccessibleRole\n  fullName: System.Windows.Forms.AccessibleRole\n- uid: System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Select(AccessibleSelection)\n  nameWithType: AccessibleObject.Select(AccessibleSelection)\n  fullName: System.Windows.Forms.AccessibleObject.Select(AccessibleSelection)\n- uid: System.Windows.Forms.AccessibleSelection\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleSelection\n  nameWithType: AccessibleSelection\n  fullName: System.Windows.Forms.AccessibleSelection\n- uid: System.Windows.Forms.AccessibleObject.State\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: State\n  nameWithType: AccessibleObject.State\n  fullName: System.Windows.Forms.AccessibleObject.State\n- uid: System.Windows.Forms.AccessibleStates\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AccessibleStates\n  nameWithType: AccessibleStates\n  fullName: System.Windows.Forms.AccessibleStates\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetField(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetField(String,BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: true\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetFields(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetFields(BindingFlags)\n- uid: System.Reflection.FieldInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo[]\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: FieldInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMember(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMember(String,BindingFlags)\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: MemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMembers(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMembers(BindingFlags)\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMethod(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Type[]\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: Type[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.ParameterModifier[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    nameWithType: ParameterModifier\n    fullName: ParameterModifier[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMethods(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetMethods(BindingFlags)\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: MethodInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetProperties(BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperties(BindingFlags)\n- uid: System.Reflection.PropertyInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo[]\n  spec.csharp:\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: PropertyInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetProperty(String,BindingFlags)\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: true\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: true\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.UnderlyingSystemType\n  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType\n  fullName: System.Windows.Forms.AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType\n- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: UseStdAccessibleObjects(IntPtr)\n  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr)\n  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: UseStdAccessibleObjects(IntPtr,Int32)\n  nameWithType: AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)\n  fullName: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(IntPtr,Int32)\n- uid: System.Windows.Forms.AccessibleObject.Value\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Value\n  nameWithType: AccessibleObject.Value\n  fullName: System.Windows.Forms.AccessibleObject.Value\n- uid: System.Windows.Forms.AccessibleObject.#ctor*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: AccessibleObject\n  nameWithType: AccessibleObject.AccessibleObject\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accChildCount\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accChildCount\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accDoDefaultAction\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accDoDefaultAction\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accFocus\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accFocus\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accHitTest\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accHitTest\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accLocation\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accLocation\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accNavigate\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accNavigate\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accParent\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accParent\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accSelect\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelect\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.accSelection\n  nameWithType: AccessibleObject.Accessibility.IAccessible.accSelection\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accChild\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accChild\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accDefaultAction\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDefaultAction\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accDescription\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accDescription\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accHelp\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelp\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accHelpTopic\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accHelpTopic\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accKeyboardShortcut\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accKeyboardShortcut\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accName\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accName\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accRole\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accRole\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accState\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accState\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.get_accValue\n  nameWithType: AccessibleObject.Accessibility.IAccessible.get_accValue\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.set_accName\n  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accName\n- uid: System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Accessibility.IAccessible.set_accValue\n  nameWithType: AccessibleObject.Accessibility.IAccessible.set_accValue\n- uid: System.Windows.Forms.AccessibleObject.Bounds*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Bounds\n  nameWithType: AccessibleObject.Bounds\n- uid: System.Windows.Forms.AccessibleObject.DefaultAction*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: DefaultAction\n  nameWithType: AccessibleObject.DefaultAction\n- uid: System.Windows.Forms.AccessibleObject.Description*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Description\n  nameWithType: AccessibleObject.Description\n- uid: System.Windows.Forms.AccessibleObject.DoDefaultAction*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: DoDefaultAction\n  nameWithType: AccessibleObject.DoDefaultAction\n- uid: System.Windows.Forms.AccessibleObject.GetChild*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetChild\n  nameWithType: AccessibleObject.GetChild\n- uid: System.Windows.Forms.AccessibleObject.GetChildCount*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetChildCount\n  nameWithType: AccessibleObject.GetChildCount\n- uid: System.Windows.Forms.AccessibleObject.GetFocused*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetFocused\n  nameWithType: AccessibleObject.GetFocused\n- uid: System.Windows.Forms.AccessibleObject.GetHelpTopic*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetHelpTopic\n  nameWithType: AccessibleObject.GetHelpTopic\n- uid: System.Windows.Forms.AccessibleObject.GetSelected*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: GetSelected\n  nameWithType: AccessibleObject.GetSelected\n- uid: System.Windows.Forms.AccessibleObject.Help*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Help\n  nameWithType: AccessibleObject.Help\n- uid: System.Windows.Forms.AccessibleObject.HitTest*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: HitTest\n  nameWithType: AccessibleObject.HitTest\n- uid: System.Windows.Forms.AccessibleObject.KeyboardShortcut*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: KeyboardShortcut\n  nameWithType: AccessibleObject.KeyboardShortcut\n- uid: System.Windows.Forms.AccessibleObject.Name*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Name\n  nameWithType: AccessibleObject.Name\n- uid: System.Windows.Forms.AccessibleObject.Navigate*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Navigate\n  nameWithType: AccessibleObject.Navigate\n- uid: System.Windows.Forms.AccessibleObject.Parent*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Parent\n  nameWithType: AccessibleObject.Parent\n- uid: System.Windows.Forms.AccessibleObject.Role*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Role\n  nameWithType: AccessibleObject.Role\n- uid: System.Windows.Forms.AccessibleObject.Select*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Select\n  nameWithType: AccessibleObject.Select\n- uid: System.Windows.Forms.AccessibleObject.State*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: State\n  nameWithType: AccessibleObject.State\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetField\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetField\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetFields\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetFields\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMember\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMember\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMembers\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMembers\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMethod\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethod\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetMethods\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetMethods\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetProperties\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperties\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.GetProperty\n  nameWithType: AccessibleObject.System.Reflection.IReflect.GetProperty\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.InvokeMember\n  nameWithType: AccessibleObject.System.Reflection.IReflect.InvokeMember\n- uid: System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: System.Reflection.IReflect.UnderlyingSystemType\n  nameWithType: AccessibleObject.System.Reflection.IReflect.UnderlyingSystemType\n- uid: System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: UseStdAccessibleObjects\n  nameWithType: AccessibleObject.UseStdAccessibleObjects\n- uid: System.Windows.Forms.AccessibleObject.Value*\n  parent: System.Windows.Forms.AccessibleObject\n  isExternal: false\n  name: Value\n  nameWithType: AccessibleObject.Value\n"}