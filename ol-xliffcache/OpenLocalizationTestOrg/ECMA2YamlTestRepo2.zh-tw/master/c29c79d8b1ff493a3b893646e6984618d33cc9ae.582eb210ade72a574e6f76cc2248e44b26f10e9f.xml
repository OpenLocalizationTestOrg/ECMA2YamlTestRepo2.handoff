{"nodes":[{"pos":[614,794],"content":"Allows security actions for <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allows security actions for <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UrlIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be applied to code using declarative security.","pos":[0,148],"source":"Allows security actions for <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[149,180]}]},{"pos":[807,2072],"content":"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.       The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.      > [!IMPORTANT] >  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.   >    >  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file.","pos":[0,87]},{"content":"For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.","pos":[88,165]},{"content":"The scope of the declaration that is allowed depends on the &lt;xref:System.Security.Permissions.SecurityAction&gt; that is used.","pos":[172,295],"source":"       The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Starting with the <ph id=\"ph2\">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, identity permissions are not used.","pos":[301,432],"source":"      > [!IMPORTANT] >  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used."},{"content":"&gt;    &gt;  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted.","pos":[435,585],"source":"   >    >  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted."},{"content":"That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.","pos":[586,735]},{"content":"In the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.","pos":[736,859]},{"content":"This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[860,974]},{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[981,1131]},{"content":"Security attributes are used only for declarative security.","pos":[1132,1191]},{"content":"For imperative security, use the corresponding permission class.","pos":[1192,1256]}]},{"pos":[3465,3668],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UrlIdentityPermissionAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.UrlIdentityPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>."},{"pos":[3890,3972],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."},{"pos":[4563,4660],"content":"Creates and returns a new <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UrlIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns a new <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref>."},{"pos":[4673,4987],"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","pos":[0,312],"nodes":[{"content":"This method should only be called by the security system, never by application code.","pos":[0,84]},{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[91,182]},{"content":"Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.","pos":[183,312]}]}]},{"pos":[5167,5275],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.UrlIdentityPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that corresponds to this attribute.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> that corresponds to this attribute."},{"pos":[5808,5854],"content":"Gets or sets the full URL of the calling code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the full URL of the calling code.","pos":[0,46]}]},{"pos":[5867,6143],"content":"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.       URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.","needQuote":false,"needEscape":true,"nodes":[{"content":"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.       URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.","pos":[0,274],"nodes":[{"content":"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.","pos":[0,148]},{"content":"URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.","pos":[155,274]}]}]},{"pos":[6257,6309],"content":"The URL to match with the URL specified by the host.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL to match with the URL specified by the host.","pos":[0,52]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute\n  id: UrlIdentityPermissionAttribute\n  children:\n  - System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission\n  - System.Security.Permissions.UrlIdentityPermissionAttribute.Url\n  langs:\n  - csharp\n  name: UrlIdentityPermissionAttribute\n  nameWithType: UrlIdentityPermissionAttribute\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute\n  type: Class\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.  \\n  \\n The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.  \\n  \\n> [!IMPORTANT]\\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \\n>   \\n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. In the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class UrlIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net462\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  langs:\n  - csharp\n  name: UrlIdentityPermissionAttribute(SecurityAction)\n  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.UrlIdentityPermissionAttribute\"></xref> class with the specified <xref href=\"System.Security.Permissions.SecurityAction\"></xref>.\n  syntax:\n    content: public UrlIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: UrlIdentityPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref>.\n  remarks: \"This method should only be called by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.UrlIdentityPermission\"></xref> that corresponds to this attribute.\n  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url\n  id: Url\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  langs:\n  - csharp\n  name: Url\n  nameWithType: UrlIdentityPermissionAttribute.Url\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.Url\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  summary: Gets or sets the full URL of the calling code.\n  remarks: \"The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.  \\n  \\n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*.\"\n  syntax:\n    content: public string Url { get; set; }\n    return:\n      type: System.String\n      description: The URL to match with the URL specified by the host.\n  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.Url*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  isExternal: false\n  name: UrlIdentityPermissionAttribute(SecurityAction)\n  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: UrlIdentityPermissionAttribute.CreatePermission()\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  isExternal: false\n  name: Url\n  nameWithType: UrlIdentityPermissionAttribute.Url\n  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.Url\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor*\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  isExternal: false\n  name: UrlIdentityPermissionAttribute\n  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: UrlIdentityPermissionAttribute.CreatePermission\n- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url*\n  parent: System.Security.Permissions.UrlIdentityPermissionAttribute\n  isExternal: false\n  name: Url\n  nameWithType: UrlIdentityPermissionAttribute.Url\n"}