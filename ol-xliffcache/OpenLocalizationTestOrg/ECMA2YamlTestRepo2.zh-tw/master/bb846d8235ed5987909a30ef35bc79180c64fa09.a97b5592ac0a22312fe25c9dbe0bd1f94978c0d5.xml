{"nodes":[{"pos":[603,691],"content":"Runs the code-beside method associated with an activity. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs the code-beside method associated with an activity. This class cannot be inherited.","pos":[0,88],"nodes":[{"content":"Runs the code-beside method associated with an activity.","pos":[0,56]},{"content":"This class cannot be inherited.","pos":[57,88]}]}]},{"pos":[704,1293],"content":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       Code-beside methods invoked by CodeActivity are executed in a synchronous manner; CodeActivity does not yield its thread until the thread is finished. Therefore, the execution of the code-beside method is expected to be performed and should not block with a dependency on some external resource. For example, the code-beside method should typically not invoke a Web service.       The typical use of the CodeActivity is to examine workflow instance state, and change local variables and messages.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       Code-beside methods invoked by CodeActivity are executed in a synchronous manner; CodeActivity does not yield its thread until the thread is finished.","pos":[0,238],"source":"> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       Code-beside methods invoked by CodeActivity are executed in a synchronous manner; CodeActivity does not yield its thread until the thread is finished."},{"content":"Therefore, the execution of the code-beside method is expected to be performed and should not block with a dependency on some external resource.","pos":[239,383]},{"content":"For example, the code-beside method should typically not invoke a Web service.","pos":[384,462]},{"content":"The typical use of the CodeActivity is to examine workflow instance state, and change local variables and messages.","pos":[469,584]}]},{"pos":[8764,8865],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CodeActivity\"></xref> class."},{"pos":[10448,10580],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the name of the activity.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.CodeActivity\"></xref> class using the name of the activity."},{"pos":[10715,10753],"content":"The user-defined name of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]},{"pos":[11715,11727],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11826,11838],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12322,12406],"content":"Occurs when the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.Activities.CodeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> starts.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref href=\"System.Workflow.Activities.CodeActivity\"></xref> starts."},{"pos":[13017,13029],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[13477,13659],"content":"Represents the <bpt id=\"p1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that targets the <bpt id=\"p2\">&lt;xref href=\"System.Workflow.Activities.CodeActivity.ExecuteCode\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CodeActivity.ExecuteCode\"></xref> event."},{"pos":[14293,14305],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.CodeActivity\n  id: CodeActivity\n  children:\n  - System.Workflow.Activities.CodeActivity.#ctor\n  - System.Workflow.Activities.CodeActivity.#ctor(System.String)\n  - System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.CodeActivity.ExecuteCode\n  - System.Workflow.Activities.CodeActivity.ExecuteCodeEvent\n  langs:\n  - csharp\n  name: CodeActivity\n  nameWithType: CodeActivity\n  fullName: System.Workflow.Activities.CodeActivity\n  type: Class\n  summary: Runs the code-beside method associated with an activity. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]  \\n  \\n Code-beside methods invoked by CodeActivity are executed in a synchronous manner; CodeActivity does not yield its thread until the thread is finished. Therefore, the execution of the code-beside method is expected to be performed and should not block with a dependency on some external resource. For example, the code-beside method should typically not invoke a Web service.  \\n  \\n The typical use of the CodeActivity is to examine workflow instance state, and change local variables and messages.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"ExecuteCode\")]\n\n      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.CodeDesigner), typeof(System.ComponentModel.Design.IDesigner))]\n\n      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]\n\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.CodeActivity), \"Resources.code.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CodeActivity/CodeActivityValidator))]\n\n      public sealed class CodeActivity : System.Workflow.ComponentModel.Activity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  implements: []\n  inheritedMembers:\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CodeActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.CodeActivity\n  langs:\n  - csharp\n  name: CodeActivity()\n  nameWithType: CodeActivity.CodeActivity()\n  fullName: System.Workflow.Activities.CodeActivity.CodeActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CodeActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.CodeActivity> class.  The example code also creates new instances of the <xref:System.Workflow.Activities.CodeCondition> and <xref:System.Workflow.Activities.ConditionedActivityGroup> classes. This code example is part of the ConditionedActivityGroup SDK sample from the SimpleCAGWorkflow.designer.cs file. For more information, see [Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \\n  \\n```c#  \\nprivate ConditionedActivityGroup BookingCAG;  \\nprivate CodeActivity Car;  \\nprivate CodeActivity Airline;  \\n  \\nthis.CanModifyActivities = true;  \\nCodeCondition codecondition1 = new CodeCondition();  \\nCodeCondition codecondition2 = new CodeCondition();  \\nthis.BookingCAG = new ConditionedActivityGroup();  \\nthis.Car = new CodeActivity();  \\nthis.Airline = new CodeActivity();  \\n```\"\n  syntax:\n    content: public CodeActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.CodeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CodeActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.CodeActivity\n  langs:\n  - csharp\n  name: CodeActivity(String)\n  nameWithType: CodeActivity.CodeActivity(String)\n  fullName: System.Workflow.Activities.CodeActivity.CodeActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.CodeActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public CodeActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.CodeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CodeActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CodeActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.CodeActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: To be added.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: To be added.\n  overload: System.Workflow.Activities.CodeActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CodeActivity.ExecuteCode\n  id: ExecuteCode\n  parent: System.Workflow.Activities.CodeActivity\n  langs:\n  - csharp\n  name: ExecuteCode\n  nameWithType: CodeActivity.ExecuteCode\n  fullName: System.Workflow.Activities.CodeActivity.ExecuteCode\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the <xref href=\"System.Workflow.Activities.CodeActivity\"></xref> starts.\n  remarks: ''\n  example:\n  - \"The following code demonstrates how to use the ExecuteCode event. This code example is part of the Compensation SDK sample from the PurchaseOrder.cs file. For more information, see [Using Compensation](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \\n  \\n [!code-cs[WF_Samples#155](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#155)]\\n [!code-vb[WF_Samples#155](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#155)]\"\n  syntax:\n    content: public event EventHandler ExecuteCode;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent\n  id: ExecuteCodeEvent\n  parent: System.Workflow.Activities.CodeActivity\n  langs:\n  - csharp\n  name: ExecuteCodeEvent\n  nameWithType: CodeActivity.ExecuteCodeEvent\n  fullName: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.CodeActivity.ExecuteCode\"></xref> event.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'\n  example:\n  - \"The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.CodeActivity> and specify the handler for the <xref:System.Workflow.Activities.CodeActivity.ExecuteCode> event.  \\n  \\n [!code-cs[WF_Samples#311](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#311)]\"\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecuteCodeEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.Activities.CodeActivity.#ctor\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: CodeActivity()\n  nameWithType: CodeActivity.CodeActivity()\n  fullName: System.Workflow.Activities.CodeActivity.CodeActivity()\n- uid: System.Workflow.Activities.CodeActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: CodeActivity(String)\n  nameWithType: CodeActivity.CodeActivity(String)\n  fullName: System.Workflow.Activities.CodeActivity.CodeActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: CodeActivity.Execute(ActivityExecutionContext)\n  fullName: System.Workflow.Activities.CodeActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.CodeActivity.ExecuteCode\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: ExecuteCode\n  nameWithType: CodeActivity.ExecuteCode\n  fullName: System.Workflow.Activities.CodeActivity.ExecuteCode\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: ExecuteCodeEvent\n  nameWithType: CodeActivity.ExecuteCodeEvent\n  fullName: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.CodeActivity.#ctor*\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: CodeActivity\n  nameWithType: CodeActivity.CodeActivity\n- uid: System.Workflow.Activities.CodeActivity.Execute*\n  parent: System.Workflow.Activities.CodeActivity\n  isExternal: false\n  name: Execute\n  nameWithType: CodeActivity.Execute\n"}