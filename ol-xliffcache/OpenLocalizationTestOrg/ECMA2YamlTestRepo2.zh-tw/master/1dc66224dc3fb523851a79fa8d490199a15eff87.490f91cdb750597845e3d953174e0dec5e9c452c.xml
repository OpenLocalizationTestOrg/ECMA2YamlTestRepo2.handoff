{"nodes":[{"pos":[861,903],"content":"Evaluates expressions during page parsing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Evaluates expressions during page parsing.","pos":[0,42]}]},{"pos":[916,2998],"content":"The ExpressionBuilder class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.       Expression builders parse declarative expressions and create code to retrieve values bound to a control property. In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.       When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string. The prefix is the portion of the string that is to the left of the colon (:). For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object. Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.       The right side of the declarative expression is passed to the expression builder for evaluation. Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.       If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression. You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.       You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor. The editor is marked on the expression builder through class-level metadata. For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The ExpressionBuilder class is the base class for expression builders, such as the &lt;xref:System.Web.Compilation.AppSettingsExpressionBuilder&gt; class, that create code expressions during page parsing.","pos":[0,198],"source":"The ExpressionBuilder class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing."},{"content":"Expression builders parse declarative expressions and create code to retrieve values bound to a control property.","pos":[205,318]},{"content":"In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.","pos":[319,442]},{"content":"When the page parser encounters an expression that is delimited with the string <ph id=\"ph1\">`&lt;%$ %&gt;`</ph>, it creates an expression builder for the expression based on the prefix in the string.","pos":[449,625],"source":"       When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string."},{"content":"The prefix is the portion of the string that is to the left of the colon (:).","pos":[626,703]},{"content":"For example, when the parser encounters the string <ph id=\"ph1\">`&lt;%$ ConnectionStrings:MessageDB %&gt;`</ph>, it creates a &lt;xref:System.Web.Compilation.ConnectionStringsExpressionBuilder&gt; object.","pos":[704,878],"source":" For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object."},{"content":"Prefixes are associated with expression builders in the Web.config file in the &lt;xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A&gt; section.","pos":[879,1039],"source":" Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section."},{"content":"The right side of the declarative expression is passed to the expression builder for evaluation.","pos":[1046,1142]},{"content":"Override the &lt;xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A&gt; method to generate code that will be compiled with the page.","pos":[1143,1285],"source":" Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page."},{"content":"If you want the custom expression builder to be active on pages that are not compiled, you must also override the &lt;xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A&gt; method to return an object that represents the results of the expression.","pos":[1292,1549],"source":"       If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression."},{"content":"You also must override the &lt;xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A&gt; property to indicate that the custom expression builder does support no-compile pages.","pos":[1550,1731],"source":" You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages."},{"content":"You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.","pos":[1738,1923]},{"content":"The editor is marked on the expression builder through class-level metadata.","pos":[1924,2000]},{"content":"For more information, see &lt;xref:System.Web.UI.Design.ExpressionEditor&gt;.","pos":[2001,2072],"source":" For more information, see <xref:System.Web.UI.Design.ExpressionEditor>."}]},{"pos":[4886,4988],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Compilation.ExpressionBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ExpressionBuilder\"></xref> class."},{"pos":[5000,5212],"content":"Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the ExpressionBuilder constructor.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because the &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; class is abstract, you cannot create an instance of &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; directly by using the ExpressionBuilder constructor.","pos":[0,212],"source":"Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the ExpressionBuilder constructor."}]},{"pos":[6190,6284],"content":"When overridden in a derived class, returns an object that represents an evaluated expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns an object that represents an evaluated expression.","pos":[0,94]}]},{"pos":[6296,6647],"content":"If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the EvaluateExpression method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property. The EvaluateExpression method should return the evaluation of the current expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the EvaluateExpression method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property. The EvaluateExpression method should return the evaluation of the current expression.","pos":[0,351],"nodes":[{"content":"If you want your &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; object to be active on a page that supports the no-compile feature, you can override the EvaluateExpression method and the &lt;xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A&gt; property.","pos":[0,265],"source":"If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the EvaluateExpression method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property."},{"content":"The EvaluateExpression method should return the evaluation of the current expression.","pos":[266,351]}]}]},{"pos":[7192,7229],"content":"The object containing the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object containing the expression.","pos":[0,37]}]},{"pos":[7310,7395],"content":"The object that represents information about the property bound to by the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that represents information about the property bound to by the expression.","pos":[0,85]}]},{"pos":[7462,7576],"content":"The object containing parsed data as returned by <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object containing parsed data as returned by &lt;xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*&gt;.","pos":[0,114],"source":"The object containing parsed data as returned by <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>."}]},{"pos":[7674,7734],"content":"Contextual information for the evaluation of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contextual information for the evaluation of the expression.","pos":[0,60]}]},{"pos":[7792,7971],"content":"An object that represents the evaluated expression; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the inheritor does not implement EvaluateExpression.","needQuote":true,"needEscape":true,"source":"An object that represents the evaluated expression; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the inheritor does not implement EvaluateExpression."},{"pos":[8834,8953],"content":"When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.","pos":[0,119]}]},{"pos":[8965,9102],"content":"Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the GetCodeExpression abstract method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Classes that inherit from the &lt;xref:System.Web.Compilation.ExpressionBuilder&gt; class must implement the GetCodeExpression abstract method.","pos":[0,137],"source":"Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the GetCodeExpression abstract method."}]},{"pos":[9690,9775],"content":"The object that represents information about the property bound to by the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that represents information about the property bound to by the expression.","pos":[0,85]}]},{"pos":[9842,9956],"content":"The object containing parsed data as returned by <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object containing parsed data as returned by &lt;xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*&gt;.","pos":[0,114],"source":"The object containing parsed data as returned by <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>."}]},{"pos":[10054,10114],"content":"Contextual information for the evaluation of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contextual information for the evaluation of the expression.","pos":[0,60]}]},{"pos":[10188,10278],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is used for property assignment.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is used for property assignment."},{"pos":[11046,11138],"content":"When overridden in a derived class, returns an object that represents the parsed expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"When overridden in a derived class, returns an object that represents the parsed expression.","pos":[0,92]}]},{"pos":[11150,11449],"content":"When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the <ph id=\"ph1\">`parsedData`</ph> parameter in a &lt;xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A&gt; or &lt;xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A&gt; method.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method."},{"pos":[11690,11730],"content":"The value of the declarative expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the declarative expression.","pos":[0,40]}]},{"pos":[11797,11849],"content":"The type of the property bound to by the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type of the property bound to by the expression.","pos":[0,52]}]},{"pos":[11947,12007],"content":"Contextual information for the evaluation of the expression.","needQuote":true,"needEscape":true,"nodes":[{"content":"Contextual information for the evaluation of the expression.","pos":[0,60]}]},{"pos":[12065,12255],"content":"An &lt;xref:System.Object&gt; containing the parsed representation of the expression; otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if ParseExpression is not implemented.","needQuote":true,"needEscape":true,"source":"An <xref:System.Object> containing the parsed representation of the expression; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if ParseExpression is not implemented."},{"pos":[12764,12942],"content":"When overridden in a derived class, returns a value indicating whether the current <bpt id=\"p1\">&lt;xref href=\"System.Web.Compilation.ExpressionBuilder\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object supports no-compile pages.","needQuote":true,"needEscape":true,"source":"When overridden in a derived class, returns a value indicating whether the current <xref href=\"System.Web.Compilation.ExpressionBuilder\"></xref> object supports no-compile pages."},{"pos":[12954,13185],"content":"The default value for the SupportsEvaluate property is `false`. To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the SupportsEvaluate property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default value for the SupportsEvaluate property is <ph id=\"ph1\">`false`</ph>.","pos":[0,63],"source":"The default value for the SupportsEvaluate property is `false`."},{"content":"To support no-compile pages, you must override both the &lt;xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A&gt; method and the SupportsEvaluate property.","pos":[64,231],"source":" To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the SupportsEvaluate property."}]},{"pos":[13537,13773],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Web.Compilation.ExpressionBuilder\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> supports expression evaluation; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Compilation.ExpressionBuilder\"></xref> supports expression evaluation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.ExpressionBuilder\n  id: ExpressionBuilder\n  children:\n  - System.Web.Compilation.ExpressionBuilder.#ctor\n  - System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  - System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)\n  - System.Web.Compilation.ExpressionBuilder.SupportsEvaluate\n  langs:\n  - csharp\n  name: ExpressionBuilder\n  nameWithType: ExpressionBuilder\n  fullName: System.Web.Compilation.ExpressionBuilder\n  type: Class\n  summary: Evaluates expressions during page parsing.\n  remarks: \"The ExpressionBuilder class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.  \\n  \\n Expression builders parse declarative expressions and create code to retrieve values bound to a control property. In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.  \\n  \\n When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string. The prefix is the portion of the string that is to the left of the colon (:). For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object. Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.  \\n  \\n The right side of the declarative expression is passed to the expression builder for evaluation. Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.  \\n  \\n If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression. You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.  \\n  \\n You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor. The editor is marked on the expression builder through class-level metadata. For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.\"\n  example:\n  - \"The following code examples demonstrate how to build a custom expression builder by implementing the ExpressionBuilder abstract class. This implementation of ExpressionBuilder returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \\n  \\n```  \\n<configuration>  \\n    <system.web>  \\n       <compilation>  \\n          <expressionBuilders>  \\n              <add expressionPrefix=\\\"MyCustomExpression\\\"  \\n               type=\\\"MyCustomExpressionBuilder\\\"/>  \\n          </expressionBuilders>  \\n       </compilation>  \\n    </system.web>  \\n</configuration>  \\n```  \\n  \\n The second code example demonstrates how to reference the expression in an .aspx file.  \\n  \\n```  \\n<asp:Label ID=\\\"Label1\\\" runat=\\\"server\\\"   \\nText=\\\"<%$ MyCustomExpression:Hello, world! %>\\\" />  \\n```  \\n  \\n The third code example demonstrates how to develop a customized expression builder by deriving from ExpressionBuilder. To run this code example, you must place the class in the App_Code folder.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public abstract class ExpressionBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ExpressionBuilder.#ctor\n  id: '#ctor'\n  parent: System.Web.Compilation.ExpressionBuilder\n  langs:\n  - csharp\n  name: ExpressionBuilder()\n  nameWithType: ExpressionBuilder.ExpressionBuilder()\n  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ExpressionBuilder\"></xref> class.\n  remarks: Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the ExpressionBuilder constructor.\n  syntax:\n    content: protected ExpressionBuilder ();\n    parameters: []\n  overload: System.Web.Compilation.ExpressionBuilder.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.ExpressionBuilder\n  langs:\n  - csharp\n  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: When overridden in a derived class, returns an object that represents an evaluated expression.\n  remarks: If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the EvaluateExpression method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property. The EvaluateExpression method should return the evaluation of the current expression.\n  example:\n  - \"The following code example demonstrates how to use the overridden EvaluateExpression method to return an evaluated expression.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);\n    parameters:\n    - id: target\n      type: System.Object\n      description: The object containing the expression.\n    - id: entry\n      type: System.Web.UI.BoundPropertyEntry\n      description: The object that represents information about the property bound to by the expression.\n    - id: parsedData\n      type: System.Object\n      description: The object containing parsed data as returned by <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.\n    - id: context\n      type: System.Web.Compilation.ExpressionBuilderContext\n      description: Contextual information for the evaluation of the expression.\n    return:\n      type: System.Object\n      description: An object that represents the evaluated expression; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the inheritor does not implement EvaluateExpression.\n  overload: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.ExpressionBuilder\n  langs:\n  - csharp\n  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.\n  remarks: Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the GetCodeExpression abstract method.\n  example:\n  - \"The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the GetCodeExpression method.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);\n    parameters:\n    - id: entry\n      type: System.Web.UI.BoundPropertyEntry\n      description: The object that represents information about the property bound to by the expression.\n    - id: parsedData\n      type: System.Object\n      description: The object containing parsed data as returned by <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.\n    - id: context\n      type: System.Web.Compilation.ExpressionBuilderContext\n      description: Contextual information for the evaluation of the expression.\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is used for property assignment.\n  overload: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)\n  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.ExpressionBuilder\n  langs:\n  - csharp\n  name: ParseExpression(String,Type,ExpressionBuilderContext)\n  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: When overridden in a derived class, returns an object that represents the parsed expression.\n  remarks: When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.\n  syntax:\n    content: public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);\n    parameters:\n    - id: expression\n      type: System.String\n      description: The value of the declarative expression.\n    - id: propertyType\n      type: System.Type\n      description: The type of the property bound to by the expression.\n    - id: context\n      type: System.Web.Compilation.ExpressionBuilderContext\n      description: Contextual information for the evaluation of the expression.\n    return:\n      type: System.Object\n      description: An <xref:System.Object> containing the parsed representation of the expression; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if ParseExpression is not implemented.\n  overload: System.Web.Compilation.ExpressionBuilder.ParseExpression*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate\n  id: SupportsEvaluate\n  parent: System.Web.Compilation.ExpressionBuilder\n  langs:\n  - csharp\n  name: SupportsEvaluate\n  nameWithType: ExpressionBuilder.SupportsEvaluate\n  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: When overridden in a derived class, returns a value indicating whether the current <xref href=\"System.Web.Compilation.ExpressionBuilder\"></xref> object supports no-compile pages.\n  remarks: The default value for the SupportsEvaluate property is `false`. To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the SupportsEvaluate property.\n  example:\n  - \"The following code example demonstrates how to use the SupportsEvaluate property.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public virtual bool SupportsEvaluate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Web.Compilation.ExpressionBuilder\"></xref> supports expression evaluation; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.Compilation.ExpressionBuilder.#ctor\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: ExpressionBuilder()\n  nameWithType: ExpressionBuilder.ExpressionBuilder()\n  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()\n- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)\n- uid: System.Web.UI.BoundPropertyEntry\n  parent: System.Web.UI\n  isExternal: false\n  name: BoundPropertyEntry\n  nameWithType: BoundPropertyEntry\n  fullName: System.Web.UI.BoundPropertyEntry\n- uid: System.Web.Compilation.ExpressionBuilderContext\n  parent: System.Web.Compilation\n  isExternal: false\n  name: ExpressionBuilderContext\n  nameWithType: ExpressionBuilderContext\n  fullName: System.Web.Compilation.ExpressionBuilderContext\n- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: ParseExpression(String,Type,ExpressionBuilderContext)\n  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)\n  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: SupportsEvaluate\n  nameWithType: ExpressionBuilder.SupportsEvaluate\n  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Compilation.ExpressionBuilder.#ctor*\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: ExpressionBuilder\n  nameWithType: ExpressionBuilder.ExpressionBuilder\n- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: EvaluateExpression\n  nameWithType: ExpressionBuilder.EvaluateExpression\n- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: GetCodeExpression\n  nameWithType: ExpressionBuilder.GetCodeExpression\n- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression*\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: ParseExpression\n  nameWithType: ExpressionBuilder.ParseExpression\n- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*\n  parent: System.Web.Compilation.ExpressionBuilder\n  isExternal: false\n  name: SupportsEvaluate\n  nameWithType: ExpressionBuilder.SupportsEvaluate\n"}