{"nodes":[{"pos":[1207,1255],"content":"Specifies which parts are included in a message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies which parts are included in a message.","pos":[0,48]}]},{"pos":[1267,1381],"content":"This specification is used to indicate which message parts need to be signed and which parts need to be encrypted.","needQuote":true,"needEscape":true,"nodes":[{"content":"This specification is used to indicate which message parts need to be signed and which parts need to be encrypted.","pos":[0,114]}]},{"pos":[2011,2107],"content":"Initializes an empty <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes an empty <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref>."},{"pos":[2824,2968],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and specifies whether the message body is included.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> and specifies whether the message body is included."},{"pos":[3134,3204],"content":"Initializes whether the message body is included in the specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes whether the message body is included in the specification.","pos":[0,70]}]},{"pos":[3906,4032],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with an array of message headers.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> with an array of message headers."},{"pos":[4044,4098],"content":"Each header is specified using its name and namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each header is specified using its name and namespace.","pos":[0,54]}]},{"pos":[4298,4331],"content":"The array of header types to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of header types to use.","pos":[0,33]}]},{"pos":[5087,5213],"content":"Initializes a new <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with an array of message headers.","needQuote":true,"needEscape":true,"source":"Initializes a new <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> with an array of message headers."},{"pos":[5225,5384],"content":"Each header is specified using its name and namespace. In addition, the `isBodyIncluded` parameter specifies whether the message body is to be included or not.","needQuote":true,"needEscape":true,"nodes":[{"content":"Each header is specified using its name and namespace.","pos":[0,54]},{"content":"In addition, the <ph id=\"ph1\">`isBodyIncluded`</ph> parameter specifies whether the message body is to be included or not.","pos":[55,159],"source":" In addition, the `isBodyIncluded` parameter specifies whether the message body is to be included or not."}]},{"pos":[5593,5663],"content":"Initializes whether the message body is included in the specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes whether the message body is included in the specification.","pos":[0,70]}]},{"pos":[5747,5780],"content":"The array of header types to use.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of header types to use.","pos":[0,33]}]},{"pos":[6302,6351],"content":"Clears the list of headers in this specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the list of headers in this specification.","pos":[0,49]}]},{"pos":[6613,6705],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> is read only."},{"pos":[7163,7208],"content":"Gets the header types for this specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the header types for this specification.","pos":[0,45]}]},{"pos":[7439,7557],"content":"An &lt;xref:System.Collections.Generic.ICollection%601&gt; that holds the header types for this message specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id=\"ph2\">&amp;gt;</ph> that holds the header types for this message specification.","pos":[0,118],"source":"An &lt;xref:System.Collections.Generic.ICollection%601&gt; that holds the header types for this message specification."}]},{"pos":[8126,8221],"content":"Gets or sets a value that indicates whether the message body is included in this specification.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the message body is included in this specification.","pos":[0,95]}]},{"pos":[8344,8534],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the message body is included in this specification; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message body is included in this specification; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8741,8833],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read only.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> is read only."},{"pos":[9286,9353],"content":"Gets a value that indicates whether the specification is read only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specification is read only.","pos":[0,67]}]},{"pos":[9365,9585],"content":"You can use <xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A> to set this property to `true`. <xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> sets the property to `false`.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use &lt;xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A&gt; to set this property to <ph id=\"ph1\">`true`</ph>.","pos":[0,120],"source":"You can use <xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A> to set this property to `true`."},{"content":"&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A&gt; sets the property to <ph id=\"ph1\">`false`</ph>.","pos":[121,220],"source":" <xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> sets the property to `false`."}]},{"pos":[9699,9869],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the specification is read only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specification is read only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10431,10467],"content":"Sets the specification to read only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the specification to read only.","pos":[0,36]}]},{"pos":[10479,10626],"content":"<xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> removes all headers in the specification and makes the collection read/write.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A&gt; removes all headers in the specification and makes the collection read/write.","pos":[0,147],"source":"<xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> removes all headers in the specification and makes the collection read/write."}]},{"pos":[11232,11269],"content":"Gets an empty instance of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an empty instance of this class.","pos":[0,37]}]},{"pos":[11281,11355],"content":"If this property is <ph id=\"ph1\">`null`</ph>, a new empty instance of this class is created.","needQuote":true,"needEscape":true,"source":"If this property is `null`, a new empty instance of this class is created."},{"pos":[11561,11593],"content":"An empty instance of this class.","needQuote":true,"needEscape":true,"nodes":[{"content":"An empty instance of this class.","pos":[0,32]}]},{"pos":[12299,12338],"content":"Merges two message part specifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"Merges two message part specifications.","pos":[0,39]}]},{"pos":[12350,12648],"content":"After the Union method is called, the <xref:System.ServiceModel.Security.MessagePartSpecification> holds all header information from both specifications, and the <xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A> property is set to the logical OR of both specifications.","needQuote":true,"needEscape":true,"nodes":[{"content":"After the Union method is called, the &lt;xref:System.ServiceModel.Security.MessagePartSpecification&gt; holds all header information from both specifications, and the &lt;xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A&gt; property is set to the logical OR of both specifications.","pos":[0,298],"source":"After the Union method is called, the <xref:System.ServiceModel.Security.MessagePartSpecification> holds all header information from both specifications, and the <xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A> property is set to the logical OR of both specifications."}]},{"pos":[12886,12974],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to merge.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> to merge."},{"pos":[13172,13265],"content":"This <bpt id=\"p1\">&lt;xref href=\"System.ServiceModel.Security.MessagePartSpecification\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read only.","needQuote":true,"needEscape":true,"source":"This <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> is read only."},{"pos":[13368,13459],"content":"<ph id=\"ph1\">&lt;code&gt;specification&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>specification</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.MessagePartSpecification\n  id: MessagePartSpecification\n  children:\n  - System.ServiceModel.Security.MessagePartSpecification.#ctor\n  - System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)\n  - System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])\n  - System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])\n  - System.ServiceModel.Security.MessagePartSpecification.Clear\n  - System.ServiceModel.Security.MessagePartSpecification.HeaderTypes\n  - System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded\n  - System.ServiceModel.Security.MessagePartSpecification.IsReadOnly\n  - System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly\n  - System.ServiceModel.Security.MessagePartSpecification.NoParts\n  - System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)\n  langs:\n  - csharp\n  name: MessagePartSpecification\n  nameWithType: MessagePartSpecification\n  fullName: System.ServiceModel.Security.MessagePartSpecification\n  type: Class\n  summary: Specifies which parts are included in a message.\n  remarks: This specification is used to indicate which message parts need to be signed and which parts need to be encrypted.\n  syntax:\n    content: public class MessagePartSpecification\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: MessagePartSpecification()\n  nameWithType: MessagePartSpecification.MessagePartSpecification()\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes an empty <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref>.\n  syntax:\n    content: public MessagePartSpecification ();\n    parameters: []\n  overload: System.ServiceModel.Security.MessagePartSpecification.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: MessagePartSpecification(Boolean)\n  nameWithType: MessagePartSpecification.MessagePartSpecification(Boolean)\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes a new <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> and specifies whether the message body is included.\n  syntax:\n    content: public MessagePartSpecification (bool isBodyIncluded);\n    parameters:\n    - id: isBodyIncluded\n      type: System.Boolean\n      description: Initializes whether the message body is included in the specification.\n  overload: System.ServiceModel.Security.MessagePartSpecification.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])\n  id: '#ctor(System.Xml.XmlQualifiedName[])'\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: MessagePartSpecification(XmlQualifiedName[])\n  nameWithType: MessagePartSpecification.MessagePartSpecification(XmlQualifiedName[])\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification(XmlQualifiedName[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes a new <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> with an array of message headers.\n  remarks: Each header is specified using its name and namespace.\n  syntax:\n    content: public MessagePartSpecification (System.Xml.XmlQualifiedName[] headerTypes);\n    parameters:\n    - id: headerTypes\n      type: System.Xml.XmlQualifiedName[]\n      description: The array of header types to use.\n  overload: System.ServiceModel.Security.MessagePartSpecification.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])\n  id: '#ctor(System.Boolean,System.Xml.XmlQualifiedName[])'\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: MessagePartSpecification(Boolean,XmlQualifiedName[])\n  nameWithType: MessagePartSpecification.MessagePartSpecification(Boolean,XmlQualifiedName[])\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification(Boolean,XmlQualifiedName[])\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Initializes a new <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> with an array of message headers.\n  remarks: Each header is specified using its name and namespace. In addition, the `isBodyIncluded` parameter specifies whether the message body is to be included or not.\n  syntax:\n    content: public MessagePartSpecification (bool isBodyIncluded, System.Xml.XmlQualifiedName[] headerTypes);\n    parameters:\n    - id: isBodyIncluded\n      type: System.Boolean\n      description: Initializes whether the message body is included in the specification.\n    - id: headerTypes\n      type: System.Xml.XmlQualifiedName[]\n      description: The array of header types to use.\n  overload: System.ServiceModel.Security.MessagePartSpecification.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.Clear\n  id: Clear\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: MessagePartSpecification.Clear()\n  fullName: System.ServiceModel.Security.MessagePartSpecification.Clear()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Clears the list of headers in this specification.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ServiceModel.Security.MessagePartSpecification.Clear*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> is read only.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.HeaderTypes\n  id: HeaderTypes\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: HeaderTypes\n  nameWithType: MessagePartSpecification.HeaderTypes\n  fullName: System.ServiceModel.Security.MessagePartSpecification.HeaderTypes\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the header types for this specification.\n  syntax:\n    content: public System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> HeaderTypes { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}\n      description: An &lt;xref:System.Collections.Generic.ICollection%601&gt; that holds the header types for this message specification.\n  overload: System.ServiceModel.Security.MessagePartSpecification.HeaderTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded\n  id: IsBodyIncluded\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: IsBodyIncluded\n  nameWithType: MessagePartSpecification.IsBodyIncluded\n  fullName: System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets a value that indicates whether the message body is included in this specification.\n  syntax:\n    content: public bool IsBodyIncluded { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the message body is included in this specification; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> is read only.\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.IsReadOnly\n  id: IsReadOnly\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: MessagePartSpecification.IsReadOnly\n  fullName: System.ServiceModel.Security.MessagePartSpecification.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets a value that indicates whether the specification is read only.\n  remarks: You can use <xref:System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly%2A> to set this property to `true`. <xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> sets the property to `false`.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the specification is read only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ServiceModel.Security.MessagePartSpecification.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly\n  id: MakeReadOnly\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: MakeReadOnly()\n  nameWithType: MessagePartSpecification.MakeReadOnly()\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Sets the specification to read only.\n  remarks: <xref:System.ServiceModel.Security.MessagePartSpecification.Clear%2A> removes all headers in the specification and makes the collection read/write.\n  syntax:\n    content: public void MakeReadOnly ();\n    parameters: []\n  overload: System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.NoParts\n  id: NoParts\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: NoParts\n  nameWithType: MessagePartSpecification.NoParts\n  fullName: System.ServiceModel.Security.MessagePartSpecification.NoParts\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets an empty instance of this class.\n  remarks: If this property is `null`, a new empty instance of this class is created.\n  syntax:\n    content: public static System.ServiceModel.Security.MessagePartSpecification NoParts { get; }\n    return:\n      type: System.ServiceModel.Security.MessagePartSpecification\n      description: An empty instance of this class.\n  overload: System.ServiceModel.Security.MessagePartSpecification.NoParts*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)\n  id: Union(System.ServiceModel.Security.MessagePartSpecification)\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  langs:\n  - csharp\n  name: Union(MessagePartSpecification)\n  nameWithType: MessagePartSpecification.Union(MessagePartSpecification)\n  fullName: System.ServiceModel.Security.MessagePartSpecification.Union(MessagePartSpecification)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Merges two message part specifications.\n  remarks: After the Union method is called, the <xref:System.ServiceModel.Security.MessagePartSpecification> holds all header information from both specifications, and the <xref:System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded%2A> property is set to the logical OR of both specifications.\n  syntax:\n    content: public void Union (System.ServiceModel.Security.MessagePartSpecification specification);\n    parameters:\n    - id: specification\n      type: System.ServiceModel.Security.MessagePartSpecification\n      description: The <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> to merge.\n  overload: System.ServiceModel.Security.MessagePartSpecification.Union*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This <xref href=\"System.ServiceModel.Security.MessagePartSpecification\"></xref> is read only.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>specification</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MessagePartSpecification()\n  nameWithType: MessagePartSpecification.MessagePartSpecification()\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification()\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean)\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MessagePartSpecification(Boolean)\n  nameWithType: MessagePartSpecification.MessagePartSpecification(Boolean)\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Xml.XmlQualifiedName[])\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MessagePartSpecification(XmlQualifiedName[])\n  nameWithType: MessagePartSpecification.MessagePartSpecification(XmlQualifiedName[])\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification(XmlQualifiedName[])\n- uid: System.Xml.XmlQualifiedName[]\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName[]\n  spec.csharp:\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: XmlQualifiedName[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor(System.Boolean,System.Xml.XmlQualifiedName[])\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MessagePartSpecification(Boolean,XmlQualifiedName[])\n  nameWithType: MessagePartSpecification.MessagePartSpecification(Boolean,XmlQualifiedName[])\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MessagePartSpecification(Boolean,XmlQualifiedName[])\n- uid: System.ServiceModel.Security.MessagePartSpecification.Clear\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: Clear()\n  nameWithType: MessagePartSpecification.Clear()\n  fullName: System.ServiceModel.Security.MessagePartSpecification.Clear()\n- uid: System.ServiceModel.Security.MessagePartSpecification.HeaderTypes\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: HeaderTypes\n  nameWithType: MessagePartSpecification.HeaderTypes\n  fullName: System.ServiceModel.Security.MessagePartSpecification.HeaderTypes\n- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<XmlQualifiedName>\n  nameWithType: ICollection<XmlQualifiedName>\n  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Xml.XmlQualifiedName>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: XmlQualifiedName\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: IsBodyIncluded\n  nameWithType: MessagePartSpecification.IsBodyIncluded\n  fullName: System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded\n- uid: System.ServiceModel.Security.MessagePartSpecification.IsReadOnly\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MessagePartSpecification.IsReadOnly\n  fullName: System.ServiceModel.Security.MessagePartSpecification.IsReadOnly\n- uid: System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MakeReadOnly()\n  nameWithType: MessagePartSpecification.MakeReadOnly()\n  fullName: System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly()\n- uid: System.ServiceModel.Security.MessagePartSpecification.NoParts\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: NoParts\n  nameWithType: MessagePartSpecification.NoParts\n  fullName: System.ServiceModel.Security.MessagePartSpecification.NoParts\n- uid: System.ServiceModel.Security.MessagePartSpecification\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: MessagePartSpecification\n  nameWithType: MessagePartSpecification\n  fullName: System.ServiceModel.Security.MessagePartSpecification\n- uid: System.ServiceModel.Security.MessagePartSpecification.Union(System.ServiceModel.Security.MessagePartSpecification)\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: Union(MessagePartSpecification)\n  nameWithType: MessagePartSpecification.Union(MessagePartSpecification)\n  fullName: System.ServiceModel.Security.MessagePartSpecification.Union(MessagePartSpecification)\n- uid: System.ServiceModel.Security.MessagePartSpecification.#ctor*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MessagePartSpecification\n  nameWithType: MessagePartSpecification.MessagePartSpecification\n- uid: System.ServiceModel.Security.MessagePartSpecification.Clear*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: Clear\n  nameWithType: MessagePartSpecification.Clear\n- uid: System.ServiceModel.Security.MessagePartSpecification.HeaderTypes*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: HeaderTypes\n  nameWithType: MessagePartSpecification.HeaderTypes\n- uid: System.ServiceModel.Security.MessagePartSpecification.IsBodyIncluded*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: IsBodyIncluded\n  nameWithType: MessagePartSpecification.IsBodyIncluded\n- uid: System.ServiceModel.Security.MessagePartSpecification.IsReadOnly*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MessagePartSpecification.IsReadOnly\n- uid: System.ServiceModel.Security.MessagePartSpecification.MakeReadOnly*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: MakeReadOnly\n  nameWithType: MessagePartSpecification.MakeReadOnly\n- uid: System.ServiceModel.Security.MessagePartSpecification.NoParts*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: NoParts\n  nameWithType: MessagePartSpecification.NoParts\n- uid: System.ServiceModel.Security.MessagePartSpecification.Union*\n  parent: System.ServiceModel.Security.MessagePartSpecification\n  isExternal: false\n  name: Union\n  nameWithType: MessagePartSpecification.Union\n"}