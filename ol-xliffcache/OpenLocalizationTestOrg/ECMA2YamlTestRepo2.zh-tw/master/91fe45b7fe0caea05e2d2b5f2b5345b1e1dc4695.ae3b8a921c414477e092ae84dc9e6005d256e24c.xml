{"nodes":[{"pos":[1362,1390],"content":"Represents a key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a key identifier.","pos":[0,28]}]},{"pos":[1402,2173],"content":"Typically, the SecurityKeyIdentifier is not used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. These references are represented by classes that derive from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class. The SecurityKeyIdentifier class contains the collection of these references.","needQuote":true,"needEscape":true,"nodes":[{"content":"Typically, the SecurityKeyIdentifier is not used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. These references are represented by classes that derive from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class. The SecurityKeyIdentifier class contains the collection of these references.","pos":[0,771],"nodes":[{"content":"Typically, the SecurityKeyIdentifier is not used, other than when a custom security token service is created.","pos":[0,109]},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[110,255]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.","pos":[256,478]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[479,559]},{"content":"These references are represented by classes that derive from the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt; class.","pos":[560,694],"source":" These references are represented by classes that derive from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class."},{"content":"The SecurityKeyIdentifier class contains the collection of these references.","pos":[695,771]}]}]},{"pos":[2973,3084],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> class."},{"pos":[3922,4076],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified key identifier clauses.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> class using the specified key identifier clauses."},{"pos":[4321,4451],"content":"An array of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the key identifier clauses.","needQuote":true,"needEscape":true,"source":"An array of <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that contains the key identifier clauses."},{"pos":[4637,4722],"content":"<ph id=\"ph1\">&lt;code&gt;clauses&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>clauses</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5324,5376],"content":"Adds a key identifier clause to the end of the list.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a key identifier clause to the end of the list.","pos":[0,52]}]},{"pos":[5602,5716],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be added to the end of the list.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to be added to the end of the list."},{"pos":[5900,5984],"content":"<ph id=\"ph1\">&lt;code&gt;clause&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>clause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6095,6254],"content":"The value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*&gt; property is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"pos":[6702,6806],"content":"Gets a value that indicates whether a key can be created for at least one of the key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether a key can be created for at least one of the key identifier clauses.","pos":[0,104]}]},{"pos":[6922,7129],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a key can be created for at least one of the key identifier clauses; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a key can be created for at least one of the key identifier clauses; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7635,7677],"content":"Gets the number of key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of key identifier clauses.","pos":[0,42]}]},{"pos":[7783,7820],"content":"The number of key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of key identifier clauses.","pos":[0,37]}]},{"pos":[8343,8395],"content":"Creates a key for one of the key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a key for one of the key identifier clauses.","pos":[0,52]}]},{"pos":[8407,8554],"content":"The <xref:System.IdentityModel.Tokens.SecurityKey> that is returned is for the first key identifier clause in the collection that can create a key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityKey&gt; that is returned is for the first key identifier clause in the collection that can create a key.","pos":[0,147],"source":"The <xref:System.IdentityModel.Tokens.SecurityKey> that is returned is for the first key identifier clause in the collection that can create a key."}]},{"pos":[8741,8836],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKey\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the created key.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that represents the created key."},{"pos":[9034,9099],"content":"A key could not be created for any of the key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"A key could not be created for any of the key identifier clauses.","pos":[0,65]}]},{"pos":[9706,9718],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10269,10354],"content":"Returns an enumerator that iterates through the collection of key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through the collection of key identifier clauses.","pos":[0,85]}]},{"pos":[10657,10823],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.List%601.Enumerator<ph id=\"ph2\">&amp;gt;</ph> of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the collection.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Collections.Generic.List%601.Enumerator&gt; of type <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> for the collection."},{"pos":[11355,11437],"content":"Gets a value that indicates whether the properties of this instance are read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the properties of this instance are read-only.","pos":[0,82]}]},{"pos":[11449,11641],"content":"To make this instance of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> class read-only, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"To make this instance of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier&gt; class read-only, call the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A&gt; method.","pos":[0,192],"source":"To make this instance of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> class read-only, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A> method."}]},{"pos":[11755,12019],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the properties of this instance are read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,185],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[186,264],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[12567,12621],"content":"Gets the key identifier clause at the specified index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the key identifier clause at the specified index.","pos":[0,54]}]},{"pos":[12809,12903],"content":"The zero-based index of the key identifier clause in the collection of key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index of the key identifier clause in the collection of key identifier clauses.","pos":[0,94]}]},{"pos":[13003,13107],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> at the specified index.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> at the specified index."},{"pos":[13305,13472],"content":"<code>index</code> is less than 0.       -or-       <code>index</code> is equal to or greater than <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.","pos":[0,34],"source":"<code>index</code> is less than 0."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*&gt;</ph>.","pos":[41,163],"source":"       -or-       <code>index</code> is equal to or greater than <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>."}]},{"pos":[13925,13962],"content":"Causes this instance to be read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Causes this instance to be read-only.","pos":[0,37]}]},{"pos":[13974,14237],"content":"When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set. For example, a key identifier clause cannot be added to this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the MakeReadOnly method is called, the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A&gt; property is set to <ph id=\"ph1\">`true`</ph> and properties of this instance can no longer be set.","pos":[0,194],"source":"When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set."},{"content":"For example, a key identifier clause cannot be added to this object.","pos":[195,263]}]},{"pos":[15027,15112],"content":"Returns an enumerator that iterates through the collection of key identifier clauses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through the collection of key identifier clauses.","pos":[0,85]}]},{"pos":[15290,15399],"content":"A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; that can be used to iterate through the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerator%601<ph id=\"ph2\">&amp;gt;</ph> that can be used to iterate through the collection.","pos":[0,109],"source":"A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; that can be used to iterate through the collection."}]},{"pos":[15956,15983],"content":"Returns the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the current object.","pos":[0,27]}]},{"pos":[15995,16094],"content":"The ToString method returns the details of all of the key identifier clauses in the key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ToString method returns the details of all of the key identifier clauses in the key identifier.","pos":[0,99]}]},{"pos":[16230,16249],"content":"The current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object.","pos":[0,19]}]},{"pos":[17013,17025],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17084,17096],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  id: SecurityKeyIdentifier\n  children:\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Count\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString\n  - System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)\n  langs:\n  - csharp\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  type: Class\n  summary: Represents a key identifier.\n  remarks: Typically, the SecurityKeyIdentifier is not used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. These references are represented by classes that derive from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class. The SecurityKeyIdentifier class contains the collection of these references.\n  syntax:\n    content: 'public class SecurityKeyIdentifier : System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: SecurityKeyIdentifier()\n  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> class.\n  syntax:\n    content: public SecurityKeyIdentifier ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])'\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])\n  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifier\"></xref> class using the specified key identifier clauses.\n  syntax:\n    content: public SecurityKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifierClause[] clauses);\n    parameters:\n    - id: clauses\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]\n      description: An array of <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> that contains the key identifier clauses.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>clauses</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: Add(SecurityKeyIdentifierClause)\n  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Adds a key identifier clause to the end of the list.\n  syntax:\n    content: public void Add (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);\n    parameters:\n    - id: clause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> to be added to the end of the list.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>clause</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*> property is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey\n  id: CanCreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: CanCreateKey\n  nameWithType: SecurityKeyIdentifier.CanCreateKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether a key can be created for at least one of the key identifier clauses.\n  syntax:\n    content: public bool CanCreateKey { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a key can be created for at least one of the key identifier clauses; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count\n  id: Count\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SecurityKeyIdentifier.Count\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the number of key identifier clauses.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of key identifier clauses.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey\n  id: CreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: CreateKey()\n  nameWithType: SecurityKeyIdentifier.CreateKey()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Creates a key for one of the key identifier clauses.\n  remarks: The <xref:System.IdentityModel.Tokens.SecurityKey> that is returned is for the first key identifier clause in the collection that can create a key.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKey CreateKey ();\n    parameters: []\n    return:\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: A <xref href=\"System.IdentityModel.Tokens.SecurityKey\"></xref> that represents the created key.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A key could not be created for any of the key identifier clauses.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1\n  id: Find``1\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: Find()\n  nameWithType: SecurityKeyIdentifier.Find()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  syntax:\n    content: 'public TClause Find<TClause> () where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters: []\n    return:\n      type: TClause\n      description: To be added.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator\n  id: GetEnumerator\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: SecurityKeyIdentifier.GetEnumerator()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns an enumerator that iterates through the collection of key identifier clauses.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}\n      description: A &lt;xref:System.Collections.Generic.List%601.Enumerator&gt; of type <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> for the collection.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly\n  id: IsReadOnly\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: SecurityKeyIdentifier.IsReadOnly\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the properties of this instance are read-only.\n  remarks: To make this instance of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> class read-only, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A> method.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the properties of this instance are read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: SecurityKeyIdentifier.Item(Int32)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the key identifier clause at the specified index.\n  syntax:\n    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the key identifier clause in the collection of key identifier clauses.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause\"></xref> at the specified index.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than 0.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>.\"\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly\n  id: MakeReadOnly\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: MakeReadOnly()\n  nameWithType: SecurityKeyIdentifier.MakeReadOnly()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Causes this instance to be read-only.\n  remarks: When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set. For example, a key identifier clause cannot be added to this object.\n  syntax:\n    content: public void MakeReadOnly ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns an enumerator that iterates through the collection of key identifier clauses.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: A &lt;xref:System.Collections.Generic.IEnumerator%601&gt; that can be used to iterate through the collection.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString\n  id: ToString\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SecurityKeyIdentifier.ToString()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns the current object.\n  remarks: The ToString method returns the details of all of the key identifier clauses in the key identifier.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The current object.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)\n  id: TryFind``1(``0@)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  langs:\n  - csharp\n  name: TryFind(TClause)\n  nameWithType: SecurityKeyIdentifier.TryFind(TClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  syntax:\n    content: 'public bool TryFind<TClause> (out TClause clause) where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'\n    parameters:\n    - id: clause\n      type: TClause\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: SecurityKeyIdentifier()\n  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])\n  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]\n  spec.csharp:\n  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n    name: SecurityKeyIdentifierClause\n    nameWithType: SecurityKeyIdentifierClause\n    fullName: SecurityKeyIdentifierClause[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Add(SecurityKeyIdentifierClause)\n  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: SecurityKeyIdentifier.CanCreateKey\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Count\n  nameWithType: SecurityKeyIdentifier.Count\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: CreateKey()\n  nameWithType: SecurityKeyIdentifier.CreateKey()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Find()\n  nameWithType: SecurityKeyIdentifier.Find()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()\n- uid: TClause\n  isExternal: true\n  name: TClause\n  nameWithType: TClause\n  fullName: TClause\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: SecurityKeyIdentifier.GetEnumerator()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<SecurityKeyIdentifierClause>\n  nameWithType: IEnumerator<SecurityKeyIdentifierClause>\n  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n    name: SecurityKeyIdentifierClause\n    nameWithType: SecurityKeyIdentifierClause\n    fullName: SecurityKeyIdentifierClause\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SecurityKeyIdentifier.IsReadOnly\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: SecurityKeyIdentifier.Item(Int32)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: MakeReadOnly()\n  nameWithType: SecurityKeyIdentifier.MakeReadOnly()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: ToString()\n  nameWithType: SecurityKeyIdentifier.ToString()\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: TryFind(TClause)\n  nameWithType: SecurityKeyIdentifier.TryFind(TClause)\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Add\n  nameWithType: SecurityKeyIdentifier.Add\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: SecurityKeyIdentifier.CanCreateKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Count\n  nameWithType: SecurityKeyIdentifier.Count\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: CreateKey\n  nameWithType: SecurityKeyIdentifier.CreateKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Find<TClause>\n  nameWithType: SecurityKeyIdentifier.Find<TClause>\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: SecurityKeyIdentifier.GetEnumerator\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SecurityKeyIdentifier.IsReadOnly\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: Item\n  nameWithType: SecurityKeyIdentifier.Item\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: MakeReadOnly\n  nameWithType: SecurityKeyIdentifier.MakeReadOnly\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: ToString\n  nameWithType: SecurityKeyIdentifier.ToString\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  isExternal: false\n  name: TryFind<TClause>\n  nameWithType: SecurityKeyIdentifier.TryFind<TClause>\n"}