{"nodes":[{"pos":[532,613],"content":"A specialization of the ConsoleLogger that logs to a file instead of the console.","needQuote":true,"needEscape":true,"nodes":[{"content":"A specialization of the ConsoleLogger that logs to a file instead of the console.","pos":[0,81]}]},{"pos":[625,852],"content":"The output in terms of what is written and how it looks is identical. For example you can log verbosely to a file using the FileLogger while simultaneously logging only high priority events to the console using a ConsoleLogger.","needQuote":true,"needEscape":true,"nodes":[{"content":"The output in terms of what is written and how it looks is identical. For example you can log verbosely to a file using the FileLogger while simultaneously logging only high priority events to the console using a ConsoleLogger.","pos":[0,227],"nodes":[{"content":"The output in terms of what is written and how it looks is identical.","pos":[0,69]},{"content":"For example you can log verbosely to a file using the FileLogger while simultaneously logging only high priority events to the console using a ConsoleLogger.","pos":[70,227]}]}]},{"pos":[3287,3309],"content":"Creates a file logger.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a file logger.","pos":[0,22]}]},{"pos":[3937,3997],"content":"Signs up the console file logger for the given build events.","needQuote":true,"needEscape":true,"nodes":[{"content":"Signs up the console file logger for the given build events.","pos":[0,60]}]},{"pos":[4215,4236],"content":"The available events.","needQuote":true,"needEscape":true,"nodes":[{"content":"The available events.","pos":[0,21]}]},{"pos":[4849,4907],"content":"Initializes a file logger in a multiprocessor environment.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a file logger in a multiprocessor environment.","pos":[0,58]}]},{"pos":[5140,5157],"content":"The event source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event source.","pos":[0,17]}]},{"pos":[5222,5237],"content":"The node count.","needQuote":true,"needEscape":true,"nodes":[{"content":"The node count.","pos":[0,15]}]},{"pos":[5680,5714],"content":"Called when the build is finished.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the build is finished.","pos":[0,34]}]},{"pos":[5726,5771],"content":"The method must flush and close the file log.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method must flush and close the file log.","pos":[0,45]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Logging.FileLogger\n  id: FileLogger\n  children:\n  - Microsoft.Build.Logging.FileLogger.#ctor\n  - Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)\n  - Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  - Microsoft.Build.Logging.FileLogger.Shutdown\n  langs:\n  - csharp\n  name: FileLogger\n  nameWithType: FileLogger\n  fullName: Microsoft.Build.Logging.FileLogger\n  type: Class\n  summary: A specialization of the ConsoleLogger that logs to a file instead of the console.\n  remarks: The output in terms of what is written and how it looks is identical. For example you can log verbosely to a file using the FileLogger while simultaneously logging only high priority events to the console using a ConsoleLogger.\n  syntax:\n    content: 'public class FileLogger : Microsoft.Build.Logging.ConsoleLogger'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Logging.ConsoleLogger\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Logging.ConsoleLogger.ApplyParameter(System.String,System.String)\n  - Microsoft.Build.Logging.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.Parameters\n  - Microsoft.Build.Logging.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.ShowSummary\n  - Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText\n  - Microsoft.Build.Logging.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.Verbosity\n  - Microsoft.Build.Logging.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)\n  - Microsoft.Build.Logging.ConsoleLogger.WriteHandler\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.FileLogger.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Logging.FileLogger\n  langs:\n  - csharp\n  name: FileLogger()\n  nameWithType: FileLogger.FileLogger()\n  fullName: Microsoft.Build.Logging.FileLogger.FileLogger()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Creates a file logger.\n  syntax:\n    content: public FileLogger ();\n    parameters: []\n  overload: Microsoft.Build.Logging.FileLogger.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)\n  id: Initialize(Microsoft.Build.Framework.IEventSource)\n  parent: Microsoft.Build.Logging.FileLogger\n  langs:\n  - csharp\n  name: Initialize(IEventSource)\n  nameWithType: FileLogger.Initialize(IEventSource)\n  fullName: Microsoft.Build.Logging.FileLogger.Initialize(IEventSource)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Signs up the console file logger for the given build events.\n  syntax:\n    content: public override void Initialize (Microsoft.Build.Framework.IEventSource eventSource);\n    parameters:\n    - id: eventSource\n      type: Microsoft.Build.Framework.IEventSource\n      description: The available events.\n  overload: Microsoft.Build.Logging.FileLogger.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  id: Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  parent: Microsoft.Build.Logging.FileLogger\n  langs:\n  - csharp\n  name: Initialize(IEventSource,Int32)\n  nameWithType: FileLogger.Initialize(IEventSource,Int32)\n  fullName: Microsoft.Build.Logging.FileLogger.Initialize(IEventSource,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Initializes a file logger in a multiprocessor environment.\n  syntax:\n    content: public override void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int nodeCount);\n    parameters:\n    - id: eventSource\n      type: Microsoft.Build.Framework.IEventSource\n      description: The event source.\n    - id: nodeCount\n      type: System.Int32\n      description: The node count.\n  overload: Microsoft.Build.Logging.FileLogger.Initialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: Microsoft.Build.Logging.FileLogger.Shutdown\n  id: Shutdown\n  parent: Microsoft.Build.Logging.FileLogger\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: FileLogger.Shutdown()\n  fullName: Microsoft.Build.Logging.FileLogger.Shutdown()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Logging\n  summary: Called when the build is finished.\n  remarks: The method must flush and close the file log.\n  syntax:\n    content: public override void Shutdown ();\n    parameters: []\n  overload: Microsoft.Build.Logging.FileLogger.Shutdown*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: Microsoft.Build.Logging.ConsoleLogger\n  isExternal: false\n  name: Microsoft.Build.Logging.ConsoleLogger\n- uid: Microsoft.Build.Logging.FileLogger.#ctor\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: FileLogger()\n  nameWithType: FileLogger.FileLogger()\n  fullName: Microsoft.Build.Logging.FileLogger.FileLogger()\n- uid: Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: Initialize(IEventSource)\n  nameWithType: FileLogger.Initialize(IEventSource)\n  fullName: Microsoft.Build.Logging.FileLogger.Initialize(IEventSource)\n- uid: Microsoft.Build.Framework.IEventSource\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IEventSource\n  nameWithType: IEventSource\n  fullName: Microsoft.Build.Framework.IEventSource\n- uid: Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: Initialize(IEventSource,Int32)\n  nameWithType: FileLogger.Initialize(IEventSource,Int32)\n  fullName: Microsoft.Build.Logging.FileLogger.Initialize(IEventSource,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Logging.FileLogger.Shutdown\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: Shutdown()\n  nameWithType: FileLogger.Shutdown()\n  fullName: Microsoft.Build.Logging.FileLogger.Shutdown()\n- uid: Microsoft.Build.Logging.FileLogger.#ctor*\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: FileLogger\n  nameWithType: FileLogger.FileLogger\n- uid: Microsoft.Build.Logging.FileLogger.Initialize*\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: Initialize\n  nameWithType: FileLogger.Initialize\n- uid: Microsoft.Build.Logging.FileLogger.Shutdown*\n  parent: Microsoft.Build.Logging.FileLogger\n  isExternal: false\n  name: Shutdown\n  nameWithType: FileLogger.Shutdown\n"}