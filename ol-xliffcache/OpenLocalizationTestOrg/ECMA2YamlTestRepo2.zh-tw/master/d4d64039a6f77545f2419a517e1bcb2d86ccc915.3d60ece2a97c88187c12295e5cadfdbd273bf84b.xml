{"nodes":[{"pos":[429,581],"content":"Provides the configuration setting for International Resource Identifier (IRI) processing in the &lt;xref:System.Uri?displayProperty=fullName&gt; class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the configuration setting for International Resource Identifier (IRI) processing in the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Uri?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph> class.","pos":[0,152],"source":"Provides the configuration setting for International Resource Identifier (IRI) processing in the &lt;xref:System.Uri?displayProperty=fullName&gt; class."}]},{"pos":[594,1298],"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.       The configuration setting for the IriParsingElement will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.       For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.       The configuration setting for the IriParsingElement will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.       For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","pos":[0,700],"nodes":[{"content":"The existing &lt;xref:System.Uri?displayProperty=fullName&gt; class has been extended to provide support for International Resource Identifiers (IRI) based on RFC 3987.","pos":[0,162],"source":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) based on RFC 3987."},{"content":"Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.","pos":[163,274]},{"content":"This ensures application compatibility with prior versions of the .NET Framework.","pos":[275,356]},{"content":"The configuration setting for the IriParsingElement will be read once when the first &lt;xref:System.Uri?displayProperty=fullName&gt; class is constructed.","pos":[363,512],"source":"       The configuration setting for the IriParsingElement will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed."},{"content":"Changes to configuration settings after that time are ignored.","pos":[513,575]},{"content":"For more information on IRI support, see the Remarks section for the &lt;xref:System.Uri?displayProperty=fullName&gt; class.","pos":[582,700],"source":"       For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class."}]}]},{"pos":[4620,4720],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.IriParsingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Configuration.IriParsingElement\"></xref> class."},{"pos":[4732,4814],"content":"This constructor creates a <xref:System.Configuration.IriParsingElement> instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor creates a &lt;xref:System.Configuration.IriParsingElement&gt; instance.","pos":[0,82],"source":"This constructor creates a <xref:System.Configuration.IriParsingElement> instance."}]},{"pos":[5325,5437],"content":"Gets or sets the value of the <bpt id=\"p1\">&lt;xref href=\"System.Configuration.IriParsingElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> configuration setting.","needQuote":true,"needEscape":true,"source":"Gets or sets the value of the <xref href=\"System.Configuration.IriParsingElement\"></xref> configuration setting."},{"pos":[5450,6387],"content":"The <xref:System.Configuration.IriParsingElement> configuration setting controls IRI processing in the <xref:System.Uri?displayProperty=fullName> class. This setting also indirectly controls International Domain Name (IDN) processing set with the <xref:System.Configuration.IdnElement?displayProperty=fullName> class. IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.       The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.       For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <xref:System.Configuration.IriParsingElement> configuration setting controls IRI processing in the <xref:System.Uri?displayProperty=fullName> class. This setting also indirectly controls International Domain Name (IDN) processing set with the <xref:System.Configuration.IdnElement?displayProperty=fullName> class. IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.       The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.       For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","pos":[0,933],"nodes":[{"content":"The &lt;xref:System.Configuration.IriParsingElement&gt; configuration setting controls IRI processing in the &lt;xref:System.Uri?displayProperty=fullName&gt; class.","pos":[0,152],"source":"The <xref:System.Configuration.IriParsingElement> configuration setting controls IRI processing in the <xref:System.Uri?displayProperty=fullName> class."},{"content":"This setting also indirectly controls International Domain Name (IDN) processing set with the &lt;xref:System.Configuration.IdnElement?displayProperty=fullName&gt; class.","pos":[153,317],"source":" This setting also indirectly controls International Domain Name (IDN) processing set with the <xref:System.Configuration.IdnElement?displayProperty=fullName> class."},{"content":"IRI processing must be enabled for IDN processing to be possible.","pos":[318,383]},{"content":"If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","pos":[384,561]},{"content":"The configuration setting for the &lt;xref:System.Configuration.IriParsingElement&gt; will be read once when the first &lt;xref:System.Uri?displayProperty=fullName&gt; class is constructed.","pos":[568,745],"source":"       The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed."},{"content":"Changes to configuration settings after that time are ignored.","pos":[746,808]},{"content":"For more information on IRI support, see the Remarks section for the &lt;xref:System.Uri?displayProperty=fullName&gt; class.","pos":[815,933],"source":"       For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class."}]}]},{"pos":[6504,6594],"content":"A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.","pos":[0,90]}]},{"pos":[7251,7263],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.IriParsingElement\n  id: IriParsingElement\n  children:\n  - System.Configuration.IriParsingElement.#ctor\n  - System.Configuration.IriParsingElement.Enabled\n  - System.Configuration.IriParsingElement.Properties\n  langs:\n  - csharp\n  name: IriParsingElement\n  nameWithType: IriParsingElement\n  fullName: System.Configuration.IriParsingElement\n  type: Class\n  summary: Provides the configuration setting for International Resource Identifier (IRI) processing in the &lt;xref:System.Uri?displayProperty=fullName&gt; class.\n  remarks: \"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.  \\n  \\n The configuration setting for the IriParsingElement will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \\n  \\n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.\"\n  syntax:\n    content: 'public sealed class IriParsingElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  platform:\n  - net462\n- uid: System.Configuration.IriParsingElement.#ctor\n  id: '#ctor'\n  parent: System.Configuration.IriParsingElement\n  langs:\n  - csharp\n  name: IriParsingElement()\n  nameWithType: IriParsingElement.IriParsingElement()\n  fullName: System.Configuration.IriParsingElement.IriParsingElement()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.IriParsingElement\"></xref> class.\n  remarks: This constructor creates a <xref:System.Configuration.IriParsingElement> instance.\n  syntax:\n    content: public IriParsingElement ();\n    parameters: []\n  overload: System.Configuration.IriParsingElement.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.IriParsingElement.Enabled\n  id: Enabled\n  parent: System.Configuration.IriParsingElement\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: IriParsingElement.Enabled\n  fullName: System.Configuration.IriParsingElement.Enabled\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Configuration\n  summary: Gets or sets the value of the <xref href=\"System.Configuration.IriParsingElement\"></xref> configuration setting.\n  remarks: \"The <xref:System.Configuration.IriParsingElement> configuration setting controls IRI processing in the <xref:System.Uri?displayProperty=fullName> class. This setting also indirectly controls International Domain Name (IDN) processing set with the <xref:System.Configuration.IdnElement?displayProperty=fullName> class. IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  \\n  \\n The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \\n  \\n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.\"\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.\n  overload: System.Configuration.IriParsingElement.Enabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Configuration.IriParsingElement.Properties\n  id: Properties\n  parent: System.Configuration.IriParsingElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: IriParsingElement.Properties\n  fullName: System.Configuration.IriParsingElement.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: To be added.\n  overload: System.Configuration.IriParsingElement.Properties*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: System.Configuration.ConfigurationElement\n- uid: System.Configuration.IriParsingElement.#ctor\n  parent: System.Configuration.IriParsingElement\n  isExternal: false\n  name: IriParsingElement()\n  nameWithType: IriParsingElement.IriParsingElement()\n  fullName: System.Configuration.IriParsingElement.IriParsingElement()\n- uid: System.Configuration.IriParsingElement.Enabled\n  parent: System.Configuration.IriParsingElement\n  isExternal: false\n  name: Enabled\n  nameWithType: IriParsingElement.Enabled\n  fullName: System.Configuration.IriParsingElement.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.IriParsingElement.Properties\n  parent: System.Configuration.IriParsingElement\n  isExternal: false\n  name: Properties\n  nameWithType: IriParsingElement.Properties\n  fullName: System.Configuration.IriParsingElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Configuration.IriParsingElement.#ctor*\n  parent: System.Configuration.IriParsingElement\n  isExternal: false\n  name: IriParsingElement\n  nameWithType: IriParsingElement.IriParsingElement\n- uid: System.Configuration.IriParsingElement.Enabled*\n  parent: System.Configuration.IriParsingElement\n  isExternal: false\n  name: Enabled\n  nameWithType: IriParsingElement.Enabled\n- uid: System.Configuration.IriParsingElement.Properties*\n  parent: System.Configuration.IriParsingElement\n  isExternal: false\n  name: Properties\n  nameWithType: IriParsingElement.Properties\n"}