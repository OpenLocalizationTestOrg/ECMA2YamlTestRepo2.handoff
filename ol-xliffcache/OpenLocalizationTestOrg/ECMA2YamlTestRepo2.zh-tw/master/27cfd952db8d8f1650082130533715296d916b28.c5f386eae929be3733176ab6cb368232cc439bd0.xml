{"nodes":[{"pos":[570,687],"content":"Specifies which HTTP verb is used to invoke a method, and the format of the response. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies which HTTP verb is used to invoke a method, and the format of the response. This class cannot be inherited.","pos":[0,117],"nodes":[{"content":"Specifies which HTTP verb is used to invoke a method, and the format of the response.","pos":[0,85]},{"content":"This class cannot be inherited.","pos":[86,117]}]}]},{"pos":[700,3113],"content":"This attribute is used to specify information for methods that can be called from client script. The attribute lets you specify which HTTP verb (GET or POST) can be used to invoke a method. It also lets you specify whether the response is formatted by using either JavaScript Object Notation (JSON) or XML.       The ScriptMethodAttribute attribute is optional. (However, methods that can be called from client script must have the <xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> attribute applied.). If a method is not marked with ScriptMethodAttribute, the method will be called by using the HTTP POST command and the response will be serialized as JSON. You cannot override this setting from script.       ScriptMethodAttribute takes only named parameters. The following are the properties of the ScriptMethodAttribute class that can be used as named parameters:      -   <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>           Specifies whether the method will be invoked by using the HTTP GET command. The default is `false`.          > [!IMPORTANT]     >  Setting the <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> property to `true` might pose a security risk for your application if you are working with sensitive data or transactions. In GET requests, the message is encoded by the browser into the URL and is therefore an easier target for tampering. For both GET and POST requests, you should follow security guidelines to protect sensitive data.      -   <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>           Specifies whether the response will be serialized as JSON or as XML. The default is `Json`. The <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> property is useful to specify XML as the return type when the method returns an <xref:System.Xml.XmlDocument> or an <xref:System.Xml.XmlElement> object.      -   <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>           Specifies whether all return types, including string types, are serialized as XML. The value of the <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> property is ignored when the response is serialized as JSON.       For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"This attribute is used to specify information for methods that can be called from client script.","pos":[0,96]},{"content":"The attribute lets you specify which HTTP verb (GET or POST) can be used to invoke a method.","pos":[97,189]},{"content":"It also lets you specify whether the response is formatted by using either JavaScript Object Notation (JSON) or XML.","pos":[190,306]},{"content":"The ScriptMethodAttribute attribute is optional.","pos":[313,361]},{"content":"(However, methods that can be called from client script must have the &lt;xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName&gt; attribute applied.).","pos":[362,523],"source":" (However, methods that can be called from client script must have the <xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> attribute applied.)."},{"content":"If a method is not marked with ScriptMethodAttribute, the method will be called by using the HTTP POST command and the response will be serialized as JSON.","pos":[524,679]},{"content":"You cannot override this setting from script.","pos":[680,725]},{"content":"ScriptMethodAttribute takes only named parameters.","pos":[732,782]},{"content":"The following are the properties of the ScriptMethodAttribute class that can be used as named parameters:      -   &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A&gt;           Specifies whether the method will be invoked by using the HTTP GET command.","pos":[783,1053],"source":" The following are the properties of the ScriptMethodAttribute class that can be used as named parameters:      -   <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>           Specifies whether the method will be invoked by using the HTTP GET command."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[1054,1077],"source":" The default is `false`."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph>     &gt;  Setting the &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A&gt; property to <ph id=\"ph2\">`true`</ph> might pose a security risk for your application if you are working with sensitive data or transactions.","pos":[1087,1313],"source":"          > [!IMPORTANT]     >  Setting the <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> property to `true` might pose a security risk for your application if you are working with sensitive data or transactions."},{"content":"In GET requests, the message is encoded by the browser into the URL and is therefore an easier target for tampering.","pos":[1314,1430]},{"content":"For both GET and POST requests, you should follow security guidelines to protect sensitive data.","pos":[1431,1527]},{"content":"-   &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A&gt;           Specifies whether the response will be serialized as JSON or as XML.","pos":[1533,1689],"source":"      -   <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>           Specifies whether the response will be serialized as JSON or as XML."},{"content":"The default is <ph id=\"ph1\">`Json`</ph>.","pos":[1690,1712],"source":" The default is `Json`."},{"content":"The &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A&gt; property is useful to specify XML as the return type when the method returns an &lt;xref:System.Xml.XmlDocument&gt; or an &lt;xref:System.Xml.XmlElement&gt; object.","pos":[1713,1943],"source":" The <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> property is useful to specify XML as the return type when the method returns an <xref:System.Xml.XmlDocument> or an <xref:System.Xml.XmlElement> object."},{"content":"-   &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A&gt;           Specifies whether all return types, including string types, are serialized as XML.","pos":[1949,2123],"source":"      -   <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>           Specifies whether all return types, including string types, are serialized as XML."},{"content":"The value of the &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A&gt; property is ignored when the response is serialized as JSON.","pos":[2124,2279],"source":" The value of the <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> property is ignored when the response is serialized as JSON."},{"content":"For more information about how to use attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2286,2392],"source":"       For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4139,4249],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Services.ScriptMethodAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Script.Services.ScriptMethodAttribute\"></xref> class."},{"pos":[4864,4911],"content":"Gets or sets the format of the method response.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the format of the method response.","pos":[0,47]}]},{"pos":[4924,5753],"content":"Use the ResponseFormat property when you want to specify XML as the format for the return type. This is useful when the method returns an <xref:System.Xml.XmlDocument> or an <xref:System.Xml.XmlElement> object.       When the ResponseFormat property is set to `Xml`, the public fields and properties of the return type that have the <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> attribute applied will not be ignored. This is because they will be serialized by using the <xref:System.Xml.Serialization.XmlSerializer> object instead of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object. You must apply the <xref:System.Xml.Serialization.XmlIgnoreAttribute> attribute to make <xref:System.Xml.Serialization.XmlSerializer> ignore, or skip, those public fields and properties of the return type.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ResponseFormat property when you want to specify XML as the format for the return type.","pos":[0,95]},{"content":"This is useful when the method returns an &lt;xref:System.Xml.XmlDocument&gt; or an &lt;xref:System.Xml.XmlElement&gt; object.","pos":[96,210],"source":" This is useful when the method returns an <xref:System.Xml.XmlDocument> or an <xref:System.Xml.XmlElement> object."},{"content":"When the ResponseFormat property is set to <ph id=\"ph1\">`Xml`</ph>, the public fields and properties of the return type that have the &lt;xref:System.Web.Script.Serialization.ScriptIgnoreAttribute&gt; attribute applied will not be ignored.","pos":[217,432],"source":"       When the ResponseFormat property is set to `Xml`, the public fields and properties of the return type that have the <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> attribute applied will not be ignored."},{"content":"This is because they will be serialized by using the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; object instead of the &lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt; object.","pos":[433,621],"source":" This is because they will be serialized by using the <xref:System.Xml.Serialization.XmlSerializer> object instead of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object."},{"content":"You must apply the &lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt; attribute to make &lt;xref:System.Xml.Serialization.XmlSerializer&gt; ignore, or skip, those public fields and properties of the return type.","pos":[622,827],"source":" You must apply the <xref:System.Xml.Serialization.XmlIgnoreAttribute> attribute to make <xref:System.Xml.Serialization.XmlSerializer> ignore, or skip, those public fields and properties of the return type."}]},{"pos":[6536,6694],"content":"One of the <xref href=\"System.Web.Script.Services.ResponseFormat\"></xref> values. The default is <xref uid=\"langword_csharp_Json\" name=\"Json\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Script.Services.ResponseFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,81],"source":"One of the <xref href=\"System.Web.Script.Services.ResponseFormat\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Json\" name=\"Json\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[82,158],"source":" The default is <xref uid=\"langword_csharp_Json\" name=\"Json\" href=\"\"></xref>."}]},{"pos":[7223,7306],"content":"Gets or sets a value that indicates whether to invoke the method by using HTTP GET.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether to invoke the method by using HTTP GET.","pos":[0,83]}]},{"pos":[7319,8385],"content":"You cannot override this property from ECMAScript (JavaScript) on the client. If this property is set to `true`, invoking the method from script will always use HTTP GET.       When this property is set to `true`, the client proxy code uses HTTP GET to call the Web service. Each input parameter for the method appears as a query parameter in the URL that is used to invoke the Web method. The parameter value is obtained through JavaScript Object Notation (JSON) serialization and URL encoding of the parameter value.       The use of HTTP GET for invoking the Web service method follows the same guidelines for any other Web interaction. HTTP GET should be used only for operations where no sensitive data is exposed and when the server action does not have side effects.      > [!IMPORTANT] >  Setting the UseHttpGet property to `true` might pose a security risk for your application if you are working with sensitive data or transactions. In GET requests, the message is encoded by the browser into the URL and is therefore an easier target for tampering.","needQuote":false,"needEscape":true,"nodes":[{"content":"You cannot override this property from ECMAScript (JavaScript) on the client.","pos":[0,77]},{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, invoking the method from script will always use HTTP GET.","pos":[78,170],"source":" If this property is set to `true`, invoking the method from script will always use HTTP GET."},{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the client proxy code uses HTTP GET to call the Web service.","pos":[177,274],"source":"       When this property is set to `true`, the client proxy code uses HTTP GET to call the Web service."},{"content":"Each input parameter for the method appears as a query parameter in the URL that is used to invoke the Web method.","pos":[275,389]},{"content":"The parameter value is obtained through JavaScript Object Notation (JSON) serialization and URL encoding of the parameter value.","pos":[390,518]},{"content":"The use of HTTP GET for invoking the Web service method follows the same guidelines for any other Web interaction.","pos":[525,639]},{"content":"HTTP GET should be used only for operations where no sensitive data is exposed and when the server action does not have side effects.","pos":[640,773]},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  Setting the UseHttpGet property to <ph id=\"ph2\">`true`</ph> might pose a security risk for your application if you are working with sensitive data or transactions.","pos":[779,942],"source":"      > [!IMPORTANT] >  Setting the UseHttpGet property to `true` might pose a security risk for your application if you are working with sensitive data or transactions."},{"content":"In GET requests, the message is encoded by the browser into the URL and is therefore an easier target for tampering.","pos":[943,1059]}]},{"pos":[8930,9245],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is invoked by using the HTTP GET command; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the method is invoked by using the HTTP POST command. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the method is invoked by using the HTTP GET command; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the method is invoked by using the HTTP POST command.","pos":[0,236],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is invoked by using the HTTP GET command; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the method is invoked by using the HTTP POST command."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[237,315],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[9810,9922],"content":"Gets or sets a value that indicates whether all return types are serialized as XML, which includes string types.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether all return types are serialized as XML, which includes string types.","pos":[0,112]}]},{"pos":[9935,10479],"content":"When this property is set to `false`, all return types are serialized as XML, except string, which is interpreted as XML markup. If the value is `false`, and if the return type is a string, and if the string does not contain XML markup that corresponds to a well-formed XML document, the succeeded callback function will be invoked but the resulting serialized string will be `null`.       The value of XmlSerializeString is ignored when the <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> property is set to `Json`.","needQuote":false,"needEscape":true,"nodes":[{"content":"When this property is set to <ph id=\"ph1\">`false`</ph>, all return types are serialized as XML, except string, which is interpreted as XML markup.","pos":[0,128],"source":"When this property is set to `false`, all return types are serialized as XML, except string, which is interpreted as XML markup."},{"content":"If the value is <ph id=\"ph1\">`false`</ph>, and if the return type is a string, and if the string does not contain XML markup that corresponds to a well-formed XML document, the succeeded callback function will be invoked but the resulting serialized string will be <ph id=\"ph2\">`null`</ph>.","pos":[129,383],"source":" If the value is `false`, and if the return type is a string, and if the string does not contain XML markup that corresponds to a well-formed XML document, the succeeded callback function will be invoked but the resulting serialized string will be `null`."},{"content":"The value of XmlSerializeString is ignored when the &lt;xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A&gt; property is set to <ph id=\"ph1\">`Json`</ph>.","pos":[390,542],"source":"       The value of XmlSerializeString is ignored when the <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> property is set to `Json`."}]},{"pos":[11040,11297],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all return types are serialized as XML; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if all return types are serialized as XML; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,178],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all return types are serialized as XML; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[179,257],"source":" The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Script.Services.ScriptMethodAttribute\n  id: ScriptMethodAttribute\n  children:\n  - System.Web.Script.Services.ScriptMethodAttribute.#ctor\n  - System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat\n  - System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet\n  - System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString\n  langs:\n  - csharp\n  name: ScriptMethodAttribute\n  nameWithType: ScriptMethodAttribute\n  fullName: System.Web.Script.Services.ScriptMethodAttribute\n  type: Class\n  summary: Specifies which HTTP verb is used to invoke a method, and the format of the response. This class cannot be inherited.\n  remarks: \"This attribute is used to specify information for methods that can be called from client script. The attribute lets you specify which HTTP verb (GET or POST) can be used to invoke a method. It also lets you specify whether the response is formatted by using either JavaScript Object Notation (JSON) or XML.  \\n  \\n The ScriptMethodAttribute attribute is optional. (However, methods that can be called from client script must have the <xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> attribute applied.). If a method is not marked with ScriptMethodAttribute, the method will be called by using the HTTP POST command and the response will be serialized as JSON. You cannot override this setting from script.  \\n  \\n ScriptMethodAttribute takes only named parameters. The following are the properties of the ScriptMethodAttribute class that can be used as named parameters:  \\n  \\n-   <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>  \\n  \\n     Specifies whether the method will be invoked by using the HTTP GET command. The default is `false`.  \\n  \\n    > [!IMPORTANT]\\n    >  Setting the <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> property to `true` might pose a security risk for your application if you are working with sensitive data or transactions. In GET requests, the message is encoded by the browser into the URL and is therefore an easier target for tampering. For both GET and POST requests, you should follow security guidelines to protect sensitive data.  \\n  \\n-   <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>  \\n  \\n     Specifies whether the response will be serialized as JSON or as XML. The default is `Json`. The <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> property is useful to specify XML as the return type when the method returns an <xref:System.Xml.XmlDocument> or an <xref:System.Xml.XmlElement> object.  \\n  \\n-   <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>  \\n  \\n     Specifies whether all return types, including string types, are serialized as XML. The value of the <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> property is ignored when the response is serialized as JSON.  \\n  \\n For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example shows how to apply ScriptMethodAttribute to the `GetXmlDocument` and `EchoStringAndDate` methods to specify which HTTP verb to use and to specify the response format.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method)]\n\n      public sealed class ScriptMethodAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor\n  id: '#ctor'\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  langs:\n  - csharp\n  name: ScriptMethodAttribute()\n  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Initializes a new instance of the <xref href=\"System.Web.Script.Services.ScriptMethodAttribute\"></xref> class.\n  syntax:\n    content: public ScriptMethodAttribute ();\n    parameters: []\n  overload: System.Web.Script.Services.ScriptMethodAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat\n  id: ResponseFormat\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  langs:\n  - csharp\n  name: ResponseFormat\n  nameWithType: ScriptMethodAttribute.ResponseFormat\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Gets or sets the format of the method response.\n  remarks: \"Use the ResponseFormat property when you want to specify XML as the format for the return type. This is useful when the method returns an <xref:System.Xml.XmlDocument> or an <xref:System.Xml.XmlElement> object.  \\n  \\n When the ResponseFormat property is set to `Xml`, the public fields and properties of the return type that have the <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> attribute applied will not be ignored. This is because they will be serialized by using the <xref:System.Xml.Serialization.XmlSerializer> object instead of the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object. You must apply the <xref:System.Xml.Serialization.XmlIgnoreAttribute> attribute to make <xref:System.Xml.Serialization.XmlSerializer> ignore, or skip, those public fields and properties of the return type.\"\n  example:\n  - \"The following example shows how to apply the <xref:System.Web.Script.Services.ScriptMethodAttribute> attribute to a Web method with the ResponseFormat property set to `Xml`. The return value of the method will be serialized as XML and sent to the succeeded callback function as an object of type <xref:System.Xml.XmlDocument>. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }\n    return:\n      type: System.Web.Script.Services.ResponseFormat\n      description: One of the <xref href=\"System.Web.Script.Services.ResponseFormat\"></xref> values. The default is <xref uid=\"langword_csharp_Json\" name=\"Json\" href=\"\"></xref>.\n  overload: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet\n  id: UseHttpGet\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  langs:\n  - csharp\n  name: UseHttpGet\n  nameWithType: ScriptMethodAttribute.UseHttpGet\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Gets or sets a value that indicates whether to invoke the method by using HTTP GET.\n  remarks: \"You cannot override this property from ECMAScript (JavaScript) on the client. If this property is set to `true`, invoking the method from script will always use HTTP GET.  \\n  \\n When this property is set to `true`, the client proxy code uses HTTP GET to call the Web service. Each input parameter for the method appears as a query parameter in the URL that is used to invoke the Web method. The parameter value is obtained through JavaScript Object Notation (JSON) serialization and URL encoding of the parameter value.  \\n  \\n The use of HTTP GET for invoking the Web service method follows the same guidelines for any other Web interaction. HTTP GET should be used only for operations where no sensitive data is exposed and when the server action does not have side effects.  \\n  \\n> [!IMPORTANT]\\n>  Setting the UseHttpGet property to `true` might pose a security risk for your application if you are working with sensitive data or transactions. In GET requests, the message is encoded by the browser into the URL and is therefore an easier target for tampering.\"\n  example:\n  - \"The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the UseHttpGet property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public bool UseHttpGet { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the method is invoked by using the HTTP GET command; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the method is invoked by using the HTTP POST command. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString\n  id: XmlSerializeString\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  langs:\n  - csharp\n  name: XmlSerializeString\n  nameWithType: ScriptMethodAttribute.XmlSerializeString\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Services\n  summary: Gets or sets a value that indicates whether all return types are serialized as XML, which includes string types.\n  remarks: \"When this property is set to `false`, all return types are serialized as XML, except string, which is interpreted as XML markup. If the value is `false`, and if the return type is a string, and if the string does not contain XML markup that corresponds to a well-formed XML document, the succeeded callback function will be invoked but the resulting serialized string will be `null`.  \\n  \\n The value of XmlSerializeString is ignored when the <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> property is set to `Json`.\"\n  example:\n  - \"The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the XmlSerializeString property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \\n  \\n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]\"\n  syntax:\n    content: public bool XmlSerializeString { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if all return types are serialized as XML; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: ScriptMethodAttribute()\n  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()\n- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: ResponseFormat\n  nameWithType: ScriptMethodAttribute.ResponseFormat\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat\n- uid: System.Web.Script.Services.ResponseFormat\n  parent: System.Web.Script.Services\n  isExternal: false\n  name: ResponseFormat\n  nameWithType: ResponseFormat\n  fullName: System.Web.Script.Services.ResponseFormat\n- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: UseHttpGet\n  nameWithType: ScriptMethodAttribute.UseHttpGet\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: XmlSerializeString\n  nameWithType: ScriptMethodAttribute.XmlSerializeString\n  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString\n- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor*\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: ScriptMethodAttribute\n  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute\n- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: ResponseFormat\n  nameWithType: ScriptMethodAttribute.ResponseFormat\n- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: UseHttpGet\n  nameWithType: ScriptMethodAttribute.UseHttpGet\n- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*\n  parent: System.Web.Script.Services.ScriptMethodAttribute\n  isExternal: false\n  name: XmlSerializeString\n  nameWithType: ScriptMethodAttribute.XmlSerializeString\n"}