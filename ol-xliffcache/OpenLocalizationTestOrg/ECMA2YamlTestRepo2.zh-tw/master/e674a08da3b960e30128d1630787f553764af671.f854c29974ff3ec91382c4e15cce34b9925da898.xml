{"nodes":[{"pos":[1715,1893],"content":"Represents a managed OracleBFile object designed to work with the Oracle <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data type. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a managed OracleBFile object designed to work with the Oracle <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> data type.","pos":[0,146],"source":"Represents a managed OracleBFile object designed to work with the Oracle <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data type."},{"content":"This class cannot be inherited.","pos":[147,178]}]},{"pos":[1906,5301],"content":"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes. An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server. Note that the `BFILE` data type provides read-only access to data. Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported.       Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:      -   Contains unstructured data.      -   Supports server-side chunking.      -   Uses reference copy semantics. For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied. The data in the file is not copied.       The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database. There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type. It is more efficient to access a `BFILE` if you only need to obtain a small amount of data. It is more efficient to access database-resident `LOB`s if you need to obtain the entire object.       Each non-NULL OracleBFile object is associated with two entities that define the location of the underlying physical file:      -   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and      -   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.       After a `BFILE` is created, you can retrieve its locator in the form of an OracleBFile object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods.       To obtain an OracleBFile object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method.       The physical file that an OracleBFile object is associated with does not need to exist until you attempt to access it. An application can bind an OracleBFile to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.       Any attempt to access a closed OracleBFile using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an OracleBFile stream automatically.       The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an OracleBFile object. The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods.       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs)]       For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.      > [!NOTE] >  The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Oracle <ph id=\"ph1\">`BFILE`</ph> data type is an Oracle <ph id=\"ph2\">`LOB`</ph> data type that contains a reference to binary data with a maximum size of 4 gigabytes.","pos":[0,134],"source":"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes."},{"content":"An Oracle <ph id=\"ph1\">`BFILE`</ph> differs from other Oracle <ph id=\"ph2\">`LOB`</ph> data types in that its data is stored in a physical file in the operating system instead of on the server.","pos":[135,291],"source":" An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server."},{"content":"Note that the <ph id=\"ph1\">`BFILE`</ph> data type provides read-only access to data.","pos":[292,358],"source":" Note that the `BFILE` data type provides read-only access to data."},{"content":"Therefore, write-oriented methods inherited from the &lt;xref:System.IO.Stream&gt; class are not supported.","pos":[359,460],"source":" Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported."},{"content":"Other characteristics of a <ph id=\"ph1\">`BFILE`</ph> data type that distinguish it from a <ph id=\"ph2\">`LOB`</ph> data type are that it:      -   Contains unstructured data.","pos":[467,604],"source":"       Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:      -   Contains unstructured data."},{"content":"-   Supports server-side chunking.","pos":[610,644]},{"content":"-   Uses reference copy semantics.","pos":[650,684]},{"content":"For example, if you perform a copy operation on a <ph id=\"ph1\">`BFILE`</ph>, only the <ph id=\"ph2\">`BFILE`</ph> locator (which is a reference to the file) is copied.","pos":[685,814],"source":" For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied."},{"content":"The data in the file is not copied.","pos":[815,850]},{"content":"The <ph id=\"ph1\">`BFILE`</ph> data type should be used for referencing <ph id=\"ph2\">`LOB`</ph>s that are large in size, and therefore, not practical to store in the database.","pos":[857,995],"source":"       The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database."},{"content":"There is client, server, and communication overhead for using a <ph id=\"ph1\">`BFILE`</ph> data type compared to the <ph id=\"ph2\">`LOB`</ph> data type.","pos":[996,1110],"source":" There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type."},{"content":"It is more efficient to access a <ph id=\"ph1\">`BFILE`</ph> if you only need to obtain a small amount of data.","pos":[1111,1202],"source":" It is more efficient to access a `BFILE` if you only need to obtain a small amount of data."},{"content":"It is more efficient to access database-resident <ph id=\"ph1\">`LOB`</ph>s if you need to obtain the entire object.","pos":[1203,1299],"source":" It is more efficient to access database-resident `LOB`s if you need to obtain the entire object."},{"content":"Each non-NULL OracleBFile object is associated with two entities that define the location of the underlying physical file:      -   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and      -   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.","pos":[1306,1659]},{"content":"After a <ph id=\"ph1\">`BFILE`</ph> is created, you can retrieve its locator in the form of an OracleBFile object using the &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; or &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt; methods.","pos":[1666,1907],"source":"       After a `BFILE` is created, you can retrieve its locator in the form of an OracleBFile object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods."},{"content":"To obtain an OracleBFile object, call the &lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A&gt; method.","pos":[1914,2030],"source":"       To obtain an OracleBFile object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method."},{"content":"The physical file that an OracleBFile object is associated with does not need to exist until you attempt to access it.","pos":[2037,2155]},{"content":"An application can bind an OracleBFile to a nonexistent file, create the physical file in the expected location, and then call &lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;.","pos":[2156,2335],"source":" An application can bind an OracleBFile to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>."},{"content":"Any attempt to access a closed OracleBFile using the &lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt; or &lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt; methods reopens an OracleBFile stream automatically.","pos":[2342,2554],"source":"       Any attempt to access a closed OracleBFile using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an OracleBFile stream automatically."},{"content":"The following C# example demonstrates how you can create a <ph id=\"ph1\">`BFILE`</ph> in an Oracle table, and then retrieve it in the form of an OracleBFile object.","pos":[2561,2706],"source":"       The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an OracleBFile object."},{"content":"The example demonstrates the use of the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; object and the OracleBFile&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt; and &lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt; methods.","pos":[2707,2938],"source":" The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods."},{"content":"<bpt id=\"p1\">[!code-cs</bpt><bpt id=\"p2\">[</bpt>DataWorks OracleClient.BFile#1<ept id=\"p2\">](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs)</ept><ept id=\"p1\">]</ept>       For more information about creating and using an Oracle <ph id=\"ph1\">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.","pos":[2945,3172],"source":"[!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs)]       For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The <ph id=\"ph2\">`BeginWrite`</ph>, <ph id=\"ph3\">`EndWrite`</ph>, and <ph id=\"ph4\">`WriteByte`</ph> methods, which are inherited from the <ph id=\"ph5\">`System.IO.Stream`</ph> class, are not supported because the <ph id=\"ph6\">`BFILE`</ph> data type is read-only.","pos":[3178,3362],"source":"      > [!NOTE] >  The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only."}]},{"pos":[5927,6045],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stream can be read.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> stream can be read."},{"pos":[6165,6526],"content":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is closed or disposed; otherwise <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is closed or disposed; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,225],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is closed or disposed; otherwise <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[226,361],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>."}]},{"pos":[6976,7067],"content":"Gets a value indicating whether forward-seek and backward-seek operations can be performed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether forward-seek and backward-seek operations can be performed.","pos":[0,91]}]},{"pos":[7187,7548],"content":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is closed or disposed; otherwise <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is closed or disposed; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,225],"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is closed or disposed; otherwise <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[226,361],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>."}]},{"pos":[8003,8063],"content":"Gets a value indicating whether the object supports writing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the object supports writing.","pos":[0,60]}]},{"pos":[8184,8367],"content":"Always returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> because the Oracle <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> data type is read-only.","needQuote":true,"needEscape":true,"source":"Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> because the Oracle <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data type is read-only."},{"pos":[8812,8955],"content":"Creates a copy of this <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the same physical file as the original.","needQuote":true,"needEscape":true,"source":"Creates a copy of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original."},{"pos":[8967,9494],"content":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the Clone is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the Clone is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.","pos":[0,527],"nodes":[{"content":"The properties of the new &lt;xref:System.Data.OracleClient.OracleBFile&gt; object initially have the same values as those of the original object.","pos":[0,140],"source":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object."},{"content":"However, after the Clone is complete, each &lt;xref:System.Data.OracleClient.OracleBFile&gt; object is independent from the other.","pos":[141,265],"source":" However, after the Clone is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other."},{"content":"For example, changing the value of the &lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt; property on the original &lt;xref:System.Data.OracleClient.OracleBFile&gt; does not change the value of &lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt; on the copy.","pos":[266,527],"source":" For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy."}]}]},{"pos":[9618,9826],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the same physical file as the original <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object."},{"pos":[10289,10448],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used by this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.OracleClient.OracleConnection\"></xref> used by this instance of the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref>."},{"pos":[10626,10687],"content":"The connection to a data source. The default is a null value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection to a data source. The default is a null value.","pos":[0,61],"nodes":[{"content":"The connection to a data source.","pos":[0,32]},{"content":"The default is a null value.","pos":[33,61]}]}]},{"pos":[11238,11421],"content":"Copies the entire contents of this <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to the beginning of a destination <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to the beginning of a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>."},{"pos":[11434,11874],"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the CopyTo operation to execute correctly.","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the CopyTo operation to execute correctly.","pos":[0,438],"nodes":[{"content":"The underlying data types of the source &lt;xref:System.Data.OracleClient.OracleBFile&gt; and the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must be compatible.","pos":[0,165],"source":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible."},{"content":"For example, you cannot copy binary data to a destination &lt;xref:System.Data.OracleClient.OracleLob&gt; that has a character data type.","pos":[166,297],"source":" For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type."},{"content":"You must have write access to the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; for the CopyTo operation to execute correctly.","pos":[304,438],"source":"       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the CopyTo operation to execute correctly."}]}]},{"pos":[12072,12143],"content":"The destination <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>","needQuote":true,"needEscape":true,"source":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>"},{"pos":[12200,12227],"content":"The number of bytes copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes copied.","pos":[0,27]}]},{"pos":[12401,12515],"content":"The destination <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a null object reference.","needQuote":true,"needEscape":true,"source":"The destination <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref> is a null object reference."},{"pos":[12627,12888],"content":"The destination is a null <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref>.       -or-       The connection with which this <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> is associated is closed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The destination is a null <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,97],"source":"The destination is a null <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref>."},{"content":"-or-       The connection with which this <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated is closed.","pos":[104,245],"source":"       -or-       The connection with which this <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> is associated is closed."}]},{"pos":[12996,13104],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed or disposed.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object is closed or disposed."},{"pos":[13621,13811],"content":"Copies the entire contents of this <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a destination <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> at the specified offset.","needQuote":true,"needEscape":true,"source":"Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> at the specified offset."},{"pos":[13824,14311],"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","pos":[0,485],"nodes":[{"content":"The underlying data types of the source &lt;xref:System.Data.OracleClient.OracleBFile&gt; and the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must be compatible.","pos":[0,165],"source":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible."},{"content":"For example, you cannot copy binary data to a destination &lt;xref:System.Data.OracleClient.OracleLob&gt; that has a character data type.","pos":[166,297],"source":" For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type."},{"content":"You must have write access to the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; for the &lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt; operation to execute correctly.","pos":[304,485],"source":"       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly."}]}]},{"pos":[14533,14605],"content":"The destination <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>."},{"pos":[14678,14706],"content":"The offset to which to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset to which to copy.","pos":[0,28]}]},{"pos":[14763,14790],"content":"The number of bytes copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes copied.","pos":[0,27]}]},{"pos":[14964,15078],"content":"The destination <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a null object reference.","needQuote":true,"needEscape":true,"source":"The destination <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref> is a null object reference."},{"pos":[15190,15451],"content":"The destination is a null <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref>.       -or-       The connection with which this <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> is associated is closed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The destination is a null <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,97],"source":"The destination is a null <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref>."},{"content":"-or-       The connection with which this <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated is closed.","pos":[104,245],"source":"       -or-       The connection with which this <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> is associated is closed."}]},{"pos":[15559,15667],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed or disposed.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object is closed or disposed."},{"pos":[16272,16501],"content":"Copies from this <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to a destination <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the specified amount of data, the source offset, and the destination offset.","needQuote":true,"needEscape":true,"source":"Copies from this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> with the specified amount of data, the source offset, and the destination offset."},{"pos":[16514,17001],"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","pos":[0,485],"nodes":[{"content":"The underlying data types of the source &lt;xref:System.Data.OracleClient.OracleBFile&gt; and the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; must be compatible.","pos":[0,165],"source":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible."},{"content":"For example, you cannot copy binary data to a destination &lt;xref:System.Data.OracleClient.OracleLob&gt; that has a character data type.","pos":[166,297],"source":" For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type."},{"content":"You must have write access to the destination &lt;xref:System.Data.OracleClient.OracleLob&gt; for the &lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt; operation to execute correctly.","pos":[304,485],"source":"       You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly."}]}]},{"pos":[17234,17264],"content":"The offset from which to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset from which to copy.","pos":[0,30]}]},{"pos":[17353,17425],"content":"The destination <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>."},{"pos":[17498,17526],"content":"The offset to which to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The offset to which to copy.","pos":[0,28]}]},{"pos":[17588,17628],"content":"The quantity of data, in bytes, to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The quantity of data, in bytes, to copy.","pos":[0,40]}]},{"pos":[17685,17712],"content":"The number of bytes copied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of bytes copied.","pos":[0,27]}]},{"pos":[17898,17978],"content":"The value of the amount parameter is less than zero or greater than 4 gigabytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the amount parameter is less than zero or greater than 4 gigabytes.","pos":[0,80]}]},{"pos":[18081,18195],"content":"The destination <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a null object reference.","needQuote":true,"needEscape":true,"source":"The destination <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref> is a null object reference."},{"pos":[18307,18568],"content":"The destination is a null <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref>.       -or-       The connection with which this <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> is associated is closed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The destination is a null <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,97],"source":"The destination is a null <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref>."},{"content":"-or-       The connection with which this <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated is closed.","pos":[104,245],"source":"       -or-       The connection with which this <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> is associated is closed."}]},{"pos":[18676,18784],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed or disposed.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object is closed or disposed."},{"pos":[19189,19321],"content":"Gets the name of the DIRECTORY object, with which an <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is associated.","needQuote":true,"needEscape":true,"source":"Gets the name of the DIRECTORY object, with which an <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated."},{"pos":[19334,19950],"content":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:      -   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and      -   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.       The DirectoryName property returns the name of the DIRECTORY object from the Oracle database.       For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.","needQuote":false,"needEscape":true,"nodes":[{"content":"Each non-NULL &lt;xref:System.Data.OracleClient.OracleBFile&gt; object is associated with two entities that define the location of underlying physical file:      -   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and      -   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.","pos":[0,381],"source":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:      -   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and      -   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object."},{"content":"The DirectoryName property returns the name of the DIRECTORY object from the Oracle database.","pos":[388,481]},{"content":"For more information about creating and using an Oracle <ph id=\"ph1\">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.","pos":[488,608],"source":"       For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation."}]},{"pos":[20069,20102],"content":"The name of the DIRECTORY object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the DIRECTORY object.","pos":[0,33]}]},{"pos":[20287,20490],"content":"Attempted to call <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DirectoryName\" name=\"DirectoryName\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> on a closed or disposed <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Attempted to call <xref uid=\"langword_csharp_DirectoryName\" name=\"DirectoryName\" href=\"\"></xref> on a closed or disposed <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object."},{"pos":[21066,21078],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[21543,21701],"content":"Gets a value indicating whether a physical file containing <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> data exists in the operating system.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether a physical file containing <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data exists in the operating system."},{"pos":[21815,22055],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a physical file containing <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> data exists; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a physical file containing <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22237,22328],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed or disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed."},{"pos":[22439,22554],"content":"The connection with which a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated is closed.","needQuote":true,"needEscape":true,"source":"The connection with which a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is associated is closed."},{"pos":[22934,23035],"content":"Gets the name of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> without the path.","needQuote":true,"needEscape":true,"source":"Gets the name of the <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> without the path."},{"pos":[23047,23129],"content":"For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"For &lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;, an empty string is returned.","pos":[0,82],"source":"For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned."}]},{"pos":[23242,23264],"content":"The name of the BFILE.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the BFILE.","pos":[0,22]}]},{"pos":[23444,23535],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is closed or disposed.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed."},{"pos":[23904,23928],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[24444,24617],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> stream.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream."},{"pos":[24727,25002],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> stream; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25446,25607],"content":"Gets a value that returns the length in bytes of the physical file with which the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object is associated.","needQuote":true,"needEscape":true,"source":"Gets a value that returns the length in bytes of the physical file with which the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated."},{"pos":[25724,25791],"content":"A long value representing the length of the physical file in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"A long value representing the length of the physical file in bytes.","pos":[0,67]}]},{"pos":[25969,26029],"content":"Methods were called after the stream was closed or disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]},{"pos":[26390,26510],"content":"Represents a null <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is not bound to a physical file.","needQuote":true,"needEscape":true,"source":"Represents a null <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object that is not bound to a physical file."},{"pos":[26523,26920],"content":"Null can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability.       Any attempt to perform a read operation on a Null object succeeds, but does not return any data. Any attempt to perform a write operation on a Null object generates an exception. Selecting a `BFILE` column that contains a null value returns Null.","needQuote":false,"needEscape":true,"nodes":[{"content":"Null can be useful when you want to perform a comparison operation on an &lt;xref:System.Data.OracleClient.OracleBFile&gt; to determine nullability.","pos":[0,142],"source":"Null can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability."},{"content":"Any attempt to perform a read operation on a Null object succeeds, but does not return any data.","pos":[149,245]},{"content":"Any attempt to perform a write operation on a Null object generates an exception.","pos":[246,327]},{"content":"Selecting a <ph id=\"ph1\">`BFILE`</ph> column that contains a null value returns Null.","pos":[328,395],"source":" Selecting a `BFILE` column that contains a null value returns Null."}]},{"pos":[27091,27103],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27500,27603],"content":"Gets the current read position in the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stream.","needQuote":true,"needEscape":true,"source":"Gets the current read position in the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream."},{"pos":[27616,27823],"content":"Seeking to any location beyond the length of the stream is not supported.       The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.","needQuote":false,"needEscape":true,"nodes":[{"content":"Seeking to any location beyond the length of the stream is not supported.","pos":[0,73]},{"content":"The <ph id=\"ph1\">`Position`</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.","pos":[80,205],"source":"       The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both."}]},{"pos":[27948,28045],"content":"The current position within the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stream.","needQuote":true,"needEscape":true,"source":"The current position within the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream."},{"pos":[28233,28324],"content":"Attempted to set a position with a negative value or greater than the length of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempted to set a position with a negative value or greater than the length of the stream.","pos":[0,91]}]},{"pos":[28431,28491],"content":"Methods were called after the stream was closed or disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]},{"pos":[28991,29171],"content":"Reads a sequence of bytes from the current <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stream and advances the position within the stream by the number of bytes read.","needQuote":true,"needEscape":true,"source":"Reads a sequence of bytes from the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream and advances the position within the stream by the number of bytes read."},{"pos":[29184,30777],"content":"The Read method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`. The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged. Read returns the number of bytes read. The return value is zero only if the position is currently at the end of the stream. Read will block until at least one byte of data can be read, in the event that no data is available. Read returns 0 only when the end of the file has been reached. Read is free to return fewer bytes than requested even if the end of the stream has not been reached.       Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the Read or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.       The following C# example assumes this schema in an Oracle table:      ```   (col1 number, col2 BFILE)   ```       The example demonstrates using the Read and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"The Read method read a maximum of <ph id=\"ph1\">`count`</ph> bytes from the current stream and store them in <ph id=\"ph2\">`buffer`</ph> beginning at <ph id=\"ph3\">`offset`</ph>.","pos":[0,121],"source":"The Read method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`."},{"content":"The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.","pos":[122,292]},{"content":"Read returns the number of bytes read.","pos":[293,331]},{"content":"The return value is zero only if the position is currently at the end of the stream.","pos":[332,416]},{"content":"Read will block until at least one byte of data can be read, in the event that no data is available.","pos":[417,517]},{"content":"Read returns 0 only when the end of the file has been reached.","pos":[518,580]},{"content":"Read is free to return fewer bytes than requested even if the end of the stream has not been reached.","pos":[581,682]},{"content":"Any attempt to access a closed &lt;xref:System.Data.OracleClient.OracleBFile&gt; using the Read or &lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt; methods reopens an &lt;xref:System.Data.OracleClient.OracleBFile&gt; stream automatically.","pos":[689,918],"source":"       Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the Read or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically."},{"content":"The following C# example assumes this schema in an Oracle table:      <ph id=\"ph1\">```   (col1 number, col2 BFILE)   ```</ph>       The example demonstrates using the Read and &lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt; methods to access an &lt;xref:System.Data.OracleClient.OracleBFile&gt; object.","pos":[925,1207],"source":"       The following C# example assumes this schema in an Oracle table:      ```   (col1 number, col2 BFILE)   ```       The example demonstrates using the Read and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object."}]},{"pos":[30945,31144],"content":"An array of bytes. When this method returns, the buffer contains the specified byte array with the values between `offset` and (`offset` + `count`) replaced by the bytes read from the current source.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of bytes.","pos":[0,18]},{"content":"When this method returns, the buffer contains the specified byte array with the values between <ph id=\"ph1\">`offset`</ph> and (<ph id=\"ph2\">`offset`</ph><ph id=\"ph3\"> + </ph><ph id=\"ph4\">`count`</ph>) replaced by the bytes read from the current source.","pos":[19,199],"source":" When this method returns, the buffer contains the specified byte array with the values between `offset` and (`offset` + `count`) replaced by the bytes read from the current source."}]},{"pos":[31206,31309],"content":"The zero-based byte offset in <ph id=\"ph1\">`buffer`</ph> at which to begin storing the data read from the current stream.","needQuote":true,"needEscape":true,"source":"The zero-based byte offset in `buffer` at which to begin storing the data read from the current stream."},{"pos":[31370,31433],"content":"The maximum number of bytes to be read from the current stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The maximum number of bytes to be read from the current stream.","pos":[0,63]}]},{"pos":[31490,31686],"content":"The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","pos":[0,196],"nodes":[{"content":"The total number of bytes read into the buffer.","pos":[0,47]},{"content":"This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","pos":[48,196]}]}]},{"pos":[31850,31937],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is larger than the buffer length.","needQuote":true,"needEscape":true,"source":"The sum of <code>offset</code> and <code>count</code> is larger than the buffer length."},{"pos":[32040,32165],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"<code>buffer</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[32280,32334],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","needQuote":true,"needEscape":true,"source":"<code>offset</code> or <code>count</code> is negative."},{"pos":[32445,32560],"content":"The connection with which a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is associated is closed.","needQuote":true,"needEscape":true,"source":"The connection with which a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is associated is closed."},{"pos":[32649,32671],"content":"An I/O error occurred.","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]},{"pos":[32778,32838],"content":"Methods were called after the stream was closed or disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]},{"pos":[33320,33418],"content":"Sets the position on the current <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stream.","needQuote":true,"needEscape":true,"source":"Sets the position on the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream."},{"pos":[33431,34806],"content":"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position is required to be the position specified by `origin`. If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.       Seeking to any location beyond the length of the stream is not supported.       Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or Seek methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.       The following C# example assumes this schema in an Oracle table:      ```   (col1 number, col2 BFILE)   ```       The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and Seek methods to access an <xref:System.Data.OracleClient.OracleBFile> object.      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"If <ph id=\"ph1\">`offset`</ph> is negative, the new position is required to precede the position specified by <ph id=\"ph2\">`origin`</ph> by the number of bytes specified by <ph id=\"ph3\">`offset`</ph>.","pos":[0,145],"source":"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`."},{"content":"If <ph id=\"ph1\">`offset`</ph> is zero, the new position is required to be the position specified by <ph id=\"ph2\">`origin`</ph>.","pos":[146,237],"source":" If `offset` is zero, the new position is required to be the position specified by `origin`."},{"content":"If <ph id=\"ph1\">`offset`</ph> is positive, the new position is required to follow the position specified by <ph id=\"ph2\">`origin`</ph> by the number of bytes specified by <ph id=\"ph3\">`offset`</ph>.","pos":[238,382],"source":" If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`."},{"content":"Seeking to any location beyond the length of the stream is not supported.","pos":[389,462]},{"content":"Any attempt to access a closed &lt;xref:System.Data.OracleClient.OracleBFile&gt; using the &lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt; or Seek methods reopens an &lt;xref:System.Data.OracleClient.OracleBFile&gt; stream automatically.","pos":[469,698],"source":"       Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or Seek methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically."},{"content":"The following C# example assumes this schema in an Oracle table:      <ph id=\"ph1\">```   (col1 number, col2 BFILE)   ```</ph>       The example demonstrates using the &lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt; and Seek methods to access an &lt;xref:System.Data.OracleClient.OracleBFile&gt; object.","pos":[705,987],"source":"       The following C# example assumes this schema in an Oracle table:      ```   (col1 number, col2 BFILE)   ```       The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and Seek methods to access an <xref:System.Data.OracleClient.OracleBFile> object."}]},{"pos":[34978,35364],"content":"A byte offset relative to origin. If `offset` is negative, the new position will precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position will be the position specified by `origin`. If `offset` is positive, the new position will follow the position specified by `origin` by the number of bytes specified by `offset`.","needQuote":true,"needEscape":true,"nodes":[{"content":"A byte offset relative to origin.","pos":[0,33]},{"content":"If <ph id=\"ph1\">`offset`</ph> is negative, the new position will precede the position specified by <ph id=\"ph2\">`origin`</ph> by the number of bytes specified by <ph id=\"ph3\">`offset`</ph>.","pos":[34,169],"source":" If `offset` is negative, the new position will precede the position specified by `origin` by the number of bytes specified by `offset`."},{"content":"If <ph id=\"ph1\">`offset`</ph> is zero, the new position will be the position specified by <ph id=\"ph2\">`origin`</ph>.","pos":[170,251],"source":" If `offset` is zero, the new position will be the position specified by `origin`."},{"content":"If <ph id=\"ph1\">`offset`</ph> is positive, the new position will follow the position specified by <ph id=\"ph2\">`origin`</ph> by the number of bytes specified by <ph id=\"ph3\">`offset`</ph>.","pos":[252,386],"source":" If `offset` is positive, the new position will follow the position specified by `origin` by the number of bytes specified by `offset`."}]},{"pos":[35434,35606],"content":"A value of type <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_System.IO.SeekOrigin\" name=\"System.IO.SeekOrigin\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating the reference point used to obtain the new position.","needQuote":true,"needEscape":true,"source":"A value of type <xref uid=\"langword_csharp_System.IO.SeekOrigin\" name=\"System.IO.SeekOrigin\" href=\"\"></xref> indicating the reference point used to obtain the new position."},{"pos":[35663,35706],"content":"The new position within the current stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new position within the current stream.","pos":[0,43]}]},{"pos":[35890,35981],"content":"Attempted to set a position with a negative value or greater than the length of the stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Attempted to set a position with a negative value or greater than the length of the stream.","pos":[0,91]}]},{"pos":[36088,36148],"content":"Methods were called after the stream was closed or disposed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]},{"pos":[36644,36763],"content":"Binds the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object to a different file in the operating system.","needQuote":true,"needEscape":true,"source":"Binds the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object to a different file in the operating system."},{"pos":[36776,38877],"content":"The SetFileName operation must be within a transaction to succeed. Simply calling SetFileName on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table. To update the Oracle table after calling SetFileName, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction.       Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to SetFileName, or by any changes to the `BFILE` in the database. In other words, they might not represent the actual values of the `BFILE` object in the server.       Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object.       The following C# example assumes this schema in an Oracle table:      ```   (col1 number, col2 BFILE)   ```       The example demonstrates using the SetFileName, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(\"TESTDIR\", \"File1.jpg\");               BFile.Read(buffer, 0, 100);           }       }   }   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"The SetFileName operation must be within a transaction to succeed.","pos":[0,66]},{"content":"Simply calling SetFileName on a <ph id=\"ph1\">`BFILE`</ph> associates the &lt;xref:System.Data.OracleClient.OracleBFile&gt; object with a different file, but does not update the Oracle table.","pos":[67,233],"source":" Simply calling SetFileName on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table."},{"content":"To update the Oracle table after calling SetFileName, you must call the <ph id=\"ph1\">`Update`</ph> method of the &lt;xref:System.Data.OracleClient.OracleDataAdapter&gt; and then commit the transaction.","pos":[234,411],"source":" To update the Oracle table after calling SetFileName, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction."},{"content":"Once you retrieve the &lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt; or &lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt; property, they are cached in the &lt;xref:System.Data.OracleClient.OracleBFile&gt; object and are unaffected by any cloned &lt;xref:System.Data.OracleClient.OracleBFile&gt; objects' calls to SetFileName, or by any changes to the <ph id=\"ph1\">`BFILE`</ph> in the database.","pos":[418,801],"source":"       Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to SetFileName, or by any changes to the `BFILE` in the database."},{"content":"In other words, they might not represent the actual values of the <ph id=\"ph1\">`BFILE`</ph> object in the server.","pos":[802,897],"source":" In other words, they might not represent the actual values of the `BFILE` object in the server."},{"content":"Furthermore, retrieving either property (&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt; or &lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;) causes both property values to be retrieved from the server and cached in the &lt;xref:System.Data.OracleClient.OracleBFile&gt; object.","pos":[904,1195],"source":"       Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object."},{"content":"The following C# example assumes this schema in an Oracle table:      <ph id=\"ph1\">```   (col1 number, col2 BFILE)   ```</ph>       The example demonstrates using the SetFileName, &lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt; and &lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt; methods to access an &lt;xref:System.Data.OracleClient.OracleBFile&gt; object.","pos":[1202,1544],"source":"       The following C# example assumes this schema in an Oracle table:      ```   (col1 number, col2 BFILE)   ```       The example demonstrates using the SetFileName, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object."}]},{"pos":[39040,39104],"content":"The alias of the directory object that contains a physical file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The alias of the directory object that contains a physical file.","pos":[0,64]}]},{"pos":[39165,39210],"content":"The name of the file in the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file in the operating system.","pos":[0,45]}]},{"pos":[39397,39440],"content":"The operation must be within a transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"The operation must be within a transaction.","pos":[0,43]}]},{"pos":[39872,39896],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[40041,40065],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[40242,40424],"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","pos":[0,182]}]},{"pos":[40789,40925],"content":"Gets an &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt; that contains the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> data.","needQuote":true,"needEscape":true,"source":"Gets an <xref:System.Array> of type <xref:System.Byte> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data."},{"pos":[40938,41271],"content":"The Value property reads the entire `BFILE` at one time.      > [!NOTE] >  A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client. However, when you use Value, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Value property reads the entire <ph id=\"ph1\">`BFILE`</ph> at one time.","pos":[0,56],"source":"The Value property reads the entire `BFILE` at one time."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  A benefit of using <ph id=\"ph2\">`BFILE`</ph>s is the ability to retrieve large amounts of data in chunks at the client.","pos":[62,176],"source":"      > [!NOTE] >  A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client."},{"content":"However, when you use Value, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.","pos":[177,330]}]},{"pos":[41382,41513],"content":"An &lt;xref:System.Array&gt; of type &lt;xref:System.Byte&gt; that contains the <bpt id=\"p1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> data.","needQuote":true,"needEscape":true,"source":"An <xref:System.Array> of type <xref:System.Byte> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data."},{"pos":[42091,42115],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[42284,42308],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[42370,42394],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[42455,42479],"content":"Not currently supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not currently supported.","pos":[0,24]}]},{"pos":[42652,42834],"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","pos":[0,182]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OracleClient.OracleBFile\n  id: OracleBFile\n  children:\n  - System.Data.OracleClient.OracleBFile.CanRead\n  - System.Data.OracleClient.OracleBFile.CanSeek\n  - System.Data.OracleClient.OracleBFile.CanWrite\n  - System.Data.OracleClient.OracleBFile.Clone\n  - System.Data.OracleClient.OracleBFile.Connection\n  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  - System.Data.OracleClient.OracleBFile.DirectoryName\n  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  - System.Data.OracleClient.OracleBFile.FileExists\n  - System.Data.OracleClient.OracleBFile.FileName\n  - System.Data.OracleClient.OracleBFile.Flush\n  - System.Data.OracleClient.OracleBFile.IsNull\n  - System.Data.OracleClient.OracleBFile.Length\n  - System.Data.OracleClient.OracleBFile.Null\n  - System.Data.OracleClient.OracleBFile.Position\n  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  - System.Data.OracleClient.OracleBFile.Value\n  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: OracleBFile\n  nameWithType: OracleBFile\n  fullName: System.Data.OracleClient.OracleBFile\n  type: Class\n  summary: Represents a managed OracleBFile object designed to work with the Oracle <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data type. This class cannot be inherited.\n  remarks: \"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes. An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server. Note that the `BFILE` data type provides read-only access to data. Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported.  \\n  \\n Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:  \\n  \\n-   Contains unstructured data.  \\n  \\n-   Supports server-side chunking.  \\n  \\n-   Uses reference copy semantics. For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied. The data in the file is not copied.  \\n  \\n The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database. There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type. It is more efficient to access a `BFILE` if you only need to obtain a small amount of data. It is more efficient to access database-resident `LOB`s if you need to obtain the entire object.  \\n  \\n Each non-NULL OracleBFile object is associated with two entities that define the location of the underlying physical file:  \\n  \\n-   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and  \\n  \\n-   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.  \\n  \\n After a `BFILE` is created, you can retrieve its locator in the form of an OracleBFile object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods.  \\n  \\n To obtain an OracleBFile object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method.  \\n  \\n The physical file that an OracleBFile object is associated with does not need to exist until you attempt to access it. An application can bind an OracleBFile to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  \\n  \\n Any attempt to access a closed OracleBFile using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an OracleBFile stream automatically.  \\n  \\n The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an OracleBFile object. The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods.  \\n  \\n [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs)]  \\n  \\n For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.  \\n  \\n> [!NOTE]\\n>  The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only.\"\n  syntax:\n    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'\n  inheritance:\n  - System.IO.Stream\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.ICloneable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.CanRead\n  id: CanRead\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: OracleBFile.CanRead\n  fullName: System.Data.OracleClient.OracleBFile.CanRead\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether the <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> stream can be read.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is closed or disposed; otherwise <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.\n  overload: System.Data.OracleClient.OracleBFile.CanRead*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.CanSeek\n  id: CanSeek\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: OracleBFile.CanSeek\n  fullName: System.Data.OracleClient.OracleBFile.CanSeek\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether forward-seek and backward-seek operations can be performed.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is closed or disposed; otherwise <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.\n  overload: System.Data.OracleClient.OracleBFile.CanSeek*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.CanWrite\n  id: CanWrite\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: OracleBFile.CanWrite\n  fullName: System.Data.OracleClient.OracleBFile.CanWrite\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether the object supports writing.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: Always returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> because the Oracle <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data type is read-only.\n  overload: System.Data.OracleClient.OracleBFile.CanWrite*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Clone\n  id: Clone\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: OracleBFile.Clone()\n  fullName: System.Data.OracleClient.OracleBFile.Clone()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Creates a copy of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original.\n  remarks: The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the Clone is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object.\n  overload: System.Data.OracleClient.OracleBFile.Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Connection\n  id: Connection\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: OracleBFile.Connection\n  fullName: System.Data.OracleClient.OracleBFile.Connection\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the <xref href=\"System.Data.OracleClient.OracleConnection\"></xref> used by this instance of the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref>.\n  syntax:\n    content: public System.Data.OracleClient.OracleConnection Connection { get; }\n    return:\n      type: System.Data.OracleClient.OracleConnection\n      description: The connection to a data source. The default is a null value.\n  overload: System.Data.OracleClient.OracleBFile.Connection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  id: CopyTo(System.Data.OracleClient.OracleLob)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CopyTo(OracleLob)\n  nameWithType: OracleBFile.CopyTo(OracleLob)\n  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to the beginning of a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.\n  remarks: \"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \\n  \\n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the CopyTo operation to execute correctly.\"\n  syntax:\n    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);\n    parameters:\n    - id: destination\n      type: System.Data.OracleClient.OracleLob\n      description: The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>\n    return:\n      type: System.Int64\n      description: The number of bytes copied.\n  overload: System.Data.OracleClient.OracleBFile.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The destination <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref> is a null object reference.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The destination is a null <xref uid=\\\"langword_csharp_OracleLob\\\" name=\\\"OracleLob\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The connection with which this <xref uid=\\\"langword_csharp_OracleBFile\\\" name=\\\"OracleBFile\\\" href=\\\"\\\"></xref> is associated is closed.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object is closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CopyTo(OracleLob,Int64)\n  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)\n  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> at the specified offset.\n  remarks: \"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \\n  \\n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.\"\n  syntax:\n    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);\n    parameters:\n    - id: destination\n      type: System.Data.OracleClient.OracleLob\n      description: The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.\n    - id: destinationOffset\n      type: System.Int64\n      description: The offset to which to copy.\n    return:\n      type: System.Int64\n      description: The number of bytes copied.\n  overload: System.Data.OracleClient.OracleBFile.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The destination <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref> is a null object reference.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The destination is a null <xref uid=\\\"langword_csharp_OracleLob\\\" name=\\\"OracleLob\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The connection with which this <xref uid=\\\"langword_csharp_OracleBFile\\\" name=\\\"OracleBFile\\\" href=\\\"\\\"></xref> is associated is closed.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object is closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CopyTo(Int64,OracleLob,Int64,Int64)\n  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)\n  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Copies from this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> with the specified amount of data, the source offset, and the destination offset.\n  remarks: \"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \\n  \\n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.\"\n  syntax:\n    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);\n    parameters:\n    - id: sourceOffset\n      type: System.Int64\n      description: The offset from which to copy.\n    - id: destination\n      type: System.Data.OracleClient.OracleLob\n      description: The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.\n    - id: destinationOffset\n      type: System.Int64\n      description: The offset to which to copy.\n    - id: amount\n      type: System.Int64\n      description: The quantity of data, in bytes, to copy.\n    return:\n      type: System.Int64\n      description: The number of bytes copied.\n  overload: System.Data.OracleClient.OracleBFile.CopyTo*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the amount parameter is less than zero or greater than 4 gigabytes.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The destination <xref uid=\"langword_csharp_OracleLob\" name=\"OracleLob\" href=\"\"></xref> is a null object reference.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The destination is a null <xref uid=\\\"langword_csharp_OracleLob\\\" name=\\\"OracleLob\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n The connection with which this <xref uid=\\\"langword_csharp_OracleBFile\\\" name=\\\"OracleBFile\\\" href=\\\"\\\"></xref> is associated is closed.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object is closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.DirectoryName\n  id: DirectoryName\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: DirectoryName\n  nameWithType: OracleBFile.DirectoryName\n  fullName: System.Data.OracleClient.OracleBFile.DirectoryName\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the name of the DIRECTORY object, with which an <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated.\n  remarks: \"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:  \\n  \\n-   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and  \\n  \\n-   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.  \\n  \\n The DirectoryName property returns the name of the DIRECTORY object from the Oracle database.  \\n  \\n For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.\"\n  syntax:\n    content: public string DirectoryName { get; }\n    return:\n      type: System.String\n      description: The name of the DIRECTORY object.\n  overload: System.Data.OracleClient.OracleBFile.DirectoryName*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Attempted to call <xref uid=\"langword_csharp_DirectoryName\" name=\"DirectoryName\" href=\"\"></xref> on a closed or disposed <xref uid=\"langword_csharp_OracleBFile\" name=\"OracleBFile\" href=\"\"></xref> object.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: OracleBFile.Dispose(Boolean)\n  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.OracleClient.OracleBFile.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.FileExists\n  id: FileExists\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: FileExists\n  nameWithType: OracleBFile.FileExists\n  fullName: System.Data.OracleClient.OracleBFile.FileExists\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether a physical file containing <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data exists in the operating system.\n  syntax:\n    content: public bool FileExists { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a physical file containing <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> data exists; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OracleClient.OracleBFile.FileExists*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection with which a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is associated is closed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.FileName\n  id: FileName\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: OracleBFile.FileName\n  fullName: System.Data.OracleClient.OracleBFile.FileName\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the name of the <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> without the path.\n  remarks: For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned.\n  syntax:\n    content: public string FileName { get; }\n    return:\n      type: System.String\n      description: The name of the BFILE.\n  overload: System.Data.OracleClient.OracleBFile.FileName*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Flush\n  id: Flush\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: OracleBFile.Flush()\n  fullName: System.Data.OracleClient.OracleBFile.Flush()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Not currently supported.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Data.OracleClient.OracleBFile.Flush*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.IsNull\n  id: IsNull\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: OracleBFile.IsNull\n  fullName: System.Data.OracleClient.OracleBFile.IsNull\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream.\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.OracleClient.OracleBFile.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Length\n  id: Length\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Length\n  nameWithType: OracleBFile.Length\n  fullName: System.Data.OracleClient.OracleBFile.Length\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value that returns the length in bytes of the physical file with which the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: A long value representing the length of the physical file in bytes.\n  overload: System.Data.OracleClient.OracleBFile.Length*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Null\n  id: \"Null\"\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: OracleBFile.Null\n  fullName: System.Data.OracleClient.OracleBFile.Null\n  type: Field\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Represents a null <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object that is not bound to a physical file.\n  remarks: \"Null can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability.  \\n  \\n Any attempt to perform a read operation on a Null object succeeds, but does not return any data. Any attempt to perform a write operation on a Null object generates an exception. Selecting a `BFILE` column that contains a null value returns Null.\"\n  syntax:\n    content: public static readonly System.Data.OracleClient.OracleBFile Null;\n    return:\n      type: System.Data.OracleClient.OracleBFile\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Position\n  id: Position\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Position\n  nameWithType: OracleBFile.Position\n  fullName: System.Data.OracleClient.OracleBFile.Position\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the current read position in the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.\n  remarks: \"Seeking to any location beyond the length of the stream is not supported.  \\n  \\n The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.\"\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: The current position within the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.\n  overload: System.Data.OracleClient.OracleBFile.Position*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Attempted to set a position with a negative value or greater than the length of the stream.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)\n  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Reads a sequence of bytes from the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream and advances the position within the stream by the number of bytes read.\n  remarks: \"The Read method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`. The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged. Read returns the number of bytes read. The return value is zero only if the position is currently at the end of the stream. Read will block until at least one byte of data can be read, in the event that no data is available. Read returns 0 only when the end of the file has been reached. Read is free to return fewer bytes than requested even if the end of the stream has not been reached.  \\n  \\n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the Read or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \\n  \\n The following C# example assumes this schema in an Oracle table:  \\n  \\n```  \\n(col1 number, col2 BFILE)  \\n```  \\n  \\n The example demonstrates using the Read and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n```  \\nbyte[] buffer = new byte[100];  \\nOracleDataReader dataReader = command.ExecuteReader();  \\nusing (dataReader) {  \\n    if (dataReader.Read()) {  \\n            OracleBFile BFile = dataReader.GetOracleBFile(1);  \\n        using (BFile) {  \\n            BFile.Seek(0, SeekOrigin.Begin);  \\n            BFile.Read(buffer, 0, 100);  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of bytes. When this method returns, the buffer contains the specified byte array with the values between `offset` and (`offset` + `count`) replaced by the bytes read from the current source.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in `buffer` at which to begin storing the data read from the current stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to be read from the current stream.\n    return:\n      type: System.Int32\n      description: The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.\n  overload: System.Data.OracleClient.OracleBFile.Read*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The sum of <code>offset</code> and <code>count</code> is larger than the buffer length.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> or <code>count</code> is negative.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection with which a <xref uid=\"langword_csharp_BFILE\" name=\"BFILE\" href=\"\"></xref> is associated is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)\n  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Sets the position on the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.\n  remarks: \"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position is required to be the position specified by `origin`. If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.  \\n  \\n Seeking to any location beyond the length of the stream is not supported.  \\n  \\n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or Seek methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \\n  \\n The following C# example assumes this schema in an Oracle table:  \\n  \\n```  \\n(col1 number, col2 BFILE)  \\n```  \\n  \\n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and Seek methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n```  \\nbyte[] buffer = new byte[100];  \\nOracleDataReader dataReader = command.ExecuteReader();  \\nusing (dataReader) {  \\n    if (dataReader.Read()) {  \\n            OracleBFile BFile = dataReader.GetOracleBFile(1);  \\n        using (BFile) {  \\n            BFile.Seek(0, SeekOrigin.Begin);  \\n            BFile.Read(buffer, 0, 100);  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: A byte offset relative to origin. If `offset` is negative, the new position will precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position will be the position specified by `origin`. If `offset` is positive, the new position will follow the position specified by `origin` by the number of bytes specified by `offset`.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: A value of type <xref uid=\"langword_csharp_System.IO.SeekOrigin\" name=\"System.IO.SeekOrigin\" href=\"\"></xref> indicating the reference point used to obtain the new position.\n    return:\n      type: System.Int64\n      description: The new position within the current stream.\n  overload: System.Data.OracleClient.OracleBFile.Seek*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Attempted to set a position with a negative value or greater than the length of the stream.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  id: SetFileName(System.String,System.String)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: SetFileName(String,String)\n  nameWithType: OracleBFile.SetFileName(String,String)\n  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Binds the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object to a different file in the operating system.\n  remarks: \"The SetFileName operation must be within a transaction to succeed. Simply calling SetFileName on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table. To update the Oracle table after calling SetFileName, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction.  \\n  \\n Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to SetFileName, or by any changes to the `BFILE` in the database. In other words, they might not represent the actual values of the `BFILE` object in the server.  \\n  \\n Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n The following C# example assumes this schema in an Oracle table:  \\n  \\n```  \\n(col1 number, col2 BFILE)  \\n```  \\n  \\n The example demonstrates using the SetFileName, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n```  \\nbyte[] buffer = new byte[100];  \\nOracleDataReader dataReader = command.ExecuteReader();  \\nusing (dataReader) {  \\n    if (dataReader.Read()) {  \\n        OracleBFile BFile = dataReader.GetOracleBFile(1);  \\n        using (BFile) {  \\n            BFile.Seek(0, SeekOrigin.Begin);  \\n            BFile.Read(buffer, 0, 100);  \\n            command.Transaction = connection.BeginTransaction();  \\n            BFile.SetFileName(\\\"TESTDIR\\\", \\\"File1.jpg\\\");  \\n            BFile.Read(buffer, 0, 100);  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public void SetFileName (string directory, string file);\n    parameters:\n    - id: directory\n      type: System.String\n      description: The alias of the directory object that contains a physical file.\n    - id: file\n      type: System.String\n      description: The name of the file in the operating system.\n  overload: System.Data.OracleClient.OracleBFile.SetFileName*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The operation must be within a transaction.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: OracleBFile.SetLength(Int64)\n  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Not currently supported.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: Not currently supported.\n  overload: System.Data.OracleClient.OracleBFile.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Value\n  id: Value\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Value\n  nameWithType: OracleBFile.Value\n  fullName: System.Data.OracleClient.OracleBFile.Value\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets an <xref:System.Array> of type <xref:System.Byte> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data.\n  remarks: \"The Value property reads the entire `BFILE` at one time.  \\n  \\n> [!NOTE]\\n>  A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client. However, when you use Value, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.\"\n  syntax:\n    content: public object Value { get; }\n    return:\n      type: System.Object\n      description: An <xref:System.Array> of type <xref:System.Byte> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data.\n  overload: System.Data.OracleClient.OracleBFile.Value*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)\n  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Not currently supported.\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Not currently supported.\n    - id: offset\n      type: System.Int32\n      description: Not currently supported.\n    - id: count\n      type: System.Int32\n      description: Not currently supported.\n  overload: System.Data.OracleClient.OracleBFile.Write*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.\n  platform:\n  - net462\nreferences:\n- uid: System.IO.Stream\n  isExternal: false\n  name: System.IO.Stream\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Data.OracleClient.OracleBFile.CanRead\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanRead\n  nameWithType: OracleBFile.CanRead\n  fullName: System.Data.OracleClient.OracleBFile.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OracleClient.OracleBFile.CanSeek\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanSeek\n  nameWithType: OracleBFile.CanSeek\n  fullName: System.Data.OracleClient.OracleBFile.CanSeek\n- uid: System.Data.OracleClient.OracleBFile.CanWrite\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanWrite\n  nameWithType: OracleBFile.CanWrite\n  fullName: System.Data.OracleClient.OracleBFile.CanWrite\n- uid: System.Data.OracleClient.OracleBFile.Clone\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Clone()\n  nameWithType: OracleBFile.Clone()\n  fullName: System.Data.OracleClient.OracleBFile.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.OracleClient.OracleBFile.Connection\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Connection\n  nameWithType: OracleBFile.Connection\n  fullName: System.Data.OracleClient.OracleBFile.Connection\n- uid: System.Data.OracleClient.OracleConnection\n  parent: System.Data.OracleClient\n  isExternal: false\n  name: OracleConnection\n  nameWithType: OracleConnection\n  fullName: System.Data.OracleClient.OracleConnection\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo(OracleLob)\n  nameWithType: OracleBFile.CopyTo(OracleLob)\n  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Data.OracleClient.OracleLob\n  parent: System.Data.OracleClient\n  isExternal: false\n  name: OracleLob\n  nameWithType: OracleLob\n  fullName: System.Data.OracleClient.OracleLob\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo(OracleLob,Int64)\n  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)\n  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo(Int64,OracleLob,Int64,Int64)\n  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)\n  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)\n- uid: System.Data.OracleClient.OracleBFile.DirectoryName\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: DirectoryName\n  nameWithType: OracleBFile.DirectoryName\n  fullName: System.Data.OracleClient.OracleBFile.DirectoryName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: OracleBFile.Dispose(Boolean)\n  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)\n- uid: System.Data.OracleClient.OracleBFile.FileExists\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileExists\n  nameWithType: OracleBFile.FileExists\n  fullName: System.Data.OracleClient.OracleBFile.FileExists\n- uid: System.Data.OracleClient.OracleBFile.FileName\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileName\n  nameWithType: OracleBFile.FileName\n  fullName: System.Data.OracleClient.OracleBFile.FileName\n- uid: System.Data.OracleClient.OracleBFile.Flush\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Flush()\n  nameWithType: OracleBFile.Flush()\n  fullName: System.Data.OracleClient.OracleBFile.Flush()\n- uid: System.Data.OracleClient.OracleBFile.IsNull\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: IsNull\n  nameWithType: OracleBFile.IsNull\n  fullName: System.Data.OracleClient.OracleBFile.IsNull\n- uid: System.Data.OracleClient.OracleBFile.Length\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Length\n  nameWithType: OracleBFile.Length\n  fullName: System.Data.OracleClient.OracleBFile.Length\n- uid: System.Data.OracleClient.OracleBFile.Null\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: \"Null\"\n  nameWithType: OracleBFile.Null\n  fullName: System.Data.OracleClient.OracleBFile.Null\n- uid: System.Data.OracleClient.OracleBFile\n  parent: System.Data.OracleClient\n  isExternal: false\n  name: OracleBFile\n  nameWithType: OracleBFile\n  fullName: System.Data.OracleClient.OracleBFile\n- uid: System.Data.OracleClient.OracleBFile.Position\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Position\n  nameWithType: OracleBFile.Position\n  fullName: System.Data.OracleClient.OracleBFile.Position\n- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)\n  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)\n  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: true\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetFileName(String,String)\n  nameWithType: OracleBFile.SetFileName(String,String)\n  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)\n- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: OracleBFile.SetLength(Int64)\n  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)\n- uid: System.Data.OracleClient.OracleBFile.Value\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Value\n  nameWithType: OracleBFile.Value\n  fullName: System.Data.OracleClient.OracleBFile.Value\n- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)\n  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)\n- uid: System.Data.OracleClient.OracleBFile.CanRead*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanRead\n  nameWithType: OracleBFile.CanRead\n- uid: System.Data.OracleClient.OracleBFile.CanSeek*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanSeek\n  nameWithType: OracleBFile.CanSeek\n- uid: System.Data.OracleClient.OracleBFile.CanWrite*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanWrite\n  nameWithType: OracleBFile.CanWrite\n- uid: System.Data.OracleClient.OracleBFile.Clone*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Clone\n  nameWithType: OracleBFile.Clone\n- uid: System.Data.OracleClient.OracleBFile.Connection*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Connection\n  nameWithType: OracleBFile.Connection\n- uid: System.Data.OracleClient.OracleBFile.CopyTo*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo\n  nameWithType: OracleBFile.CopyTo\n- uid: System.Data.OracleClient.OracleBFile.DirectoryName*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: DirectoryName\n  nameWithType: OracleBFile.DirectoryName\n- uid: System.Data.OracleClient.OracleBFile.Dispose*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Dispose\n  nameWithType: OracleBFile.Dispose\n- uid: System.Data.OracleClient.OracleBFile.FileExists*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileExists\n  nameWithType: OracleBFile.FileExists\n- uid: System.Data.OracleClient.OracleBFile.FileName*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileName\n  nameWithType: OracleBFile.FileName\n- uid: System.Data.OracleClient.OracleBFile.Flush*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Flush\n  nameWithType: OracleBFile.Flush\n- uid: System.Data.OracleClient.OracleBFile.IsNull*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: IsNull\n  nameWithType: OracleBFile.IsNull\n- uid: System.Data.OracleClient.OracleBFile.Length*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Length\n  nameWithType: OracleBFile.Length\n- uid: System.Data.OracleClient.OracleBFile.Position*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Position\n  nameWithType: OracleBFile.Position\n- uid: System.Data.OracleClient.OracleBFile.Read*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Read\n  nameWithType: OracleBFile.Read\n- uid: System.Data.OracleClient.OracleBFile.Seek*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Seek\n  nameWithType: OracleBFile.Seek\n- uid: System.Data.OracleClient.OracleBFile.SetFileName*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetFileName\n  nameWithType: OracleBFile.SetFileName\n- uid: System.Data.OracleClient.OracleBFile.SetLength*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetLength\n  nameWithType: OracleBFile.SetLength\n- uid: System.Data.OracleClient.OracleBFile.Value*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Value\n  nameWithType: OracleBFile.Value\n- uid: System.Data.OracleClient.OracleBFile.Write*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Write\n  nameWithType: OracleBFile.Write\n"}