{"nodes":[{"pos":[662,747],"content":"Gets the primary key from the routing information in order to perform data filtering.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the primary key from the routing information in order to perform data filtering.","pos":[0,85]}]},{"pos":[760,1523],"content":"The DynamicRouteExpression class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control in page markup. The DynamicRouteExpression class gets the primary key from the routing information that is contained in a Web request. The <xref:System.Web.UI.WebControls.QueryExtender> control then uses the key in a `Where` clause. This modifies the query for the data source, which then returns table rows filtered by the key.       You can also filter data by using a foreign key that you specify using the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property.      <a name=\"DeclarativeSyntax\"></a>    ## Declarative Syntax      ```   <asp:DynamicRouteExpression     ColumnName=\"Name of the foreign key column\"/>   ```","needQuote":false,"needEscape":true,"nodes":[{"content":"The DynamicRouteExpression class is used with the &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control in page markup.","pos":[0,120],"source":"The DynamicRouteExpression class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control in page markup."},{"content":"The DynamicRouteExpression class gets the primary key from the routing information that is contained in a Web request.","pos":[121,239]},{"content":"The &lt;xref:System.Web.UI.WebControls.QueryExtender&gt; control then uses the key in a <ph id=\"ph1\">`Where`</ph> clause.","pos":[240,337],"source":" The <xref:System.Web.UI.WebControls.QueryExtender> control then uses the key in a `Where` clause."},{"content":"This modifies the query for the data source, which then returns table rows filtered by the key.","pos":[338,433]},{"content":"You can also filter data by using a foreign key that you specify using the &lt;xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A&gt; property.","pos":[440,591],"source":"       You can also filter data by using a foreign key that you specify using the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property."},{"content":"<bpt id=\"p1\">&lt;a name=\"DeclarativeSyntax\"&gt;</bpt><ept id=\"p1\">&lt;/a&gt;</ept>    ## Declarative Syntax      <ph id=\"ph1\">```   &lt;asp:DynamicRouteExpression     ColumnName=\"Name of the foreign key column\"/&gt;   ```</ph>","pos":[597,749],"source":"<a name=\"DeclarativeSyntax\"></a>    ## Declarative Syntax      ```   <asp:DynamicRouteExpression     ColumnName=\"Name of the foreign key column\"/>   ```"}]},{"pos":[4977,5084],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicRouteExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> class."},{"pos":[5096,5310],"content":"You typically do not call the DynamicRouteExpression constructor. Instead, you use the <xref:System.Web.DynamicData.DynamicRouteExpression> class in page markup and the class is initialized when the page is loaded.","needQuote":true,"needEscape":true,"nodes":[{"content":"You typically do not call the DynamicRouteExpression constructor. Instead, you use the <xref:System.Web.DynamicData.DynamicRouteExpression> class in page markup and the class is initialized when the page is loaded.","pos":[0,214],"nodes":[{"content":"You typically do not call the DynamicRouteExpression constructor.","pos":[0,65]},{"content":"Instead, you use the &lt;xref:System.Web.DynamicData.DynamicRouteExpression&gt; class in page markup and the class is initialized when the page is loaded.","pos":[66,214],"source":" Instead, you use the <xref:System.Web.DynamicData.DynamicRouteExpression> class in page markup and the class is initialized when the page is loaded."}]}]},{"pos":[5892,5992],"content":"Gets or sets the name of a column that contains a foreign key that is used to query the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the name of a column that contains a foreign key that is used to query the data source.","pos":[0,100]}]},{"pos":[6004,6111],"content":"The ColumnName property represents a foreign key. This key is used to modify the query for the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ColumnName property represents a foreign key. This key is used to modify the query for the data source.","pos":[0,107],"nodes":[{"content":"The ColumnName property represents a foreign key.","pos":[0,49]},{"content":"This key is used to modify the query for the data source.","pos":[50,107]}]}]},{"pos":[6714,6749],"content":"The name of the foreign-key column.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the foreign-key column.","pos":[0,35]}]},{"pos":[7352,7389],"content":"Gets the query from the data source..","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the query from the data source..","pos":[0,37]}]},{"pos":[7401,7561],"content":"The query from the data source, represented by the <ph id=\"ph1\">`source`</ph> parameter, is modified by applying the primary or foreign key that is the current route information.","needQuote":true,"needEscape":true,"source":"The query from the data source, represented by the `source` parameter, is modified by applying the primary or foreign key that is the current route information."},{"pos":[7757,7777],"content":"The query to modify.","needQuote":true,"needEscape":true,"nodes":[{"content":"The query to modify.","pos":[0,20]}]},{"pos":[7844,7878],"content":"An instance of the modified query.","needQuote":true,"needEscape":true,"nodes":[{"content":"An instance of the modified query.","pos":[0,34]}]},{"pos":[8701,8804],"content":"Sets the HTTP context of the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicRouteExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Sets the HTTP context of the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> object."},{"pos":[9067,9253],"content":"The control that contains the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> instance. This is a <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control.","needQuote":true,"needEscape":true,"nodes":[{"content":"The control that contains the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicRouteExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","pos":[0,106],"source":"The control that contains the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> instance."},{"content":"This is a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.QueryExtender\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[107,186],"source":" This is a <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control."}]},{"pos":[9326,9350],"content":"The Web request context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Web request context.","pos":[0,24]}]},{"pos":[9450,9557],"content":"The target data source for the <bpt id=\"p1\">&lt;xref href=\"System.Web.DynamicData.DynamicRouteExpression\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The target data source for the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.DynamicRouteExpression\n  id: DynamicRouteExpression\n  children:\n  - System.Web.DynamicData.DynamicRouteExpression.#ctor\n  - System.Web.DynamicData.DynamicRouteExpression.ColumnName\n  - System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)\n  - System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  langs:\n  - csharp\n  name: DynamicRouteExpression\n  nameWithType: DynamicRouteExpression\n  fullName: System.Web.DynamicData.DynamicRouteExpression\n  type: Class\n  summary: Gets the primary key from the routing information in order to perform data filtering.\n  remarks: \"The DynamicRouteExpression class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control in page markup. The DynamicRouteExpression class gets the primary key from the routing information that is contained in a Web request. The <xref:System.Web.UI.WebControls.QueryExtender> control then uses the key in a `Where` clause. This modifies the query for the data source, which then returns table rows filtered by the key.  \\n  \\n You can also filter data by using a foreign key that you specify using the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property.  \\n  \\n<a name=\\\"DeclarativeSyntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:DynamicRouteExpression  \\n  ColumnName=\\\"Name of the foreign key column\\\"/>  \\n```\"\n  example:\n  - \"A Visual Studio project with source code is available to accompany this topic: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).  \\n  \\n The following example shows a custom List.aspx page template for the Products table. It uses the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property to specify the ProductCategory foreign key for filtering the Products rows.  \\n  \\n The custom List.aspx page displays a column that contains links of the categories that are contained by the ProductCategory foreign-key column. When the user clicks one of these links, the List.aspx page displays only the rows that contain the selected category.  \\n  \\n The example requires the following:  \\n  \\n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](~/add/includes/ajax-current-ext-md.md).  \\n  \\n-   The AdventureWorksLT sample database. For more information, see [How to: Connect to the AdventureWorksLT Database using an .MDF File](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[System.Web.DynamicData.DynamicRouteExpression#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_3_1.aspx)]\\n [!code-vb[System.Web.DynamicData.DynamicRouteExpression#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_3_1.aspx)]  \\n  \\n [!code-vb[System.Web.DynamicData.DynamicRouteExpression#3](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_3_2.vb)]\\n [!code-cs[System.Web.DynamicData.DynamicRouteExpression#3](~/add/codesnippet/csharp/t-system.web.dynamicdata_3_2.cs)]\"\n  syntax:\n    content: 'public class DynamicRouteExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'\n  inheritance:\n  - System.Object\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression\n  implements: []\n  inheritedMembers:\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState\n  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicRouteExpression.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  langs:\n  - csharp\n  name: DynamicRouteExpression()\n  nameWithType: DynamicRouteExpression.DynamicRouteExpression()\n  fullName: System.Web.DynamicData.DynamicRouteExpression.DynamicRouteExpression()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> class.\n  remarks: You typically do not call the DynamicRouteExpression constructor. Instead, you use the <xref:System.Web.DynamicData.DynamicRouteExpression> class in page markup and the class is initialized when the page is loaded.\n  syntax:\n    content: public DynamicRouteExpression ();\n    parameters: []\n  overload: System.Web.DynamicData.DynamicRouteExpression.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicRouteExpression.ColumnName\n  id: ColumnName\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  langs:\n  - csharp\n  name: ColumnName\n  nameWithType: DynamicRouteExpression.ColumnName\n  fullName: System.Web.DynamicData.DynamicRouteExpression.ColumnName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets the name of a column that contains a foreign key that is used to query the data source.\n  remarks: The ColumnName property represents a foreign key. This key is used to modify the query for the data source.\n  example:\n  - \"The following example shows how to specify the ProductCategory foreign-key column for filtering the products to display. This example is part of the larger example that is provided for the <xref:System.Web.DynamicData.DynamicRouteExpression> class.  \\n  \\n```  \\n<asp:QueryExtender TargetControlID=\\\"GridDataSource\\\"   \\n    ID=\\\"GridQueryExtender\\\" runat=\\\"server\\\">  \\n  <asp:DynamicRouteExpression ColumnName=\\\"ProductCategory\\\" />  \\n</asp:QueryExtender>  \\n```\"\n  syntax:\n    content: public string ColumnName { get; set; }\n    return:\n      type: System.String\n      description: The name of the foreign-key column.\n  overload: System.Web.DynamicData.DynamicRouteExpression.ColumnName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)\n  id: GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  langs:\n  - csharp\n  name: GetQueryable(IQueryable)\n  nameWithType: DynamicRouteExpression.GetQueryable(IQueryable)\n  fullName: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(IQueryable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the query from the data source..\n  remarks: The query from the data source, represented by the `source` parameter, is modified by applying the primary or foreign key that is the current route information.\n  syntax:\n    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: The query to modify.\n    return:\n      type: System.Linq.IQueryable\n      description: An instance of the modified query.\n  overload: System.Web.DynamicData.DynamicRouteExpression.GetQueryable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  langs:\n  - csharp\n  name: SetContext(Control,HttpContext,IQueryableDataSource)\n  nameWithType: DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n  fullName: System.Web.DynamicData.DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Sets the HTTP context of the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> object.\n  syntax:\n    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);\n    parameters:\n    - id: owner\n      type: System.Web.UI.Control\n      description: The control that contains the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> instance. This is a <xref href=\"System.Web.UI.WebControls.QueryExtender\"></xref> control.\n    - id: context\n      type: System.Web.HttpContext\n      description: The Web request context.\n    - id: dataSource\n      type: System.Web.UI.WebControls.IQueryableDataSource\n      description: The target data source for the <xref href=\"System.Web.DynamicData.DynamicRouteExpression\"></xref> instance.\n  overload: System.Web.DynamicData.DynamicRouteExpression.SetContext*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression\n  isExternal: false\n  name: System.Web.UI.WebControls.Expressions.DataSourceExpression\n- uid: System.Web.DynamicData.DynamicRouteExpression.#ctor\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: DynamicRouteExpression()\n  nameWithType: DynamicRouteExpression.DynamicRouteExpression()\n  fullName: System.Web.DynamicData.DynamicRouteExpression.DynamicRouteExpression()\n- uid: System.Web.DynamicData.DynamicRouteExpression.ColumnName\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: ColumnName\n  nameWithType: DynamicRouteExpression.ColumnName\n  fullName: System.Web.DynamicData.DynamicRouteExpression.ColumnName\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: GetQueryable(IQueryable)\n  nameWithType: DynamicRouteExpression.GetQueryable(IQueryable)\n  fullName: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(IQueryable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: true\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: SetContext(Control,HttpContext,IQueryableDataSource)\n  nameWithType: DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n  fullName: System.Web.DynamicData.DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.UI.WebControls.IQueryableDataSource\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: IQueryableDataSource\n  nameWithType: IQueryableDataSource\n  fullName: System.Web.UI.WebControls.IQueryableDataSource\n- uid: System.Web.DynamicData.DynamicRouteExpression.#ctor*\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: DynamicRouteExpression\n  nameWithType: DynamicRouteExpression.DynamicRouteExpression\n- uid: System.Web.DynamicData.DynamicRouteExpression.ColumnName*\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: ColumnName\n  nameWithType: DynamicRouteExpression.ColumnName\n- uid: System.Web.DynamicData.DynamicRouteExpression.GetQueryable*\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: GetQueryable\n  nameWithType: DynamicRouteExpression.GetQueryable\n- uid: System.Web.DynamicData.DynamicRouteExpression.SetContext*\n  parent: System.Web.DynamicData.DynamicRouteExpression\n  isExternal: false\n  name: SetContext\n  nameWithType: DynamicRouteExpression.SetContext\n"}