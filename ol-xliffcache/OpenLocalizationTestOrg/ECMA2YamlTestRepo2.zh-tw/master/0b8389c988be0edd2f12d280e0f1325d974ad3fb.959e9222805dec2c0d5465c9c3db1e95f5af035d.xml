{"nodes":[{"pos":[1146,1242],"content":"Indicates the base serializer to use for a root designer object. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates the base serializer to use for a root designer object. This class cannot be inherited.","pos":[0,96],"nodes":[{"content":"Indicates the base serializer to use for a root designer object.","pos":[0,64]},{"content":"This class cannot be inherited.","pos":[65,96]}]}]},{"pos":[1255,2212],"content":"RootDesignerSerializerAttribute indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.       This attribute contains the following significant members:      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.","needQuote":false,"needEscape":true,"nodes":[{"content":"RootDesignerSerializerAttribute indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.       This attribute contains the following significant members:      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.","pos":[0,949],"nodes":[{"content":"RootDesignerSerializerAttribute indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.","pos":[0,267]},{"content":"This attribute contains the following significant members:      -   &lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A&gt; indicates what serialization object to use to serialize the class at design time.","pos":[274,527],"source":"       This attribute contains the following significant members:      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time."},{"content":"-   &lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A&gt; indicates the fully qualified name of the serialization object's base type.","pos":[533,720],"source":"      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type."},{"content":"-   &lt;xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A&gt; indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.","pos":[726,949],"source":"      -   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view."}]}]},{"pos":[3979,4146],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified attributes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"></xref> class using the specified attributes."},{"pos":[4158,4205],"content":"Creates a new designer serialization attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new designer serialization attribute.","pos":[0,47]}]},{"pos":[4435,4495],"content":"The fully qualified name of the data type of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified name of the data type of the serializer.","pos":[0,60]}]},{"pos":[4574,4698],"content":"The name of the base type of the serializer. A class can include multiple serializers as they all have different base types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the base type of the serializer. A class can include multiple serializers as they all have different base types.","pos":[0,124],"nodes":[{"content":"The name of the base type of the serializer.","pos":[0,44]},{"content":"A class can include multiple serializers as they all have different base types.","pos":[45,124]}]}]},{"pos":[4766,4964],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this serializer supports dynamic reloading of the document; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this serializer supports dynamic reloading of the document; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5804,5971],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified attributes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"></xref> class using the specified attributes."},{"pos":[5983,6030],"content":"Creates a new designer serialization attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new designer serialization attribute.","pos":[0,47]}]},{"pos":[6254,6314],"content":"The fully qualified name of the data type of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The fully qualified name of the data type of the serializer.","pos":[0,60]}]},{"pos":[6387,6512],"content":"The name of the base type of the serializer. A class can include multiple serializers, as they all have different base types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the base type of the serializer. A class can include multiple serializers, as they all have different base types.","pos":[0,125],"nodes":[{"content":"The name of the base type of the serializer.","pos":[0,44]},{"content":"A class can include multiple serializers, as they all have different base types.","pos":[45,125]}]}]},{"pos":[6580,6778],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this serializer supports dynamic reloading of the document; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this serializer supports dynamic reloading of the document; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7608,7775],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using the specified attributes.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"></xref> class using the specified attributes."},{"pos":[7787,7834],"content":"Creates a new designer serialization attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a new designer serialization attribute.","pos":[0,47]}]},{"pos":[8046,8078],"content":"The data type of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data type of the serializer.","pos":[0,32]}]},{"pos":[8151,8263],"content":"The base type of the serializer. A class can include multiple serializers as they all have different base types.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base type of the serializer. A class can include multiple serializers as they all have different base types.","pos":[0,112],"nodes":[{"content":"The base type of the serializer.","pos":[0,32]},{"content":"A class can include multiple serializers as they all have different base types.","pos":[33,112]}]}]},{"pos":[8331,8529],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this serializer supports dynamic reloading of the document; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this serializer supports dynamic reloading of the document; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9164,9300],"content":"Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.","pos":[0,136]}]},{"pos":[9313,10359],"content":"If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user. If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.       Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document. These serializers sometimes need to create a new designer host each time the design document is loaded. If this is the situation, Reloadable will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed. The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again. If Reloadable is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.","needQuote":false,"needEscape":true,"nodes":[{"content":"If this property is set to <ph id=\"ph1\">`false`</ph>, the design document does not automatically perform a reload on behalf of the user.","pos":[0,118],"source":"If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user."},{"content":"If this property is set to <ph id=\"ph1\">`false`</ph>, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.","pos":[119,281],"source":" If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired."},{"content":"Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document.","pos":[288,424]},{"content":"These serializers sometimes need to create a new designer host each time the design document is loaded.","pos":[425,528]},{"content":"If this is the situation, Reloadable will be set to <ph id=\"ph1\">`false`</ph>, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed.","pos":[529,730],"source":" If this is the situation, Reloadable will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed."},{"content":"The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again.","pos":[731,872]},{"content":"If Reloadable is <ph id=\"ph1\">`true`</ph>, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.","pos":[873,1044],"source":" If Reloadable is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it."}]},{"pos":[10474,10652],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the root serializer supports reloading; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the root serializer supports reloading; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11352,11422],"content":"Gets the fully qualified type name of the base type of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the fully qualified type name of the base type of the serializer.","pos":[0,70]}]},{"pos":[11549,11593],"content":"The name of the base type of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the base type of the serializer.","pos":[0,44]}]},{"pos":[12285,12338],"content":"Gets the fully qualified type name of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the fully qualified type name of the serializer.","pos":[0,53]}]},{"pos":[12461,12500],"content":"The name of the type of the serializer.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the type of the serializer.","pos":[0,39]}]},{"pos":[13128,13169],"content":"Gets a unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a unique ID for this attribute type.","pos":[0,41]}]},{"pos":[13181,13472],"content":"This property is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.","pos":[0,291],"nodes":[{"content":"This property is used by filtering algorithms to identify two attributes that are the same type.","pos":[0,96]},{"content":"For most attributes, this just returns the &lt;xref:System.Type&gt; instance for the attribute.","pos":[97,186],"source":" For most attributes, this just returns the <xref:System.Type> instance for the attribute."},{"content":"&lt;xref:System.ComponentModel.EditorAttribute&gt; overrides this to include the type of the editor base type.","pos":[187,291],"source":" <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type."}]}]},{"pos":[13592,13649],"content":"An object containing a unique ID for this attribute type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object containing a unique ID for this attribute type.","pos":[0,57]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  id: RootDesignerSerializerAttribute\n  children:\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName\n  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId\n  langs:\n  - csharp\n  name: RootDesignerSerializerAttribute\n  nameWithType: RootDesignerSerializerAttribute\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  type: Class\n  summary: Indicates the base serializer to use for a root designer object. This class cannot be inherited.\n  remarks: \"RootDesignerSerializerAttribute indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.  \\n  \\n This attribute contains the following significant members:  \\n  \\n-   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.  \\n  \\n-   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.  \\n  \\n-   <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.\"\n  example:\n  - \"The following example code applies a RootDesignerSerializerAttribute to a component.  \\n  \\n [!code-cs[IDesignerSerializationManagerSample#2](~/add/codesnippet/csharp/t-system.componentmodel._107_1.cs)]\\n [!code-cpp[IDesignerSerializationManagerSample#2](~/add/codesnippet/cpp/t-system.componentmodel._107_1.cpp)]\\n [!code-vb[IDesignerSerializationManagerSample#2](~/add/codesnippet/visualbasic/t-system.componentmodel._107_1.vb)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]\n\n      [System.Obsolete(\"This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public sealed class RootDesignerSerializerAttribute : Attribute\n  inheritance:\n  - System.Attribute\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)\n  id: '#ctor(System.String,System.String,System.Boolean)'\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: RootDesignerSerializerAttribute(String,String,Boolean)\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,String,Boolean)\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,String,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"></xref> class using the specified attributes.\n  remarks: Creates a new designer serialization attribute.\n  syntax:\n    content: public RootDesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName, bool reloadable);\n    parameters:\n    - id: serializerTypeName\n      type: System.String\n      description: The fully qualified name of the data type of the serializer.\n    - id: baseSerializerTypeName\n      type: System.String\n      description: The name of the base type of the serializer. A class can include multiple serializers as they all have different base types.\n    - id: reloadable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this serializer supports dynamic reloading of the document; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)\n  id: '#ctor(System.String,System.Type,System.Boolean)'\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: RootDesignerSerializerAttribute(String,Type,Boolean)\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,Type,Boolean)\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,Type,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"></xref> class using the specified attributes.\n  remarks: Creates a new designer serialization attribute.\n  syntax:\n    content: public RootDesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType, bool reloadable);\n    parameters:\n    - id: serializerTypeName\n      type: System.String\n      description: The fully qualified name of the data type of the serializer.\n    - id: baseSerializerType\n      type: System.Type\n      description: The name of the base type of the serializer. A class can include multiple serializers, as they all have different base types.\n    - id: reloadable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this serializer supports dynamic reloading of the document; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)\n  id: '#ctor(System.Type,System.Type,System.Boolean)'\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: RootDesignerSerializerAttribute(Type,Type,Boolean)\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(Type,Type,Boolean)\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(Type,Type,Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\"></xref> class using the specified attributes.\n  remarks: Creates a new designer serialization attribute.\n  syntax:\n    content: public RootDesignerSerializerAttribute (Type serializerType, Type baseSerializerType, bool reloadable);\n    parameters:\n    - id: serializerType\n      type: System.Type\n      description: The data type of the serializer.\n    - id: baseSerializerType\n      type: System.Type\n      description: The base type of the serializer. A class can include multiple serializers as they all have different base types.\n    - id: reloadable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this serializer supports dynamic reloading of the document; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable\n  id: Reloadable\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: Reloadable\n  nameWithType: RootDesignerSerializerAttribute.Reloadable\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.\n  remarks: \"If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user. If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.  \\n  \\n Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document. These serializers sometimes need to create a new designer host each time the design document is loaded. If this is the situation, Reloadable will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed. The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again. If Reloadable is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.\"\n  syntax:\n    content: public bool Reloadable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the root serializer supports reloading; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName\n  id: SerializerBaseTypeName\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: SerializerBaseTypeName\n  nameWithType: RootDesignerSerializerAttribute.SerializerBaseTypeName\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the fully qualified type name of the base type of the serializer.\n  syntax:\n    content: public string SerializerBaseTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the base type of the serializer.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName\n  id: SerializerTypeName\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: SerializerTypeName\n  nameWithType: RootDesignerSerializerAttribute.SerializerTypeName\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the fully qualified type name of the serializer.\n  syntax:\n    content: public string SerializerTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the type of the serializer.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: RootDesignerSerializerAttribute.TypeId\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets a unique ID for this attribute type.\n  remarks: This property is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: An object containing a unique ID for this attribute type.\n  overload: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: RootDesignerSerializerAttribute(String,String,Boolean)\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,String,Boolean)\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: RootDesignerSerializerAttribute(String,Type,Boolean)\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,Type,Boolean)\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(String,Type,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: RootDesignerSerializerAttribute(Type,Type,Boolean)\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(Type,Type,Boolean)\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.RootDesignerSerializerAttribute(Type,Type,Boolean)\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: Reloadable\n  nameWithType: RootDesignerSerializerAttribute.Reloadable\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: SerializerBaseTypeName\n  nameWithType: RootDesignerSerializerAttribute.SerializerBaseTypeName\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: SerializerTypeName\n  nameWithType: RootDesignerSerializerAttribute.SerializerTypeName\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: RootDesignerSerializerAttribute.TypeId\n  fullName: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor*\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: RootDesignerSerializerAttribute\n  nameWithType: RootDesignerSerializerAttribute.RootDesignerSerializerAttribute\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable*\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: Reloadable\n  nameWithType: RootDesignerSerializerAttribute.Reloadable\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName*\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: SerializerBaseTypeName\n  nameWithType: RootDesignerSerializerAttribute.SerializerBaseTypeName\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName*\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: SerializerTypeName\n  nameWithType: RootDesignerSerializerAttribute.SerializerTypeName\n- uid: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId*\n  parent: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: RootDesignerSerializerAttribute.TypeId\n"}