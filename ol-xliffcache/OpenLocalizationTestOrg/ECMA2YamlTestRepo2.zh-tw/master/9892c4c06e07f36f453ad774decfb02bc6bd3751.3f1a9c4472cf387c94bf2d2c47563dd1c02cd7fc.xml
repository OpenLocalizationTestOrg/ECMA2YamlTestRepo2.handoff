{"nodes":[{"pos":[821,863],"content":"Provides access to information on a drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to information on a drive.","pos":[0,42]}]},{"pos":[875,1140],"content":"This class models a drive and provides methods and properties to query for drive information. Use DriveInfo to determine what drives are available, and what type of drives they are. You can also query to determine the capacity and available free space on the drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class models a drive and provides methods and properties to query for drive information. Use DriveInfo to determine what drives are available, and what type of drives they are. You can also query to determine the capacity and available free space on the drive.","pos":[0,265],"nodes":[{"content":"This class models a drive and provides methods and properties to query for drive information.","pos":[0,93]},{"content":"Use DriveInfo to determine what drives are available, and what type of drives they are.","pos":[94,181]},{"content":"You can also query to determine the capacity and available free space on the drive.","pos":[182,265]}]}]},{"pos":[2122,2176],"content":"Provides access to information on the specified drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides access to information on the specified drive.","pos":[0,54]}]},{"pos":[2188,2431],"content":"Use this class to obtain information on drives. The drive name must be either an uppercase or lowercase letter from 'a' to 'z'. You cannot use this method to obtain information on drive names that are `null` or use UNC (\\\\\\server\\share) paths.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this class to obtain information on drives.","pos":[0,47]},{"content":"The drive name must be either an uppercase or lowercase letter from 'a' to 'z'.","pos":[48,127]},{"content":"You cannot use this method to obtain information on drive names that are <ph id=\"ph1\">`null`</ph> or use UNC (<ph id=\"ph2\">\\\\</ph>\\server\\share) paths.","pos":[128,243],"source":" You cannot use this method to obtain information on drive names that are `null` or use UNC (\\\\\\server\\share) paths."}]},{"pos":[2573,2690],"content":"A valid drive path or drive letter. This can be either uppercase or lowercase, 'a' to 'z'. A null value is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"A valid drive path or drive letter. This can be either uppercase or lowercase, 'a' to 'z'. A null value is not valid.","pos":[0,117],"nodes":[{"content":"A valid drive path or drive letter.","pos":[0,35]},{"content":"This can be either uppercase or lowercase, 'a' to 'z'.","pos":[36,90]},{"content":"A null value is not valid.","pos":[91,117]}]}]},{"pos":[2846,2934],"content":"The drive letter cannot be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The drive letter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3030,3206],"content":"The first letter of <code>driveName</code> is not an uppercase or lowercase letter from 'a' to 'z'.       -or-       <code>driveName</code> does not refer to a valid drive.","needQuote":false,"needEscape":true,"nodes":[{"content":"The first letter of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">driveName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not an uppercase or lowercase letter from 'a' to 'z'.","pos":[0,99],"source":"The first letter of <code>driveName</code> is not an uppercase or lowercase letter from 'a' to 'z'."},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">driveName</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not refer to a valid drive.","pos":[106,172],"source":"       -or-       <code>driveName</code> does not refer to a valid drive."}]},{"pos":[3553,3619],"content":"Indicates the amount of available free space on a drive, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates the amount of available free space on a drive, in bytes.","pos":[0,66]}]},{"pos":[3631,3857],"content":"This property indicates the amount of free space available on the drive. Note that this number may be different from the <xref:System.IO.DriveInfo.TotalFreeSpace%2A> number because this property takes into account disk quotas.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property indicates the amount of free space available on the drive. Note that this number may be different from the <xref:System.IO.DriveInfo.TotalFreeSpace%2A> number because this property takes into account disk quotas.","pos":[0,226],"nodes":[{"content":"This property indicates the amount of free space available on the drive.","pos":[0,72]},{"content":"Note that this number may be different from the &lt;xref:System.IO.DriveInfo.TotalFreeSpace%2A&gt; number because this property takes into account disk quotas.","pos":[73,226],"source":" Note that this number may be different from the <xref:System.IO.DriveInfo.TotalFreeSpace%2A> number because this property takes into account disk quotas."}]}]},{"pos":[4349,4407],"content":"The amount of free space available on the drive, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount of free space available on the drive, in bytes.","pos":[0,58]}]},{"pos":[4588,4630],"content":"Access to the drive information is denied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the drive information is denied.","pos":[0,42]}]},{"pos":[4719,4794],"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","pos":[0,75]}]},{"pos":[5105,5161],"content":"Gets the name of the file system, such as NTFS or FAT32.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the file system, such as NTFS or FAT32.","pos":[0,56]}]},{"pos":[5173,5231],"content":"Use DriveFormat to determine what formatting a drive uses.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use DriveFormat to determine what formatting a drive uses.","pos":[0,58]}]},{"pos":[5723,5774],"content":"The name of the file system on the specified drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the file system on the specified drive.","pos":[0,51]}]},{"pos":[5948,5990],"content":"Access to the drive information is denied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the drive information is denied.","pos":[0,42]}]},{"pos":[6101,6143],"content":"The drive does not exist or is not mapped.","needQuote":true,"needEscape":true,"nodes":[{"content":"The drive does not exist or is not mapped.","pos":[0,42]}]},{"pos":[6232,6307],"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","pos":[0,75]}]},{"pos":[6608,6674],"content":"Gets the drive type, such as CD-ROM, removable, network, or fixed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the drive type, such as CD-ROM, removable, network, or fixed.","pos":[0,66]}]},{"pos":[6687,6916],"content":"The DriveType property indicates whether a drive is one of the following: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, or `Unknown`. These values are described in the <xref:System.IO.DriveType> enumeration.","needQuote":false,"needEscape":true,"nodes":[{"content":"The DriveType property indicates whether a drive is one of the following: <ph id=\"ph1\">`CDRom`</ph>, <ph id=\"ph2\">`Fixed`</ph>, <ph id=\"ph3\">`Network`</ph>, <ph id=\"ph4\">`NoRootDirectory`</ph>, <ph id=\"ph5\">`Ram`</ph>, <ph id=\"ph6\">`Removable`</ph>, or <ph id=\"ph7\">`Unknown`</ph>.","pos":[0,155],"source":"The DriveType property indicates whether a drive is one of the following: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, or `Unknown`."},{"content":"These values are described in the &lt;xref:System.IO.DriveType&gt; enumeration.","pos":[156,229],"source":" These values are described in the <xref:System.IO.DriveType> enumeration."}]},{"pos":[7423,7481],"content":"One of the enumeration values that specifies a drive type.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the enumeration values that specifies a drive type.","pos":[0,58]}]},{"pos":[7846,7908],"content":"Retrieves the drive names of all logical drives on a computer.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the drive names of all logical drives on a computer.","pos":[0,62]}]},{"pos":[7920,8324],"content":"This method retrieves all logical drive names on a computer. You can use this information to iterate through the array and obtain information on the drives using other <xref:System.IO.DriveInfo> methods and properties. Use the <xref:System.IO.DriveInfo.IsReady%2A> property to test whether a drive is ready because using this method on a drive that is not ready will throw a <xref:System.IO.IOException>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method retrieves all logical drive names on a computer. You can use this information to iterate through the array and obtain information on the drives using other <xref:System.IO.DriveInfo> methods and properties. Use the <xref:System.IO.DriveInfo.IsReady%2A> property to test whether a drive is ready because using this method on a drive that is not ready will throw a <xref:System.IO.IOException>.","pos":[0,404],"nodes":[{"content":"This method retrieves all logical drive names on a computer.","pos":[0,60]},{"content":"You can use this information to iterate through the array and obtain information on the drives using other &lt;xref:System.IO.DriveInfo&gt; methods and properties.","pos":[61,218],"source":" You can use this information to iterate through the array and obtain information on the drives using other <xref:System.IO.DriveInfo> methods and properties."},{"content":"Use the &lt;xref:System.IO.DriveInfo.IsReady%2A&gt; property to test whether a drive is ready because using this method on a drive that is not ready will throw a &lt;xref:System.IO.IOException&gt;.","pos":[219,404],"source":" Use the <xref:System.IO.DriveInfo.IsReady%2A> property to test whether a drive is ready because using this method on a drive that is not ready will throw a <xref:System.IO.IOException>."}]}]},{"pos":[8854,8961],"content":"An array of type <bpt id=\"p1\">&lt;xref href=\"System.IO.DriveInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the logical drives on a computer.","needQuote":true,"needEscape":true,"source":"An array of type <xref href=\"System.IO.DriveInfo\"></xref> that represents the logical drives on a computer."},{"pos":[9107,9182],"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","pos":[0,75]}]},{"pos":[9297,9346],"content":"The caller does not have the required permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[9637,9690],"content":"Gets a value that indicates whether a drive is ready.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether a drive is ready.","pos":[0,53]}]},{"pos":[9703,10478],"content":"IsReady indicates whether a drive is ready. For example, it indicates whether a CD is in a CD drive or whether a removable storage device is ready for read/write operations. If you do not test whether a drive is ready, and it is not ready,  querying the drive using <xref:System.IO.DriveInfo> will raise an <xref:System.IO.IOException>.       Do not rely on IsReady to avoid catching exceptions from other members such as <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>, and <xref:System.IO.DriveInfo.DriveFormat%2A>. Between the time that your code checks IsReady and then accesses one of the other properties (even if the access occurs immediately after the check), a drive may have been disconnected or a disk may have been removed.","needQuote":false,"needEscape":true,"nodes":[{"content":"IsReady indicates whether a drive is ready. For example, it indicates whether a CD is in a CD drive or whether a removable storage device is ready for read/write operations. If you do not test whether a drive is ready, and it is not ready,  querying the drive using <xref:System.IO.DriveInfo> will raise an <xref:System.IO.IOException>.       Do not rely on IsReady to avoid catching exceptions from other members such as <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>, and <xref:System.IO.DriveInfo.DriveFormat%2A>. Between the time that your code checks IsReady and then accesses one of the other properties (even if the access occurs immediately after the check), a drive may have been disconnected or a disk may have been removed.","pos":[0,773],"nodes":[{"content":"IsReady indicates whether a drive is ready.","pos":[0,43]},{"content":"For example, it indicates whether a CD is in a CD drive or whether a removable storage device is ready for read/write operations.","pos":[44,173]},{"content":"If you do not test whether a drive is ready, and it is not ready,  querying the drive using &lt;xref:System.IO.DriveInfo&gt; will raise an &lt;xref:System.IO.IOException&gt;.","pos":[174,336],"source":" If you do not test whether a drive is ready, and it is not ready,  querying the drive using <xref:System.IO.DriveInfo> will raise an <xref:System.IO.IOException>."},{"content":"Do not rely on IsReady to avoid catching exceptions from other members such as &lt;xref:System.IO.DriveInfo.TotalSize%2A&gt;, &lt;xref:System.IO.DriveInfo.TotalFreeSpace%2A&gt;, and &lt;xref:System.IO.DriveInfo.DriveFormat%2A&gt;.","pos":[343,555],"source":"       Do not rely on IsReady to avoid catching exceptions from other members such as <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>, and <xref:System.IO.DriveInfo.DriveFormat%2A>."},{"content":"Between the time that your code checks IsReady and then accesses one of the other properties (even if the access occurs immediately after the check), a drive may have been disconnected or a disk may have been removed.","pos":[556,773]}]}]},{"pos":[10962,11135],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the drive is ready; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the drive is not ready.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the drive is ready; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the drive is not ready."},{"pos":[11469,11508],"content":"Gets the name of a drive, such as C:\\\\.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of a drive, such as C:<ph id=\"ph1\">\\\\</ph>.","pos":[0,39],"source":"Gets the name of a drive, such as C:\\\\."}]},{"pos":[11520,11589],"content":"This property is the name assigned to the drive, such as C:\\ or E:\\\\.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is the name assigned to the drive, such as C:\\ or E:<ph id=\"ph1\">\\\\</ph>.","pos":[0,69],"source":"This property is the name assigned to the drive, such as C:\\ or E:\\\\."}]},{"pos":[12074,12096],"content":"The name of the drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the drive.","pos":[0,22]}]},{"pos":[12472,12507],"content":"Gets the root directory of a drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the root directory of a drive.","pos":[0,35]}]},{"pos":[12652,12708],"content":"An object that contains the root directory of the drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the root directory of the drive.","pos":[0,56]}]},{"pos":[13616,13755],"content":"Populates a <bpt id=\"p1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object with the data needed to serialize the target object.","needQuote":true,"needEscape":true,"source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the target object."},{"pos":[13768,14123],"content":"Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> object are automatically tracked and serialized by the formatter.       This member is an explicit interface member implementation. It can be used only when the <xref:System.IO.DriveInfo> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> object are automatically tracked and serialized by the formatter.       This member is an explicit interface member implementation. It can be used only when the <xref:System.IO.DriveInfo> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.","pos":[0,353],"nodes":[{"content":"Any objects included in the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; object are automatically tracked and serialized by the formatter.","pos":[0,147],"source":"Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> object are automatically tracked and serialized by the formatter."},{"content":"This member is an explicit interface member implementation.","pos":[154,213]},{"content":"It can be used only when the &lt;xref:System.IO.DriveInfo&gt; instance is cast to an &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.","pos":[214,353],"source":" It can be used only when the <xref:System.IO.DriveInfo> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface."}]}]},{"pos":[14400,14433],"content":"The object to populate with data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to populate with data.","pos":[0,33]}]},{"pos":[14529,14627],"content":"The destination (see <xref:System.Runtime.Serialization.StreamingContext>) for this serialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"The destination (see &lt;xref:System.Runtime.Serialization.StreamingContext&gt;) for this serialization.","pos":[0,98],"source":"The destination (see <xref:System.Runtime.Serialization.StreamingContext>) for this serialization."}]},{"pos":[15034,15067],"content":"Returns a drive name as a string.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a drive name as a string.","pos":[0,33]}]},{"pos":[15079,15147],"content":"This method returns the <xref:System.IO.DriveInfo.Name%2A> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method returns the &lt;xref:System.IO.DriveInfo.Name%2A&gt; property.","pos":[0,68],"source":"This method returns the <xref:System.IO.DriveInfo.Name%2A> property."}]},{"pos":[15283,15305],"content":"The name of the drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the drive.","pos":[0,22]}]},{"pos":[15690,15757],"content":"Gets the total amount of free space available on a drive, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total amount of free space available on a drive, in bytes.","pos":[0,67]}]},{"pos":[15769,15895],"content":"This property indicates the total amount of free space available on the drive, not just what is available to the current user.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property indicates the total amount of free space available on the drive, not just what is available to the current user.","pos":[0,126]}]},{"pos":[16387,16439],"content":"The total free space available on a drive, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total free space available on a drive, in bytes.","pos":[0,52]}]},{"pos":[16616,16658],"content":"Access to the drive information is denied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the drive information is denied.","pos":[0,42]}]},{"pos":[16769,16811],"content":"The drive is not mapped or does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The drive is not mapped or does not exist.","pos":[0,42]}]},{"pos":[16900,16975],"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","pos":[0,75]}]},{"pos":[17276,17334],"content":"Gets the total size of storage space on a drive, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the total size of storage space on a drive, in bytes.","pos":[0,58]}]},{"pos":[17346,17455],"content":"This property indicates the total size of the drive in bytes, not just what is available to the current user.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property indicates the total size of the drive in bytes, not just what is available to the current user.","pos":[0,109]}]},{"pos":[17942,17980],"content":"The total size of the drive, in bytes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The total size of the drive, in bytes.","pos":[0,38]}]},{"pos":[18152,18194],"content":"Access to the drive information is denied.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access to the drive information is denied.","pos":[0,42]}]},{"pos":[18305,18347],"content":"The drive is not mapped or does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The drive is not mapped or does not exist.","pos":[0,42]}]},{"pos":[18436,18511],"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","pos":[0,75]}]},{"pos":[18822,18863],"content":"Gets or sets the volume label of a drive.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the volume label of a drive.","pos":[0,41]}]},{"pos":[18875,19043],"content":"The label length is determined by the operating system. For example, NTFS allows a volume label to be up to 32 characters long. Note that `null` is a valid VolumeLabel.","needQuote":true,"needEscape":true,"nodes":[{"content":"The label length is determined by the operating system.","pos":[0,55]},{"content":"For example, NTFS allows a volume label to be up to 32 characters long.","pos":[56,127]},{"content":"Note that <ph id=\"ph1\">`null`</ph> is a valid VolumeLabel.","pos":[128,168],"source":" Note that `null` is a valid VolumeLabel."}]},{"pos":[19528,19545],"content":"The volume label.","needQuote":true,"needEscape":true,"nodes":[{"content":"The volume label.","pos":[0,17]}]},{"pos":[19693,19768],"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","needQuote":true,"needEscape":true,"nodes":[{"content":"An I/O error occurred (for example, a disk error or a drive was not ready).","pos":[0,75]}]},{"pos":[19879,19921],"content":"The drive is not mapped or does not exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"The drive is not mapped or does not exist.","pos":[0,42]}]},{"pos":[20034,20083],"content":"The caller does not have the required permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]},{"pos":[20199,20322],"content":"The volume label is being set on a network or CD-ROM drive.       -or-       Access to the drive information is denied.","needQuote":false,"needEscape":true,"nodes":[{"content":"The volume label is being set on a network or CD-ROM drive.       -or-       Access to the drive information is denied.","pos":[0,119],"nodes":[{"content":"The volume label is being set on a network or CD-ROM drive.","pos":[0,59]},{"content":"-or-       Access to the drive information is denied.","pos":[66,119]}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.DriveInfo\n  id: DriveInfo\n  children:\n  - System.IO.DriveInfo.#ctor(System.String)\n  - System.IO.DriveInfo.AvailableFreeSpace\n  - System.IO.DriveInfo.DriveFormat\n  - System.IO.DriveInfo.DriveType\n  - System.IO.DriveInfo.GetDrives\n  - System.IO.DriveInfo.IsReady\n  - System.IO.DriveInfo.Name\n  - System.IO.DriveInfo.RootDirectory\n  - System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.IO.DriveInfo.ToString\n  - System.IO.DriveInfo.TotalFreeSpace\n  - System.IO.DriveInfo.TotalSize\n  - System.IO.DriveInfo.VolumeLabel\n  langs:\n  - csharp\n  name: DriveInfo\n  nameWithType: DriveInfo\n  fullName: System.IO.DriveInfo\n  type: Class\n  summary: Provides access to information on a drive.\n  remarks: This class models a drive and provides methods and properties to query for drive information. Use DriveInfo to determine what drives are available, and what type of drives they are. You can also query to determine the capacity and available free space on the drive.\n  example:\n  - \"The following code example demonstrates the use of the DriveInfo class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/t-system.io.driveinfo_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/t-system.io.driveinfo_1.vb)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DriveInfo : System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: DriveInfo(String)\n  nameWithType: DriveInfo.DriveInfo(String)\n  fullName: System.IO.DriveInfo.DriveInfo(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Provides access to information on the specified drive.\n  remarks: Use this class to obtain information on drives. The drive name must be either an uppercase or lowercase letter from 'a' to 'z'. You cannot use this method to obtain information on drive names that are `null` or use UNC (\\\\\\server\\share) paths.\n  syntax:\n    content: public DriveInfo (string driveName);\n    parameters:\n    - id: driveName\n      type: System.String\n      description: A valid drive path or drive letter. This can be either uppercase or lowercase, 'a' to 'z'. A null value is not valid.\n  overload: System.IO.DriveInfo.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The drive letter cannot be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The first letter of <code>driveName</code> is not an uppercase or lowercase letter from 'a' to 'z'.  \\n  \\n -or-  \\n  \\n <code>driveName</code> does not refer to a valid drive.\"\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.AvailableFreeSpace\n  id: AvailableFreeSpace\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: AvailableFreeSpace\n  nameWithType: DriveInfo.AvailableFreeSpace\n  fullName: System.IO.DriveInfo.AvailableFreeSpace\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Indicates the amount of available free space on a drive, in bytes.\n  remarks: This property indicates the amount of free space available on the drive. Note that this number may be different from the <xref:System.IO.DriveInfo.TotalFreeSpace%2A> number because this property takes into account disk quotas.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.av_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.av_1.vb)]\"\n  syntax:\n    content: public long AvailableFreeSpace { get; }\n    return:\n      type: System.Int64\n      description: The amount of free space available on the drive, in bytes.\n  overload: System.IO.DriveInfo.AvailableFreeSpace*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the drive information is denied.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred (for example, a disk error or a drive was not ready).\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.DriveFormat\n  id: DriveFormat\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: DriveFormat\n  nameWithType: DriveInfo.DriveFormat\n  fullName: System.IO.DriveInfo.DriveFormat\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets the name of the file system, such as NTFS or FAT32.\n  remarks: Use DriveFormat to determine what formatting a drive uses.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_0_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_0_1.vb)]\"\n  syntax:\n    content: public string DriveFormat { get; }\n    return:\n      type: System.String\n      description: The name of the file system on the specified drive.\n  overload: System.IO.DriveInfo.DriveFormat*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the drive information is denied.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: The drive does not exist or is not mapped.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred (for example, a disk error or a drive was not ready).\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.DriveType\n  id: DriveType\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: DriveType\n  nameWithType: DriveInfo.DriveType\n  fullName: System.IO.DriveInfo.DriveType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets the drive type, such as CD-ROM, removable, network, or fixed.\n  remarks: 'The DriveType property indicates whether a drive is one of the following: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, or `Unknown`. These values are described in the <xref:System.IO.DriveType> enumeration.'\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_1_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_1_1.vb)]\"\n  syntax:\n    content: public System.IO.DriveType DriveType { get; }\n    return:\n      type: System.IO.DriveType\n      description: One of the enumeration values that specifies a drive type.\n  overload: System.IO.DriveInfo.DriveType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.GetDrives\n  id: GetDrives\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: GetDrives()\n  nameWithType: DriveInfo.GetDrives()\n  fullName: System.IO.DriveInfo.GetDrives()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Retrieves the drive names of all logical drives on a computer.\n  remarks: This method retrieves all logical drive names on a computer. You can use this information to iterate through the array and obtain information on the drives using other <xref:System.IO.DriveInfo> methods and properties. Use the <xref:System.IO.DriveInfo.IsReady%2A> property to test whether a drive is ready because using this method on a drive that is not ready will throw a <xref:System.IO.IOException>.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/m-system.io.driveinfo.ge_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/m-system.io.driveinfo.ge_1.vb)]\"\n  syntax:\n    content: public static System.IO.DriveInfo[] GetDrives ();\n    parameters: []\n    return:\n      type: System.IO.DriveInfo[]\n      description: An array of type <xref href=\"System.IO.DriveInfo\"></xref> that represents the logical drives on a computer.\n  overload: System.IO.DriveInfo.GetDrives*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred (for example, a disk error or a drive was not ready).\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: The caller does not have the required permission.\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.IsReady\n  id: IsReady\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: IsReady\n  nameWithType: DriveInfo.IsReady\n  fullName: System.IO.DriveInfo.IsReady\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets a value that indicates whether a drive is ready.\n  remarks: \"IsReady indicates whether a drive is ready. For example, it indicates whether a CD is in a CD drive or whether a removable storage device is ready for read/write operations. If you do not test whether a drive is ready, and it is not ready,  querying the drive using <xref:System.IO.DriveInfo> will raise an <xref:System.IO.IOException>.  \\n  \\n Do not rely on IsReady to avoid catching exceptions from other members such as <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>, and <xref:System.IO.DriveInfo.DriveFormat%2A>. Between the time that your code checks IsReady and then accesses one of the other properties (even if the access occurs immediately after the check), a drive may have been disconnected or a disk may have been removed.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.is_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.is_1.vb)]\"\n  syntax:\n    content: public bool IsReady { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the drive is ready; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the drive is not ready.\n  overload: System.IO.DriveInfo.IsReady*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.Name\n  id: Name\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: DriveInfo.Name\n  fullName: System.IO.DriveInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets the name of a drive, such as C:\\\\.\n  remarks: This property is the name assigned to the drive, such as C:\\ or E:\\\\.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.name_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.name_1.vb)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the drive.\n  overload: System.IO.DriveInfo.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.RootDirectory\n  id: RootDirectory\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: RootDirectory\n  nameWithType: DriveInfo.RootDirectory\n  fullName: System.IO.DriveInfo.RootDirectory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets the root directory of a drive.\n  syntax:\n    content: public System.IO.DirectoryInfo RootDirectory { get; }\n    return:\n      type: System.IO.DirectoryInfo\n      description: An object that contains the root directory of the drive.\n  overload: System.IO.DriveInfo.RootDirectory*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the target object.\n  remarks: \"Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> object are automatically tracked and serialized by the formatter.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.IO.DriveInfo> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.\"\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination (see <xref:System.Runtime.Serialization.StreamingContext>) for this serialization.\n  overload: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.ToString\n  id: ToString\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DriveInfo.ToString()\n  fullName: System.IO.DriveInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Returns a drive name as a string.\n  remarks: This method returns the <xref:System.IO.DriveInfo.Name%2A> property.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the drive.\n  overload: System.IO.DriveInfo.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.TotalFreeSpace\n  id: TotalFreeSpace\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: TotalFreeSpace\n  nameWithType: DriveInfo.TotalFreeSpace\n  fullName: System.IO.DriveInfo.TotalFreeSpace\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets the total amount of free space available on a drive, in bytes.\n  remarks: This property indicates the total amount of free space available on the drive, not just what is available to the current user.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_0_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_0_1.vb)]\"\n  syntax:\n    content: public long TotalFreeSpace { get; }\n    return:\n      type: System.Int64\n      description: The total free space available on a drive, in bytes.\n  overload: System.IO.DriveInfo.TotalFreeSpace*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the drive information is denied.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: The drive is not mapped or does not exist.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred (for example, a disk error or a drive was not ready).\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.TotalSize\n  id: TotalSize\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: TotalSize\n  nameWithType: DriveInfo.TotalSize\n  fullName: System.IO.DriveInfo.TotalSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets the total size of storage space on a drive, in bytes.\n  remarks: This property indicates the total size of the drive in bytes, not just what is available to the current user.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_1_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_1_1.vb)]\"\n  syntax:\n    content: public long TotalSize { get; }\n    return:\n      type: System.Int64\n      description: The total size of the drive, in bytes.\n  overload: System.IO.DriveInfo.TotalSize*\n  exceptions:\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access to the drive information is denied.\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: The drive is not mapped or does not exist.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred (for example, a disk error or a drive was not ready).\n  platform:\n  - net462\n- uid: System.IO.DriveInfo.VolumeLabel\n  id: VolumeLabel\n  parent: System.IO.DriveInfo\n  langs:\n  - csharp\n  name: VolumeLabel\n  nameWithType: DriveInfo.VolumeLabel\n  fullName: System.IO.DriveInfo.VolumeLabel\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  summary: Gets or sets the volume label of a drive.\n  remarks: The label length is determined by the operating system. For example, NTFS allows a volume label to be up to 32 characters long. Note that `null` is a valid VolumeLabel.\n  example:\n  - \"The following example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \\n  \\n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.vo_1.cs)]\\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.vo_1.vb)]\"\n  syntax:\n    content: public string VolumeLabel { get; set; }\n    return:\n      type: System.String\n      description: The volume label.\n  overload: System.IO.DriveInfo.VolumeLabel*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred (for example, a disk error or a drive was not ready).\n  - type: System.IO.DriveNotFoundException\n    commentId: T:System.IO.DriveNotFoundException\n    description: The drive is not mapped or does not exist.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"The volume label is being set on a network or CD-ROM drive.  \\n  \\n -or-  \\n  \\n Access to the drive information is denied.\"\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.IO.DriveNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DriveNotFoundException\n  nameWithType: DriveNotFoundException\n  fullName: System.IO.DriveNotFoundException\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.IO.DriveInfo.#ctor(System.String)\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: DriveInfo(String)\n  nameWithType: DriveInfo.DriveInfo(String)\n  fullName: System.IO.DriveInfo.DriveInfo(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.DriveInfo.AvailableFreeSpace\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: AvailableFreeSpace\n  nameWithType: DriveInfo.AvailableFreeSpace\n  fullName: System.IO.DriveInfo.AvailableFreeSpace\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.DriveInfo.DriveFormat\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: DriveFormat\n  nameWithType: DriveInfo.DriveFormat\n  fullName: System.IO.DriveInfo.DriveFormat\n- uid: System.IO.DriveInfo.DriveType\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: DriveType\n  nameWithType: DriveInfo.DriveType\n  fullName: System.IO.DriveInfo.DriveType\n- uid: System.IO.DriveType\n  parent: System.IO\n  isExternal: false\n  name: DriveType\n  nameWithType: DriveType\n  fullName: System.IO.DriveType\n- uid: System.IO.DriveInfo.GetDrives\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: GetDrives()\n  nameWithType: DriveInfo.GetDrives()\n  fullName: System.IO.DriveInfo.GetDrives()\n- uid: System.IO.DriveInfo[]\n  parent: System.IO\n  isExternal: false\n  name: DriveInfo\n  nameWithType: DriveInfo\n  fullName: System.IO.DriveInfo[]\n  spec.csharp:\n  - uid: System.IO.DriveInfo\n    name: DriveInfo\n    nameWithType: DriveInfo\n    fullName: DriveInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.DriveInfo.IsReady\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: IsReady\n  nameWithType: DriveInfo.IsReady\n  fullName: System.IO.DriveInfo.IsReady\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.DriveInfo.Name\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: Name\n  nameWithType: DriveInfo.Name\n  fullName: System.IO.DriveInfo.Name\n- uid: System.IO.DriveInfo.RootDirectory\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: RootDirectory\n  nameWithType: DriveInfo.RootDirectory\n  fullName: System.IO.DriveInfo.RootDirectory\n- uid: System.IO.DirectoryInfo\n  parent: System.IO\n  isExternal: false\n  name: DirectoryInfo\n  nameWithType: DirectoryInfo\n  fullName: System.IO.DirectoryInfo\n- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.IO.DriveInfo.ToString\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: DriveInfo.ToString()\n  fullName: System.IO.DriveInfo.ToString()\n- uid: System.IO.DriveInfo.TotalFreeSpace\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: TotalFreeSpace\n  nameWithType: DriveInfo.TotalFreeSpace\n  fullName: System.IO.DriveInfo.TotalFreeSpace\n- uid: System.IO.DriveInfo.TotalSize\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: TotalSize\n  nameWithType: DriveInfo.TotalSize\n  fullName: System.IO.DriveInfo.TotalSize\n- uid: System.IO.DriveInfo.VolumeLabel\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: VolumeLabel\n  nameWithType: DriveInfo.VolumeLabel\n  fullName: System.IO.DriveInfo.VolumeLabel\n- uid: System.IO.DriveInfo.#ctor*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: DriveInfo\n  nameWithType: DriveInfo.DriveInfo\n- uid: System.IO.DriveInfo.AvailableFreeSpace*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: AvailableFreeSpace\n  nameWithType: DriveInfo.AvailableFreeSpace\n- uid: System.IO.DriveInfo.DriveFormat*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: DriveFormat\n  nameWithType: DriveInfo.DriveFormat\n- uid: System.IO.DriveInfo.DriveType*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: DriveType\n  nameWithType: DriveInfo.DriveType\n- uid: System.IO.DriveInfo.GetDrives*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: GetDrives\n  nameWithType: DriveInfo.GetDrives\n- uid: System.IO.DriveInfo.IsReady*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: IsReady\n  nameWithType: DriveInfo.IsReady\n- uid: System.IO.DriveInfo.Name*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: Name\n  nameWithType: DriveInfo.Name\n- uid: System.IO.DriveInfo.RootDirectory*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: RootDirectory\n  nameWithType: DriveInfo.RootDirectory\n- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData\n- uid: System.IO.DriveInfo.ToString*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: ToString\n  nameWithType: DriveInfo.ToString\n- uid: System.IO.DriveInfo.TotalFreeSpace*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: TotalFreeSpace\n  nameWithType: DriveInfo.TotalFreeSpace\n- uid: System.IO.DriveInfo.TotalSize*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: TotalSize\n  nameWithType: DriveInfo.TotalSize\n- uid: System.IO.DriveInfo.VolumeLabel*\n  parent: System.IO.DriveInfo\n  isExternal: false\n  name: VolumeLabel\n  nameWithType: DriveInfo.VolumeLabel\n"}