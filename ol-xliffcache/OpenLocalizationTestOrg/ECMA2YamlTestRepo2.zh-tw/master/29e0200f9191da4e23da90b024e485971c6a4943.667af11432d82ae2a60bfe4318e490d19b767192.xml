{"nodes":[{"pos":[677,817],"content":"A specialty class that allows applications to call the <xref:System.Net.Http.HttpMessageInvoker.SendAsync*> method on an Http handler chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"A specialty class that allows applications to call the &lt;xref:System.Net.Http.HttpMessageInvoker.SendAsync*&gt; method on an Http handler chain.","pos":[0,140],"source":"A specialty class that allows applications to call the <xref:System.Net.Http.HttpMessageInvoker.SendAsync*> method on an Http handler chain."}]},{"pos":[830,1109],"content":"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.       Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.       Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","pos":[0,277],"nodes":[{"content":"This class is the base type for &lt;xref:System.Net.Http.HttpClient&gt; and other message originators.","pos":[0,96],"source":"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators."},{"content":"Most applications that are connecting to a web site will use one of the &lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt; methods on the &lt;xref:System.Net.Http.HttpClient&gt; class.","pos":[103,277],"source":"       Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class."}]}]},{"pos":[1798,1961],"content":"Initializes an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specific <bpt id=\"p2\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>."},{"pos":[2157,2271],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> responsible for processing the HTTP response messages.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages."},{"pos":[2920,3083],"content":"Initializes an instance of a <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with a specific <bpt id=\"p2\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>."},{"pos":[3300,3414],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> responsible for processing the HTTP response messages.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages."},{"pos":[3486,3707],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the inner handler should be disposed of by Dispose(),<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if you intend to reuse the inner handler.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the inner handler should be disposed of by Dispose(),<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if you intend to reuse the inner handler."},{"pos":[4140,4279],"content":"Releases the unmanaged resources and disposes of the managed resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref>."},{"pos":[4833,4983],"content":"Releases the unmanaged resources used by the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.","needQuote":true,"needEscape":true,"source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> and optionally disposes of the managed resources."},{"pos":[5138,5348],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to releases only unmanaged resources.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to releases only unmanaged resources."},{"pos":[6043,6093],"content":"Send an HTTP request as an asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Send an HTTP request as an asynchronous operation.","pos":[0,50]}]},{"pos":[6106,6444],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.       Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.       Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","pos":[0,336],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete once the entire response including content is read.","pos":[31,155],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read."},{"content":"Most applications that are connecting to a web site will use one of the &lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt; methods on the &lt;xref:System.Net.Http.HttpClient&gt; class.","pos":[162,336],"source":"       Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class."}]}]},{"pos":[6759,6792],"content":"The HTTP request message to send.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP request message to send.","pos":[0,33]}]},{"pos":[6887,6930],"content":"The cancellation token to cancel operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The cancellation token to cancel operation.","pos":[0,43]}]},{"pos":[7039,7095],"content":"The task object representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]},{"pos":[7270,7360],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">request</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>request</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.HttpMessageInvoker\n  id: HttpMessageInvoker\n  children:\n  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  - System.Net.Http.HttpMessageInvoker.Dispose\n  - System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  - System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: HttpMessageInvoker\n  nameWithType: HttpMessageInvoker\n  fullName: System.Net.Http.HttpMessageInvoker\n  type: Class\n  summary: A specialty class that allows applications to call the <xref:System.Net.Http.HttpMessageInvoker.SendAsync*> method on an Http handler chain.\n  remarks: \"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.  \\n  \\n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.\"\n  syntax:\n    content: 'public class HttpMessageInvoker : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: HttpMessageInvoker(HttpMessageHandler)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>.\n  syntax:\n    content: public HttpMessageInvoker (System.Net.Http.HttpMessageHandler handler);\n    parameters:\n    - id: handler\n      type: System.Net.Http.HttpMessageHandler\n      description: The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages.\n  overload: System.Net.Http.HttpMessageInvoker.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: HttpMessageInvoker(HttpMessageHandler,Boolean)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler,Boolean)\n  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>.\n  syntax:\n    content: public HttpMessageInvoker (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);\n    parameters:\n    - id: handler\n      type: System.Net.Http.HttpMessageHandler\n      description: The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages.\n    - id: disposeHandler\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the inner handler should be disposed of by Dispose(),<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if you intend to reuse the inner handler.\n  overload: System.Net.Http.HttpMessageInvoker.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpMessageInvoker.Dispose\n  id: Dispose\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: HttpMessageInvoker.Dispose()\n  fullName: System.Net.Http.HttpMessageInvoker.Dispose()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Net.Http.HttpMessageInvoker.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: HttpMessageInvoker.Dispose(Boolean)\n  fullName: System.Net.Http.HttpMessageInvoker.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> and optionally disposes of the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to release both managed and unmanaged resources; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to releases only unmanaged resources.\n  overload: System.Net.Http.HttpMessageInvoker.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: SendAsync(HttpRequestMessage,CancellationToken)\n  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.HttpMessageInvoker.SendAsync(HttpRequestMessage,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: Send an HTTP request as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.  \\n  \\n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message to send.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation token to cancel operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.HttpMessageInvoker.SendAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>request</code> was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: HttpMessageInvoker(HttpMessageHandler)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  nameWithType: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: HttpMessageInvoker(HttpMessageHandler,Boolean)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler,Boolean)\n  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.HttpMessageInvoker.Dispose\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpMessageInvoker.Dispose()\n  fullName: System.Net.Http.HttpMessageInvoker.Dispose()\n- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HttpMessageInvoker.Dispose(Boolean)\n  fullName: System.Net.Http.HttpMessageInvoker.Dispose(Boolean)\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: SendAsync(HttpRequestMessage,CancellationToken)\n  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage,CancellationToken)\n  fullName: System.Net.Http.HttpMessageInvoker.SendAsync(HttpRequestMessage,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Net.Http.HttpResponseMessage>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: true\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Http.HttpMessageInvoker.#ctor*\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: HttpMessageInvoker\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker\n- uid: System.Net.Http.HttpMessageInvoker.Dispose*\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: Dispose\n  nameWithType: HttpMessageInvoker.Dispose\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync*\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: SendAsync\n  nameWithType: HttpMessageInvoker.SendAsync\n"}