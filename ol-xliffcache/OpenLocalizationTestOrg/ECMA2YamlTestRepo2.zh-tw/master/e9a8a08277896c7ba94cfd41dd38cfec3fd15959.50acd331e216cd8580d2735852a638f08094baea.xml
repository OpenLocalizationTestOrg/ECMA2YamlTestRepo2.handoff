{"nodes":[{"pos":[876,989],"content":"Defines size and enumerators for a collection of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances.","needQuote":true,"needEscape":true,"source":"Defines size and enumerators for a collection of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances."},{"pos":[1002,1570],"content":"Use the EventLogEntryCollection class when reading the entries associated with an <xref:System.Diagnostics.EventLog> instance. The <xref:System.Diagnostics.EventLog.Entries%2A> property of the <xref:System.Diagnostics.EventLog> class is a collection of all the entries in the event log.       Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the EventLogEntryCollection. However, after you view the entire list, it is not updated with new entries.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the EventLogEntryCollection class when reading the entries associated with an <xref:System.Diagnostics.EventLog> instance. The <xref:System.Diagnostics.EventLog.Entries%2A> property of the <xref:System.Diagnostics.EventLog> class is a collection of all the entries in the event log.       Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the EventLogEntryCollection. However, after you view the entire list, it is not updated with new entries.","pos":[0,566],"nodes":[{"content":"Use the EventLogEntryCollection class when reading the entries associated with an &lt;xref:System.Diagnostics.EventLog&gt; instance.","pos":[0,126],"source":"Use the EventLogEntryCollection class when reading the entries associated with an <xref:System.Diagnostics.EventLog> instance."},{"content":"The &lt;xref:System.Diagnostics.EventLog.Entries%2A&gt; property of the &lt;xref:System.Diagnostics.EventLog&gt; class is a collection of all the entries in the event log.","pos":[127,286],"source":" The <xref:System.Diagnostics.EventLog.Entries%2A> property of the <xref:System.Diagnostics.EventLog> class is a collection of all the entries in the event log."},{"content":"Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the EventLogEntryCollection.","pos":[293,489]},{"content":"However, after you view the entire list, it is not updated with new entries.","pos":[490,566]}]}]},{"pos":[2735,2943],"content":"Copies the elements of the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to an array of <bpt id=\"p2\">&lt;xref href=\"System.Diagnostics.EventLogEntry\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances, starting at a particular array index.","needQuote":true,"needEscape":true,"source":"Copies the elements of the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> to an array of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances, starting at a particular array index."},{"pos":[2955,3377],"content":"Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>. An array of <xref:System.Diagnostics.EventLogEntry> instances is fixed at the time it is instantiated. Therefore, you cannot read new entries by using the array that is returned by the CopyTo method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>. An array of <xref:System.Diagnostics.EventLogEntry> instances is fixed at the time it is instantiated. Therefore, you cannot read new entries by using the array that is returned by the CopyTo method.","pos":[0,422],"nodes":[{"content":"Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt;.","pos":[0,222],"source":"Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>."},{"content":"An array of &lt;xref:System.Diagnostics.EventLogEntry&gt; instances is fixed at the time it is instantiated.","pos":[223,325],"source":" An array of <xref:System.Diagnostics.EventLogEntry> instances is fixed at the time it is instantiated."},{"content":"Therefore, you cannot read new entries by using the array that is returned by the CopyTo method.","pos":[326,422]}]}]},{"pos":[3983,4184],"content":"The one-dimensional array of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances that is the destination of the elements copied from the collection. The array must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional array of <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances that is the destination of the elements copied from the collection.","pos":[0,160],"source":"The one-dimensional array of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances that is the destination of the elements copied from the collection."},{"content":"The array must have zero-based indexing.","pos":[161,201]}]},{"pos":[4245,4303],"content":"The zero-based index in the array at which copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in the array at which copying begins.","pos":[0,58]}]},{"pos":[4754,4904],"content":"Gets the number of entries in the event log (that is, the number of elements in the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntry\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> collection).","needQuote":true,"needEscape":true,"source":"Gets the number of entries in the event log (that is, the number of elements in the <xref href=\"System.Diagnostics.EventLogEntry\"></xref> collection)."},{"pos":[4916,5273],"content":"An <xref:System.Diagnostics.EventLogEntryCollection> represents a dynamic list of all the entries in a log. Therefore, the Count property can change during the lifetime of the <xref:System.Diagnostics.EventLogEntryCollection> instance that you create. It is usually best to work with the Count property directly instead of assigning its value to a variable.","needQuote":true,"needEscape":true,"nodes":[{"content":"An <xref:System.Diagnostics.EventLogEntryCollection> represents a dynamic list of all the entries in a log. Therefore, the Count property can change during the lifetime of the <xref:System.Diagnostics.EventLogEntryCollection> instance that you create. It is usually best to work with the Count property directly instead of assigning its value to a variable.","pos":[0,357],"nodes":[{"content":"An &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; represents a dynamic list of all the entries in a log.","pos":[0,107],"source":"An <xref:System.Diagnostics.EventLogEntryCollection> represents a dynamic list of all the entries in a log."},{"content":"Therefore, the Count property can change during the lifetime of the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; instance that you create.","pos":[108,251],"source":" Therefore, the Count property can change during the lifetime of the <xref:System.Diagnostics.EventLogEntryCollection> instance that you create."},{"content":"It is usually best to work with the Count property directly instead of assigning its value to a variable.","pos":[252,357]}]}]},{"pos":[5833,5882],"content":"The number of entries currently in the event log.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of entries currently in the event log.","pos":[0,49]}]},{"pos":[6376,6484],"content":"Supports a simple iteration over the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Supports a simple iteration over the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> object."},{"pos":[6497,6967],"content":"The object that is returned by the GetEnumerator method is a wrapper for the <xref:System.Diagnostics.EventLogEntryCollection> class that implements the <xref:System.Collections.IEnumerator> enumerator.      > [!NOTE] >  If the collection is changed during the iteration, the iteration is terminated. To avoid this possibility, see the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> property for an alternative technique for iterating through a collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The object that is returned by the GetEnumerator method is a wrapper for the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; class that implements the &lt;xref:System.Collections.IEnumerator&gt; enumerator.","pos":[0,202],"source":"The object that is returned by the GetEnumerator method is a wrapper for the <xref:System.Diagnostics.EventLogEntryCollection> class that implements the <xref:System.Collections.IEnumerator> enumerator."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the collection is changed during the iteration, the iteration is terminated.","pos":[208,300],"source":"      > [!NOTE] >  If the collection is changed during the iteration, the iteration is terminated."},{"content":"To avoid this possibility, see the &lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A&gt; property for an alternative technique for iterating through a collection.","pos":[301,467],"source":" To avoid this possibility, see the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> property for an alternative technique for iterating through a collection."}]},{"pos":[7141,7199],"content":"An object that can be used to iterate over the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to iterate over the collection.","pos":[0,58]}]},{"pos":[7701,7775],"content":"Gets an entry in the event log, based on an index that starts at 0 (zero).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an entry in the event log, based on an index that starts at 0 (zero).","pos":[0,74]}]},{"pos":[7788,8793],"content":"<xref:System.Diagnostics.EventLogEntry> objects are indexed by the event log system according to the chronological order in which they arrived in the event log. Use the Item property to select a specific event log entry whose index in the collection is known.       Iterating through the <xref:System.Diagnostics.EventLogEntryCollection> instance steps through each <xref:System.Diagnostics.EventLogEntry> object sequentially. The collection is dynamic and the number of entries may not be immutable when you enter the loop. Therefore, you should use a `for each...next` loop instead of a `for(int i=0; i<count, i++)` loop to step through entries that are associated with the <xref:System.Diagnostics.EventLogEntryCollection> instance to examine the entire set of entries.       Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>.","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Diagnostics.EventLogEntry&gt; objects are indexed by the event log system according to the chronological order in which they arrived in the event log.","pos":[0,160],"source":"<xref:System.Diagnostics.EventLogEntry> objects are indexed by the event log system according to the chronological order in which they arrived in the event log."},{"content":"Use the Item property to select a specific event log entry whose index in the collection is known.","pos":[161,259]},{"content":"Iterating through the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; instance steps through each &lt;xref:System.Diagnostics.EventLogEntry&gt; object sequentially.","pos":[266,426],"source":"       Iterating through the <xref:System.Diagnostics.EventLogEntryCollection> instance steps through each <xref:System.Diagnostics.EventLogEntry> object sequentially."},{"content":"The collection is dynamic and the number of entries may not be immutable when you enter the loop.","pos":[427,524]},{"content":"Therefore, you should use a <ph id=\"ph1\">`for each...next`</ph> loop instead of a <ph id=\"ph2\">`for(int i=0; i&lt;count, i++)`</ph> loop to step through entries that are associated with the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; instance to examine the entire set of entries.","pos":[525,772],"source":" Therefore, you should use a `for each...next` loop instead of a `for(int i=0; i<count, i++)` loop to step through entries that are associated with the <xref:System.Diagnostics.EventLogEntryCollection> instance to examine the entire set of entries."},{"content":"Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt;.","pos":[779,1001],"source":"       Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>."}]},{"pos":[9413,9478],"content":"The zero-based index that is associated with the event log entry.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index that is associated with the event log entry.","pos":[0,65]}]},{"pos":[9555,9645],"content":"The event log entry at the location that is specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The event log entry at the location that is specified by the <code>index</code> parameter."},{"pos":[10359,10475],"content":"Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the collection to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.","pos":[0,116],"source":"Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index."}]},{"pos":[10487,10715],"content":"Use the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method of the <xref:System.Diagnostics.EventLogEntryCollection> class to copy all or part of the collection to an <xref:System.Diagnostics.EventLogEntry> array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt; method of the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; class to copy all or part of the collection to an &lt;xref:System.Diagnostics.EventLogEntry&gt; array.","pos":[0,228],"source":"Use the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method of the <xref:System.Diagnostics.EventLogEntryCollection> class to copy all or part of the collection to an <xref:System.Diagnostics.EventLogEntry> array."}]},{"pos":[10865,11036],"content":"The one-dimensional <xref:System.Array> that is the destination of the elements that are copied from the collection. The <xref:System.Array> must have zero-based indexing.","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional <xref:System.Array> that is the destination of the elements that are copied from the collection. The <xref:System.Array> must have zero-based indexing.","pos":[0,171],"nodes":[{"content":"The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements that are copied from the collection.","pos":[0,116],"source":"The one-dimensional <xref:System.Array> that is the destination of the elements that are copied from the collection."},{"content":"The &lt;xref:System.Array&gt; must have zero-based indexing.","pos":[117,171],"source":" The <xref:System.Array> must have zero-based indexing."}]}]},{"pos":[11097,11153],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[11849,11993],"content":"Gets a value that indicates whether access to the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is synchronized (thread-safe).","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether access to the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> is synchronized (thread-safe)."},{"pos":[12005,12131],"content":"For the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; class, the ICollection.IsSynchronized method always returns <ph id=\"ph1\">`false`</ph>.","needQuote":true,"needEscape":true,"source":"For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.IsSynchronized method always returns `false`."},{"pos":[12273,12398],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the collection is not synchronized (thread-safe).","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if access to the collection is not synchronized (thread-safe)."},{"pos":[13072,13204],"content":"Gets an object that can be used to synchronize access to the <bpt id=\"p1\">&lt;xref href=\"System.Diagnostics.EventLogEntryCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> object."},{"pos":[13216,13392],"content":"For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.SyncRoot property always returns the current <xref:System.Diagnostics.EventLogEntryCollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For the &lt;xref:System.Diagnostics.EventLogEntryCollection&gt; class, the ICollection.SyncRoot property always returns the current &lt;xref:System.Diagnostics.EventLogEntryCollection&gt;.","pos":[0,176],"source":"For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.SyncRoot property always returns the current <xref:System.Diagnostics.EventLogEntryCollection>."}]},{"pos":[13529,13596],"content":"An object that can be used to synchronize access to the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the collection.","pos":[0,67]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.EventLogEntryCollection\n  id: EventLogEntryCollection\n  children:\n  - System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)\n  - System.Diagnostics.EventLogEntryCollection.Count\n  - System.Diagnostics.EventLogEntryCollection.GetEnumerator\n  - System.Diagnostics.EventLogEntryCollection.Item(System.Int32)\n  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized\n  - System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot\n  langs:\n  - csharp\n  name: EventLogEntryCollection\n  nameWithType: EventLogEntryCollection\n  fullName: System.Diagnostics.EventLogEntryCollection\n  type: Class\n  summary: Defines size and enumerators for a collection of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances.\n  remarks: \"Use the EventLogEntryCollection class when reading the entries associated with an <xref:System.Diagnostics.EventLog> instance. The <xref:System.Diagnostics.EventLog.Entries%2A> property of the <xref:System.Diagnostics.EventLog> class is a collection of all the entries in the event log.  \\n  \\n Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the EventLogEntryCollection. However, after you view the entire list, it is not updated with new entries.\"\n  example:\n  - \"The following example demonstrates how to obtain event log information from an EventLogEntryCollection object.  \\n  \\n [!code-cs[EventLogEntry_CopyTo#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_8_1.cs)]\\n [!code-cpp[EventLogEntry_CopyTo#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_8_1.cpp)]\\n [!code-vb[EventLogEntry_CopyTo#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_8_1.vb)]\"\n  syntax:\n    content: 'public class EventLogEntryCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)\n  id: CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: CopyTo(EventLogEntry[],Int32)\n  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)\n  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Copies the elements of the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> to an array of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances, starting at a particular array index.\n  remarks: Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>. An array of <xref:System.Diagnostics.EventLogEntry> instances is fixed at the time it is instantiated. Therefore, you cannot read new entries by using the array that is returned by the CopyTo method.\n  example:\n  - \"The following example creates an <xref:System.Diagnostics.EventLogEntry> array and uses the CopyTo method to copy the contents of an <xref:System.Diagnostics.EventLogEntryCollection> into it.  \\n  \\n [!code-cs[EventLogEntry_CopyTo#2](~/add/codesnippet/csharp/c20f2fb2-3d8d-4b5e-8328-_1.cs)]\\n [!code-vb[EventLogEntry_CopyTo#2](~/add/codesnippet/visualbasic/c20f2fb2-3d8d-4b5e-8328-_1.vb)]\"\n  syntax:\n    content: public void CopyTo (System.Diagnostics.EventLogEntry[] entries, int index);\n    parameters:\n    - id: entries\n      type: System.Diagnostics.EventLogEntry[]\n      description: The one-dimensional array of <xref href=\"System.Diagnostics.EventLogEntry\"></xref> instances that is the destination of the elements copied from the collection. The array must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in the array at which copying begins.\n  overload: System.Diagnostics.EventLogEntryCollection.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.Count\n  id: Count\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: EventLogEntryCollection.Count\n  fullName: System.Diagnostics.EventLogEntryCollection.Count\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the number of entries in the event log (that is, the number of elements in the <xref href=\"System.Diagnostics.EventLogEntry\"></xref> collection).\n  remarks: An <xref:System.Diagnostics.EventLogEntryCollection> represents a dynamic list of all the entries in a log. Therefore, the Count property can change during the lifetime of the <xref:System.Diagnostics.EventLogEntryCollection> instance that you create. It is usually best to work with the Count property directly instead of assigning its value to a variable.\n  example:\n  - \"The following example demonstrates how to use the Count property to iterate through an <xref:System.Diagnostics.EventLogEntryCollection> object.  \\n  \\n [!code-cs[EventLogEntry_Item#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_25_1.cs)]\\n [!code-cpp[EventLogEntry_Item#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_25_1.cpp)]\\n [!code-vb[EventLogEntry_Item#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_25_1.vb)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of entries currently in the event log.\n  overload: System.Diagnostics.EventLogEntryCollection.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: EventLogEntryCollection.GetEnumerator()\n  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Supports a simple iteration over the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> object.\n  remarks: \"The object that is returned by the GetEnumerator method is a wrapper for the <xref:System.Diagnostics.EventLogEntryCollection> class that implements the <xref:System.Collections.IEnumerator> enumerator.  \\n  \\n> [!NOTE]\\n>  If the collection is changed during the iteration, the iteration is terminated. To avoid this possibility, see the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> property for an alternative technique for iterating through a collection.\"\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that can be used to iterate over the collection.\n  overload: System.Diagnostics.EventLogEntryCollection.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: EventLogEntryCollection.Item(Int32)\n  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets an entry in the event log, based on an index that starts at 0 (zero).\n  remarks: \"<xref:System.Diagnostics.EventLogEntry> objects are indexed by the event log system according to the chronological order in which they arrived in the event log. Use the Item property to select a specific event log entry whose index in the collection is known.  \\n  \\n Iterating through the <xref:System.Diagnostics.EventLogEntryCollection> instance steps through each <xref:System.Diagnostics.EventLogEntry> object sequentially. The collection is dynamic and the number of entries may not be immutable when you enter the loop. Therefore, you should use a `for each...next` loop instead of a `for(int i=0; i<count, i++)` loop to step through entries that are associated with the <xref:System.Diagnostics.EventLogEntryCollection> instance to examine the entire set of entries.  \\n  \\n Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>.\"\n  example:\n  - \"The following example demonstrates how to display information for the items in an <xref:System.Diagnostics.EventLogEntryCollection> object.  \\n  \\n [!code-cs[EventLogEntry_Item#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_8_1.cs)]\\n [!code-cpp[EventLogEntry_Item#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_8_1.cpp)]\\n [!code-vb[EventLogEntry_Item#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_8_1.vb)]\"\n  syntax:\n    content: public virtual System.Diagnostics.EventLogEntry this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index that is associated with the event log entry.\n    return:\n      type: System.Diagnostics.EventLogEntry\n      description: The event log entry at the location that is specified by the <code>index</code> parameter.\n  overload: System.Diagnostics.EventLogEntryCollection.Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Copies the elements of the collection to an <xref:System.Array>, starting at a particular <xref:System.Array> index.\n  remarks: Use the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method of the <xref:System.Diagnostics.EventLogEntryCollection> class to copy all or part of the collection to an <xref:System.Diagnostics.EventLogEntry> array.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref:System.Array> that is the destination of the elements that are copied from the collection. The <xref:System.Array> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets a value that indicates whether access to the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> is synchronized (thread-safe).\n  remarks: For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.IsSynchronized method always returns `false`.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if access to the collection is not synchronized (thread-safe).\n  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Diagnostics.EventLogEntryCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Diagnostics.EventLogEntryCollection\"></xref> object.\n  remarks: For the <xref:System.Diagnostics.EventLogEntryCollection> class, the ICollection.SyncRoot property always returns the current <xref:System.Diagnostics.EventLogEntryCollection>.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the collection.\n  overload: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: CopyTo(EventLogEntry[],Int32)\n  nameWithType: EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)\n  fullName: System.Diagnostics.EventLogEntryCollection.CopyTo(EventLogEntry[],Int32)\n- uid: System.Diagnostics.EventLogEntry[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogEntry\n  nameWithType: EventLogEntry\n  fullName: System.Diagnostics.EventLogEntry[]\n  spec.csharp:\n  - uid: System.Diagnostics.EventLogEntry\n    name: EventLogEntry\n    nameWithType: EventLogEntry\n    fullName: EventLogEntry[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.EventLogEntryCollection.Count\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: Count\n  nameWithType: EventLogEntryCollection.Count\n  fullName: System.Diagnostics.EventLogEntryCollection.Count\n- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: EventLogEntryCollection.GetEnumerator()\n  fullName: System.Diagnostics.EventLogEntryCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Diagnostics.EventLogEntryCollection.Item(System.Int32)\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: EventLogEntryCollection.Item(Int32)\n  fullName: System.Diagnostics.EventLogEntryCollection.Item(Int32)\n- uid: System.Diagnostics.EventLogEntry\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogEntry\n  nameWithType: EventLogEntry\n  fullName: System.Diagnostics.EventLogEntry\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Diagnostics.EventLogEntryCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Diagnostics.EventLogEntryCollection.CopyTo*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: EventLogEntryCollection.CopyTo\n- uid: System.Diagnostics.EventLogEntryCollection.Count*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: Count\n  nameWithType: EventLogEntryCollection.Count\n- uid: System.Diagnostics.EventLogEntryCollection.GetEnumerator*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: EventLogEntryCollection.GetEnumerator\n- uid: System.Diagnostics.EventLogEntryCollection.Item*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: Item\n  nameWithType: EventLogEntryCollection.Item\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.CopyTo\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Diagnostics.EventLogEntryCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: EventLogEntryCollection.System.Collections.ICollection.SyncRoot\n"}