{"nodes":[{"pos":[456,548],"content":"The BerConverter class encodes and decodes structured data using basic encoding rules (BER).","needQuote":true,"needEscape":true,"nodes":[{"content":"The BerConverter class encodes and decodes structured data using basic encoding rules (BER).","pos":[0,92]}]},{"pos":[1202,1304],"content":"The Decode method decodes a binary representation of the data, using BER, to retrieve structured data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Decode method decodes a binary representation of the data, using BER, to retrieve structured data.","pos":[0,102]}]},{"pos":[1467,1485],"content":"The format string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format string.","pos":[0,18]}]},{"pos":[1547,1568],"content":"An array of BER data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of BER data.","pos":[0,21]}]},{"pos":[1628,1645],"content":"The decoded data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The decoded data.","pos":[0,17]}]},{"pos":[1830,1975],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains a null reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic).","needQuote":true,"needEscape":true,"source":"The <code>format</code> parameter contains a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."},{"pos":[2070,2136],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains an undefined character.","needQuote":true,"needEscape":true,"source":"The <code>format</code> parameter contains an undefined character."},{"pos":[2298,3006],"content":"The underlying decoding fails. The decoding rules include the following.       <table><thead><tr><th> Code       </th><th> Corresponding Result       </th></tr></thead><tbody><tr><td> '{' '}' '[' ']' 'n' 'x'       </td><td> No corresponding result       </td></tr><tr><td> 'i' 'e'       </td><td> int       </td></tr><tr><td> 'b'       </td><td> bool       </td></tr><tr><td> 'a'       </td><td> string       </td></tr><tr><td> 'O'       </td><td> byte[]       </td></tr><tr><td> 'B'       </td><td> byte[] containing bit strings       </td></tr><tr><td> 'v'       </td><td> string[]       </td></tr><tr><td> 'V'       </td><td> byte[][]       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"The underlying decoding fails. The decoding rules include the following.       ","pos":[0,79],"nodes":[{"content":"The underlying decoding fails.","pos":[0,30]},{"content":"The decoding rules include the following.","pos":[31,72]}]},{"content":"Code","pos":[102,106]},{"content":"Corresponding Result","pos":[123,143]},{"content":"'{' '}' '[' ']' 'n' 'x'","pos":[184,207]},{"content":"No corresponding result","pos":[224,247]},{"content":"'i' 'e'","pos":[273,280]},{"content":"int","pos":[297,300]},{"content":"'b'","pos":[326,329]},{"content":"bool","pos":[346,350]},{"content":"'a'","pos":[376,379]},{"content":"string","pos":[396,402]},{"content":"'O'","pos":[428,431]},{"content":"byte[]","pos":[448,454]},{"content":"'B'","pos":[480,483]},{"content":"byte[] containing bit strings","pos":[500,529]},{"content":"'v'","pos":[555,558]},{"content":"string[]","pos":[575,583]},{"content":"'V'","pos":[609,612]},{"content":"byte[][]","pos":[629,637]}]},{"pos":[3542,3644],"content":"The Encode method encodes structured data, using BER, to retrieve a binary representation of the data.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Encode method encodes structured data, using BER, to retrieve a binary representation of the data.","pos":[0,102]}]},{"pos":[3657,4593],"content":"The following are valid format characters.       Encoding rules:      |Code|Corresponding Argument|   |----------|----------------------------|   |'{' '}' '[' ']' 'n'|No corresponding argument|   |'t' 'i' 'e'|int|   |'a'|Octet string|   |'b'|bool|   |'s'|string|   |'o' 'X'|byte[]|   |'v'|string[]|   |'V'|byte[][]|      > [!NOTE] >  'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.      ## Exceptions      |Exception|Condition|   |---------------|---------------|   |ArgumentNullException|`format` is a null reference (`Nothing` in Visual Basic).|   |ArgumentException|This exception occurs in any one of the following conditions:<br /><br /> -   There are not enough arguments for the format string.<br />-   The format string argument is incorrect.<br />-   The format string contains an undefined character.|   |BerConversionException|Error processing return value.|","needQuote":false,"needEscape":true,"nodes":[{"content":"The following are valid format characters.       Encoding rules:      |Code|Corresponding Argument|   |----------|----------------------------|   |'{' '}' '[' ']' 'n'|No corresponding argument|   |'t' 'i' 'e'|int|   |'a'|Octet string|   |'b'|bool|   |'s'|string|   |'o' 'X'|byte[]|   |'v'|string[]|   |'V'|byte[][]|      > [!NOTE] >  'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.      ## Exceptions      |Exception|Condition|   |---------------|---------------|   |ArgumentNullException|`format` is a null reference (`Nothing` in Visual Basic).|   |ArgumentException|This exception occurs in any one of the following conditions:","pos":[0,673],"nodes":[{"content":"The following are valid format characters.","pos":[0,42]},{"content":"Encoding rules:      |Code|Corresponding Argument|   |----------|----------------------------|   |'{' '}' '[' ']' 'n'|No corresponding argument|   |'t' 'i' 'e'|int|   |'a'|Octet string|   |'b'|bool|   |'s'|string|   |'o' 'X'|byte[]|   |'v'|string[]|   |'V'|byte[][]|      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  'v' and 'V' are special in that a double {} is required.","pos":[49,390],"source":"       Encoding rules:      |Code|Corresponding Argument|   |----------|----------------------------|   |'{' '}' '[' ']' 'n'|No corresponding argument|   |'t' 'i' 'e'|int|   |'a'|Octet string|   |'b'|bool|   |'s'|string|   |'o' 'X'|byte[]|   |'v'|string[]|   |'V'|byte[][]|      > [!NOTE] >  'v' and 'V' are special in that a double {} is required."},{"content":"For example, use {{v}} and {{V}}.","pos":[391,424]},{"content":"Exceptions      |Exception|Condition|   |---------------|---------------|   |ArgumentNullException|<ph id=\"ph1\">`format`</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).|   |ArgumentException|This exception occurs in any one of the following conditions:","pos":[433,673],"source":"      ## Exceptions      |Exception|Condition|   |---------------|---------------|   |ArgumentNullException|`format` is a null reference (`Nothing` in Visual Basic).|   |ArgumentException|This exception occurs in any one of the following conditions:"}]},{"content":"-   There are not enough arguments for the format string.","pos":[686,743]},{"content":"-   The format string argument is incorrect.","pos":[749,793]},{"content":"-   The format string contains an undefined character.|   |BerConversionException|Error processing return value.|","pos":[799,912]}]},{"pos":[4757,4775],"content":"The format string.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format string.","pos":[0,18]}]},{"pos":[4839,4866],"content":"An array of formatted data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of formatted data.","pos":[0,27]}]},{"pos":[4924,4953],"content":"An array of BER-encoded data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An array of BER-encoded data.","pos":[0,29]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.Protocols.BerConverter\n  id: BerConverter\n  children:\n  - System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  - System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  langs:\n  - csharp\n  name: BerConverter\n  nameWithType: BerConverter\n  fullName: System.DirectoryServices.Protocols.BerConverter\n  type: Class\n  summary: The BerConverter class encodes and decodes structured data using basic encoding rules (BER).\n  syntax:\n    content: public sealed class BerConverter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  id: Decode(System.String,System.Byte[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  langs:\n  - csharp\n  name: Decode(String,Byte[])\n  nameWithType: BerConverter.Decode(String,Byte[])\n  fullName: System.DirectoryServices.Protocols.BerConverter.Decode(String,Byte[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Decode method decodes a binary representation of the data, using BER, to retrieve structured data.\n  syntax:\n    content: public static object[] Decode (string format, byte[] value);\n    parameters:\n    - id: format\n      type: System.String\n      description: The format string.\n    - id: value\n      type: System.Byte[]\n      description: An array of BER data.\n    return:\n      type: System.Object[]\n      description: The decoded data.\n  overload: System.DirectoryServices.Protocols.BerConverter.Decode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>format</code> parameter contains a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>format</code> parameter contains an undefined character.\n  - type: System.DirectoryServices.Protocols.BerConversionException\n    commentId: T:System.DirectoryServices.Protocols.BerConversionException\n    description: \"The underlying decoding fails. The decoding rules include the following.  \\n  \\n <table><thead><tr><th> Code  \\n  \\n </th><th> Corresponding Result  \\n  \\n </th></tr></thead><tbody><tr><td> '{' '}' '[' ']' 'n' 'x'  \\n  \\n </td><td> No corresponding result  \\n  \\n </td></tr><tr><td> 'i' 'e'  \\n  \\n </td><td> int  \\n  \\n </td></tr><tr><td> 'b'  \\n  \\n </td><td> bool  \\n  \\n </td></tr><tr><td> 'a'  \\n  \\n </td><td> string  \\n  \\n </td></tr><tr><td> 'O'  \\n  \\n </td><td> byte[]  \\n  \\n </td></tr><tr><td> 'B'  \\n  \\n </td><td> byte[] containing bit strings  \\n  \\n </td></tr><tr><td> 'v'  \\n  \\n </td><td> string[]  \\n  \\n </td></tr><tr><td> 'V'  \\n  \\n </td><td> byte[][]  \\n  \\n </td></tr></tbody></table>\"\n  platform:\n  - net462\n- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  id: Encode(System.String,System.Object[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  langs:\n  - csharp\n  name: Encode(String,Object[])\n  nameWithType: BerConverter.Encode(String,Object[])\n  fullName: System.DirectoryServices.Protocols.BerConverter.Encode(String,Object[])\n  type: Method\n  assemblies:\n  - System.DirectoryServices.Protocols\n  namespace: System.DirectoryServices.Protocols\n  summary: The Encode method encodes structured data, using BER, to retrieve a binary representation of the data.\n  remarks: \"The following are valid format characters.  \\n  \\n Encoding rules:  \\n  \\n|Code|Corresponding Argument|  \\n|----------|----------------------------|  \\n|'{' '}' '[' ']' 'n'|No corresponding argument|  \\n|'t' 'i' 'e'|int|  \\n|'a'|Octet string|  \\n|'b'|bool|  \\n|'s'|string|  \\n|'o' 'X'|byte[]|  \\n|'v'|string[]|  \\n|'V'|byte[][]|  \\n  \\n> [!NOTE]\\n>  'v' and 'V' are special in that a double {} is required. For example, use {{v}} and {{V}}.  \\n  \\n## Exceptions  \\n  \\n|Exception|Condition|  \\n|---------------|---------------|  \\n|ArgumentNullException|`format` is a null reference (`Nothing` in Visual Basic).|  \\n|ArgumentException|This exception occurs in any one of the following conditions:<br /><br /> -   There are not enough arguments for the format string.<br />-   The format string argument is incorrect.<br />-   The format string contains an undefined character.|  \\n|BerConversionException|Error processing return value.|\"\n  syntax:\n    content: public static byte[] Encode (string format, object[] value);\n    parameters:\n    - id: format\n      type: System.String\n      description: The format string.\n    - id: value\n      type: System.Object[]\n      description: An array of formatted data.\n    return:\n      type: System.Byte[]\n      description: An array of BER-encoded data.\n  overload: System.DirectoryServices.Protocols.BerConverter.Encode*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.DirectoryServices.Protocols.BerConversionException\n  parent: System.DirectoryServices.Protocols\n  isExternal: false\n  name: BerConversionException\n  nameWithType: BerConversionException\n  fullName: System.DirectoryServices.Protocols.BerConversionException\n- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Decode(String,Byte[])\n  nameWithType: BerConverter.Decode(String,Byte[])\n  fullName: System.DirectoryServices.Protocols.BerConverter.Decode(String,Byte[])\n- uid: System.Object[]\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Encode(String,Object[])\n  nameWithType: BerConverter.Encode(String,Object[])\n  fullName: System.DirectoryServices.Protocols.BerConverter.Encode(String,Object[])\n- uid: System.DirectoryServices.Protocols.BerConverter.Decode*\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Decode\n  nameWithType: BerConverter.Decode\n- uid: System.DirectoryServices.Protocols.BerConverter.Encode*\n  parent: System.DirectoryServices.Protocols.BerConverter\n  isExternal: false\n  name: Encode\n  nameWithType: BerConverter.Encode\n"}