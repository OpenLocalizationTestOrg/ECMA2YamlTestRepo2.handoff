{"nodes":[{"pos":[569,658],"content":"Creates client channel sinks for the client channel through which remoting messages flow.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates client channel sinks for the client channel through which remoting messages flow.","pos":[0,89]}]},{"pos":[671,1602],"content":"Channel sinks are connected to a client channel through implementations of the IClientChannelSinkProvider interface. All the remoting client channels provide constructors that take a IClientChannelSinkProvider as a parameter.       Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor. IClientChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose.       When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file. The channel sink providers will be created when the channel is created during the <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call.","needQuote":false,"needEscape":true,"nodes":[{"content":"Channel sinks are connected to a client channel through implementations of the IClientChannelSinkProvider interface. All the remoting client channels provide constructors that take a IClientChannelSinkProvider as a parameter.       Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor. IClientChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose.       When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file. The channel sink providers will be created when the channel is created during the <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call.","pos":[0,927],"nodes":[{"content":"Channel sinks are connected to a client channel through implementations of the IClientChannelSinkProvider interface.","pos":[0,116]},{"content":"All the remoting client channels provide constructors that take a IClientChannelSinkProvider as a parameter.","pos":[117,225]},{"content":"Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor.","pos":[232,411]},{"content":"IClientChannelSinkProvider provides a property called &lt;xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A&gt; for this purpose.","pos":[412,558],"source":" IClientChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose."},{"content":"When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file.","pos":[565,748]},{"content":"The channel sink providers will be created when the channel is created during the &lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName&gt; call.","pos":[749,927],"source":" The channel sink providers will be created when the channel is created during the <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call."}]}]},{"pos":[2904,2925],"content":"Creates a sink chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a sink chain.","pos":[0,21]}]},{"pos":[2937,3166],"content":"When the CreateSink method is called, it creates its own channel sink, forwards the CreateSink call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.","needQuote":true,"needEscape":true,"nodes":[{"content":"When the CreateSink method is called, it creates its own channel sink, forwards the CreateSink call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.","pos":[0,229]}]},{"pos":[3741,3803],"content":"Channel for which the current sink chain is being constructed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Channel for which the current sink chain is being constructed.","pos":[0,62]}]},{"pos":[3863,4085],"content":"The URL of the object to connect to. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the connection is based entirely on the information contained in the `remoteChannelData` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The URL of the object to connect to.","pos":[0,36]},{"content":"This parameter can be <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the connection is based entirely on the information contained in the <ph id=\"ph1\">`remoteChannelData`</ph> parameter.","pos":[37,222],"source":" This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the connection is based entirely on the information contained in the `remoteChannelData` parameter."}]},{"pos":[4159,4227],"content":"A channel data object that describes a channel on the remote server.","needQuote":true,"needEscape":true,"nodes":[{"content":"A channel data object that describes a channel on the remote server.","pos":[0,68]}]},{"pos":[4323,4536],"content":"The first sink of the newly formed channel sink chain, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, which indicates that this provider will not or cannot provide a connection for this endpoint.","needQuote":true,"needEscape":true,"source":"The first sink of the newly formed channel sink chain, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this provider will not or cannot provide a connection for this endpoint."},{"pos":[4747,4808],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]},{"pos":[5244,5315],"content":"Gets or sets the next sink provider in the channel sink provider chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the next sink provider in the channel sink provider chain.","pos":[0,71]}]},{"pos":[5821,5879],"content":"The next sink provider in the channel sink provider chain.","needQuote":true,"needEscape":true,"nodes":[{"content":"The next sink provider in the channel sink provider chain.","pos":[0,58]}]},{"pos":[6084,6145],"content":"The immediate caller does not have infrastructure permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"The immediate caller does not have infrastructure permission.","pos":[0,61]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  id: IClientChannelSinkProvider\n  children:\n  - System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  - System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next\n  langs:\n  - csharp\n  name: IClientChannelSinkProvider\n  nameWithType: IClientChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  type: Interface\n  summary: Creates client channel sinks for the client channel through which remoting messages flow.\n  remarks: \"Channel sinks are connected to a client channel through implementations of the IClientChannelSinkProvider interface. All the remoting client channels provide constructors that take a IClientChannelSinkProvider as a parameter.  \\n  \\n Channel sink providers are stored in a chain, and the user is responsible for chaining all channel sink providers together before passing the outer one to the channel constructor. IClientChannelSinkProvider provides a property called <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next%2A> for this purpose.  \\n  \\n When multiple channel sink providers are specified in a configuration file, the remoting infrastructure will chain them together in the order they are found in the configuration file. The channel sink providers will be created when the channel is created during the <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> call.\"\n  example:\n  - \"The following code example illustrates an implementation of this interface.  \\n  \\n [!code-cs[Remoting_Sinks#30](~/add/codesnippet/csharp/t-system.runtime.remotin_15_1.cs)]\\n [!code-cpp[Remoting_Sinks#30](~/add/codesnippet/cpp/t-system.runtime.remotin_15_1.cpp)]  \\n  \\n See the <xref:System.Runtime.Remoting.Channels.IClientChannelSink> interface documentation for an example of the corresponding client sink implementation.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IClientChannelSinkProvider\n  implements: []\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  id: CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  parent: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  langs:\n  - csharp\n  name: CreateSink(IChannelSender,String,Object)\n  nameWithType: IClientChannelSinkProvider.CreateSink(IChannelSender,String,Object)\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(IChannelSender,String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Creates a sink chain.\n  remarks: When the CreateSink method is called, it creates its own channel sink, forwards the CreateSink call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.\n  example:\n  - \"The following code example illustrates an implementation of this method.  \\n  \\n [!code-cs[Remoting_Sinks#33](~/add/codesnippet/csharp/09bab0ba-2acd-4d69-ae61-_1.cs)]\\n [!code-cpp[Remoting_Sinks#33](~/add/codesnippet/cpp/09bab0ba-2acd-4d69-ae61-_1.cpp)]\"\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IClientChannelSink CreateSink (System.Runtime.Remoting.Channels.IChannelSender channel, string url, object remoteChannelData);\n    parameters:\n    - id: channel\n      type: System.Runtime.Remoting.Channels.IChannelSender\n      description: Channel for which the current sink chain is being constructed.\n    - id: url\n      type: System.String\n      description: The URL of the object to connect to. This parameter can be <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the connection is based entirely on the information contained in the `remoteChannelData` parameter.\n    - id: remoteChannelData\n      type: System.Object\n      description: A channel data object that describes a channel on the remote server.\n    return:\n      type: System.Runtime.Remoting.Channels.IClientChannelSink\n      description: The first sink of the newly formed channel sink chain, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which indicates that this provider will not or cannot provide a connection for this endpoint.\n  overload: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next\n  id: Next\n  parent: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  langs:\n  - csharp\n  name: Next\n  nameWithType: IClientChannelSinkProvider.Next\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Channels\n  summary: Gets or sets the next sink provider in the channel sink provider chain.\n  remarks: ''\n  example:\n  - \"The following code example illustrates an implementation of this property.  \\n  \\n [!code-cs[Remoting_Sinks#32](~/add/codesnippet/csharp/p-system.runtime.remotin_37_1.cs)]\\n [!code-cpp[Remoting_Sinks#32](~/add/codesnippet/cpp/p-system.runtime.remotin_37_1.cpp)]\"\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IClientChannelSinkProvider Next { get; set; }\n    return:\n      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n      description: The next sink provider in the channel sink provider chain.\n  overload: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller does not have infrastructure permission.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.SecurityException\n  isExternal: true\n  name: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)\n  parent: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  isExternal: false\n  name: CreateSink(IChannelSender,String,Object)\n  nameWithType: IClientChannelSinkProvider.CreateSink(IChannelSender,String,Object)\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink(IChannelSender,String,Object)\n- uid: System.Runtime.Remoting.Channels.IClientChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSink\n  nameWithType: IClientChannelSink\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSink\n- uid: System.Runtime.Remoting.Channels.IChannelSender\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelSender\n  nameWithType: IChannelSender\n  fullName: System.Runtime.Remoting.Channels.IChannelSender\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next\n  parent: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  isExternal: false\n  name: Next\n  nameWithType: IClientChannelSinkProvider.Next\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IClientChannelSinkProvider\n  nameWithType: IClientChannelSinkProvider\n  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink*\n  parent: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  isExternal: false\n  name: CreateSink\n  nameWithType: IClientChannelSinkProvider.CreateSink\n- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.Next*\n  parent: System.Runtime.Remoting.Channels.IClientChannelSinkProvider\n  isExternal: false\n  name: Next\n  nameWithType: IClientChannelSinkProvider.Next\n"}