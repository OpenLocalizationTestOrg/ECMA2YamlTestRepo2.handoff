{"nodes":[{"pos":[901,989],"content":"Represents a media type with an additional quality factor used in a Content-Type header.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents a media type with an additional quality factor used in a Content-Type header.","pos":[0,88]}]},{"pos":[1002,1481],"content":"The MediaTypeWithQualityHeaderValue class provides support for the media type and quality in a Content-Type header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF.       Quality factors allow the user agent to indicate the relative degree of preference for the media type in a Content-Type header. Quality uses a scale from 0 to 1. The default value is q=1.       This type derives from <xref:System.Net.Http.Headers.MediaTypeHeaderValue>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The MediaTypeWithQualityHeaderValue class provides support for the media type and quality in a Content-Type header as defined in <bpt id=\"p1\">[</bpt>RFC 2616<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=241642)</ept> by the IETF.","pos":[0,199],"source":"The MediaTypeWithQualityHeaderValue class provides support for the media type and quality in a Content-Type header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF."},{"content":"Quality factors allow the user agent to indicate the relative degree of preference for the media type in a Content-Type header.","pos":[206,333]},{"content":"Quality uses a scale from 0 to 1.","pos":[334,367]},{"content":"The default value is q=1.","pos":[368,393]},{"content":"This type derives from &lt;xref:System.Net.Http.Headers.MediaTypeHeaderValue&gt;.","pos":[400,475],"source":"       This type derives from <xref:System.Net.Http.Headers.MediaTypeHeaderValue>."}]},{"pos":[2810,2927],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> class."},{"pos":[3091,3223],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represented as string to initialize the new instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> represented as string to initialize the new instance."},{"pos":[3933,4050],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> class."},{"pos":[4230,4362],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represented as string to initialize the new instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> represented as string to initialize the new instance."},{"pos":[4426,4472],"content":"The quality associated with this header value.","needQuote":true,"needEscape":true,"nodes":[{"content":"The quality associated with this header value.","pos":[0,46]}]},{"pos":[5048,5158],"content":"Converts a string to an <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Converts a string to an <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> instance."},{"pos":[5351,5425],"content":"A string that represents media type with quality header value information.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents media type with quality header value information.","pos":[0,74]}]},{"pos":[5525,5613],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> instance."},{"pos":[5805,5900],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> reference.","needQuote":true,"needEscape":true,"source":"<code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference."},{"pos":[5991,6072],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is not valid media type with quality header value information.","needQuote":true,"needEscape":true,"source":"<code>input</code> is not valid media type with quality header value information."},{"pos":[6514,6628],"content":"Get or set the quality value for the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Get or set the quality value for the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref>."},{"pos":[6772,6882],"content":"The quality value for the <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The quality value for the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> object."},{"pos":[7516,7653],"content":"Creates a new object that is a copy of the current <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> instance."},{"pos":[7781,7812],"content":"A copy of the current instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current instance.","pos":[0,31]}]},{"pos":[8631,8757],"content":"Determines whether a string is valid <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Determines whether a string is valid <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> information."},{"pos":[8975,8998],"content":"The string to validate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string to validate.","pos":[0,23]}]},{"pos":[9108,9211],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> version of the string.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> version of the string."},{"pos":[9270,9526],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p2\">&lt;/code&gt;</ept> is valid <bpt id=\"p3\">&lt;xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  id: MediaTypeWithQualityHeaderValue\n  children:\n  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)\n  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)\n  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality\n  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone\n  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)\n  langs:\n  - csharp\n  name: MediaTypeWithQualityHeaderValue\n  nameWithType: MediaTypeWithQualityHeaderValue\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  type: Class\n  summary: Represents a media type with an additional quality factor used in a Content-Type header.\n  remarks: \"The MediaTypeWithQualityHeaderValue class provides support for the media type and quality in a Content-Type header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF.  \\n  \\n Quality factors allow the user agent to indicate the relative degree of preference for the media type in a Content-Type header. Quality uses a scale from 0 to 1. The default value is q=1.  \\n  \\n This type derives from <xref:System.Net.Http.Headers.MediaTypeHeaderValue>.\"\n  syntax:\n    content: 'public sealed class MediaTypeWithQualityHeaderValue : System.Net.Http.Headers.MediaTypeHeaderValue, ICloneable'\n  inheritance:\n  - System.Object\n  - System.Net.Http.Headers.MediaTypeHeaderValue\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Net.Http.Headers.MediaTypeHeaderValue.CharSet\n  - System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode\n  - System.Net.Http.Headers.MediaTypeHeaderValue.MediaType\n  - System.Net.Http.Headers.MediaTypeHeaderValue.Parameters\n  - System.Net.Http.Headers.MediaTypeHeaderValue.ToString\n  - System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  langs:\n  - csharp\n  name: MediaTypeWithQualityHeaderValue(String)\n  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> class.\n  syntax:\n    content: public MediaTypeWithQualityHeaderValue (string mediaType);\n    parameters:\n    - id: mediaType\n      type: System.String\n      description: A <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> represented as string to initialize the new instance.\n  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)\n  id: '#ctor(System.String,System.Double)'\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  langs:\n  - csharp\n  name: MediaTypeWithQualityHeaderValue(String,Double)\n  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> class.\n  syntax:\n    content: public MediaTypeWithQualityHeaderValue (string mediaType, double quality);\n    parameters:\n    - id: mediaType\n      type: System.String\n      description: A <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> represented as string to initialize the new instance.\n    - id: quality\n      type: System.Double\n      description: The quality associated with this header value.\n  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: MediaTypeWithQualityHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Converts a string to an <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> instance.\n  syntax:\n    content: public static System.Net.Http.Headers.MediaTypeWithQualityHeaderValue Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A string that represents media type with quality header value information.\n    return:\n      type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n      description: A <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> instance.\n  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is a <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> reference.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>input</code> is not valid media type with quality header value information.\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality\n  id: Quality\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  langs:\n  - csharp\n  name: Quality\n  nameWithType: MediaTypeWithQualityHeaderValue.Quality\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Get or set the quality value for the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref>.\n  syntax:\n    content: public Nullable<double> Quality { get; set; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The quality value for the <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> object.\n  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Creates a new object that is a copy of the current <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> instance.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A copy of the current instance.\n  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  langs:\n  - csharp\n  name: TryParse(String,MediaTypeWithQualityHeaderValue)\n  nameWithType: MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: Determines whether a string is valid <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> information.\n  syntax:\n    content: public static bool TryParse (string input, out System.Net.Http.Headers.MediaTypeWithQualityHeaderValue parsedValue);\n    parameters:\n    - id: input\n      type: System.String\n      description: The string to validate.\n    - id: parsedValue\n      type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n      description: The <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> version of the string.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>input</code> is valid <xref href=\"System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\"></xref> information; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Net.Http.Headers.MediaTypeHeaderValue\n  isExternal: false\n  name: System.Net.Http.Headers.MediaTypeHeaderValue\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.FormatException\n  isExternal: true\n  name: System.FormatException\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: MediaTypeWithQualityHeaderValue(String)\n  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: MediaTypeWithQualityHeaderValue(String,Double)\n  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: Parse(String)\n  nameWithType: MediaTypeWithQualityHeaderValue.Parse(String)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: MediaTypeWithQualityHeaderValue\n  nameWithType: MediaTypeWithQualityHeaderValue\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: Quality\n  nameWithType: MediaTypeWithQualityHeaderValue.Quality\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: true\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Double>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: TryParse(String,MediaTypeWithQualityHeaderValue)\n  nameWithType: MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)\n  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor*\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: MediaTypeWithQualityHeaderValue\n  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse*\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: Parse\n  nameWithType: MediaTypeWithQualityHeaderValue.Parse\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality*\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: Quality\n  nameWithType: MediaTypeWithQualityHeaderValue.Quality\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone*\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: MediaTypeWithQualityHeaderValue.System.ICloneable.Clone\n- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse*\n  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue\n  isExternal: false\n  name: TryParse\n  nameWithType: MediaTypeWithQualityHeaderValue.TryParse\n"}