{"nodes":[{"pos":[509,660],"content":"Represents information about what can be rendered, either text or an audio file, by the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Synthesis.SpeechSynthesizer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents information about what can be rendered, either text or an audio file, by the <xref href=\"System.Speech.Synthesis.SpeechSynthesizer\"></xref>."},{"pos":[673,1404],"content":"A Prompt object can contain plain text, text formatted with markup language, or audio files.       An empty Prompt object is created with each new instance of <xref:System.Speech.Synthesis.PromptBuilder>.  The <xref:System.Speech.Synthesis.PromptBuilder> class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty Prompt object that it contains. Typically, applications will use <xref:System.Speech.Synthesis.PromptBuilder>, rather than a Prompt object, to create prompts and populate them with content.       To generate speech from the contents of a Prompt object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.","needQuote":false,"needEscape":true,"nodes":[{"content":"A Prompt object can contain plain text, text formatted with markup language, or audio files.       An empty Prompt object is created with each new instance of <xref:System.Speech.Synthesis.PromptBuilder>.  The <xref:System.Speech.Synthesis.PromptBuilder> class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty Prompt object that it contains. Typically, applications will use <xref:System.Speech.Synthesis.PromptBuilder>, rather than a Prompt object, to create prompts and populate them with content.       To generate speech from the contents of a Prompt object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.","pos":[0,727],"nodes":[{"content":"A Prompt object can contain plain text, text formatted with markup language, or audio files.","pos":[0,92]},{"content":"An empty Prompt object is created with each new instance of &lt;xref:System.Speech.Synthesis.PromptBuilder&gt;.","pos":[99,204],"source":"       An empty Prompt object is created with each new instance of <xref:System.Speech.Synthesis.PromptBuilder>."},{"content":"The &lt;xref:System.Speech.Synthesis.PromptBuilder&gt; class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty Prompt object that it contains.","pos":[206,432],"source":"  The <xref:System.Speech.Synthesis.PromptBuilder> class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty Prompt object that it contains."},{"content":"Typically, applications will use &lt;xref:System.Speech.Synthesis.PromptBuilder&gt;, rather than a Prompt object, to create prompts and populate them with content.","pos":[433,590],"source":" Typically, applications will use <xref:System.Speech.Synthesis.PromptBuilder>, rather than a Prompt object, to create prompts and populate them with content."},{"content":"To generate speech from the contents of a Prompt object, use the &lt;xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A&gt; method.","pos":[597,727],"source":"       To generate speech from the contents of a Prompt object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method."}]}]},{"pos":[2046,2207],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Synthesis.Prompt\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class from a <bpt id=\"p2\">&lt;xref href=\"System.Speech.Synthesis.PromptBuilder\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> class from a <xref href=\"System.Speech.Synthesis.PromptBuilder\"></xref> object."},{"pos":[2409,2434],"content":"The content to be spoken.","needQuote":true,"needEscape":true,"nodes":[{"content":"The content to be spoken.","pos":[0,25]}]},{"pos":[2893,3017],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Synthesis.Prompt\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and specifies the text to be spoken.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> class and specifies the text to be spoken."},{"pos":[4188,4210],"content":"The text to be spoken.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to be spoken.","pos":[0,22]}]},{"pos":[4817,4997],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Synthesis.Prompt\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class and specifies the text to be spoken and whether its format is plain text or markup language.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> class and specifies the text to be spoken and whether its format is plain text or markup language."},{"pos":[5009,5351],"content":"The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763). For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94).","needQuote":true,"needEscape":true,"nodes":[{"content":"The contents of the <ph id=\"ph1\">`textToSpeak`</ph> parameter must include a <ph id=\"ph2\">`speak`</ph> element and must conform to the <bpt id=\"p1\">[</bpt>Speech Synthesis Markup Language (SSML) Version 1.0<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=201763)</ept>.","pos":[0,200],"source":"The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Speech Synthesis Markup Language Reference<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94)</ept>.","pos":[201,342],"source":" For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94)."}]},{"pos":[6900,6922],"content":"The text to be spoken.","needQuote":true,"needEscape":true,"nodes":[{"content":"The text to be spoken.","pos":[0,22]}]},{"pos":[7014,7060],"content":"A value that specifies the format of the text.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value that specifies the format of the text.","pos":[0,46]}]},{"pos":[7487,7577],"content":"Gets whether the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Synthesis.Prompt\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has finished playing.","needQuote":true,"needEscape":true,"source":"Gets whether the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> has finished playing."},{"pos":[7692,7863],"content":"Returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the prompt has completed; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the prompt has completed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.Prompt\n  id: Prompt\n  children:\n  - System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)\n  - System.Speech.Synthesis.Prompt.#ctor(System.String)\n  - System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)\n  - System.Speech.Synthesis.Prompt.IsCompleted\n  langs:\n  - csharp\n  name: Prompt\n  nameWithType: Prompt\n  fullName: System.Speech.Synthesis.Prompt\n  type: Class\n  summary: Represents information about what can be rendered, either text or an audio file, by the <xref href=\"System.Speech.Synthesis.SpeechSynthesizer\"></xref>.\n  remarks: \"A Prompt object can contain plain text, text formatted with markup language, or audio files.  \\n  \\n An empty Prompt object is created with each new instance of <xref:System.Speech.Synthesis.PromptBuilder>.  The <xref:System.Speech.Synthesis.PromptBuilder> class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty Prompt object that it contains. Typically, applications will use <xref:System.Speech.Synthesis.PromptBuilder>, rather than a Prompt object, to create prompts and populate them with content.  \\n  \\n To generate speech from the contents of a Prompt object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.\"\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{_text}\")]\n\n      public class Prompt\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)\n  id: '#ctor(System.Speech.Synthesis.PromptBuilder)'\n  parent: System.Speech.Synthesis.Prompt\n  langs:\n  - csharp\n  name: Prompt(PromptBuilder)\n  nameWithType: Prompt.Prompt(PromptBuilder)\n  fullName: System.Speech.Synthesis.Prompt.Prompt(PromptBuilder)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Creates a new instance of the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> class from a <xref href=\"System.Speech.Synthesis.PromptBuilder\"></xref> object.\n  syntax:\n    content: public Prompt (System.Speech.Synthesis.PromptBuilder promptBuilder);\n    parameters:\n    - id: promptBuilder\n      type: System.Speech.Synthesis.PromptBuilder\n      description: The content to be spoken.\n  overload: System.Speech.Synthesis.Prompt.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.Prompt.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Speech.Synthesis.Prompt\n  langs:\n  - csharp\n  name: Prompt(String)\n  nameWithType: Prompt.Prompt(String)\n  fullName: System.Speech.Synthesis.Prompt.Prompt(String)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Creates a new instance of the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> class and specifies the text to be spoken.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.  \\n  \\n```c#  \\nusing System;  \\nusing System.Speech.Synthesis;  \\n  \\nnamespace SampleSynthesis  \\n{  \\n  class Program  \\n  {  \\n    static void Main(string[] args)  \\n    {  \\n  \\n      // Initialize a new instance of the SpeechSynthesizer.  \\n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \\n      {  \\n  \\n        // Configure the audio output.   \\n        synth.SetOutputToDefaultAudioDevice();  \\n  \\n        // Create a prompt from a string.  \\n        Prompt color = new Prompt(\\\"What is your favorite color?\\\");  \\n  \\n        // Speak the contents of the prompt synchronously.  \\n        synth.Speak(color);  \\n      }  \\n  \\n      Console.WriteLine();  \\n      Console.WriteLine(\\\"Press any key to exit...\\\");  \\n      Console.ReadKey();  \\n    }  \\n  }  \\n}  \\n```\"\n  syntax:\n    content: public Prompt (string textToSpeak);\n    parameters:\n    - id: textToSpeak\n      type: System.String\n      description: The text to be spoken.\n  overload: System.Speech.Synthesis.Prompt.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)\n  id: '#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)'\n  parent: System.Speech.Synthesis.Prompt\n  langs:\n  - csharp\n  name: Prompt(String,SynthesisTextFormat)\n  nameWithType: Prompt.Prompt(String,SynthesisTextFormat)\n  fullName: System.Speech.Synthesis.Prompt.Prompt(String,SynthesisTextFormat)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Creates a new instance of the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> class and specifies the text to be spoken and whether its format is plain text or markup language.\n  remarks: The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763). For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94).\n  example:\n  - \"The following example builds a string that contains SSML markup, creates a <xref:System.Speech.Synthesis.Prompt> object from the string, and speaks the prompt.  \\n  \\n```c#  \\nusing System;  \\nusing System.Speech.Synthesis;  \\n  \\nnamespace SampleSynthesis  \\n{  \\n  class Program  \\n  {  \\n    static void Main(string[] args)  \\n    {  \\n  \\n      // Initialize a new instance of the SpeechSynthesizer.  \\n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \\n      {  \\n  \\n        // Configure the audio output.   \\n        synth.SetOutputToDefaultAudioDevice();  \\n  \\n        // Build an SSML prompt in a string.  \\n        string fileName = \\\"<speak version=\\\\\\\"1.0\\\\\\\" \\\";  \\n        fileName += \\\"xmlns=\\\\\\\"http://www.w3.org/2001/10/synthesis\\\\\\\" \\\";  \\n        fileName += \\\"xml:lang=\\\\\\\"en-US\\\\\\\">\\\";  \\n        fileName += \\\"Say a name for the new file <mark name=\\\\\\\"fileName\\\\\\\" />.\\\";  \\n        fileName += \\\"</speak>\\\";  \\n  \\n        // Create a Prompt object from the string.  \\n        Prompt ssmlFile = new Prompt(fileName, SynthesisTextFormat.Ssml);  \\n  \\n        // Speak the contents of the SSML prompt.  \\n        synth.Speak(ssmlFile);  \\n      }  \\n  \\n      Console.WriteLine();  \\n      Console.WriteLine(\\\"Press any key to exit...\\\");  \\n      Console.ReadKey();  \\n    }  \\n  }  \\n}  \\n  \\n```\"\n  syntax:\n    content: public Prompt (string textToSpeak, System.Speech.Synthesis.SynthesisTextFormat media);\n    parameters:\n    - id: textToSpeak\n      type: System.String\n      description: The text to be spoken.\n    - id: media\n      type: System.Speech.Synthesis.SynthesisTextFormat\n      description: A value that specifies the format of the text.\n  overload: System.Speech.Synthesis.Prompt.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Synthesis.Prompt.IsCompleted\n  id: IsCompleted\n  parent: System.Speech.Synthesis.Prompt\n  langs:\n  - csharp\n  name: IsCompleted\n  nameWithType: Prompt.IsCompleted\n  fullName: System.Speech.Synthesis.Prompt.IsCompleted\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis\n  summary: Gets whether the <xref href=\"System.Speech.Synthesis.Prompt\"></xref> has finished playing.\n  syntax:\n    content: public bool IsCompleted { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the prompt has completed; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Speech.Synthesis.Prompt.IsCompleted*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)\n  parent: System.Speech.Synthesis.Prompt\n  isExternal: false\n  name: Prompt(PromptBuilder)\n  nameWithType: Prompt.Prompt(PromptBuilder)\n  fullName: System.Speech.Synthesis.Prompt.Prompt(PromptBuilder)\n- uid: System.Speech.Synthesis.PromptBuilder\n  parent: System.Speech.Synthesis\n  isExternal: false\n  name: PromptBuilder\n  nameWithType: PromptBuilder\n  fullName: System.Speech.Synthesis.PromptBuilder\n- uid: System.Speech.Synthesis.Prompt.#ctor(System.String)\n  parent: System.Speech.Synthesis.Prompt\n  isExternal: false\n  name: Prompt(String)\n  nameWithType: Prompt.Prompt(String)\n  fullName: System.Speech.Synthesis.Prompt.Prompt(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)\n  parent: System.Speech.Synthesis.Prompt\n  isExternal: false\n  name: Prompt(String,SynthesisTextFormat)\n  nameWithType: Prompt.Prompt(String,SynthesisTextFormat)\n  fullName: System.Speech.Synthesis.Prompt.Prompt(String,SynthesisTextFormat)\n- uid: System.Speech.Synthesis.SynthesisTextFormat\n  parent: System.Speech.Synthesis\n  isExternal: false\n  name: SynthesisTextFormat\n  nameWithType: SynthesisTextFormat\n  fullName: System.Speech.Synthesis.SynthesisTextFormat\n- uid: System.Speech.Synthesis.Prompt.IsCompleted\n  parent: System.Speech.Synthesis.Prompt\n  isExternal: false\n  name: IsCompleted\n  nameWithType: Prompt.IsCompleted\n  fullName: System.Speech.Synthesis.Prompt.IsCompleted\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Speech.Synthesis.Prompt.#ctor*\n  parent: System.Speech.Synthesis.Prompt\n  isExternal: false\n  name: Prompt\n  nameWithType: Prompt.Prompt\n- uid: System.Speech.Synthesis.Prompt.IsCompleted*\n  parent: System.Speech.Synthesis.Prompt\n  isExternal: false\n  name: IsCompleted\n  nameWithType: Prompt.IsCompleted\n"}