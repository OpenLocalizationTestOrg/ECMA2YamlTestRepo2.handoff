{"nodes":[{"pos":[2458,2674],"content":"Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*>","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*>","pos":[0,216],"nodes":[{"content":"Represents an SQL statement or stored procedure to execute against a data source.","pos":[0,81]},{"content":"Provides a base class for database-specific classes that represent commands.","pos":[82,158]},{"content":"&lt;xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*&gt;","pos":[159,216],"source":" <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*>"}]}]},{"pos":[4033,4120],"content":"Constructs an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Constructs an instance of the <xref href=\"System.Data.Common.DbCommand\"></xref> object."},{"pos":[4580,4669],"content":"Attempts to cancels the execution of a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Attempts to cancels the execution of a <xref href=\"System.Data.Common.DbCommand\"></xref>."},{"pos":[4681,4831],"content":"If there is nothing to cancel, nothing happens. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","needQuote":true,"needEscape":true,"nodes":[{"content":"If there is nothing to cancel, nothing happens. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","pos":[0,150],"nodes":[{"content":"If there is nothing to cancel, nothing happens.","pos":[0,47]},{"content":"However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","pos":[48,150]}]}]},{"pos":[5321,5382],"content":"Gets or sets the text command to run against the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the text command to run against the data source.","pos":[0,61]}]},{"pos":[5394,5627],"content":"When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the CommandText property to the name of the stored procedure. The command executes this stored procedure when you call one of the `Execute` methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"When you set the &lt;xref:System.Data.CommandType&gt; to <ph id=\"ph1\">`StoredProcedure`</ph>, you should set the CommandText property to the name of the stored procedure.","pos":[0,146],"source":"When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the CommandText property to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call one of the <ph id=\"ph1\">`Execute`</ph> methods.","pos":[147,233],"source":" The command executes this stored procedure when you call one of the `Execute` methods."}]},{"pos":[5757,5828],"content":"The text command to execute. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"The text command to execute. The default value is an empty string (\"\").","pos":[0,71],"nodes":[{"content":"The text command to execute.","pos":[0,28]},{"content":"The default value is an empty string (\"\").","pos":[29,71]}]}]},{"pos":[6264,6367],"content":"Gets or sets the wait time before terminating the attempt to execute a command and generating an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the wait time before terminating the attempt to execute a command and generating an error.","pos":[0,103]}]},{"pos":[6380,6562],"content":"An <xref:System.ArgumentException> is generated if the assigned CommandTimeout property value is less than 0.       Note to implementers, it is recommended that 0 means no timeout.","needQuote":false,"needEscape":true,"nodes":[{"content":"An <xref:System.ArgumentException> is generated if the assigned CommandTimeout property value is less than 0.       Note to implementers, it is recommended that 0 means no timeout.","pos":[0,180],"nodes":[{"content":"An &lt;xref:System.ArgumentException&gt; is generated if the assigned CommandTimeout property value is less than 0.","pos":[0,109],"source":"An <xref:System.ArgumentException> is generated if the assigned CommandTimeout property value is less than 0."},{"content":"Note to implementers, it is recommended that 0 means no timeout.","pos":[116,180]}]}]},{"pos":[6692,6747],"content":"The time in seconds to wait for the command to execute.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time in seconds to wait for the command to execute.","pos":[0,55]}]},{"pos":[7171,7275],"content":"Indicates or specifies how the <xref:System.Data.Common.DbCommand.CommandText*> property is interpreted.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates or specifies how the &lt;xref:System.Data.Common.DbCommand.CommandText*&gt; property is interpreted.","pos":[0,104],"source":"Indicates or specifies how the <xref:System.Data.Common.DbCommand.CommandText*> property is interpreted."}]},{"pos":[7287,7559],"content":"When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the <xref:System.Data.Common.DbCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the `Execute` methods.","needQuote":true,"needEscape":true,"nodes":[{"content":"When you set the &lt;xref:System.Data.CommandType&gt; to <ph id=\"ph1\">`StoredProcedure`</ph>, you should set the &lt;xref:System.Data.Common.DbCommand.CommandText%2A&gt; property to the name of the stored procedure.","pos":[0,185],"source":"When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the <xref:System.Data.Common.DbCommand.CommandText%2A> property to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call one of the <ph id=\"ph1\">`Execute`</ph> methods.","pos":[186,272],"source":" The command executes this stored procedure when you call one of the `Execute` methods."}]},{"pos":[7716,7856],"content":"One of the <xref href=\"System.Data.CommandType\"></xref> values. The default is <xref uid=\"langword_csharp_Text\" name=\"Text\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,63],"source":"One of the <xref href=\"System.Data.CommandType\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Text\" name=\"Text\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[64,140],"source":" The default is <xref uid=\"langword_csharp_Text\" name=\"Text\" href=\"\"></xref>."}]},{"pos":[8272,8405],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used by this <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Common.DbConnection\"></xref> used by this <xref href=\"System.Data.Common.DbCommand\"></xref>."},{"pos":[8568,8602],"content":"The connection to the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection to the data source.","pos":[0,34]}]},{"pos":[9056,9143],"content":"Creates a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new instance of a <xref href=\"System.Data.Common.DbParameter\"></xref> object."},{"pos":[9332,9393],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.DbParameter\"></xref> object."},{"pos":[9844,9931],"content":"Creates a new instance of a <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new instance of a <xref href=\"System.Data.Common.DbParameter\"></xref> object."},{"pos":[10106,10167],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.DbParameter\"></xref> object."},{"pos":[10597,10730],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used by this <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Common.DbConnection\"></xref> used by this <xref href=\"System.Data.Common.DbCommand\"></xref>."},{"pos":[10907,10941],"content":"The connection to the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection to the data source.","pos":[0,34]}]},{"pos":[11413,11496],"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Gets the collection of <xref href=\"System.Data.Common.DbParameter\"></xref> objects."},{"pos":[11695,11751],"content":"The parameters of the SQL statement or stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters of the SQL statement or stored procedure.","pos":[0,56]}]},{"pos":[12192,12307],"content":"Gets or sets the DbTransaction within which this <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object executes.","needQuote":true,"needEscape":true,"source":"Gets or sets the DbTransaction within which this <xref href=\"System.Data.Common.DbCommand\"></xref> object executes."},{"pos":[12487,12700],"content":"The transaction within which a Command object of a .NET Framework data provider executes. The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).","needQuote":true,"needEscape":true,"nodes":[{"content":"The transaction within which a Command object of a .NET Framework data provider executes.","pos":[0,89]},{"content":"The default value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[90,213],"source":" The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]},{"pos":[13153,13264],"content":"Gets or sets a value indicating whether the command object should be visible in a customized interface control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the command object should be visible in a customized interface control.","pos":[0,111]}]},{"pos":[13399,13665],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the command object should be visible in a control; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, if the command object should be visible in a control; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,189],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the command object should be visible in a control; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[190,266],"source":" The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[14239,14288],"content":"Executes the command text against the connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the command text against the connection.","pos":[0,49]}]},{"pos":[14517,14581],"content":"An instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An instance of <xref href=\"System.Data.CommandBehavior\"></xref>."},{"pos":[14657,14691],"content":"A task representing the operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the operation.","pos":[0,34]}]},{"pos":[14874,14925],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[15020,15086],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."},{"pos":[15733,16413],"content":"Providers should implement this method to provide a non-default implementation for <xref:System.Data.Common.DbCommand.ExecuteReader*> overloads.       The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteReader*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.       This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.","needQuote":false,"needEscape":true,"nodes":[{"content":"Providers should implement this method to provide a non-default implementation for &lt;xref:System.Data.Common.DbCommand.ExecuteReader<bpt id=\"p1\">*</bpt>&gt; overloads.       The default implementation invokes the synchronous &lt;xref:System.Data.Common.DbCommand.ExecuteReader<ept id=\"p1\">*</ept>&gt; method and returns a completed task, blocking the calling thread.","pos":[0,318],"source":"Providers should implement this method to provide a non-default implementation for <xref:System.Data.Common.DbCommand.ExecuteReader*> overloads.       The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteReader*> method and returns a completed task, blocking the calling thread."},{"content":"The default implementation will return a cancelled task if passed an already cancelled cancellation token.","pos":[319,425]},{"content":"Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.","pos":[426,523]},{"content":"This method accepts a cancellation token that can be used to request the operation to be cancelled early.","pos":[530,635]},{"content":"Implementations may ignore this request.","pos":[636,676]}]},{"pos":[16426,16549],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."},{"pos":[16865,16916],"content":"Options for statement execution and data retrieval.","needQuote":true,"needEscape":true,"nodes":[{"content":"Options for statement execution and data retrieval.","pos":[0,51]}]},{"pos":[17011,17058],"content":"The token to monitor for cancellation requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]}]},{"pos":[17163,17210],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[17398,17449],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[17544,17610],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."},{"pos":[17984,18037],"content":"Executes a SQL statement against a connection object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes a SQL statement against a connection object.","pos":[0,53]}]},{"pos":[18050,18609],"content":"You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database by executing UPDATE, INSERT, or DELETE statements.       Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.       For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database by executing UPDATE, INSERT, or DELETE statements.       Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.       For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1.","pos":[0,555],"nodes":[{"content":"You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database by executing UPDATE, INSERT, or DELETE statements.","pos":[0,241]},{"content":"Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.","pos":[248,383]},{"content":"For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.","pos":[390,496]},{"content":"For all other types of statements, the return value is -1.","pos":[497,555]}]}]},{"pos":[18749,18777],"content":"The number of rows affected.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of rows affected.","pos":[0,28]}]},{"pos":[19252,19495],"content":"An asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteNonQuery<bpt id=\"p1\">*</bpt>&gt;, which executes a SQL statement against a connection object.       Invokes &lt;xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync<ept id=\"p1\">*</ept>&gt; with CancellationToken.None.","needQuote":false,"needEscape":true,"source":"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery*>, which executes a SQL statement against a connection object.       Invokes <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*> with CancellationToken.None."},{"pos":[19508,19631],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."},{"pos":[19824,19871],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[20055,20106],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[20629,21432],"content":"This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery*>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.       The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteNonQuery*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by <xref:System.Data.Common.DbCommand.ExecuteNonQuery*> will be communicated via the returned Task Exception property.       Do not invoke other methods and properties of the <xref uid=\"langword_csharp_DbCommand\" name=\"DbCommand\" href=\"\"></xref> object until the returned Task is complete.","needQuote":false,"needEscape":true,"nodes":[{"content":"This is the asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteNonQuery<bpt id=\"p1\">*</bpt>&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.       The default implementation invokes the synchronous &lt;xref:System.Data.Common.DbCommand.ExecuteNonQuery<ept id=\"p1\">*</ept>&gt; method and returns a completed task, blocking the calling thread.","pos":[0,377],"source":"This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery*>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.       The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteNonQuery*> method and returns a completed task, blocking the calling thread."},{"content":"The default implementation will return a cancelled task if passed an already cancelled cancellation token.","pos":[378,484]},{"content":"Exceptions thrown by &lt;xref:System.Data.Common.DbCommand.ExecuteNonQuery*&gt; will be communicated via the returned Task Exception property.","pos":[486,622],"source":"  Exceptions thrown by <xref:System.Data.Common.DbCommand.ExecuteNonQuery*> will be communicated via the returned Task Exception property."},{"content":"Do not invoke other methods and properties of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DbCommand\" name=\"DbCommand\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object until the returned Task is complete.","pos":[629,793],"source":"       Do not invoke other methods and properties of the <xref uid=\"langword_csharp_DbCommand\" name=\"DbCommand\" href=\"\"></xref> object until the returned Task is complete."}]},{"pos":[21445,21568],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."},{"pos":[21827,21874],"content":"The token to monitor for cancellation requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]}]},{"pos":[21960,22007],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[22191,22242],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[22606,22797],"content":"Executes the &lt;xref:System.Data.Common.DbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; against the &lt;xref:System.Data.Common.DbCommand.Connection<ept id=\"p1\">*</ept>&gt;, and returns an <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*>, and returns an <xref href=\"System.Data.Common.DbDataReader\"></xref>."},{"pos":[22972,23034],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.Common.DbDataReader\"></xref> object."},{"pos":[23574,23838],"content":"Executes the &lt;xref:System.Data.Common.DbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; against the &lt;xref:System.Data.Common.DbCommand.Connection<ept id=\"p1\">*</ept>&gt;, and returns an <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> using one of the <bpt id=\"p3\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*>, and returns an <xref href=\"System.Data.Common.DbDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[24049,24116],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[24192,24255],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Common.DbDataReader\"></xref> object."},{"pos":[24718,25101],"content":"An asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteReader<bpt id=\"p1\">*</bpt>&gt;, which executes the &lt;xref:System.Data.Common.DbCommand.CommandText<ept id=\"p1\">*</ept>&gt; against the &lt;xref:System.Data.Common.DbCommand.Connection<bpt id=\"p2\">*</bpt>&gt; and returns a <bpt id=\"p3\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.       Invokes &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync<ept id=\"p2\">*</ept>&gt; with CancellationToken.None.","needQuote":false,"needEscape":true,"source":"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader*>, which executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*> and returns a <xref href=\"System.Data.Common.DbDataReader\"></xref>.       Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*> with CancellationToken.None."},{"pos":[25114,25403],"content":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Managed provider implementers must call &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A&gt; in &lt;xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A&gt;.","pos":[0,165],"source":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>."},{"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[166,289],"source":" For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[25641,25688],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[25870,25921],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[26016,26082],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."},{"pos":[26575,26930],"content":"An asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteReader<bpt id=\"p1\">*</bpt>&gt;, which executes the &lt;xref:System.Data.Common.DbCommand.CommandText<ept id=\"p1\">*</ept>&gt; against the &lt;xref:System.Data.Common.DbCommand.Connection<bpt id=\"p2\">*</bpt>&gt; and returns a <bpt id=\"p3\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.       Invokes &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync<ept id=\"p2\">*</ept>&gt;.","needQuote":false,"needEscape":true,"source":"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader*>, which executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*> and returns a <xref href=\"System.Data.Common.DbDataReader\"></xref>.       Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>."},{"pos":[26943,27232],"content":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Managed provider implementers must call &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A&gt; in &lt;xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A&gt;.","pos":[0,165],"source":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>."},{"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[166,289],"source":" For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[27477,27544],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[27649,27696],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[27878,27929],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[28024,28090],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."},{"pos":[28603,29032],"content":"An asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteReader<bpt id=\"p1\">*</bpt>&gt;, which executes the &lt;xref:System.Data.Common.DbCommand.CommandText<ept id=\"p1\">*</ept>&gt; against the &lt;xref:System.Data.Common.DbCommand.Connection<bpt id=\"p2\">*</bpt>&gt; and returns a <bpt id=\"p3\">&lt;xref href=\"System.Data.Common.DbDataReader\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>. This method propagates a notification that operations should be canceled.       Invokes &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync<ept id=\"p2\">*</ept>&gt;.","needQuote":false,"needEscape":true,"source":"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader*>, which executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*> and returns a <xref href=\"System.Data.Common.DbDataReader\"></xref>. This method propagates a notification that operations should be canceled.       Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>."},{"pos":[29045,29334],"content":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Managed provider implementers must call &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A&gt; in &lt;xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A&gt;.","pos":[0,165],"source":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>."},{"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[166,289],"source":" For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[29611,29658],"content":"The token to monitor for cancellation requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]}]},{"pos":[29763,29810],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[29992,30043],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[30138,30204],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."},{"pos":[30820,30890],"content":"Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Invokes &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*&gt;.","pos":[0,70],"source":"Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>."}]},{"pos":[30902,31191],"content":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Managed provider implementers must call &lt;xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A&gt; in &lt;xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A&gt;.","pos":[0,165],"source":"Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>."},{"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[166,289],"source":" For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[31490,31557],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[31652,31699],"content":"The token to monitor for cancellation requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]}]},{"pos":[31804,31851],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[32033,32084],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[32179,32245],"content":"An invalid <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."},{"pos":[32609,32754],"content":"Executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.","needQuote":true,"needEscape":true,"nodes":[{"content":"Executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.","pos":[0,145],"nodes":[{"content":"Executes the query and returns the first column of the first row in the result set returned by the query.","pos":[0,105]},{"content":"All other columns and rows are ignored.","pos":[106,145]}]}]},{"pos":[32767,33319],"content":"Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method and performing the operations necessary to generate the single value using the data returned by a <xref:System.Data.Common.DbDataReader>.       If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned. If the value in the database is `null`, the query returns `DBNull.Value`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database.","pos":[0,106]},{"content":"This requires less code than using the &lt;xref:System.Data.Common.DbCommand.ExecuteReader%2A&gt; method and performing the operations necessary to generate the single value using the data returned by a &lt;xref:System.Data.Common.DbDataReader&gt;.","pos":[107,343],"source":" This requires less code than using the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method and performing the operations necessary to generate the single value using the data returned by a <xref:System.Data.Common.DbDataReader>."},{"content":"If the first column of the first row in the result set is not found, a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) is returned.","pos":[350,476],"source":"       If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned."},{"content":"If the value in the database is <ph id=\"ph1\">`null`</ph>, the query returns <ph id=\"ph2\">`DBNull.Value`</ph>.","pos":[477,550],"source":" If the value in the database is `null`, the query returns `DBNull.Value`."}]},{"pos":[33461,33513],"content":"The first column of the first row in the result set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The first column of the first row in the result set.","pos":[0,52]}]},{"pos":[33976,34307],"content":"An asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteScalar<bpt id=\"p1\">*</bpt>&gt;, which executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.       Invokes &lt;xref:System.Data.Common.DbCommand.ExecuteScalarAsync<ept id=\"p1\">*</ept>&gt; with CancellationToken.None.","needQuote":false,"needEscape":true,"source":"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar*>, which executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.       Invokes <xref:System.Data.Common.DbCommand.ExecuteScalarAsync*> with CancellationToken.None."},{"pos":[34320,34443],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."},{"pos":[34638,34685],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[34867,34918],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[35431,36190],"content":"This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar*>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.       The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteScalar*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.       Do not invoke other methods and properties of the <xref uid=\"langword_csharp_DbCommand\" name=\"DbCommand\" href=\"\"></xref> object until the returned Task is complete.","needQuote":false,"needEscape":true,"nodes":[{"content":"This is the asynchronous version of &lt;xref:System.Data.Common.DbCommand.ExecuteScalar<bpt id=\"p1\">*</bpt>&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.       The default implementation invokes the synchronous &lt;xref:System.Data.Common.DbCommand.ExecuteScalar<ept id=\"p1\">*</ept>&gt; method and returns a completed task, blocking the calling thread.","pos":[0,373],"source":"This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar*>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.       The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteScalar*> method and returns a completed task, blocking the calling thread."},{"content":"The default implementation will return a cancelled task if passed an already cancelled cancellation token.","pos":[374,480]},{"content":"Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.","pos":[481,578]},{"content":"Do not invoke other methods and properties of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DbCommand\" name=\"DbCommand\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object until the returned Task is complete.","pos":[585,749],"source":"       Do not invoke other methods and properties of the <xref uid=\"langword_csharp_DbCommand\" name=\"DbCommand\" href=\"\"></xref> object until the returned Task is complete."}]},{"pos":[36203,36326],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md)."},{"pos":[36586,36633],"content":"The token to monitor for cancellation requests.","needQuote":true,"needEscape":true,"nodes":[{"content":"The token to monitor for cancellation requests.","pos":[0,47]}]},{"pos":[36720,36767],"content":"A task representing the asynchronous operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]},{"pos":[36949,37000],"content":"An error occurred while executing the command text.","needQuote":true,"needEscape":true,"nodes":[{"content":"An error occurred while executing the command text.","pos":[0,51]}]},{"pos":[37345,37558],"content":"Gets the collection of <xref href=\"System.Data.Common.DbParameter\"></xref> objects. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the collection of <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,83],"source":"Gets the collection of <xref href=\"System.Data.Common.DbParameter\"></xref> objects."},{"content":"For more information on parameters, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[84,213],"source":" For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[37734,37790],"content":"The parameters of the SQL statement or stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters of the SQL statement or stored procedure.","pos":[0,56]}]},{"pos":[38194,38269],"content":"Creates a prepared (or compiled) version of the command on the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a prepared (or compiled) version of the command on the data source.","pos":[0,75]}]},{"pos":[38281,38552],"content":"If the <xref:System.Data.Common.DbCommand.CommandType%2A> property is set to `TableDirect`, `Prepare` does nothing. If <xref:System.Data.Common.DbCommand.CommandType%2A> is set to `StoredProcedure`, the call to `Prepare` should succeed, although it may result in a no-op.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the &lt;xref:System.Data.Common.DbCommand.CommandType%2A&gt; property is set to <ph id=\"ph1\">`TableDirect`</ph>, <ph id=\"ph2\">`Prepare`</ph> does nothing.","pos":[0,115],"source":"If the <xref:System.Data.Common.DbCommand.CommandType%2A> property is set to `TableDirect`, `Prepare` does nothing."},{"content":"If &lt;xref:System.Data.Common.DbCommand.CommandType%2A&gt; is set to <ph id=\"ph1\">`StoredProcedure`</ph>, the call to <ph id=\"ph2\">`Prepare`</ph> should succeed, although it may result in a no-op.","pos":[116,271],"source":" If <xref:System.Data.Common.DbCommand.CommandType%2A> is set to `StoredProcedure`, the call to `Prepare` should succeed, although it may result in a no-op."}]},{"pos":[39168,39305],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.IDbConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used by this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.IDbCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.IDbConnection\"></xref> used by this instance of the <xref href=\"System.Data.IDbCommand\"></xref>."},{"pos":[39317,39387],"content":"For more information, see <xref:System.Data.IDbCommand.Connection%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information, see &lt;xref:System.Data.IDbCommand.Connection%2A&gt;.","pos":[0,70],"source":"For more information, see <xref:System.Data.IDbCommand.Connection%2A>."}]},{"pos":[39554,39588],"content":"The connection to the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection to the data source.","pos":[0,34]}]},{"pos":[40184,40270],"content":"Creates a new instance of an <bpt id=\"p1\">&lt;xref href=\"System.Data.IDbDataParameter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Creates a new instance of an <xref href=\"System.Data.IDbDataParameter\"></xref> object."},{"pos":[40283,40555],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.CreateParameter%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.CreateParameter%2A>.","pos":[0,270],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Common.DbCommand&gt; instance is cast to an &lt;xref:System.Data.IDbCommand&gt; interface.","pos":[60,188],"source":" It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."},{"content":"For more information, see &lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;.","pos":[195,270],"source":"       For more information, see <xref:System.Data.IDbCommand.CreateParameter%2A>."}]}]},{"pos":[40731,40826],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_IDbDataParameter\" name=\"IDbDataParameter\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_IDbDataParameter\" name=\"IDbDataParameter\" href=\"\"></xref> object."},{"pos":[41417,41586],"content":"Executes the &lt;xref:System.Data.IDbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; against the &lt;xref:System.Data.IDbCommand.Connection<ept id=\"p1\">*</ept>&gt; and builds an <bpt id=\"p2\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*> and builds an <xref href=\"System.Data.IDataReader\"></xref>."},{"pos":[41599,41869],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.","pos":[0,268],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Common.DbCommand&gt; instance is cast to an &lt;xref:System.Data.IDbCommand&gt; interface.","pos":[60,188],"source":" It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."},{"content":"For more information, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;.","pos":[195,268],"source":"       For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>."}]}]},{"pos":[42033,42088],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.IDataReader\"></xref> object."},{"pos":[42780,43023],"content":"Executes the &lt;xref:System.Data.IDbCommand.CommandText<bpt id=\"p1\">*</bpt>&gt; against the &lt;xref:System.Data.IDbCommand.Connection<ept id=\"p1\">*</ept>&gt;, and builds an <bpt id=\"p2\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> using one of the <bpt id=\"p3\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*>, and builds an <xref href=\"System.Data.IDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[43036,43306],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.","pos":[0,268],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Common.DbCommand&gt; instance is cast to an &lt;xref:System.Data.IDbCommand&gt; interface.","pos":[60,188],"source":" It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."},{"content":"For more information, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;.","pos":[195,268],"source":"       For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>."}]}]},{"pos":[43514,43581],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."},{"pos":[43649,43704],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataReader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.IDataReader\"></xref> object."},{"pos":[44274,44341],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.IDataParameterCollection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.IDataParameterCollection\"></xref>."},{"pos":[44354,44621],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.Parameters%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For more information, see <xref:System.Data.IDbCommand.Parameters%2A>.","pos":[0,265],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Common.DbCommand&gt; instance is cast to an &lt;xref:System.Data.IDbCommand&gt; interface.","pos":[60,188],"source":" It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."},{"content":"For more information, see &lt;xref:System.Data.IDbCommand.Parameters%2A&gt;.","pos":[195,265],"source":"       For more information, see <xref:System.Data.IDbCommand.Parameters%2A>."}]}]},{"pos":[44806,44862],"content":"The parameters of the SQL statement or stored procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"The parameters of the SQL statement or stored procedure.","pos":[0,56]}]},{"pos":[45434,45586],"content":"Gets or sets the &lt;xref:System.Data.Common.DbCommand.DbTransaction*&gt; within which this <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object executes.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref:System.Data.Common.DbCommand.DbTransaction*> within which this <xref href=\"System.Data.Common.DbCommand\"></xref> object executes."},{"pos":[45598,45670],"content":"For more information, see <xref:System.Data.IDbCommand.Ttransaction%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information, see &lt;xref:System.Data.IDbCommand.Ttransaction%2A&gt;.","pos":[0,72],"source":"For more information, see <xref:System.Data.IDbCommand.Ttransaction%2A>."}]},{"pos":[45840,46112],"content":"The transaction within which a <xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"></xref> object of a .NET Framework data provider executes. The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).","needQuote":true,"needEscape":true,"nodes":[{"content":"The transaction within which a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of a .NET Framework data provider executes.","pos":[0,148],"source":"The transaction within which a <xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"></xref> object of a .NET Framework data provider executes."},{"content":"The default value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[149,272],"source":" The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]},{"pos":[46556,46711],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Common.DbTransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> within which this <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.DbCommand\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object executes.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Data.Common.DbTransaction\"></xref> within which this <xref href=\"System.Data.Common.DbCommand\"></xref> object executes."},{"pos":[46877,47149],"content":"The transaction within which a <xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"></xref> object of a .NET Framework data provider executes. The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).","needQuote":true,"needEscape":true,"nodes":[{"content":"The transaction within which a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of a .NET Framework data provider executes.","pos":[0,148],"source":"The transaction within which a <xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"></xref> object of a .NET Framework data provider executes."},{"content":"The default value is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic).","pos":[149,272],"source":" The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)."}]},{"pos":[47595,47778],"content":"Gets or sets how command results are applied to the <bpt id=\"p1\">&lt;xref href=\"System.Data.DataRow\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> when used by the Update method of a <bpt id=\"p2\">&lt;xref href=\"System.Data.Common.DbDataAdapter\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the Update method of a <xref href=\"System.Data.Common.DbDataAdapter\"></xref>."},{"pos":[47790,47913],"content":"Throws a <xref:System.ArgumentException> if the value entered was not one of the <xref:System.Data.UpdateRowSource> values.","needQuote":true,"needEscape":true,"nodes":[{"content":"Throws a &lt;xref:System.ArgumentException&gt; if the value entered was not one of the &lt;xref:System.Data.UpdateRowSource&gt; values.","pos":[0,123],"source":"Throws a <xref:System.ArgumentException> if the value entered was not one of the <xref:System.Data.UpdateRowSource> values."}]},{"pos":[48083,48355],"content":"One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values. The default is <xref uid=\"langword_csharp_Both\" name=\"Both\" href=\"\"></xref> unless the command is automatically generated. Then the default is <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.UpdateRowSource\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,67],"source":"One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Both\" name=\"Both\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> unless the command is automatically generated.","pos":[68,190],"source":" The default is <xref uid=\"langword_csharp_Both\" name=\"Both\" href=\"\"></xref> unless the command is automatically generated."},{"content":"Then the default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[191,272],"source":" Then the default is <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DbCommand\n  id: DbCommand\n  children:\n  - System.Data.Common.DbCommand.#ctor\n  - System.Data.Common.DbCommand.Cancel\n  - System.Data.Common.DbCommand.CommandText\n  - System.Data.Common.DbCommand.CommandTimeout\n  - System.Data.Common.DbCommand.CommandType\n  - System.Data.Common.DbCommand.Connection\n  - System.Data.Common.DbCommand.CreateDbParameter\n  - System.Data.Common.DbCommand.CreateParameter\n  - System.Data.Common.DbCommand.DbConnection\n  - System.Data.Common.DbCommand.DbParameterCollection\n  - System.Data.Common.DbCommand.DbTransaction\n  - System.Data.Common.DbCommand.DesignTimeVisible\n  - System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteNonQuery\n  - System.Data.Common.DbCommand.ExecuteNonQueryAsync\n  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteReader\n  - System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.Common.DbCommand.ExecuteReaderAsync\n  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.ExecuteScalar\n  - System.Data.Common.DbCommand.ExecuteScalarAsync\n  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbCommand.Parameters\n  - System.Data.Common.DbCommand.Prepare\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction\n  - System.Data.Common.DbCommand.Transaction\n  - System.Data.Common.DbCommand.UpdatedRowSource\n  langs:\n  - csharp\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n  type: Class\n  summary: Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*>\n  syntax:\n    content: 'public abstract class DbCommand : System.ComponentModel.Component, IDisposable, System.Data.IDbCommand'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements:\n  - System.Data.IDbCommand\n  - System.IDisposable\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: DbCommand()\n  nameWithType: DbCommand.DbCommand()\n  fullName: System.Data.Common.DbCommand.DbCommand()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Constructs an instance of the <xref href=\"System.Data.Common.DbCommand\"></xref> object.\n  syntax:\n    content: protected DbCommand ();\n    parameters: []\n  overload: System.Data.Common.DbCommand.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.Cancel\n  id: Cancel\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: DbCommand.Cancel()\n  fullName: System.Data.Common.DbCommand.Cancel()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Attempts to cancels the execution of a <xref href=\"System.Data.Common.DbCommand\"></xref>.\n  remarks: If there is nothing to cancel, nothing happens. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.\n  syntax:\n    content: public abstract void Cancel ();\n    parameters: []\n  overload: System.Data.Common.DbCommand.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.CommandText\n  id: CommandText\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: CommandText\n  nameWithType: DbCommand.CommandText\n  fullName: System.Data.Common.DbCommand.CommandText\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the text command to run against the data source.\n  remarks: When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the CommandText property to the name of the stored procedure. The command executes this stored procedure when you call one of the `Execute` methods.\n  syntax:\n    content: public abstract string CommandText { get; set; }\n    return:\n      type: System.String\n      description: The text command to execute. The default value is an empty string (\"\").\n  overload: System.Data.Common.DbCommand.CommandText*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: CommandTimeout\n  nameWithType: DbCommand.CommandTimeout\n  fullName: System.Data.Common.DbCommand.CommandTimeout\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the wait time before terminating the attempt to execute a command and generating an error.\n  remarks: \"An <xref:System.ArgumentException> is generated if the assigned CommandTimeout property value is less than 0.  \\n  \\n Note to implementers, it is recommended that 0 means no timeout.\"\n  syntax:\n    content: public abstract int CommandTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time in seconds to wait for the command to execute.\n  overload: System.Data.Common.DbCommand.CommandTimeout*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.CommandType\n  id: CommandType\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: CommandType\n  nameWithType: DbCommand.CommandType\n  fullName: System.Data.Common.DbCommand.CommandType\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Indicates or specifies how the <xref:System.Data.Common.DbCommand.CommandText*> property is interpreted.\n  remarks: When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the <xref:System.Data.Common.DbCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the `Execute` methods.\n  syntax:\n    content: public abstract System.Data.CommandType CommandType { get; set; }\n    return:\n      type: System.Data.CommandType\n      description: One of the <xref href=\"System.Data.CommandType\"></xref> values. The default is <xref uid=\"langword_csharp_Text\" name=\"Text\" href=\"\"></xref>.\n  overload: System.Data.Common.DbCommand.CommandType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.Connection\n  id: Connection\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: DbCommand.Connection\n  fullName: System.Data.Common.DbCommand.Connection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref href=\"System.Data.Common.DbConnection\"></xref> used by this <xref href=\"System.Data.Common.DbCommand\"></xref>.\n  syntax:\n    content: public System.Data.Common.DbConnection Connection { get; set; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: The connection to the data source.\n  overload: System.Data.Common.DbCommand.Connection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.CreateDbParameter\n  id: CreateDbParameter\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: CreateDbParameter()\n  nameWithType: DbCommand.CreateDbParameter()\n  fullName: System.Data.Common.DbCommand.CreateDbParameter()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates a new instance of a <xref href=\"System.Data.Common.DbParameter\"></xref> object.\n  syntax:\n    content: protected abstract System.Data.Common.DbParameter CreateDbParameter ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbParameter\n      description: A <xref href=\"System.Data.Common.DbParameter\"></xref> object.\n  overload: System.Data.Common.DbCommand.CreateDbParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.CreateParameter\n  id: CreateParameter\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: CreateParameter()\n  nameWithType: DbCommand.CreateParameter()\n  fullName: System.Data.Common.DbCommand.CreateParameter()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates a new instance of a <xref href=\"System.Data.Common.DbParameter\"></xref> object.\n  syntax:\n    content: public System.Data.Common.DbParameter CreateParameter ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbParameter\n      description: A <xref href=\"System.Data.Common.DbParameter\"></xref> object.\n  overload: System.Data.Common.DbCommand.CreateParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.DbConnection\n  id: DbConnection\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: DbConnection\n  nameWithType: DbCommand.DbConnection\n  fullName: System.Data.Common.DbCommand.DbConnection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref href=\"System.Data.Common.DbConnection\"></xref> used by this <xref href=\"System.Data.Common.DbCommand\"></xref>.\n  syntax:\n    content: protected abstract System.Data.Common.DbConnection DbConnection { get; set; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: The connection to the data source.\n  overload: System.Data.Common.DbCommand.DbConnection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.DbParameterCollection\n  id: DbParameterCollection\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: DbParameterCollection\n  nameWithType: DbCommand.DbParameterCollection\n  fullName: System.Data.Common.DbCommand.DbParameterCollection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets the collection of <xref href=\"System.Data.Common.DbParameter\"></xref> objects.\n  syntax:\n    content: protected abstract System.Data.Common.DbParameterCollection DbParameterCollection { get; }\n    return:\n      type: System.Data.Common.DbParameterCollection\n      description: The parameters of the SQL statement or stored procedure.\n  overload: System.Data.Common.DbCommand.DbParameterCollection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.DbTransaction\n  id: DbTransaction\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: DbTransaction\n  nameWithType: DbCommand.DbTransaction\n  fullName: System.Data.Common.DbCommand.DbTransaction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the DbTransaction within which this <xref href=\"System.Data.Common.DbCommand\"></xref> object executes.\n  syntax:\n    content: protected abstract System.Data.Common.DbTransaction DbTransaction { get; set; }\n    return:\n      type: System.Data.Common.DbTransaction\n      description: The transaction within which a Command object of a .NET Framework data provider executes. The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  overload: System.Data.Common.DbCommand.DbTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.DesignTimeVisible\n  id: DesignTimeVisible\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: DesignTimeVisible\n  nameWithType: DbCommand.DesignTimeVisible\n  fullName: System.Data.Common.DbCommand.DesignTimeVisible\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets a value indicating whether the command object should be visible in a customized interface control.\n  syntax:\n    content: public abstract bool DesignTimeVisible { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, if the command object should be visible in a control; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.Data.Common.DbCommand.DesignTimeVisible*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  id: ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteDbDataReader(CommandBehavior)\n  nameWithType: DbCommand.ExecuteDbDataReader(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes the command text against the connection.\n  syntax:\n    content: protected abstract System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: An instance of <xref href=\"System.Data.CommandBehavior\"></xref>.\n    return:\n      type: System.Data.Common.DbDataReader\n      description: A task representing the operation.\n  overload: System.Data.Common.DbCommand.ExecuteDbDataReader*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)\n  nameWithType: DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"Providers should implement this method to provide a non-default implementation for <xref:System.Data.Common.DbCommand.ExecuteReader*> overloads.  \\n  \\n The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteReader*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  \\n  \\n This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: protected virtual System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: Options for statement execution and data retrieval.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteNonQuery\n  id: ExecuteNonQuery\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteNonQuery()\n  nameWithType: DbCommand.ExecuteNonQuery()\n  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes a SQL statement against a connection object.\n  remarks: \"You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database by executing UPDATE, INSERT, or DELETE statements.  \\n  \\n Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.  \\n  \\n For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1.\"\n  syntax:\n    content: public abstract int ExecuteNonQuery ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of rows affected.\n  overload: System.Data.Common.DbCommand.ExecuteNonQuery*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync\n  id: ExecuteNonQueryAsync\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteNonQueryAsync()\n  nameWithType: DbCommand.ExecuteNonQueryAsync()\n  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery*>, which executes a SQL statement against a connection object.  \\n  \\n Invokes <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync*> with CancellationToken.None.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<int> ExecuteNonQueryAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteNonQueryAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteNonQueryAsync(CancellationToken)\n  nameWithType: DbCommand.ExecuteNonQueryAsync(CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery*>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  \\n  \\n The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteNonQuery*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by <xref:System.Data.Common.DbCommand.ExecuteNonQuery*> will be communicated via the returned Task Exception property.  \\n  \\n Do not invoke other methods and properties of the <xref uid=\\\"langword_csharp_DbCommand\\\" name=\\\"DbCommand\\\" href=\\\"\\\"></xref> object until the returned Task is complete.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests.\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteNonQueryAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteReader\n  id: ExecuteReader\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteReader()\n  nameWithType: DbCommand.ExecuteReader()\n  fullName: System.Data.Common.DbCommand.ExecuteReader()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*>, and returns an <xref href=\"System.Data.Common.DbDataReader\"></xref>.\n  syntax:\n    content: public System.Data.Common.DbDataReader ExecuteReader ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbDataReader\n      description: A <xref href=\"System.Data.Common.DbDataReader\"></xref> object.\n  overload: System.Data.Common.DbCommand.ExecuteReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)\n  id: ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteReader(CommandBehavior)\n  nameWithType: DbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.ExecuteReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*>, and returns an <xref href=\"System.Data.Common.DbDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  syntax:\n    content: public System.Data.Common.DbDataReader ExecuteReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    return:\n      type: System.Data.Common.DbDataReader\n      description: An <xref href=\"System.Data.Common.DbDataReader\"></xref> object.\n  overload: System.Data.Common.DbCommand.ExecuteReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync\n  id: ExecuteReaderAsync\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync()\n  nameWithType: DbCommand.ExecuteReaderAsync()\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader*>, which executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*> and returns a <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref>.  \\n  \\n Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*> with CancellationToken.None.\"\n  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  id: ExecuteReaderAsync(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync(CommandBehavior)\n  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader*>, which executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*> and returns a <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref>.  \\n  \\n Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>.\"\n  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  id: ExecuteReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync(CancellationToken)\n  nameWithType: DbCommand.ExecuteReaderAsync(CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader*>, which executes the <xref:System.Data.Common.DbCommand.CommandText*> against the <xref:System.Data.Common.DbCommand.Connection*> and returns a <xref href=\\\"System.Data.Common.DbDataReader\\\"></xref>. This method propagates a notification that operations should be canceled.  \\n  \\n Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>.\"\n  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)\n  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*>.\n  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteScalar\n  id: ExecuteScalar\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteScalar()\n  nameWithType: DbCommand.ExecuteScalar()\n  fullName: System.Data.Common.DbCommand.ExecuteScalar()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.\n  remarks: \"Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method and performing the operations necessary to generate the single value using the data returned by a <xref:System.Data.Common.DbDataReader>.  \\n  \\n If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned. If the value in the database is `null`, the query returns `DBNull.Value`.\"\n  syntax:\n    content: public abstract object ExecuteScalar ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The first column of the first row in the result set.\n  overload: System.Data.Common.DbCommand.ExecuteScalar*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteScalarAsync\n  id: ExecuteScalarAsync\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteScalarAsync()\n  nameWithType: DbCommand.ExecuteScalarAsync()\n  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar*>, which executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.  \\n  \\n Invokes <xref:System.Data.Common.DbCommand.ExecuteScalarAsync*> with CancellationToken.None.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<object> ExecuteScalarAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteScalarAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  id: ExecuteScalarAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: ExecuteScalarAsync(CancellationToken)\n  nameWithType: DbCommand.ExecuteScalarAsync(CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: \"This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar*>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  \\n  \\n The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteScalar*> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  \\n  \\n Do not invoke other methods and properties of the <xref uid=\\\"langword_csharp_DbCommand\\\" name=\\\"DbCommand\\\" href=\\\"\\\"></xref> object until the returned Task is complete.\"\n  remarks: For more information about asynchronous programming, see [Asynchronous Programming](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The token to monitor for cancellation requests.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.Common.DbCommand.ExecuteScalarAsync*\n  exceptions:\n  - type: System.Data.Common.DbException\n    commentId: T:System.Data.Common.DbException\n    description: An error occurred while executing the command text.\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.Parameters\n  id: Parameters\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: DbCommand.Parameters\n  fullName: System.Data.Common.DbCommand.Parameters\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets the collection of <xref href=\"System.Data.Common.DbParameter\"></xref> objects. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public System.Data.Common.DbParameterCollection Parameters { get; }\n    return:\n      type: System.Data.Common.DbParameterCollection\n      description: The parameters of the SQL statement or stored procedure.\n  overload: System.Data.Common.DbCommand.Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.Prepare\n  id: Prepare\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: Prepare()\n  nameWithType: DbCommand.Prepare()\n  fullName: System.Data.Common.DbCommand.Prepare()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates a prepared (or compiled) version of the command on the data source.\n  remarks: If the <xref:System.Data.Common.DbCommand.CommandType%2A> property is set to `TableDirect`, `Prepare` does nothing. If <xref:System.Data.Common.DbCommand.CommandType%2A> is set to `StoredProcedure`, the call to `Prepare` should succeed, although it may result in a no-op.\n  syntax:\n    content: public abstract void Prepare ();\n    parameters: []\n  overload: System.Data.Common.DbCommand.Prepare*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection\n  id: System#Data#IDbCommand#Connection\n  isEii: true\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.Connection\n  nameWithType: DbCommand.System.Data.IDbCommand.Connection\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref href=\"System.Data.IDbConnection\"></xref> used by this instance of the <xref href=\"System.Data.IDbCommand\"></xref>.\n  remarks: For more information, see <xref:System.Data.IDbCommand.Connection%2A>.\n  syntax:\n    content: System.Data.IDbConnection System.Data.IDbCommand.Connection { get; set; }\n    return:\n      type: System.Data.IDbConnection\n      description: The connection to the data source.\n  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter\n  id: System#Data#IDbCommand#CreateParameter\n  isEii: true\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.CreateParameter()\n  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter()\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates a new instance of an <xref href=\"System.Data.IDbDataParameter\"></xref> object.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \\n  \\n For more information, see <xref:System.Data.IDbCommand.CreateParameter%2A>.\"\n  syntax:\n    content: System.Data.IDbDataParameter IDbCommand.CreateParameter ();\n    parameters: []\n    return:\n      type: System.Data.IDbDataParameter\n      description: An <xref uid=\"langword_csharp_IDbDataParameter\" name=\"IDbDataParameter\" href=\"\"></xref> object.\n  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader\n  id: System#Data#IDbCommand#ExecuteReader\n  isEii: true\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.ExecuteReader()\n  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader()\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*> and builds an <xref href=\"System.Data.IDataReader\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \\n  \\n For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.\"\n  syntax:\n    content: System.Data.IDataReader IDbCommand.ExecuteReader ();\n    parameters: []\n    return:\n      type: System.Data.IDataReader\n      description: An <xref href=\"System.Data.IDataReader\"></xref> object.\n  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  isEii: true\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*>, and builds an <xref href=\"System.Data.IDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \\n  \\n For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>.\"\n  syntax:\n    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    return:\n      type: System.Data.IDataReader\n      description: An <xref href=\"System.Data.IDataReader\"></xref> object.\n  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters\n  id: System#Data#IDbCommand#Parameters\n  isEii: true\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.Parameters\n  nameWithType: DbCommand.System.Data.IDbCommand.Parameters\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets the <xref href=\"System.Data.IDataParameterCollection\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \\n  \\n For more information, see <xref:System.Data.IDbCommand.Parameters%2A>.\"\n  syntax:\n    content: System.Data.IDataParameterCollection System.Data.IDbCommand.Parameters { get; }\n    return:\n      type: System.Data.IDataParameterCollection\n      description: The parameters of the SQL statement or stored procedure.\n  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction\n  id: System#Data#IDbCommand#Transaction\n  isEii: true\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: System.Data.IDbCommand.Transaction\n  nameWithType: DbCommand.System.Data.IDbCommand.Transaction\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref:System.Data.Common.DbCommand.DbTransaction*> within which this <xref href=\"System.Data.Common.DbCommand\"></xref> object executes.\n  remarks: For more information, see <xref:System.Data.IDbCommand.Ttransaction%2A>.\n  syntax:\n    content: System.Data.IDbTransaction System.Data.IDbCommand.Transaction { get; set; }\n    return:\n      type: System.Data.IDbTransaction\n      description: The transaction within which a <xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"></xref> object of a .NET Framework data provider executes. The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.Transaction\n  id: Transaction\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: Transaction\n  nameWithType: DbCommand.Transaction\n  fullName: System.Data.Common.DbCommand.Transaction\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets the <xref href=\"System.Data.Common.DbTransaction\"></xref> within which this <xref href=\"System.Data.Common.DbCommand\"></xref> object executes.\n  syntax:\n    content: public System.Data.Common.DbTransaction Transaction { get; set; }\n    return:\n      type: System.Data.Common.DbTransaction\n      description: The transaction within which a <xref uid=\"langword_csharp_Command\" name=\"Command\" href=\"\"></xref> object of a .NET Framework data provider executes. The default value is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).\n  overload: System.Data.Common.DbCommand.Transaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DbCommand.UpdatedRowSource\n  id: UpdatedRowSource\n  parent: System.Data.Common.DbCommand\n  langs:\n  - csharp\n  name: UpdatedRowSource\n  nameWithType: DbCommand.UpdatedRowSource\n  fullName: System.Data.Common.DbCommand.UpdatedRowSource\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the Update method of a <xref href=\"System.Data.Common.DbDataAdapter\"></xref>.\n  remarks: Throws a <xref:System.ArgumentException> if the value entered was not one of the <xref:System.Data.UpdateRowSource> values.\n  syntax:\n    content: public abstract System.Data.UpdateRowSource UpdatedRowSource { get; set; }\n    return:\n      type: System.Data.UpdateRowSource\n      description: One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values. The default is <xref uid=\"langword_csharp_Both\" name=\"Both\" href=\"\"></xref> unless the command is automatically generated. Then the default is <xref uid=\"langword_csharp_None\" name=\"None\" href=\"\"></xref>.\n  overload: System.Data.Common.DbCommand.UpdatedRowSource*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Component\n  isExternal: false\n  name: System.ComponentModel.Component\n- uid: System.Data.Common.DbException\n  parent: System.Data.Common\n  isExternal: false\n  name: DbException\n  nameWithType: DbException\n  fullName: System.Data.Common.DbException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Common.DbCommand.#ctor\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbCommand()\n  nameWithType: DbCommand.DbCommand()\n  fullName: System.Data.Common.DbCommand.DbCommand()\n- uid: System.Data.Common.DbCommand.Cancel\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Cancel()\n  nameWithType: DbCommand.Cancel()\n  fullName: System.Data.Common.DbCommand.Cancel()\n- uid: System.Data.Common.DbCommand.CommandText\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CommandText\n  nameWithType: DbCommand.CommandText\n  fullName: System.Data.Common.DbCommand.CommandText\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.DbCommand.CommandTimeout\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: DbCommand.CommandTimeout\n  fullName: System.Data.Common.DbCommand.CommandTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Common.DbCommand.CommandType\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CommandType\n  nameWithType: DbCommand.CommandType\n  fullName: System.Data.Common.DbCommand.CommandType\n- uid: System.Data.CommandType\n  parent: System.Data\n  isExternal: false\n  name: CommandType\n  nameWithType: CommandType\n  fullName: System.Data.CommandType\n- uid: System.Data.Common.DbCommand.Connection\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Connection\n  nameWithType: DbCommand.Connection\n  fullName: System.Data.Common.DbCommand.Connection\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbConnection\n  fullName: System.Data.Common.DbConnection\n- uid: System.Data.Common.DbCommand.CreateDbParameter\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CreateDbParameter()\n  nameWithType: DbCommand.CreateDbParameter()\n  fullName: System.Data.Common.DbCommand.CreateDbParameter()\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  nameWithType: DbParameter\n  fullName: System.Data.Common.DbParameter\n- uid: System.Data.Common.DbCommand.CreateParameter\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CreateParameter()\n  nameWithType: DbCommand.CreateParameter()\n  fullName: System.Data.Common.DbCommand.CreateParameter()\n- uid: System.Data.Common.DbCommand.DbConnection\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbCommand.DbConnection\n  fullName: System.Data.Common.DbCommand.DbConnection\n- uid: System.Data.Common.DbCommand.DbParameterCollection\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: DbCommand.DbParameterCollection\n  fullName: System.Data.Common.DbCommand.DbParameterCollection\n- uid: System.Data.Common.DbParameterCollection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: DbParameterCollection\n  fullName: System.Data.Common.DbParameterCollection\n- uid: System.Data.Common.DbCommand.DbTransaction\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbCommand.DbTransaction\n  fullName: System.Data.Common.DbCommand.DbTransaction\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.Common.DbCommand.DesignTimeVisible\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DesignTimeVisible\n  nameWithType: DbCommand.DesignTimeVisible\n  fullName: System.Data.Common.DbCommand.DesignTimeVisible\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteDbDataReader(CommandBehavior)\n  nameWithType: DbCommand.ExecuteDbDataReader(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(CommandBehavior)\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)\n  nameWithType: DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<DbDataReader>\n  nameWithType: Task<DbDataReader>\n  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Data.Common.DbDataReader>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.DbDataReader\n    name: DbDataReader\n    nameWithType: DbDataReader\n    fullName: DbDataReader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: true\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Data.Common.DbCommand.ExecuteNonQuery\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteNonQuery()\n  nameWithType: DbCommand.ExecuteNonQuery()\n  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()\n- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteNonQueryAsync()\n  nameWithType: DbCommand.ExecuteNonQueryAsync()\n  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteNonQueryAsync(CancellationToken)\n  nameWithType: DbCommand.ExecuteNonQueryAsync(CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken)\n- uid: System.Data.Common.DbCommand.ExecuteReader\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReader()\n  nameWithType: DbCommand.ExecuteReader()\n  fullName: System.Data.Common.DbCommand.ExecuteReader()\n- uid: System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReader(CommandBehavior)\n  nameWithType: DbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReaderAsync()\n  nameWithType: DbCommand.ExecuteReaderAsync()\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync()\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReaderAsync(CommandBehavior)\n  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior)\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReaderAsync(CancellationToken)\n  nameWithType: DbCommand.ExecuteReaderAsync(CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CancellationToken)\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)\n  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)\n- uid: System.Data.Common.DbCommand.ExecuteScalar\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteScalar()\n  nameWithType: DbCommand.ExecuteScalar()\n  fullName: System.Data.Common.DbCommand.ExecuteScalar()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.DbCommand.ExecuteScalarAsync\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteScalarAsync()\n  nameWithType: DbCommand.ExecuteScalarAsync()\n  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: true\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: Task<System.Object>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteScalarAsync(CancellationToken)\n  nameWithType: DbCommand.ExecuteScalarAsync(CancellationToken)\n  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(CancellationToken)\n- uid: System.Data.Common.DbCommand.Parameters\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommand.Parameters\n  fullName: System.Data.Common.DbCommand.Parameters\n- uid: System.Data.Common.DbCommand.Prepare\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Prepare()\n  nameWithType: DbCommand.Prepare()\n  fullName: System.Data.Common.DbCommand.Prepare()\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.Connection\n  nameWithType: DbCommand.System.Data.IDbCommand.Connection\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection\n- uid: System.Data.IDbConnection\n  parent: System.Data\n  isExternal: false\n  name: IDbConnection\n  nameWithType: IDbConnection\n  fullName: System.Data.IDbConnection\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.CreateParameter()\n  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter()\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()\n- uid: System.Data.IDbDataParameter\n  parent: System.Data\n  isExternal: false\n  name: IDbDataParameter\n  nameWithType: IDbDataParameter\n  fullName: System.Data.IDbDataParameter\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.ExecuteReader()\n  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader()\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()\n- uid: System.Data.IDataReader\n  parent: System.Data\n  isExternal: false\n  name: IDataReader\n  nameWithType: IDataReader\n  fullName: System.Data.IDataReader\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.Parameters\n  nameWithType: DbCommand.System.Data.IDbCommand.Parameters\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters\n- uid: System.Data.IDataParameterCollection\n  parent: System.Data\n  isExternal: false\n  name: IDataParameterCollection\n  nameWithType: IDataParameterCollection\n  fullName: System.Data.IDataParameterCollection\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.Transaction\n  nameWithType: DbCommand.System.Data.IDbCommand.Transaction\n  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction\n- uid: System.Data.IDbTransaction\n  parent: System.Data\n  isExternal: false\n  name: IDbTransaction\n  nameWithType: IDbTransaction\n  fullName: System.Data.IDbTransaction\n- uid: System.Data.Common.DbCommand.Transaction\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Transaction\n  nameWithType: DbCommand.Transaction\n  fullName: System.Data.Common.DbCommand.Transaction\n- uid: System.Data.Common.DbCommand.UpdatedRowSource\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: UpdatedRowSource\n  nameWithType: DbCommand.UpdatedRowSource\n  fullName: System.Data.Common.DbCommand.UpdatedRowSource\n- uid: System.Data.UpdateRowSource\n  parent: System.Data\n  isExternal: false\n  name: UpdateRowSource\n  nameWithType: UpdateRowSource\n  fullName: System.Data.UpdateRowSource\n- uid: System.Data.Common.DbCommand.#ctor*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand.DbCommand\n- uid: System.Data.Common.DbCommand.Cancel*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Cancel\n  nameWithType: DbCommand.Cancel\n- uid: System.Data.Common.DbCommand.CommandText*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CommandText\n  nameWithType: DbCommand.CommandText\n- uid: System.Data.Common.DbCommand.CommandTimeout*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: DbCommand.CommandTimeout\n- uid: System.Data.Common.DbCommand.CommandType*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CommandType\n  nameWithType: DbCommand.CommandType\n- uid: System.Data.Common.DbCommand.Connection*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Connection\n  nameWithType: DbCommand.Connection\n- uid: System.Data.Common.DbCommand.CreateDbParameter*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CreateDbParameter\n  nameWithType: DbCommand.CreateDbParameter\n- uid: System.Data.Common.DbCommand.CreateParameter*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: CreateParameter\n  nameWithType: DbCommand.CreateParameter\n- uid: System.Data.Common.DbCommand.DbConnection*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbCommand.DbConnection\n- uid: System.Data.Common.DbCommand.DbParameterCollection*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: DbCommand.DbParameterCollection\n- uid: System.Data.Common.DbCommand.DbTransaction*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbCommand.DbTransaction\n- uid: System.Data.Common.DbCommand.DesignTimeVisible*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: DesignTimeVisible\n  nameWithType: DbCommand.DesignTimeVisible\n- uid: System.Data.Common.DbCommand.ExecuteDbDataReader*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteDbDataReader\n  nameWithType: DbCommand.ExecuteDbDataReader\n- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteDbDataReaderAsync\n  nameWithType: DbCommand.ExecuteDbDataReaderAsync\n- uid: System.Data.Common.DbCommand.ExecuteNonQuery*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteNonQuery\n  nameWithType: DbCommand.ExecuteNonQuery\n- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteNonQueryAsync\n  nameWithType: DbCommand.ExecuteNonQueryAsync\n- uid: System.Data.Common.DbCommand.ExecuteReader*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReader\n  nameWithType: DbCommand.ExecuteReader\n- uid: System.Data.Common.DbCommand.ExecuteReaderAsync*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteReaderAsync\n  nameWithType: DbCommand.ExecuteReaderAsync\n- uid: System.Data.Common.DbCommand.ExecuteScalar*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteScalar\n  nameWithType: DbCommand.ExecuteScalar\n- uid: System.Data.Common.DbCommand.ExecuteScalarAsync*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteScalarAsync\n  nameWithType: DbCommand.ExecuteScalarAsync\n- uid: System.Data.Common.DbCommand.Parameters*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommand.Parameters\n- uid: System.Data.Common.DbCommand.Prepare*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Prepare\n  nameWithType: DbCommand.Prepare\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.Connection\n  nameWithType: DbCommand.System.Data.IDbCommand.Connection\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.CreateParameter\n  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.ExecuteReader\n  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.Parameters\n  nameWithType: DbCommand.System.Data.IDbCommand.Parameters\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: System.Data.IDbCommand.Transaction\n  nameWithType: DbCommand.System.Data.IDbCommand.Transaction\n- uid: System.Data.Common.DbCommand.Transaction*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Transaction\n  nameWithType: DbCommand.Transaction\n- uid: System.Data.Common.DbCommand.UpdatedRowSource*\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: UpdatedRowSource\n  nameWithType: DbCommand.UpdatedRowSource\n"}