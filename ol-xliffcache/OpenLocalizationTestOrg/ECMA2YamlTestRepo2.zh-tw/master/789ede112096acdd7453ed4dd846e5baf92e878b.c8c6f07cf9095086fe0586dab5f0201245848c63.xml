{"nodes":[{"pos":[608,707],"content":"Verifies that the user has permission to access the file requested. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Verifies that the user has permission to access the file requested. This class cannot be inherited.","pos":[0,99],"nodes":[{"content":"Verifies that the user has permission to access the file requested.","pos":[0,67]},{"content":"This class cannot be inherited.","pos":[68,99]}]}]},{"pos":[719,1402],"content":"This module provides authorization services against file-system access-control lists (ACLs). When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the FileAuthorizationModule module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request. For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"This module provides authorization services against file-system access-control lists (ACLs).","pos":[0,92]},{"content":"When the <ph id=\"ph1\">`mode`</ph> attribute of the <bpt id=\"p1\">[</bpt>authentication Element (ASP.NET Settings Schema)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2)</ept> configuration element is set to <ph id=\"ph2\">`Windows`</ph> so that the &lt;xref:System.Web.Security.WindowsAuthenticationModule&gt; is being used for the application, the FileAuthorizationModule module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request.","pos":[93,568],"source":" When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the FileAuthorizationModule module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request."},{"content":"For more information, see the &lt;xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A&gt; method.","pos":[569,683],"source":" For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method."}]},{"pos":[2037,2135],"content":"Creates an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates an instance of the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> class."},{"pos":[2148,2533],"content":"This constructor is not intended to be called from application code.       ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.","needQuote":false,"needEscape":true,"nodes":[{"content":"This constructor is not intended to be called from application code.       ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.","pos":[0,383],"nodes":[{"content":"This constructor is not intended to be called from application code.","pos":[0,68]},{"content":"ASP.NET calls this constructor to create an instance of the &lt;xref:System.Web.Security.FileAuthorizationModule&gt; class.","pos":[75,192],"source":"       ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class."},{"content":"After calling the constructor, it calls the &lt;xref:System.Web.Security.FileAuthorizationModule.Init%2A&gt; method to initialize the new &lt;xref:System.Web.Security.FileAuthorizationModule&gt; object.","pos":[193,383],"source":" After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object."}]}]},{"pos":[3305,3366],"content":"Determines whether the user has access to the requested file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the user has access to the requested file.","pos":[0,61]}]},{"pos":[3379,4176],"content":"The CheckFileAccessForUser method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs). The virtual path is mapped to the physical file-system path before the check is made.       If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the CheckFileAccessForUser method checks for read access to the file. If any other verb is used, the CheckFileAccessForUser method checks for read/write permission to the file.       **Security Note** If the <xref:System.Web.Security.FileAuthorizationModule> module is not defined in the `httpModules` configuration section for the application, the <xref:System.Web.Security.FileAuthorizationModule> module always returns `true`.","needQuote":false,"needEscape":true,"nodes":[{"content":"The CheckFileAccessForUser method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs).","pos":[0,200]},{"content":"The virtual path is mapped to the physical file-system path before the check is made.","pos":[201,286]},{"content":"If the HTTP verb used to make the request is <ph id=\"ph1\">`GET`</ph>, <ph id=\"ph2\">`POST`</ph>, or <ph id=\"ph3\">`HEAD`</ph>, the CheckFileAccessForUser method checks for read access to the file.","pos":[293,433],"source":"       If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the CheckFileAccessForUser method checks for read access to the file."},{"content":"If any other verb is used, the CheckFileAccessForUser method checks for read/write permission to the file.","pos":[434,540]},{"content":"<bpt id=\"p1\">**</bpt>Security Note<ept id=\"p1\">**</ept> If the &lt;xref:System.Web.Security.FileAuthorizationModule&gt; module is not defined in the <ph id=\"ph1\">`httpModules`</ph> configuration section for the application, the &lt;xref:System.Web.Security.FileAuthorizationModule&gt; module always returns <ph id=\"ph2\">`true`</ph>.","pos":[547,793],"source":"**Security Note** If the <xref:System.Web.Security.FileAuthorizationModule> module is not defined in the `httpModules` configuration section for the application, the <xref:System.Web.Security.FileAuthorizationModule> module always returns `true`."}]},{"pos":[4375,4404],"content":"The virtual path to the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]},{"pos":[4466,4511],"content":"A Windows access token representing the user.","needQuote":true,"needEscape":true,"nodes":[{"content":"A Windows access token representing the user.","pos":[0,45]}]},{"pos":[4572,4611],"content":"The HTTP verb used to make the request.","needQuote":true,"needEscape":true,"nodes":[{"content":"The HTTP verb used to make the request.","pos":[0,39]}]},{"pos":[4670,5058],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current Windows user represented by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">token</ph><ept id=\"p2\">&lt;/code&gt;</ept> has access to the file using the specified HTTP verb or if the <bpt id=\"p3\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> module is not defined in the application's configuration file; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current Windows user represented by <code>token</code> has access to the file using the specified HTTP verb or if the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> module is not defined in the application's configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5256,5531],"content":"<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,89],"source":"<code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.IntPtr.Zero&gt;</ph>.","pos":[96,155],"source":"       -or-       <code>token</code> is <xref:System.IntPtr.Zero>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;verb&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[162,255],"source":"       -or-       <code>verb</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[5627,5721],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is not in the application directory structure of the Web application.","needQuote":true,"needEscape":true,"source":"<code>virtualPath</code> is not in the application directory structure of the Web application."},{"pos":[5830,5892],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not exist.","needQuote":true,"needEscape":true,"source":"The file specified by <code>virtualPath</code> does not exist."},{"pos":[6285,6405],"content":"Releases all resources, other than memory, used by the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref>."},{"pos":[6417,6480],"content":"This method is not intended to be called from application code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]}]},{"pos":[7107,7195],"content":"Initializes the <bpt id=\"p1\">&lt;xref href=\"System.Web.Security.FileAuthorizationModule\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Initializes the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> object."},{"pos":[7208,7458],"content":"This method is not intended to be called from application code.       The Init method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is not intended to be called from application code.       The Init method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.","pos":[0,248],"nodes":[{"content":"This method is not intended to be called from application code.","pos":[0,63]},{"content":"The Init method ensures that the &lt;xref:System.Web.Security.FileAuthorizationModule&gt; is included in the processing of the &lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt; event.","pos":[70,248],"source":"       The Init method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event."}]}]},{"pos":[7622,7691],"content":"The current <bpt id=\"p1\">&lt;xref href=\"System.Web.HttpApplication\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance.","needQuote":true,"needEscape":true,"source":"The current <xref href=\"System.Web.HttpApplication\"></xref> instance."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Security.FileAuthorizationModule\n  id: FileAuthorizationModule\n  children:\n  - System.Web.Security.FileAuthorizationModule.#ctor\n  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  - System.Web.Security.FileAuthorizationModule.Dispose\n  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  langs:\n  - csharp\n  name: FileAuthorizationModule\n  nameWithType: FileAuthorizationModule\n  fullName: System.Web.Security.FileAuthorizationModule\n  type: Class\n  summary: Verifies that the user has permission to access the file requested. This class cannot be inherited.\n  remarks: This module provides authorization services against file-system access-control lists (ACLs). When the `mode` attribute of the [authentication Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) configuration element is set to `Windows` so that the <xref:System.Web.Security.WindowsAuthenticationModule> is being used for the application, the FileAuthorizationModule module ensures that the requesting user is allowed read or write access to the resource, depending on the request verb, before executing the request. For more information, see the <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A> method.\n  syntax:\n    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Web.IHttpModule\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.Security.FileAuthorizationModule.#ctor\n  id: '#ctor'\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: FileAuthorizationModule()\n  nameWithType: FileAuthorizationModule.FileAuthorizationModule()\n  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Creates an instance of the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> class.\n  remarks: \"This constructor is not intended to be called from application code.  \\n  \\n ASP.NET calls this constructor to create an instance of the <xref:System.Web.Security.FileAuthorizationModule> class. After calling the constructor, it calls the <xref:System.Web.Security.FileAuthorizationModule.Init%2A> method to initialize the new <xref:System.Web.Security.FileAuthorizationModule> object.\"\n  syntax:\n    content: public FileAuthorizationModule ();\n    parameters: []\n  overload: System.Web.Security.FileAuthorizationModule.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: CheckFileAccessForUser(String,IntPtr,String)\n  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)\n  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Determines whether the user has access to the requested file.\n  remarks: \"The CheckFileAccessForUser method checks to see whether the current user, represented by a Windows access token, is granted access to the requested file in the file-system access-control lists (ACLs). The virtual path is mapped to the physical file-system path before the check is made.  \\n  \\n If the HTTP verb used to make the request is `GET`, `POST`, or `HEAD`, the CheckFileAccessForUser method checks for read access to the file. If any other verb is used, the CheckFileAccessForUser method checks for read/write permission to the file.  \\n  \\n **Security Note** If the <xref:System.Web.Security.FileAuthorizationModule> module is not defined in the `httpModules` configuration section for the application, the <xref:System.Web.Security.FileAuthorizationModule> module always returns `true`.\"\n  syntax:\n    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: token\n      type: System.IntPtr\n      description: A Windows access token representing the user.\n    - id: verb\n      type: System.String\n      description: The HTTP verb used to make the request.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current Windows user represented by <code>token</code> has access to the file using the specified HTTP verb or if the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> module is not defined in the application's configuration file; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>virtualPath</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>token</code> is <xref:System.IntPtr.Zero>.  \\n  \\n -or-  \\n  \\n <code>verb</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>virtualPath</code> is not in the application directory structure of the Web application.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file specified by <code>virtualPath</code> does not exist.\n  platform:\n  - net462\n- uid: System.Web.Security.FileAuthorizationModule.Dispose\n  id: Dispose\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: FileAuthorizationModule.Dispose()\n  fullName: System.Web.Security.FileAuthorizationModule.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Releases all resources, other than memory, used by the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref>.\n  remarks: This method is not intended to be called from application code.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Web.Security.FileAuthorizationModule.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  id: Init(System.Web.HttpApplication)\n  parent: System.Web.Security.FileAuthorizationModule\n  langs:\n  - csharp\n  name: Init(HttpApplication)\n  nameWithType: FileAuthorizationModule.Init(HttpApplication)\n  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Security\n  summary: Initializes the <xref href=\"System.Web.Security.FileAuthorizationModule\"></xref> object.\n  remarks: \"This method is not intended to be called from application code.  \\n  \\n The Init method ensures that the <xref:System.Web.Security.FileAuthorizationModule> is included in the processing of the <xref:System.Web.HttpApplication.AuthorizeRequest> event.\"\n  syntax:\n    content: public void Init (System.Web.HttpApplication app);\n    parameters:\n    - id: app\n      type: System.Web.HttpApplication\n      description: The current <xref href=\"System.Web.HttpApplication\"></xref> instance.\n  overload: System.Web.Security.FileAuthorizationModule.Init*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.IO.FileNotFoundException\n  isExternal: true\n  name: System.IO.FileNotFoundException\n- uid: System.Web.Security.FileAuthorizationModule.#ctor\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: FileAuthorizationModule()\n  nameWithType: FileAuthorizationModule.FileAuthorizationModule()\n  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()\n- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: CheckFileAccessForUser(String,IntPtr,String)\n  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)\n  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Web.Security.FileAuthorizationModule.Dispose\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Dispose()\n  nameWithType: FileAuthorizationModule.Dispose()\n  fullName: System.Web.Security.FileAuthorizationModule.Dispose()\n- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Init(HttpApplication)\n  nameWithType: FileAuthorizationModule.Init(HttpApplication)\n  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)\n- uid: System.Web.HttpApplication\n  parent: System.Web\n  isExternal: false\n  name: HttpApplication\n  nameWithType: HttpApplication\n  fullName: System.Web.HttpApplication\n- uid: System.Web.Security.FileAuthorizationModule.#ctor*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: FileAuthorizationModule\n  nameWithType: FileAuthorizationModule.FileAuthorizationModule\n- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: CheckFileAccessForUser\n  nameWithType: FileAuthorizationModule.CheckFileAccessForUser\n- uid: System.Web.Security.FileAuthorizationModule.Dispose*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Dispose\n  nameWithType: FileAuthorizationModule.Dispose\n- uid: System.Web.Security.FileAuthorizationModule.Init*\n  parent: System.Web.Security.FileAuthorizationModule\n  isExternal: false\n  name: Init\n  nameWithType: FileAuthorizationModule.Init\n"}