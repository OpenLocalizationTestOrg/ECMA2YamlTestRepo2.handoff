{"nodes":[{"pos":[2181,2370],"content":"Stores a set of four floating-point numbers that represent the location and size of a rectangle. For more advanced region functions, use a <xref href=\"System.Drawing.Region\"></xref> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Stores a set of four floating-point numbers that represent the location and size of a rectangle.","pos":[0,96]},{"content":"For more advanced region functions, use a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Region\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[97,189],"source":" For more advanced region functions, use a <xref href=\"System.Drawing.Region\"></xref> object."}]},{"pos":[2382,2449],"content":"A rectangle is defined by its width, height, and upper-left corner.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle is defined by its width, height, and upper-left corner.","pos":[0,67]}]},{"pos":[3011,3135],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified location and size.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.RectangleF\"></xref> class with the specified location and size."},{"pos":[4131,4240],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the upper-left corner of the rectangular region.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.PointF\"></xref> that represents the upper-left corner of the rectangular region."},{"pos":[4308,4415],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the width and height of the rectangular region.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.SizeF\"></xref> that represents the width and height of the rectangular region."},{"pos":[5009,5133],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified location and size.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.RectangleF\"></xref> class with the specified location and size."},{"pos":[6092,6151],"content":"The x-coordinate of the upper-left corner of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper-left corner of the rectangle.","pos":[0,59]}]},{"pos":[6209,6268],"content":"The y-coordinate of the upper-left corner of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper-left corner of the rectangle.","pos":[0,59]}]},{"pos":[6330,6357],"content":"The width of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of the rectangle.","pos":[0,27]}]},{"pos":[6420,6448],"content":"The height of the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of the rectangle.","pos":[0,28]}]},{"pos":[6826,7013],"content":"Gets the y-coordinate that is the sum of &lt;xref:System.Drawing.RectangleF.Y<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.RectangleF.Height<ept id=\"p1\">*</ept>&gt; of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets the y-coordinate that is the sum of <xref:System.Drawing.RectangleF.Y*> and <xref:System.Drawing.RectangleF.Height*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[7025,7164],"content":"The Bottom value represents the y-coordinate of the first point at the bottom edge of the rectangle that is not contained in the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Bottom value represents the y-coordinate of the first point at the bottom edge of the rectangle that is not contained in the rectangle.","pos":[0,139]}]},{"pos":[7274,7456],"content":"The y-coordinate that is the sum of &lt;xref:System.Drawing.RectangleF.Y<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.RectangleF.Height<ept id=\"p1\">*</ept>&gt; of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The y-coordinate that is the sum of <xref:System.Drawing.RectangleF.Y*> and <xref:System.Drawing.RectangleF.Height*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[7913,8029],"content":"Determines if the specified point is contained within this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Determines if the specified point is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[8184,8239],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.PointF\"></xref> to test."},{"pos":[8298,8593],"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the point represented by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">pt</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is contained within this <bpt id=\"p3\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> structure; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the point represented by the <code>pt</code> parameter is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[9072,9233],"content":"Determines if the rectangular region represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rect</ph><ept id=\"p1\">&lt;/code&gt;</ept> is entirely contained within this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Determines if the rectangular region represented by <code>rect</code> is entirely contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[9400,9459],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to test.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> to test."},{"pos":[9518,9851],"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the rectangular region represented by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">rect</ph><ept id=\"p2\">&lt;/code&gt;</ept> is entirely contained within the rectangular region represented by this <bpt id=\"p3\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the rectangular region represented by <code>rect</code> is entirely contained within the rectangular region represented by this <xref href=\"System.Drawing.RectangleF\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10343,10459],"content":"Determines if the specified point is contained within this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Determines if the specified point is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[10597,10635],"content":"The x-coordinate of the point to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the point to test.","pos":[0,38]}]},{"pos":[10693,10731],"content":"The y-coordinate of the point to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the point to test.","pos":[0,38]}]},{"pos":[10790,11085],"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the point defined by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">x</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">y</ph><ept id=\"p3\">&lt;/code&gt;</ept> is contained within this <bpt id=\"p4\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> structure; otherwise <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the point defined by <code>x</code> and <code>y</code> is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11458,11572],"content":"Represents an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with its members uninitialized.","needQuote":true,"needEscape":true,"source":"Represents an instance of the <xref href=\"System.Drawing.RectangleF\"></xref> class with its members uninitialized."},{"pos":[11584,11663],"content":"The members of the new <xref:System.Drawing.RectangleF> are left uninitialized.","needQuote":true,"needEscape":true,"nodes":[{"content":"The members of the new &lt;xref:System.Drawing.RectangleF&gt; are left uninitialized.","pos":[0,79],"source":"The members of the new <xref:System.Drawing.RectangleF> are left uninitialized."}]},{"pos":[11812,11824],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[12209,12379],"content":"Tests whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> with the same location and size of this <bpt id=\"p3\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Tests whether <code>obj</code> is a <xref href=\"System.Drawing.RectangleF\"></xref> with the same location and size of this <xref href=\"System.Drawing.RectangleF\"></xref>."},{"pos":[12520,12553],"content":"The <xref:System.Object> to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to test.","pos":[0,33],"source":"The <xref:System.Object> to test."}]},{"pos":[12612,13201],"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <bpt id=\"p3\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> and its <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_X\" name=\"X\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_Y\" name=\"Y\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>, <bpt id=\"p6\">&lt;xref uid=\"langword_csharp_Width\" name=\"Width\" href=\"\"&gt;</bpt><ept id=\"p6\">&lt;/xref&gt;</ept>, and <bpt id=\"p7\">&lt;xref uid=\"langword_csharp_Height\" name=\"Height\" href=\"\"&gt;</bpt><ept id=\"p7\">&lt;/xref&gt;</ept> properties are equal to the corresponding properties of this <bpt id=\"p8\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p8\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p9\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p9\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.RectangleF\"></xref> and its <xref uid=\"langword_csharp_X\" name=\"X\" href=\"\"></xref>, <xref uid=\"langword_csharp_Y\" name=\"Y\" href=\"\"></xref>, <xref uid=\"langword_csharp_Width\" name=\"Width\" href=\"\"></xref>, and <xref uid=\"langword_csharp_Height\" name=\"Height\" href=\"\"></xref> properties are equal to the corresponding properties of this <xref href=\"System.Drawing.RectangleF\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13789,13929],"content":"Creates a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with upper-left corner and lower-right corner at the specified locations.","needQuote":true,"needEscape":true,"source":"Creates a <xref href=\"System.Drawing.RectangleF\"></xref> structure with upper-left corner and lower-right corner at the specified locations."},{"pos":[13941,14050],"content":"This method creates a <xref:System.Drawing.RectangleF> with the specified upper-left and lower-right corners.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method creates a &lt;xref:System.Drawing.RectangleF&gt; with the specified upper-left and lower-right corners.","pos":[0,109],"source":"This method creates a <xref:System.Drawing.RectangleF> with the specified upper-left and lower-right corners."}]},{"pos":[14251,14319],"content":"The x-coordinate of the upper-left corner of the rectangular region.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper-left corner of the rectangular region.","pos":[0,68]}]},{"pos":[14379,14447],"content":"The y-coordinate of the upper-left corner of the rectangular region.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper-left corner of the rectangular region.","pos":[0,68]}]},{"pos":[14509,14578],"content":"The x-coordinate of the lower-right corner of the rectangular region.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the lower-right corner of the rectangular region.","pos":[0,69]}]},{"pos":[14641,14710],"content":"The y-coordinate of the lower-right corner of the rectangular region.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the lower-right corner of the rectangular region.","pos":[0,69]}]},{"pos":[14780,14860],"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that this method creates.","needQuote":true,"needEscape":true,"source":"The new <xref href=\"System.Drawing.RectangleF\"></xref> that this method creates."},{"pos":[15270,15494],"content":"Gets the hash code for this <xref href=\"System.Drawing.RectangleF\"></xref> structure. For information about the use of hash codes, see <xref uid=\"langword_csharp_Object.GetHashCode\" name=\"Object.GetHashCode\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,85],"source":"Gets the hash code for this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"For information about the use of hash codes, see <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Object.GetHashCode\" name=\"Object.GetHashCode\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[86,224],"source":" For information about the use of hash codes, see <xref uid=\"langword_csharp_Object.GetHashCode\" name=\"Object.GetHashCode\" href=\"\"></xref>."}]},{"pos":[15629,15699],"content":"The hash code for this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The hash code for this <xref href=\"System.Drawing.RectangleF\"></xref>."},{"pos":[16083,16172],"content":"Gets or sets the height of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[16287,16381],"content":"The height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The height of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,76],"source":"The height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"The default is 0.","pos":[77,94]}]},{"pos":[16828,16913],"content":"Enlarges this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by the specified amount.","needQuote":true,"needEscape":true,"source":"Enlarges this <xref href=\"System.Drawing.RectangleF\"></xref> by the specified amount."},{"pos":[16925,17285],"content":"This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.","pos":[0,360],"nodes":[{"content":"This method enlarges this rectangle, not a copy of it.","pos":[0,54]},{"content":"The rectangle is enlarged in both directions along an axis.","pos":[55,114]},{"content":"For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.","pos":[115,360]}]}]},{"pos":[18394,18431],"content":"The amount to inflate this rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to inflate this rectangle.","pos":[0,37]}]},{"pos":[18917,19012],"content":"Enlarges this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure by the specified amount.","needQuote":true,"needEscape":true,"source":"Enlarges this <xref href=\"System.Drawing.RectangleF\"></xref> structure by the specified amount."},{"pos":[19025,19508],"content":"This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.       If either `x` or `y` is negative, the <xref:System.Drawing.RectangleF> is deflated in the corresponding direction.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method enlarges this rectangle, not a copy of it.","pos":[0,54]},{"content":"The rectangle is enlarged in both directions along an axis.","pos":[55,114]},{"content":"For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.","pos":[115,360]},{"content":"If either <ph id=\"ph1\">`x`</ph> or <ph id=\"ph2\">`y`</ph> is negative, the &lt;xref:System.Drawing.RectangleF&gt; is deflated in the corresponding direction.","pos":[367,481],"source":"       If either `x` or `y` is negative, the <xref:System.Drawing.RectangleF> is deflated in the corresponding direction."}]},{"pos":[19646,19743],"content":"The amount to inflate this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure horizontally.","needQuote":true,"needEscape":true,"source":"The amount to inflate this <xref href=\"System.Drawing.RectangleF\"></xref> structure horizontally."},{"pos":[19801,19896],"content":"The amount to inflate this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure vertically.","needQuote":true,"needEscape":true,"source":"The amount to inflate this <xref href=\"System.Drawing.RectangleF\"></xref> structure vertically."},{"pos":[20467,20670],"content":"Creates and returns an enlarged copy of the specified <xref href=\"System.Drawing.RectangleF\"></xref> structure. The copy is enlarged by the specified amount and the original rectangle remains unmodified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an enlarged copy of the specified <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,111],"source":"Creates and returns an enlarged copy of the specified <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"The copy is enlarged by the specified amount and the original rectangle remains unmodified.","pos":[112,203]}]},{"pos":[20682,21078],"content":"This method makes a copy of `rect`, enlarges the copy, and then returns the enlarged copy. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method makes a copy of <ph id=\"ph1\">`rect`</ph>, enlarges the copy, and then returns the enlarged copy.","pos":[0,90],"source":"This method makes a copy of `rect`, enlarges the copy, and then returns the enlarged copy."},{"content":"The rectangle is enlarged in both directions along an axis.","pos":[91,150]},{"content":"For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.","pos":[151,396]}]},{"pos":[21290,21386],"content":"The <xref href=\"System.Drawing.RectangleF\"></xref> to be copied. This rectangle is not modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be copied.","pos":[0,64],"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> to be copied."},{"content":"This rectangle is not modified.","pos":[65,96]}]},{"pos":[21444,21505],"content":"The amount to enlarge the copy of the rectangle horizontally.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to enlarge the copy of the rectangle horizontally.","pos":[0,61]}]},{"pos":[21563,21622],"content":"The amount to enlarge the copy of the rectangle vertically.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to enlarge the copy of the rectangle vertically.","pos":[0,59]}]},{"pos":[21692,21752],"content":"The enlarged <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The enlarged <xref href=\"System.Drawing.RectangleF\"></xref>."},{"pos":[22235,22413],"content":"Replaces this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure with the intersection of itself and the specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Replaces this <xref href=\"System.Drawing.RectangleF\"></xref> structure with the intersection of itself and the specified <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[22581,22608],"content":"The rectangle to intersect.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rectangle to intersect.","pos":[0,27]}]},{"pos":[23178,23395],"content":"Returns a <xref href=\"System.Drawing.RectangleF\"></xref> structure that represents the intersection of two rectangles. If there is no intersection, and empty <xref href=\"System.Drawing.RectangleF\"></xref> is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that represents the intersection of two rectangles.","pos":[0,118],"source":"Returns a <xref href=\"System.Drawing.RectangleF\"></xref> structure that represents the intersection of two rectangles."},{"content":"If there is no intersection, and empty <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is returned.","pos":[119,217],"source":" If there is no intersection, and empty <xref href=\"System.Drawing.RectangleF\"></xref> is returned."}]},{"pos":[24685,24710],"content":"A rectangle to intersect.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle to intersect.","pos":[0,25]}]},{"pos":[24780,24805],"content":"A rectangle to intersect.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle to intersect.","pos":[0,25]}]},{"pos":[24875,25021],"content":"A third <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure the size of which represents the overlapped area of the two specified rectangles.","needQuote":true,"needEscape":true,"source":"A third <xref href=\"System.Drawing.RectangleF\"></xref> structure the size of which represents the overlapped area of the two specified rectangles."},{"pos":[25531,25594],"content":"Determines if this rectangle intersects with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rect</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Determines if this rectangle intersects with <code>rect</code>."},{"pos":[25767,25789],"content":"The rectangle to test.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rectangle to test.","pos":[0,22]}]},{"pos":[25848,25958],"content":"This method returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is any intersection.","needQuote":true,"needEscape":true,"source":"This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is any intersection."},{"pos":[26350,26536],"content":"Tests whether the &lt;xref:System.Drawing.RectangleF.Width<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.Drawing.RectangleF.Height<ept id=\"p1\">*</ept>&gt; property of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has a value of zero.","needQuote":true,"needEscape":true,"source":"Tests whether the <xref:System.Drawing.RectangleF.Width*> or <xref:System.Drawing.RectangleF.Height*> property of this <xref href=\"System.Drawing.RectangleF\"></xref> has a value of zero."},{"pos":[26647,26980],"content":"This property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Drawing.RectangleF.Width<bpt id=\"p2\">*</bpt>&gt; or &lt;xref:System.Drawing.RectangleF.Height<ept id=\"p2\">*</ept>&gt; property of this <bpt id=\"p3\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> has a value of zero; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This property returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Drawing.RectangleF.Width*> or <xref:System.Drawing.RectangleF.Height*> property of this <xref href=\"System.Drawing.RectangleF\"></xref> has a value of zero; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[27350,27454],"content":"Gets the x-coordinate of the left edge of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets the x-coordinate of the left edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[27562,27661],"content":"The x-coordinate of the left edge of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The x-coordinate of the left edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[28048,28167],"content":"Gets or sets the coordinates of the upper-left corner of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the coordinates of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[28308,28456],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.PointF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the upper-left corner of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.PointF\"></xref> that represents the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[28905,28968],"content":"Adjusts the location of this rectangle by the specified amount.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adjusts the location of this rectangle by the specified amount.","pos":[0,63]}]},{"pos":[29123,29157],"content":"The amount to offset the location.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to offset the location.","pos":[0,34]}]},{"pos":[29637,29700],"content":"Adjusts the location of this rectangle by the specified amount.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adjusts the location of this rectangle by the specified amount.","pos":[0,63]}]},{"pos":[29836,29883],"content":"The amount to offset the location horizontally.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to offset the location horizontally.","pos":[0,47]}]},{"pos":[29941,29986],"content":"The amount to offset the location vertically.","needQuote":true,"needEscape":true,"nodes":[{"content":"The amount to offset the location vertically.","pos":[0,45]}]},{"pos":[30565,30670],"content":"Tests whether two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures have equal location and size.","needQuote":true,"needEscape":true,"source":"Tests whether two <xref href=\"System.Drawing.RectangleF\"></xref> structures have equal location and size."},{"pos":[31677,31783],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is to the left of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the left of the equality operator."},{"pos":[31857,31964],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is to the right of the equality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the right of the equality operator."},{"pos":[32023,32367],"content":"This operator returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two specified <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structures have equal &lt;xref:System.Drawing.RectangleF.X<bpt id=\"p3\">*</bpt>&gt;, &lt;xref:System.Drawing.RectangleF.Y<ept id=\"p3\">*</ept>&gt;, &lt;xref:System.Drawing.RectangleF.Width<bpt id=\"p4\">*</bpt>&gt;, and &lt;xref:System.Drawing.RectangleF.Height<ept id=\"p4\">*</ept>&gt; properties.","needQuote":true,"needEscape":true,"source":"This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two specified <xref href=\"System.Drawing.RectangleF\"></xref> structures have equal <xref:System.Drawing.RectangleF.X*>, <xref:System.Drawing.RectangleF.Y*>, <xref:System.Drawing.RectangleF.Width*>, and <xref:System.Drawing.RectangleF.Height*> properties."},{"pos":[33039,33051],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33121,33133],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33727,33830],"content":"Tests whether two <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structures differ in location or size.","needQuote":true,"needEscape":true,"source":"Tests whether two <xref href=\"System.Drawing.RectangleF\"></xref> structures differ in location or size."},{"pos":[34042,34150],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is to the left of the inequality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the left of the inequality operator."},{"pos":[34224,34333],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that is to the right of the inequality operator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the right of the inequality operator."},{"pos":[34392,34814],"content":"This operator returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if any of the &lt;xref:System.Drawing.RectangleF.X<bpt id=\"p2\">*</bpt>&gt; , &lt;xref:System.Drawing.RectangleF.Y<ept id=\"p2\">*</ept>&gt;, &lt;xref:System.Drawing.RectangleF.Width<bpt id=\"p3\">*</bpt>&gt;, or &lt;xref:System.Drawing.RectangleF.Height<ept id=\"p3\">*</ept>&gt; properties of the two <bpt id=\"p4\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> structures are unequal; otherwise <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if any of the <xref:System.Drawing.RectangleF.X*> , <xref:System.Drawing.RectangleF.Y*>, <xref:System.Drawing.RectangleF.Width*>, or <xref:System.Drawing.RectangleF.Height*> properties of the two <xref href=\"System.Drawing.Rectangle\"></xref> structures are unequal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[35195,35381],"content":"Gets the x-coordinate that is the sum of &lt;xref:System.Drawing.RectangleF.X<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.RectangleF.Width<ept id=\"p1\">*</ept>&gt; of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets the x-coordinate that is the sum of <xref:System.Drawing.RectangleF.X*> and <xref:System.Drawing.RectangleF.Width*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[35393,35530],"content":"The Right value represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Right value represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle.","pos":[0,137]}]},{"pos":[35639,35820],"content":"The x-coordinate that is the sum of &lt;xref:System.Drawing.RectangleF.X<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.RectangleF.Width<ept id=\"p1\">*</ept>&gt; of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The x-coordinate that is the sum of <xref:System.Drawing.RectangleF.X*> and <xref:System.Drawing.RectangleF.Width*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[36188,36265],"content":"Gets or sets the size of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the size of this <xref href=\"System.Drawing.RectangleF\"></xref>."},{"pos":[36400,36546],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the width and height of this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.SizeF\"></xref> that represents the width and height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[36908,37011],"content":"Gets the y-coordinate of the top edge of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets the y-coordinate of the top edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[37118,37216],"content":"The y-coordinate of the top edge of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The y-coordinate of the top edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[37606,37815],"content":"Converts the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Size\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> of this <bpt id=\"p3\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> to a human-readable string.","needQuote":true,"needEscape":true,"source":"Converts the <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> and <xref href=\"System.Drawing.Size\"></xref> of this <xref href=\"System.Drawing.RectangleF\"></xref> to a human-readable string."},{"pos":[37951,38122],"content":"A string that contains the position, width, and height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. For example, \"{X=20, Y=20, Width=100, Height=50}\".","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the position, width, and height of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,120],"source":"A string that contains the position, width, and height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"For example, \"{X=20, Y=20, Width=100, Height=50}\".","pos":[121,171]}]},{"pos":[38671,38775],"content":"Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.","pos":[0,104]}]},{"pos":[38787,39143],"content":"When one of the two rectangles is empty, meaning all of its values are zero, the <xref:System.Drawing.Rectangle.Union%2A> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).","needQuote":true,"needEscape":true,"nodes":[{"content":"When one of the two rectangles is empty, meaning all of its values are zero, the <xref:System.Drawing.Rectangle.Union%2A> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).","pos":[0,356],"nodes":[{"content":"When one of the two rectangles is empty, meaning all of its values are zero, the &lt;xref:System.Drawing.Rectangle.Union%2A&gt; method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle.","pos":[0,234],"source":"When one of the two rectangles is empty, meaning all of its values are zero, the <xref:System.Drawing.Rectangle.Union%2A> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle."},{"content":"For example, if you have two rectangles A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).","pos":[235,356]}]}]},{"pos":[40396,40417],"content":"A rectangle to union.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle to union.","pos":[0,21]}]},{"pos":[40487,40508],"content":"A rectangle to union.","needQuote":true,"needEscape":true,"nodes":[{"content":"A rectangle to union.","pos":[0,21]}]},{"pos":[40578,40704],"content":"A third <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains both of the two rectangles that form the union.","needQuote":true,"needEscape":true,"source":"A third <xref href=\"System.Drawing.RectangleF\"></xref> structure that contains both of the two rectangles that form the union."},{"pos":[41077,41165],"content":"Gets or sets the width of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the width of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[41279,41372],"content":"The width of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The width of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,75],"source":"The width of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"The default is 0.","pos":[76,93]}]},{"pos":[41725,41845],"content":"Gets or sets the x-coordinate of the upper-left corner of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[41955,42080],"content":"The x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The x-coordinate of the upper-left corner of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,107],"source":"The x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"The default is 0.","pos":[108,125]}]},{"pos":[42429,42549],"content":"Gets or sets the y-coordinate of the upper-left corner of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"Gets or sets the y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"pos":[42659,42784],"content":"The y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The y-coordinate of the upper-left corner of this <bpt id=\"p1\">&lt;xref href=\"System.Drawing.RectangleF\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,107],"source":"The y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure."},{"content":"The default is 0.","pos":[108,125]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.RectangleF\n  id: RectangleF\n  children:\n  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\n  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\n  - System.Drawing.RectangleF.Bottom\n  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Contains(System.Single,System.Single)\n  - System.Drawing.RectangleF.Empty\n  - System.Drawing.RectangleF.Equals(System.Object)\n  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  - System.Drawing.RectangleF.GetHashCode\n  - System.Drawing.RectangleF.Height\n  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)\n  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.IsEmpty\n  - System.Drawing.RectangleF.Left\n  - System.Drawing.RectangleF.Location\n  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  - System.Drawing.RectangleF.Offset(System.Single,System.Single)\n  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)\n  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Right\n  - System.Drawing.RectangleF.Size\n  - System.Drawing.RectangleF.Top\n  - System.Drawing.RectangleF.ToString\n  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  - System.Drawing.RectangleF.Width\n  - System.Drawing.RectangleF.X\n  - System.Drawing.RectangleF.Y\n  langs:\n  - csharp\n  name: RectangleF\n  nameWithType: RectangleF\n  fullName: System.Drawing.RectangleF\n  type: Struct\n  summary: Stores a set of four floating-point numbers that represent the location and size of a rectangle. For more advanced region functions, use a <xref href=\"System.Drawing.Region\"></xref> object.\n  remarks: A rectangle is defined by its width, height, and upper-left corner.\n  syntax:\n    content: public struct RectangleF\n  inheritance:\n  - System.ValueType\n  implements: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\n  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: RectangleF(PointF,SizeF)\n  nameWithType: RectangleF.RectangleF(PointF,SizeF)\n  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.RectangleF\"></xref> class with the specified location and size.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, RectangleF, and <xref:System.Drawing.RectangleF.op_Equality%2A> members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/5d8998f0-9d41-440a-a9e3-_1.cs)]\\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/5d8998f0-9d41-440a-a9e3-_1.cpp)]\\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/5d8998f0-9d41-440a-a9e3-_1.vb)]\"\n  syntax:\n    content: public RectangleF (System.Drawing.PointF location, System.Drawing.SizeF size);\n    parameters:\n    - id: location\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> that represents the upper-left corner of the rectangular region.\n    - id: size\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> that represents the width and height of the rectangular region.\n  overload: System.Drawing.RectangleF.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\n  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: RectangleF(Single,Single,Single,Single)\n  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)\n  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.RectangleF\"></xref> class with the specified location and size.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the RectangleF, <xref:System.Drawing.Rectangle.Round%2A> and <xref:System.Drawing.Rectangle.Truncate%2A> members. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/03a5ad52-9050-4211-8a75-_1.cs)]\\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/03a5ad52-9050-4211-8a75-_1.cpp)]\\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/03a5ad52-9050-4211-8a75-_1.vb)]\"\n  syntax:\n    content: public RectangleF (float x, float y, float width, float height);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The x-coordinate of the upper-left corner of the rectangle.\n    - id: y\n      type: System.Single\n      description: The y-coordinate of the upper-left corner of the rectangle.\n    - id: width\n      type: System.Single\n      description: The width of the rectangle.\n    - id: height\n      type: System.Single\n      description: The height of the rectangle.\n  overload: System.Drawing.RectangleF.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Bottom\n  id: Bottom\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Bottom\n  nameWithType: RectangleF.Bottom\n  fullName: System.Drawing.RectangleF.Bottom\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the y-coordinate that is the sum of <xref:System.Drawing.RectangleF.Y*> and <xref:System.Drawing.RectangleF.Height*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  remarks: The Bottom value represents the y-coordinate of the first point at the bottom edge of the rectangle that is not contained in the rectangle.\n  syntax:\n    content: public float Bottom { get; }\n    return:\n      type: System.Single\n      description: The y-coordinate that is the sum of <xref:System.Drawing.RectangleF.Y*> and <xref:System.Drawing.RectangleF.Height*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  overload: System.Drawing.RectangleF.Bottom*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  id: Contains(System.Drawing.PointF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Contains(PointF)\n  nameWithType: RectangleF.Contains(PointF)\n  fullName: System.Drawing.RectangleF.Contains(PointF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if the specified point is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public bool Contains (System.Drawing.PointF pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.PointF\n      description: The <xref href=\"System.Drawing.PointF\"></xref> to test.\n    return:\n      type: System.Boolean\n      description: This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the point represented by the <code>pt</code> parameter is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.RectangleF.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  id: Contains(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Contains(RectangleF)\n  nameWithType: RectangleF.Contains(RectangleF)\n  fullName: System.Drawing.RectangleF.Contains(RectangleF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if the rectangular region represented by <code>rect</code> is entirely contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public bool Contains (System.Drawing.RectangleF rect);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> to test.\n    return:\n      type: System.Boolean\n      description: This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the rectangular region represented by <code>rect</code> is entirely contained within the rectangular region represented by this <xref href=\"System.Drawing.RectangleF\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.RectangleF.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)\n  id: Contains(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Contains(Single,Single)\n  nameWithType: RectangleF.Contains(Single,Single)\n  fullName: System.Drawing.RectangleF.Contains(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if the specified point is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public bool Contains (float x, float y);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The x-coordinate of the point to test.\n    - id: y\n      type: System.Single\n      description: The y-coordinate of the point to test.\n    return:\n      type: System.Boolean\n      description: This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the point defined by <code>x</code> and <code>y</code> is contained within this <xref href=\"System.Drawing.RectangleF\"></xref> structure; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.RectangleF.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Empty\n  id: Empty\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: RectangleF.Empty\n  fullName: System.Drawing.RectangleF.Empty\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Represents an instance of the <xref href=\"System.Drawing.RectangleF\"></xref> class with its members uninitialized.\n  remarks: The members of the new <xref:System.Drawing.RectangleF> are left uninitialized.\n  syntax:\n    content: public static readonly System.Drawing.RectangleF Empty;\n    return:\n      type: System.Drawing.RectangleF\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: RectangleF.Equals(Object)\n  fullName: System.Drawing.RectangleF.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether <code>obj</code> is a <xref href=\"System.Drawing.RectangleF\"></xref> with the same location and size of this <xref href=\"System.Drawing.RectangleF\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref:System.Object> to test.\n    return:\n      type: System.Boolean\n      description: This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if <code>obj</code> is a <xref href=\"System.Drawing.RectangleF\"></xref> and its <xref uid=\"langword_csharp_X\" name=\"X\" href=\"\"></xref>, <xref uid=\"langword_csharp_Y\" name=\"Y\" href=\"\"></xref>, <xref uid=\"langword_csharp_Width\" name=\"Width\" href=\"\"></xref>, and <xref uid=\"langword_csharp_Height\" name=\"Height\" href=\"\"></xref> properties are equal to the corresponding properties of this <xref href=\"System.Drawing.RectangleF\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.RectangleF.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: FromLTRB(Single,Single,Single,Single)\n  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)\n  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates a <xref href=\"System.Drawing.RectangleF\"></xref> structure with upper-left corner and lower-right corner at the specified locations.\n  remarks: This method creates a <xref:System.Drawing.RectangleF> with the specified upper-left and lower-right corners.\n  syntax:\n    content: public static System.Drawing.RectangleF FromLTRB (float left, float top, float right, float bottom);\n    parameters:\n    - id: left\n      type: System.Single\n      description: The x-coordinate of the upper-left corner of the rectangular region.\n    - id: top\n      type: System.Single\n      description: The y-coordinate of the upper-left corner of the rectangular region.\n    - id: right\n      type: System.Single\n      description: The x-coordinate of the lower-right corner of the rectangular region.\n    - id: bottom\n      type: System.Single\n      description: The y-coordinate of the lower-right corner of the rectangular region.\n    return:\n      type: System.Drawing.RectangleF\n      description: The new <xref href=\"System.Drawing.RectangleF\"></xref> that this method creates.\n  overload: System.Drawing.RectangleF.FromLTRB*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: RectangleF.GetHashCode()\n  fullName: System.Drawing.RectangleF.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the hash code for this <xref href=\"System.Drawing.RectangleF\"></xref> structure. For information about the use of hash codes, see <xref uid=\"langword_csharp_Object.GetHashCode\" name=\"Object.GetHashCode\" href=\"\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Drawing.RectangleF\"></xref>.\n  overload: System.Drawing.RectangleF.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Height\n  id: Height\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Height\n  nameWithType: RectangleF.Height\n  fullName: System.Drawing.RectangleF.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public float Height { get; set; }\n    return:\n      type: System.Single\n      description: The height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.\n  overload: System.Drawing.RectangleF.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  id: Inflate(System.Drawing.SizeF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Inflate(SizeF)\n  nameWithType: RectangleF.Inflate(SizeF)\n  fullName: System.Drawing.RectangleF.Inflate(SizeF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Enlarges this <xref href=\"System.Drawing.RectangleF\"></xref> by the specified amount.\n  remarks: This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.\n  example:\n  - \"This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an OnPaint event object. The code creates a <xref:System.Drawing.RectangleF> and draws it to the screen in black. Notice that it has to be converted to a <xref:System.Drawing.Rectangle> for drawing purposes. Then the code enlarges the <xref:System.Drawing.RectangleF>, again converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in red. Notice that the original (black) rectangle is expanded in both directions along the x-axis by 100 points.  \\n  \\n [!code-vb[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.rectang_5_1.vb)]\\n [!code-cs[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/csharp/m-system.drawing.rectang_5_1.cs)]\\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/cpp/m-system.drawing.rectang_5_1.cpp)]\"\n  syntax:\n    content: public void Inflate (System.Drawing.SizeF size);\n    parameters:\n    - id: size\n      type: System.Drawing.SizeF\n      description: The amount to inflate this rectangle.\n  overload: System.Drawing.RectangleF.Inflate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)\n  id: Inflate(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Inflate(Single,Single)\n  nameWithType: RectangleF.Inflate(Single,Single)\n  fullName: System.Drawing.RectangleF.Inflate(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Enlarges this <xref href=\"System.Drawing.RectangleF\"></xref> structure by the specified amount.\n  remarks: \"This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.  \\n  \\n If either `x` or `y` is negative, the <xref:System.Drawing.RectangleF> is deflated in the corresponding direction.\"\n  syntax:\n    content: public void Inflate (float x, float y);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The amount to inflate this <xref href=\"System.Drawing.RectangleF\"></xref> structure horizontally.\n    - id: y\n      type: System.Single\n      description: The amount to inflate this <xref href=\"System.Drawing.RectangleF\"></xref> structure vertically.\n  overload: System.Drawing.RectangleF.Inflate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Inflate(RectangleF,Single,Single)\n  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)\n  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates and returns an enlarged copy of the specified <xref href=\"System.Drawing.RectangleF\"></xref> structure. The copy is enlarged by the specified amount and the original rectangle remains unmodified.\n  remarks: This method makes a copy of `rect`, enlarges the copy, and then returns the enlarged copy. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.\n  syntax:\n    content: public static System.Drawing.RectangleF Inflate (System.Drawing.RectangleF rect, float x, float y);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> to be copied. This rectangle is not modified.\n    - id: x\n      type: System.Single\n      description: The amount to enlarge the copy of the rectangle horizontally.\n    - id: y\n      type: System.Single\n      description: The amount to enlarge the copy of the rectangle vertically.\n    return:\n      type: System.Drawing.RectangleF\n      description: The enlarged <xref href=\"System.Drawing.RectangleF\"></xref>.\n  overload: System.Drawing.RectangleF.Inflate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  id: Intersect(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Intersect(RectangleF)\n  nameWithType: RectangleF.Intersect(RectangleF)\n  fullName: System.Drawing.RectangleF.Intersect(RectangleF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Replaces this <xref href=\"System.Drawing.RectangleF\"></xref> structure with the intersection of itself and the specified <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public void Intersect (System.Drawing.RectangleF rect);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: The rectangle to intersect.\n  overload: System.Drawing.RectangleF.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Intersect(RectangleF,RectangleF)\n  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns a <xref href=\"System.Drawing.RectangleF\"></xref> structure that represents the intersection of two rectangles. If there is no intersection, and empty <xref href=\"System.Drawing.RectangleF\"></xref> is returned.\n  remarks: ''\n  example:\n  - \"This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> objects and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> objects for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the <xref:System.Drawing.RectangleF.Intersect%2A> method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the area of overlap of the other two rectangles:  \\n  \\n [!code-vb[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/visualbasic/47bd303e-f7ea-48d0-ae6d-_1.vb)]\\n [!code-cs[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/csharp/47bd303e-f7ea-48d0-ae6d-_1.cs)]\\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/cpp/47bd303e-f7ea-48d0-ae6d-_1.cpp)]\"\n  syntax:\n    content: public static System.Drawing.RectangleF Intersect (System.Drawing.RectangleF a, System.Drawing.RectangleF b);\n    parameters:\n    - id: a\n      type: System.Drawing.RectangleF\n      description: A rectangle to intersect.\n    - id: b\n      type: System.Drawing.RectangleF\n      description: A rectangle to intersect.\n    return:\n      type: System.Drawing.RectangleF\n      description: A third <xref href=\"System.Drawing.RectangleF\"></xref> structure the size of which represents the overlapped area of the two specified rectangles.\n  overload: System.Drawing.RectangleF.Intersect*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  id: IntersectsWith(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: IntersectsWith(RectangleF)\n  nameWithType: RectangleF.IntersectsWith(RectangleF)\n  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines if this rectangle intersects with <code>rect</code>.\n  syntax:\n    content: public bool IntersectsWith (System.Drawing.RectangleF rect);\n    parameters:\n    - id: rect\n      type: System.Drawing.RectangleF\n      description: The rectangle to test.\n    return:\n      type: System.Boolean\n      description: This method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is any intersection.\n  overload: System.Drawing.RectangleF.IntersectsWith*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.IsEmpty\n  id: IsEmpty\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: RectangleF.IsEmpty\n  fullName: System.Drawing.RectangleF.IsEmpty\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether the <xref:System.Drawing.RectangleF.Width*> or <xref:System.Drawing.RectangleF.Height*> property of this <xref href=\"System.Drawing.RectangleF\"></xref> has a value of zero.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: This property returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Drawing.RectangleF.Width*> or <xref:System.Drawing.RectangleF.Height*> property of this <xref href=\"System.Drawing.RectangleF\"></xref> has a value of zero; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.RectangleF.IsEmpty*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Left\n  id: Left\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Left\n  nameWithType: RectangleF.Left\n  fullName: System.Drawing.RectangleF.Left\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the x-coordinate of the left edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public float Left { get; }\n    return:\n      type: System.Single\n      description: The x-coordinate of the left edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  overload: System.Drawing.RectangleF.Left*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Location\n  id: Location\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Location\n  nameWithType: RectangleF.Location\n  fullName: System.Drawing.RectangleF.Location\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the coordinates of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public System.Drawing.PointF Location { get; set; }\n    return:\n      type: System.Drawing.PointF\n      description: A <xref href=\"System.Drawing.PointF\"></xref> that represents the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  overload: System.Drawing.RectangleF.Location*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  id: Offset(System.Drawing.PointF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Offset(PointF)\n  nameWithType: RectangleF.Offset(PointF)\n  fullName: System.Drawing.RectangleF.Offset(PointF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adjusts the location of this rectangle by the specified amount.\n  syntax:\n    content: public void Offset (System.Drawing.PointF pos);\n    parameters:\n    - id: pos\n      type: System.Drawing.PointF\n      description: The amount to offset the location.\n  overload: System.Drawing.RectangleF.Offset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)\n  id: Offset(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Offset(Single,Single)\n  nameWithType: RectangleF.Offset(Single,Single)\n  fullName: System.Drawing.RectangleF.Offset(Single,Single)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Adjusts the location of this rectangle by the specified amount.\n  syntax:\n    content: public void Offset (float x, float y);\n    parameters:\n    - id: x\n      type: System.Single\n      description: The amount to offset the location horizontally.\n    - id: y\n      type: System.Single\n      description: The amount to offset the location vertically.\n  overload: System.Drawing.RectangleF.Offset*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: op_Equality(RectangleF,RectangleF)\n  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether two <xref href=\"System.Drawing.RectangleF\"></xref> structures have equal location and size.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, <xref:System.Drawing.RectangleF.%23ctor%2A>and Equality members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/e6058e88-3cbe-4600-981e-_1.cs)]\\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/e6058e88-3cbe-4600-981e-_1.cpp)]\\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/e6058e88-3cbe-4600-981e-_1.vb)]\"\n  syntax:\n    content: public static bool op_Equality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);\n    parameters:\n    - id: left\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the left of the equality operator.\n    - id: right\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the right of the equality operator.\n    return:\n      type: System.Boolean\n      description: This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two specified <xref href=\"System.Drawing.RectangleF\"></xref> structures have equal <xref:System.Drawing.RectangleF.X*>, <xref:System.Drawing.RectangleF.Y*>, <xref:System.Drawing.RectangleF.Width*>, and <xref:System.Drawing.RectangleF.Height*> properties.\n  overload: System.Drawing.RectangleF.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)\n  id: op_Implicit(System.Drawing.Rectangle)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: op_Implicit(Rectangle)\n  nameWithType: RectangleF.op_Implicit(Rectangle)\n  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  syntax:\n    content: public static System.Drawing.RectangleF op_Implicit (System.Drawing.Rectangle r);\n    parameters:\n    - id: r\n      type: System.Drawing.Rectangle\n      description: To be added.\n    return:\n      type: System.Drawing.RectangleF\n      description: To be added.\n  overload: System.Drawing.RectangleF.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: op_Inequality(RectangleF,RectangleF)\n  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)\n  type: Operator\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Tests whether two <xref href=\"System.Drawing.RectangleF\"></xref> structures differ in location or size.\n  syntax:\n    content: public static bool op_Inequality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);\n    parameters:\n    - id: left\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the left of the inequality operator.\n    - id: right\n      type: System.Drawing.RectangleF\n      description: The <xref href=\"System.Drawing.RectangleF\"></xref> structure that is to the right of the inequality operator.\n    return:\n      type: System.Boolean\n      description: This operator returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if any of the <xref:System.Drawing.RectangleF.X*> , <xref:System.Drawing.RectangleF.Y*>, <xref:System.Drawing.RectangleF.Width*>, or <xref:System.Drawing.RectangleF.Height*> properties of the two <xref href=\"System.Drawing.Rectangle\"></xref> structures are unequal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Drawing.RectangleF.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Right\n  id: Right\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Right\n  nameWithType: RectangleF.Right\n  fullName: System.Drawing.RectangleF.Right\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the x-coordinate that is the sum of <xref:System.Drawing.RectangleF.X*> and <xref:System.Drawing.RectangleF.Width*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  remarks: The Right value represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle.\n  syntax:\n    content: public float Right { get; }\n    return:\n      type: System.Single\n      description: The x-coordinate that is the sum of <xref:System.Drawing.RectangleF.X*> and <xref:System.Drawing.RectangleF.Width*> of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  overload: System.Drawing.RectangleF.Right*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Size\n  id: Size\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Size\n  nameWithType: RectangleF.Size\n  fullName: System.Drawing.RectangleF.Size\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the size of this <xref href=\"System.Drawing.RectangleF\"></xref>.\n  syntax:\n    content: public System.Drawing.SizeF Size { get; set; }\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> that represents the width and height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  overload: System.Drawing.RectangleF.Size*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Top\n  id: Top\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Top\n  nameWithType: RectangleF.Top\n  fullName: System.Drawing.RectangleF.Top\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the y-coordinate of the top edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public float Top { get; }\n    return:\n      type: System.Single\n      description: The y-coordinate of the top edge of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  overload: System.Drawing.RectangleF.Top*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.ToString\n  id: ToString\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: RectangleF.ToString()\n  fullName: System.Drawing.RectangleF.ToString()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the <xref uid=\"langword_csharp_Location\" name=\"Location\" href=\"\"></xref> and <xref href=\"System.Drawing.Size\"></xref> of this <xref href=\"System.Drawing.RectangleF\"></xref> to a human-readable string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the position, width, and height of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. For example, \"{X=20, Y=20, Width=100, Height=50}\".\n  overload: System.Drawing.RectangleF.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Union(RectangleF,RectangleF)\n  nameWithType: RectangleF.Union(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.\n  remarks: When one of the two rectangles is empty, meaning all of its values are zero, the <xref:System.Drawing.Rectangle.Union%2A> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).\n  example:\n  - \"This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> s and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> s for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the Union method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the smallest possible rectangle that can contain both of the other two rectangles:  \\n  \\n [!code-vb[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/visualbasic/2f1239b4-8abf-4ed8-9c26-_1.vb)]\\n [!code-cs[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/csharp/2f1239b4-8abf-4ed8-9c26-_1.cs)]\\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/cpp/2f1239b4-8abf-4ed8-9c26-_1.cpp)]\"\n  syntax:\n    content: public static System.Drawing.RectangleF Union (System.Drawing.RectangleF a, System.Drawing.RectangleF b);\n    parameters:\n    - id: a\n      type: System.Drawing.RectangleF\n      description: A rectangle to union.\n    - id: b\n      type: System.Drawing.RectangleF\n      description: A rectangle to union.\n    return:\n      type: System.Drawing.RectangleF\n      description: A third <xref href=\"System.Drawing.RectangleF\"></xref> structure that contains both of the two rectangles that form the union.\n  overload: System.Drawing.RectangleF.Union*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Width\n  id: Width\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Width\n  nameWithType: RectangleF.Width\n  fullName: System.Drawing.RectangleF.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the width of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public float Width { get; set; }\n    return:\n      type: System.Single\n      description: The width of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.\n  overload: System.Drawing.RectangleF.Width*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.X\n  id: X\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: X\n  nameWithType: RectangleF.X\n  fullName: System.Drawing.RectangleF.X\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public float X { get; set; }\n    return:\n      type: System.Single\n      description: The x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.\n  overload: System.Drawing.RectangleF.X*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.RectangleF.Y\n  id: Y\n  parent: System.Drawing.RectangleF\n  langs:\n  - csharp\n  name: Y\n  nameWithType: RectangleF.Y\n  fullName: System.Drawing.RectangleF.Y\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets or sets the y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure.\n  syntax:\n    content: public float Y { get; set; }\n    return:\n      type: System.Single\n      description: The y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\"></xref> structure. The default is 0.\n  overload: System.Drawing.RectangleF.Y*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: RectangleF(PointF,SizeF)\n  nameWithType: RectangleF.RectangleF(PointF,SizeF)\n  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)\n- uid: System.Drawing.PointF\n  parent: System.Drawing\n  isExternal: false\n  name: PointF\n  nameWithType: PointF\n  fullName: System.Drawing.PointF\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: RectangleF(Single,Single,Single,Single)\n  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)\n  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)\n- uid: System.Single\n  parent: System\n  isExternal: true\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Drawing.RectangleF.Bottom\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Bottom\n  nameWithType: RectangleF.Bottom\n  fullName: System.Drawing.RectangleF.Bottom\n- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Contains(PointF)\n  nameWithType: RectangleF.Contains(PointF)\n  fullName: System.Drawing.RectangleF.Contains(PointF)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Contains(RectangleF)\n  nameWithType: RectangleF.Contains(RectangleF)\n  fullName: System.Drawing.RectangleF.Contains(RectangleF)\n- uid: System.Drawing.RectangleF\n  parent: System.Drawing\n  isExternal: false\n  name: RectangleF\n  nameWithType: RectangleF\n  fullName: System.Drawing.RectangleF\n- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Contains(Single,Single)\n  nameWithType: RectangleF.Contains(Single,Single)\n  fullName: System.Drawing.RectangleF.Contains(Single,Single)\n- uid: System.Drawing.RectangleF.Empty\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Empty\n  nameWithType: RectangleF.Empty\n  fullName: System.Drawing.RectangleF.Empty\n- uid: System.Drawing.RectangleF.Equals(System.Object)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: RectangleF.Equals(Object)\n  fullName: System.Drawing.RectangleF.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: FromLTRB(Single,Single,Single,Single)\n  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)\n  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)\n- uid: System.Drawing.RectangleF.GetHashCode\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: RectangleF.GetHashCode()\n  fullName: System.Drawing.RectangleF.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.RectangleF.Height\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Height\n  nameWithType: RectangleF.Height\n  fullName: System.Drawing.RectangleF.Height\n- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Inflate(SizeF)\n  nameWithType: RectangleF.Inflate(SizeF)\n  fullName: System.Drawing.RectangleF.Inflate(SizeF)\n- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Inflate(Single,Single)\n  nameWithType: RectangleF.Inflate(Single,Single)\n  fullName: System.Drawing.RectangleF.Inflate(Single,Single)\n- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Inflate(RectangleF,Single,Single)\n  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)\n  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)\n- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Intersect(RectangleF)\n  nameWithType: RectangleF.Intersect(RectangleF)\n  fullName: System.Drawing.RectangleF.Intersect(RectangleF)\n- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Intersect(RectangleF,RectangleF)\n  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)\n- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: IntersectsWith(RectangleF)\n  nameWithType: RectangleF.IntersectsWith(RectangleF)\n  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)\n- uid: System.Drawing.RectangleF.IsEmpty\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: IsEmpty\n  nameWithType: RectangleF.IsEmpty\n  fullName: System.Drawing.RectangleF.IsEmpty\n- uid: System.Drawing.RectangleF.Left\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Left\n  nameWithType: RectangleF.Left\n  fullName: System.Drawing.RectangleF.Left\n- uid: System.Drawing.RectangleF.Location\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Location\n  nameWithType: RectangleF.Location\n  fullName: System.Drawing.RectangleF.Location\n- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Offset(PointF)\n  nameWithType: RectangleF.Offset(PointF)\n  fullName: System.Drawing.RectangleF.Offset(PointF)\n- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Offset(Single,Single)\n  nameWithType: RectangleF.Offset(Single,Single)\n  fullName: System.Drawing.RectangleF.Offset(Single,Single)\n- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: op_Equality(RectangleF,RectangleF)\n  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)\n- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: op_Implicit(Rectangle)\n  nameWithType: RectangleF.op_Implicit(Rectangle)\n  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: op_Inequality(RectangleF,RectangleF)\n  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)\n- uid: System.Drawing.RectangleF.Right\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Right\n  nameWithType: RectangleF.Right\n  fullName: System.Drawing.RectangleF.Right\n- uid: System.Drawing.RectangleF.Size\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Size\n  nameWithType: RectangleF.Size\n  fullName: System.Drawing.RectangleF.Size\n- uid: System.Drawing.RectangleF.Top\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Top\n  nameWithType: RectangleF.Top\n  fullName: System.Drawing.RectangleF.Top\n- uid: System.Drawing.RectangleF.ToString\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: ToString()\n  nameWithType: RectangleF.ToString()\n  fullName: System.Drawing.RectangleF.ToString()\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Union(RectangleF,RectangleF)\n  nameWithType: RectangleF.Union(RectangleF,RectangleF)\n  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)\n- uid: System.Drawing.RectangleF.Width\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Width\n  nameWithType: RectangleF.Width\n  fullName: System.Drawing.RectangleF.Width\n- uid: System.Drawing.RectangleF.X\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: X\n  nameWithType: RectangleF.X\n  fullName: System.Drawing.RectangleF.X\n- uid: System.Drawing.RectangleF.Y\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Y\n  nameWithType: RectangleF.Y\n  fullName: System.Drawing.RectangleF.Y\n- uid: System.Drawing.RectangleF.#ctor*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: RectangleF\n  nameWithType: RectangleF.RectangleF\n- uid: System.Drawing.RectangleF.Bottom*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Bottom\n  nameWithType: RectangleF.Bottom\n- uid: System.Drawing.RectangleF.Contains*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Contains\n  nameWithType: RectangleF.Contains\n- uid: System.Drawing.RectangleF.Equals*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Equals\n  nameWithType: RectangleF.Equals\n- uid: System.Drawing.RectangleF.FromLTRB*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: FromLTRB\n  nameWithType: RectangleF.FromLTRB\n- uid: System.Drawing.RectangleF.GetHashCode*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: GetHashCode\n  nameWithType: RectangleF.GetHashCode\n- uid: System.Drawing.RectangleF.Height*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Height\n  nameWithType: RectangleF.Height\n- uid: System.Drawing.RectangleF.Inflate*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Inflate\n  nameWithType: RectangleF.Inflate\n- uid: System.Drawing.RectangleF.Intersect*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Intersect\n  nameWithType: RectangleF.Intersect\n- uid: System.Drawing.RectangleF.IntersectsWith*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: IntersectsWith\n  nameWithType: RectangleF.IntersectsWith\n- uid: System.Drawing.RectangleF.IsEmpty*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: IsEmpty\n  nameWithType: RectangleF.IsEmpty\n- uid: System.Drawing.RectangleF.Left*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Left\n  nameWithType: RectangleF.Left\n- uid: System.Drawing.RectangleF.Location*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Location\n  nameWithType: RectangleF.Location\n- uid: System.Drawing.RectangleF.Offset*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Offset\n  nameWithType: RectangleF.Offset\n- uid: System.Drawing.RectangleF.op_Equality*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: op_Equality\n  nameWithType: RectangleF.op_Equality\n- uid: System.Drawing.RectangleF.op_Implicit*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: op_Implicit\n  nameWithType: RectangleF.op_Implicit\n- uid: System.Drawing.RectangleF.op_Inequality*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: op_Inequality\n  nameWithType: RectangleF.op_Inequality\n- uid: System.Drawing.RectangleF.Right*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Right\n  nameWithType: RectangleF.Right\n- uid: System.Drawing.RectangleF.Size*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Size\n  nameWithType: RectangleF.Size\n- uid: System.Drawing.RectangleF.Top*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Top\n  nameWithType: RectangleF.Top\n- uid: System.Drawing.RectangleF.ToString*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: ToString\n  nameWithType: RectangleF.ToString\n- uid: System.Drawing.RectangleF.Union*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Union\n  nameWithType: RectangleF.Union\n- uid: System.Drawing.RectangleF.Width*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Width\n  nameWithType: RectangleF.Width\n- uid: System.Drawing.RectangleF.X*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: X\n  nameWithType: RectangleF.X\n- uid: System.Drawing.RectangleF.Y*\n  parent: System.Drawing.RectangleF\n  isExternal: false\n  name: Y\n  nameWithType: RectangleF.Y\n"}