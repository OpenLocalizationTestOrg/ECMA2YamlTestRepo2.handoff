{"nodes":[{"pos":[449,553],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered\"></xref> event."},{"pos":[566,882],"content":"The <xref:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered> event occurs during XSLT processing when an `xsl:message` is specified in the style sheet.      > [!NOTE] >  If the `terminate` attribute is set to `\"yes\"`, the XSLT processor stops executing the style sheet stops after the message is processed.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered&gt; event occurs during XSLT processing when an <ph id=\"ph1\">`xsl:message`</ph> is specified in the style sheet.","pos":[0,156],"source":"The <xref:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered> event occurs during XSLT processing when an `xsl:message` is specified in the style sheet."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the <ph id=\"ph2\">`terminate`</ph> attribute is set to <ph id=\"ph3\">`\"yes\"`</ph>, the XSLT processor stops executing the style sheet stops after the message is processed.","pos":[162,311],"source":"      > [!NOTE] >  If the `terminate` attribute is set to `\"yes\"`, the XSLT processor stops executing the style sheet stops after the message is processed."}]},{"pos":[2301,2409],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xml.Xsl.XsltMessageEncounteredEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xml.Xsl.XsltMessageEncounteredEventArgs\"></xref> class."},{"pos":[2981,3028],"content":"Gets the contents of the <ph id=\"ph1\">`xsl:message`</ph> element.","needQuote":true,"needEscape":true,"source":"Gets the contents of the `xsl:message` element."},{"pos":[3956,3998],"content":"The contents of the <ph id=\"ph1\">`xsl:message`</ph> element.","needQuote":true,"needEscape":true,"source":"The contents of the `xsl:message` element."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  id: XsltMessageEncounteredEventArgs\n  children:\n  - System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor\n  - System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message\n  langs:\n  - csharp\n  name: XsltMessageEncounteredEventArgs\n  nameWithType: XsltMessageEncounteredEventArgs\n  fullName: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered\"></xref> event.\n  remarks: \"The <xref:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered> event occurs during XSLT processing when an `xsl:message` is specified in the style sheet.  \\n  \\n> [!NOTE]\\n>  If the `terminate` attribute is set to `\\\"yes\\\"`, the XSLT processor stops executing the style sheet stops after the message is processed.\"\n  example:\n  - \"The following example uses the XsltMessageEncounteredEventArgs to display `xsl:message` content to the console. The sample writes the following message to the console:  `Message received:  Author name is not in the correct format <author><name>Plato</name></author>`.  \\n  \\n [!code-cs[XsltMessageEncountered#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltmes_1.cs)]\\n [!code-vb[XsltMessageEncountered#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltmes_1.vb)]  \\n  \\n The example uses the following files as input:  \\n  \\n books.xml  \\n  \\n [!code-xml[XML_Core_Files#1](~/add/codesnippet/xml/t-system.xml.xsl.xsltmes_2.xml)]  \\n  \\n message.xsl  \\n  \\n [!code-xml[XsltMessageEncountered#2](~/add/codesnippet/xml/t-system.xml.xsl.xsltmes_3.xsl)]\"\n  syntax:\n    content: 'public abstract class XsltMessageEncounteredEventArgs : EventArgs'\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor\n  id: '#ctor'\n  parent: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  langs:\n  - csharp\n  name: XsltMessageEncounteredEventArgs()\n  nameWithType: XsltMessageEncounteredEventArgs.XsltMessageEncounteredEventArgs()\n  fullName: System.Xml.Xsl.XsltMessageEncounteredEventArgs.XsltMessageEncounteredEventArgs()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Xsl\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Xsl.XsltMessageEncounteredEventArgs\"></xref> class.\n  syntax:\n    content: protected XsltMessageEncounteredEventArgs ();\n    parameters: []\n  overload: System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message\n  id: Message\n  parent: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  langs:\n  - csharp\n  name: Message\n  nameWithType: XsltMessageEncounteredEventArgs.Message\n  fullName: System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message\n  type: Property\n  assemblies:\n  - System.Xml\n  namespace: System.Xml.Xsl\n  summary: Gets the contents of the `xsl:message` element.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Xml.Xsl.XsltMessageEncounteredEventArgs> to display `xsl:message` content to the console. The sample writes the following message to the console:  `Message received:  Author name is not in the correct format <author><name>Plato</name></author>`.  \\n  \\n [!code-cs[XsltMessageEncountered#1](~/add/codesnippet/csharp/p-system.xml.xsl.xsltmes_1.cs)]\\n [!code-vb[XsltMessageEncountered#1](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltmes_1.vb)]  \\n  \\n The example uses the following files as input:  \\n  \\n books.xml  \\n  \\n [!code-xml[XML_Core_Files#1](~/add/codesnippet/xml/p-system.xml.xsl.xsltmes_2.xml)]  \\n  \\n message.xsl  \\n  \\n [!code-xml[XsltMessageEncountered#2](~/add/codesnippet/xml/p-system.xml.xsl.xsltmes_3.xsl)]\"\n  syntax:\n    content: public abstract string Message { get; }\n    return:\n      type: System.String\n      description: The contents of the `xsl:message` element.\n  overload: System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor\n  parent: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  isExternal: false\n  name: XsltMessageEncounteredEventArgs()\n  nameWithType: XsltMessageEncounteredEventArgs.XsltMessageEncounteredEventArgs()\n  fullName: System.Xml.Xsl.XsltMessageEncounteredEventArgs.XsltMessageEncounteredEventArgs()\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message\n  parent: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  isExternal: false\n  name: Message\n  nameWithType: XsltMessageEncounteredEventArgs.Message\n  fullName: System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor*\n  parent: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  isExternal: false\n  name: XsltMessageEncounteredEventArgs\n  nameWithType: XsltMessageEncounteredEventArgs.XsltMessageEncounteredEventArgs\n- uid: System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message*\n  parent: System.Xml.Xsl.XsltMessageEncounteredEventArgs\n  isExternal: false\n  name: Message\n  nameWithType: XsltMessageEncounteredEventArgs.Message\n"}