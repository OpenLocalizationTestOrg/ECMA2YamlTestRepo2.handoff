{"nodes":[{"pos":[5899,6039],"content":"Derives from <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and implements support for a dictionary of key/value pairs.","needQuote":true,"needEscape":true,"source":"Derives from <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> and implements support for a dictionary of key/value pairs."},{"pos":[9088,9180],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"></xref>."},{"pos":[10041,10094],"content":"Adds the value to the dictionary under the given key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the value to the dictionary under the given key.","pos":[0,53]}]},{"pos":[10359,10489],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the key in the key/value pair to be added.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that represents the key in the key/value pair to be added."},{"pos":[10584,10716],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the value in the key/value pair to be added.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that represents the value in the key/value pair to be added."},{"pos":[10915,11013],"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"If the <xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"></xref> is read-only."},{"pos":[11555,11733],"content":"Adds the value to the dictionary under the given key. This method wraps the key and value in a set of <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds the value to the dictionary under the given key.","pos":[0,53]},{"content":"This method wraps the key and value in a set of <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[54,178],"source":" This method wraps the key and value in a set of <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> objects."}]},{"pos":[11927,11969],"content":"The key in the key/value pair to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key in the key/value pair to be added.","pos":[0,42]}]},{"pos":[12031,12075],"content":"The value in the key/value pair to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value in the key/value pair to be added.","pos":[0,44]}]},{"pos":[12166,12268],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the key.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that represents the key."},{"pos":[12459,12565],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12676,12774],"content":"If the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is read-only.","needQuote":true,"needEscape":true,"source":"If the <xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"></xref> is read-only."},{"pos":[13229,13267],"content":"Clears the contents of the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clears the contents of the dictionary.","pos":[0,38]}]},{"pos":[13941,13992],"content":"Raised when the contents of this collection change.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raised when the contents of this collection change.","pos":[0,51]}]},{"pos":[14234,14246],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[15104,15172],"content":"Determines whether the dictionary contains the given key/value pair.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the dictionary contains the given key/value pair.","pos":[0,68]}]},{"pos":[15568,15595],"content":"The key/value pair to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key/value pair to find.","pos":[0,27]}]},{"pos":[15654,15842],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary contains the given key/value pair; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the given key/value pair; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16546,16603],"content":"Determines whether the dictionary contains the given key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the dictionary contains the given key.","pos":[0,57]}]},{"pos":[16822,16838],"content":"The key to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to find.","pos":[0,16]}]},{"pos":[16897,17074],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary contains the given key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the given key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[17273,17357],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[17890,17947],"content":"Determines whether the dictionary contains the given key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the dictionary contains the given key.","pos":[0,57]}]},{"pos":[18093,18109],"content":"The key to find.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to find.","pos":[0,16]}]},{"pos":[18168,18345],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary contains the given key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the given key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18544,18628],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[19507,19568],"content":"Copies an array of key/value pairs into the given dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies an array of key/value pairs into the given dictionary.","pos":[0,61]}]},{"pos":[19984,20021],"content":"The array of key/value pairs to copy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The array of key/value pairs to copy.","pos":[0,37]}]},{"pos":[20087,20158],"content":"The zero-based index in the current dictionary at which copying begins.","needQuote":true,"needEscape":true,"nodes":[{"content":"The zero-based index in the current dictionary at which copying begins.","pos":[0,71]}]},{"pos":[20703,20748],"content":"Returns the count of items in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the count of items in the dictionary.","pos":[0,45]}]},{"pos":[20863,20891],"content":"Returns <xref:System.Int32>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Int32&gt;.","pos":[0,28],"source":"Returns <xref:System.Int32>."}]},{"pos":[21479,21533],"content":"Returns an enumerator for the items in the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator for the items in the dictionary.","pos":[0,54]}]},{"pos":[22003,22067],"content":"Returns &lt;xref:System.Collections.Generic.IEnumerator%601&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.IEnumerator%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,64],"source":"Returns &lt;xref:System.Collections.Generic.IEnumerator%601&gt;."}]},{"pos":[22649,22699],"content":"Determines whether the dictionary is a fixed size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the dictionary is a fixed size.","pos":[0,50]}]},{"pos":[22825,23123],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary is a fixed size; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,170],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary is read-only.","pos":[171,298],"source":" The default implementation returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only."}]},{"pos":[23698,23751],"content":"Determines whether the dictionary cannot be modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the dictionary cannot be modified.","pos":[0,53]}]},{"pos":[23874,24047],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the dictionary cannot be modified; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary cannot be modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24641,24732],"content":"Gets a value that indicates whether access to the dictionary is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether access to the dictionary is synchronized (thread safe).","pos":[0,91]}]},{"pos":[24861,25154],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the dictionary is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the dictionary is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,194],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the dictionary is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"The default implementation returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[195,293],"source":" The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[25831,25874],"content":"Gets or sets the item at the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the item at the specified key.","pos":[0,43]}]},{"pos":[25886,25952],"content":"If there is no item for the given key, this method returns <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"source":"If there is no item for the given key, this method returns `null`."},{"pos":[26218,26248],"content":"The specified key of the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified key of the item.","pos":[0,30]}]},{"pos":[26339,26415],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."},{"pos":[26607,26704],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> or the value is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> or the value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[26815,26870],"content":"If the dictionary is read-only and you set a new value.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the dictionary is read-only and you set a new value.","pos":[0,55]}]},{"pos":[27011,27056],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not in the dictionary.","needQuote":true,"needEscape":true,"source":"If <code>key</code> is not in the dictionary."},{"pos":[27556,27599],"content":"Gets or sets the item at the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the item at the specified key.","pos":[0,43]}]},{"pos":[27611,27677],"content":"If there is no item for the given key, this method returns <ph id=\"ph1\">`null`</ph>.","needQuote":true,"needEscape":true,"source":"If there is no item for the given key, this method returns `null`."},{"pos":[27870,27900],"content":"The specified key of the item.","needQuote":true,"needEscape":true,"nodes":[{"content":"The specified key of the item.","pos":[0,30]}]},{"pos":[27991,28067],"content":"Returns <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."},{"pos":[28259,28356],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> or the value is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> or the value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[28467,28522],"content":"If the dictionary is read-only and you set a new value.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the dictionary is read-only and you set a new value.","pos":[0,55]}]},{"pos":[28663,28708],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not in the dictionary.","needQuote":true,"needEscape":true,"source":"If <code>key</code> is not in the dictionary."},{"pos":[29186,29538],"content":"The <xref uid=\"langword_csharp_DependencyProperty\" name=\"DependencyProperty\" href=\"\"></xref> that represents the key in the key/value pair that is added to all items in the dictionary. The data type of the <xref uid=\"langword_csharp_KeyProperty\" name=\"KeyProperty\" href=\"\"></xref> is <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DependencyProperty\" name=\"DependencyProperty\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the key in the key/value pair that is added to all items in the dictionary.","pos":[0,184],"source":"The <xref uid=\"langword_csharp_DependencyProperty\" name=\"DependencyProperty\" href=\"\"></xref> that represents the key in the key/value pair that is added to all items in the dictionary."},{"content":"The data type of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_KeyProperty\" name=\"KeyProperty\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is <bpt id=\"p2\">&lt;xref href=\"System.Activities.Presentation.Model.ModelItem\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[185,352],"source":" The data type of the <xref uid=\"langword_csharp_KeyProperty\" name=\"KeyProperty\" href=\"\"></xref> is <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>."}]},{"pos":[29709,29721],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[30184,30318],"content":"Gets the keys of the collection. The keys are guaranteed to be in the same order as the values. The resulting collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the keys of the collection. The keys are guaranteed to be in the same order as the values. The resulting collection is read-only.","pos":[0,134],"nodes":[{"content":"Gets the keys of the collection.","pos":[0,32]},{"content":"The keys are guaranteed to be in the same order as the values.","pos":[33,95]},{"content":"The resulting collection is read-only.","pos":[96,134]}]}]},{"pos":[30589,30653],"content":"Returns &lt;xref:System.Collections.Generic.ICollection%601&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,64],"source":"Returns &lt;xref:System.Collections.Generic.ICollection%601&gt;."}]},{"pos":[31328,31388],"content":"Removes the item with the specified key from the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the item with the specified key from the dictionary.","pos":[0,60]}]},{"pos":[31400,31470],"content":"This method does nothing if the item does not exist in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method does nothing if the item does not exist in the collection.","pos":[0,70]}]},{"pos":[31684,31717],"content":"The key of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to remove.","pos":[0,33]}]},{"pos":[31776,31931],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[32125,32213],"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If the <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[32324,32355],"content":"If the dictionary is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the dictionary is read-only.","pos":[0,31]}]},{"pos":[32863,32900],"content":"Removes the item from the dictionary.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the item from the dictionary.","pos":[0,37]}]},{"pos":[32912,32982],"content":"This method does nothing if the item does not exist in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method does nothing if the item does not exist in the collection.","pos":[0,70]}]},{"pos":[33123,33180],"content":"The item to remove using the key as the search criterion.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item to remove using the key as the search criterion.","pos":[0,57]}]},{"pos":[33239,33394],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the item exists; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33588,33676],"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If the <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[33787,33818],"content":"If the dictionary is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the dictionary is read-only.","pos":[0,31]}]},{"pos":[34284,34357],"content":"Gets an object that can be used to synchronize access to this collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to this collection.","pos":[0,73]}]},{"pos":[34369,34411],"content":"The default implementation returns “this.”","needQuote":true,"needEscape":true,"nodes":[{"content":"The default implementation returns “this.”","pos":[0,42]}]},{"pos":[34535,34564],"content":"Returns <xref:System.Object>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Object&gt;.","pos":[0,29],"source":"Returns <xref:System.Object>."}]},{"pos":[36353,36365],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38339,38351],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38410,38422],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40465,40477],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40543,40555],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42526,42538],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42597,42609],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43594,43709],"content":"Copies the elements of the <xref:System.Collections.ICollection> to an array, starting at a particular array index.","needQuote":true,"needEscape":true,"nodes":[{"content":"Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an array, starting at a particular array index.","pos":[0,115],"source":"Copies the elements of the <xref:System.Collections.ICollection> to an array, starting at a particular array index."}]},{"pos":[43859,44015],"content":"The one-dimensional array that is the destination of the elements copied from <xref:System.Collections.ICollection>. The array must have zero-based indexing","needQuote":true,"needEscape":true,"nodes":[{"content":"The one-dimensional array that is the destination of the elements copied from <xref:System.Collections.ICollection>. The array must have zero-based indexing","pos":[0,156],"nodes":[{"content":"The one-dimensional array that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.","pos":[0,116],"source":"The one-dimensional array that is the destination of the elements copied from <xref:System.Collections.ICollection>."},{"content":"The array must have zero-based indexing","pos":[117,156]}]}]},{"pos":[44076,44132],"content":"The zero-based index in <ph id=\"ph1\">`array`</ph> at which copying begins.","needQuote":true,"needEscape":true,"source":"The zero-based index in `array` at which copying begins."},{"pos":[44877,44960],"content":"Gets the number of elements contained in the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of elements contained in the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,83],"source":"Gets the number of elements contained in the <xref:System.Collections.ICollection>."}]},{"pos":[45090,45168],"content":"The number of elements contained in the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of elements contained in the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,78],"source":"The number of elements contained in the <xref:System.Collections.ICollection>."}]},{"pos":[45957,46075],"content":"Gets a value that indicates whether access to the <xref:System.Collections.ICollection> is synchronized (thread safe).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).","pos":[0,118],"source":"Gets a value that indicates whether access to the <xref:System.Collections.ICollection> is synchronized (thread safe)."}]},{"pos":[46217,46438],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[47206,47305],"content":"Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,99],"source":"Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection>."}]},{"pos":[47442,47536],"content":"An object that can be used to synchronize access to the <xref:System.Collections.ICollection>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.","pos":[0,94],"source":"An object that can be used to synchronize access to the <xref:System.Collections.ICollection>."}]},{"pos":[48374,48474],"content":"Adds an element with the provided key and value to the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an element with the provided key and value to the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,100],"source":"Adds an element with the provided key and value to the <xref:System.Collections.IDictionary> object."}]},{"pos":[48622,48673],"content":"The object to use as the key of the element to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to use as the key of the element to add.","pos":[0,51]}]},{"pos":[48735,48788],"content":"The object to use as the value of the element to add.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to use as the value of the element to add.","pos":[0,53]}]},{"pos":[49534,49609],"content":"Removes all elements from the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all elements from the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,75],"source":"Removes all elements from the <xref:System.Collections.IDictionary> object."}]},{"pos":[50489,50600],"content":"Determines whether the <xref:System.Collections.IDictionary> object contains an element with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Determines whether the &lt;xref:System.Collections.IDictionary&gt; object contains an element with the specified key.","pos":[0,111],"source":"Determines whether the <xref:System.Collections.IDictionary> object contains an element with the specified key."}]},{"pos":[50739,50809],"content":"The key to locate in the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key to locate in the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,70],"source":"The key to locate in the <xref:System.Collections.IDictionary> object."}]},{"pos":[50868,51082],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IDictionary&gt; contains an element with the key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IDictionary> contains an element with the key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51873,51993],"content":"Returns the <xref:System.Collections.IDictionaryEnumerator> object for the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,120],"source":"Returns the <xref:System.Collections.IDictionaryEnumerator> object for the <xref:System.Collections.IDictionary> object."}]},{"pos":[52191,52302],"content":"An <xref:System.Collections.IDictionaryEnumerator> object for the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,111],"source":"An <xref:System.Collections.IDictionaryEnumerator> object for the <xref:System.Collections.IDictionary> object."}]},{"pos":[53084,53186],"content":"Gets a value that indicates whether the <xref:System.Collections.IDictionary> object has a fixed size.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the &lt;xref:System.Collections.IDictionary&gt; object has a fixed size.","pos":[0,102],"source":"Gets a value that indicates whether the <xref:System.Collections.IDictionary> object has a fixed size."}]},{"pos":[53325,53530],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IDictionary&gt; object has a fixed size; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IDictionary> object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[54305,54403],"content":"Gets a value that indicates whether the <xref:System.Collections.IDictionary> object is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the &lt;xref:System.Collections.IDictionary&gt; object is read-only.","pos":[0,98],"source":"Gets a value that indicates whether the <xref:System.Collections.IDictionary> object is read-only."}]},{"pos":[54541,54742],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IDictionary&gt; object is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IDictionary> object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[55540,55588],"content":"Gets or sets the element with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the element with the specified key.","pos":[0,48]}]},{"pos":[55756,55793],"content":"The key of the element to get or set.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to get or set.","pos":[0,37]}]},{"pos":[55851,55886],"content":"The element with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The element with the specified key.","pos":[0,35]}]},{"pos":[56624,56752],"content":"Gets an <xref:System.Collections.ICollection> object that contains the keys of the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an &lt;xref:System.Collections.ICollection&gt; object that contains the keys of the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,128],"source":"Gets an <xref:System.Collections.ICollection> object that contains the keys of the <xref:System.Collections.IDictionary> object."}]},{"pos":[56926,57049],"content":"An <xref:System.Collections.ICollection> object that contains the keys of the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; object that contains the keys of the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,123],"source":"An <xref:System.Collections.ICollection> object that contains the keys of the <xref:System.Collections.IDictionary> object."}]},{"pos":[57849,57939],"content":"Removes the element with the specified key from the <xref:System.Collections.IDictionary>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the element with the specified key from the &lt;xref:System.Collections.IDictionary&gt;.","pos":[0,90],"source":"Removes the element with the specified key from the <xref:System.Collections.IDictionary>."}]},{"pos":[57951,58139],"content":"If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged. No exception is thrown.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged. No exception is thrown.","pos":[0,188],"nodes":[{"content":"If the &lt;xref:System.Collections.IDictionary&gt; object does not contain an element with the specified key, the &lt;xref:System.Collections.IDictionary&gt; remains unchanged.","pos":[0,164],"source":"If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged."},{"content":"No exception is thrown.","pos":[165,188]}]}]},{"pos":[58276,58309],"content":"The key of the element to remove.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key of the element to remove.","pos":[0,33]}]},{"pos":[59059,59189],"content":"Gets an <xref:System.Collections.ICollection> object that contains the values in the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an &lt;xref:System.Collections.ICollection&gt; object that contains the values in the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,130],"source":"Gets an <xref:System.Collections.ICollection> object that contains the values in the <xref:System.Collections.IDictionary> object."}]},{"pos":[59365,59490],"content":"An <xref:System.Collections.ICollection> object that contains the values in the <xref:System.Collections.IDictionary> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; object that contains the values in the &lt;xref:System.Collections.IDictionary&gt; object.","pos":[0,125],"source":"An <xref:System.Collections.ICollection> object that contains the values in the <xref:System.Collections.IDictionary> object."}]},{"pos":[60279,60336],"content":"Returns an enumerator that iterates through a collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]},{"pos":[60514,60614],"content":"An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection..","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.IEnumerator&gt; object that can be used to iterate through the collection..","pos":[0,100],"source":"An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection.."}]},{"pos":[61480,61531],"content":"Retrieves the value for the given key, if possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the value for the given key, if possible.","pos":[0,51]}]},{"pos":[61808,61854],"content":"The key associated with the value to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key associated with the value to retrieve.","pos":[0,46]}]},{"pos":[61949,61993],"content":"The value associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value associated with the specified key.","pos":[0,44]}]},{"pos":[62052,62238],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is a value present for the specified key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a value present for the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[62437,62521],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[63180,63231],"content":"Retrieves the value for the given key, if possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves the value for the given key, if possible.","pos":[0,51]}]},{"pos":[63435,63481],"content":"The key associated with the value to retrieve.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key associated with the value to retrieve.","pos":[0,46]}]},{"pos":[63576,63620],"content":"The value associated with the specified key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value associated with the specified key.","pos":[0,44]}]},{"pos":[63679,63865],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is a value present for the specified key; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a value present for the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[64064,64148],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[64604,64638],"content":"Gets the values of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the values of the collection.","pos":[0,34]}]},{"pos":[64650,64751],"content":"The values are guaranteed to be in the same order as the keys. The resulting collection is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"The values are guaranteed to be in the same order as the keys. The resulting collection is read-only.","pos":[0,101],"nodes":[{"content":"The values are guaranteed to be in the same order as the keys.","pos":[0,62]},{"content":"The resulting collection is read-only.","pos":[63,101]}]}]},{"pos":[65024,65088],"content":"Returns &lt;xref:System.Collections.Generic.ICollection%601&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns <ph id=\"ph1\">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,64],"source":"Returns &lt;xref:System.Collections.Generic.ICollection%601&gt;."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.ModelItemDictionary\n  id: ModelItemDictionary\n  children:\n  - System.Activities.Presentation.Model.ModelItemDictionary.#ctor\n  - System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.Clear\n  - System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged\n  - System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  - System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  - System.Activities.Presentation.Model.ModelItemDictionary.Count\n  - System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator\n  - System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize\n  - System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly\n  - System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized\n  - System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty\n  - System.Activities.Presentation.Model.ModelItemDictionary.Keys\n  - System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)\n  - System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values\n  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator\n  - System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)\n  - System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)\n  - System.Activities.Presentation.Model.ModelItemDictionary.Values\n  langs:\n  - csharp\n  name: ModelItemDictionary\n  nameWithType: ModelItemDictionary\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary\n  type: Class\n  summary: Derives from <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> and implements support for a dictionary of key/value pairs.\n  syntax:\n    content: 'public abstract class ModelItemDictionary : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>, System.Collections.Generic.IDictionary<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>, System.Collections.IDictionary, System.Collections.Specialized.INotifyCollectionChanged'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.Model.ModelItem\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>\n  - System.Collections.Generic.IDictionary<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>\n  - System.Collections.IDictionary\n  - System.Collections.Specialized.INotifyCollectionChanged\n  inheritedMembers:\n  - System.Activities.Presentation.Model.ModelItem.Attributes\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)\n  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)\n  - System.Activities.Presentation.Model.ModelItem.Content\n  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue\n  - System.Activities.Presentation.Model.ModelItem.ItemType\n  - System.Activities.Presentation.Model.ModelItem.Name\n  - System.Activities.Presentation.Model.ModelItem.Parent\n  - System.Activities.Presentation.Model.ModelItem.Parents\n  - System.Activities.Presentation.Model.ModelItem.Properties\n  - System.Activities.Presentation.Model.ModelItem.PropertyChanged\n  - System.Activities.Presentation.Model.ModelItem.Root\n  - System.Activities.Presentation.Model.ModelItem.Source\n  - System.Activities.Presentation.Model.ModelItem.Sources\n  - System.Activities.Presentation.Model.ModelItem.ToString\n  - System.Activities.Presentation.Model.ModelItem.View\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: ModelItemDictionary()\n  nameWithType: ModelItemDictionary.ModelItemDictionary()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ModelItemDictionary()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Creates a new <xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"></xref>.\n  syntax:\n    content: protected ModelItemDictionary ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)\n  id: Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Add(ModelItem,ModelItem)\n  nameWithType: ModelItemDictionary.Add(ModelItem,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(ModelItem,ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Adds the value to the dictionary under the given key.\n  syntax:\n    content: public abstract void Add (System.Activities.Presentation.Model.ModelItem key, System.Activities.Presentation.Model.ModelItem value);\n    parameters:\n    - id: key\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that represents the key in the key/value pair to be added.\n    - id: value\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that represents the value in the key/value pair to be added.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Add*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the <xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)\n  id: Add(System.Object,System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Add(Object,Object)\n  nameWithType: ModelItemDictionary.Add(Object,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Adds the value to the dictionary under the given key. This method wraps the key and value in a set of <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> objects.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.ModelItem Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key in the key/value pair to be added.\n    - id: value\n      type: System.Object\n      description: The value in the key/value pair to be added.\n    return:\n      type: System.Activities.Presentation.Model.ModelItem\n      description: Returns a <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref> that represents the key.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> or <code>value</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the <xref href=\"System.Activities.Presentation.Model.ModelItemDictionary\"></xref> is read-only.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Clear\n  id: Clear\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ModelItemDictionary.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Clear()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Clears the contents of the dictionary.\n  syntax:\n    content: public abstract void Clear ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged\n  id: CollectionChanged\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: CollectionChanged\n  nameWithType: ModelItemDictionary.CollectionChanged\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged\n  type: Event\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Raised when the contents of this collection change.\n  syntax:\n    content: public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;\n    return:\n      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the dictionary contains the given key/value pair.\n  syntax:\n    content: protected virtual bool Contains (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}\n      description: The key/value pair to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the given key/value pair; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)\n  id: ContainsKey(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: ContainsKey(ModelItem)\n  nameWithType: ModelItemDictionary.ContainsKey(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the dictionary contains the given key.\n  syntax:\n    content: public abstract bool ContainsKey (System.Activities.Presentation.Model.ModelItem key);\n    parameters:\n    - id: key\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The key to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the given key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)\n  id: ContainsKey(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: ContainsKey(Object)\n  nameWithType: ModelItemDictionary.ContainsKey(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the dictionary contains the given key.\n  syntax:\n    content: public abstract bool ContainsKey (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to find.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary contains the given key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)\n  nameWithType: ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Copies an array of key/value pairs into the given dictionary.\n  syntax:\n    content: protected virtual void CopyTo (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[]\n      description: The array of key/value pairs to copy.\n    - id: arrayIndex\n      type: System.Int32\n      description: The zero-based index in the current dictionary at which copying begins.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Count\n  id: Count\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ModelItemDictionary.Count\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Count\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns the count of items in the dictionary.\n  syntax:\n    content: public abstract int Count { get; }\n    return:\n      type: System.Int32\n      description: Returns <xref:System.Int32>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator\n  id: GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ModelItemDictionary.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns an enumerator for the items in the dictionary.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}}\n      description: Returns &lt;xref:System.Collections.Generic.IEnumerator%601&gt;.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize\n  id: IsFixedSize\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: ModelItemDictionary.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the dictionary is a fixed size.\n  syntax:\n    content: protected virtual bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary is read-only.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ModelItemDictionary.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the dictionary cannot be modified.\n  syntax:\n    content: public abstract bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the dictionary cannot be modified; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized\n  id: IsSynchronized\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: ModelItemDictionary.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether access to the dictionary is synchronized (thread safe).\n  syntax:\n    content: protected virtual bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the dictionary is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. The default implementation returns <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)\n  id: Item(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Item(ModelItem)\n  nameWithType: ModelItemDictionary.Item(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(ModelItem)\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the item at the specified key.\n  remarks: If there is no item for the given key, this method returns `null`.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.ModelItem this[System.Activities.Presentation.Model.ModelItem key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The specified key of the item.\n    return:\n      type: System.Activities.Presentation.Model.ModelItem\n      description: Returns <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> or the value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the dictionary is read-only and you set a new value.\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: If <code>key</code> is not in the dictionary.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)\n  id: Item(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Item(Object)\n  nameWithType: ModelItemDictionary.Item(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the item at the specified key.\n  remarks: If there is no item for the given key, this method returns `null`.\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.ModelItem this[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: The specified key of the item.\n    return:\n      type: System.Activities.Presentation.Model.ModelItem\n      description: Returns <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> or the value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the dictionary is read-only and you set a new value.\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: If <code>key</code> is not in the dictionary.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty\n  id: KeyProperty\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: KeyProperty\n  nameWithType: ModelItemDictionary.KeyProperty\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty\n  type: Field\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: The <xref uid=\"langword_csharp_DependencyProperty\" name=\"DependencyProperty\" href=\"\"></xref> that represents the key in the key/value pair that is added to all items in the dictionary. The data type of the <xref uid=\"langword_csharp_KeyProperty\" name=\"KeyProperty\" href=\"\"></xref> is <xref href=\"System.Activities.Presentation.Model.ModelItem\"></xref>.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty KeyProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Keys\n  id: Keys\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: ModelItemDictionary.Keys\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Keys\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets the keys of the collection. The keys are guaranteed to be in the same order as the values. The resulting collection is read-only.\n  syntax:\n    content: public abstract System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Activities.Presentation.Model.ModelItem}\n      description: Returns &lt;xref:System.Collections.Generic.ICollection%601&gt;.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)\n  id: Remove(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Remove(ModelItem)\n  nameWithType: ModelItemDictionary.Remove(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the item with the specified key from the dictionary.\n  remarks: This method does nothing if the item does not exist in the collection.\n  syntax:\n    content: public abstract bool Remove (System.Activities.Presentation.Model.ModelItem key);\n    parameters:\n    - id: key\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The key of the element to remove.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If the <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the dictionary is read-only.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: ModelItemDictionary.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the item from the dictionary.\n  remarks: This method does nothing if the item does not exist in the collection.\n  syntax:\n    content: public abstract bool Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The item to remove using the key as the search criterion.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the item exists; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If the <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: If the dictionary is read-only.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot\n  id: SyncRoot\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: ModelItemDictionary.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an object that can be used to synchronize access to this collection.\n  remarks: The default implementation returns “this.”\n  syntax:\n    content: protected virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Returns <xref:System.Object>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: void ICollection<KeyValuePair<ModelItem,ModelItem>>.Add (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}\n      description: To be added.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: bool ICollection<KeyValuePair<ModelItem,ModelItem>>.Contains (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: void ICollection<KeyValuePair<ModelItem,ModelItem>>.CopyTo (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[]\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: bool ICollection<KeyValuePair<ModelItem,ModelItem>>.Remove (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Copies the elements of the <xref:System.Collections.ICollection> to an array, starting at a particular array index.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional array that is the destination of the elements copied from <xref:System.Collections.ICollection>. The array must have zero-based indexing\n    - id: index\n      type: System.Int32\n      description: The zero-based index in `array` at which copying begins.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.Count\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets the number of elements contained in the <xref:System.Collections.ICollection>.\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref:System.Collections.ICollection>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether access to the <xref:System.Collections.ICollection> is synchronized (thread safe).\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref:System.Collections.ICollection>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Adds an element with the provided key and value to the <xref:System.Collections.IDictionary> object.\n  syntax:\n    content: void IDictionary.Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The object to use as the key of the element to add.\n    - id: value\n      type: System.Object\n      description: The object to use as the value of the element to add.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear\n  id: System#Collections#IDictionary#Clear\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Clear()\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Clear()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes all elements from the <xref:System.Collections.IDictionary> object.\n  syntax:\n    content: void IDictionary.Clear ();\n    parameters: []\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Determines whether the <xref:System.Collections.IDictionary> object contains an element with the specified key.\n  syntax:\n    content: bool IDictionary.Contains (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to locate in the <xref:System.Collections.IDictionary> object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IDictionary> contains an element with the key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator\n  id: System#Collections#IDictionary#GetEnumerator\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns the <xref:System.Collections.IDictionaryEnumerator> object for the <xref:System.Collections.IDictionary> object.\n  syntax:\n    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: An <xref:System.Collections.IDictionaryEnumerator> object for the <xref:System.Collections.IDictionary> object.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether the <xref:System.Collections.IDictionary> object has a fixed size.\n  syntax:\n    content: bool System.Collections.IDictionary.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IDictionary> object has a fixed size; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets a value that indicates whether the <xref:System.Collections.IDictionary> object is read-only.\n  syntax:\n    content: bool System.Collections.IDictionary.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Collections.IDictionary> object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Item(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets or sets the element with the specified key.\n  syntax:\n    content: object System.Collections.IDictionary.Item[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to get or set.\n    return:\n      type: System.Object\n      description: The element with the specified key.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Keys\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Keys\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Keys\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an <xref:System.Collections.ICollection> object that contains the keys of the <xref:System.Collections.IDictionary> object.\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object that contains the keys of the <xref:System.Collections.IDictionary> object.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Removes the element with the specified key from the <xref:System.Collections.IDictionary>.\n  remarks: If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged. No exception is thrown.\n  syntax:\n    content: void IDictionary.Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key of the element to remove.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Values\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Values\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Values\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets an <xref:System.Collections.ICollection> object that contains the values in the <xref:System.Collections.IDictionary> object.\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> object that contains the values in the <xref:System.Collections.IDictionary> object.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Returns an enumerator that iterates through a collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref:System.Collections.IEnumerator> object that can be used to iterate through the collection..\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)\n  id: TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: TryGetValue(ModelItem,ModelItem)\n  nameWithType: ModelItemDictionary.TryGetValue(ModelItem,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(ModelItem,ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Retrieves the value for the given key, if possible.\n  syntax:\n    content: public abstract bool TryGetValue (System.Activities.Presentation.Model.ModelItem key, out System.Activities.Presentation.Model.ModelItem value);\n    parameters:\n    - id: key\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The key associated with the value to retrieve.\n    - id: value\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The value associated with the specified key.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a value present for the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)\n  id: TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: TryGetValue(Object,ModelItem)\n  nameWithType: ModelItemDictionary.TryGetValue(Object,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(Object,ModelItem)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Retrieves the value for the given key, if possible.\n  syntax:\n    content: public abstract bool TryGetValue (object key, out System.Activities.Presentation.Model.ModelItem value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key associated with the value to retrieve.\n    - id: value\n      type: System.Activities.Presentation.Model.ModelItem\n      description: The value associated with the specified key.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if there is a value present for the specified key; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: If <code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Values\n  id: Values\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ModelItemDictionary.Values\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Values\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  summary: Gets the values of the collection.\n  remarks: The values are guaranteed to be in the same order as the keys. The resulting collection is read-only.\n  syntax:\n    content: public abstract System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Activities.Presentation.Model.ModelItem}\n      description: Returns &lt;xref:System.Collections.Generic.ICollection%601&gt;.\n  overload: System.Activities.Presentation.Model.ModelItemDictionary.Values*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.Model.ModelItem\n  isExternal: false\n  name: System.Activities.Presentation.Model.ModelItem\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Collections.Generic.KeyNotFoundException\n  isExternal: true\n  name: System.Collections.Generic.KeyNotFoundException\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.#ctor\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: ModelItemDictionary()\n  nameWithType: ModelItemDictionary.ModelItemDictionary()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ModelItemDictionary()\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Add(ModelItem,ModelItem)\n  nameWithType: ModelItemDictionary.Add(ModelItem,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(ModelItem,ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Add(Object,Object)\n  nameWithType: ModelItemDictionary.Add(Object,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Clear\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Clear()\n  nameWithType: ModelItemDictionary.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Clear()\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: CollectionChanged\n  nameWithType: ModelItemDictionary.CollectionChanged\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged\n- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler\n  parent: System.Collections.Specialized\n  isExternal: true\n  name: NotifyCollectionChangedEventHandler\n  nameWithType: NotifyCollectionChangedEventHandler\n  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Contains(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<ModelItem,ModelItem>\n  nameWithType: KeyValuePair<ModelItem,ModelItem>\n  fullName: System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: ContainsKey(ModelItem)\n  nameWithType: ModelItemDictionary.ContainsKey(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: ContainsKey(Object)\n  nameWithType: ModelItemDictionary.ContainsKey(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)\n  nameWithType: ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[]\n  parent: System.Collections.Generic\n  isExternal: true\n  name: KeyValuePair<ModelItem,ModelItem>\n  nameWithType: KeyValuePair<ModelItem,ModelItem>\n  fullName: System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[]\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Count\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Count\n  nameWithType: ModelItemDictionary.Count\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Count\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ModelItemDictionary.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<KeyValuePair<ModelItem,ModelItem>>\n  nameWithType: IEnumerator<KeyValuePair<ModelItem,ModelItem>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: ModelItemDictionary.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelItemDictionary.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ModelItemDictionary.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Item(ModelItem)\n  nameWithType: ModelItemDictionary.Item(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Item(Object)\n  nameWithType: ModelItemDictionary.Item(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: KeyProperty\n  nameWithType: ModelItemDictionary.KeyProperty\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Keys\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: ModelItemDictionary.Keys\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Keys\n- uid: System.Collections.Generic.ICollection{System.Activities.Presentation.Model.ModelItem}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: ICollection<ModelItem>\n  nameWithType: ICollection<ModelItem>\n  fullName: System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: ICollection<System.Activities.Presentation.Model.ModelItem>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Presentation.Model.ModelItem\n    name: ModelItem\n    nameWithType: ModelItem\n    fullName: ModelItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Remove(ModelItem)\n  nameWithType: ModelItemDictionary.Remove(ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: ModelItemDictionary.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ModelItemDictionary.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: true\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.Count\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.Count\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.IsSynchronized\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.SyncRoot\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Clear()\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Clear()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Clear()\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Contains(Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Item(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Item(Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Keys\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Remove(Object)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Values\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Values\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Values\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: TryGetValue(ModelItem,ModelItem)\n  nameWithType: ModelItemDictionary.TryGetValue(ModelItem,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(ModelItem,ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: TryGetValue(Object,ModelItem)\n  nameWithType: ModelItemDictionary.TryGetValue(Object,ModelItem)\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(Object,ModelItem)\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Values\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Values\n  nameWithType: ModelItemDictionary.Values\n  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Values\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.#ctor*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: ModelItemDictionary\n  nameWithType: ModelItemDictionary.ModelItemDictionary\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Add\n  nameWithType: ModelItemDictionary.Add\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Clear*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Clear\n  nameWithType: ModelItemDictionary.Clear\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Contains*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Contains\n  nameWithType: ModelItemDictionary.Contains\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: ContainsKey\n  nameWithType: ModelItemDictionary.ContainsKey\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: CopyTo\n  nameWithType: ModelItemDictionary.CopyTo\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Count*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Count\n  nameWithType: ModelItemDictionary.Count\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ModelItemDictionary.GetEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: ModelItemDictionary.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ModelItemDictionary.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ModelItemDictionary.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Item\n  nameWithType: ModelItemDictionary.Item\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Keys*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: ModelItemDictionary.Keys\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Remove\n  nameWithType: ModelItemDictionary.Remove\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ModelItemDictionary.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Add*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Add\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Add\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Contains*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Contains\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Contains\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#CopyTo*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.CopyTo\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.CopyTo\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Remove*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Remove\n  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Remove\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.CopyTo\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.Count\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.IsSynchronized\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ModelItemDictionary.System.Collections.ICollection.SyncRoot\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Add\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Add\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Clear\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Clear\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Contains\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Contains\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.GetEnumerator\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.GetEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsFixedSize\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsReadOnly\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Item\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Item\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Keys\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Remove\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Remove\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IDictionary.Values\n  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Values\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: TryGetValue\n  nameWithType: ModelItemDictionary.TryGetValue\n- uid: System.Activities.Presentation.Model.ModelItemDictionary.Values*\n  parent: System.Activities.Presentation.Model.ModelItemDictionary\n  isExternal: false\n  name: Values\n  nameWithType: ModelItemDictionary.Values\n"}