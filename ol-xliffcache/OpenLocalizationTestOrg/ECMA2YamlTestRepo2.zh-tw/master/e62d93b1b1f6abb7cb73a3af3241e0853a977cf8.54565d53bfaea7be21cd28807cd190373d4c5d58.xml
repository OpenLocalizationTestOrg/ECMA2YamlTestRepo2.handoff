{"nodes":[{"pos":[1413,1528],"content":"Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.","pos":[0,115]}]},{"pos":[2815,2938],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class."},{"pos":[3597,3823],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using an existing <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class using an existing <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref>."},{"pos":[4028,4231],"content":"An existing <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> used to create a new <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An existing <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> used to create a new <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref>."},{"pos":[4862,5107],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_DBDataPermissionAttribute\" name=\"DBDataPermissionAttribute\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class with the specified <xref uid=\"langword_csharp_DBDataPermissionAttribute\" name=\"DBDataPermissionAttribute\" href=\"\"></xref>."},{"pos":[5348,5410],"content":"A security action associated with a custom security attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"A security action associated with a custom security attribute.","pos":[0,62]}]},{"pos":[6009,6222],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."},{"pos":[6433,6516],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[7169,7442],"content":"Initializes a new instance of a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> value, and a value indicating whether a blank password is allowed.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value, and a value indicating whether a blank password is allowed."},{"pos":[7454,7866],"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Permissions.PermissionState&gt; enumeration takes precedence over the &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; property.","pos":[0,167],"source":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property."},{"content":"Therefore, if you set &lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt; to <ph id=\"ph1\">`false`</ph>, you must also set &lt;xref:System.Security.Permissions.PermissionState&gt; to <ph id=\"ph2\">`None`</ph> to prevent a user from making a connection using a blank password.","pos":[168,412],"source":" Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password."}]},{"pos":[8102,8185],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."},{"pos":[8261,8307],"content":"Indicates whether a blank password is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether a blank password is allowed.","pos":[0,46]}]},{"pos":[8957,9119],"content":"Adds access for the specified connection string to the existing state of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Adds access for the specified connection string to the existing state of the <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref>."},{"pos":[9132,9462],"content":"This method can be useful when implementing:      -   A .NET framework data provider.      -   An API that must assert for data access permission.      -   An administrative tool or installation program that must modify security policy.      -   When more than one rule is specified, the more restrictive rule is selected.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method can be useful when implementing:      -   A .NET framework data provider.      -   An API that must assert for data access permission.      -   An administrative tool or installation program that must modify security policy.      -   When more than one rule is specified, the more restrictive rule is selected.","pos":[0,322],"nodes":[{"content":"This method can be useful when implementing:      -   A .NET framework data provider.","pos":[0,85]},{"content":"-   An API that must assert for data access permission.","pos":[91,146]},{"content":"-   An administrative tool or installation program that must modify security policy.","pos":[152,236]},{"content":"-   When more than one rule is specified, the more restrictive rule is selected.","pos":[242,322]}]}]},{"pos":[9692,9722],"content":"A permitted connection string.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permitted connection string.","pos":[0,30]}]},{"pos":[9791,9874],"content":"String that identifies connection string parameters that are allowed or disallowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"String that identifies connection string parameters that are allowed or disallowed.","pos":[0,83]}]},{"pos":[9960,10038],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Data.KeyRestrictionBehavior\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> properties.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> properties."},{"pos":[10521,10581],"content":"Gets a value indicating whether a blank password is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether a blank password is allowed.","pos":[0,60]}]},{"pos":[10593,10913],"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the AllowBlankPassword property. Therefore, if you set AllowBlankPassword to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Security.Permissions.PermissionState&gt; enumeration takes precedence over the AllowBlankPassword property.","pos":[0,121],"source":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the AllowBlankPassword property."},{"content":"Therefore, if you set AllowBlankPassword to <ph id=\"ph1\">`false`</ph>, you must also set &lt;xref:System.Security.Permissions.PermissionState&gt; to <ph id=\"ph2\">`None`</ph> to prevent a user from making a connection using a blank password.","pos":[122,320],"source":" Therefore, if you set AllowBlankPassword to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password."}]},{"pos":[11040,11207],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if a blank password is allowed, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a blank password is allowed, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[11644,11758],"content":"Removes all permissions that were previous added using the <xref:System.Data.Common.DBDataPermission.Add*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes all permissions that were previous added using the &lt;xref:System.Data.Common.DBDataPermission.Add*&gt; method.","pos":[0,114],"source":"Removes all permissions that were previous added using the <xref:System.Data.Common.DBDataPermission.Add*> method."}]},{"pos":[12244,12315],"content":"Creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]},{"pos":[12327,12431],"content":"A copy of a permission object represents the same access to resources as the original permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of a permission object represents the same access to resources as the original permission object.","pos":[0,104]}]},{"pos":[12598,12638],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[13106,13227],"content":"Creates a new instance of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Creates a new instance of the <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class."},{"pos":[13422,13520],"content":"A new <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A new <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> object."},{"pos":[14074,14149],"content":"Reconstructs a security object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]},{"pos":[14161,14295],"content":"Custom code that extends security objects needs to implement the <ph id=\"ph1\">`ToXml`</ph> and <ph id=\"ph2\">`FromXml`</ph> methods to make the objects security encodable.","needQuote":true,"needEscape":true,"source":"Custom code that extends security objects needs to implement the `ToXml` and `FromXml` methods to make the objects security encodable."},{"pos":[14504,14563],"content":"The XML encoding to use to reconstruct the security object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]},{"pos":[15100,15231],"content":"Returns a new permission object representing the intersection of the current permission object and the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new permission object representing the intersection of the current permission object and the specified permission object.","pos":[0,131]}]},{"pos":[15243,15431],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.","pos":[0,188],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe.","pos":[0,108]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[109,188]}]}]},{"pos":[15639,15769],"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","pos":[0,130],"nodes":[{"content":"A permission object to intersect with the current permission object.","pos":[0,68]},{"content":"It must be of the same type as the current permission object.","pos":[69,130]}]}]},{"pos":[15841,16129],"content":"A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the intersection of the current permission object and the specified permission object.","pos":[0,126]},{"content":"This new permission object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic) if the intersection is empty.","pos":[127,288],"source":" This new permission object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty."}]},{"pos":[16297,16514],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a null reference (<bpt id=\"p2\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> in Visual Basic) and is not an instance of the same class as the current permission object.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is not a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) and is not an instance of the same class as the current permission object."},{"pos":[16982,17094],"content":"Returns a value indicating whether the current permission object is a subset of the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission object is a subset of the specified permission object.","pos":[0,112]}]},{"pos":[17106,17589],"content":"The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object.","pos":[0,200]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[201,327],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission object represents no more access to the protected resource than does the specified permission object.","pos":[328,483],"source":" If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object."}]},{"pos":[17775,17915],"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","pos":[0,140],"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]},{"content":"This object must be of the same type as the current permission object.","pos":[70,140]}]}]},{"pos":[17974,18189],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current permission object is a subset of the specified permission object, otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of the specified permission object, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18358,18467],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an object that is not of the same type as the current permission object.","needQuote":true,"needEscape":true,"source":"The <code>target</code> parameter is an object that is not of the same type as the current permission object."},{"pos":[18864,18999],"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","pos":[0,135]}]},{"pos":[19131,19245],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the permission can be represented as unrestricted.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission can be represented as unrestricted."},{"pos":[19678,19747],"content":"Creates an XML encoding of the security object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]},{"pos":[19759,19931],"content":"Custom code that extends security objects must implement the ToXml and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Custom code that extends security objects must implement the ToXml and &lt;xref:System.Data.Common.DBDataPermission.FromXml%2A&gt; methods to make the objects security encodable.","pos":[0,172],"source":"Custom code that extends security objects must implement the ToXml and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable."}]},{"pos":[20107,20179],"content":"An XML encoding of the security object, including any state information.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]},{"pos":[20694,20792],"content":"Returns a new permission object that is the union of the current and specified permission objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a new permission object that is the union of the current and specified permission objects.","pos":[0,98]}]},{"pos":[20804,21030],"content":"The result of a call to Union is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","needQuote":true,"needEscape":true,"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","pos":[0,226],"nodes":[{"content":"The result of a call to Union is a permission that represents all the operations permitted by both the current permission object and the specified permission object.","pos":[0,165]},{"content":"Any demand that passes either permission passes their union.","pos":[166,226]}]}]},{"pos":[21234,21362],"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","pos":[0,128],"nodes":[{"content":"A permission object to combine with the current permission object.","pos":[0,66]},{"content":"It must be of the same type as the current permission object.","pos":[67,128]}]}]},{"pos":[21434,21553],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]},{"pos":[21717,21802],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> object is not the same type as the current permission object.","needQuote":true,"needEscape":true,"source":"The <code>target</code> object is not the same type as the current permission object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DBDataPermission\n  id: DBDataPermission\n  children:\n  - System.Data.Common.DBDataPermission.#ctor\n  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  - System.Data.Common.DBDataPermission.AllowBlankPassword\n  - System.Data.Common.DBDataPermission.Clear\n  - System.Data.Common.DBDataPermission.Copy\n  - System.Data.Common.DBDataPermission.CreateInstance\n  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsUnrestricted\n  - System.Data.Common.DBDataPermission.ToXml\n  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: DBDataPermission\n  nameWithType: DBDataPermission\n  fullName: System.Data.Common.DBDataPermission\n  type: Class\n  summary: Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.\n  syntax:\n    content: 'public abstract class DBDataPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission()\n  nameWithType: DBDataPermission.DBDataPermission()\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class.\n  syntax:\n    content: protected DBDataPermission ();\n    parameters: []\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  id: '#ctor(System.Data.Common.DBDataPermission)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(DBDataPermission)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class using an existing <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref>.\n  syntax:\n    content: protected DBDataPermission (System.Data.Common.DBDataPermission permission);\n    parameters:\n    - id: permission\n      type: System.Data.Common.DBDataPermission\n      description: An existing <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> used to create a new <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref>.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  id: '#ctor(System.Data.Common.DBDataPermissionAttribute)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(DBDataPermissionAttribute)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class with the specified <xref uid=\"langword_csharp_DBDataPermissionAttribute\" name=\"DBDataPermissionAttribute\" href=\"\"></xref>.\n  syntax:\n    content: protected DBDataPermission (System.Data.Common.DBDataPermissionAttribute permissionAttribute);\n    parameters:\n    - id: permissionAttribute\n      type: System.Data.Common.DBDataPermissionAttribute\n      description: A security action associated with a custom security attribute.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(PermissionState)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  syntax:\n    content: protected DBDataPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(PermissionState,Boolean)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value, and a value indicating whether a blank password is allowed.\n  remarks: The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.\n  syntax:\n    content: protected DBDataPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n    - id: allowBlankPassword\n      type: System.Boolean\n      description: Indicates whether a blank password is allowed.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Add(String,String,KeyRestrictionBehavior)\n  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)\n  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Adds access for the specified connection string to the existing state of the <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref>.\n  remarks: \"This method can be useful when implementing:  \\n  \\n-   A .NET framework data provider.  \\n  \\n-   An API that must assert for data access permission.  \\n  \\n-   An administrative tool or installation program that must modify security policy.  \\n  \\n-   When more than one rule is specified, the more restrictive rule is selected.\"\n  syntax:\n    content: public virtual void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: A permitted connection string.\n    - id: restrictions\n      type: System.String\n      description: String that identifies connection string parameters that are allowed or disallowed.\n    - id: behavior\n      type: System.Data.KeyRestrictionBehavior\n      description: One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> properties.\n  overload: System.Data.Common.DBDataPermission.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword\n  id: AllowBlankPassword\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Gets a value indicating whether a blank password is allowed.\n  remarks: The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the AllowBlankPassword property. Therefore, if you set AllowBlankPassword to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.\n  syntax:\n    content: public bool AllowBlankPassword { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if a blank password is allowed, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Common.DBDataPermission.AllowBlankPassword*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.Clear\n  id: Clear\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DBDataPermission.Clear()\n  fullName: System.Data.Common.DBDataPermission.Clear()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Removes all permissions that were previous added using the <xref:System.Data.Common.DBDataPermission.Add*> method.\n  syntax:\n    content: protected void Clear ();\n    parameters: []\n  overload: System.Data.Common.DBDataPermission.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.Copy\n  id: Copy\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: DBDataPermission.Copy()\n  fullName: System.Data.Common.DBDataPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates and returns an identical copy of the current permission object.\n  remarks: A copy of a permission object represents the same access to resources as the original permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Data.Common.DBDataPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.CreateInstance\n  id: CreateInstance\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: CreateInstance()\n  nameWithType: DBDataPermission.CreateInstance()\n  fullName: System.Data.Common.DBDataPermission.CreateInstance()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates a new instance of the <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> class.\n  syntax:\n    content: protected virtual System.Data.Common.DBDataPermission CreateInstance ();\n    parameters: []\n    return:\n      type: System.Data.Common.DBDataPermission\n      description: A new <xref uid=\"langword_csharp_DBDataPermission\" name=\"DBDataPermission\" href=\"\"></xref> object.\n  overload: System.Data.Common.DBDataPermission.CreateInstance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: DBDataPermission.FromXml(SecurityElement)\n  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  remarks: Custom code that extends security objects needs to implement the `ToXml` and `FromXml` methods to make the objects security encodable.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Data.Common.DBDataPermission.FromXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: DBDataPermission.Intersect(IPermission)\n  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Returns a new permission object representing the intersection of the current permission object and the specified permission object.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to intersect with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) if the intersection is empty.\n  overload: System.Data.Common.DBDataPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic) and is not an instance of the same class as the current permission object.\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: DBDataPermission.IsSubsetOf(IPermission)\n  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Returns a value indicating whether the current permission object is a subset of the specified permission object.\n  remarks: The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current permission object is a subset of the specified permission object, otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Common.DBDataPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is an object that is not of the same type as the current permission object.\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: DBDataPermission.IsUnrestricted()\n  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the permission can be represented as unrestricted.\n  overload: System.Data.Common.DBDataPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.ToXml\n  id: ToXml\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: DBDataPermission.ToXml()\n  fullName: System.Data.Common.DBDataPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Creates an XML encoding of the security object and its current state.\n  remarks: Custom code that extends security objects must implement the ToXml and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Data.Common.DBDataPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: DBDataPermission.Union(IPermission)\n  fullName: System.Data.Common.DBDataPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Common\n  summary: Returns a new permission object that is the union of the current and specified permission objects.\n  remarks: The result of a call to Union is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to combine with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Data.Common.DBDataPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> object is not the same type as the current permission object.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Common.DBDataPermission.#ctor\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission()\n  nameWithType: DBDataPermission.DBDataPermission()\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission()\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(DBDataPermission)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)\n- uid: System.Data.Common.DBDataPermission\n  parent: System.Data.Common\n  isExternal: false\n  name: DBDataPermission\n  nameWithType: DBDataPermission\n  fullName: System.Data.Common.DBDataPermission\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(DBDataPermissionAttribute)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n- uid: System.Data.Common.DBDataPermissionAttribute\n  parent: System.Data.Common\n  isExternal: false\n  name: DBDataPermissionAttribute\n  nameWithType: DBDataPermissionAttribute\n  fullName: System.Data.Common.DBDataPermissionAttribute\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(PermissionState)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(PermissionState,Boolean)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)\n  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Add(String,String,KeyRestrictionBehavior)\n  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)\n  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.KeyRestrictionBehavior\n  parent: System.Data\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: KeyRestrictionBehavior\n  fullName: System.Data.KeyRestrictionBehavior\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword\n- uid: System.Data.Common.DBDataPermission.Clear\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Clear()\n  nameWithType: DBDataPermission.Clear()\n  fullName: System.Data.Common.DBDataPermission.Clear()\n- uid: System.Data.Common.DBDataPermission.Copy\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: DBDataPermission.Copy()\n  fullName: System.Data.Common.DBDataPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Data.Common.DBDataPermission.CreateInstance\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: DBDataPermission.CreateInstance()\n  fullName: System.Data.Common.DBDataPermission.CreateInstance()\n- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: DBDataPermission.FromXml(SecurityElement)\n  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: DBDataPermission.Intersect(IPermission)\n  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: DBDataPermission.IsSubsetOf(IPermission)\n  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: DBDataPermission.IsUnrestricted()\n  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()\n- uid: System.Data.Common.DBDataPermission.ToXml\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: DBDataPermission.ToXml()\n  fullName: System.Data.Common.DBDataPermission.ToXml()\n- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: DBDataPermission.Union(IPermission)\n  fullName: System.Data.Common.DBDataPermission.Union(IPermission)\n- uid: System.Data.Common.DBDataPermission.#ctor*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission\n  nameWithType: DBDataPermission.DBDataPermission\n- uid: System.Data.Common.DBDataPermission.Add*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Add\n  nameWithType: DBDataPermission.Add\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n- uid: System.Data.Common.DBDataPermission.Clear*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Clear\n  nameWithType: DBDataPermission.Clear\n- uid: System.Data.Common.DBDataPermission.Copy*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Copy\n  nameWithType: DBDataPermission.Copy\n- uid: System.Data.Common.DBDataPermission.CreateInstance*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: CreateInstance\n  nameWithType: DBDataPermission.CreateInstance\n- uid: System.Data.Common.DBDataPermission.FromXml*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: DBDataPermission.FromXml\n- uid: System.Data.Common.DBDataPermission.Intersect*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: DBDataPermission.Intersect\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: DBDataPermission.IsSubsetOf\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: DBDataPermission.IsUnrestricted\n- uid: System.Data.Common.DBDataPermission.ToXml*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: DBDataPermission.ToXml\n- uid: System.Data.Common.DBDataPermission.Union*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Union\n  nameWithType: DBDataPermission.Union\n"}