{"nodes":[{"pos":[1306,1494],"content":"Abstract base class for custom activities that implement execution logic using the <xref:System.Activities.NativeActivity.Execute*> method, which has full access to the runtime’s features.","needQuote":true,"needEscape":true,"nodes":[{"content":"Abstract base class for custom activities that implement execution logic using the &lt;xref:System.Activities.NativeActivity.Execute*&gt; method, which has full access to the runtime’s features.","pos":[0,188],"source":"Abstract base class for custom activities that implement execution logic using the <xref:System.Activities.NativeActivity.Execute*> method, which has full access to the runtime’s features."}]},{"pos":[4906,4987],"content":"When implemented in a derived class, creates a new instance of the derived class.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, creates a new instance of the derived class.","pos":[0,81]}]},{"pos":[6048,6141],"content":"When implemented in a derived class, takes actions in response to the activity being aborted.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, takes actions in response to the activity being aborted.","pos":[0,93]}]},{"pos":[6360,6413],"content":"The execution context in which the activity executes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution context in which the activity executes.","pos":[0,53]}]},{"pos":[6988,7083],"content":"Not implemented. Use the <xref:System.Activities.NativeActivity.CacheMetadata*> method instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented. Use the <xref:System.Activities.NativeActivity.CacheMetadata*> method instead.","pos":[0,95],"nodes":[{"content":"Not implemented.","pos":[0,16]},{"content":"Use the &lt;xref:System.Activities.NativeActivity.CacheMetadata*&gt; method instead.","pos":[17,95],"source":" Use the <xref:System.Activities.NativeActivity.CacheMetadata*> method instead."}]}]},{"pos":[7095,7518],"content":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","needQuote":true,"needEscape":true,"nodes":[{"content":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","pos":[0,423],"nodes":[{"content":"Custom activity authors can provide validation logic in an activity's &lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt; override.","pos":[0,136],"source":"Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override."},{"content":"Any exceptions that are thrown from &lt;xref:System.Activities.NativeActivity.CacheMetadata%2A&gt; are not treated as validation errors.","pos":[137,267],"source":" Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors."},{"content":"These exceptions will escape from the call to &lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt; and must be handled by the caller.","pos":[268,423],"source":" These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller."}]}]},{"pos":[7735,7751],"content":"Not implemented.","needQuote":true,"needEscape":true,"nodes":[{"content":"Not implemented.","pos":[0,16]}]},{"pos":[8364,8481],"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,117]}]},{"pos":[8493,9616],"content":"The workflow runtime uses the default implementation of CacheMetadata to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of CacheMetadata examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>](~/add/includes/ajax-current-ext-md.md), or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic. Any exceptions that are thrown from CacheMetadata are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.","needQuote":true,"needEscape":true,"nodes":[{"content":"The workflow runtime uses the default implementation of CacheMetadata to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules.","pos":[0,178]},{"content":"The default implementation of CacheMetadata examines the public members of the activity type using the type’s &lt;xref:System.ComponentModel.TypeDescriptor&gt;.","pos":[179,333],"source":" The default implementation of CacheMetadata examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>."},{"content":"These public members are of type &lt;xref:System.Activities.Argument&gt;, &lt;xref:System.Activities.Variable&gt;, <bpt id=\"p1\">[</bpt>T:System.Collections.Generic.IEnumerable<ph id=\"ph1\">\\&lt;</ph>T:System.Activities.Variable&gt;<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>, &lt;xref:System.Activities.Activity&gt;, <bpt id=\"p2\">[</bpt>T:System.Collections.Generic.IEnumerable<ph id=\"ph2\">\\&lt;</ph>T:System.Activities.Activity&gt;<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>, or &lt;xref:System.Activities.ActivityDelegate&gt;.","pos":[334,745],"source":" These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>](~/add/includes/ajax-current-ext-md.md), or <xref:System.Activities.ActivityDelegate>."},{"content":"You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic.","pos":[746,879]},{"content":"Any exceptions that are thrown from CacheMetadata are not treated as validation errors.","pos":[880,967]},{"content":"These exceptions will escape from the call to &lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt; and must be handled by the caller.","pos":[968,1123],"source":" These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller."}]},{"pos":[10242,10362],"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","needQuote":true,"needEscape":true,"nodes":[{"content":"The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.","pos":[0,120]}]},{"pos":[10935,11034],"content":"When implemented in a derived class, runs logic to cause graceful early completion of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, runs logic to cause graceful early completion of the activity.","pos":[0,99]}]},{"pos":[11629,11682],"content":"The execution context in which the activity executes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution context in which the activity executes.","pos":[0,53]}]},{"pos":[12134,12229],"content":"Gets or sets a value that indicates whether the activity can cause the workflow to become idle.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value that indicates whether the activity can cause the workflow to become idle.","pos":[0,95]}]},{"pos":[12357,12561],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the activity can cause the workflow to become idle. This value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> by default.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the activity can cause the workflow to become idle.","pos":[0,115],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the activity can cause the workflow to become idle."},{"content":"This value is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> by default.","pos":[116,204],"source":" This value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> by default."}]},{"pos":[13139,13212],"content":"When implemented in a derived class, runs the activity’s execution logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, runs the activity’s execution logic.","pos":[0,73]}]},{"pos":[13809,13862],"content":"The execution context in which the activity executes.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution context in which the activity executes.","pos":[0,53]}]},{"pos":[14320,14356],"content":"The execution logic of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution logic of the activity.","pos":[0,36]}]},{"pos":[14551,14571],"content":"The execution logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"The execution logic.","pos":[0,20]}]},{"pos":[15071,15127],"content":"Gets or sets the implementation version of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the implementation version of the activity.","pos":[0,56]}]},{"pos":[15279,15322],"content":"The implementation version of the activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The implementation version of the activity.","pos":[0,43]}]},{"pos":[16152,16211],"content":"Raises an event when creating a map for the dynamic update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises an event when creating a map for the dynamic update.","pos":[0,59]}]},{"pos":[16534,16547],"content":"The metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata.","pos":[0,13]}]},{"pos":[16633,16655],"content":"The original activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original activity.","pos":[0,22]}]},{"pos":[17418,17477],"content":"Raises an event when creating a map for the dynamic update.","needQuote":true,"needEscape":true,"nodes":[{"content":"Raises an event when creating a map for the dynamic update.","pos":[0,59]}]},{"pos":[17780,17793],"content":"The metadata.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata.","pos":[0,13]}]},{"pos":[17879,17901],"content":"The original activity.","needQuote":true,"needEscape":true,"nodes":[{"content":"The original activity.","pos":[0,22]}]},{"pos":[18583,18661],"content":"Updates the instance of <bpt id=\"p1\">&lt;xref href=\"System.Activities.NativeActivity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Updates the instance of <xref href=\"System.Activities.NativeActivity\"></xref>."},{"pos":[18931,18950],"content":"The update context.","needQuote":true,"needEscape":true,"nodes":[{"content":"The update context.","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.NativeActivity\n  id: NativeActivity\n  children:\n  - System.Activities.NativeActivity.#ctor\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  langs:\n  - csharp\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n  type: Class\n  summary: Abstract base class for custom activities that implement execution logic using the <xref:System.Activities.NativeActivity.Execute*> method, which has full access to the runtime’s features.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n```  \\npublic sealed class MySequence : NativeActivity  \\n{  \\n    Collection<Activity> children;  \\n    Collection<Variable> variables;  \\n    Variable<int> currentIndex;  \\n    CompletionCallback onChildComplete;  \\n  \\n    public MySequence()  \\n        : base()  \\n    {  \\n        this.children = new Collection<Activity>();  \\n        this.variables = new Collection<Variable>();  \\n        this.currentIndex = new Variable<int>();  \\n    }  \\n  \\n    public Collection<Activity> Activities  \\n    {  \\n        get  \\n        {  \\n            return this.children;  \\n        }  \\n    }  \\n    public Collection<Variable> Variables  \\n    {  \\n        get  \\n        {  \\n            return this.variables;  \\n        }  \\n    }  \\n    protected override void CacheMetadata(NativeActivityMetadata metadata)  \\n    {  \\n        //call base.CacheMetadata to add the Activities and Variables to this activity's metadata  \\n        base.CacheMetadata(metadata);  \\n        //add the private implementation variable: currentIndex   \\n        metadata.AddImplementationVariable(this.currentIndex);  \\n    }                     \\n  \\n    protected override void Execute(NativeActivityContext context)  \\n    {  \\n        InternalExecute(context, null);  \\n    }  \\n    void InternalExecute(NativeActivityContext context, ActivityInstance instance)  \\n    {  \\n        //grab the index of the current Activity  \\n        int currentActivityIndex = this.currentIndex.Get(context);  \\n        if (currentActivityIndex == Activities.Count)  \\n        {  \\n            //if the currentActivityIndex is equal to the count of MySequence's Activities  \\n            //MySequence is complete  \\n            return;  \\n        }  \\n  \\n        if (this.onChildComplete == null)  \\n        {  \\n            //on completion of the current child, have the runtime call back on this method  \\n            this.onChildComplete = new CompletionCallback(InternalExecute);  \\n        }  \\n        //grab the next Activity in MySequence.Activities and schedule it  \\n        Activity nextChild = Activities[currentActivityIndex];  \\n        context.ScheduleActivity(nextChild, this.onChildComplete);  \\n  \\n        //increment the currentIndex  \\n        this.currentIndex.Set(context, ++currentActivityIndex);  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: 'public abstract class NativeActivity : System.Activities.Activity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.#ctor\n  id: '#ctor'\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: NativeActivity()\n  nameWithType: NativeActivity.NativeActivity()\n  fullName: System.Activities.NativeActivity.NativeActivity()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, creates a new instance of the derived class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_CustomCompositeNativeActivity#1](~/add/codesnippet/csharp/wfs_customcompositenativeactivity.workflow/mysequence.cs#1)]\"\n  syntax:\n    content: protected NativeActivity ();\n    parameters: []\n  overload: System.Activities.NativeActivity.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  id: Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: System.Activities.NativeActivity.Abort(NativeActivityAbortContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, takes actions in response to the activity being aborted.\n  syntax:\n    content: protected virtual void Abort (System.Activities.NativeActivityAbortContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityAbortContext\n      description: The execution context in which the activity executes.\n  overload: System.Activities.NativeActivity.Abort*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  id: CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.NativeActivity.CacheMetadata(ActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Not implemented. Use the <xref:System.Activities.NativeActivity.CacheMetadata*> method instead.\n  remarks: Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override. Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.\n  syntax:\n    content: protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.ActivityMetadata\n      description: Not implemented.\n  overload: System.Activities.NativeActivity.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.NativeActivity.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Creates and validates a description of the activity’s arguments, variables, child activities, and activity delegates.\n  remarks: The workflow runtime uses the default implementation of CacheMetadata to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules. The default implementation of CacheMetadata examines the public members of the activity type using the type’s <xref:System.ComponentModel.TypeDescriptor>. These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable>](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity>](~/add/includes/ajax-current-ext-md.md), or <xref:System.Activities.ActivityDelegate>. You can override this method to customize the building of the activity’s run-time description and to provide custom validation logic. Any exceptions that are thrown from CacheMetadata are not treated as validation errors. These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.\n  example:\n  - \"The following code sample demonstrates using CacheMetadata in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Custom Composite using Native Activity](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_CustomCompositeNativeActivity#2](~/add/codesnippet/csharp/wfs_customcompositenativeactivity.workflow/mysequence.cs#2)]\"\n  syntax:\n    content: protected virtual void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: The activity’s metadata that encapsulates the activity’s arguments, variables, child activities, and activity delegates.\n  overload: System.Activities.NativeActivity.CacheMetadata*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: System.Activities.NativeActivity.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, runs logic to cause graceful early completion of the activity.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Non-Generic ParallelForEach](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_NonGenericParallelForEach#2](~/add/codesnippet/csharp/nongenericparallelforeach/parallelforeach.cs#2)]\"\n  syntax:\n    content: protected virtual void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The execution context in which the activity executes.\n  overload: System.Activities.NativeActivity.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: System.Activities.NativeActivity.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets a value that indicates whether the activity can cause the workflow to become idle.\n  syntax:\n    content: protected virtual bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the activity can cause the workflow to become idle. This value is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> by default.\n  overload: System.Activities.NativeActivity.CanInduceIdle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: NativeActivity.Execute(NativeActivityContext)\n  fullName: System.Activities.NativeActivity.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: When implemented in a derived class, runs the activity’s execution logic.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>. This example is from the [Non-Generic ParallelForEach](~/add/includes/ajax-current-ext-md.md) sample.  \\n  \\n [!code-cs[wfs_NonGenericParallelForEach#2](~/add/codesnippet/csharp/nongenericparallelforeach/parallelforeach.cs#2)]\"\n  syntax:\n    content: protected abstract void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: The execution context in which the activity executes.\n  overload: System.Activities.NativeActivity.Execute*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.Implementation\n  id: Implementation\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: System.Activities.NativeActivity.Implementation\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: The execution logic of the activity.\n  syntax:\n    content: protected override sealed Func<System.Activities.Activity> Implementation { get; set; }\n    return:\n      type: System.Func{System.Activities.Activity}\n      description: The execution logic.\n  overload: System.Activities.NativeActivity.Implementation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  id: ImplementationVersion\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: System.Activities.NativeActivity.ImplementationVersion\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets the implementation version of the activity.\n  syntax:\n    content: protected override sealed Version ImplementationVersion { get; set; }\n    return:\n      type: System.Version\n      description: The implementation version of the activity.\n  overload: System.Activities.NativeActivity.ImplementationVersion*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Raises an event when creating a map for the dynamic update.\n  syntax:\n    content: protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: The metadata.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: The original activity.\n  overload: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Raises an event when creating a map for the dynamic update.\n  syntax:\n    content: protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.UpdateMapMetadata\n      description: The metadata.\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: The original activity.\n  overload: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  langs:\n  - csharp\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: System.Activities.NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Updates the instance of <xref href=\"System.Activities.NativeActivity\"></xref>.\n  syntax:\n    content: protected virtual void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);\n    parameters:\n    - id: updateContext\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n      description: The update context.\n  overload: System.Activities.NativeActivity.UpdateInstance*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Activity\n  isExternal: false\n  name: System.Activities.Activity\n- uid: System.Activities.NativeActivity.#ctor\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: NativeActivity()\n  nameWithType: NativeActivity.NativeActivity()\n  fullName: System.Activities.NativeActivity.NativeActivity()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: System.Activities.NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivityAbortContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityAbortContext\n  nameWithType: NativeActivityAbortContext\n  fullName: System.Activities.NativeActivityAbortContext\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: System.Activities.NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.NativeActivity.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: System.Activities.NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: System.Activities.NativeActivity.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: NativeActivity.Execute(NativeActivityContext)\n  fullName: System.Activities.NativeActivity.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: System.Activities.NativeActivity.Implementation\n- uid: System.Func{System.Activities.Activity}\n  parent: System\n  isExternal: true\n  name: Func<Activity>\n  nameWithType: Func<Activity>\n  fullName: System.Func<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: Func<System.Activities.Activity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: System.Activities.NativeActivity.ImplementationVersion\n- uid: System.Version\n  parent: System\n  isExternal: true\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n  fullName: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: System.Activities.NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateContext\n  nameWithType: NativeActivityUpdateContext\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext\n- uid: System.Activities.NativeActivity.#ctor*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity.NativeActivity\n- uid: System.Activities.NativeActivity.Abort*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort\n  nameWithType: NativeActivity.Abort\n- uid: System.Activities.NativeActivity.CacheMetadata*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: NativeActivity.CacheMetadata\n- uid: System.Activities.NativeActivity.Cancel*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: NativeActivity.Cancel\n- uid: System.Activities.NativeActivity.CanInduceIdle*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n- uid: System.Activities.NativeActivity.Execute*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Execute\n  nameWithType: NativeActivity.Execute\n- uid: System.Activities.NativeActivity.Implementation*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap\n- uid: System.Activities.NativeActivity.UpdateInstance*\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance\n  nameWithType: NativeActivity.UpdateInstance\n"}