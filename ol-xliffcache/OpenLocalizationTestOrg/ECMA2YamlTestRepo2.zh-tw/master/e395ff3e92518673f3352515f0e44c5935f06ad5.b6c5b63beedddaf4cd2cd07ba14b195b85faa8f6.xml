{"nodes":[{"pos":[632,799],"content":"Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component. This class cannot be inherited.","pos":[0,167],"nodes":[{"content":"Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component.","pos":[0,135]},{"content":"This class cannot be inherited.","pos":[136,167]}]}]},{"pos":[811,936],"content":"The context associated with the activity is completely determined by a <xref:System.EnterpriseServices.ServiceConfig> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context associated with the activity is completely determined by a &lt;xref:System.EnterpriseServices.ServiceConfig&gt; object.","pos":[0,125],"source":"The context associated with the activity is completely determined by a <xref:System.EnterpriseServices.ServiceConfig> object."}]},{"pos":[1860,1956],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.EnterpriseServices.Activity\"></xref> class."},{"pos":[1968,2243],"content":"Creates an <xref:System.EnterpriseServices.Activity> that is used to submit batch work to COM+ services. The context associated with the activity is completely determined by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed through the `cfg` parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an &lt;xref:System.EnterpriseServices.Activity&gt; that is used to submit batch work to COM+ services.","pos":[0,104],"source":"Creates an <xref:System.EnterpriseServices.Activity> that is used to submit batch work to COM+ services."},{"content":"The context associated with the activity is completely determined by the &lt;xref:System.EnterpriseServices.ServiceConfig&gt; object that is passed through the <ph id=\"ph1\">`cfg`</ph> parameter.","pos":[105,275],"source":" The context associated with the activity is completely determined by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed through the `cfg` parameter."}]},{"pos":[2683,2818],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ServiceConfig\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains the configuration information for the services to be used.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> that contains the configuration information for the services to be used."},{"pos":[3005,3102],"content":"<bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.Activity\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not supported on the current platform.","needQuote":true,"needEscape":true,"source":"<xref href=\"System.EnterpriseServices.Activity\"></xref> is not supported on the current platform."},{"pos":[3635,3693],"content":"Runs the specified user-defined batch work asynchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs the specified user-defined batch work asynchronously.","pos":[0,58]}]},{"pos":[4109,4219],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.IServiceCall\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is used to implement the batch work.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.EnterpriseServices.IServiceCall\"></xref> object that is used to implement the batch work."},{"pos":[4733,4783],"content":"Binds the user-defined work to the current thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Binds the user-defined work to the current thread.","pos":[0,50]}]},{"pos":[4795,5348],"content":"BindToCurrentThread binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA). BindToCurrentThread has no effect if the current thread is being run in the multithreaded apartment (MTA). The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object.","needQuote":true,"needEscape":true,"nodes":[{"content":"BindToCurrentThread binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA). BindToCurrentThread has no effect if the current thread is being run in the multithreaded apartment (MTA). The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object.","pos":[0,553],"nodes":[{"content":"BindToCurrentThread binds the batch work that is submitted by the &lt;xref:System.EnterpriseServices.Activity.SynchronousCall%2A&gt; or &lt;xref:System.EnterpriseServices.Activity.AsynchronousCall%2A&gt; methods to the current single-threaded apartment (STA).","pos":[0,247],"source":"BindToCurrentThread binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA)."},{"content":"BindToCurrentThread has no effect if the current thread is being run in the multithreaded apartment (MTA).","pos":[248,354]},{"content":"The current thread model is determined by the configuration of the &lt;xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A&gt; property of the &lt;xref:System.EnterpriseServices.ServiceConfig&gt; object.","pos":[355,553],"source":" The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object."}]}]},{"pos":[6039,6096],"content":"Runs the specified user-defined batch work synchronously.","needQuote":true,"needEscape":true,"nodes":[{"content":"Runs the specified user-defined batch work synchronously.","pos":[0,57]}]},{"pos":[6310,6420],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.IServiceCall\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that is used to implement the batch work.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.EnterpriseServices.IServiceCall\"></xref> object that is used to implement the batch work."},{"pos":[6918,7147],"content":"Unbinds the batch work that is submitted by the &lt;xref:System.EnterpriseServices.Activity.SynchronousCall<bpt id=\"p1\">*</bpt>&gt; or &lt;xref:System.EnterpriseServices.Activity.AsynchronousCall<ept id=\"p1\">*</ept>&gt; methods from the thread on which the batch work is running.","needQuote":true,"needEscape":true,"source":"Unbinds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall*> or <xref:System.EnterpriseServices.Activity.AsynchronousCall*> methods from the thread on which the batch work is running."},{"pos":[7159,7245],"content":"UnbindFromThread has no effect if the batch work was not previously bound to a thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"UnbindFromThread has no effect if the batch work was not previously bound to a thread.","pos":[0,86]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.EnterpriseServices.Activity\n  id: Activity\n  children:\n  - System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)\n  - System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)\n  - System.EnterpriseServices.Activity.BindToCurrentThread\n  - System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)\n  - System.EnterpriseServices.Activity.UnbindFromThread\n  langs:\n  - csharp\n  name: Activity\n  nameWithType: Activity\n  fullName: System.EnterpriseServices.Activity\n  type: Class\n  summary: Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component. This class cannot be inherited.\n  remarks: The context associated with the activity is completely determined by a <xref:System.EnterpriseServices.ServiceConfig> object.\n  example:\n  - \"The following code example demonstrates how to use the Activity class and use the synchronization service.  \\n  \\n [!code-cs[EnterpriseServices_Activity#0](~/add/codesnippet/csharp/t-system.enterpriseservi_28_1.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class Activity\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)\n  id: '#ctor(System.EnterpriseServices.ServiceConfig)'\n  parent: System.EnterpriseServices.Activity\n  langs:\n  - csharp\n  name: Activity(ServiceConfig)\n  nameWithType: Activity.Activity(ServiceConfig)\n  fullName: System.EnterpriseServices.Activity.Activity(ServiceConfig)\n  type: Constructor\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Initializes a new instance of the <xref href=\"System.EnterpriseServices.Activity\"></xref> class.\n  remarks: Creates an <xref:System.EnterpriseServices.Activity> that is used to submit batch work to COM+ services. The context associated with the activity is completely determined by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed through the `cfg` parameter.\n  example:\n  - \"The following code example demonstrates how to initialize a new instance of the <xref:System.EnterpriseServices.Activity> class.  \\n  \\n [!code-cs[EnterpriseServices_Activity#1](~/add/codesnippet/csharp/74b091f6-67a9-4b43-89dc-_1.cs)]\"\n  syntax:\n    content: public Activity (System.EnterpriseServices.ServiceConfig cfg);\n    parameters:\n    - id: cfg\n      type: System.EnterpriseServices.ServiceConfig\n      description: A <xref href=\"System.EnterpriseServices.ServiceConfig\"></xref> that contains the configuration information for the services to be used.\n  overload: System.EnterpriseServices.Activity.#ctor*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.EnterpriseServices.Activity\"></xref> is not supported on the current platform.\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)\n  id: AsynchronousCall(System.EnterpriseServices.IServiceCall)\n  parent: System.EnterpriseServices.Activity\n  langs:\n  - csharp\n  name: AsynchronousCall(IServiceCall)\n  nameWithType: Activity.AsynchronousCall(IServiceCall)\n  fullName: System.EnterpriseServices.Activity.AsynchronousCall(IServiceCall)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Runs the specified user-defined batch work asynchronously.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use this method.  \\n  \\n [!code-cs[EnterpriseServices_Activity#2](~/add/codesnippet/csharp/f0e8808c-d08c-49e7-8cd4-_1.cs)]\"\n  syntax:\n    content: public void AsynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);\n    parameters:\n    - id: serviceCall\n      type: System.EnterpriseServices.IServiceCall\n      description: A <xref href=\"System.EnterpriseServices.IServiceCall\"></xref> object that is used to implement the batch work.\n  overload: System.EnterpriseServices.Activity.AsynchronousCall*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Activity.BindToCurrentThread\n  id: BindToCurrentThread\n  parent: System.EnterpriseServices.Activity\n  langs:\n  - csharp\n  name: BindToCurrentThread()\n  nameWithType: Activity.BindToCurrentThread()\n  fullName: System.EnterpriseServices.Activity.BindToCurrentThread()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Binds the user-defined work to the current thread.\n  remarks: BindToCurrentThread binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA). BindToCurrentThread has no effect if the current thread is being run in the multithreaded apartment (MTA). The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object.\n  syntax:\n    content: public void BindToCurrentThread ();\n    parameters: []\n  overload: System.EnterpriseServices.Activity.BindToCurrentThread*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)\n  id: SynchronousCall(System.EnterpriseServices.IServiceCall)\n  parent: System.EnterpriseServices.Activity\n  langs:\n  - csharp\n  name: SynchronousCall(IServiceCall)\n  nameWithType: Activity.SynchronousCall(IServiceCall)\n  fullName: System.EnterpriseServices.Activity.SynchronousCall(IServiceCall)\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Runs the specified user-defined batch work synchronously.\n  syntax:\n    content: public void SynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);\n    parameters:\n    - id: serviceCall\n      type: System.EnterpriseServices.IServiceCall\n      description: A <xref href=\"System.EnterpriseServices.IServiceCall\"></xref> object that is used to implement the batch work.\n  overload: System.EnterpriseServices.Activity.SynchronousCall*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.EnterpriseServices.Activity.UnbindFromThread\n  id: UnbindFromThread\n  parent: System.EnterpriseServices.Activity\n  langs:\n  - csharp\n  name: UnbindFromThread()\n  nameWithType: Activity.UnbindFromThread()\n  fullName: System.EnterpriseServices.Activity.UnbindFromThread()\n  type: Method\n  assemblies:\n  - System.EnterpriseServices\n  namespace: System.EnterpriseServices\n  summary: Unbinds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall*> or <xref:System.EnterpriseServices.Activity.AsynchronousCall*> methods from the thread on which the batch work is running.\n  remarks: UnbindFromThread has no effect if the batch work was not previously bound to a thread.\n  syntax:\n    content: public void UnbindFromThread ();\n    parameters: []\n  overload: System.EnterpriseServices.Activity.UnbindFromThread*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.PlatformNotSupportedException\n  isExternal: true\n  name: System.PlatformNotSupportedException\n- uid: System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: Activity(ServiceConfig)\n  nameWithType: Activity.Activity(ServiceConfig)\n  fullName: System.EnterpriseServices.Activity.Activity(ServiceConfig)\n- uid: System.EnterpriseServices.ServiceConfig\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: ServiceConfig\n  nameWithType: ServiceConfig\n  fullName: System.EnterpriseServices.ServiceConfig\n- uid: System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: AsynchronousCall(IServiceCall)\n  nameWithType: Activity.AsynchronousCall(IServiceCall)\n  fullName: System.EnterpriseServices.Activity.AsynchronousCall(IServiceCall)\n- uid: System.EnterpriseServices.IServiceCall\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: IServiceCall\n  nameWithType: IServiceCall\n  fullName: System.EnterpriseServices.IServiceCall\n- uid: System.EnterpriseServices.Activity.BindToCurrentThread\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: BindToCurrentThread()\n  nameWithType: Activity.BindToCurrentThread()\n  fullName: System.EnterpriseServices.Activity.BindToCurrentThread()\n- uid: System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: SynchronousCall(IServiceCall)\n  nameWithType: Activity.SynchronousCall(IServiceCall)\n  fullName: System.EnterpriseServices.Activity.SynchronousCall(IServiceCall)\n- uid: System.EnterpriseServices.Activity.UnbindFromThread\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: UnbindFromThread()\n  nameWithType: Activity.UnbindFromThread()\n  fullName: System.EnterpriseServices.Activity.UnbindFromThread()\n- uid: System.EnterpriseServices.Activity.#ctor*\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: Activity\n  nameWithType: Activity.Activity\n- uid: System.EnterpriseServices.Activity.AsynchronousCall*\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: AsynchronousCall\n  nameWithType: Activity.AsynchronousCall\n- uid: System.EnterpriseServices.Activity.BindToCurrentThread*\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: BindToCurrentThread\n  nameWithType: Activity.BindToCurrentThread\n- uid: System.EnterpriseServices.Activity.SynchronousCall*\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: SynchronousCall\n  nameWithType: Activity.SynchronousCall\n- uid: System.EnterpriseServices.Activity.UnbindFromThread*\n  parent: System.EnterpriseServices.Activity\n  isExternal: false\n  name: UnbindFromThread\n  nameWithType: Activity.UnbindFromThread\n"}