{"nodes":[{"pos":[774,868],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement.ManipulationStarted\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.UIElement.ManipulationStarted\"></xref> event."},{"pos":[1887,1912],"content":"Cancels the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancels the manipulation.","pos":[0,25]}]},{"pos":[1924,2098],"content":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the method succeeds, the default &lt;xref:System.Windows.Input.TouchDevice&gt; sends previous touch down events as mouse down events and future manipulation events do not occur.","pos":[0,174],"source":"If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur."}]},{"pos":[2222,2391],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if manipulation was successfully, otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if manipulation was successfully, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[2906,2949],"content":"Completes the manipulation without inertia.","needQuote":true,"needEscape":true,"nodes":[{"content":"Completes the manipulation without inertia.","pos":[0,43]}]},{"pos":[3882,3894],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3964,3976],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4564,4693],"content":"Gets the container that the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*> property is relative to.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the container that the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*&gt; property is relative to.","pos":[0,129],"source":"Gets the container that the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*> property is relative to."}]},{"pos":[4856,4980],"content":"The container that the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*> property is relative to.","needQuote":true,"needEscape":true,"nodes":[{"content":"The container that the &lt;xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*&gt; property is relative to.","pos":[0,124],"source":"The container that the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*> property is relative to."}]},{"pos":[5556,5610],"content":"Gets the point from which the manipulation originated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the point from which the manipulation originated.","pos":[0,54]}]},{"pos":[5622,5753],"content":"If two points of contact initiate the manipulation, the ManipulationOrigin property is the point between the two points of contact.","needQuote":true,"needEscape":true,"nodes":[{"content":"If two points of contact initiate the manipulation, the ManipulationOrigin property is the point between the two points of contact.","pos":[0,131]}]},{"pos":[5897,5946],"content":"The point from which the manipulation originated.","needQuote":true,"needEscape":true,"nodes":[{"content":"The point from which the manipulation originated.","pos":[0,49]}]},{"pos":[6489,6574],"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of objects that represents the touch contacts for the manipulation.","pos":[0,85]}]},{"pos":[6818,6898],"content":"A collection of objects that represents the touch contacts for the manipulation.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of objects that represents the touch contacts for the manipulation.","pos":[0,80]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationStartedEventArgs\n  id: ManipulationStartedEventArgs\n  children:\n  - System.Windows.Input.ManipulationStartedEventArgs.Cancel\n  - System.Windows.Input.ManipulationStartedEventArgs.Complete\n  - System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer\n  - System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin\n  - System.Windows.Input.ManipulationStartedEventArgs.Manipulators\n  langs:\n  - csharp\n  name: ManipulationStartedEventArgs\n  nameWithType: ManipulationStartedEventArgs\n  fullName: System.Windows.Input.ManipulationStartedEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Windows.UIElement.ManipulationStarted\"></xref> event.\n  syntax:\n    content: 'public sealed class ManipulationStartedEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Cancel\n  id: Cancel\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: ManipulationStartedEventArgs.Cancel()\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.Cancel()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Cancels the manipulation.\n  remarks: If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch down events as mouse down events and future manipulation events do not occur.\n  syntax:\n    content: public bool Cancel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if manipulation was successfully, otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Input.ManipulationStartedEventArgs.Cancel*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Complete\n  id: Complete\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  langs:\n  - csharp\n  name: Complete()\n  nameWithType: ManipulationStartedEventArgs.Complete()\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.Complete()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Completes the manipulation without inertia.\n  syntax:\n    content: public void Complete ();\n    parameters: []\n  overload: System.Windows.Input.ManipulationStartedEventArgs.Complete*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationStartedEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: To be added.\n    - id: genericTarget\n      type: System.Object\n      description: To be added.\n  overload: System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer\n  id: ManipulationContainer\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  langs:\n  - csharp\n  name: ManipulationContainer\n  nameWithType: ManipulationStartedEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the container that the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*> property is relative to.\n  syntax:\n    content: public System.Windows.IInputElement ManipulationContainer { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The container that the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*> property is relative to.\n  overload: System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin\n  id: ManipulationOrigin\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  langs:\n  - csharp\n  name: ManipulationOrigin\n  nameWithType: ManipulationStartedEventArgs.ManipulationOrigin\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the point from which the manipulation originated.\n  remarks: If two points of contact initiate the manipulation, the ManipulationOrigin property is the point between the two points of contact.\n  syntax:\n    content: public System.Windows.Point ManipulationOrigin { get; }\n    return:\n      type: System.Windows.Point\n      description: The point from which the manipulation originated.\n  overload: System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Manipulators\n  id: Manipulators\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  langs:\n  - csharp\n  name: Manipulators\n  nameWithType: ManipulationStartedEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.Manipulators\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a collection of objects that represents the touch contacts for the manipulation.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n      description: A collection of objects that represents the touch contacts for the manipulation.\n  overload: System.Windows.Input.ManipulationStartedEventArgs.Manipulators*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Cancel\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: Cancel()\n  nameWithType: ManipulationStartedEventArgs.Cancel()\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.Cancel()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Complete\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: Complete()\n  nameWithType: ManipulationStartedEventArgs.Complete()\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.Complete()\n- uid: System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationStartedEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: true\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationStartedEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: ManipulationOrigin\n  nameWithType: ManipulationStartedEventArgs.ManipulationOrigin\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Manipulators\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationStartedEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationStartedEventArgs.Manipulators\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerable<IManipulator>\n  nameWithType: IEnumerable<IManipulator>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: IEnumerable<System.Windows.Input.IManipulator>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Input.IManipulator\n    name: IManipulator\n    nameWithType: IManipulator\n    fullName: IManipulator\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Cancel*\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: ManipulationStartedEventArgs.Cancel\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Complete*\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: Complete\n  nameWithType: ManipulationStartedEventArgs.Complete\n- uid: System.Windows.Input.ManipulationStartedEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: ManipulationStartedEventArgs.InvokeEventHandler\n- uid: System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer*\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationStartedEventArgs.ManipulationContainer\n- uid: System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin*\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: ManipulationOrigin\n  nameWithType: ManipulationStartedEventArgs.ManipulationOrigin\n- uid: System.Windows.Input.ManipulationStartedEventArgs.Manipulators*\n  parent: System.Windows.Input.ManipulationStartedEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationStartedEventArgs.Manipulators\n"}