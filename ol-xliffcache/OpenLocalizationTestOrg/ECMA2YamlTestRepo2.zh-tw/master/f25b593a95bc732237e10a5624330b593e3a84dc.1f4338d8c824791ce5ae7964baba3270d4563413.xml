{"nodes":[{"pos":[960,1051],"content":"Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.","pos":[0,91],"nodes":[{"content":"Controls access permissions in ASP.NET hosted environments.","pos":[0,59]},{"content":"This class cannot be inherited.","pos":[60,91]}]}]},{"pos":[1064,2848],"content":"The AspNetHostingPermission class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel> trust level to access protected ASP.NET classes.       The AspNetHostingPermission class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element. By default, the `level` attribute of the `trust` configuration element is set to `Full`. That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel> level. When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the AspNetHostingPermission class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain. For more information, see [ASP.NET Trust Levels and Policy Files](~/add/includes/ajax-current-ext-md.md).       It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted. For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`.       The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the AspNetHostingPermission permission. That is, the AspNetHostingPermission permission is only assigned, by default, to applications that are running under `Full` trust.","needQuote":false,"needEscape":true,"nodes":[{"content":"The AspNetHostingPermission class is used in conjunction with code access security to help protect public types in the System.Web namespaces.","pos":[0,141]},{"content":"Code must be assigned at least the &lt;xref:System.Web.AspNetHostingPermissionLevel&gt; trust level to access protected ASP.NET classes.","pos":[142,272],"source":" Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel> trust level to access protected ASP.NET classes."},{"content":"The AspNetHostingPermission class's &lt;xref:System.Web.AspNetHostingPermission.Level%2A&gt; property is set by configuring the appropriate trust level in the  configuration element.","pos":[279,455],"source":"       The AspNetHostingPermission class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element."},{"content":"By default, the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element is set to <ph id=\"ph3\">`Full`</ph>.","pos":[456,544],"source":" By default, the `level` attribute of the `trust` configuration element is set to `Full`."},{"content":"That is, by default, ASP.NET applications run under the &lt;xref:System.Web.AspNetHostingPermissionLevel&gt; level.","pos":[545,654],"source":" That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel> level."},{"content":"When an ASP.NET application domain is created, ASP.NET reads the value specified for the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element, creates an instance of the AspNetHostingPermission class with the specified &lt;xref:System.Web.AspNetHostingPermission.Level%2A&gt; attribute, and then adds the class to the permission set for the application domain.","pos":[655,1011],"source":" When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the AspNetHostingPermission class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Trust Levels and Policy Files<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1012,1117],"source":" For more information, see [ASP.NET Trust Levels and Policy Files](~/add/includes/ajax-current-ext-md.md)."},{"content":"It is recommended that you set the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element to <ph id=\"ph3\">`High`</ph> for sites that are trusted.","pos":[1124,1251],"source":"       It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted."},{"content":"For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the <ph id=\"ph1\">`level`</ph> attribute of the <ph id=\"ph2\">`trust`</ph> configuration element to <ph id=\"ph3\">`Medium`</ph>.","pos":[1252,1465],"source":" For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`."},{"content":"The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the AspNetHostingPermission permission.","pos":[1472,1647]},{"content":"That is, the AspNetHostingPermission permission is only assigned, by default, to applications that are running under <ph id=\"ph1\">`Full`</ph> trust.","pos":[1648,1778],"source":" That is, the AspNetHostingPermission permission is only assigned, by default, to applications that are running under `Full` trust."}]},{"pos":[4839,5037],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified <bpt id=\"p2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value."},{"pos":[5252,5337],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value."},{"pos":[5500,5628],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not set to one of the <bpt id=\"p1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"<code>state</code> is not set to one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration values."},{"pos":[6198,6330],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified permission level.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified permission level."},{"pos":[6537,6619],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration value.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration value."},{"pos":[7028,7136],"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, creates and returns an identical copy of the current permission object.","pos":[0,108]}]},{"pos":[7303,7343],"content":"A copy of the current permission object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]},{"pos":[7877,7954],"content":"Reconstructs a permission object with a specified state from an XML encoding.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reconstructs a permission object with a specified state from an XML encoding.","pos":[0,77]}]},{"pos":[7966,8155],"content":"For details about formatting the XML representation of permission object state, see <bpt id=\"p1\">[</bpt>Implementing a Custom Permission<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585)</ept>.","needQuote":true,"needEscape":true,"source":"For details about formatting the XML representation of permission object state, see [Implementing a Custom Permission](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585)."},{"pos":[8364,8493],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the XML encoding to use to reconstruct the permission object.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding to use to reconstruct the permission object."},{"pos":[8666,8759],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[8855,9246],"content":"The &lt;xref:System.Security.SecurityElement.Tag<bpt id=\"p1\">*</bpt>&gt; property of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">securityElement</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not equal to \"IPermission\".       <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_-\" name=\"-\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> or-       The class &lt;xref:System.Security.SecurityElement.Attribute<ept id=\"p1\">*</ept>&gt; of <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph2\">securityElement</ph><ept id=\"p4\">&lt;/code&gt;</ept> is <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> or an empty string (\"\").","needQuote":false,"needEscape":true,"source":"The <xref:System.Security.SecurityElement.Tag*> property of <code>securityElement</code> is not equal to \"IPermission\".       <xref uid=\"langword_csharp_-\" name=\"-\" href=\"\"></xref> or-       The class <xref:System.Security.SecurityElement.Attribute*> of <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."},{"pos":[9701,9851],"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,150]}]},{"pos":[10059,10166],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[10238,10480],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the intersection of the current permission and the specified permission; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the intersection is empty.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.IPermission\"></xref> that represents the intersection of the current permission and the specified permission; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty."},{"pos":[10647,10733],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not an <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>."},{"pos":[11192,11290],"content":"Returns a value indicating whether the current permission is a subset of the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the current permission is a subset of the specified permission.","pos":[0,98]}]},{"pos":[11476,11661],"content":"The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission. It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to combine with the current permission.","pos":[0,92],"source":"The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission."},{"content":"It must be of the same type as the current <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[93,185],"source":" It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>."}]},{"pos":[11720,11998],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current <bpt id=\"p2\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a subset of the specified <bpt id=\"p3\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12166,12252],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not an <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>."},{"pos":[12640,12766],"content":"Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.","pos":[0,126]}]},{"pos":[12898,13109],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if unrestricted use of the resource protected by the permission is allowed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unrestricted use of the resource protected by the permission is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13528,13605],"content":"Gets or sets the current hosting permission level for an ASP.NET application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the current hosting permission level for an ASP.NET application.","pos":[0,77]}]},{"pos":[13779,13870],"content":"One of the <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermissionLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration values.","needQuote":true,"needEscape":true,"source":"One of the <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration values."},{"pos":[14284,14355],"content":"Creates an XML encoding of the permission object and its current state.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XML encoding of the permission object and its current state.","pos":[0,71]}]},{"pos":[14531,14672],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> containing the XML encoding of the permission object, including any state information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding of the permission object, including any state information."},{"pos":[15177,15271],"content":"Creates a permission that is the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]},{"pos":[15475,15582],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","needQuote":true,"needEscape":true,"nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]},{"pos":[15654,15787],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Security.IPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the union of the current permission and the specified permission.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission."},{"pos":[15950,16036],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not an <bpt id=\"p1\">&lt;xref href=\"System.Web.AspNetHostingPermission\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.AspNetHostingPermission\n  id: AspNetHostingPermission\n  children:\n  - System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  - System.Web.AspNetHostingPermission.Copy\n  - System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  - System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  - System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Web.AspNetHostingPermission.IsUnrestricted\n  - System.Web.AspNetHostingPermission.Level\n  - System.Web.AspNetHostingPermission.ToXml\n  - System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: AspNetHostingPermission\n  nameWithType: AspNetHostingPermission\n  fullName: System.Web.AspNetHostingPermission\n  type: Class\n  summary: Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.\n  remarks: \"The AspNetHostingPermission class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel> trust level to access protected ASP.NET classes.  \\n  \\n The AspNetHostingPermission class's <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element. By default, the `level` attribute of the `trust` configuration element is set to `Full`. That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel> level. When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the AspNetHostingPermission class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain. For more information, see [ASP.NET Trust Levels and Policy Files](~/add/includes/ajax-current-ext-md.md).  \\n  \\n It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted. For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`.  \\n  \\n The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the AspNetHostingPermission permission. That is, the AspNetHostingPermission permission is only assigned, by default, to applications that are running under `Full` trust.\"\n  example:\n  - \"The following code example shows a class protected using the AspNetHostingPermission permission. Code must be running with at least <xref:System.Web.AspNetHostingPermissionLevel>AspNetHostingPermission permission <xref:System.Web.AspNetHostingPermission.Level%2A> in order to create an instance of the class.  \\n  \\n [!code-vb[System.Web.AspNetHostingPermission#1](~/add/codesnippet/visualbasic/t-system.web.aspnethosti_1.vb)]\\n [!code-cs[System.Web.AspNetHostingPermission#1](~/add/codesnippet/csharp/t-system.web.aspnethosti_1.cs)]\"\n  syntax:\n    content: 'public sealed class AspNetHostingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: AspNetHostingPermission(PermissionState)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value.\n  syntax:\n    content: public AspNetHostingPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: A <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration value.\n  overload: System.Web.AspNetHostingPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not set to one of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> enumeration values.\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  id: '#ctor(System.Web.AspNetHostingPermissionLevel)'\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: AspNetHostingPermission(AspNetHostingPermissionLevel)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.AspNetHostingPermission\"></xref> class with the specified permission level.\n  syntax:\n    content: public AspNetHostingPermission (System.Web.AspNetHostingPermissionLevel level);\n    parameters:\n    - id: level\n      type: System.Web.AspNetHostingPermissionLevel\n      description: An <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration value.\n  overload: System.Web.AspNetHostingPermission.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.Copy\n  id: Copy\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: AspNetHostingPermission.Copy()\n  fullName: System.Web.AspNetHostingPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: When implemented by a derived class, creates and returns an identical copy of the current permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Web.AspNetHostingPermission.Copy*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: AspNetHostingPermission.FromXml(SecurityElement)\n  fullName: System.Web.AspNetHostingPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Reconstructs a permission object with a specified state from an XML encoding.\n  remarks: For details about formatting the XML representation of permission object state, see [Implementing a Custom Permission](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585).\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding to use to reconstruct the permission object.\n  overload: System.Web.AspNetHostingPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <xref:System.Security.SecurityElement.Tag*> property of <code>securityElement</code> is not equal to \\\"IPermission\\\".  \\n  \\n <xref uid=\\\"langword_csharp_-\\\" name=\\\"-\\\" href=\\\"\\\"></xref> or-  \\n  \\n The class <xref:System.Security.SecurityElement.Attribute*> of <code>securityElement</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> or an empty string (\\\"\\\").\"\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: AspNetHostingPermission.Intersect(IPermission)\n  fullName: System.Web.AspNetHostingPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that represents the intersection of the current permission and the specified permission; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the intersection is empty.\n  overload: System.Web.AspNetHostingPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: AspNetHostingPermission.IsSubsetOf(IPermission)\n  fullName: System.Web.AspNetHostingPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Returns a value indicating whether the current permission is a subset of the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Security.IPermission\"></xref> to combine with the current permission. It must be of the same type as the current <xref href=\"System.Security.IPermission\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current <xref href=\"System.Security.IPermission\"></xref> is a subset of the specified <xref href=\"System.Security.IPermission\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.AspNetHostingPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: AspNetHostingPermission.IsUnrestricted()\n  fullName: System.Web.AspNetHostingPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if unrestricted use of the resource protected by the permission is allowed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Web.AspNetHostingPermission.IsUnrestricted*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.Level\n  id: Level\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Level\n  nameWithType: AspNetHostingPermission.Level\n  fullName: System.Web.AspNetHostingPermission.Level\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Gets or sets the current hosting permission level for an ASP.NET application.\n  syntax:\n    content: public System.Web.AspNetHostingPermissionLevel Level { get; set; }\n    return:\n      type: System.Web.AspNetHostingPermissionLevel\n      description: One of the <xref href=\"System.Web.AspNetHostingPermissionLevel\"></xref> enumeration values.\n  overload: System.Web.AspNetHostingPermission.Level*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.ToXml\n  id: ToXml\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: AspNetHostingPermission.ToXml()\n  fullName: System.Web.AspNetHostingPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Creates an XML encoding of the permission object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> containing the XML encoding of the permission object, including any state information.\n  overload: System.Web.AspNetHostingPermission.ToXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: AspNetHostingPermission.Union(IPermission)\n  fullName: System.Web.AspNetHostingPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Web\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: An <xref href=\"System.Security.IPermission\"></xref> that represents the union of the current permission and the specified permission.\n  overload: System.Web.AspNetHostingPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not an <xref href=\"System.Web.AspNetHostingPermission\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: AspNetHostingPermission(PermissionState)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: AspNetHostingPermission(AspNetHostingPermissionLevel)\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)\n- uid: System.Web.AspNetHostingPermissionLevel\n  parent: System.Web\n  isExternal: false\n  name: AspNetHostingPermissionLevel\n  nameWithType: AspNetHostingPermissionLevel\n  fullName: System.Web.AspNetHostingPermissionLevel\n- uid: System.Web.AspNetHostingPermission.Copy\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: AspNetHostingPermission.Copy()\n  fullName: System.Web.AspNetHostingPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: AspNetHostingPermission.FromXml(SecurityElement)\n  fullName: System.Web.AspNetHostingPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: AspNetHostingPermission.Intersect(IPermission)\n  fullName: System.Web.AspNetHostingPermission.Intersect(IPermission)\n- uid: System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: AspNetHostingPermission.IsSubsetOf(IPermission)\n  fullName: System.Web.AspNetHostingPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.AspNetHostingPermission.IsUnrestricted\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: AspNetHostingPermission.IsUnrestricted()\n  fullName: System.Web.AspNetHostingPermission.IsUnrestricted()\n- uid: System.Web.AspNetHostingPermission.Level\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Level\n  nameWithType: AspNetHostingPermission.Level\n  fullName: System.Web.AspNetHostingPermission.Level\n- uid: System.Web.AspNetHostingPermission.ToXml\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: AspNetHostingPermission.ToXml()\n  fullName: System.Web.AspNetHostingPermission.ToXml()\n- uid: System.Web.AspNetHostingPermission.Union(System.Security.IPermission)\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: AspNetHostingPermission.Union(IPermission)\n  fullName: System.Web.AspNetHostingPermission.Union(IPermission)\n- uid: System.Web.AspNetHostingPermission.#ctor*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: AspNetHostingPermission\n  nameWithType: AspNetHostingPermission.AspNetHostingPermission\n- uid: System.Web.AspNetHostingPermission.Copy*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Copy\n  nameWithType: AspNetHostingPermission.Copy\n- uid: System.Web.AspNetHostingPermission.FromXml*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: AspNetHostingPermission.FromXml\n- uid: System.Web.AspNetHostingPermission.Intersect*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: AspNetHostingPermission.Intersect\n- uid: System.Web.AspNetHostingPermission.IsSubsetOf*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: AspNetHostingPermission.IsSubsetOf\n- uid: System.Web.AspNetHostingPermission.IsUnrestricted*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: AspNetHostingPermission.IsUnrestricted\n- uid: System.Web.AspNetHostingPermission.Level*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Level\n  nameWithType: AspNetHostingPermission.Level\n- uid: System.Web.AspNetHostingPermission.ToXml*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: AspNetHostingPermission.ToXml\n- uid: System.Web.AspNetHostingPermission.Union*\n  parent: System.Web.AspNetHostingPermission\n  isExternal: false\n  name: Union\n  nameWithType: AspNetHostingPermission.Union\n"}