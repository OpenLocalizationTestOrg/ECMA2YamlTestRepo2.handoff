{"nodes":[{"pos":[741,886],"content":"Provides data for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Provides data for the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."},{"pos":[899,1966],"content":"A KeyEventArgs, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.       The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key. The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key. Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.       The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed. A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"A KeyEventArgs, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each &lt;xref:System.Windows.Forms.Control.KeyDown&gt; or &lt;xref:System.Windows.Forms.Control.KeyUp&gt; event.","pos":[0,256],"source":"A KeyEventArgs, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event."},{"content":"The &lt;xref:System.Windows.Forms.Control.KeyDown&gt; event occurs when the user presses any key.","pos":[263,354],"source":"       The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key."},{"content":"The &lt;xref:System.Windows.Forms.Control.KeyUp&gt; event occurs when the user releases the key.","pos":[355,445],"source":" The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key."},{"content":"Duplicate &lt;xref:System.Windows.Forms.Control.KeyDown&gt; events occur each time the key repeats, if the key is held down, but only one &lt;xref:System.Windows.Forms.Control.KeyUp&gt; event is generated when the user releases the key.","pos":[446,670],"source":" Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key."},{"content":"The &lt;xref:System.Windows.Forms.Control.KeyPress&gt; event also occurs when a key is pressed.","pos":[677,766],"source":"       The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed."},{"content":"A &lt;xref:System.Windows.Forms.KeyPressEventArgs&gt; is passed with each &lt;xref:System.Windows.Forms.Control.KeyPress&gt; event, and specifies the character that was composed as a result of each key press.","pos":[767,963],"source":" A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press."},{"content":"For information about the event model, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[970,1061],"source":"       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[4818,4913],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.KeyEventArgs\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> class."},{"pos":[5085,5433],"content":"A <xref href=\"System.Windows.Forms.Keys\"></xref> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time. Possible values are obtained be applying the bitwise OR (|) operator to constants from the <xref href=\"System.Windows.Forms.Keys\"></xref> enumeration.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.","pos":[0,197],"source":"A <xref href=\"System.Windows.Forms.Keys\"></xref> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time."},{"content":"Possible values are obtained be applying the bitwise OR (|) operator to constants from the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","pos":[198,348],"source":" Possible values are obtained be applying the bitwise OR (|) operator to constants from the <xref href=\"System.Windows.Forms.Keys\"></xref> enumeration."}]},{"pos":[5842,5898],"content":"Gets a value indicating whether the ALT key was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the ALT key was pressed.","pos":[0,56]}]},{"pos":[7630,7793],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the ALT key was pressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ALT key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[8220,8277],"content":"Gets a value indicating whether the CTRL key was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the CTRL key was pressed.","pos":[0,57]}]},{"pos":[9425,9589],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the CTRL key was pressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the CTRL key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[10020,10082],"content":"Gets or sets a value indicating whether the event was handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the event was handled.","pos":[0,62]}]},{"pos":[10095,10750],"content":"Handled is implemented differently by different controls within Windows Forms. For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control. If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.       If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"Handled is implemented differently by different controls within Windows Forms.","pos":[0,78]},{"content":"For controls like &lt;xref:System.Windows.Forms.TextBox&gt; which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.","pos":[79,272],"source":" For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control."},{"content":"If you set <ph id=\"ph1\">`Handled`</ph> to true on a &lt;xref:System.Windows.Forms.TextBox&gt;, that control will not pass the key press <ph id=\"ph2\">`events`</ph> to the underlying Win32 text box control, but it will still display the characters that the user typed.","pos":[273,497],"source":" If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed."},{"content":"If you want to prevent the current control from receiving a key press, use the &lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt; property.","pos":[504,653],"source":"       If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property."}]},{"pos":[11346,11583],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to bypass the control's default handling; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> to also pass the event along to the default control handler.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to bypass the control's default handling; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to also pass the event along to the default control handler."},{"pos":[12014,12166],"content":"Gets the keyboard code for a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Gets the keyboard code for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."},{"pos":[14573,14663],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that is the key code for the event.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Keys\"></xref> value that is the key code for the event."},{"pos":[15094,15241],"content":"Gets the key data for a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Gets the key data for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."},{"pos":[15253,15769],"content":"You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the KeyData property. Use the bitwise AND operator to compare data returned by KeyData with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed. To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.","needQuote":true,"needEscape":true,"nodes":[{"content":"You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the KeyData property. Use the bitwise AND operator to compare data returned by KeyData with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed. To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.","pos":[0,516],"nodes":[{"content":"You can use constants from &lt;xref:System.Windows.Forms.Keys&gt; to extract information from the KeyData property.","pos":[0,109],"source":"You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the KeyData property."},{"content":"Use the bitwise AND operator to compare data returned by KeyData with constants in &lt;xref:System.Windows.Forms.Keys&gt; to obtain information about which keys the user pressed.","pos":[110,282],"source":" Use the bitwise AND operator to compare data returned by KeyData with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed."},{"content":"To determine whether a specific modifier key was pressed, use the &lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;, &lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;, and &lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt; properties.","pos":[283,516],"source":" To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties."}]}]},{"pos":[17152,17376],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Keys\"></xref> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time."},{"pos":[17812,17965],"content":"Gets the keyboard value for a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","needQuote":true,"needEscape":true,"source":"Gets the keyboard value for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."},{"pos":[19330,19423],"content":"The integer representation of the <xref:System.Windows.Forms.KeyEventArgs.KeyCode*> property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The integer representation of the &lt;xref:System.Windows.Forms.KeyEventArgs.KeyCode*&gt; property.","pos":[0,93],"source":"The integer representation of the <xref:System.Windows.Forms.KeyEventArgs.KeyCode*> property."}]},{"pos":[19865,20097],"content":"Gets the modifier flags for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event. The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the modifier flags for a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Control.KeyDown\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref href=\"System.Windows.Forms.Control.KeyUp\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> event.","pos":[0,153],"source":"Gets the modifier flags for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event."},{"content":"The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.","pos":[154,232]}]},{"pos":[20109,20390],"content":"To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties. Modifier flags can be combined with bitwise OR.","needQuote":true,"needEscape":true,"nodes":[{"content":"To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties. Modifier flags can be combined with bitwise OR.","pos":[0,281],"nodes":[{"content":"To determine whether a specific modifier key was pressed, use the &lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;, &lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;, and &lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt; properties.","pos":[0,233],"source":"To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties."},{"content":"Modifier flags can be combined with bitwise OR.","pos":[234,281]}]}]},{"pos":[20994,21089],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value representing one or more modifier flags.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Forms.Keys\"></xref> value representing one or more modifier flags."},{"pos":[21512,21570],"content":"Gets a value indicating whether the SHIFT key was pressed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the SHIFT key was pressed.","pos":[0,58]}]},{"pos":[22134,22299],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the SHIFT key was pressed; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SHIFT key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22773,22873],"content":"Gets or sets a value indicating whether the key event should be passed on to the underlying control.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets a value indicating whether the key event should be passed on to the underlying control.","pos":[0,100]}]},{"pos":[22886,23144],"content":"You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.       Setting SuppressKeyPress to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.","needQuote":false,"needEscape":true,"nodes":[{"content":"You can assign <ph id=\"ph1\">`true`</ph> to this property in an event handler such as &lt;xref:System.Windows.Forms.Control.KeyDown&gt; in order to prevent user input.","pos":[0,142],"source":"You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input."},{"content":"Setting SuppressKeyPress to <ph id=\"ph1\">`true`</ph> also sets &lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt; to <ph id=\"ph2\">`true`</ph>.","pos":[149,256],"source":"       Setting SuppressKeyPress to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`."}]},{"pos":[23641,23828],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the key event should not be sent to the control; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key event should not be sent to the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.KeyEventArgs\n  id: KeyEventArgs\n  children:\n  - System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)\n  - System.Windows.Forms.KeyEventArgs.Alt\n  - System.Windows.Forms.KeyEventArgs.Control\n  - System.Windows.Forms.KeyEventArgs.Handled\n  - System.Windows.Forms.KeyEventArgs.KeyCode\n  - System.Windows.Forms.KeyEventArgs.KeyData\n  - System.Windows.Forms.KeyEventArgs.KeyValue\n  - System.Windows.Forms.KeyEventArgs.Modifiers\n  - System.Windows.Forms.KeyEventArgs.Shift\n  - System.Windows.Forms.KeyEventArgs.SuppressKeyPress\n  langs:\n  - csharp\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs\n  fullName: System.Windows.Forms.KeyEventArgs\n  type: Class\n  summary: Provides data for the <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.\n  remarks: \"A KeyEventArgs, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.  \\n  \\n The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key. The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key. Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.  \\n  \\n The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed. A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.  \\n  \\n For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following code examples demonstrate how to detect the state of a key press.  \\n  \\n **Example 1**  \\n  \\n The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the KeyEventArgs properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \\n  \\n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/t-system.windows.forms.k_4_1.cs)]\\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/t-system.windows.forms.k_4_1.cpp)]\\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_4_1.vb)]  \\n  \\n **Example 2**  \\n  \\n The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.  \\n  \\n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/t-system.windows.forms.k_4_2.cs)]\\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/t-system.windows.forms.k_4_2.vb)]\\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/t-system.windows.forms.k_4_2.cpp)]  \\n  \\n **Example 3**  \\n  \\n The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.  \\n  \\n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_4_3.vb)]\\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/t-system.windows.forms.k_4_3.cpp)]\\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/t-system.windows.forms.k_4_3.cs)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class KeyEventArgs : EventArgs\n  inheritance:\n  - System.EventArgs\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)\n  id: '#ctor(System.Windows.Forms.Keys)'\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: KeyEventArgs(Keys)\n  nameWithType: KeyEventArgs.KeyEventArgs(Keys)\n  fullName: System.Windows.Forms.KeyEventArgs.KeyEventArgs(Keys)\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.KeyEventArgs\"></xref> class.\n  syntax:\n    content: public KeyEventArgs (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: A <xref href=\"System.Windows.Forms.Keys\"></xref> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time. Possible values are obtained be applying the bitwise OR (|) operator to constants from the <xref href=\"System.Windows.Forms.Keys\"></xref> enumeration.\n  overload: System.Windows.Forms.KeyEventArgs.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.Alt\n  id: Alt\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: Alt\n  nameWithType: KeyEventArgs.Alt\n  fullName: System.Windows.Forms.KeyEventArgs.Alt\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the ALT key was pressed.\n  remarks: ''\n  example:\n  - \"**Example 1**  \\n  \\n The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \\n  \\n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_1_1.cs)]\\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_1_1.cpp)]\\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_1_1.vb)]  \\n  \\n **Example 2**  \\n  \\n The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.  \\n  \\n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/p-system.windows.forms.k_1_2.cs)]\\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/p-system.windows.forms.k_1_2.vb)]\\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/p-system.windows.forms.k_1_2.cpp)]\"\n  syntax:\n    content: public virtual bool Alt { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the ALT key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeyEventArgs.Alt*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.Control\n  id: Control\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: Control\n  nameWithType: KeyEventArgs.Control\n  fullName: System.Windows.Forms.KeyEventArgs.Control\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the CTRL key was pressed.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \\n  \\n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_5_1.cs)]\\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_5_1.cpp)]\\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_5_1.vb)]\"\n  syntax:\n    content: public bool Control { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the CTRL key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeyEventArgs.Control*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.Handled\n  id: Handled\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: Handled\n  nameWithType: KeyEventArgs.Handled\n  fullName: System.Windows.Forms.KeyEventArgs.Handled\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the event was handled.\n  remarks: \"Handled is implemented differently by different controls within Windows Forms. For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control. If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.  \\n  \\n If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.\"\n  example:\n  - \"The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the Handled property.  \\n  \\n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_3_1.vb)]\\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/p-system.windows.forms.k_3_1.cpp)]\\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/p-system.windows.forms.k_3_1.cs)]\"\n  syntax:\n    content: public bool Handled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to bypass the control's default handling; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> to also pass the event along to the default control handler.\n  overload: System.Windows.Forms.KeyEventArgs.Handled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.KeyCode\n  id: KeyCode\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: KeyCode\n  nameWithType: KeyEventArgs.KeyCode\n  fullName: System.Windows.Forms.KeyEventArgs.KeyCode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the keyboard code for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.\n  remarks: ''\n  example:\n  - \"The following code examples show how to use the KeyCode property to determine which key was pressed.  \\n  \\n **Example 1**  \\n  \\n The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \\n  \\n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_6_1.cs)]\\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_6_1.cpp)]\\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_6_1.vb)]  \\n  \\n **Example 2**  \\n  \\n The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.  \\n  \\n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/p-system.windows.forms.k_6_2.cs)]\\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/p-system.windows.forms.k_6_2.vb)]\\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/p-system.windows.forms.k_6_2.cpp)]  \\n  \\n **Example 3**  \\n  \\n The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.  \\n  \\n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_6_3.vb)]\\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/p-system.windows.forms.k_6_3.cpp)]\\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/p-system.windows.forms.k_6_3.cs)]\"\n  syntax:\n    content: public System.Windows.Forms.Keys KeyCode { get; }\n    return:\n      type: System.Windows.Forms.Keys\n      description: A <xref href=\"System.Windows.Forms.Keys\"></xref> value that is the key code for the event.\n  overload: System.Windows.Forms.KeyEventArgs.KeyCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.KeyData\n  id: KeyData\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: KeyData\n  nameWithType: KeyEventArgs.KeyData\n  fullName: System.Windows.Forms.KeyEventArgs.KeyData\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the key data for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.\n  remarks: You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the KeyData property. Use the bitwise AND operator to compare data returned by KeyData with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed. To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#48](~/add/codesnippet/csharp/p-system.windows.forms.k_0_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#48](~/add/codesnippet/visualbasic/p-system.windows.forms.k_0_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.Keys KeyData { get; }\n    return:\n      type: System.Windows.Forms.Keys\n      description: A <xref href=\"System.Windows.Forms.Keys\"></xref> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.\n  overload: System.Windows.Forms.KeyEventArgs.KeyData*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.KeyValue\n  id: KeyValue\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: KeyValue\n  nameWithType: KeyEventArgs.KeyValue\n  fullName: System.Windows.Forms.KeyEventArgs.KeyValue\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the keyboard value for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event.  \\n  \\n [!code-cs[System.Windows.Forms.EventExamples#48](~/add/codesnippet/csharp/p-system.windows.forms.k_10_1.cs)]\\n [!code-vb[System.Windows.Forms.EventExamples#48](~/add/codesnippet/visualbasic/p-system.windows.forms.k_10_1.vb)]\"\n  syntax:\n    content: public int KeyValue { get; }\n    return:\n      type: System.Int32\n      description: The integer representation of the <xref:System.Windows.Forms.KeyEventArgs.KeyCode*> property.\n  overload: System.Windows.Forms.KeyEventArgs.KeyValue*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.Modifiers\n  id: Modifiers\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: Modifiers\n  nameWithType: KeyEventArgs.Modifiers\n  fullName: System.Windows.Forms.KeyEventArgs.Modifiers\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the modifier flags for a <xref href=\"System.Windows.Forms.Control.KeyDown\"></xref> or <xref href=\"System.Windows.Forms.Control.KeyUp\"></xref> event. The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.\n  remarks: To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties. Modifier flags can be combined with bitwise OR.\n  example:\n  - \"The following code example shows how to use the Modifiers property to determine which modifier keys were pressed along with the primary key.  \\n  \\n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_7_1.cs)]\\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_7_1.cpp)]\\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_7_1.vb)]\"\n  syntax:\n    content: public System.Windows.Forms.Keys Modifiers { get; }\n    return:\n      type: System.Windows.Forms.Keys\n      description: A <xref href=\"System.Windows.Forms.Keys\"></xref> value representing one or more modifier flags.\n  overload: System.Windows.Forms.KeyEventArgs.Modifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.Shift\n  id: Shift\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: Shift\n  nameWithType: KeyEventArgs.Shift\n  fullName: System.Windows.Forms.KeyEventArgs.Shift\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the SHIFT key was pressed.\n  remarks: ''\n  example:\n  - \"The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.  \\n  \\n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_8_1.cs)]\\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_8_1.cpp)]\\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_8_1.vb)]\"\n  syntax:\n    content: public virtual bool Shift { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the SHIFT key was pressed; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeyEventArgs.Shift*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Forms.KeyEventArgs.SuppressKeyPress\n  id: SuppressKeyPress\n  parent: System.Windows.Forms.KeyEventArgs\n  langs:\n  - csharp\n  name: SuppressKeyPress\n  nameWithType: KeyEventArgs.SuppressKeyPress\n  fullName: System.Windows.Forms.KeyEventArgs.SuppressKeyPress\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the key event should be passed on to the underlying control.\n  remarks: \"You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.  \\n  \\n Setting SuppressKeyPress to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.\"\n  example:\n  - \"The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.  \\n  \\n [!code-cs[KeyEventArgs.SuppressKeyPress#1](~/add/codesnippet/csharp/p-system.windows.forms.k_9_1.cs)]\\n [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_9_1.vb)]\"\n  syntax:\n    content: public bool SuppressKeyPress { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the key event should not be sent to the control; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Forms.KeyEventArgs.SuppressKeyPress*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.EventArgs\n  isExternal: false\n  name: System.EventArgs\n- uid: System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyEventArgs(Keys)\n  nameWithType: KeyEventArgs.KeyEventArgs(Keys)\n  fullName: System.Windows.Forms.KeyEventArgs.KeyEventArgs(Keys)\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.KeyEventArgs.Alt\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Alt\n  nameWithType: KeyEventArgs.Alt\n  fullName: System.Windows.Forms.KeyEventArgs.Alt\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.KeyEventArgs.Control\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Control\n  nameWithType: KeyEventArgs.Control\n  fullName: System.Windows.Forms.KeyEventArgs.Control\n- uid: System.Windows.Forms.KeyEventArgs.Handled\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: KeyEventArgs.Handled\n  fullName: System.Windows.Forms.KeyEventArgs.Handled\n- uid: System.Windows.Forms.KeyEventArgs.KeyCode\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyCode\n  nameWithType: KeyEventArgs.KeyCode\n  fullName: System.Windows.Forms.KeyEventArgs.KeyCode\n- uid: System.Windows.Forms.KeyEventArgs.KeyData\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyData\n  nameWithType: KeyEventArgs.KeyData\n  fullName: System.Windows.Forms.KeyEventArgs.KeyData\n- uid: System.Windows.Forms.KeyEventArgs.KeyValue\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyValue\n  nameWithType: KeyEventArgs.KeyValue\n  fullName: System.Windows.Forms.KeyEventArgs.KeyValue\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.KeyEventArgs.Modifiers\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Modifiers\n  nameWithType: KeyEventArgs.Modifiers\n  fullName: System.Windows.Forms.KeyEventArgs.Modifiers\n- uid: System.Windows.Forms.KeyEventArgs.Shift\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Shift\n  nameWithType: KeyEventArgs.Shift\n  fullName: System.Windows.Forms.KeyEventArgs.Shift\n- uid: System.Windows.Forms.KeyEventArgs.SuppressKeyPress\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: SuppressKeyPress\n  nameWithType: KeyEventArgs.SuppressKeyPress\n  fullName: System.Windows.Forms.KeyEventArgs.SuppressKeyPress\n- uid: System.Windows.Forms.KeyEventArgs.#ctor*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyEventArgs\n  nameWithType: KeyEventArgs.KeyEventArgs\n- uid: System.Windows.Forms.KeyEventArgs.Alt*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Alt\n  nameWithType: KeyEventArgs.Alt\n- uid: System.Windows.Forms.KeyEventArgs.Control*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Control\n  nameWithType: KeyEventArgs.Control\n- uid: System.Windows.Forms.KeyEventArgs.Handled*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: KeyEventArgs.Handled\n- uid: System.Windows.Forms.KeyEventArgs.KeyCode*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyCode\n  nameWithType: KeyEventArgs.KeyCode\n- uid: System.Windows.Forms.KeyEventArgs.KeyData*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyData\n  nameWithType: KeyEventArgs.KeyData\n- uid: System.Windows.Forms.KeyEventArgs.KeyValue*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: KeyValue\n  nameWithType: KeyEventArgs.KeyValue\n- uid: System.Windows.Forms.KeyEventArgs.Modifiers*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Modifiers\n  nameWithType: KeyEventArgs.Modifiers\n- uid: System.Windows.Forms.KeyEventArgs.Shift*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: Shift\n  nameWithType: KeyEventArgs.Shift\n- uid: System.Windows.Forms.KeyEventArgs.SuppressKeyPress*\n  parent: System.Windows.Forms.KeyEventArgs\n  isExternal: false\n  name: SuppressKeyPress\n  nameWithType: KeyEventArgs.SuppressKeyPress\n"}