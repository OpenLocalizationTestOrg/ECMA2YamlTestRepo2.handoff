{"nodes":[{"pos":[488,712],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.ContextItem\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is published in the editing context and that indicates whether the <ph id=\"ph1\">[!INCLUDE[wf2](~/add/includes/wf2-md.md)]</ph> designer is in a read-only state.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.Activities.Presentation.ContextItem\"></xref> that is published in the editing context and that indicates whether the [!INCLUDE[wf2](~/add/includes/wf2-md.md)] designer is in a read-only state."},{"pos":[724,1132],"content":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to “Disabled”). If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`.","needQuote":true,"needEscape":true,"nodes":[{"content":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the &lt;xref:System.Activities.Presentation.View.ExpressionTextBox&gt; disallowing edits and setting the state to “Disabled”).","pos":[0,231],"source":"Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to “Disabled”)."},{"content":"If a hosting application would like to set the designer to a read-only state, this &lt;xref:System.Activities.Presentation.ContextItem&gt; can be retrieved and can be set to <ph id=\"ph1\">`false`</ph>.","pos":[232,408],"source":" If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`."}]},{"pos":[1974,2088],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"></xref> class."},{"pos":[2704,2764],"content":"Gets a value that indicates whether the object is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the object is read-only.","pos":[0,60]}]},{"pos":[2883,3046],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object is read-only; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[3590,3626],"content":"Gets the type of the current object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the type of the current object.","pos":[0,36]}]},{"pos":[3744,3771],"content":"Returns <xref:System.Type>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns &lt;xref:System.Type&gt;.","pos":[0,27],"source":"Returns <xref:System.Type>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState\n  id: ReadOnlyState\n  children:\n  - System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  - System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  - System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  langs:\n  - csharp\n  name: ReadOnlyState\n  nameWithType: ReadOnlyState\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState\n  type: Class\n  summary: Represents a <xref href=\"System.Activities.Presentation.ContextItem\"></xref> that is published in the editing context and that indicates whether the [!INCLUDE[wf2](~/add/includes/wf2-md.md)] designer is in a read-only state.\n  remarks: Visual elements can bind to this property in order to provide different behavior in a read-only state (such as the <xref:System.Activities.Presentation.View.ExpressionTextBox> disallowing edits and setting the state to “Disabled”). If a hosting application would like to set the designer to a read-only state, this <xref:System.Activities.Presentation.ContextItem> can be retrieved and can be set to `false`.\n  syntax:\n    content: 'public sealed class ReadOnlyState : System.Activities.Presentation.ContextItem'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.ContextItem\n  implements: []\n  inheritedMembers:\n  - System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: ReadOnlyState()\n  nameWithType: ReadOnlyState.ReadOnlyState()\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ReadOnlyState()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Presentation.Hosting.ReadOnlyState\"></xref> class.\n  syntax:\n    content: public ReadOnlyState ();\n    parameters: []\n  overload: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Gets a value that indicates whether the object is read-only.\n  syntax:\n    content: public bool IsReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is read-only; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  id: ItemType\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Gets the type of the current object.\n  syntax:\n    content: public override Type ItemType { get; }\n    return:\n      type: System.Type\n      description: Returns <xref:System.Type>.\n  overload: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Activities.Presentation.ContextItem\n  isExternal: false\n  name: System.Activities.Presentation.ContextItem\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ReadOnlyState()\n  nameWithType: ReadOnlyState.ReadOnlyState()\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ReadOnlyState()\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor*\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ReadOnlyState\n  nameWithType: ReadOnlyState.ReadOnlyState\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly*\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType*\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n"}