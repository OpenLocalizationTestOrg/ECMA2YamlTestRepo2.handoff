{"nodes":[{"pos":[785,929],"content":"Represents the collection of <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects associated with a <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents the collection of <xref href=\"System.IO.Log.LogExtent\"></xref> objects associated with a <xref href=\"System.IO.Log.LogStore\"></xref>."},{"pos":[942,2228],"content":"This class contains a collection of <xref:System.IO.Log.LogExtent> objects associated with a <xref:System.IO.Log.LogStore>. A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. A particular <xref:System.IO.Log.LogExtent> is associated with one <xref:System.IO.Log.LogStore>, and <xref:System.IO.Log.LogExtent> objects in the same <xref:System.IO.Log.LogStore> are of identical size. Space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.       Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files. Rather, you should use the methods provided by this class for adding and deleting <xref:System.IO.Log.LogExtent> instances directly. Extents are usually removed when they no longer contain any active data. However, if the `force` parameter in the <xref:System.IO.Log.LogExtentCollection.Remove%2A> method is `true`, an exception is thrown if they cannot be removed immediately.       You cannot remove the last extent in the LogExtentCollection, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero after an extent is added.","needQuote":false,"needEscape":true,"nodes":[{"content":"This class contains a collection of &lt;xref:System.IO.Log.LogExtent&gt; objects associated with a &lt;xref:System.IO.Log.LogStore&gt;.","pos":[0,123],"source":"This class contains a collection of <xref:System.IO.Log.LogExtent> objects associated with a <xref:System.IO.Log.LogStore>."},{"content":"A &lt;xref:System.IO.Log.LogStore&gt; instance stores its data in a collection of disk extents, represented by &lt;xref:System.IO.Log.LogExtent&gt; instances.","pos":[124,270],"source":" A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances."},{"content":"A particular &lt;xref:System.IO.Log.LogExtent&gt; is associated with one &lt;xref:System.IO.Log.LogStore&gt;, and &lt;xref:System.IO.Log.LogExtent&gt; objects in the same &lt;xref:System.IO.Log.LogStore&gt; are of identical size.","pos":[271,476],"source":" A particular <xref:System.IO.Log.LogExtent> is associated with one <xref:System.IO.Log.LogStore>, and <xref:System.IO.Log.LogExtent> objects in the same <xref:System.IO.Log.LogStore> are of identical size."},{"content":"Space is added to and removed from a &lt;xref:System.IO.Log.LogStore&gt; instance in extent increments.","pos":[477,574],"source":" Space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments."},{"content":"Although &lt;xref:System.IO.Log.LogExtent&gt; objects are represented on disk as files, they should not be moved or deleted as normal files.","pos":[581,715],"source":"       Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files."},{"content":"Rather, you should use the methods provided by this class for adding and deleting &lt;xref:System.IO.Log.LogExtent&gt; instances directly.","pos":[716,848],"source":" Rather, you should use the methods provided by this class for adding and deleting <xref:System.IO.Log.LogExtent> instances directly."},{"content":"Extents are usually removed when they no longer contain any active data.","pos":[849,921]},{"content":"However, if the <ph id=\"ph1\">`force`</ph> parameter in the &lt;xref:System.IO.Log.LogExtentCollection.Remove%2A&gt; method is <ph id=\"ph2\">`true`</ph>, an exception is thrown if they cannot be removed immediately.","pos":[922,1093],"source":" However, if the `force` parameter in the <xref:System.IO.Log.LogExtentCollection.Remove%2A> method is `true`, an exception is thrown if they cannot be removed immediately."},{"content":"You cannot remove the last extent in the LogExtentCollection, which means that the &lt;xref:System.IO.Log.LogExtentCollection.Count%2A&gt; property cannot be zero after an extent is added.","pos":[1100,1282],"source":"       You cannot remove the last extent in the LogExtentCollection, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero after an extent is added."}]},{"pos":[3241,3320],"content":"Adds a <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the collection.","needQuote":true,"needEscape":true,"source":"Adds a <xref href=\"System.IO.Log.LogExtent\"></xref> instance to the collection."},{"pos":[3333,3607],"content":"The size of the newly added <xref:System.IO.Log.LogExtent> instance is the same as the size of existing <xref:System.IO.Log.LogExtent> instances in the collection.      > [!NOTE] >  Do not use this method to add the first <xref:System.IO.Log.LogExtent> to the collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The size of the newly added &lt;xref:System.IO.Log.LogExtent&gt; instance is the same as the size of existing &lt;xref:System.IO.Log.LogExtent&gt; instances in the collection.","pos":[0,163],"source":"The size of the newly added <xref:System.IO.Log.LogExtent> instance is the same as the size of existing <xref:System.IO.Log.LogExtent> instances in the collection."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Do not use this method to add the first &lt;xref:System.IO.Log.LogExtent&gt; to the collection.","pos":[169,271],"source":"      > [!NOTE] >  Do not use this method to add the first <xref:System.IO.Log.LogExtent> to the collection."}]},{"pos":[4119,4158],"content":"The path to the log extent to be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the log extent to be added.","pos":[0,39]}]},{"pos":[4326,4408],"content":"<ph id=\"ph1\">&lt;code&gt;path &lt;/code&gt;</ph>is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4503,4571],"content":"The log store file name specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\"> &lt;/code&gt;</ept>is not valid.","needQuote":true,"needEscape":true,"source":"The log store file name specified by <code>path </code>is not valid."},{"pos":[4682,4728],"content":"A size must be specified for the first extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"A size must be specified for the first extent.","pos":[0,46]}]},{"pos":[4818,5017],"content":"The request could not be performed because of an unexpected I/O exception.       -or-       The file specified by <code>path</code> cannot be created because the file or directory already exists.","needQuote":false,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]},{"content":"-or-       The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be created because the file or directory already exists.","pos":[81,195],"source":"       -or-       The file specified by <code>path</code> cannot be created because the file or directory already exists."}]},{"pos":[5125,5187],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[5288,5356],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[5474,5559],"content":"The record sequence is full.       -or-       The storage disk or medium is full.","needQuote":false,"needEscape":true,"nodes":[{"content":"The record sequence is full.       -or-       The storage disk or medium is full.","pos":[0,81],"nodes":[{"content":"The record sequence is full.","pos":[0,28]},{"content":"-or-       The storage disk or medium is full.","pos":[35,81]}]}]},{"pos":[5675,5744],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]},{"pos":[6172,6285],"content":"Creates a new <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> with the specified size and adds it to the collection.","needQuote":true,"needEscape":true,"source":"Creates a new <xref href=\"System.IO.Log.LogExtent\"></xref> with the specified size and adds it to the collection."},{"pos":[6297,6557],"content":"If the collection is not empty, the specified size must be at least as large as the size of the other extents in the collection. In this case, the `size` parameter is ignored, and the extent is created with the same size as the other extents in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the collection is not empty, the specified size must be at least as large as the size of the other extents in the collection.","pos":[0,128]},{"content":"In this case, the <ph id=\"ph1\">`size`</ph> parameter is ignored, and the extent is created with the same size as the other extents in the collection.","pos":[129,260],"source":" In this case, the `size` parameter is ignored, and the extent is created with the same size as the other extents in the collection."}]},{"pos":[6699,6726],"content":"The path to the log extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path to the log extent.","pos":[0,27]}]},{"pos":[6786,6813],"content":"The size of the log extent.","needQuote":true,"needEscape":true,"nodes":[{"content":"The size of the log extent.","pos":[0,27]}]},{"pos":[6981,7084],"content":"<ph id=\"ph1\">&lt;code&gt;path &lt;/code&gt;</ph>or <ph id=\"ph2\">&lt;code&gt;size&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path </code>or <code>size</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7199,7252],"content":"<ph id=\"ph1\">&lt;code&gt;archiveTail&lt;/code&gt;</ph> is not within a valid range.","needQuote":true,"needEscape":true,"source":"<code>archiveTail</code> is not within a valid range."},{"pos":[7348,7502],"content":"The log store file name specified by <code>path </code>is not valid.       <code>size</code> is smaller than the size of the other extents in the store.","needQuote":false,"needEscape":true,"nodes":[{"content":"The log store file name specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\"> &lt;/code&gt;</ept>is not valid.","pos":[0,68],"source":"The log store file name specified by <code>path </code>is not valid."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> is smaller than the size of the other extents in the store.","pos":[75,152],"source":"<code>size</code> is smaller than the size of the other extents in the store."}]},{"pos":[7615,7722],"content":"A size must be specified for the first extent.       -or-       A duplicate extent name cannot be used.","needQuote":false,"needEscape":true,"nodes":[{"content":"A size must be specified for the first extent.       -or-       A duplicate extent name cannot be used.","pos":[0,103],"nodes":[{"content":"A size must be specified for the first extent.","pos":[0,46]},{"content":"-or-       A duplicate extent name cannot be used.","pos":[53,103]}]}]},{"pos":[7813,8012],"content":"The request could not be performed because of an unexpected I/O exception.       -or-       The file specified by <code>path</code> cannot be created because the file or directory already exists.","needQuote":false,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]},{"content":"-or-       The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be created because the file or directory already exists.","pos":[81,195],"source":"       -or-       The file specified by <code>path</code> cannot be created because the file or directory already exists."}]},{"pos":[8120,8182],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[8283,8351],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[8469,8554],"content":"The record sequence is full.       -or-       The storage disk or medium is full.","needQuote":false,"needEscape":true,"nodes":[{"content":"The record sequence is full.       -or-       The storage disk or medium is full.","pos":[0,81],"nodes":[{"content":"The record sequence is full.","pos":[0,28]},{"content":"-or-       The storage disk or medium is full.","pos":[35,81]}]}]},{"pos":[8670,8739],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]},{"pos":[9081,9130],"content":"Gets the number of log extents in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the number of log extents in the collection.","pos":[0,49]}]},{"pos":[9634,9678],"content":"The number of log extents in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of log extents in the collection.","pos":[0,44]}]},{"pos":[9852,9887],"content":"The log store has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The log store has been disposed of.","pos":[0,35]}]},{"pos":[10249,10454],"content":"Gets the number of free <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances in the collection, that is, the number of <bpt id=\"p2\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> instances that do not contain any data.","needQuote":true,"needEscape":true,"source":"Gets the number of free <xref href=\"System.IO.Log.LogExtent\"></xref> instances in the collection, that is, the number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances that do not contain any data."},{"pos":[10962,11054],"content":"The number of free <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances in the collection.","needQuote":true,"needEscape":true,"source":"The number of free <xref href=\"System.IO.Log.LogExtent\"></xref> instances in the collection."},{"pos":[11232,11267],"content":"The log store has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The log store has been disposed of.","pos":[0,35]}]},{"pos":[11653,11787],"content":"Gets an enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerator for the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances in this collection.","pos":[0,101],"source":"Gets an enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection."},{"content":"This method cannot be inherited.","pos":[102,134]}]},{"pos":[12026,12122],"content":"An enumerator for the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances in this collection.","needQuote":true,"needEscape":true,"source":"An enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection."},{"pos":[12286,12360],"content":"The request could not be performed because of an unexpected I/O exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]}]},{"pos":[12472,12734],"content":"The operation is invalid for one of the following reasons:      -   The enumeration has ended.      -   The collection has been modified.      -   The enumeration has not been started. A call to <xref:System.Collections.IEnumerator.MoveNext*> must be made.","needQuote":false,"needEscape":true,"nodes":[{"content":"The operation is invalid for one of the following reasons:      -   The enumeration has ended.      -   The collection has been modified.      -   The enumeration has not been started. A call to <xref:System.Collections.IEnumerator.MoveNext*> must be made.","pos":[0,256],"nodes":[{"content":"The operation is invalid for one of the following reasons:      -   The enumeration has ended.","pos":[0,94]},{"content":"-   The collection has been modified.","pos":[100,137]},{"content":"-   The enumeration has not been started.","pos":[143,184]},{"content":"A call to &lt;xref:System.Collections.IEnumerator.MoveNext*&gt; must be made.","pos":[185,256],"source":" A call to <xref:System.Collections.IEnumerator.MoveNext*> must be made."}]}]},{"pos":[12842,12904],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[13005,13073],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[13190,13218],"content":"The record sequence is full.","needQuote":true,"needEscape":true,"nodes":[{"content":"The record sequence is full.","pos":[0,28]}]},{"pos":[13333,13402],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]},{"pos":[13884,13980],"content":"Removes the specified <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance from the collection.","needQuote":true,"needEscape":true,"source":"Removes the specified <xref href=\"System.IO.Log.LogExtent\"></xref> instance from the collection."},{"pos":[13993,14628],"content":"A <xref:System.IO.Log.LogExtent> instance can be removed from the collection only if it is not part of the active region of the <xref:System.IO.Log.LogStore>. If the `force` parameter is `true` and the extent cannot be removed immediately, an exception is thrown. If the `force` parameter is `false` and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region.       You cannot remove the last extent in the <xref:System.IO.Log.LogExtentCollection>, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero once an extent has been added.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.Log.LogExtent&gt; instance can be removed from the collection only if it is not part of the active region of the &lt;xref:System.IO.Log.LogStore&gt;.","pos":[0,158],"source":"A <xref:System.IO.Log.LogExtent> instance can be removed from the collection only if it is not part of the active region of the <xref:System.IO.Log.LogStore>."},{"content":"If the <ph id=\"ph1\">`force`</ph> parameter is <ph id=\"ph2\">`true`</ph> and the extent cannot be removed immediately, an exception is thrown.","pos":[159,263],"source":" If the `force` parameter is `true` and the extent cannot be removed immediately, an exception is thrown."},{"content":"If the <ph id=\"ph1\">`force`</ph> parameter is <ph id=\"ph2\">`false`</ph> and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region.","pos":[264,418],"source":" If the `force` parameter is `false` and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region."},{"content":"You cannot remove the last extent in the &lt;xref:System.IO.Log.LogExtentCollection&gt;, which means that the &lt;xref:System.IO.Log.LogExtentCollection.Count%2A&gt; property cannot be zero once an extent has been added.","pos":[425,633],"source":"       You cannot remove the last extent in the <xref:System.IO.Log.LogExtentCollection>, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero once an extent has been added."}]},{"pos":[14806,14874],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to remove.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.IO.Log.LogExtent\"></xref> instance to remove."},{"pos":[14937,15117],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the extent should be removed immediately; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extent should be removed immediately; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15288,15394],"content":"<ph id=\"ph1\">&lt;code&gt;extent&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;force&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>extent</code> or <code>force</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[15489,15543],"content":"<ph id=\"ph1\">&lt;code&gt;extent&lt;/code&gt;</ph> cannot be found in the collection.","needQuote":true,"needEscape":true,"source":"<code>extent</code> cannot be found in the collection."},{"pos":[15654,15759],"content":"<code>extent</code> cannot be removed. It is either still part of the active region, or access is denied.","needQuote":true,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;extent&lt;/code&gt;</ph> cannot be removed.","pos":[0,38],"source":"<code>extent</code> cannot be removed."},{"content":"It is either still part of the active region, or access is denied.","pos":[39,105]}]},{"pos":[15849,15983],"content":"The request could not be performed because of an unexpected I/O exception.       -or-       <code>extent</code> cannot be deleted.","needQuote":false,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]},{"content":"-or-       <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">extent</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be deleted.","pos":[81,130],"source":"       -or-       <code>extent</code> cannot be deleted."}]},{"pos":[16091,16153],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[16254,16322],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[16439,16467],"content":"The record sequence is full.","needQuote":true,"needEscape":true,"nodes":[{"content":"The record sequence is full.","pos":[0,28]}]},{"pos":[16582,16651],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]},{"pos":[17104,17214],"content":"Removes the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance with the specified path from the collection.","needQuote":true,"needEscape":true,"source":"Removes the <xref href=\"System.IO.Log.LogExtent\"></xref> instance with the specified path from the collection."},{"pos":[17227,17862],"content":"A <xref:System.IO.Log.LogExtent> instance can be removed from the collection only if it is not part of the active region of the <xref:System.IO.Log.LogStore>. If the `force` parameter is `true` and the extent cannot be removed immediately, an exception is thrown. If the `force` parameter is `false` and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region.       You cannot remove the last extent in the <xref:System.IO.Log.LogExtentCollection>, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero once an extent has been added.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.IO.Log.LogExtent&gt; instance can be removed from the collection only if it is not part of the active region of the &lt;xref:System.IO.Log.LogStore&gt;.","pos":[0,158],"source":"A <xref:System.IO.Log.LogExtent> instance can be removed from the collection only if it is not part of the active region of the <xref:System.IO.Log.LogStore>."},{"content":"If the <ph id=\"ph1\">`force`</ph> parameter is <ph id=\"ph2\">`true`</ph> and the extent cannot be removed immediately, an exception is thrown.","pos":[159,263],"source":" If the `force` parameter is `true` and the extent cannot be removed immediately, an exception is thrown."},{"content":"If the <ph id=\"ph1\">`force`</ph> parameter is <ph id=\"ph2\">`false`</ph> and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region.","pos":[264,418],"source":" If the `force` parameter is `false` and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region."},{"content":"You cannot remove the last extent in the &lt;xref:System.IO.Log.LogExtentCollection&gt;, which means that the &lt;xref:System.IO.Log.LogExtentCollection.Count%2A&gt; property cannot be zero once an extent has been added.","pos":[425,633],"source":"       You cannot remove the last extent in the <xref:System.IO.Log.LogExtentCollection>, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero once an extent has been added."}]},{"pos":[18009,18089],"content":"The path of the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to remove.","needQuote":true,"needEscape":true,"source":"The path of the <xref href=\"System.IO.Log.LogExtent\"></xref> instance to remove."},{"pos":[18152,18332],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the extent should be removed immediately; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extent should be removed immediately; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18503,18607],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;force&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>path</code> or <code>force</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[18702,18778],"content":"The extent specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be found in the collection.","needQuote":true,"needEscape":true,"source":"The extent specified by <code>path</code> cannot be found in the collection."},{"pos":[18889,19016],"content":"The extent specified by <code>path</code> cannot be removed. It is either still part of the active region, or access is denied.","needQuote":true,"needEscape":true,"nodes":[{"content":"The extent specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be removed.","pos":[0,60],"source":"The extent specified by <code>path</code> cannot be removed."},{"content":"It is either still part of the active region, or access is denied.","pos":[61,127]}]},{"pos":[19106,19262],"content":"The request could not be performed because of an unexpected I/O exception.       -or-       The extent specified by <code>path</code> cannot be deleted.","needQuote":false,"needEscape":true,"nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]},{"content":"-or-       The extent specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be deleted.","pos":[81,152],"source":"       -or-       The extent specified by <code>path</code> cannot be deleted."}]},{"pos":[19370,19432],"content":"The method was called after the sequence has been disposed of.","needQuote":true,"needEscape":true,"nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]},{"pos":[19533,19601],"content":"There is not enough memory to continue the execution of the program.","needQuote":true,"needEscape":true,"nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]},{"pos":[19718,19746],"content":"The record sequence is full.","needQuote":true,"needEscape":true,"nodes":[{"content":"The record sequence is full.","pos":[0,28]}]},{"pos":[19861,19930],"content":"Access for the specified log store is denied by the operating system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]},{"pos":[20485,20619],"content":"Gets an enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection. This method cannot be inherited.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumerator for the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances in this collection.","pos":[0,101],"source":"Gets an enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection."},{"content":"This method cannot be inherited.","pos":[102,134]}]},{"pos":[20797,20893],"content":"An enumerator for the <bpt id=\"p1\">&lt;xref href=\"System.IO.Log.LogExtent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instances in this collection.","needQuote":true,"needEscape":true,"source":"An enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.LogExtentCollection\n  id: LogExtentCollection\n  children:\n  - System.IO.Log.LogExtentCollection.Add(System.String)\n  - System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)\n  - System.IO.Log.LogExtentCollection.Count\n  - System.IO.Log.LogExtentCollection.FreeCount\n  - System.IO.Log.LogExtentCollection.GetEnumerator\n  - System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)\n  - System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)\n  - System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: LogExtentCollection\n  nameWithType: LogExtentCollection\n  fullName: System.IO.Log.LogExtentCollection\n  type: Class\n  summary: Represents the collection of <xref href=\"System.IO.Log.LogExtent\"></xref> objects associated with a <xref href=\"System.IO.Log.LogStore\"></xref>.\n  remarks: \"This class contains a collection of <xref:System.IO.Log.LogExtent> objects associated with a <xref:System.IO.Log.LogStore>. A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. A particular <xref:System.IO.Log.LogExtent> is associated with one <xref:System.IO.Log.LogStore>, and <xref:System.IO.Log.LogExtent> objects in the same <xref:System.IO.Log.LogStore> are of identical size. Space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.  \\n  \\n Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files. Rather, you should use the methods provided by this class for adding and deleting <xref:System.IO.Log.LogExtent> instances directly. Extents are usually removed when they no longer contain any active data. However, if the `force` parameter in the <xref:System.IO.Log.LogExtentCollection.Remove%2A> method is `true`, an exception is thrown if they cannot be removed immediately.  \\n  \\n You cannot remove the last extent in the LogExtentCollection, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero after an extent is added.\"\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogExtent> and LogExtentCollection classes to add and emulate extents in a log sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logexten_1.cs)]\\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logexten_1.vb)]\"\n  syntax:\n    content: 'public sealed class LogExtentCollection : System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.Add(System.String)\n  id: Add(System.String)\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: LogExtentCollection.Add(String)\n  fullName: System.IO.Log.LogExtentCollection.Add(String)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Adds a <xref href=\"System.IO.Log.LogExtent\"></xref> instance to the collection.\n  remarks: \"The size of the newly added <xref:System.IO.Log.LogExtent> instance is the same as the size of existing <xref:System.IO.Log.LogExtent> instances in the collection.  \\n  \\n> [!NOTE]\\n>  Do not use this method to add the first <xref:System.IO.Log.LogExtent> to the collection.\"\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/m-system.io.log.logexten_1.cs)]\\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/m-system.io.log.logexten_1.vb)]\"\n  syntax:\n    content: public void Add (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the log extent to be added.\n  overload: System.IO.Log.LogExtentCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path </code>is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The log store file name specified by <code>path </code>is not valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A size must be specified for the first extent.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The request could not be performed because of an unexpected I/O exception.  \\n  \\n -or-  \\n  \\n The file specified by <code>path</code> cannot be created because the file or directory already exists.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: \"The record sequence is full.  \\n  \\n -or-  \\n  \\n The storage disk or medium is full.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)\n  id: Add(System.String,System.Int64)\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: Add(String,Int64)\n  nameWithType: LogExtentCollection.Add(String,Int64)\n  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Creates a new <xref href=\"System.IO.Log.LogExtent\"></xref> with the specified size and adds it to the collection.\n  remarks: If the collection is not empty, the specified size must be at least as large as the size of the other extents in the collection. In this case, the `size` parameter is ignored, and the extent is created with the same size as the other extents in the collection.\n  syntax:\n    content: public void Add (string path, long size);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path to the log extent.\n    - id: size\n      type: System.Int64\n      description: The size of the log extent.\n  overload: System.IO.Log.LogExtentCollection.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path </code>or <code>size</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>archiveTail</code> is not within a valid range.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The log store file name specified by <code>path </code>is not valid.  \\n  \\n <code>size</code> is smaller than the size of the other extents in the store.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"A size must be specified for the first extent.  \\n  \\n -or-  \\n  \\n A duplicate extent name cannot be used.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The request could not be performed because of an unexpected I/O exception.  \\n  \\n -or-  \\n  \\n The file specified by <code>path</code> cannot be created because the file or directory already exists.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: \"The record sequence is full.  \\n  \\n -or-  \\n  \\n The storage disk or medium is full.\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.Count\n  id: Count\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: LogExtentCollection.Count\n  fullName: System.IO.Log.LogExtentCollection.Count\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the number of log extents in the collection.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_3_1.cs)]\\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_3_1.vb)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of log extents in the collection.\n  overload: System.IO.Log.LogExtentCollection.Count*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The log store has been disposed of.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.FreeCount\n  id: FreeCount\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: FreeCount\n  nameWithType: LogExtentCollection.FreeCount\n  fullName: System.IO.Log.LogExtentCollection.FreeCount\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the number of free <xref href=\"System.IO.Log.LogExtent\"></xref> instances in the collection, that is, the number of <xref href=\"System.IO.Log.LogExtent\"></xref> instances that do not contain any data.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \\n  \\n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_2_1.cs)]\\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_2_1.vb)]\"\n  syntax:\n    content: public int FreeCount { get; }\n    return:\n      type: System.Int32\n      description: The number of free <xref href=\"System.IO.Log.LogExtent\"></xref> instances in the collection.\n  overload: System.IO.Log.LogExtentCollection.FreeCount*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The log store has been disposed of.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: LogExtentCollection.GetEnumerator()\n  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets an enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection. This method cannot be inherited.\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}\n      description: An enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection.\n  overload: System.IO.Log.LogExtentCollection.GetEnumerator*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The request could not be performed because of an unexpected I/O exception.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The operation is invalid for one of the following reasons:  \\n  \\n-   The enumeration has ended.  \\n  \\n-   The collection has been modified.  \\n  \\n-   The enumeration has not been started. A call to <xref:System.Collections.IEnumerator.MoveNext*> must be made.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)\n  id: Remove(System.IO.Log.LogExtent,System.Boolean)\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: Remove(LogExtent,Boolean)\n  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)\n  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Removes the specified <xref href=\"System.IO.Log.LogExtent\"></xref> instance from the collection.\n  remarks: \"A <xref:System.IO.Log.LogExtent> instance can be removed from the collection only if it is not part of the active region of the <xref:System.IO.Log.LogStore>. If the `force` parameter is `true` and the extent cannot be removed immediately, an exception is thrown. If the `force` parameter is `false` and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region.  \\n  \\n You cannot remove the last extent in the <xref:System.IO.Log.LogExtentCollection>, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero once an extent has been added.\"\n  syntax:\n    content: public void Remove (System.IO.Log.LogExtent extent, bool force);\n    parameters:\n    - id: extent\n      type: System.IO.Log.LogExtent\n      description: The <xref href=\"System.IO.Log.LogExtent\"></xref> instance to remove.\n    - id: force\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extent should be removed immediately; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.LogExtentCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>extent</code> or <code>force</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>extent</code> cannot be found in the collection.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>extent</code> cannot be removed. It is either still part of the active region, or access is denied.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The request could not be performed because of an unexpected I/O exception.  \\n  \\n -or-  \\n  \\n <code>extent</code> cannot be deleted.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)\n  id: Remove(System.String,System.Boolean)\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: Remove(String,Boolean)\n  nameWithType: LogExtentCollection.Remove(String,Boolean)\n  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Removes the <xref href=\"System.IO.Log.LogExtent\"></xref> instance with the specified path from the collection.\n  remarks: \"A <xref:System.IO.Log.LogExtent> instance can be removed from the collection only if it is not part of the active region of the <xref:System.IO.Log.LogStore>. If the `force` parameter is `true` and the extent cannot be removed immediately, an exception is thrown. If the `force` parameter is `false` and the extent cannot be removed immediately, the removal is deferred until it is no longer part of the active region.  \\n  \\n You cannot remove the last extent in the <xref:System.IO.Log.LogExtentCollection>, which means that the <xref:System.IO.Log.LogExtentCollection.Count%2A> property cannot be zero once an extent has been added.\"\n  syntax:\n    content: public void Remove (string path, bool force);\n    parameters:\n    - id: path\n      type: System.String\n      description: The path of the <xref href=\"System.IO.Log.LogExtent\"></xref> instance to remove.\n    - id: force\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the extent should be removed immediately; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IO.Log.LogExtentCollection.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> or <code>force</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The extent specified by <code>path</code> cannot be found in the collection.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The extent specified by <code>path</code> cannot be removed. It is either still part of the active region, or access is denied.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The request could not be performed because of an unexpected I/O exception.  \\n  \\n -or-  \\n  \\n The extent specified by <code>path</code> cannot be deleted.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  platform:\n  - net462\n- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.IO.Log.LogExtentCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets an enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection. This method cannot be inherited.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator for the <xref href=\"System.IO.Log.LogExtent\"></xref> instances in this collection.\n  overload: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IO.IOException\n  isExternal: true\n  name: System.IO.IOException\n- uid: System.ObjectDisposedException\n  isExternal: true\n  name: System.ObjectDisposedException\n- uid: System.OutOfMemoryException\n  isExternal: true\n  name: System.OutOfMemoryException\n- uid: System.IO.Log.SequenceFullException\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceFullException\n  nameWithType: SequenceFullException\n  fullName: System.IO.Log.SequenceFullException\n- uid: System.UnauthorizedAccessException\n  isExternal: true\n  name: System.UnauthorizedAccessException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.IO.Log.LogExtentCollection.Add(System.String)\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Add(String)\n  nameWithType: LogExtentCollection.Add(String)\n  fullName: System.IO.Log.LogExtentCollection.Add(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Add(String,Int64)\n  nameWithType: LogExtentCollection.Add(String,Int64)\n  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Log.LogExtentCollection.Count\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Count\n  nameWithType: LogExtentCollection.Count\n  fullName: System.IO.Log.LogExtentCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Log.LogExtentCollection.FreeCount\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: FreeCount\n  nameWithType: LogExtentCollection.FreeCount\n  fullName: System.IO.Log.LogExtentCollection.FreeCount\n- uid: System.IO.Log.LogExtentCollection.GetEnumerator\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: LogExtentCollection.GetEnumerator()\n  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<LogExtent>\n  nameWithType: IEnumerator<LogExtent>\n  fullName: System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<System.IO.Log.LogExtent>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IO.Log.LogExtent\n    name: LogExtent\n    nameWithType: LogExtent\n    fullName: LogExtent\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Remove(LogExtent,Boolean)\n  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)\n  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)\n- uid: System.IO.Log.LogExtent\n  parent: System.IO.Log\n  isExternal: false\n  name: LogExtent\n  nameWithType: LogExtent\n  fullName: System.IO.Log.LogExtent\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Remove(String,Boolean)\n  nameWithType: LogExtentCollection.Remove(String,Boolean)\n  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)\n- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.IO.Log.LogExtentCollection.Add*\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Add\n  nameWithType: LogExtentCollection.Add\n- uid: System.IO.Log.LogExtentCollection.Count*\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Count\n  nameWithType: LogExtentCollection.Count\n- uid: System.IO.Log.LogExtentCollection.FreeCount*\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: FreeCount\n  nameWithType: LogExtentCollection.FreeCount\n- uid: System.IO.Log.LogExtentCollection.GetEnumerator*\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: LogExtentCollection.GetEnumerator\n- uid: System.IO.Log.LogExtentCollection.Remove*\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: Remove\n  nameWithType: LogExtentCollection.Remove\n- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.IO.Log.LogExtentCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator\n"}