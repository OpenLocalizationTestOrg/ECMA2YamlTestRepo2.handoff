{"nodes":[{"pos":[1093,1272],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that processes tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."},{"pos":[3771,3884],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityTokenHandler\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityTokenHandler\"></xref> class."},{"pos":[4580,4705],"content":"Indicates whether the current XML element can be read as a <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Indicates whether the current XML element can be read as a <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."},{"pos":[4879,4958],"content":"An XML reader positioned at a start element. The reader should not be advanced.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at a start element. The reader should not be advanced.","pos":[0,79],"nodes":[{"content":"An XML reader positioned at a start element.","pos":[0,44]},{"content":"The reader should not be advanced.","pos":[45,79]}]}]},{"pos":[5017,5250],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the reader is pointing to a <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is pointing to a <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5445,5529],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6005,6158],"content":"Gets a value that indicates whether this handler supports validation of tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."},{"pos":[6287,6611],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler supports validation of tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,255],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[256,324],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[7171,7311],"content":"Gets a value that indicates whether this handler can write tokens of type <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."},{"pos":[7437,7748],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the handler can write tokens of type <bpt id=\"p2\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[0,242],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"Always <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[243,311],"source":" Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."}]},{"pos":[8359,8442],"content":"Gets the RSA Security Token type (URI) as defined in the WS-Security Token profile.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the RSA Security Token type (URI) as defined in the WS-Security Token profile.","pos":[0,83]}]},{"pos":[8597,8629],"content":"The RSA Security Token type URI.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSA Security Token type URI.","pos":[0,32]}]},{"pos":[9251,9295],"content":"Deserializes an RSA security token from XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes an RSA security token from XML.","pos":[0,44]}]},{"pos":[9503,9562],"content":"An XML reader positioned at the start element of the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"An XML reader positioned at the start element of the token.","pos":[0,59]}]},{"pos":[9648,9706],"content":"The RSA security token that was deserialized from the XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSA security token that was deserialized from the XML.","pos":[0,58]}]},{"pos":[9898,9982],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10075,10129],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is not positioned at an RSA token.","needQuote":true,"needEscape":true,"source":"<code>reader</code> is not positioned at an RSA token."},{"pos":[10570,10640],"content":"Gets the <xref:System.Type> of the tokens that this handler processes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the &lt;xref:System.Type&gt; of the tokens that this handler processes.","pos":[0,70],"source":"Gets the <xref:System.Type> of the tokens that this handler processes."}]},{"pos":[10759,10837],"content":"The type of <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The type of <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."},{"pos":[11519,11558],"content":"Validates the specified security token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Validates the specified security token.","pos":[0,39]}]},{"pos":[11857,11988],"content":"The security token to validate; must be an instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"The security token to validate; must be an instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref> class."},{"pos":[12121,12168],"content":"The identities that are contained in the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The identities that are contained in the token.","pos":[0,47]}]},{"pos":[12364,12447],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[12542,12650],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."},{"pos":[12761,12926],"content":"The &lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*&gt; property for this handler is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property for this handler is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[13573,13613],"content":"Serializes an RSA security token to XML.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes an RSA security token to XML.","pos":[0,40]}]},{"pos":[13834,13879],"content":"The XML writer to use to serialize the token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XML writer to use to serialize the token.","pos":[0,45]}]},{"pos":[13969,14005],"content":"The RSA security token to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSA security token to serialize.","pos":[0,36]}]},{"pos":[14199,14400],"content":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[0,83],"source":"<code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"content":"-or-       <ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,185],"source":"       -or-       <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[14496,14604],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  id: RsaSecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: RsaSecurityTokenHandler\n  nameWithType: RsaSecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  type: Class\n  summary: Represents a <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler\"></xref> that processes tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  syntax:\n    content: 'public class RsaSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: RsaSecurityTokenHandler()\n  nameWithType: RsaSecurityTokenHandler.RsaSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.RsaSecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityTokenHandler\"></xref> class.\n  syntax:\n    content: public RsaSecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: RsaSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Indicates whether the current XML element can be read as a <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at a start element. The reader should not be advanced.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the reader is pointing to a <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: RsaSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: RsaSecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. Always <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: RsaSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the RSA Security Token type (URI) as defined in the WS-Security Token profile.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The RSA Security Token type URI.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: RsaSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes an RSA security token from XML.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The RSA security token that was deserialized from the XML.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>reader</code> is not positioned at an RSA token.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: RsaSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the <xref:System.Type> of the tokens that this handler processes.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: The type of <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: RsaSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified security token.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token to validate; must be an instance of the <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref> class.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities that are contained in the token.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property for this handler is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: RsaSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes an RSA security token to XML.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to use to serialize the token.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The RSA security token to serialize.\n  overload: System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>token</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>writer</code> is <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.RsaSecurityToken\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Xml.XmlException\n  isExternal: true\n  name: System.Xml.XmlException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: RsaSecurityTokenHandler()\n  nameWithType: RsaSecurityTokenHandler.RsaSecurityTokenHandler()\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.RsaSecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: RsaSecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: RsaSecurityTokenHandler.CanValidateToken\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: RsaSecurityTokenHandler.CanWriteToken\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: RsaSecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: RsaSecurityTokenHandler.ReadToken(XmlReader)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: RsaSecurityTokenHandler.TokenType\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: RsaSecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter,SecurityToken)\n  nameWithType: RsaSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n  fullName: System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: RsaSecurityTokenHandler\n  nameWithType: RsaSecurityTokenHandler.RsaSecurityTokenHandler\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: RsaSecurityTokenHandler.CanReadToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: RsaSecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: RsaSecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: RsaSecurityTokenHandler.GetTokenTypeIdentifiers\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: RsaSecurityTokenHandler.ReadToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: RsaSecurityTokenHandler.TokenType\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: RsaSecurityTokenHandler.ValidateToken\n- uid: System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.RsaSecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: RsaSecurityTokenHandler.WriteToken\n"}