{"nodes":[{"pos":[624,759],"content":"Defines common user interface (UI) properties used by ASP.NET <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Defines common user interface (UI) properties used by ASP.NET <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls."},{"pos":[772,4116],"content":"The IWebPart interface provides several UI-oriented properties that enhance the user experience of working with <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. When you create controls that derive from the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class, you get an implementation of all the properties in the IWebPart interface, because the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class implements this interface.       You can use existing user controls, ASP.NET controls, or custom server controls that do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class as part of a Web Parts application, and they can also use these UI-oriented properties declared by the IWebPart interface. If you place existing server controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, at run time they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> class inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, it enables existing server controls to act as true <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and it adds to them the properties of the IWebPart interface.       If you place server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in zones, they can use the IWebPart properties at run time, and you can also declare values for those properties on server controls in the markup of the page (in page persistence format). However, because these properties are only available to the server controls at run time, design-time coding features such as IntelliSense do not recognize IWebPart properties that are declared on server controls. Declared properties on these controls still work when you load the page, but Microsoft Visual Studio does not recognize the properties as valid at design time. If you want to add the IWebPart properties to existing server and user controls to enhance the design-time user experience, you can implement the IWebPart interface in a server control.       Perhaps the main reason to implement the IWebPart interface is for controls that do not support the use of expando (custom) properties. Expando properties are strings that can be added to a class dynamically as a property, by means of the <xref:System.Web.UI.IAttributeAccessor> interface. Controls that implement this interface, including the <xref:System.Web.UI.WebControls.WebControl> class and its children, can use expando properties. Therefore, all ASP.NET server controls, custom controls that derive from them, Web user controls, and <xref:System.Web.UI.WebControls.WebParts.WebPart> controls support the use of expando properties. But custom controls that inherit directly from the base <xref:System.Web.UI.Control> class do not support expando properties. Thus, if you declare these controls within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, you will not be able to declare the common IWebPart properties on the controls, properties such as <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> and <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. If you want to use these properties with such controls, you must implement the IWebPart interface.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IWebPart interface provides several UI-oriented properties that enhance the user experience of working with <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. When you create controls that derive from the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class, you get an implementation of all the properties in the IWebPart interface, because the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class implements this interface.       You can use existing user controls, ASP.NET controls, or custom server controls that do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class as part of a Web Parts application, and they can also use these UI-oriented properties declared by the IWebPart interface. If you place existing server controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, at run time they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> class inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, it enables existing server controls to act as true <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and it adds to them the properties of the IWebPart interface.       If you place server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in zones, they can use the IWebPart properties at run time, and you can also declare values for those properties on server controls in the markup of the page (in page persistence format). However, because these properties are only available to the server controls at run time, design-time coding features such as IntelliSense do not recognize IWebPart properties that are declared on server controls. Declared properties on these controls still work when you load the page, but Microsoft Visual Studio does not recognize the properties as valid at design time. If you want to add the IWebPart properties to existing server and user controls to enhance the design-time user experience, you can implement the IWebPart interface in a server control.       Perhaps the main reason to implement the IWebPart interface is for controls that do not support the use of expando (custom) properties. Expando properties are strings that can be added to a class dynamically as a property, by means of the <xref:System.Web.UI.IAttributeAccessor> interface. Controls that implement this interface, including the <xref:System.Web.UI.WebControls.WebControl> class and its children, can use expando properties. Therefore, all ASP.NET server controls, custom controls that derive from them, Web user controls, and <xref:System.Web.UI.WebControls.WebParts.WebPart> controls support the use of expando properties. But custom controls that inherit directly from the base <xref:System.Web.UI.Control> class do not support expando properties. Thus, if you declare these controls within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, you will not be able to declare the common IWebPart properties on the controls, properties such as <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> and <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. If you want to use these properties with such controls, you must implement the IWebPart interface.","pos":[0,3338],"nodes":[{"content":"The IWebPart interface provides several UI-oriented properties that enhance the user experience of working with &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; controls.","pos":[0,171],"source":"The IWebPart interface provides several UI-oriented properties that enhance the user experience of working with <xref:System.Web.UI.WebControls.WebParts.WebPart> controls."},{"content":"When you create controls that derive from the base &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; class, you get an implementation of all the properties in the IWebPart interface, because the &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; base class implements this interface.","pos":[172,454],"source":" When you create controls that derive from the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class, you get an implementation of all the properties in the IWebPart interface, because the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class implements this interface."},{"content":"You can use existing user controls, ASP.NET controls, or custom server controls that do not inherit from the &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; class as part of a Web Parts application, and they can also use these UI-oriented properties declared by the IWebPart interface.","pos":[461,748],"source":"       You can use existing user controls, ASP.NET controls, or custom server controls that do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class as part of a Web Parts application, and they can also use these UI-oriented properties declared by the IWebPart interface."},{"content":"If you place existing server controls in a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; zone, at run time they are wrapped with a &lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt; object.","pos":[749,956],"source":" If you place existing server controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, at run time they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object."},{"content":"Because the &lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt; class inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; base class, it enables existing server controls to act as true &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; controls and it adds to them the properties of the IWebPart interface.","pos":[957,1283],"source":" Because the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> class inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, it enables existing server controls to act as true <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and it adds to them the properties of the IWebPart interface."},{"content":"If you place server controls that are not &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; controls in zones, they can use the IWebPart properties at run time, and you can also declare values for those properties on server controls in the markup of the page (in page persistence format).","pos":[1290,1578],"source":"       If you place server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in zones, they can use the IWebPart properties at run time, and you can also declare values for those properties on server controls in the markup of the page (in page persistence format)."},{"content":"However, because these properties are only available to the server controls at run time, design-time coding features such as IntelliSense do not recognize IWebPart properties that are declared on server controls.","pos":[1579,1791]},{"content":"Declared properties on these controls still work when you load the page, but Microsoft Visual Studio does not recognize the properties as valid at design time.","pos":[1792,1951]},{"content":"If you want to add the IWebPart properties to existing server and user controls to enhance the design-time user experience, you can implement the IWebPart interface in a server control.","pos":[1952,2137]},{"content":"Perhaps the main reason to implement the IWebPart interface is for controls that do not support the use of expando (custom) properties.","pos":[2144,2279]},{"content":"Expando properties are strings that can be added to a class dynamically as a property, by means of the &lt;xref:System.Web.UI.IAttributeAccessor&gt; interface.","pos":[2280,2433],"source":" Expando properties are strings that can be added to a class dynamically as a property, by means of the <xref:System.Web.UI.IAttributeAccessor> interface."},{"content":"Controls that implement this interface, including the &lt;xref:System.Web.UI.WebControls.WebControl&gt; class and its children, can use expando properties.","pos":[2434,2583],"source":" Controls that implement this interface, including the <xref:System.Web.UI.WebControls.WebControl> class and its children, can use expando properties."},{"content":"Therefore, all ASP.NET server controls, custom controls that derive from them, Web user controls, and &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; controls support the use of expando properties.","pos":[2584,2783],"source":" Therefore, all ASP.NET server controls, custom controls that derive from them, Web user controls, and <xref:System.Web.UI.WebControls.WebParts.WebPart> controls support the use of expando properties."},{"content":"But custom controls that inherit directly from the base &lt;xref:System.Web.UI.Control&gt; class do not support expando properties.","pos":[2784,2909],"source":" But custom controls that inherit directly from the base <xref:System.Web.UI.Control> class do not support expando properties."},{"content":"Thus, if you declare these controls within a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;, you will not be able to declare the common IWebPart properties on the controls, properties such as &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A&gt; and &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A&gt;.","pos":[2910,3239],"source":" Thus, if you declare these controls within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, you will not be able to declare the common IWebPart properties on the controls, properties such as <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> and <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>."},{"content":"If you want to use these properties with such controls, you must implement the IWebPart interface.","pos":[3240,3338]}]}]},{"pos":[7183,7331],"content":"Gets or sets the URL to an image that represents a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control in a catalog of controls.","needQuote":true,"needEscape":true,"source":"Gets or sets the URL to an image that represents a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control in a catalog of controls."},{"pos":[7343,7574],"content":"Web Parts applications often provide a catalog (or list) of controls that users can add to a page. The CatalogIconImageUrl property on a control contains the URL to an image that represents the control when it appears in a catalog.","needQuote":true,"needEscape":true,"nodes":[{"content":"Web Parts applications often provide a catalog (or list) of controls that users can add to a page. The CatalogIconImageUrl property on a control contains the URL to an image that represents the control when it appears in a catalog.","pos":[0,231],"nodes":[{"content":"Web Parts applications often provide a catalog (or list) of controls that users can add to a page.","pos":[0,98]},{"content":"The CatalogIconImageUrl property on a control contains the URL to an image that represents the control when it appears in a catalog.","pos":[99,231]}]}]},{"pos":[9840,9971],"content":"A string that represents the URL to an image used to represent the control in a catalog. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the URL to an image used to represent the control in a catalog. The default value is an empty string (\"\").","pos":[0,131],"nodes":[{"content":"A string that represents the URL to an image used to represent the control in a catalog.","pos":[0,88]},{"content":"The default value is an empty string (\"\").","pos":[89,131]}]}]},{"pos":[10474,10648],"content":"Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> controls.","needQuote":true,"needEscape":true,"source":"Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls."},{"pos":[10660,11018],"content":"The Description property value is typically used as a descriptive string for a control in catalogs that provide lists of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and as a ToolTip in a control's title bar. The content of the property appears in a ToolTip when a user positions the mouse pointer over the title text in a control's title bar.","needQuote":true,"needEscape":true,"nodes":[{"content":"The Description property value is typically used as a descriptive string for a control in catalogs that provide lists of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and as a ToolTip in a control's title bar. The content of the property appears in a ToolTip when a user positions the mouse pointer over the title text in a control's title bar.","pos":[0,358],"nodes":[{"content":"The Description property value is typically used as a descriptive string for a control in catalogs that provide lists of &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; controls, and as a ToolTip in a control's title bar.","pos":[0,223],"source":"The Description property value is typically used as a descriptive string for a control in catalogs that provide lists of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and as a ToolTip in a control's title bar."},{"content":"The content of the property appears in a ToolTip when a user positions the mouse pointer over the title text in a control's title bar.","pos":[224,358]}]}]},{"pos":[13456,13560],"content":"A string that briefly summarizes the control's functionality. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that briefly summarizes the control's functionality. The default value is an empty string (\"\").","pos":[0,104],"nodes":[{"content":"A string that briefly summarizes the control's functionality.","pos":[0,61]},{"content":"The default value is an empty string (\"\").","pos":[62,104]}]}]},{"pos":[14040,14260],"content":"Gets a string that is concatenated with the &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*&gt; property value to form a complete title for a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets a string that is concatenated with the <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*> property value to form a complete title for a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control."},{"pos":[14273,14788],"content":"The Subtitle property is used to return a default subtitle string for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is appended to the control's title in the title bar.       If you provide a default value for the Subtitle property in a control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface, the Web Parts control set automatically appends it to the value of the <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> property of the control at run time.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Subtitle property is used to return a default subtitle string for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is appended to the control's title in the title bar.       If you provide a default value for the Subtitle property in a control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface, the Web Parts control set automatically appends it to the value of the <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> property of the control at run time.","pos":[0,513],"nodes":[{"content":"The Subtitle property is used to return a default subtitle string for a &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; control that is appended to the control's title in the title bar.","pos":[0,187],"source":"The Subtitle property is used to return a default subtitle string for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is appended to the control's title in the title bar."},{"content":"If you provide a default value for the Subtitle property in a control that implements the &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt; interface, the Web Parts control set automatically appends it to the value of the &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A&gt; property of the control at run time.","pos":[194,513],"source":"       If you provide a default value for the Subtitle property in a control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface, the Web Parts control set automatically appends it to the value of the <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> property of the control at run time."}]}]},{"pos":[16408,16502],"content":"A string that serves as a subtitle for the control. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that serves as a subtitle for the control. The default value is an empty string (\"\").","pos":[0,94],"nodes":[{"content":"A string that serves as a subtitle for the control.","pos":[0,51]},{"content":"The default value is an empty string (\"\").","pos":[52,94]}]}]},{"pos":[16964,17064],"content":"Gets or sets the title of a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets the title of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control."},{"pos":[17077,17556],"content":"The visible title text in a control's title bar is set by the Title property.       If you do not supply a title for a control, the Web Parts control set automatically calculates a default string to use as a title. For more information, see <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Also, it is possible to provide a default subtitle that is appended to the title string. For details, see <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The visible title text in a control's title bar is set by the Title property.       If you do not supply a title for a control, the Web Parts control set automatically calculates a default string to use as a title. For more information, see <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Also, it is possible to provide a default subtitle that is appended to the title string. For details, see <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.","pos":[0,477],"nodes":[{"content":"The visible title text in a control's title bar is set by the Title property.","pos":[0,77]},{"content":"If you do not supply a title for a control, the Web Parts control set automatically calculates a default string to use as a title.","pos":[84,214]},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A&gt;.","pos":[215,307],"source":" For more information, see <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>."},{"content":"Also, it is possible to provide a default subtitle that is appended to the title string.","pos":[308,396]},{"content":"For details, see &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A&gt;.","pos":[397,477],"source":" For details, see <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>."}]}]},{"pos":[19606,19697],"content":"A string that contains the title of the control. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that contains the title of the control. The default value is an empty string (\"\").","pos":[0,91],"nodes":[{"content":"A string that contains the title of the control.","pos":[0,48]},{"content":"The default value is an empty string (\"\").","pos":[49,91]}]}]},{"pos":[20216,20318],"content":"Gets or sets the URL to an image used to represent a Web Parts control in the control's own title bar.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the URL to an image used to represent a Web Parts control in the control's own title bar.","pos":[0,102]}]},{"pos":[20331,20978],"content":"The TitleIconImageUrl property provides a way to associate an icon with a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The icon appears in the control's own title bar. For thematic consistency, application developers might want to make this icon similar to the image that represents the control in a catalog of Web Parts controls (the image referenced in the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).       As it is implemented in the Web Parts control set, the TitleIconImageUrl property can be personalized by end users to change the image or icon that appears in a control's title bar.","needQuote":false,"needEscape":true,"nodes":[{"content":"The TitleIconImageUrl property provides a way to associate an icon with a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The icon appears in the control's own title bar. For thematic consistency, application developers might want to make this icon similar to the image that represents the control in a catalog of Web Parts controls (the image referenced in the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).       As it is implemented in the Web Parts control set, the TitleIconImageUrl property can be personalized by end users to change the image or icon that appears in a control's title bar.","pos":[0,645],"nodes":[{"content":"The TitleIconImageUrl property provides a way to associate an icon with a &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; control.","pos":[0,132],"source":"The TitleIconImageUrl property provides a way to associate an icon with a <xref:System.Web.UI.WebControls.WebParts.WebPart> control."},{"content":"The icon appears in the control's own title bar.","pos":[133,181]},{"content":"For thematic consistency, application developers might want to make this icon similar to the image that represents the control in a catalog of Web Parts controls (the image referenced in the &lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A&gt; property).","pos":[182,457],"source":" For thematic consistency, application developers might want to make this icon similar to the image that represents the control in a catalog of Web Parts controls (the image referenced in the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property)."},{"content":"As it is implemented in the Web Parts control set, the TitleIconImageUrl property can be personalized by end users to change the image or icon that appears in a control's title bar.","pos":[464,645]}]}]},{"pos":[23198,23286],"content":"A string that represents the URL to an image. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents the URL to an image. The default value is an empty string (\"\").","pos":[0,88],"nodes":[{"content":"A string that represents the URL to an image.","pos":[0,45]},{"content":"The default value is an empty string (\"\").","pos":[46,88]}]}]},{"pos":[23772,23899],"content":"Gets or sets a URL to supplemental information about a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","needQuote":true,"needEscape":true,"source":"Gets or sets a URL to supplemental information about a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control."},{"pos":[23912,24510],"content":"When you assign a URL to the TitleUrl property, the title of the control becomes a link. The purpose of this property is to provide a convenient way for end users to access additional information about a control. The additional information could provide copyright data, contact data, details about the creator of the control, or a summary of the control's purpose.      > [!NOTE] >  Normally, you would not use the TitleUrl property to link to Help content. The best way to provide a link to Help for a control is to use the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"When you assign a URL to the TitleUrl property, the title of the control becomes a link.","pos":[0,88]},{"content":"The purpose of this property is to provide a convenient way for end users to access additional information about a control.","pos":[89,212]},{"content":"The additional information could provide copyright data, contact data, details about the creator of the control, or a summary of the control's purpose.","pos":[213,364]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Normally, you would not use the TitleUrl property to link to Help content.","pos":[370,457],"source":"      > [!NOTE] >  Normally, you would not use the TitleUrl property to link to Help content."},{"content":"The best way to provide a link to Help for a control is to use the &lt;xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A&gt; property.","pos":[458,595],"source":" The best way to provide a link to Help for a control is to use the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> property."}]},{"pos":[26705,26879],"content":"A string that represents a URL to more information about a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control. The default value is an empty string (\"\").","needQuote":true,"needEscape":true,"nodes":[{"content":"A string that represents a URL to more information about a <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> control.","pos":[0,131],"source":"A string that represents a URL to more information about a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control."},{"content":"The default value is an empty string (\"\").","pos":[132,174]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.IWebPart\n  id: IWebPart\n  children:\n  - System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl\n  - System.Web.UI.WebControls.WebParts.IWebPart.Description\n  - System.Web.UI.WebControls.WebParts.IWebPart.Subtitle\n  - System.Web.UI.WebControls.WebParts.IWebPart.Title\n  - System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl\n  - System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl\n  langs:\n  - csharp\n  name: IWebPart\n  nameWithType: IWebPart\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart\n  type: Interface\n  summary: Defines common user interface (UI) properties used by ASP.NET <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls.\n  remarks: \"The IWebPart interface provides several UI-oriented properties that enhance the user experience of working with <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. When you create controls that derive from the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class, you get an implementation of all the properties in the IWebPart interface, because the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class implements this interface.  \\n  \\n You can use existing user controls, ASP.NET controls, or custom server controls that do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class as part of a Web Parts application, and they can also use these UI-oriented properties declared by the IWebPart interface. If you place existing server controls in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, at run time they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> class inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, it enables existing server controls to act as true <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and it adds to them the properties of the IWebPart interface.  \\n  \\n If you place server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in zones, they can use the IWebPart properties at run time, and you can also declare values for those properties on server controls in the markup of the page (in page persistence format). However, because these properties are only available to the server controls at run time, design-time coding features such as IntelliSense do not recognize IWebPart properties that are declared on server controls. Declared properties on these controls still work when you load the page, but Microsoft Visual Studio does not recognize the properties as valid at design time. If you want to add the IWebPart properties to existing server and user controls to enhance the design-time user experience, you can implement the IWebPart interface in a server control.  \\n  \\n Perhaps the main reason to implement the IWebPart interface is for controls that do not support the use of expando (custom) properties. Expando properties are strings that can be added to a class dynamically as a property, by means of the <xref:System.Web.UI.IAttributeAccessor> interface. Controls that implement this interface, including the <xref:System.Web.UI.WebControls.WebControl> class and its children, can use expando properties. Therefore, all ASP.NET server controls, custom controls that derive from them, Web user controls, and <xref:System.Web.UI.WebControls.WebParts.WebPart> controls support the use of expando properties. But custom controls that inherit directly from the base <xref:System.Web.UI.Control> class do not support expando properties. Thus, if you declare these controls within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, you will not be able to declare the common IWebPart properties on the controls, properties such as <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> and <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. If you want to use these properties with such controls, you must implement the IWebPart interface.\"\n  example:\n  - \"The following code example demonstrates how to implement the IWebPart interface in a user control. This is a simple implementation that shows minimally how to implement the properties.  \\n  \\n The first part of the code example shows the user control. The user control implements all the properties of the IWebPart interface, plus two additional public properties tied to controls in the user interface. The two custom properties each use the `Personalizable` attribute, which enables the values in those properties to be saved across browser sessions. Note that in the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class implementation, all the properties of the IWebPart interface are implemented as personalizable as well, though they are not in this code example.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_1.ascx)]  \\n  \\n The second part of the code example shows the Web page that hosts the user control. The page has a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, within which the user control is referenced. Notice that several of the IWebPart interface's property values are set declaratively in the markup for the user control, which enables it to both behave and appear similar to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at design time and run time. If you load the page in a browser, you can use the UI on the page to demonstrate the ability to programmatically change the values of the implemented IWebPart properties at run time. When you change some of the property values, the changes are not evident on the page, but are visible in the page source (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> property), or are stored in the application's state data (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_2.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_2.aspx)]\"\n  syntax:\n    content: public interface IWebPart\n  implements: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl\n  id: CatalogIconImageUrl\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  langs:\n  - csharp\n  name: CatalogIconImageUrl\n  nameWithType: IWebPart.CatalogIconImageUrl\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets the URL to an image that represents a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control in a catalog of controls.\n  remarks: Web Parts applications often provide a catalog (or list) of controls that users can add to a page. The CatalogIconImageUrl property on a control contains the URL to an image that represents the control when it appears in a catalog.\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the CatalogIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \\n  \\n The first part of the code example shows how the user control implements the CatalogIconImageUrl property.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_1.ascx)]  \\n  \\n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the CatalogIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_2.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_2.ascx)]  \\n  \\n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the CatalogIconImageUrl property is set declaratively on the control. Note that because there is no catalog of Web Parts controls provided with this example, you cannot see the actual effect of setting this property.  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_3.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_3.aspx)]\"\n  syntax:\n    content: public string CatalogIconImageUrl { get; set; }\n    return:\n      type: System.String\n      description: A string that represents the URL to an image used to represent the control in a catalog. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description\n  id: Description\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  langs:\n  - csharp\n  name: Description\n  nameWithType: IWebPart.Description\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls.\n  remarks: The Description property value is typically used as a descriptive string for a control in catalogs that provide lists of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and as a ToolTip in a control's title bar. The content of the property appears in a ToolTip when a user positions the mouse pointer over the title text in a control's title bar.\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the Description property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \\n  \\n The first part of the code example shows how the user control implements the Description property.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_1.ascx)]  \\n  \\n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Description property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_2.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_2.ascx)]  \\n  \\n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Description property is set declaratively on the control. Note that you can see the value of this property by positioning your mouse pointer over the title text in the control's title bar, after you have loaded the page in a browser. You can also experiment with changing the property value programmatically at run time by loading the Web page and using the provided user interface (UI) to change the property value.  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_3.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_3.aspx)]\"\n  syntax:\n    content: public string Description { get; set; }\n    return:\n      type: System.String\n      description: A string that briefly summarizes the control's functionality. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.WebParts.IWebPart.Description*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle\n  id: Subtitle\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  langs:\n  - csharp\n  name: Subtitle\n  nameWithType: IWebPart.Subtitle\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets a string that is concatenated with the <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*> property value to form a complete title for a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control.\n  remarks: \"The Subtitle property is used to return a default subtitle string for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is appended to the control's title in the title bar.  \\n  \\n If you provide a default value for the Subtitle property in a control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface, the Web Parts control set automatically appends it to the value of the <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> property of the control at run time.\"\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the Subtitle property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \\n  \\n The first part of the code example shows how the user control implements the Subtitle property. Note that the property is read-only and is meant to be used to provide a default subtitle that is appended to the main title of a control.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_1.ascx)]  \\n  \\n The second part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the writable properties from <xref:System.Web.UI.WebControls.WebParts.IWebPart> are set declaratively on the control. After you load the page in a browser, note that the default value of the Subtitle property, which was set in the user control's implementation code, is appended to the title in the control's title bar.  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_2.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_2.aspx)]\"\n  syntax:\n    content: public string Subtitle { get; }\n    return:\n      type: System.String\n      description: A string that serves as a subtitle for the control. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title\n  id: Title\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  langs:\n  - csharp\n  name: Title\n  nameWithType: IWebPart.Title\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets the title of a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control.\n  remarks: \"The visible title text in a control's title bar is set by the Title property.  \\n  \\n If you do not supply a title for a control, the Web Parts control set automatically calculates a default string to use as a title. For more information, see <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Also, it is possible to provide a default subtitle that is appended to the title string. For details, see <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.\"\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the Title property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \\n  \\n The first part of the code example shows how the user control implements the Title property.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_1.ascx)]  \\n  \\n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Title property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_2.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_2.ascx)]  \\n  \\n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Title property is set declaratively on the control.  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_3.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_3.aspx)]\"\n  syntax:\n    content: public string Title { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the title of the control. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.WebParts.IWebPart.Title*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl\n  id: TitleIconImageUrl\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  langs:\n  - csharp\n  name: TitleIconImageUrl\n  nameWithType: IWebPart.TitleIconImageUrl\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets the URL to an image used to represent a Web Parts control in the control's own title bar.\n  remarks: \"The TitleIconImageUrl property provides a way to associate an icon with a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The icon appears in the control's own title bar. For thematic consistency, application developers might want to make this icon similar to the image that represents the control in a catalog of Web Parts controls (the image referenced in the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).  \\n  \\n As it is implemented in the Web Parts control set, the TitleIconImageUrl property can be personalized by end users to change the image or icon that appears in a control's title bar.\"\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the TitleIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \\n  \\n The first part of the code example shows how the user control implements the TitleIconImageUrl property.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_1.ascx)]  \\n  \\n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_2.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_2.ascx)]  \\n  \\n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleIconImageUrl property is set declaratively on the control. Note that if you do not provide the URL to a real image, a placeholder for the icon appears in the title bar.  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_3.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_3.aspx)]\"\n  syntax:\n    content: public string TitleIconImageUrl { get; set; }\n    return:\n      type: System.String\n      description: A string that represents the URL to an image. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl\n  id: TitleUrl\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  langs:\n  - csharp\n  name: TitleUrl\n  nameWithType: IWebPart.TitleUrl\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets or sets a URL to supplemental information about a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control.\n  remarks: \"When you assign a URL to the TitleUrl property, the title of the control becomes a link. The purpose of this property is to provide a convenient way for end users to access additional information about a control. The additional information could provide copyright data, contact data, details about the creator of the control, or a summary of the control's purpose.  \\n  \\n> [!NOTE]\\n>  Normally, you would not use the TitleUrl property to link to Help content. The best way to provide a link to Help for a control is to use the <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> property.\"\n  example:\n  - \"The following code example demonstrates declarative and programmatic use of the TitleUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \\n  \\n The first part of the code example shows how the user control implements the TitleUrl property.  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_1.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_1.ascx)]  \\n  \\n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \\n  \\n> [!IMPORTANT]\\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \\n  \\n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_2.ascx)]\\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_2.ascx)]  \\n  \\n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleUrl property is set declaratively on the control. Note that if you do not provide a URL to a real page, and then a user clicks the link in the title bar, an error message appears.  \\n  \\n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_3.aspx)]\\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_3.aspx)]\"\n  syntax:\n    content: public string TitleUrl { get; set; }\n    return:\n      type: System.String\n      description: A string that represents a URL to more information about a <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> control. The default value is an empty string (\"\").\n  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: CatalogIconImageUrl\n  nameWithType: IWebPart.CatalogIconImageUrl\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: Description\n  nameWithType: IWebPart.Description\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: Subtitle\n  nameWithType: IWebPart.Subtitle\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: Title\n  nameWithType: IWebPart.Title\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: TitleIconImageUrl\n  nameWithType: IWebPart.TitleIconImageUrl\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: TitleUrl\n  nameWithType: IWebPart.TitleUrl\n  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: CatalogIconImageUrl\n  nameWithType: IWebPart.CatalogIconImageUrl\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description*\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: Description\n  nameWithType: IWebPart.Description\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: Subtitle\n  nameWithType: IWebPart.Subtitle\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title*\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: Title\n  nameWithType: IWebPart.Title\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: TitleIconImageUrl\n  nameWithType: IWebPart.TitleIconImageUrl\n- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*\n  parent: System.Web.UI.WebControls.WebParts.IWebPart\n  isExternal: false\n  name: TitleUrl\n  nameWithType: IWebPart.TitleUrl\n"}