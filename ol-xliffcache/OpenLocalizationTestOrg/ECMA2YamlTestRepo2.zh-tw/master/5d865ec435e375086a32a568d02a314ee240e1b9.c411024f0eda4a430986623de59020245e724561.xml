{"nodes":[{"pos":[1423,1435],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2122,2134],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3337,3349],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3408,3420],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4130,4142],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4208,4220],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4821,4833],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5566,5578],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6219,6231],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6935,6947],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7581,7593],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[7652,7664],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[8550,8562],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9250,9262],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9982,9994],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[10053,10065],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  id: HttpHeaderValueCollection`1\n  children:\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Count\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString\n  - System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)\n  langs:\n  - csharp\n  name: HttpHeaderValueCollection<T>\n  nameWithType: HttpHeaderValueCollection<T>\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>\n  type: Class\n  syntax:\n    content: 'public sealed class HttpHeaderValueCollection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T> where T : class'\n    typeParameters:\n    - id: T\n      description: To be added.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: HttpHeaderValueCollection<T>.Add(T)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public void Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear\n  id: Clear\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HttpHeaderValueCollection<T>.Clear()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Clear()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: HttpHeaderValueCollection<T>.Contains(T)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: HttpHeaderValueCollection<T>.CopyTo(T[],Int32)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public void CopyTo (T[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: T[]\n      description: To be added.\n    - id: arrayIndex\n      type: System.Int32\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count\n  id: Count\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: HttpHeaderValueCollection<T>.Count\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Count\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: HttpHeaderValueCollection<T>.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{T}\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly\n  id: IsReadOnly\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: HttpHeaderValueCollection<T>.IsReadOnly\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)\n  id: ParseAdd(System.String)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: ParseAdd(String)\n  nameWithType: HttpHeaderValueCollection<T>.ParseAdd(String)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ParseAdd(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public void ParseAdd (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: HttpHeaderValueCollection<T>.Remove(T)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: HttpHeaderValueCollection<T>.ToString()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ToString()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)\n  id: TryParseAdd(System.String)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  langs:\n  - csharp\n  name: TryParseAdd(String)\n  nameWithType: HttpHeaderValueCollection<T>.TryParseAdd(String)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.TryParseAdd(String)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  syntax:\n    content: public bool TryParseAdd (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: To be added.\n    return:\n      type: System.Boolean\n      description: To be added.\n  overload: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: HttpHeaderValueCollection<T>.Add(T)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Add(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: HttpHeaderValueCollection<T>.Clear()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Clear()\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: HttpHeaderValueCollection<T>.Contains(T)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: HttpHeaderValueCollection<T>.CopyTo(T[],Int32)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.CopyTo(T[],Int32)\n- uid: T[]\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: HttpHeaderValueCollection<T>.Count\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Count\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: HttpHeaderValueCollection<T>.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{T}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: IEnumerator<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: HttpHeaderValueCollection<T>.IsReadOnly\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.IsReadOnly\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: ParseAdd(String)\n  nameWithType: HttpHeaderValueCollection<T>.ParseAdd(String)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ParseAdd(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: HttpHeaderValueCollection<T>.Remove(T)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Remove(T)\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: ToString()\n  nameWithType: HttpHeaderValueCollection<T>.ToString()\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ToString()\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: TryParseAdd(String)\n  nameWithType: HttpHeaderValueCollection<T>.TryParseAdd(String)\n  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.TryParseAdd(String)\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Add\n  nameWithType: HttpHeaderValueCollection<T>.Add\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Clear\n  nameWithType: HttpHeaderValueCollection<T>.Clear\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Contains\n  nameWithType: HttpHeaderValueCollection<T>.Contains\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: HttpHeaderValueCollection<T>.CopyTo\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: HttpHeaderValueCollection<T>.Count\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: HttpHeaderValueCollection<T>.GetEnumerator\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: HttpHeaderValueCollection<T>.IsReadOnly\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: ParseAdd\n  nameWithType: HttpHeaderValueCollection<T>.ParseAdd\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: Remove\n  nameWithType: HttpHeaderValueCollection<T>.Remove\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: HttpHeaderValueCollection<T>.System.Collections.IEnumerable.GetEnumerator\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: ToString\n  nameWithType: HttpHeaderValueCollection<T>.ToString\n- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd*\n  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1\n  isExternal: false\n  name: TryParseAdd\n  nameWithType: HttpHeaderValueCollection<T>.TryParseAdd\n"}