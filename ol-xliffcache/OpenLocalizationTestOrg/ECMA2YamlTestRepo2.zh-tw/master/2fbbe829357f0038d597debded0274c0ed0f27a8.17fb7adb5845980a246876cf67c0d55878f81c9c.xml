{"nodes":[{"pos":[1687,1772],"content":"An interface that allows the setting of certain security features on a service proxy.","needQuote":true,"needEscape":true,"nodes":[{"content":"An interface that allows the setting of certain security features on a service proxy.","pos":[0,85]}]},{"pos":[1785,2842],"content":"Unmanaged clients use the \"service\" moniker to access [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] services. These clients are subject to the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security model rather than the COM security model. The IChannelCredentials interface is provided to specify channel credentials. This is required because the COM moniker cannot access the managed [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security object model.       It is not legal to call methods on the `IChannelCredentials` interface after the channel is created. This is because [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not support changing security settings on an already opened channel. When the service moniker client obtains a proxy, the channel is not yet created. Thus, the client must call `IChannelCredentials` methods prior to invoking the service method. If the client calls an `IChannelCredentials` method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown.","needQuote":false,"needEscape":true,"nodes":[{"content":"Unmanaged clients use the \"service\" moniker to access <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> services.","pos":[0,122],"source":"Unmanaged clients use the \"service\" moniker to access [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] services."},{"content":"These clients are subject to the <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> security model rather than the COM security model.","pos":[123,265],"source":" These clients are subject to the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security model rather than the COM security model."},{"content":"The IChannelCredentials interface is provided to specify channel credentials.","pos":[266,343]},{"content":"This is required because the COM moniker cannot access the managed <ph id=\"ph1\">[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]</ph> security object model.","pos":[344,492],"source":" This is required because the COM moniker cannot access the managed [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security object model."},{"content":"It is not legal to call methods on the <ph id=\"ph1\">`IChannelCredentials`</ph> interface after the channel is created.","pos":[499,599],"source":"       It is not legal to call methods on the `IChannelCredentials` interface after the channel is created."},{"content":"This is because <ph id=\"ph1\">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> does not support changing security settings on an already opened channel.","pos":[600,748],"source":" This is because [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not support changing security settings on an already opened channel."},{"content":"When the service moniker client obtains a proxy, the channel is not yet created.","pos":[749,829]},{"content":"Thus, the client must call <ph id=\"ph1\">`IChannelCredentials`</ph> methods prior to invoking the service method.","pos":[830,924],"source":" Thus, the client must call `IChannelCredentials` methods prior to invoking the service method."},{"content":"If the client calls an <ph id=\"ph1\">`IChannelCredentials`</ph> method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown.","pos":[925,1053],"source":" If the client calls an `IChannelCredentials` method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown."}]},{"pos":[4859,4933],"content":"Retrieves a certificate from a file and adds it to the client credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a certificate from a file and adds it to the client credentials.","pos":[0,74]}]},{"pos":[4945,5038],"content":"When <ph id=\"ph1\">`keyStorageFlags`</ph> is set to null or an empty string, the default storage flags are used.","needQuote":true,"needEscape":true,"source":"When `keyStorageFlags` is set to null or an empty string, the default storage flags are used."},{"pos":[5243,5283],"content":"File name that contains the certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"File name that contains the certificate.","pos":[0,40]}]},{"pos":[5348,5379],"content":"Password required for the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Password required for the file.","pos":[0,31]}]},{"pos":[5451,5485],"content":"Storage flags for the certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Storage flags for the certificate.","pos":[0,34]}]},{"pos":[6350,6437],"content":"Retrieves a certificate from a certificate store and adds it to the client credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a certificate from a certificate store and adds it to the client credentials.","pos":[0,87]}]},{"pos":[6665,6692],"content":"Certificate store location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store location.","pos":[0,27]}]},{"pos":[6758,6781],"content":"Certificate store name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store name.","pos":[0,23]}]},{"pos":[6846,6858],"content":"Search type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Search type.","pos":[0,12]}]},{"pos":[6924,6937],"content":"Search value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Search value.","pos":[0,13]}]},{"pos":[7784,7879],"content":"Retrieves a certificate from a certificate store by name and adds it to the client credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a certificate from a certificate store by name and adds it to the client credentials.","pos":[0,95]}]},{"pos":[8096,8121],"content":"Certificate subject name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate subject name.","pos":[0,25]}]},{"pos":[8191,8218],"content":"Certificate store location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store location.","pos":[0,27]}]},{"pos":[8284,8307],"content":"Certificate store name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store name.","pos":[0,23]}]},{"pos":[9165,9267],"content":"Retrieves a certificate from a file and adds it to the service credentials as the default certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a certificate from a file and adds it to the service credentials as the default certificate.","pos":[0,102]}]},{"pos":[9279,9372],"content":"When <ph id=\"ph1\">`keyStorageFlags`</ph> is set to null or an empty string, the default storage flags are used.","needQuote":true,"needEscape":true,"source":"When `keyStorageFlags` is set to null or an empty string, the default storage flags are used."},{"pos":[9585,9607],"content":"Certificate file name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate file name.","pos":[0,22]}]},{"pos":[9672,9702],"content":"Password for certificate file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Password for certificate file.","pos":[0,30]}]},{"pos":[9774,9804],"content":"Storage flags for certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Storage flags for certificate.","pos":[0,30]}]},{"pos":[10717,10832],"content":"Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.","pos":[0,115]}]},{"pos":[11068,11095],"content":"Certificate store location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store location.","pos":[0,27]}]},{"pos":[11161,11184],"content":"Certificate store name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store name.","pos":[0,23]}]},{"pos":[11249,11261],"content":"Search type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Search type.","pos":[0,12]}]},{"pos":[11327,11340],"content":"Search value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Search value.","pos":[0,13]}]},{"pos":[12235,12357],"content":"Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate","pos":[0,122]}]},{"pos":[12582,12607],"content":"Certificate subject name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate subject name.","pos":[0,25]}]},{"pos":[12677,12704],"content":"Certificate store location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store location.","pos":[0,27]}]},{"pos":[12770,12793],"content":"Certificate store name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate store name.","pos":[0,23]}]},{"pos":[13549,13586],"content":"Sets parameters for the issued token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets parameters for the issued token.","pos":[0,37]}]},{"pos":[13812,13829],"content":"Endpoint address.","needQuote":true,"needEscape":true,"nodes":[{"content":"Endpoint address.","pos":[0,17]}]},{"pos":[13908,13921],"content":"Binding type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Binding type.","pos":[0,13]}]},{"pos":[13996,14009],"content":"Binding name.","needQuote":true,"needEscape":true,"nodes":[{"content":"Binding name.","pos":[0,13]}]},{"pos":[14841,14896],"content":"Sets the service certificate authentication parameters.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the service certificate authentication parameters.","pos":[0,55]}]},{"pos":[15136,15151],"content":"Store location.","needQuote":true,"needEscape":true,"nodes":[{"content":"Store location.","pos":[0,15]}]},{"pos":[15222,15238],"content":"Revocation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Revocation mode.","pos":[0,16]}]},{"pos":[15322,15352],"content":"Certification validation mode.","needQuote":true,"needEscape":true,"nodes":[{"content":"Certification validation mode.","pos":[0,30]}]},{"pos":[16086,16117],"content":"Sets the user name credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the user name credentials.","pos":[0,31]}]},{"pos":[16291,16301],"content":"User name.","needQuote":true,"needEscape":true,"nodes":[{"content":"User name.","pos":[0,10]}]},{"pos":[16366,16375],"content":"Password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Password.","pos":[0,9]}]},{"pos":[17237,17266],"content":"Sets the Windows credentials.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the Windows credentials.","pos":[0,29]}]},{"pos":[17492,17499],"content":"Domain.","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain.","pos":[0,7]}]},{"pos":[17564,17574],"content":"User name.","needQuote":true,"needEscape":true,"nodes":[{"content":"User name.","pos":[0,10]}]},{"pos":[17639,17648],"content":"Password.","needQuote":true,"needEscape":true,"nodes":[{"content":"Password.","pos":[0,9]}]},{"pos":[17722,17742],"content":"Impersonation level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Impersonation level.","pos":[0,20]}]},{"pos":[17809,17842],"content":"Allow NTLM authentication scheme.","needQuote":true,"needEscape":true,"nodes":[{"content":"Allow NTLM authentication scheme.","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials\n  id: IChannelCredentials\n  children:\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)\n  - System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)\n  langs:\n  - csharp\n  name: IChannelCredentials\n  nameWithType: IChannelCredentials\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials\n  type: Interface\n  summary: An interface that allows the setting of certain security features on a service proxy.\n  remarks: \"Unmanaged clients use the \\\"service\\\" moniker to access [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] services. These clients are subject to the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security model rather than the COM security model. The IChannelCredentials interface is provided to specify channel credentials. This is required because the COM moniker cannot access the managed [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security object model.  \\n  \\n It is not legal to call methods on the `IChannelCredentials` interface after the channel is created. This is because [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not support changing security settings on an already opened channel. When the service moniker client obtains a proxy, the channel is not yet created. Thus, the client must call `IChannelCredentials` methods prior to invoking the service method. If the client calls an `IChannelCredentials` method after the service method is invoked, the exception RPC_E_TOO_LATE is thrown.\"\n  example:\n  - \"```  \\nmonString = \\\"service:mexAddress=http://localhost:8000/ServiceModelSamples/Service?wsdl\\\"  \\n    monString = monString + \\\", address=http://localhost:8000/ServiceModelSamples/Service\\\"  \\n    monString = monString + \\\", binding=BasicHttpBinding_ICalculator, bindingNamespace=http://Microsoft.ServiceModel.Samples\\\"  \\n    monString = monString + \\\", contract=ICalculator, contractNamespace=http://Microsoft.ServiceModel.Samples\\\"  \\n  \\n    Set monikerProxy = GetObject(monString)  \\n  \\n    'Set the Service Certificate.  \\n    monikerProxy.ChannelCredentials.SetServiceCertificateAuthentication \\\"CurrentUser\\\", \\\"NoCheck\\\", \\\"PeerOrChainTrust\\\"  \\n    monikerProxy.ChannelCredentials.SetDefaultServiceCertificateFromStore \\\"CurrentUser\\\", \\\"TrustedPeople\\\", \\\"FindBySubjectName\\\", \\\"localhost\\\"  \\n  \\n    'Set the Client Certificate.  \\n    monikerProxy.ChannelCredentials.SetClientCertificateFromStoreByName \\\"CN=client.com\\\", \\\"CurrentUser\\\", \\\"My\\\"  \\n    MsgBox monikerProxy.Add(3, 4)  \\n```\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.Guid(\"181b448c-c17c-4b17-ac6d-06699b93198f\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch)]\n\n      public interface IChannelCredentials\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)\n  id: SetClientCertificateFromFile(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetClientCertificateFromFile(String,String,String)\n  nameWithType: IChannelCredentials.SetClientCertificateFromFile(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(String,String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Retrieves a certificate from a file and adds it to the client credentials.\n  remarks: When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.\n  syntax:\n    content: public void SetClientCertificateFromFile (string fileName, string password, string keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: File name that contains the certificate.\n    - id: password\n      type: System.String\n      description: Password required for the file.\n    - id: keyStorageFlags\n      type: System.String\n      description: Storage flags for the certificate.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)\n  id: SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetClientCertificateFromStore(String,String,String,Object)\n  nameWithType: IChannelCredentials.SetClientCertificateFromStore(String,String,String,Object)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(String,String,String,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Retrieves a certificate from a certificate store and adds it to the client credentials.\n  syntax:\n    content: public void SetClientCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);\n    parameters:\n    - id: storeLocation\n      type: System.String\n      description: Certificate store location.\n    - id: storeName\n      type: System.String\n      description: Certificate store name.\n    - id: findType\n      type: System.String\n      description: Search type.\n    - id: findValue\n      type: System.Object\n      description: Search value.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)\n  id: SetClientCertificateFromStoreByName(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetClientCertificateFromStoreByName(String,String,String)\n  nameWithType: IChannelCredentials.SetClientCertificateFromStoreByName(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(String,String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Retrieves a certificate from a certificate store by name and adds it to the client credentials.\n  syntax:\n    content: public void SetClientCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);\n    parameters:\n    - id: subjectName\n      type: System.String\n      description: Certificate subject name.\n    - id: storeLocation\n      type: System.String\n      description: Certificate store location.\n    - id: storeName\n      type: System.String\n      description: Certificate store name.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)\n  id: SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetDefaultServiceCertificateFromFile(String,String,String)\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromFile(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(String,String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Retrieves a certificate from a file and adds it to the service credentials as the default certificate.\n  remarks: When `keyStorageFlags` is set to null or an empty string, the default storage flags are used.\n  syntax:\n    content: public void SetDefaultServiceCertificateFromFile (string fileName, string password, string keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: Certificate file name.\n    - id: password\n      type: System.String\n      description: Password for certificate file.\n    - id: keyStorageFlags\n      type: System.String\n      description: Storage flags for certificate.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)\n  id: SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetDefaultServiceCertificateFromStore(String,String,String,Object)\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromStore(String,String,String,Object)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(String,String,String,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Retrieves a certificate from a certificate store and adds it to the service credentials as the default certificate.\n  syntax:\n    content: public void SetDefaultServiceCertificateFromStore (string storeLocation, string storeName, string findType, object findValue);\n    parameters:\n    - id: storeLocation\n      type: System.String\n      description: Certificate store location.\n    - id: storeName\n      type: System.String\n      description: Certificate store name.\n    - id: findType\n      type: System.String\n      description: Search type.\n    - id: findValue\n      type: System.Object\n      description: Search value.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)\n  id: SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetDefaultServiceCertificateFromStoreByName(String,String,String)\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(String,String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Retrieves a certificate from a certificate store by name and adds it to the service credentials as the default certificate\n  syntax:\n    content: public void SetDefaultServiceCertificateFromStoreByName (string subjectName, string storeLocation, string storeName);\n    parameters:\n    - id: subjectName\n      type: System.String\n      description: Certificate subject name.\n    - id: storeLocation\n      type: System.String\n      description: Certificate store location.\n    - id: storeName\n      type: System.String\n      description: Certificate store name.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)\n  id: SetIssuedToken(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetIssuedToken(String,String,String)\n  nameWithType: IChannelCredentials.SetIssuedToken(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(String,String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Sets parameters for the issued token.\n  syntax:\n    content: public void SetIssuedToken (string localIssuerAddres, string localIssuerBindingType, string localIssuerBinding);\n    parameters:\n    - id: localIssuerAddres\n      type: System.String\n      description: Endpoint address.\n    - id: localIssuerBindingType\n      type: System.String\n      description: Binding type.\n    - id: localIssuerBinding\n      type: System.String\n      description: Binding name.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)\n  id: SetServiceCertificateAuthentication(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetServiceCertificateAuthentication(String,String,String)\n  nameWithType: IChannelCredentials.SetServiceCertificateAuthentication(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(String,String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Sets the service certificate authentication parameters.\n  syntax:\n    content: public void SetServiceCertificateAuthentication (string storeLocation, string revocationMode, string certificationValidationMode);\n    parameters:\n    - id: storeLocation\n      type: System.String\n      description: Store location.\n    - id: revocationMode\n      type: System.String\n      description: Revocation mode.\n    - id: certificationValidationMode\n      type: System.String\n      description: Certification validation mode.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)\n  id: SetUserNameCredential(System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetUserNameCredential(String,String)\n  nameWithType: IChannelCredentials.SetUserNameCredential(String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(String,String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Sets the user name credentials.\n  syntax:\n    content: public void SetUserNameCredential (string userName, string password);\n    parameters:\n    - id: userName\n      type: System.String\n      description: User name.\n    - id: password\n      type: System.String\n      description: Password.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)\n  id: SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  langs:\n  - csharp\n  name: SetWindowsCredential(String,String,String,Int32,Boolean)\n  nameWithType: IChannelCredentials.SetWindowsCredential(String,String,String,Int32,Boolean)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(String,String,String,Int32,Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.ComIntegration\n  summary: Sets the Windows credentials.\n  syntax:\n    content: public void SetWindowsCredential (string domain, string userName, string password, int impersonationLevel, bool allowNtlm);\n    parameters:\n    - id: domain\n      type: System.String\n      description: Domain.\n    - id: userName\n      type: System.String\n      description: User name.\n    - id: password\n      type: System.String\n      description: Password.\n    - id: impersonationLevel\n      type: System.Int32\n      description: Impersonation level.\n    - id: allowNtlm\n      type: System.Boolean\n      description: Allow NTLM authentication scheme.\n  overload: System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetClientCertificateFromFile(String,String,String)\n  nameWithType: IChannelCredentials.SetClientCertificateFromFile(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile(String,String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(System.String,System.String,System.String,System.Object)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetClientCertificateFromStore(String,String,String,Object)\n  nameWithType: IChannelCredentials.SetClientCertificateFromStore(String,String,String,Object)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore(String,String,String,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetClientCertificateFromStoreByName(String,String,String)\n  nameWithType: IChannelCredentials.SetClientCertificateFromStoreByName(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName(String,String,String)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetDefaultServiceCertificateFromFile(String,String,String)\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromFile(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile(String,String,String)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(System.String,System.String,System.String,System.Object)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetDefaultServiceCertificateFromStore(String,String,String,Object)\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromStore(String,String,String,Object)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore(String,String,String,Object)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetDefaultServiceCertificateFromStoreByName(String,String,String)\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName(String,String,String)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetIssuedToken(String,String,String)\n  nameWithType: IChannelCredentials.SetIssuedToken(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken(String,String,String)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(System.String,System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetServiceCertificateAuthentication(String,String,String)\n  nameWithType: IChannelCredentials.SetServiceCertificateAuthentication(String,String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication(String,String,String)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(System.String,System.String)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetUserNameCredential(String,String)\n  nameWithType: IChannelCredentials.SetUserNameCredential(String,String)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential(String,String)\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(System.String,System.String,System.String,System.Int32,System.Boolean)\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetWindowsCredential(String,String,String,Int32,Boolean)\n  nameWithType: IChannelCredentials.SetWindowsCredential(String,String,String,Int32,Boolean)\n  fullName: System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential(String,String,String,Int32,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromFile*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetClientCertificateFromFile\n  nameWithType: IChannelCredentials.SetClientCertificateFromFile\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStore*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetClientCertificateFromStore\n  nameWithType: IChannelCredentials.SetClientCertificateFromStore\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetClientCertificateFromStoreByName*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetClientCertificateFromStoreByName\n  nameWithType: IChannelCredentials.SetClientCertificateFromStoreByName\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromFile*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetDefaultServiceCertificateFromFile\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromFile\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStore*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetDefaultServiceCertificateFromStore\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromStore\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetDefaultServiceCertificateFromStoreByName*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetDefaultServiceCertificateFromStoreByName\n  nameWithType: IChannelCredentials.SetDefaultServiceCertificateFromStoreByName\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetIssuedToken*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetIssuedToken\n  nameWithType: IChannelCredentials.SetIssuedToken\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetServiceCertificateAuthentication*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetServiceCertificateAuthentication\n  nameWithType: IChannelCredentials.SetServiceCertificateAuthentication\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetUserNameCredential*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetUserNameCredential\n  nameWithType: IChannelCredentials.SetUserNameCredential\n- uid: System.ServiceModel.ComIntegration.IChannelCredentials.SetWindowsCredential*\n  parent: System.ServiceModel.ComIntegration.IChannelCredentials\n  isExternal: false\n  name: SetWindowsCredential\n  nameWithType: IChannelCredentials.SetWindowsCredential\n"}