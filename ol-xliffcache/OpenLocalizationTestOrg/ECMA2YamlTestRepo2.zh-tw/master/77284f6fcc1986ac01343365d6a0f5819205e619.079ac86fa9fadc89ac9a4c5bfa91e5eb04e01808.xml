{"nodes":[{"pos":[672,728],"content":"The exception thrown when the internal buffer overflows.","needQuote":true,"needEscape":true,"nodes":[{"content":"The exception thrown when the internal buffer overflows.","pos":[0,56]}]},{"pos":[740,1625],"content":"In a <xref:System.IO.FileSystemWatcher>, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs). If there are many changes in a short time, the buffer can easily overflow, resulting in an exception being thrown, which essentially loses all changes. To keep the buffer from overflowing, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out your unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"In a <xref:System.IO.FileSystemWatcher>, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs). If there are many changes in a short time, the buffer can easily overflow, resulting in an exception being thrown, which essentially loses all changes. To keep the buffer from overflowing, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out your unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[0,885],"nodes":[{"content":"In a &lt;xref:System.IO.FileSystemWatcher&gt;, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs).","pos":[0,206],"source":"In a <xref:System.IO.FileSystemWatcher>, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs)."},{"content":"If there are many changes in a short time, the buffer can easily overflow, resulting in an exception being thrown, which essentially loses all changes.","pos":[207,358]},{"content":"To keep the buffer from overflowing, use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName&gt; and &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName&gt; properties to filter out your unwanted change notifications.","pos":[359,629],"source":" To keep the buffer from overflowing, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out your unwanted change notifications."},{"content":"You can also increase the size of the internal buffer through the &lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName&gt; property.","pos":[630,787],"source":" You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property."},{"content":"However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[788,885]}]}]},{"pos":[2698,2809],"content":"Initializes a new default instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.InternalBufferOverflowException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new default instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class."},{"pos":[2821,3726],"content":"These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[0,905],"nodes":[{"content":"These constructors are used by the component to signify an error.","pos":[0,65]},{"content":"Only use them if extending the class or the .NET Framework.","pos":[66,125]},{"content":"This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.","pos":[126,270]},{"content":"The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.","pos":[271,403]},{"content":"To resolve this, use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName&gt; and &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName&gt; properties to filter out unwanted change notifications.","pos":[404,649],"source":" To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications."},{"content":"You can also increase the size of the internal buffer through the &lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName&gt; property.","pos":[650,807],"source":" You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property."},{"content":"However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[808,905]}]}]},{"pos":[4393,4545],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.InternalBufferOverflowException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the error message to be displayed specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class with the error message to be displayed specified."},{"pos":[4557,5462],"content":"These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[0,905],"nodes":[{"content":"These constructors are used by the component to signify an error.","pos":[0,65]},{"content":"Only use them if extending the class or the .NET Framework.","pos":[66,125]},{"content":"This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.","pos":[126,270]},{"content":"The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.","pos":[271,403]},{"content":"To resolve this, use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName&gt; and &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName&gt; properties to filter out unwanted change notifications.","pos":[404,649],"source":" To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications."},{"content":"You can also increase the size of the internal buffer through the &lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName&gt; property.","pos":[650,807],"source":" You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property."},{"content":"However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[808,905]}]}]},{"pos":[5622,5664],"content":"The message to be given for the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be given for the exception.","pos":[0,42]}]},{"pos":[6488,6772],"content":"Initializes a new, empty instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.InternalBufferOverflowException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class that is serializable using the specified <bpt id=\"p2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and &lt;xref:System.Runtime.Serialization.StreamingContext&gt; objects.","needQuote":true,"needEscape":true,"source":"Initializes a new, empty instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class that is serializable using the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref:System.Runtime.Serialization.StreamingContext> objects."},{"pos":[7057,7150],"content":"The information required to serialize the T:System.IO.InternalBufferOverflowException object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The information required to serialize the T:System.IO.InternalBufferOverflowException object.","pos":[0,93]}]},{"pos":[7246,7369],"content":"The source and destination of the serialized stream associated with the T:System.IO.InternalBufferOverflowException object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The source and destination of the serialized stream associated with the T:System.IO.InternalBufferOverflowException object.","pos":[0,123]}]},{"pos":[8015,8195],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IO.InternalBufferOverflowException\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the message to be displayed and the generated inner exception specified.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class with the message to be displayed and the generated inner exception specified."},{"pos":[8207,9112],"content":"These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","needQuote":true,"needEscape":true,"nodes":[{"content":"These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[0,905],"nodes":[{"content":"These constructors are used by the component to signify an error.","pos":[0,65]},{"content":"Only use them if extending the class or the .NET Framework.","pos":[66,125]},{"content":"This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.","pos":[126,270]},{"content":"The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.","pos":[271,403]},{"content":"To resolve this, use the &lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName&gt; and &lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName&gt; properties to filter out unwanted change notifications.","pos":[404,649],"source":" To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications."},{"content":"You can also increase the size of the internal buffer through the &lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName&gt; property.","pos":[650,807],"source":" You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property."},{"content":"However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.","pos":[808,905]}]}]},{"pos":[9289,9331],"content":"The message to be given for the exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be given for the exception.","pos":[0,42]}]},{"pos":[9396,9416],"content":"The inner exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inner exception.","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.InternalBufferOverflowException\n  id: InternalBufferOverflowException\n  children:\n  - System.IO.InternalBufferOverflowException.#ctor\n  - System.IO.InternalBufferOverflowException.#ctor(System.String)\n  - System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: InternalBufferOverflowException\n  nameWithType: InternalBufferOverflowException\n  fullName: System.IO.InternalBufferOverflowException\n  type: Class\n  summary: The exception thrown when the internal buffer overflows.\n  remarks: In a <xref:System.IO.FileSystemWatcher>, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs). If there are many changes in a short time, the buffer can easily overflow, resulting in an exception being thrown, which essentially loses all changes. To keep the buffer from overflowing, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out your unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.\n  example:\n  - \"The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.  \\n  \\n [!code-cs[FileSystemWatcher#1](~/add/codesnippet/csharp/t-system.io.internalbuff_1.cs)]\\n [!code-vb[FileSystemWatcher#1](~/add/codesnippet/visualbasic/t-system.io.internalbuff_1.vb)]\"\n  syntax:\n    content: 'public class InternalBufferOverflowException : SystemException'\n  inheritance:\n  - System.Exception\n  - System.SystemException\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IO.InternalBufferOverflowException.#ctor\n  id: '#ctor'\n  parent: System.IO.InternalBufferOverflowException\n  langs:\n  - csharp\n  name: InternalBufferOverflowException()\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException()\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.IO\n  summary: Initializes a new default instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class.\n  remarks: These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.\n  syntax:\n    content: public InternalBufferOverflowException ();\n    parameters: []\n  overload: System.IO.InternalBufferOverflowException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.InternalBufferOverflowException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.InternalBufferOverflowException\n  langs:\n  - csharp\n  name: InternalBufferOverflowException(String)\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String)\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class with the error message to be displayed specified.\n  remarks: These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.\n  syntax:\n    content: public InternalBufferOverflowException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to be given for the exception.\n  overload: System.IO.InternalBufferOverflowException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.IO.InternalBufferOverflowException\n  langs:\n  - csharp\n  name: InternalBufferOverflowException(SerializationInfo,StreamingContext)\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.IO\n  summary: Initializes a new, empty instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class that is serializable using the specified <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> and <xref:System.Runtime.Serialization.StreamingContext> objects.\n  syntax:\n    content: protected InternalBufferOverflowException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The information required to serialize the T:System.IO.InternalBufferOverflowException object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The source and destination of the serialized stream associated with the T:System.IO.InternalBufferOverflowException object.\n  overload: System.IO.InternalBufferOverflowException.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.IO.InternalBufferOverflowException\n  langs:\n  - csharp\n  name: InternalBufferOverflowException(String,Exception)\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.InternalBufferOverflowException\"></xref> class with the message to be displayed and the generated inner exception specified.\n  remarks: These constructors are used by the component to signify an error. Only use them if extending the class or the .NET Framework. This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly. The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow. To resolve this, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=fullName> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=fullName> properties to filter out unwanted change notifications. You can also increase the size of the internal buffer through the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=fullName> property. However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.\n  syntax:\n    content: public InternalBufferOverflowException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to be given for the exception.\n    - id: inner\n      type: System.Exception\n      description: The inner exception.\n  overload: System.IO.InternalBufferOverflowException.#ctor*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.SystemException\n  isExternal: false\n  name: System.SystemException\n- uid: System.IO.InternalBufferOverflowException.#ctor\n  parent: System.IO.InternalBufferOverflowException\n  isExternal: false\n  name: InternalBufferOverflowException()\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException()\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException()\n- uid: System.IO.InternalBufferOverflowException.#ctor(System.String)\n  parent: System.IO.InternalBufferOverflowException\n  isExternal: false\n  name: InternalBufferOverflowException(String)\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String)\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.IO.InternalBufferOverflowException\n  isExternal: false\n  name: InternalBufferOverflowException(SerializationInfo,StreamingContext)\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: true\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)\n  parent: System.IO.InternalBufferOverflowException\n  isExternal: false\n  name: InternalBufferOverflowException(String,Exception)\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)\n  fullName: System.IO.InternalBufferOverflowException.InternalBufferOverflowException(String,Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: true\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.IO.InternalBufferOverflowException.#ctor*\n  parent: System.IO.InternalBufferOverflowException\n  isExternal: false\n  name: InternalBufferOverflowException\n  nameWithType: InternalBufferOverflowException.InternalBufferOverflowException\n"}