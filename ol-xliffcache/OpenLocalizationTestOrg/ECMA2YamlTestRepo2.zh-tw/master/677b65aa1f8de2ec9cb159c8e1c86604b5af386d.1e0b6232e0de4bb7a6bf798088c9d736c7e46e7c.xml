{"nodes":[{"pos":[827,1093],"content":"Enables <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> applications to query for the current rendering tier for their associated <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object and to register for notification of changes.","needQuote":true,"needEscape":true,"source":"Enables [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications to query for the current rendering tier for their associated <xref href=\"System.Windows.Threading.Dispatcher\"></xref> object and to register for notification of changes."},{"pos":[1106,2685],"content":"A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application. The features of the graphics hardware that most affect the rendering tier levels are the following:      -   Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.      -   Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis. Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.      -   Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.      -   Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object. The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.       The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]. For a full description of the rendering tiers, see [Graphics Rendering Tiers](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"A rendering tier defines a level of graphics hardware capability and performance for a device that runs a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> application.","pos":[0,194],"source":"A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application."},{"content":"The features of the graphics hardware that most affect the rendering tier levels are the following:      -   Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.","pos":[195,451]},{"content":"-   Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis.","pos":[457,569]},{"content":"Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.","pos":[570,712]},{"content":"-   Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.","pos":[718,858]},{"content":"-   Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object.","pos":[864,1024]},{"content":"The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.","pos":[1025,1135]},{"content":"The pixel shader, vertex shader, and multitexture features are used to define specific <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> version levels, which, in turn, are used to define the different rendering tiers in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.","pos":[1142,1451],"source":"       The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]."},{"content":"For a full description of the rendering tiers, see <bpt id=\"p1\">[</bpt>Graphics Rendering Tiers<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1452,1569],"source":" For a full description of the rendering tiers, see [Graphics Rendering Tiers](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[3391,3475],"content":"Gets a value that indicates whether the specified pixel shader version is supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified pixel shader version is supported.","pos":[0,84]}]},{"pos":[3487,3727],"content":"The IsPixelShaderVersionSupported method returns <ph id=\"ph1\">`true`</ph> if the pixel shader version is supported by the current version of WPF, and if an &lt;xref:System.Windows.Media.Effects.Effect&gt; using the specified major/minor version can run on the GPU.","needQuote":true,"needEscape":true,"source":"The IsPixelShaderVersionSupported method returns `true` if the pixel shader version is supported by the current version of WPF, and if an <xref:System.Windows.Media.Effects.Effect> using the specified major/minor version can run on the GPU."},{"pos":[3952,3990],"content":"The major version of the pixel shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"The major version of the pixel shader.","pos":[0,38]}]},{"pos":[4067,4105],"content":"The minor version of the pixel shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minor version of the pixel shader.","pos":[0,38]}]},{"pos":[4164,4371],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the pixel shader version is supported by the current version of WPF; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the pixel shader version is supported by the current version of WPF; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[5091,5212],"content":"Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.","pos":[0,121]}]},{"pos":[5224,5282],"content":"Software rendering is only supported for Pixel Shader 2.0.","needQuote":true,"needEscape":true,"nodes":[{"content":"Software rendering is only supported for Pixel Shader 2.0.","pos":[0,58]}]},{"pos":[5517,5555],"content":"The major version of the pixel shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"The major version of the pixel shader.","pos":[0,38]}]},{"pos":[5632,5670],"content":"The minor version of the pixel shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minor version of the pixel shader.","pos":[0,38]}]},{"pos":[5729,5935],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the pixel shader can be rendered in software on the current system; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the pixel shader can be rendered in software on the current system; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[6579,6664],"content":"Gets a value that indicates whether the system can render bitmap effects in software.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the system can render bitmap effects in software.","pos":[0,85]}]},{"pos":[6815,7003],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the system can render bitmap effects in software; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the system can render bitmap effects in software; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[7558,7646],"content":"Gets the maximum width and height for bitmap creation of the underlying hardware device.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the maximum width and height for bitmap creation of the underlying hardware device.","pos":[0,88]}]},{"pos":[7658,7748],"content":"If there are multiple devices, MaxHardwareTextureSize returns the minimum size among them.","needQuote":true,"needEscape":true,"nodes":[{"content":"If there are multiple devices, MaxHardwareTextureSize returns the minimum size among them.","pos":[0,90]}]},{"pos":[7901,8018],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the maximum width and height for hardware bitmap creation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> that represents the maximum width and height for hardware bitmap creation."},{"pos":[8686,8779],"content":"Gets the maximum number of instruction slots supported by the specified pixel shader version.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the maximum number of instruction slots supported by the specified pixel shader version.","pos":[0,93]}]},{"pos":[8792,8944],"content":"The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.       Only Pixel Shader 2.0 and 3.0 are supported.","needQuote":false,"needEscape":true,"nodes":[{"content":"The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.       Only Pixel Shader 2.0 and 3.0 are supported.","pos":[0,150],"nodes":[{"content":"The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.","pos":[0,99]},{"content":"Only Pixel Shader 2.0 and 3.0 are supported.","pos":[106,150]}]}]},{"pos":[9170,9208],"content":"The major version of the pixel shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"The major version of the pixel shader.","pos":[0,38]}]},{"pos":[9285,9323],"content":"The minor version of the pixel shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"The minor version of the pixel shader.","pos":[0,38]}]},{"pos":[9380,9485],"content":"96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.","needQuote":true,"needEscape":true,"nodes":[{"content":"96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.","pos":[0,105]}]},{"pos":[9940,10010],"content":"Gets a value that indicates the rendering tier for the current thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates the rendering tier for the current thread.","pos":[0,70]}]},{"pos":[10023,12520],"content":"> [!NOTE] >  Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] 9.0 or greater. Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0.       The return value is one of three possible values:      |Return value|Rendering tier|Notes|   |------------------|--------------------|-----------|   |0x00000000|0|No graphics hardware acceleration is available for the application on the device. All graphics features use software acceleration. The [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.|   |0x00010000|1|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted. This corresponds to a [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|   |0x00020000|2|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted. This corresponds to a [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|       The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:      |Feature|Tier 1|Tier 2|   |-------------|------------|------------|   |[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version|Must be greater than or equal to 9.0.|Must be greater than or equal to 9.0.|   |Video RAM|Must be greater than or equal to 60MB.|Must be greater than or equal to 120MB.|   |Pixel shader|Version level must greater than or equal to 2.0.|Version level must greater than or equal to 2.0.|   |Vertex shader|No requirement.|Version level must greater than or equal to 2.0.|   |Multitexture units|No requirement.|Number of units must greater than or equal to 4.|       For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](~/add/includes/ajax-current-ext-md.md).       If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">&gt; [!NOTE]</ph> &gt;  Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports <ph id=\"ph2\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> 9.0 or greater.","pos":[0,208],"source":"> [!NOTE] >  Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] 9.0 or greater."},{"content":"Graphics hardware that supports <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> 7 or 8 is now defined as rendering tier 0.","pos":[209,345],"source":" Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0."},{"content":"The return value is one of three possible values:      |Return value|Rendering tier|Notes|   |------------------|--------------------|-----------|   |0x00000000|0|No graphics hardware acceleration is available for the application on the device.","pos":[352,596]},{"content":"All graphics features use software acceleration.","pos":[597,645]},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> version level is less than version 9.0.|   |0x00010000|1|Most of the graphics features of <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> will use hardware acceleration if the necessary system resources are available and have not been exhausted.","pos":[646,985],"source":" The [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.|   |0x00010000|1|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted."},{"content":"This corresponds to a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> version that is greater than or equal to 9.0.|   |0x00020000|2|Most of the graphics features of <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> will use hardware acceleration provided the necessary system resources have not been exhausted.","pos":[986,1337],"source":" This corresponds to a [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|   |0x00020000|2|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted."},{"content":"This corresponds to a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> version that is greater than or equal to 9.0.|       The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:      |Feature|Tier 1|Tier 2|   |-------------|------------|------------|   |<ph id=\"ph2\">[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)]</ph> version|Must be greater than or equal to 9.0.|Must be greater than or equal to 9.0.|   |Video RAM|Must be greater than or equal to 60MB.|Must be greater than or equal to 120MB.|   |Pixel shader|Version level must greater than or equal to 2.0.|Version level must greater than or equal to 2.0.|   |Vertex shader|No requirement.|Version level must greater than or equal to 2.0.|   |Multitexture units|No requirement.|Number of units must greater than or equal to 4.|       For more information on the definitions for the rendering tiers, see <bpt id=\"p1\">[</bpt>Graphics Rendering Tiers<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1338,2337],"source":" This corresponds to a [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|       The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:      |Feature|Tier 1|Tier 2|   |-------------|------------|------------|   |[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version|Must be greater than or equal to 9.0.|Must be greater than or equal to 9.0.|   |Video RAM|Must be greater than or equal to 60MB.|Must be greater than or equal to 120MB.|   |Pixel shader|Version level must greater than or equal to 2.0.|Version level must greater than or equal to 2.0.|   |Vertex shader|No requirement.|Version level must greater than or equal to 2.0.|   |Multitexture units|No requirement.|Number of units must greater than or equal to 4.|       For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](~/add/includes/ajax-current-ext-md.md)."},{"content":"If the current thread does not have an associated &lt;xref:System.Windows.Threading.Dispatcher&gt; object, one is automatically created.","pos":[2344,2474],"source":"       If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created."}]},{"pos":[13002,13110],"content":"An <xref:System.Int32> value whose high-order word corresponds to the rendering tier for the current thread.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Int32&gt; value whose high-order word corresponds to the rendering tier for the current thread.","pos":[0,108],"source":"An <xref:System.Int32> value whose high-order word corresponds to the rendering tier for the current thread."}]},{"pos":[13571,13708],"content":"Occurs when the rendering tier has changed for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object of the current thread.","needQuote":true,"needEscape":true,"source":"Occurs when the rendering tier has changed for the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> object of the current thread."},{"pos":[13720,13850],"content":"If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.","needQuote":true,"needEscape":true,"nodes":[{"content":"If the current thread does not have an associated &lt;xref:System.Windows.Threading.Dispatcher&gt; object, one is automatically created.","pos":[0,130],"source":"If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created."}]},{"pos":[13983,13995],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.RenderCapability\n  id: RenderCapability\n  children:\n  - System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)\n  - System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)\n  - System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported\n  - System.Windows.Media.RenderCapability.MaxHardwareTextureSize\n  - System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)\n  - System.Windows.Media.RenderCapability.Tier\n  - System.Windows.Media.RenderCapability.TierChanged\n  langs:\n  - csharp\n  name: RenderCapability\n  nameWithType: RenderCapability\n  fullName: System.Windows.Media.RenderCapability\n  type: Class\n  summary: Enables [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] applications to query for the current rendering tier for their associated <xref href=\"System.Windows.Threading.Dispatcher\"></xref> object and to register for notification of changes.\n  remarks: \"A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] application. The features of the graphics hardware that most affect the rendering tier levels are the following:  \\n  \\n-   Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.  \\n  \\n-   Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis. Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.  \\n  \\n-   Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.  \\n  \\n-   Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object. The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.  \\n  \\n The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]. For a full description of the rendering tiers, see [Graphics Rendering Tiers](~/add/includes/ajax-current-ext-md.md).\"\n  syntax:\n    content: public static class RenderCapability\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)\n  id: IsPixelShaderVersionSupported(System.Int16,System.Int16)\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: IsPixelShaderVersionSupported(Int16,Int16)\n  nameWithType: RenderCapability.IsPixelShaderVersionSupported(Int16,Int16)\n  fullName: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(Int16,Int16)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the specified pixel shader version is supported.\n  remarks: The IsPixelShaderVersionSupported method returns `true` if the pixel shader version is supported by the current version of WPF, and if an <xref:System.Windows.Media.Effects.Effect> using the specified major/minor version can run on the GPU.\n  syntax:\n    content: public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);\n    parameters:\n    - id: majorVersionRequested\n      type: System.Int16\n      description: The major version of the pixel shader.\n    - id: minorVersionRequested\n      type: System.Int16\n      description: The minor version of the pixel shader.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the pixel shader version is supported by the current version of WPF; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)\n  id: IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: IsPixelShaderVersionSupportedInSoftware(Int16,Int16)\n  nameWithType: RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16,Int16)\n  fullName: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16,Int16)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.\n  remarks: Software rendering is only supported for Pixel Shader 2.0.\n  syntax:\n    content: public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);\n    parameters:\n    - id: majorVersionRequested\n      type: System.Int16\n      description: The major version of the pixel shader.\n    - id: minorVersionRequested\n      type: System.Int16\n      description: The minor version of the pixel shader.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the pixel shader can be rendered in software on the current system; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported\n  id: IsShaderEffectSoftwareRenderingSupported\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: IsShaderEffectSoftwareRenderingSupported\n  nameWithType: RenderCapability.IsShaderEffectSoftwareRenderingSupported\n  fullName: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the system can render bitmap effects in software.\n  syntax:\n    content: public static bool IsShaderEffectSoftwareRenderingSupported { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the system can render bitmap effects in software; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.MaxHardwareTextureSize\n  id: MaxHardwareTextureSize\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: MaxHardwareTextureSize\n  nameWithType: RenderCapability.MaxHardwareTextureSize\n  fullName: System.Windows.Media.RenderCapability.MaxHardwareTextureSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the maximum width and height for bitmap creation of the underlying hardware device.\n  remarks: If there are multiple devices, MaxHardwareTextureSize returns the minimum size among them.\n  syntax:\n    content: public static System.Windows.Size MaxHardwareTextureSize { get; }\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> that represents the maximum width and height for hardware bitmap creation.\n  overload: System.Windows.Media.RenderCapability.MaxHardwareTextureSize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)\n  id: MaxPixelShaderInstructionSlots(System.Int16,System.Int16)\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: MaxPixelShaderInstructionSlots(Int16,Int16)\n  nameWithType: RenderCapability.MaxPixelShaderInstructionSlots(Int16,Int16)\n  fullName: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(Int16,Int16)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the maximum number of instruction slots supported by the specified pixel shader version.\n  remarks: \"The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.  \\n  \\n Only Pixel Shader 2.0 and 3.0 are supported.\"\n  syntax:\n    content: public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);\n    parameters:\n    - id: majorVersionRequested\n      type: System.Int16\n      description: The major version of the pixel shader.\n    - id: minorVersionRequested\n      type: System.Int16\n      description: The minor version of the pixel shader.\n    return:\n      type: System.Int32\n      description: 96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.\n  overload: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.Tier\n  id: Tier\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: Tier\n  nameWithType: RenderCapability.Tier\n  fullName: System.Windows.Media.RenderCapability.Tier\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates the rendering tier for the current thread.\n  remarks: \"> [!NOTE]\\n>  Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] 9.0 or greater. Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0.  \\n  \\n The return value is one of three possible values:  \\n  \\n|Return value|Rendering tier|Notes|  \\n|------------------|--------------------|-----------|  \\n|0x00000000|0|No graphics hardware acceleration is available for the application on the device. All graphics features use software acceleration. The [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.|  \\n|0x00010000|1|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted. This corresponds to a [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|  \\n|0x00020000|2|Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted. This corresponds to a [!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.|  \\n  \\n The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:  \\n  \\n|Feature|Tier 1|Tier 2|  \\n|-------------|------------|------------|  \\n|[!INCLUDE[TLA2#tla_dx](~/add/includes/tla2sharptla-dx-md.md)] version|Must be greater than or equal to 9.0.|Must be greater than or equal to 9.0.|  \\n|Video RAM|Must be greater than or equal to 60MB.|Must be greater than or equal to 120MB.|  \\n|Pixel shader|Version level must greater than or equal to 2.0.|Version level must greater than or equal to 2.0.|  \\n|Vertex shader|No requirement.|Version level must greater than or equal to 2.0.|  \\n|Multitexture units|No requirement.|Number of units must greater than or equal to 4.|  \\n  \\n For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.\"\n  example:\n  - \"The following example shows how to return the rendering tier for the current thread.  \\n  \\n [!code-cs[RenderOptions#RenderCapability1](~/add/codesnippet/csharp/RenderOptionsSnippets/Window1.xaml.cs#rendercapability1)]\\n [!code-vb[RenderOptions#RenderCapability1](~/add/codesnippet/visualbasic/renderoptionssnippets/window1.xaml.vb#rendercapability1)]\"\n  syntax:\n    content: public static int Tier { get; }\n    return:\n      type: System.Int32\n      description: An <xref:System.Int32> value whose high-order word corresponds to the rendering tier for the current thread.\n  overload: System.Windows.Media.RenderCapability.Tier*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.RenderCapability.TierChanged\n  id: TierChanged\n  parent: System.Windows.Media.RenderCapability\n  langs:\n  - csharp\n  name: TierChanged\n  nameWithType: RenderCapability.TierChanged\n  fullName: System.Windows.Media.RenderCapability.TierChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs when the rendering tier has changed for the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> object of the current thread.\n  remarks: If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.\n  syntax:\n    content: public static event EventHandler TierChanged;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: IsPixelShaderVersionSupported(Int16,Int16)\n  nameWithType: RenderCapability.IsPixelShaderVersionSupported(Int16,Int16)\n  fullName: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(Int16,Int16)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int16\n  parent: System\n  isExternal: true\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: IsPixelShaderVersionSupportedInSoftware(Int16,Int16)\n  nameWithType: RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16,Int16)\n  fullName: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(Int16,Int16)\n- uid: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: IsShaderEffectSoftwareRenderingSupported\n  nameWithType: RenderCapability.IsShaderEffectSoftwareRenderingSupported\n  fullName: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported\n- uid: System.Windows.Media.RenderCapability.MaxHardwareTextureSize\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: MaxHardwareTextureSize\n  nameWithType: RenderCapability.MaxHardwareTextureSize\n  fullName: System.Windows.Media.RenderCapability.MaxHardwareTextureSize\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: MaxPixelShaderInstructionSlots(Int16,Int16)\n  nameWithType: RenderCapability.MaxPixelShaderInstructionSlots(Int16,Int16)\n  fullName: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(Int16,Int16)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.RenderCapability.Tier\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: Tier\n  nameWithType: RenderCapability.Tier\n  fullName: System.Windows.Media.RenderCapability.Tier\n- uid: System.Windows.Media.RenderCapability.TierChanged\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: TierChanged\n  nameWithType: RenderCapability.TierChanged\n  fullName: System.Windows.Media.RenderCapability.TierChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported*\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: IsPixelShaderVersionSupported\n  nameWithType: RenderCapability.IsPixelShaderVersionSupported\n- uid: System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware*\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: IsPixelShaderVersionSupportedInSoftware\n  nameWithType: RenderCapability.IsPixelShaderVersionSupportedInSoftware\n- uid: System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported*\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: IsShaderEffectSoftwareRenderingSupported\n  nameWithType: RenderCapability.IsShaderEffectSoftwareRenderingSupported\n- uid: System.Windows.Media.RenderCapability.MaxHardwareTextureSize*\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: MaxHardwareTextureSize\n  nameWithType: RenderCapability.MaxHardwareTextureSize\n- uid: System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots*\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: MaxPixelShaderInstructionSlots\n  nameWithType: RenderCapability.MaxPixelShaderInstructionSlots\n- uid: System.Windows.Media.RenderCapability.Tier*\n  parent: System.Windows.Media.RenderCapability\n  isExternal: false\n  name: Tier\n  nameWithType: RenderCapability.Tier\n"}