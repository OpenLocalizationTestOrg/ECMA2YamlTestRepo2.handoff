{"nodes":[{"pos":[1939,2021],"content":"Represents the mapping of a domain object type to the columns of a database table.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the mapping of a domain object type to the columns of a database table.","pos":[0,82]}]},{"pos":[2513,2608],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> class."},{"pos":[3123,3167],"content":"Gets an enumeration of all the associations.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumeration of all the associations.","pos":[0,44]}]},{"pos":[3456,3485],"content":"A collection of associations.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of associations.","pos":[0,29]}]},{"pos":[3952,4030],"content":"Gets whether the underlying type can be instantiated as the result of a query.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets whether the underlying type can be instantiated as the result of a query.","pos":[0,78]}]},{"pos":[4157,4361],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the underlying type can be instantiated as the result of a query; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the underlying type can be instantiated as the result of a query; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[4815,4883],"content":"Gets an enumeration of all the data members (fields and properties).","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumeration of all the data members (fields and properties).","pos":[0,68]}]},{"pos":[5169,5202],"content":"A collection of the data members.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of the data members.","pos":[0,33]}]},{"pos":[5723,5790],"content":"Gets the member that represents the auto-generated identity column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the member that represents the auto-generated identity column.","pos":[0,67]}]},{"pos":[5988,6161],"content":"The member that represents the auto-generated identity column, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is no auto-generated identity column.","needQuote":true,"needEscape":true,"source":"The member that represents the auto-generated identity column, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no auto-generated identity column."},{"pos":[6631,6710],"content":"Gets an enumeration of the immediate derived types in an inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumeration of the immediate derived types in an inheritance hierarchy.","pos":[0,79]}]},{"pos":[6985,7014],"content":"An enumeration of meta-types.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumeration of meta-types.","pos":[0,29]}]},{"pos":[7476,7545],"content":"Gets the member that represents the inheritance discriminator column.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the member that represents the inheritance discriminator column.","pos":[0,69]}]},{"pos":[7731,7877],"content":"The member that represents the inheritance discriminator column, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is none.","needQuote":true,"needEscape":true,"source":"The member that represents the inheritance discriminator column, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is none."},{"pos":[8434,8541],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaDataMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> associated with the specified member.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> associated with the specified member."},{"pos":[8767,8874],"content":"The member for which the associated <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaDataMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is sought.","needQuote":true,"needEscape":true,"source":"The member for which the associated <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> is sought."},{"pos":[8958,9143],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaDataMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if one is associated with the specified member; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> if one is associated with the specified member; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[9673,9764],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for an inheritance subtype.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for an inheritance subtype."},{"pos":[9944,9956],"content":"The subtype.","needQuote":true,"needEscape":true,"nodes":[{"content":"The subtype.","pos":[0,12]}]},{"pos":[10034,10120],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for an inheritance subtype.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for an inheritance subtype."},{"pos":[10700,10766],"content":"Gets the meta-type associated with the specified inheritance code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the meta-type associated with the specified inheritance code.","pos":[0,66]}]},{"pos":[10957,10978],"content":"The inheritance code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The inheritance code.","pos":[0,21]}]},{"pos":[11056,11117],"content":"The meta-type associated with the specified inheritance code.","needQuote":true,"needEscape":true,"nodes":[{"content":"The meta-type associated with the specified inheritance code.","pos":[0,61]}]},{"pos":[11607,11761],"content":"Gets a value that indicates whether the current <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or any of its bases types has an <ph id=\"ph1\">`OnLoaded`</ph> method.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the current <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> or any of its bases types has an `OnLoaded` method."},{"pos":[11890,12090],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the meta-type or any base meta-type has an <ph id=\"ph1\">`OnLoaded`</ph> method; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the meta-type or any base meta-type has an `OnLoaded` method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[12591,12739],"content":"Gets a value that indicates whether the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or any of its bases types has an <ph id=\"ph1\">`OnValidate`</ph> method.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> or any of its bases types has an `OnValidate` method."},{"pos":[12872,13074],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the meta-type or any base meta-type has an <ph id=\"ph1\">`OnValidate`</ph> method; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the meta-type or any base meta-type has an `OnValidate` method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[13549,13632],"content":"Gets a value indicating whether the type is part of a mapped inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the type is part of a mapped inheritance hierarchy.","pos":[0,83]}]},{"pos":[13759,13948],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the type is part of a mapped inheritance hierarchy; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type is part of a mapped inheritance hierarchy; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[14437,14507],"content":"Gets a value indicating whether this type defines an inheritance code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this type defines an inheritance code.","pos":[0,70]}]},{"pos":[14638,14814],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this type defines an inheritance code; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this type defines an inheritance code; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[15287,15415],"content":"Gets a value indicating whether the type has any persistent member that may require a test for optimistic concurrency conflicts.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether the type has any persistent member that may require a test for optimistic concurrency conflicts.","pos":[0,128]}]},{"pos":[15542,15857],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the type has any persistent member with an <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> policy other than <bpt id=\"p3\">&lt;xref href=\"System.Data.Linq.Mapping.UpdateCheck\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>; otherwise <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type has any persistent member with an <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> policy other than <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16331,16419],"content":"Gets an enumeration of all the data members that define the unique identity of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets an enumeration of all the data members that define the unique identity of the type.","pos":[0,88]}]},{"pos":[16709,16779],"content":"An enumeration of members that define the unique identity of the type.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumeration of members that define the unique identity of the type.","pos":[0,70]}]},{"pos":[17254,17307],"content":"Gets the base meta-type in the inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the base meta-type in the inheritance hierarchy.","pos":[0,53]}]},{"pos":[17483,17540],"content":"The base meta-type for the current inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"The base meta-type for the current inheritance hierarchy.","pos":[0,57]}]},{"pos":[18015,18085],"content":"Gets a value indicating whether this type defines an inheritance code.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this type defines an inheritance code.","pos":[0,70]}]},{"pos":[18214,18390],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this type defines an inheritance code; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this type defines an inheritance code; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[18880,18973],"content":"Gets a value indicating whether this type is used as the default of an inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this type is used as the default of an inheritance hierarchy.","pos":[0,93]}]},{"pos":[19152,19213],"content":"The metadata for the default type in the inheritance mapping.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata for the default type in the inheritance mapping.","pos":[0,61]}]},{"pos":[19691,19739],"content":"Gets the root type of the inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the root type of the inheritance hierarchy.","pos":[0,48]}]},{"pos":[19915,19929],"content":"The root type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The root type.","pos":[0,14]}]},{"pos":[20409,20485],"content":"Gets a collection of all types that are defined by an inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all types that are defined by an inheritance hierarchy.","pos":[0,76]}]},{"pos":[20764,20828],"content":"A collection of meta-types in the current inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of meta-types in the current inheritance hierarchy.","pos":[0,64]}]},{"pos":[21269,21378],"content":"Gets a value indicating whether the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is an entity type.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is an entity type."},{"pos":[21499,21714],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is an entity type; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is an entity type; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[22207,22300],"content":"Gets a value indicating whether this type is used as the default of an inheritance hierarchy.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value indicating whether this type is used as the default of an inheritance hierarchy.","pos":[0,93]}]},{"pos":[22433,22632],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this type is used as the default of an inheritance hierarchy; otherwise <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this type is used as the default of an inheritance hierarchy; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[23062,23201],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains this <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>."},{"pos":[23369,23395],"content":"The containing meta-model.","needQuote":true,"needEscape":true,"nodes":[{"content":"The containing meta-model.","pos":[0,26]}]},{"pos":[23805,23881],"content":"Gets the name of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the name of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>."},{"pos":[23893,23969],"content":"This name is the same as the name of the common language runtime (CLR) type.","needQuote":true,"needEscape":true,"nodes":[{"content":"This name is the same as the name of the common language runtime (CLR) type.","pos":[0,76]}]},{"pos":[24087,24121],"content":"The name of the current meta-type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the current meta-type.","pos":[0,34]}]},{"pos":[24580,24653],"content":"Gets information about the <ph id=\"ph1\">`OnLoaded`</ph> method contained by this meta-type.","needQuote":true,"needEscape":true,"source":"Gets information about the `OnLoaded` method contained by this meta-type."},{"pos":[24818,24876],"content":"A description of the <ph id=\"ph1\">`OnLoaded`</ph> method for this meta-type.","needQuote":true,"needEscape":true,"source":"A description of the `OnLoaded` method for this meta-type."},{"pos":[25355,25430],"content":"Gets information about the <ph id=\"ph1\">`OnValidate`</ph> method contained by this meta-type.","needQuote":true,"needEscape":true,"source":"Gets information about the `OnValidate` method contained by this meta-type."},{"pos":[25597,25657],"content":"A description of the <ph id=\"ph1\">`OnValidate`</ph> method for this meta-type.","needQuote":true,"needEscape":true,"source":"A description of the `OnValidate` method for this meta-type."},{"pos":[26163,26216],"content":"Gets a collection of all the persistent data members.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of all the persistent data members.","pos":[0,53]}]},{"pos":[26228,26320],"content":"Persistent data members are those fields and properties that are mapped to database columns.","needQuote":true,"needEscape":true,"nodes":[{"content":"Persistent data members are those fields and properties that are mapped to database columns.","pos":[0,92]}]},{"pos":[26616,26678],"content":"A collection of all the meta-data members in the current type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of all the meta-data members in the current type.","pos":[0,62]}]},{"pos":[27109,27263],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that uses this <bpt id=\"p2\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for row definition.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> that uses this <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for row definition."},{"pos":[27431,27499],"content":"A meta-table that uses the current meta-type for its row definition.","needQuote":true,"needEscape":true,"nodes":[{"content":"A meta-table that uses the current meta-type for its row definition.","pos":[0,68]}]},{"pos":[27909,27964],"content":"Gets the underlying common language runtime (CLR) type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the underlying common language runtime (CLR) type.","pos":[0,55]}]},{"pos":[28078,28102],"content":"The associated CLR type.","needQuote":true,"needEscape":true,"nodes":[{"content":"The associated CLR type.","pos":[0,24]}]},{"pos":[28556,28659],"content":"Gets a row-version or timestamp column for this <bpt id=\"p1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a row-version or timestamp column for this <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>."},{"pos":[28845,29019],"content":"The meta-data member that represents the row-version or timestamp column for this meta-type, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if there is none.","needQuote":true,"needEscape":true,"source":"The meta-data member that represents the row-version or timestamp column for this meta-type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is none."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaType\n  id: MetaType\n  children:\n  - System.Data.Linq.Mapping.MetaType.#ctor\n  - System.Data.Linq.Mapping.MetaType.Associations\n  - System.Data.Linq.Mapping.MetaType.CanInstantiate\n  - System.Data.Linq.Mapping.MetaType.DataMembers\n  - System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember\n  - System.Data.Linq.Mapping.MetaType.DerivedTypes\n  - System.Data.Linq.Mapping.MetaType.Discriminator\n  - System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)\n  - System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)\n  - System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)\n  - System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod\n  - System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod\n  - System.Data.Linq.Mapping.MetaType.HasInheritance\n  - System.Data.Linq.Mapping.MetaType.HasInheritanceCode\n  - System.Data.Linq.Mapping.MetaType.HasUpdateCheck\n  - System.Data.Linq.Mapping.MetaType.IdentityMembers\n  - System.Data.Linq.Mapping.MetaType.InheritanceBase\n  - System.Data.Linq.Mapping.MetaType.InheritanceCode\n  - System.Data.Linq.Mapping.MetaType.InheritanceDefault\n  - System.Data.Linq.Mapping.MetaType.InheritanceRoot\n  - System.Data.Linq.Mapping.MetaType.InheritanceTypes\n  - System.Data.Linq.Mapping.MetaType.IsEntity\n  - System.Data.Linq.Mapping.MetaType.IsInheritanceDefault\n  - System.Data.Linq.Mapping.MetaType.Model\n  - System.Data.Linq.Mapping.MetaType.Name\n  - System.Data.Linq.Mapping.MetaType.OnLoadedMethod\n  - System.Data.Linq.Mapping.MetaType.OnValidateMethod\n  - System.Data.Linq.Mapping.MetaType.PersistentDataMembers\n  - System.Data.Linq.Mapping.MetaType.Table\n  - System.Data.Linq.Mapping.MetaType.Type\n  - System.Data.Linq.Mapping.MetaType.VersionMember\n  langs:\n  - csharp\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n  type: Class\n  summary: Represents the mapping of a domain object type to the columns of a database table.\n  syntax:\n    content: public abstract class MetaType\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: MetaType()\n  nameWithType: MetaType.MetaType()\n  fullName: System.Data.Linq.Mapping.MetaType.MetaType()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> class.\n  syntax:\n    content: protected MetaType ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaType.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.Associations\n  id: Associations\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: Associations\n  nameWithType: MetaType.Associations\n  fullName: System.Data.Linq.Mapping.MetaType.Associations\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets an enumeration of all the associations.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaAssociation> Associations { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaAssociation}\n      description: A collection of associations.\n  overload: System.Data.Linq.Mapping.MetaType.Associations*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.CanInstantiate\n  id: CanInstantiate\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: CanInstantiate\n  nameWithType: MetaType.CanInstantiate\n  fullName: System.Data.Linq.Mapping.MetaType.CanInstantiate\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the underlying type can be instantiated as the result of a query.\n  syntax:\n    content: public abstract bool CanInstantiate { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the underlying type can be instantiated as the result of a query; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.CanInstantiate*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.DataMembers\n  id: DataMembers\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: DataMembers\n  nameWithType: MetaType.DataMembers\n  fullName: System.Data.Linq.Mapping.MetaType.DataMembers\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets an enumeration of all the data members (fields and properties).\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> DataMembers { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: A collection of the data members.\n  overload: System.Data.Linq.Mapping.MetaType.DataMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember\n  id: DBGeneratedIdentityMember\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: DBGeneratedIdentityMember\n  nameWithType: MetaType.DBGeneratedIdentityMember\n  fullName: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member that represents the auto-generated identity column.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember DBGeneratedIdentityMember { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The member that represents the auto-generated identity column, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is no auto-generated identity column.\n  overload: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.DerivedTypes\n  id: DerivedTypes\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: DerivedTypes\n  nameWithType: MetaType.DerivedTypes\n  fullName: System.Data.Linq.Mapping.MetaType.DerivedTypes\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets an enumeration of the immediate derived types in an inheritance hierarchy.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType> DerivedTypes { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}\n      description: An enumeration of meta-types.\n  overload: System.Data.Linq.Mapping.MetaType.DerivedTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.Discriminator\n  id: Discriminator\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: Discriminator\n  nameWithType: MetaType.Discriminator\n  fullName: System.Data.Linq.Mapping.MetaType.Discriminator\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the member that represents the inheritance discriminator column.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember Discriminator { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The member that represents the inheritance discriminator column, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is none.\n  overload: System.Data.Linq.Mapping.MetaType.Discriminator*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)\n  id: GetDataMember(System.Reflection.MemberInfo)\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: GetDataMember(MemberInfo)\n  nameWithType: MetaType.GetDataMember(MemberInfo)\n  fullName: System.Data.Linq.Mapping.MetaType.GetDataMember(MemberInfo)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> associated with the specified member.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember GetDataMember (System.Reflection.MemberInfo member);\n    parameters:\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The member for which the associated <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> is sought.\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The <xref href=\"System.Data.Linq.Mapping.MetaDataMember\"></xref> if one is associated with the specified member; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.GetDataMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)\n  id: GetInheritanceType(System.Type)\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: GetInheritanceType(Type)\n  nameWithType: MetaType.GetInheritanceType(Type)\n  fullName: System.Data.Linq.Mapping.MetaType.GetInheritanceType(Type)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for an inheritance subtype.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType GetInheritanceType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The subtype.\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for an inheritance subtype.\n  overload: System.Data.Linq.Mapping.MetaType.GetInheritanceType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)\n  id: GetTypeForInheritanceCode(System.Object)\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: GetTypeForInheritanceCode(Object)\n  nameWithType: MetaType.GetTypeForInheritanceCode(Object)\n  fullName: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the meta-type associated with the specified inheritance code.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType GetTypeForInheritanceCode (object code);\n    parameters:\n    - id: code\n      type: System.Object\n      description: The inheritance code.\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The meta-type associated with the specified inheritance code.\n  overload: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod\n  id: HasAnyLoadMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: HasAnyLoadMethod\n  nameWithType: MetaType.HasAnyLoadMethod\n  fullName: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value that indicates whether the current <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> or any of its bases types has an `OnLoaded` method.\n  syntax:\n    content: public abstract bool HasAnyLoadMethod { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the meta-type or any base meta-type has an `OnLoaded` method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod\n  id: HasAnyValidateMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: HasAnyValidateMethod\n  nameWithType: MetaType.HasAnyValidateMethod\n  fullName: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> or any of its bases types has an `OnValidate` method.\n  syntax:\n    content: public abstract bool HasAnyValidateMethod { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the meta-type or any base meta-type has an `OnValidate` method; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.HasInheritance\n  id: HasInheritance\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: HasInheritance\n  nameWithType: MetaType.HasInheritance\n  fullName: System.Data.Linq.Mapping.MetaType.HasInheritance\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether the type is part of a mapped inheritance hierarchy.\n  syntax:\n    content: public abstract bool HasInheritance { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type is part of a mapped inheritance hierarchy; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.HasInheritance*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.HasInheritanceCode\n  id: HasInheritanceCode\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: HasInheritanceCode\n  nameWithType: MetaType.HasInheritanceCode\n  fullName: System.Data.Linq.Mapping.MetaType.HasInheritanceCode\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether this type defines an inheritance code.\n  syntax:\n    content: public abstract bool HasInheritanceCode { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this type defines an inheritance code; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.HasInheritanceCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.HasUpdateCheck\n  id: HasUpdateCheck\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: HasUpdateCheck\n  nameWithType: MetaType.HasUpdateCheck\n  fullName: System.Data.Linq.Mapping.MetaType.HasUpdateCheck\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether the type has any persistent member that may require a test for optimistic concurrency conflicts.\n  syntax:\n    content: public abstract bool HasUpdateCheck { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the type has any persistent member with an <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref> policy other than <xref href=\"System.Data.Linq.Mapping.UpdateCheck\"></xref>; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.HasUpdateCheck*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.IdentityMembers\n  id: IdentityMembers\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: IdentityMembers\n  nameWithType: MetaType.IdentityMembers\n  fullName: System.Data.Linq.Mapping.MetaType.IdentityMembers\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets an enumeration of all the data members that define the unique identity of the type.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> IdentityMembers { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: An enumeration of members that define the unique identity of the type.\n  overload: System.Data.Linq.Mapping.MetaType.IdentityMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceBase\n  id: InheritanceBase\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: InheritanceBase\n  nameWithType: MetaType.InheritanceBase\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceBase\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the base meta-type in the inheritance hierarchy.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType InheritanceBase { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The base meta-type for the current inheritance hierarchy.\n  overload: System.Data.Linq.Mapping.MetaType.InheritanceBase*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceCode\n  id: InheritanceCode\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: InheritanceCode\n  nameWithType: MetaType.InheritanceCode\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceCode\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether this type defines an inheritance code.\n  syntax:\n    content: public abstract object InheritanceCode { get; }\n    return:\n      type: System.Object\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this type defines an inheritance code; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.InheritanceCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceDefault\n  id: InheritanceDefault\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: InheritanceDefault\n  nameWithType: MetaType.InheritanceDefault\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceDefault\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether this type is used as the default of an inheritance hierarchy.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType InheritanceDefault { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The metadata for the default type in the inheritance mapping.\n  overload: System.Data.Linq.Mapping.MetaType.InheritanceDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceRoot\n  id: InheritanceRoot\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: InheritanceRoot\n  nameWithType: MetaType.InheritanceRoot\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceRoot\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the root type of the inheritance hierarchy.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType InheritanceRoot { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: The root type.\n  overload: System.Data.Linq.Mapping.MetaType.InheritanceRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceTypes\n  id: InheritanceTypes\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: InheritanceTypes\n  nameWithType: MetaType.InheritanceTypes\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceTypes\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a collection of all types that are defined by an inheritance hierarchy.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType> InheritanceTypes { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}\n      description: A collection of meta-types in the current inheritance hierarchy.\n  overload: System.Data.Linq.Mapping.MetaType.InheritanceTypes*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.IsEntity\n  id: IsEntity\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: IsEntity\n  nameWithType: MetaType.IsEntity\n  fullName: System.Data.Linq.Mapping.MetaType.IsEntity\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is an entity type.\n  syntax:\n    content: public abstract bool IsEntity { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is an entity type; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.IsEntity*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault\n  id: IsInheritanceDefault\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: IsInheritanceDefault\n  nameWithType: MetaType.IsInheritanceDefault\n  fullName: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a value indicating whether this type is used as the default of an inheritance hierarchy.\n  syntax:\n    content: public abstract bool IsInheritanceDefault { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this type is used as the default of an inheritance hierarchy; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.Model\n  id: Model\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: Model\n  nameWithType: MetaType.Model\n  fullName: System.Data.Linq.Mapping.MetaType.Model\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaModel Model { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaModel\n      description: The containing meta-model.\n  overload: System.Data.Linq.Mapping.MetaType.Model*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.Name\n  id: Name\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaType.Name\n  fullName: System.Data.Linq.Mapping.MetaType.Name\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.\n  remarks: This name is the same as the name of the common language runtime (CLR) type.\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: The name of the current meta-type.\n  overload: System.Data.Linq.Mapping.MetaType.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.OnLoadedMethod\n  id: OnLoadedMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: OnLoadedMethod\n  nameWithType: MetaType.OnLoadedMethod\n  fullName: System.Data.Linq.Mapping.MetaType.OnLoadedMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets information about the `OnLoaded` method contained by this meta-type.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo OnLoadedMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: A description of the `OnLoaded` method for this meta-type.\n  overload: System.Data.Linq.Mapping.MetaType.OnLoadedMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.OnValidateMethod\n  id: OnValidateMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: OnValidateMethod\n  nameWithType: MetaType.OnValidateMethod\n  fullName: System.Data.Linq.Mapping.MetaType.OnValidateMethod\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets information about the `OnValidate` method contained by this meta-type.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo OnValidateMethod { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: A description of the `OnValidate` method for this meta-type.\n  overload: System.Data.Linq.Mapping.MetaType.OnValidateMethod*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.PersistentDataMembers\n  id: PersistentDataMembers\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: PersistentDataMembers\n  nameWithType: MetaType.PersistentDataMembers\n  fullName: System.Data.Linq.Mapping.MetaType.PersistentDataMembers\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a collection of all the persistent data members.\n  remarks: Persistent data members are those fields and properties that are mapped to database columns.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> PersistentDataMembers { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n      description: A collection of all the meta-data members in the current type.\n  overload: System.Data.Linq.Mapping.MetaType.PersistentDataMembers*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.Table\n  id: Table\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: Table\n  nameWithType: MetaType.Table\n  fullName: System.Data.Linq.Mapping.MetaType.Table\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> that uses this <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for row definition.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaTable Table { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaTable\n      description: A meta-table that uses the current meta-type for its row definition.\n  overload: System.Data.Linq.Mapping.MetaType.Table*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.Type\n  id: Type\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: Type\n  nameWithType: MetaType.Type\n  fullName: System.Data.Linq.Mapping.MetaType.Type\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the underlying common language runtime (CLR) type.\n  syntax:\n    content: public abstract Type Type { get; }\n    return:\n      type: System.Type\n      description: The associated CLR type.\n  overload: System.Data.Linq.Mapping.MetaType.Type*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Linq.Mapping.MetaType.VersionMember\n  id: VersionMember\n  parent: System.Data.Linq.Mapping.MetaType\n  langs:\n  - csharp\n  name: VersionMember\n  nameWithType: MetaType.VersionMember\n  fullName: System.Data.Linq.Mapping.MetaType.VersionMember\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets a row-version or timestamp column for this <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref>.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaDataMember VersionMember { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaDataMember\n      description: The meta-data member that represents the row-version or timestamp column for this meta-type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if there is none.\n  overload: System.Data.Linq.Mapping.MetaType.VersionMember*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.Mapping.MetaType.#ctor\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: MetaType()\n  nameWithType: MetaType.MetaType()\n  fullName: System.Data.Linq.Mapping.MetaType.MetaType()\n- uid: System.Data.Linq.Mapping.MetaType.Associations\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Associations\n  nameWithType: MetaType.Associations\n  fullName: System.Data.Linq.Mapping.MetaType.Associations\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaAssociation}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<MetaAssociation>\n  nameWithType: ReadOnlyCollection<MetaAssociation>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaAssociation>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaAssociation>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaAssociation\n    name: MetaAssociation\n    nameWithType: MetaAssociation\n    fullName: MetaAssociation\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaType.CanInstantiate\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: CanInstantiate\n  nameWithType: MetaType.CanInstantiate\n  fullName: System.Data.Linq.Mapping.MetaType.CanInstantiate\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.MetaType.DataMembers\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: DataMembers\n  nameWithType: MetaType.DataMembers\n  fullName: System.Data.Linq.Mapping.MetaType.DataMembers\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<MetaDataMember>\n  nameWithType: ReadOnlyCollection<MetaDataMember>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaDataMember\n    name: MetaDataMember\n    nameWithType: MetaDataMember\n    fullName: MetaDataMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: DBGeneratedIdentityMember\n  nameWithType: MetaType.DBGeneratedIdentityMember\n  fullName: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember\n- uid: System.Data.Linq.Mapping.MetaDataMember\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaDataMember\n  nameWithType: MetaDataMember\n  fullName: System.Data.Linq.Mapping.MetaDataMember\n- uid: System.Data.Linq.Mapping.MetaType.DerivedTypes\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: DerivedTypes\n  nameWithType: MetaType.DerivedTypes\n  fullName: System.Data.Linq.Mapping.MetaType.DerivedTypes\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}\n  parent: System.Collections.ObjectModel\n  isExternal: true\n  name: ReadOnlyCollection<MetaType>\n  nameWithType: ReadOnlyCollection<MetaType>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaType>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaType\n    name: MetaType\n    nameWithType: MetaType\n    fullName: MetaType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaType.Discriminator\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Discriminator\n  nameWithType: MetaType.Discriminator\n  fullName: System.Data.Linq.Mapping.MetaType.Discriminator\n- uid: System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: GetDataMember(MemberInfo)\n  nameWithType: MetaType.GetDataMember(MemberInfo)\n  fullName: System.Data.Linq.Mapping.MetaType.GetDataMember(MemberInfo)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: GetInheritanceType(Type)\n  nameWithType: MetaType.GetInheritanceType(Type)\n  fullName: System.Data.Linq.Mapping.MetaType.GetInheritanceType(Type)\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: GetTypeForInheritanceCode(Object)\n  nameWithType: MetaType.GetTypeForInheritanceCode(Object)\n  fullName: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(Object)\n- uid: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasAnyLoadMethod\n  nameWithType: MetaType.HasAnyLoadMethod\n  fullName: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod\n- uid: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasAnyValidateMethod\n  nameWithType: MetaType.HasAnyValidateMethod\n  fullName: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod\n- uid: System.Data.Linq.Mapping.MetaType.HasInheritance\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasInheritance\n  nameWithType: MetaType.HasInheritance\n  fullName: System.Data.Linq.Mapping.MetaType.HasInheritance\n- uid: System.Data.Linq.Mapping.MetaType.HasInheritanceCode\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasInheritanceCode\n  nameWithType: MetaType.HasInheritanceCode\n  fullName: System.Data.Linq.Mapping.MetaType.HasInheritanceCode\n- uid: System.Data.Linq.Mapping.MetaType.HasUpdateCheck\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasUpdateCheck\n  nameWithType: MetaType.HasUpdateCheck\n  fullName: System.Data.Linq.Mapping.MetaType.HasUpdateCheck\n- uid: System.Data.Linq.Mapping.MetaType.IdentityMembers\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: IdentityMembers\n  nameWithType: MetaType.IdentityMembers\n  fullName: System.Data.Linq.Mapping.MetaType.IdentityMembers\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceBase\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceBase\n  nameWithType: MetaType.InheritanceBase\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceBase\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceCode\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceCode\n  nameWithType: MetaType.InheritanceCode\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceCode\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceDefault\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceDefault\n  nameWithType: MetaType.InheritanceDefault\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceDefault\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceRoot\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceRoot\n  nameWithType: MetaType.InheritanceRoot\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceRoot\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceTypes\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceTypes\n  nameWithType: MetaType.InheritanceTypes\n  fullName: System.Data.Linq.Mapping.MetaType.InheritanceTypes\n- uid: System.Data.Linq.Mapping.MetaType.IsEntity\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: IsEntity\n  nameWithType: MetaType.IsEntity\n  fullName: System.Data.Linq.Mapping.MetaType.IsEntity\n- uid: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: IsInheritanceDefault\n  nameWithType: MetaType.IsInheritanceDefault\n  fullName: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault\n- uid: System.Data.Linq.Mapping.MetaType.Model\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Model\n  nameWithType: MetaType.Model\n  fullName: System.Data.Linq.Mapping.MetaType.Model\n- uid: System.Data.Linq.Mapping.MetaModel\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Data.Linq.Mapping.MetaModel\n- uid: System.Data.Linq.Mapping.MetaType.Name\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Name\n  nameWithType: MetaType.Name\n  fullName: System.Data.Linq.Mapping.MetaType.Name\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaType.OnLoadedMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: OnLoadedMethod\n  nameWithType: MetaType.OnLoadedMethod\n  fullName: System.Data.Linq.Mapping.MetaType.OnLoadedMethod\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Data.Linq.Mapping.MetaType.OnValidateMethod\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: OnValidateMethod\n  nameWithType: MetaType.OnValidateMethod\n  fullName: System.Data.Linq.Mapping.MetaType.OnValidateMethod\n- uid: System.Data.Linq.Mapping.MetaType.PersistentDataMembers\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: PersistentDataMembers\n  nameWithType: MetaType.PersistentDataMembers\n  fullName: System.Data.Linq.Mapping.MetaType.PersistentDataMembers\n- uid: System.Data.Linq.Mapping.MetaType.Table\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Table\n  nameWithType: MetaType.Table\n  fullName: System.Data.Linq.Mapping.MetaType.Table\n- uid: System.Data.Linq.Mapping.MetaTable\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Data.Linq.Mapping.MetaTable\n- uid: System.Data.Linq.Mapping.MetaType.Type\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Type\n  nameWithType: MetaType.Type\n  fullName: System.Data.Linq.Mapping.MetaType.Type\n- uid: System.Data.Linq.Mapping.MetaType.VersionMember\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: VersionMember\n  nameWithType: MetaType.VersionMember\n  fullName: System.Data.Linq.Mapping.MetaType.VersionMember\n- uid: System.Data.Linq.Mapping.MetaType.#ctor*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType.MetaType\n- uid: System.Data.Linq.Mapping.MetaType.Associations*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Associations\n  nameWithType: MetaType.Associations\n- uid: System.Data.Linq.Mapping.MetaType.CanInstantiate*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: CanInstantiate\n  nameWithType: MetaType.CanInstantiate\n- uid: System.Data.Linq.Mapping.MetaType.DataMembers*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: DataMembers\n  nameWithType: MetaType.DataMembers\n- uid: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: DBGeneratedIdentityMember\n  nameWithType: MetaType.DBGeneratedIdentityMember\n- uid: System.Data.Linq.Mapping.MetaType.DerivedTypes*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: DerivedTypes\n  nameWithType: MetaType.DerivedTypes\n- uid: System.Data.Linq.Mapping.MetaType.Discriminator*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Discriminator\n  nameWithType: MetaType.Discriminator\n- uid: System.Data.Linq.Mapping.MetaType.GetDataMember*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: GetDataMember\n  nameWithType: MetaType.GetDataMember\n- uid: System.Data.Linq.Mapping.MetaType.GetInheritanceType*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: GetInheritanceType\n  nameWithType: MetaType.GetInheritanceType\n- uid: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: GetTypeForInheritanceCode\n  nameWithType: MetaType.GetTypeForInheritanceCode\n- uid: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasAnyLoadMethod\n  nameWithType: MetaType.HasAnyLoadMethod\n- uid: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasAnyValidateMethod\n  nameWithType: MetaType.HasAnyValidateMethod\n- uid: System.Data.Linq.Mapping.MetaType.HasInheritance*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasInheritance\n  nameWithType: MetaType.HasInheritance\n- uid: System.Data.Linq.Mapping.MetaType.HasInheritanceCode*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasInheritanceCode\n  nameWithType: MetaType.HasInheritanceCode\n- uid: System.Data.Linq.Mapping.MetaType.HasUpdateCheck*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: HasUpdateCheck\n  nameWithType: MetaType.HasUpdateCheck\n- uid: System.Data.Linq.Mapping.MetaType.IdentityMembers*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: IdentityMembers\n  nameWithType: MetaType.IdentityMembers\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceBase*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceBase\n  nameWithType: MetaType.InheritanceBase\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceCode*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceCode\n  nameWithType: MetaType.InheritanceCode\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceDefault*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceDefault\n  nameWithType: MetaType.InheritanceDefault\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceRoot*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceRoot\n  nameWithType: MetaType.InheritanceRoot\n- uid: System.Data.Linq.Mapping.MetaType.InheritanceTypes*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: InheritanceTypes\n  nameWithType: MetaType.InheritanceTypes\n- uid: System.Data.Linq.Mapping.MetaType.IsEntity*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: IsEntity\n  nameWithType: MetaType.IsEntity\n- uid: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: IsInheritanceDefault\n  nameWithType: MetaType.IsInheritanceDefault\n- uid: System.Data.Linq.Mapping.MetaType.Model*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Model\n  nameWithType: MetaType.Model\n- uid: System.Data.Linq.Mapping.MetaType.Name*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Name\n  nameWithType: MetaType.Name\n- uid: System.Data.Linq.Mapping.MetaType.OnLoadedMethod*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: OnLoadedMethod\n  nameWithType: MetaType.OnLoadedMethod\n- uid: System.Data.Linq.Mapping.MetaType.OnValidateMethod*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: OnValidateMethod\n  nameWithType: MetaType.OnValidateMethod\n- uid: System.Data.Linq.Mapping.MetaType.PersistentDataMembers*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: PersistentDataMembers\n  nameWithType: MetaType.PersistentDataMembers\n- uid: System.Data.Linq.Mapping.MetaType.Table*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Table\n  nameWithType: MetaType.Table\n- uid: System.Data.Linq.Mapping.MetaType.Type*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: Type\n  nameWithType: MetaType.Type\n- uid: System.Data.Linq.Mapping.MetaType.VersionMember*\n  parent: System.Data.Linq.Mapping.MetaType\n  isExternal: false\n  name: VersionMember\n  nameWithType: MetaType.VersionMember\n"}