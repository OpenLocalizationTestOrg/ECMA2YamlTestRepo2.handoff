{"nodes":[{"pos":[537,676],"content":"Represents an item to embed in an e-mail message constructed using the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.MailDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Represents an item to embed in an e-mail message constructed using the <xref href=\"System.Web.UI.WebControls.MailDefinition\"></xref> class."},{"pos":[689,2794],"content":"The EmbeddedMailObject represents an item to embed in a mail message. These embedded items can be image files such as company logos. Each embedded item is specified by an identifier and a path.       To ensure that an embedded object is displayed correctly within the e-mail message file, the following conditions must be met:      -   The mail message is in HTML format.      -   The item is an image file (.jpg, .gif, .bmp, and so on).      -   The HTML-formatted body file specified in the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property contains a reference to the image file using the following syntax:          ```       <img src=\"cid:identifier\" alt=\"Alternate Text\" />.       ```       If an EmbeddedMailObject is added to a mail message and does not fulfill all of the requirements specified previously, it will most likely be displayed as an attachment in the mail message. If an item is referenced by an identifier in the mail message but not included as an embedded item, it will appear as a broken attachment when the mail is viewed.       The <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> stores a collection of EmbeddedMailObject objects for a single mail message. The <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> is used by the <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> property of the <xref:System.Web.UI.WebControls.MailDefinition> object to create the mail message.       Mail messages that allow embedded objects are configurable in the following Web controls by setting their <xref:System.Web.UI.WebControls.MailDefinition> properties declaratively:      -   <xref:System.Web.UI.WebControls.CreateUserWizard>      -   <xref:System.Web.UI.WebControls.ChangePassword>      -   <xref:System.Web.UI.WebControls.PasswordRecovery>      > [!NOTE] >  The values in the EmbeddedMailObject and <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> objects are not stored in view state. This protects against malicious users discovering path information for your server.","needQuote":false,"needEscape":true,"nodes":[{"content":"The EmbeddedMailObject represents an item to embed in a mail message.","pos":[0,69]},{"content":"These embedded items can be image files such as company logos.","pos":[70,132]},{"content":"Each embedded item is specified by an identifier and a path.","pos":[133,193]},{"content":"To ensure that an embedded object is displayed correctly within the e-mail message file, the following conditions must be met:      -   The mail message is in HTML format.","pos":[200,371]},{"content":"-   The item is an image file (.jpg, .gif, .bmp, and so on).","pos":[377,437]},{"content":"-   The HTML-formatted body file specified in the &lt;xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A&gt; property contains a reference to the image file using the following syntax:          <ph id=\"ph1\">```       &lt;img src=\"cid:identifier\" alt=\"Alternate Text\" /&gt;.       ```</ph>       If an EmbeddedMailObject is added to a mail message and does not fulfill all of the requirements specified previously, it will most likely be displayed as an attachment in the mail message.","pos":[443,908],"source":"      -   The HTML-formatted body file specified in the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property contains a reference to the image file using the following syntax:          ```       <img src=\"cid:identifier\" alt=\"Alternate Text\" />.       ```       If an EmbeddedMailObject is added to a mail message and does not fulfill all of the requirements specified previously, it will most likely be displayed as an attachment in the mail message."},{"content":"If an item is referenced by an identifier in the mail message but not included as an embedded item, it will appear as a broken attachment when the mail is viewed.","pos":[909,1071]},{"content":"The &lt;xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection&gt; stores a collection of EmbeddedMailObject objects for a single mail message.","pos":[1078,1221],"source":"       The <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> stores a collection of EmbeddedMailObject objects for a single mail message."},{"content":"The &lt;xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection&gt; is used by the &lt;xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.MailDefinition&gt; object to create the mail message.","pos":[1222,1469],"source":" The <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> is used by the <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> property of the <xref:System.Web.UI.WebControls.MailDefinition> object to create the mail message."},{"content":"Mail messages that allow embedded objects are configurable in the following Web controls by setting their &lt;xref:System.Web.UI.WebControls.MailDefinition&gt; properties declaratively:      -   &lt;xref:System.Web.UI.WebControls.CreateUserWizard&gt;      -   &lt;xref:System.Web.UI.WebControls.ChangePassword&gt;      -   &lt;xref:System.Web.UI.WebControls.PasswordRecovery&gt;      &gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The values in the EmbeddedMailObject and &lt;xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection&gt; objects are not stored in view state.","pos":[1476,1990],"source":"       Mail messages that allow embedded objects are configurable in the following Web controls by setting their <xref:System.Web.UI.WebControls.MailDefinition> properties declaratively:      -   <xref:System.Web.UI.WebControls.CreateUserWizard>      -   <xref:System.Web.UI.WebControls.ChangePassword>      -   <xref:System.Web.UI.WebControls.PasswordRecovery>      > [!NOTE] >  The values in the EmbeddedMailObject and <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> objects are not stored in view state."},{"content":"This protects against malicious users discovering path information for your server.","pos":[1991,2074]}]},{"pos":[7227,7333],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.EmbeddedMailObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.EmbeddedMailObject\"></xref> class."},{"pos":[7345,7676],"content":"To get or set the identifier of the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> property. To get or set the path to the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property. Both properties must be set to successfully embed the item in the mail message.","needQuote":true,"needEscape":true,"nodes":[{"content":"To get or set the identifier of the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> property. To get or set the path to the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property. Both properties must be set to successfully embed the item in the mail message.","pos":[0,331],"nodes":[{"content":"To get or set the identifier of the embedded item, use the &lt;xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A&gt; property.","pos":[0,128],"source":"To get or set the identifier of the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> property."},{"content":"To get or set the path to the embedded item, use the &lt;xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A&gt; property.","pos":[129,251],"source":" To get or set the path to the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property."},{"content":"Both properties must be set to successfully embed the item in the mail message.","pos":[252,331]}]}]},{"pos":[8359,8534],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.EmbeddedMailObject\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified identifier name and path to populate the object.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.EmbeddedMailObject\"></xref> class, using the specified identifier name and path to populate the object."},{"pos":[12790,12948],"content":"The name used as the identifier of the item to embed in the mail message. For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name used as the identifier of the item to embed in the mail message. For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>.","pos":[0,158],"nodes":[{"content":"The name used as the identifier of the item to embed in the mail message.","pos":[0,73]},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*&gt;.","pos":[74,158],"source":" For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>."}]}]},{"pos":[13009,13157],"content":"The path used to retrieve an item to embed in the mail message. For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The path used to retrieve an item to embed in the mail message. For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>.","pos":[0,148],"nodes":[{"content":"The path used to retrieve an item to embed in the mail message.","pos":[0,63]},{"content":"For more information, see &lt;xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*&gt;.","pos":[64,148],"source":" For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>."}]}]},{"pos":[13616,13803],"content":"Gets or sets the name that is used as the identifier of the item to be embedded in a mail message constructed with the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.MailDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets or sets the name that is used as the identifier of the item to be embedded in a mail message constructed with the <xref href=\"System.Web.UI.WebControls.MailDefinition\"></xref> class."},{"pos":[13816,14593],"content":"The Name property specifies an identifier for an item to embed in a mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> class. The identifier is used to map the item contained in the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property to its appropriate location in the body of the file specified in the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property, using the following syntax:      ```   <img src=\"cid:identifier\" alt=\"Alternate Text\" />   ```       Typically, the item is an image file. The default for the Name property is an empty string.       It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images.","needQuote":false,"needEscape":true,"nodes":[{"content":"The Name property specifies an identifier for an item to embed in a mail message constructed declaratively with the &lt;xref:System.Web.UI.WebControls.MailDefinition&gt; class.","pos":[0,170],"source":"The Name property specifies an identifier for an item to embed in a mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> class."},{"content":"The identifier is used to map the item contained in the &lt;xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A&gt; property to its appropriate location in the body of the file specified in the &lt;xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A&gt; property, using the following syntax:      <ph id=\"ph1\">```   &lt;img src=\"cid:identifier\" alt=\"Alternate Text\" /&gt;   ```</ph>       Typically, the item is an image file.","pos":[171,577],"source":" The identifier is used to map the item contained in the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property to its appropriate location in the body of the file specified in the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property, using the following syntax:      ```   <img src=\"cid:identifier\" alt=\"Alternate Text\" />   ```       Typically, the item is an image file."},{"content":"The default for the Name property is an empty string.","pos":[578,631]},{"content":"It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images.","pos":[638,765]}]},{"pos":[18429,18491],"content":"Returns the identifier of the item to embed in a mail message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the identifier of the item to embed in a mail message.","pos":[0,62]}]},{"pos":[18949,19120],"content":"Gets or sets the path that is used to retrieve an item to embed in a mail message constructed with the <bpt id=\"p1\">&lt;xref href=\"System.Web.UI.WebControls.MailDefinition\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Gets or sets the path that is used to retrieve an item to embed in a mail message constructed with the <xref href=\"System.Web.UI.WebControls.MailDefinition\"></xref> class."},{"pos":[23588,23644],"content":"Returns the path to the item to embed in a mail message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the path to the item to embed in a mail message.","pos":[0,56]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.EmbeddedMailObject\n  id: EmbeddedMailObject\n  children:\n  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor\n  - System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)\n  - System.Web.UI.WebControls.EmbeddedMailObject.Name\n  - System.Web.UI.WebControls.EmbeddedMailObject.Path\n  langs:\n  - csharp\n  name: EmbeddedMailObject\n  nameWithType: EmbeddedMailObject\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject\n  type: Class\n  summary: Represents an item to embed in an e-mail message constructed using the <xref href=\"System.Web.UI.WebControls.MailDefinition\"></xref> class.\n  remarks: \"The EmbeddedMailObject represents an item to embed in a mail message. These embedded items can be image files such as company logos. Each embedded item is specified by an identifier and a path.  \\n  \\n To ensure that an embedded object is displayed correctly within the e-mail message file, the following conditions must be met:  \\n  \\n-   The mail message is in HTML format.  \\n  \\n-   The item is an image file (.jpg, .gif, .bmp, and so on).  \\n  \\n-   The HTML-formatted body file specified in the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property contains a reference to the image file using the following syntax:  \\n  \\n    ```  \\n    <img src=\\\"cid:identifier\\\" alt=\\\"Alternate Text\\\" />.  \\n    ```  \\n  \\n If an EmbeddedMailObject is added to a mail message and does not fulfill all of the requirements specified previously, it will most likely be displayed as an attachment in the mail message. If an item is referenced by an identifier in the mail message but not included as an embedded item, it will appear as a broken attachment when the mail is viewed.  \\n  \\n The <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> stores a collection of EmbeddedMailObject objects for a single mail message. The <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> is used by the <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> property of the <xref:System.Web.UI.WebControls.MailDefinition> object to create the mail message.  \\n  \\n Mail messages that allow embedded objects are configurable in the following Web controls by setting their <xref:System.Web.UI.WebControls.MailDefinition> properties declaratively:  \\n  \\n-   <xref:System.Web.UI.WebControls.CreateUserWizard>  \\n  \\n-   <xref:System.Web.UI.WebControls.ChangePassword>  \\n  \\n-   <xref:System.Web.UI.WebControls.PasswordRecovery>  \\n  \\n> [!NOTE]\\n>  The values in the EmbeddedMailObject and <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> objects are not stored in view state. This protects against malicious users discovering path information for your server.\"\n  example:\n  - \"The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \\n  \\n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_1.aspx)]  \\n  \\n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \\n  \\n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_262_2.vb)]\\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_262_2.cs)]  \\n  \\n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \\n  \\n> [!IMPORTANT]\\n>  Sending user account names or passwords in e-mail is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \\\"sniffing\\\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \\n  \\n```  \\n<html>  \\n<head><title></title></head>  \\n<body>  \\n<form>  \\n  \\n  <h1>Your password for the account named \\\"<%Username%>\\\" has changed.</h1>  \\n  \\n  <p>  \\n  If you did not initiate this change, please call 1-206-555-0100.  \\n  </p>  \\n  \\n  <p>  \\n  <a href=\\\"http://www.contoso.com/login.aspx\\\">  \\n    <img src=\\\"cid:LoginGif\\\" alt=\\\"Log In\\\" />  \\n  </a>   \\n  </p>  \\n  \\n  <p>  \\n  Please read our attached Privacy Notice.  \\n  </p>  \\n  \\n</form>  \\n</body>  \\n</html>  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))]\n\n      public sealed class EmbeddedMailObject\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  langs:\n  - csharp\n  name: EmbeddedMailObject()\n  nameWithType: EmbeddedMailObject.EmbeddedMailObject()\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.EmbeddedMailObject\"></xref> class.\n  remarks: To get or set the identifier of the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> property. To get or set the path to the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property. Both properties must be set to successfully embed the item in the mail message.\n  syntax:\n    content: public EmbeddedMailObject ();\n    parameters: []\n  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  langs:\n  - csharp\n  name: EmbeddedMailObject(String,String)\n  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.EmbeddedMailObject\"></xref> class, using the specified identifier name and path to populate the object.\n  remarks: ''\n  example:\n  - \"The following code example shows a code-behind example of an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. This code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \\n  \\n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \\n  \\n The following code example demonstrates using an .aspx page.  \\n  \\n [!code-cs[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.ChangePassword#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_1.aspx)]  \\n  \\n The following code example demonstrates using a code-behind file.  \\n  \\n [!code-cs[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_2.cs)]\\n [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_2.vb)]  \\n  \\n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \\n  \\n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/8f3c61bf-418b-4557-b797-_3.vb)]\\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/8f3c61bf-418b-4557-b797-_3.cs)]  \\n  \\n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \\n  \\n> [!IMPORTANT]\\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \\\"sniffing\\\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \\n  \\n```  \\n<html>  \\n<head><title></title></head>  \\n<body>  \\n<form>  \\n  \\n  <h1>Your password for the account named \\\"<%Username%>\\\" has changed.</h1>  \\n  \\n  <p>  \\n  If you did not initiate this change, please call 1-206-555-0100.  \\n  </p>  \\n  \\n  <p>  \\n  <a href=\\\"http://www.contoso.com/login.aspx\\\">  \\n    <img src=\\\"cid:LoginGif\\\" alt=\\\"Log In\\\" />  \\n  </a>   \\n  </p>  \\n  \\n  <p>  \\n  Please read our attached Privacy Notice.  \\n  </p>  \\n  \\n</form>  \\n</body>  \\n</html>  \\n```\"\n  syntax:\n    content: public EmbeddedMailObject (string name, string path);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used as the identifier of the item to embed in the mail message. For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name*>.\n    - id: path\n      type: System.String\n      description: The path used to retrieve an item to embed in the mail message. For more information, see <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path*>.\n  overload: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name\n  id: Name\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  langs:\n  - csharp\n  name: Name\n  nameWithType: EmbeddedMailObject.Name\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the name that is used as the identifier of the item to be embedded in a mail message constructed with the <xref href=\"System.Web.UI.WebControls.MailDefinition\"></xref> class.\n  remarks: \"The Name property specifies an identifier for an item to embed in a mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> class. The identifier is used to map the item contained in the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property to its appropriate location in the body of the file specified in the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property, using the following syntax:  \\n  \\n```  \\n<img src=\\\"cid:identifier\\\" alt=\\\"Alternate Text\\\" />  \\n```  \\n  \\n Typically, the item is an image file. The default for the Name property is an empty string.  \\n  \\n It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images.\"\n  example:\n  - \"The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \\n  \\n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_1.aspx)]  \\n  \\n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \\n  \\n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_266_2.vb)]\\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_266_2.cs)]  \\n  \\n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \\n  \\n> [!IMPORTANT]\\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are sent in plain text and can be read by special network \\\"sniffing\\\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \\n  \\n```  \\n<html>  \\n<head><title></title></head>  \\n<body>  \\n<form>  \\n  \\n  <h1>Your password for the account named \\\"<%Username%>\\\" has changed.</h1>  \\n  \\n  <p>  \\n  If you did not initiate this change, please call 1-206-555-0100.  \\n  </p>  \\n  \\n  <p>  \\n  <a href=\\\"http://www.contoso.com/login.aspx\\\">  \\n    <img src=\\\"cid:LoginGif\\\" alt=\\\"Log In\\\" />  \\n  </a>   \\n  </p>  \\n  \\n  <p>  \\n  Please read our attached Privacy Notice.  \\n  </p>  \\n  \\n</form>  \\n</body>  \\n</html>  \\n```\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: Returns the identifier of the item to embed in a mail message.\n  overload: System.Web.UI.WebControls.EmbeddedMailObject.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path\n  id: Path\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  langs:\n  - csharp\n  name: Path\n  nameWithType: EmbeddedMailObject.Path\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Gets or sets the path that is used to retrieve an item to embed in a mail message constructed with the <xref href=\"System.Web.UI.WebControls.MailDefinition\"></xref> class.\n  remarks: \"The Path property specifies the path to the item you want to embed in the mail message constructed declaratively with the <xref:System.Web.UI.WebControls.MailDefinition> object. The file path in Path must be a path such as C:\\\\MyServer\\\\Banner.gif. Typically, the embedded item is an image file. If an image file is referenced by its identifier in the mail message but not included in the message, the image appears as a broken attachment when the e-mail message is viewed.  \\n  \\n It is a best practice for accessibility design to set the alternate text property in your mail message for any embedded images.\"\n  example:\n  - \"The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> event named `SendingMail`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \\n  \\n If the password change succeeds, the code in the `SendingMail` event handler attempts to send an e-mail message to the user to confirm the change. SMTP must already be configured on the server in order for this code example to work. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \\n  \\n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](~/add/includes/ajax-current-ext-md.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \\n  \\n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_1.aspx)]\\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_1.aspx)]  \\n  \\n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \\n  \\n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_255_2.vb)]\\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_255_2.cs)]  \\n  \\n The following example code can be used as the ChangePasswordMail.htm file for the preceding example code.  \\n  \\n> [!IMPORTANT]\\n>  Sending user account names or passwords in an e-mail message is a potential security threat. E-mail messages are typically sent in plain text and can be read by special network \\\"sniffing\\\" applications.  To improve security, use the mitigations that are described in [Securing Login Controls](~/add/includes/ajax-current-ext-md.md).  \\n  \\n```  \\n<html>  \\n<head><title></title></head>  \\n<body>  \\n<form>  \\n  \\n  <h1>Your password for the account named \\\"<%Username%>\\\" has changed.</h1>  \\n  \\n  <p>  \\n  If you did not initiate this change, please call 1-206-555-0100.  \\n  </p>  \\n  \\n  <p>  \\n  <a href=\\\"http://www.contoso.com/login.aspx\\\">  \\n    <img src=\\\"cid:LoginGif\\\" alt=\\\"Log In\\\" />  \\n  </a>   \\n  </p>  \\n  \\n  <p>  \\n  Please read our attached Privacy Notice.  \\n  </p>  \\n  \\n</form>  \\n</body>  \\n</html>  \\n```\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: Returns the path to the item to embed in a mail message.\n  overload: System.Web.UI.WebControls.EmbeddedMailObject.Path*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: EmbeddedMailObject()\n  nameWithType: EmbeddedMailObject.EmbeddedMailObject()\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject()\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: EmbeddedMailObject(String,String)\n  nameWithType: EmbeddedMailObject.EmbeddedMailObject(String,String)\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.EmbeddedMailObject(String,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: Name\n  nameWithType: EmbeddedMailObject.Name\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Name\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: Path\n  nameWithType: EmbeddedMailObject.Path\n  fullName: System.Web.UI.WebControls.EmbeddedMailObject.Path\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.#ctor*\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: EmbeddedMailObject\n  nameWithType: EmbeddedMailObject.EmbeddedMailObject\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.Name*\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: Name\n  nameWithType: EmbeddedMailObject.Name\n- uid: System.Web.UI.WebControls.EmbeddedMailObject.Path*\n  parent: System.Web.UI.WebControls.EmbeddedMailObject\n  isExternal: false\n  name: Path\n  nameWithType: EmbeddedMailObject.Path\n"}