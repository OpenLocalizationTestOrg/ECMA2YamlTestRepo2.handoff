{"nodes":[{"pos":[1572,1671],"content":"Maintains run-time timing state for a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Maintains run-time timing state for a <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>."},{"pos":[1684,3601],"content":"A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time. It's the timeline's Clock object that does the real work: it maintains timing-related run-time state for the timeline.       In most cases, a clock is created automatically for your timeline. When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties. For examples, see [How to: Animate a Property by Using a Storyboard](~/add/includes/ajax-current-ext-md.md) and [How to: Animate a Property Without Using a Storyboard](~/add/includes/ajax-current-ext-md.md).       You can also create a Clock explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method. In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own Clock use can provide performance benefits.       Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created. The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>. Non-root clocks cannot be directly controlled.       Once created, a clock cannot be modified (but it can be manipulated).      ## Using a Timeline as a Timer    A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Media.Animation.Timeline&gt;, by itself, doesn't actually do anything other than describe a segment of time.","pos":[0,128],"source":"A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time."},{"content":"It's the timeline's Clock object that does the real work: it maintains timing-related run-time state for the timeline.","pos":[129,247]},{"content":"In most cases, a clock is created automatically for your timeline.","pos":[254,320]},{"content":"When you animate by using a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; or the &lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A&gt; method, clocks are automatically created for your timelines and animations and applied to their targeted properties.","pos":[321,588],"source":" When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties."},{"content":"For examples, see <bpt id=\"p1\">[</bpt>How to: Animate a Property by Using a Storyboard<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id=\"p2\">[</bpt>How to: Animate a Property Without Using a Storyboard<ept id=\"p2\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[589,796],"source":" For examples, see [How to: Animate a Property by Using a Storyboard](~/add/includes/ajax-current-ext-md.md) and [How to: Animate a Property Without Using a Storyboard](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can also create a Clock explicitly by using the &lt;xref:System.Windows.Media.Animation.Timeline.CreateClock%2A&gt; method.","pos":[803,924],"source":"       You can also create a Clock explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method."},{"content":"In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own Clock use can provide performance benefits.","pos":[925,1074]},{"content":"Clocks are arranged in trees that match the structure of the &lt;xref:System.Windows.Media.Animation.Timeline&gt; objects tree from which they are created.","pos":[1081,1230],"source":"       Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created."},{"content":"The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its &lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;.","pos":[1231,1415],"source":" The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>."},{"content":"Non-root clocks cannot be directly controlled.","pos":[1416,1462]},{"content":"Once created, a clock cannot be modified (but it can be manipulated).","pos":[1469,1538]},{"content":"Using a Timeline as a Timer    A timeline's clock will only progress when there's an event handler associated with it or (in the case of an &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; object) it is associated with a property.","pos":[1547,1781],"source":"      ## Using a Timeline as a Timer    A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property."},{"content":"For this reason (and others), it's not recommended that you use a &lt;xref:System.Windows.Media.Animation.Timeline&gt; as a timer.","pos":[1782,1906],"source":" For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer."}]},{"pos":[4454,4731],"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> class, using the specified <xref:System.Windows.Media.Animation.Clock.Timeline*> as a template. The new <xref href=\"System.Windows.Media.Animation.Clock\"></xref> object has no children.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, using the specified &lt;xref:System.Windows.Media.Animation.Clock.Timeline*&gt; as a template.","pos":[0,187],"source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> class, using the specified <xref:System.Windows.Media.Animation.Clock.Timeline*> as a template."},{"content":"The new <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object has no children.","pos":[188,277],"source":" The new <xref href=\"System.Windows.Media.Animation.Clock\"></xref> object has no children."}]},{"pos":[4929,5146],"content":"The &lt;xref:System.Windows.Media.Animation.Clock.Timeline<bpt id=\"p1\">*</bpt>&gt; from which this clock should be constructed. Clocks are not created for any child &lt;xref:System.Windows.Media.Animation.Clock.Timeline<ept id=\"p1\">*</ept>&gt; objects, if they exist.","needQuote":true,"needEscape":true,"source":"The <xref:System.Windows.Media.Animation.Clock.Timeline*> from which this clock should be constructed. Clocks are not created for any child <xref:System.Windows.Media.Animation.Clock.Timeline*> objects, if they exist."},{"pos":[5593,5648],"content":"Occurs when this clock has completely finished playing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this clock has completely finished playing.","pos":[0,55]}]},{"pos":[5661,6211],"content":"If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations. If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.       Stopping a clock does not trigger its completed event, but advancing it to its fill period does.","needQuote":false,"needEscape":true,"nodes":[{"content":"If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations. If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.       Stopping a clock does not trigger its completed event, but advancing it to its fill period does.","pos":[0,548],"nodes":[{"content":"If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.","pos":[0,215]},{"content":"If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.","pos":[216,445]},{"content":"Stopping a clock does not trigger its completed event, but advancing it to its fill period does.","pos":[452,548]}]}]},{"pos":[6336,6348],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6747,6955],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.ClockController\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be used to start, pause, resume, seek, skip, stop, or remove this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Media.Animation.ClockController\"></xref> that can be used to start, pause, resume, seek, skip, stop, or remove this <xref href=\"System.Windows.Media.Animation.Clock\"></xref>."},{"pos":[6967,7016],"content":"Only root clocks can be interactively controlled.","needQuote":true,"needEscape":true,"nodes":[{"content":"Only root clocks can be interactively controlled.","pos":[0,49]}]},{"pos":[7204,7371],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.ClockController\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this is a root clock; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Media.Animation.ClockController\"></xref> if this is a root clock; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[7871,7965],"content":"Gets the rate at which the clock's time is currently progressing, compared to real-world time.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the rate at which the clock's time is currently progressing, compared to real-world time.","pos":[0,94]}]},{"pos":[8115,8312],"content":"The rate at which this clock's time is current progressing, compared to real-world time. If the clock is stopped, this property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The rate at which this clock's time is current progressing, compared to real-world time.","pos":[0,88]},{"content":"If the clock is stopped, this property returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[89,197],"source":" If the clock is stopped, this property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[8872,8913],"content":"Occurs when the clock's speed is updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the clock's speed is updated.","pos":[0,41]}]},{"pos":[8926,9313],"content":"Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.       Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.","needQuote":false,"needEscape":true,"nodes":[{"content":"Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.       Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.","pos":[0,385],"nodes":[{"content":"Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a &lt;xref:System.Windows.Media.Animation.ClockController&gt; triggers this event.","pos":[0,199],"source":"Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event."},{"content":"Although this event occurs when the &lt;xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A&gt; property becomes invalid, that doesn't necessarily mean the property changed.","pos":[206,385],"source":"       Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed."}]}]},{"pos":[9458,9470],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[9904,10034],"content":"Gets the current global time, as established by the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> timing system.","needQuote":true,"needEscape":true,"source":"Gets the current global time, as established by the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] timing system."},{"pos":[10163,10273],"content":"The current global time for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> timing system.","needQuote":true,"needEscape":true,"source":"The current global time for the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] timing system."},{"pos":[10770,10810],"content":"Get the current iteration of this clock.","needQuote":true,"needEscape":true,"nodes":[{"content":"Get the current iteration of this clock.","pos":[0,40]}]},{"pos":[10823,11229],"content":"A clock's first iteration has a value of 1.       If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.       Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.","needQuote":false,"needEscape":true,"nodes":[{"content":"A clock's first iteration has a value of 1.","pos":[0,43]},{"content":"If this clock's timeline has an &lt;xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A&gt; setting of <ph id=\"ph1\">`true`</ph>, a full iteration consists of a forward-reverse pair, not just one of these segments.","pos":[50,247],"source":"       If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments."},{"content":"Regardless of its current iteration, seeking a clock returns its current iteration to 1.","pos":[254,342]},{"content":"Restarting a clock also returns its current iteration to 1.","pos":[343,402]}]},{"pos":[11374,11528],"content":"This clock's current iteration within its current active period, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this clock is stopped.","needQuote":true,"needEscape":true,"source":"This clock's current iteration within its current active period, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is stopped."},{"pos":[12019,12140],"content":"Gets the current progress of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> within its current iteration.","needQuote":true,"needEscape":true,"source":"Gets the current progress of this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> within its current iteration."},{"pos":[12153,12875],"content":"The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.       A clock that is <xref:System.Windows.Media.Animation.ClockState> has a CurrentProgress of 1.0.      ## Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.","needQuote":false,"needEscape":true,"nodes":[{"content":"The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.       A clock that is <xref:System.Windows.Media.Animation.ClockState> has a CurrentProgress of 1.0.      ## Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.","pos":[0,717],"nodes":[{"content":"The value of this property indicates the &lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt; normalized by the &lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt; of this clock's &lt;xref:System.Windows.Media.Animation.Clock.Timeline%2A&gt;.","pos":[0,249],"source":"The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>."},{"content":"A clock that is &lt;xref:System.Windows.Media.Animation.ClockState&gt; has a CurrentProgress of 1.0.","pos":[256,350],"source":"       A clock that is <xref:System.Windows.Media.Animation.ClockState> has a CurrentProgress of 1.0."},{"content":"Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; object) it is associated with a property.","pos":[359,592],"source":"      ## Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property."},{"content":"For this reason (and others), it's not recommended that you use a &lt;xref:System.Windows.Media.Animation.Timeline&gt; as a timer.","pos":[593,717],"source":" For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer."}]}]},{"pos":[13023,13605],"content":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or 0.0 if this clock is active and its <xref:System.Windows.Media.Animation.Clock.Timeline*> has a <xref:System.Windows.Media.Animation.Timeline.Duration*> of <xref:System.Windows.Duration.Forever*>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this clock is <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or 0.0 if this clock is active and its &lt;xref:System.Windows.Media.Animation.Clock.Timeline<bpt id=\"p3\">*</bpt>&gt; has a &lt;xref:System.Windows.Media.Animation.Timeline.Duration<ept id=\"p3\">*</ept>&gt; of &lt;xref:System.Windows.Duration.Forever*&gt;; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.","pos":[0,460],"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or 0.0 if this clock is active and its <xref:System.Windows.Media.Animation.Clock.Timeline*> has a <xref:System.Windows.Media.Animation.Timeline.Duration*> of <xref:System.Windows.Duration.Forever*>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration."},{"content":"A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.","pos":[461,582]}]},{"pos":[14080,14329],"content":"Gets a value indicating whether the clock is currently <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a value indicating whether the clock is currently <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>."},{"pos":[14342,14664],"content":"Note the clock's CurrentState property doesn't tell you whether it's paused. To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.       The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.","needQuote":false,"needEscape":true,"nodes":[{"content":"Note the clock's CurrentState property doesn't tell you whether it's paused. To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.       The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.","pos":[0,320],"nodes":[{"content":"Note the clock's CurrentState property doesn't tell you whether it's paused.","pos":[0,76]},{"content":"To determine whether a clock is paused, use the &lt;xref:System.Windows.Media.Animation.Clock.IsPaused%2A&gt; property.","pos":[77,190],"source":" To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property."},{"content":"The &lt;xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated&gt; occurs whenever the value of this property changes.","pos":[197,320],"source":"       The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes."}]}]},{"pos":[14846,15072],"content":"The current state of the clock: <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":false,"needEscape":true,"source":"The current state of the clock: <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>."},{"pos":[15597,15699],"content":"Occurs when the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState*> property is updated.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentState*&gt; property is updated.","pos":[0,102],"source":"Occurs when the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState*> property is updated."}]},{"pos":[15712,16892],"content":"Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills. The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.       Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>. To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.       Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState> to <xref:System.Windows.Media.Animation.ClockState> and then back to <xref:System.Windows.Media.Animation.ClockState> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.","needQuote":false,"needEscape":true,"nodes":[{"content":"Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills. The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.       Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>. To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.       Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState> to <xref:System.Windows.Media.Animation.ClockState> and then back to <xref:System.Windows.Media.Animation.ClockState> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.","pos":[0,1176],"nodes":[{"content":"Use the &lt;xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated&gt; event when you want to be notified if when the clock starts, stops, or fills.","pos":[0,156],"source":"Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills."},{"content":"The &lt;xref:System.Object&gt; parameter of the &lt;xref:System.EventHandler&gt; event handler is the &lt;xref:System.Windows.Media.Animation.Clock&gt; whose state was invalidated.","pos":[157,319],"source":" The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated."},{"content":"Pausing a &lt;xref:System.Windows.Media.Animation.Clock&gt; does not change its &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt;.","pos":[326,460],"source":"       Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>."},{"content":"To be notified when a clock becomes paused, use the &lt;xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated&gt; event.","pos":[461,596],"source":" To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."},{"content":"Although this event occurs when the &lt;xref:System.Windows.Media.Animation.ClockState&gt; becomes invalid, that doesn't necessarily mean the &lt;xref:System.Windows.Media.Animation.ClockState&gt; changed: a &lt;xref:System.Windows.Media.Animation.Clock&gt; that switches from &lt;xref:System.Windows.Media.Animation.ClockState&gt; to &lt;xref:System.Windows.Media.Animation.ClockState&gt; and then back to &lt;xref:System.Windows.Media.Animation.ClockState&gt; in the same tick will cause this event to fire, but its &lt;xref:System.Windows.Media.Animation.Clock.CurrentState%2A&gt; property won't actually change.","pos":[603,1176],"source":"       Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState> to <xref:System.Windows.Media.Animation.ClockState> and then back to <xref:System.Windows.Media.Animation.ClockState> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change."}]}]},{"pos":[17031,17043],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[17447,17507],"content":"Gets this clock's current time within its current iteration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets this clock's current time within its current iteration.","pos":[0,60]}]},{"pos":[17520,17882],"content":"## Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.","needQuote":false,"needEscape":true,"nodes":[{"content":"Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.","pos":[3,361],"nodes":[{"content":"Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an &lt;xref:System.Windows.Media.Animation.AnimationClock&gt; object) it is associated with a property.","pos":[0,233],"source":"Using a Timeline as a Timer    A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property."},{"content":"For this reason (and others), it's not recommended that you use a &lt;xref:System.Windows.Media.Animation.Timeline&gt; as a timer.","pos":[234,358],"source":" For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer."}]}]},{"pos":[18030,18214],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this clock is <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.ClockState\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; otherwise, the current time of this clock.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>; otherwise, the current time of this clock."},{"pos":[18732,18830],"content":"Occurs when this clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime*> becomes invalid.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when this clock's &lt;xref:System.Windows.Media.Animation.Clock.CurrentTime*&gt; becomes invalid.","pos":[0,98],"source":"Occurs when this clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime*> becomes invalid."}]},{"pos":[19520,19532],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[20010,20105],"content":"When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.","pos":[0,95]}]},{"pos":[20679,20848],"content":"Returns whether the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has its own external time source, which may require synchronization with the timing system.","needQuote":true,"needEscape":true,"source":"Returns whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> has its own external time source, which may require synchronization with the timing system."},{"pos":[20860,21336],"content":"Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>. See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>. See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.","pos":[0,476],"nodes":[{"content":"Media being played using &lt;xref:System.Windows.Media.MediaTimeline&gt; within a &lt;xref:System.Windows.Media.Animation.Storyboard&gt; is an example of creating a &lt;xref:System.Windows.Media.Animation.Clock&gt; that would have an external time source (a video clip for example) which may require synchronization with other timelines within the &lt;xref:System.Windows.Media.Animation.Storyboard&gt;.","pos":[0,379],"source":"Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>."},{"content":"See &lt;xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A&gt; for more information.","pos":[380,476],"source":" See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information."}]}]},{"pos":[21475,21674],"content":"Returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> has its own external source for time, which may require synchronization with the timing system; otherwise, <bpt id=\"p3\">**</bpt>false<ept id=\"p3\">**</ept>.","needQuote":true,"needEscape":true,"source":"Returns **true** if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> has its own external source for time, which may require synchronization with the timing system; otherwise, **false**."},{"pos":[22178,22238],"content":"Gets this clock's current time within its current iteration.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets this clock's current time within its current iteration.","pos":[0,60]}]},{"pos":[22250,22414],"content":"This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method is used in the implementation of the &lt;xref:System.Windows.Media.Animation.Clock.CurrentTime%2A&gt; method and should not be called directly from your code.","pos":[0,164],"source":"This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code."}]},{"pos":[22566,22659],"content":"The current time of this clock if it is active or filling; otherwise, <xref:System.TimeSpan>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current time of this clock if it is active or filling; otherwise, &lt;xref:System.TimeSpan&gt;.","pos":[0,93],"source":"The current time of this clock if it is active or filling; otherwise, <xref:System.TimeSpan>."}]},{"pos":[23172,23308],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is part of a controllable clock tree.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> is part of a controllable clock tree."},{"pos":[23431,23683],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[24142,24275],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, or any of its parents, is paused.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Windows.Media.Animation.Clock\"></xref>, or any of its parents, is paused."},{"pos":[24387,24621],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> or any of its parents is paused; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> or any of its parents is paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[25104,25200],"content":"Gets the natural duration of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the natural duration of this clock's &lt;xref:System.Windows.Media.Animation.Clock.Timeline*&gt;.","pos":[0,96],"source":"Gets the natural duration of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline*>."}]},{"pos":[25212,25366],"content":"For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"For more information about natural duration, see the &lt;xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName&gt; method.","pos":[0,154],"source":"For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName> method."}]},{"pos":[25513,25624],"content":"The natural duration of this clock, as determined by its <xref:System.Windows.Media.Animation.Clock.Timeline*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The natural duration of this clock, as determined by its &lt;xref:System.Windows.Media.Animation.Clock.Timeline*&gt;.","pos":[0,111],"source":"The natural duration of this clock, as determined by its <xref:System.Windows.Media.Animation.Clock.Timeline*>."}]},{"pos":[26069,26117],"content":"Gets the clock that is the parent of this clock.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the clock that is the parent of this clock.","pos":[0,48]}]},{"pos":[26281,26394],"content":"The parent of this clock or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this clock is a root.","needQuote":true,"needEscape":true,"source":"The parent of this clock or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is a root."},{"pos":[26872,27061],"content":"Occurs when the &lt;xref:System.Windows.Media.Animation.ClockController.Remove*&gt; method is called on this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or one of its parent clocks.","needQuote":true,"needEscape":true,"source":"Occurs when the <xref:System.Windows.Media.Animation.ClockController.Remove*> method is called on this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> or one of its parent clocks."},{"pos":[27191,27203],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[27616,27816],"content":"When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <xref:System.Windows.Media.Animation.ClockController.SpeedRatio*> is modified.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's &lt;xref:System.Windows.Media.Animation.ClockController.SpeedRatio*&gt; is modified.","pos":[0,200],"source":"When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <xref:System.Windows.Media.Animation.ClockController.SpeedRatio*> is modified."}]},{"pos":[28349,28507],"content":"When implemented in a derived class, will be invoked whenever a clock is stopped using the <xref:System.Windows.Media.Animation.ClockController.Stop*> method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When implemented in a derived class, will be invoked whenever a clock is stopped using the &lt;xref:System.Windows.Media.Animation.ClockController.Stop*&gt; method.","pos":[0,158],"source":"When implemented in a derived class, will be invoked whenever a clock is stopped using the <xref:System.Windows.Media.Animation.ClockController.Stop*> method."}]},{"pos":[29031,29135],"content":"Gets the Timeline from which this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was created.","needQuote":true,"needEscape":true,"source":"Gets the Timeline from which this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> was created."},{"pos":[29147,29329],"content":"Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifying a clock's &lt;xref:System.Windows.Media.MediaTimeline&gt; does not update the clock; a new clock must be created from the modified &lt;xref:System.Windows.Media.Animation.Timeline&gt;.","pos":[0,182],"source":"Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>."}]},{"pos":[29501,29600],"content":"The Timeline from which this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Media.Animation.Clock\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> was created.","needQuote":true,"needEscape":true,"source":"The Timeline from which this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> was created."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.Clock\n  id: Clock\n  children:\n  - System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)\n  - System.Windows.Media.Animation.Clock.Completed\n  - System.Windows.Media.Animation.Clock.Controller\n  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\n  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated\n  - System.Windows.Media.Animation.Clock.CurrentGlobalTime\n  - System.Windows.Media.Animation.Clock.CurrentIteration\n  - System.Windows.Media.Animation.Clock.CurrentProgress\n  - System.Windows.Media.Animation.Clock.CurrentState\n  - System.Windows.Media.Animation.Clock.CurrentStateInvalidated\n  - System.Windows.Media.Animation.Clock.CurrentTime\n  - System.Windows.Media.Animation.Clock.CurrentTimeInvalidated\n  - System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement\n  - System.Windows.Media.Animation.Clock.GetCanSlip\n  - System.Windows.Media.Animation.Clock.GetCurrentTimeCore\n  - System.Windows.Media.Animation.Clock.HasControllableRoot\n  - System.Windows.Media.Animation.Clock.IsPaused\n  - System.Windows.Media.Animation.Clock.NaturalDuration\n  - System.Windows.Media.Animation.Clock.Parent\n  - System.Windows.Media.Animation.Clock.RemoveRequested\n  - System.Windows.Media.Animation.Clock.SpeedChanged\n  - System.Windows.Media.Animation.Clock.Stopped\n  - System.Windows.Media.Animation.Clock.Timeline\n  langs:\n  - csharp\n  name: Clock\n  nameWithType: Clock\n  fullName: System.Windows.Media.Animation.Clock\n  type: Class\n  summary: Maintains run-time timing state for a <xref href=\"System.Windows.Media.Animation.Timeline\"></xref>.\n  remarks: \"A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time. It's the timeline's Clock object that does the real work: it maintains timing-related run-time state for the timeline.  \\n  \\n In most cases, a clock is created automatically for your timeline. When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties. For examples, see [How to: Animate a Property by Using a Storyboard](~/add/includes/ajax-current-ext-md.md) and [How to: Animate a Property Without Using a Storyboard](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You can also create a Clock explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method. In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own Clock use can provide performance benefits.  \\n  \\n Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created. The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>. Non-root clocks cannot be directly controlled.  \\n  \\n Once created, a clock cannot be modified (but it can be manipulated).  \\n  \\n## Using a Timeline as a Timer  \\n A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.\"\n  syntax:\n    content: 'public class Clock : System.Windows.Threading.DispatcherObject'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  implements: []\n  inheritedMembers:\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)\n  id: '#ctor(System.Windows.Media.Animation.Timeline)'\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: Clock(Timeline)\n  nameWithType: Clock.Clock(Timeline)\n  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> class, using the specified <xref:System.Windows.Media.Animation.Clock.Timeline*> as a template. The new <xref href=\"System.Windows.Media.Animation.Clock\"></xref> object has no children.\n  syntax:\n    content: protected Clock (System.Windows.Media.Animation.Timeline timeline);\n    parameters:\n    - id: timeline\n      type: System.Windows.Media.Animation.Timeline\n      description: The <xref:System.Windows.Media.Animation.Clock.Timeline*> from which this clock should be constructed. Clocks are not created for any child <xref:System.Windows.Media.Animation.Clock.Timeline*> objects, if they exist.\n  overload: System.Windows.Media.Animation.Clock.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.Completed\n  id: Completed\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: Completed\n  nameWithType: Clock.Completed\n  fullName: System.Windows.Media.Animation.Clock.Completed\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Occurs when this clock has completely finished playing.\n  remarks: \"If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations. If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.  \\n  \\n Stopping a clock does not trigger its completed event, but advancing it to its fill period does.\"\n  syntax:\n    content: public event EventHandler Completed;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.Controller\n  id: Controller\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: Controller\n  nameWithType: Clock.Controller\n  fullName: System.Windows.Media.Animation.Clock.Controller\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a <xref href=\"System.Windows.Media.Animation.ClockController\"></xref> that can be used to start, pause, resume, seek, skip, stop, or remove this <xref href=\"System.Windows.Media.Animation.Clock\"></xref>.\n  remarks: Only root clocks can be interactively controlled.\n  syntax:\n    content: public System.Windows.Media.Animation.ClockController Controller { get; }\n    return:\n      type: System.Windows.Media.Animation.ClockController\n      description: A <xref href=\"System.Windows.Media.Animation.ClockController\"></xref> if this is a root clock; otherwise, <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.Clock.Controller*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\n  id: CurrentGlobalSpeed\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentGlobalSpeed\n  nameWithType: Clock.CurrentGlobalSpeed\n  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the rate at which the clock's time is currently progressing, compared to real-world time.\n  syntax:\n    content: public Nullable<double> CurrentGlobalSpeed { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: The rate at which this clock's time is current progressing, compared to real-world time. If the clock is stopped, this property returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated\n  id: CurrentGlobalSpeedInvalidated\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentGlobalSpeedInvalidated\n  nameWithType: Clock.CurrentGlobalSpeedInvalidated\n  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Occurs when the clock's speed is updated.\n  remarks: \"Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.  \\n  \\n Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.\"\n  syntax:\n    content: public event EventHandler CurrentGlobalSpeedInvalidated;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime\n  id: CurrentGlobalTime\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentGlobalTime\n  nameWithType: Clock.CurrentGlobalTime\n  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the current global time, as established by the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] timing system.\n  syntax:\n    content: protected TimeSpan CurrentGlobalTime { get; }\n    return:\n      type: System.TimeSpan\n      description: The current global time for the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] timing system.\n  overload: System.Windows.Media.Animation.Clock.CurrentGlobalTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentIteration\n  id: CurrentIteration\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentIteration\n  nameWithType: Clock.CurrentIteration\n  fullName: System.Windows.Media.Animation.Clock.CurrentIteration\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Get the current iteration of this clock.\n  remarks: \"A clock's first iteration has a value of 1.  \\n  \\n If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.  \\n  \\n Regardless of its current iteration, seeking a clock returns its current iteration to 1. Restarting a clock also returns its current iteration to 1.\"\n  syntax:\n    content: public Nullable<int> CurrentIteration { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: This clock's current iteration within its current active period, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is stopped.\n  overload: System.Windows.Media.Animation.Clock.CurrentIteration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentProgress\n  id: CurrentProgress\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentProgress\n  nameWithType: Clock.CurrentProgress\n  fullName: System.Windows.Media.Animation.Clock.CurrentProgress\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the current progress of this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> within its current iteration.\n  remarks: \"The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.  \\n  \\n A clock that is <xref:System.Windows.Media.Animation.ClockState> has a CurrentProgress of 1.0.  \\n  \\n## Using a Timeline as a Timer  \\n A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.\"\n  syntax:\n    content: public Nullable<double> CurrentProgress { get; }\n    return:\n      type: System.Nullable{System.Double}\n      description: <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or 0.0 if this clock is active and its <xref:System.Windows.Media.Animation.Clock.Timeline*> has a <xref:System.Windows.Media.Animation.Timeline.Duration*> of <xref:System.Windows.Duration.Forever*>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.\n  overload: System.Windows.Media.Animation.Clock.CurrentProgress*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentState\n  id: CurrentState\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentState\n  nameWithType: Clock.CurrentState\n  fullName: System.Windows.Media.Animation.Clock.CurrentState\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value indicating whether the clock is currently <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>.\n  remarks: \"Note the clock's CurrentState property doesn't tell you whether it's paused. To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.  \\n  \\n The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.\"\n  syntax:\n    content: public System.Windows.Media.Animation.ClockState CurrentState { get; }\n    return:\n      type: System.Windows.Media.Animation.ClockState\n      description: 'The current state of the clock: <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>, or <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>.'\n  overload: System.Windows.Media.Animation.Clock.CurrentState*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated\n  id: CurrentStateInvalidated\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentStateInvalidated\n  nameWithType: Clock.CurrentStateInvalidated\n  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Occurs when the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState*> property is updated.\n  remarks: \"Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills. The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.  \\n  \\n Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>. To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.  \\n  \\n Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState> to <xref:System.Windows.Media.Animation.ClockState> and then back to <xref:System.Windows.Media.Animation.ClockState> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.\"\n  syntax:\n    content: public event EventHandler CurrentStateInvalidated;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentTime\n  id: CurrentTime\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentTime\n  nameWithType: Clock.CurrentTime\n  fullName: System.Windows.Media.Animation.Clock.CurrentTime\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets this clock's current time within its current iteration.\n  remarks: \"## Using a Timeline as a Timer  \\n A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property. For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.\"\n  syntax:\n    content: public Nullable<TimeSpan> CurrentTime { get; }\n    return:\n      type: System.Nullable{System.TimeSpan}\n      description: <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is <xref href=\"System.Windows.Media.Animation.ClockState\"></xref>; otherwise, the current time of this clock.\n  overload: System.Windows.Media.Animation.Clock.CurrentTime*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated\n  id: CurrentTimeInvalidated\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: CurrentTimeInvalidated\n  nameWithType: Clock.CurrentTimeInvalidated\n  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Occurs when this clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime*> becomes invalid.\n  remarks: 'A clock''s <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses. The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.'\n  syntax:\n    content: public event EventHandler CurrentTimeInvalidated;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement\n  id: DiscontinuousTimeMovement\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: DiscontinuousTimeMovement()\n  nameWithType: Clock.DiscontinuousTimeMovement()\n  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.\n  syntax:\n    content: protected virtual void DiscontinuousTimeMovement ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.GetCanSlip\n  id: GetCanSlip\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: GetCanSlip()\n  nameWithType: Clock.GetCanSlip()\n  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Returns whether the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> has its own external time source, which may require synchronization with the timing system.\n  remarks: Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>. See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.\n  syntax:\n    content: protected virtual bool GetCanSlip ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Returns **true** if the <xref href=\"System.Windows.Media.Animation.Clock\"></xref> has its own external source for time, which may require synchronization with the timing system; otherwise, **false**.\n  overload: System.Windows.Media.Animation.Clock.GetCanSlip*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore\n  id: GetCurrentTimeCore\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: GetCurrentTimeCore()\n  nameWithType: Clock.GetCurrentTimeCore()\n  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets this clock's current time within its current iteration.\n  remarks: This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code.\n  syntax:\n    content: protected virtual TimeSpan GetCurrentTimeCore ();\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: The current time of this clock if it is active or filling; otherwise, <xref:System.TimeSpan>.\n  overload: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.HasControllableRoot\n  id: HasControllableRoot\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: HasControllableRoot\n  nameWithType: Clock.HasControllableRoot\n  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates whether this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> is part of a controllable clock tree.\n  syntax:\n    content: public bool HasControllableRoot { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.Clock.HasControllableRoot*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.IsPaused\n  id: IsPaused\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: IsPaused\n  nameWithType: Clock.IsPaused\n  fullName: System.Windows.Media.Animation.Clock.IsPaused\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates whether this <xref href=\"System.Windows.Media.Animation.Clock\"></xref>, or any of its parents, is paused.\n  syntax:\n    content: public bool IsPaused { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> or any of its parents is paused; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Media.Animation.Clock.IsPaused*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.NaturalDuration\n  id: NaturalDuration\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: NaturalDuration\n  nameWithType: Clock.NaturalDuration\n  fullName: System.Windows.Media.Animation.Clock.NaturalDuration\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the natural duration of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline*>.\n  remarks: For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName> method.\n  syntax:\n    content: public System.Windows.Duration NaturalDuration { get; }\n    return:\n      type: System.Windows.Duration\n      description: The natural duration of this clock, as determined by its <xref:System.Windows.Media.Animation.Clock.Timeline*>.\n  overload: System.Windows.Media.Animation.Clock.NaturalDuration*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.Parent\n  id: Parent\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: Clock.Parent\n  fullName: System.Windows.Media.Animation.Clock.Parent\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the clock that is the parent of this clock.\n  syntax:\n    content: public System.Windows.Media.Animation.Clock Parent { get; }\n    return:\n      type: System.Windows.Media.Animation.Clock\n      description: The parent of this clock or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if this clock is a root.\n  overload: System.Windows.Media.Animation.Clock.Parent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.RemoveRequested\n  id: RemoveRequested\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: RemoveRequested\n  nameWithType: Clock.RemoveRequested\n  fullName: System.Windows.Media.Animation.Clock.RemoveRequested\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Occurs when the <xref:System.Windows.Media.Animation.ClockController.Remove*> method is called on this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> or one of its parent clocks.\n  syntax:\n    content: public event EventHandler RemoveRequested;\n    return:\n      type: System.EventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.SpeedChanged\n  id: SpeedChanged\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: SpeedChanged()\n  nameWithType: Clock.SpeedChanged()\n  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <xref:System.Windows.Media.Animation.ClockController.SpeedRatio*> is modified.\n  syntax:\n    content: protected virtual void SpeedChanged ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Clock.SpeedChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.Stopped\n  id: Stopped\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: Stopped()\n  nameWithType: Clock.Stopped()\n  fullName: System.Windows.Media.Animation.Clock.Stopped()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: When implemented in a derived class, will be invoked whenever a clock is stopped using the <xref:System.Windows.Media.Animation.ClockController.Stop*> method.\n  syntax:\n    content: protected virtual void Stopped ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Clock.Stopped*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Media.Animation.Clock.Timeline\n  id: Timeline\n  parent: System.Windows.Media.Animation.Clock\n  langs:\n  - csharp\n  name: Timeline\n  nameWithType: Clock.Timeline\n  fullName: System.Windows.Media.Animation.Clock.Timeline\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets the Timeline from which this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> was created.\n  remarks: Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>.\n  syntax:\n    content: public System.Windows.Media.Animation.Timeline Timeline { get; }\n    return:\n      type: System.Windows.Media.Animation.Timeline\n      description: The Timeline from which this <xref href=\"System.Windows.Media.Animation.Clock\"></xref> was created.\n  overload: System.Windows.Media.Animation.Clock.Timeline*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: System.Windows.Threading.DispatcherObject\n- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Clock(Timeline)\n  nameWithType: Clock.Clock(Timeline)\n  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)\n- uid: System.Windows.Media.Animation.Timeline\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Timeline\n  nameWithType: Timeline\n  fullName: System.Windows.Media.Animation.Timeline\n- uid: System.Windows.Media.Animation.Clock.Completed\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Completed\n  nameWithType: Clock.Completed\n  fullName: System.Windows.Media.Animation.Clock.Completed\n- uid: System.EventHandler\n  parent: System\n  isExternal: true\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Media.Animation.Clock.Controller\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Controller\n  nameWithType: Clock.Controller\n  fullName: System.Windows.Media.Animation.Clock.Controller\n- uid: System.Windows.Media.Animation.ClockController\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ClockController\n  nameWithType: ClockController\n  fullName: System.Windows.Media.Animation.ClockController\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentGlobalSpeed\n  nameWithType: Clock.CurrentGlobalSpeed\n  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: true\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Double>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    nameWithType: Double\n    fullName: Double\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentGlobalSpeedInvalidated\n  nameWithType: Clock.CurrentGlobalSpeedInvalidated\n  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentGlobalTime\n  nameWithType: Clock.CurrentGlobalTime\n  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: true\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Windows.Media.Animation.Clock.CurrentIteration\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentIteration\n  nameWithType: Clock.CurrentIteration\n  fullName: System.Windows.Media.Animation.Clock.CurrentIteration\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: true\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.Int32>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.Clock.CurrentProgress\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentProgress\n  nameWithType: Clock.CurrentProgress\n  fullName: System.Windows.Media.Animation.Clock.CurrentProgress\n- uid: System.Windows.Media.Animation.Clock.CurrentState\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentState\n  nameWithType: Clock.CurrentState\n  fullName: System.Windows.Media.Animation.Clock.CurrentState\n- uid: System.Windows.Media.Animation.ClockState\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ClockState\n  nameWithType: ClockState\n  fullName: System.Windows.Media.Animation.ClockState\n- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentStateInvalidated\n  nameWithType: Clock.CurrentStateInvalidated\n  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated\n- uid: System.Windows.Media.Animation.Clock.CurrentTime\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentTime\n  nameWithType: Clock.CurrentTime\n  fullName: System.Windows.Media.Animation.Clock.CurrentTime\n- uid: System.Nullable{System.TimeSpan}\n  parent: System\n  isExternal: true\n  name: Nullable<TimeSpan>\n  nameWithType: Nullable<TimeSpan>\n  fullName: System.Nullable<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: Nullable<System.TimeSpan>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentTimeInvalidated\n  nameWithType: Clock.CurrentTimeInvalidated\n  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated\n- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: DiscontinuousTimeMovement()\n  nameWithType: Clock.DiscontinuousTimeMovement()\n  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()\n- uid: System.Windows.Media.Animation.Clock.GetCanSlip\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: GetCanSlip()\n  nameWithType: Clock.GetCanSlip()\n  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: GetCurrentTimeCore()\n  nameWithType: Clock.GetCurrentTimeCore()\n  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()\n- uid: System.Windows.Media.Animation.Clock.HasControllableRoot\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: HasControllableRoot\n  nameWithType: Clock.HasControllableRoot\n  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot\n- uid: System.Windows.Media.Animation.Clock.IsPaused\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: IsPaused\n  nameWithType: Clock.IsPaused\n  fullName: System.Windows.Media.Animation.Clock.IsPaused\n- uid: System.Windows.Media.Animation.Clock.NaturalDuration\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: NaturalDuration\n  nameWithType: Clock.NaturalDuration\n  fullName: System.Windows.Media.Animation.Clock.NaturalDuration\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.Animation.Clock.Parent\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Parent\n  nameWithType: Clock.Parent\n  fullName: System.Windows.Media.Animation.Clock.Parent\n- uid: System.Windows.Media.Animation.Clock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Clock\n  nameWithType: Clock\n  fullName: System.Windows.Media.Animation.Clock\n- uid: System.Windows.Media.Animation.Clock.RemoveRequested\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: RemoveRequested\n  nameWithType: Clock.RemoveRequested\n  fullName: System.Windows.Media.Animation.Clock.RemoveRequested\n- uid: System.Windows.Media.Animation.Clock.SpeedChanged\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: SpeedChanged()\n  nameWithType: Clock.SpeedChanged()\n  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()\n- uid: System.Windows.Media.Animation.Clock.Stopped\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Stopped()\n  nameWithType: Clock.Stopped()\n  fullName: System.Windows.Media.Animation.Clock.Stopped()\n- uid: System.Windows.Media.Animation.Clock.Timeline\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Timeline\n  nameWithType: Clock.Timeline\n  fullName: System.Windows.Media.Animation.Clock.Timeline\n- uid: System.Windows.Media.Animation.Clock.#ctor*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Clock\n  nameWithType: Clock.Clock\n- uid: System.Windows.Media.Animation.Clock.Controller*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Controller\n  nameWithType: Clock.Controller\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentGlobalSpeed\n  nameWithType: Clock.CurrentGlobalSpeed\n- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentGlobalTime\n  nameWithType: Clock.CurrentGlobalTime\n- uid: System.Windows.Media.Animation.Clock.CurrentIteration*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentIteration\n  nameWithType: Clock.CurrentIteration\n- uid: System.Windows.Media.Animation.Clock.CurrentProgress*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentProgress\n  nameWithType: Clock.CurrentProgress\n- uid: System.Windows.Media.Animation.Clock.CurrentState*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentState\n  nameWithType: Clock.CurrentState\n- uid: System.Windows.Media.Animation.Clock.CurrentTime*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: CurrentTime\n  nameWithType: Clock.CurrentTime\n- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: DiscontinuousTimeMovement\n  nameWithType: Clock.DiscontinuousTimeMovement\n- uid: System.Windows.Media.Animation.Clock.GetCanSlip*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: GetCanSlip\n  nameWithType: Clock.GetCanSlip\n- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: GetCurrentTimeCore\n  nameWithType: Clock.GetCurrentTimeCore\n- uid: System.Windows.Media.Animation.Clock.HasControllableRoot*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: HasControllableRoot\n  nameWithType: Clock.HasControllableRoot\n- uid: System.Windows.Media.Animation.Clock.IsPaused*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: IsPaused\n  nameWithType: Clock.IsPaused\n- uid: System.Windows.Media.Animation.Clock.NaturalDuration*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: NaturalDuration\n  nameWithType: Clock.NaturalDuration\n- uid: System.Windows.Media.Animation.Clock.Parent*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Parent\n  nameWithType: Clock.Parent\n- uid: System.Windows.Media.Animation.Clock.SpeedChanged*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: SpeedChanged\n  nameWithType: Clock.SpeedChanged\n- uid: System.Windows.Media.Animation.Clock.Stopped*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Stopped\n  nameWithType: Clock.Stopped\n- uid: System.Windows.Media.Animation.Clock.Timeline*\n  parent: System.Windows.Media.Animation.Clock\n  isExternal: false\n  name: Timeline\n  nameWithType: Clock.Timeline\n"}