{"nodes":[{"pos":[3414,3704],"content":"Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType\"></xref>) and also for general XAML type system logic.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the XAML type system identifier for members of XAML types.","pos":[0,67]},{"content":"The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlNodeType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>) and also for general XAML type system logic.","pos":[68,290],"source":" The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType\"></xref>) and also for general XAML type system logic."}]},{"pos":[3717,8829],"content":"XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible XamlMember subclasses. For most uses of .NET Framework XAML Services APIs and the XamlMember API, you use the default XAML schema context. The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system. This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.      ## Lookup* APIs and XamlMember Derived Classes    XamlMember defines several virtual members that derived classes might override. These members have names that always start with the string `Lookup`. The remainder of the API name then references the property that the virtual method influences. For example, a XamlMember derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class. You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant `Lookup*` methods.       The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the XamlMember base class. By deriving from XamlMember and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology. You can also use a provided XAML schema context under this scheme and still return the results you want.       As an example, consider the XamlMember property <xref:System.Xaml.XamlMember.IsWritePublic%2A>. This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.      ## Constructing XamlMember Without XAML Schema Context    Most constructors of XamlMember require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization. The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the XamlMember API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>. In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.       One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>. However, a XamlMember that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.       For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant XamlMember reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.       You should not construct a XamlMember that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the  following might be true of your implementation:      -   The XAML schema context is available later.      -   You use a member invoker pattern.      -   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.","needQuote":false,"needEscape":true,"nodes":[{"content":"XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the <ph id=\"ph1\">`Lookup*`</ph> API that is provided by possible XamlMember subclasses.","pos":[0,333],"source":"XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible XamlMember subclasses."},{"content":"For most uses of .NET Framework XAML Services APIs and the XamlMember API, you use the default XAML schema context.","pos":[334,449]},{"content":"The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.","pos":[450,552]},{"content":"This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.","pos":[553,717]},{"content":"Lookup* APIs and XamlMember Derived Classes    XamlMember defines several virtual members that derived classes might override.","pos":[726,852]},{"content":"These members have names that always start with the string <ph id=\"ph1\">`Lookup`</ph>.","pos":[853,921],"source":" These members have names that always start with the string `Lookup`."},{"content":"The remainder of the API name then references the property that the virtual method influences.","pos":[922,1016]},{"content":"For example, a XamlMember derived class might override &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; to influence what the base-defined property &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt; returns in a derived class.","pos":[1017,1237],"source":" For example, a XamlMember derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class."},{"content":"You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant <ph id=\"ph1\">`Lookup*`</ph> methods.","pos":[1238,1394],"source":" You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant `Lookup*` methods."},{"content":"The purpose of the <ph id=\"ph1\">`Lookup*`</ph> methods is to provide a XAML type system extension technique that incorporates the XamlMember base class.","pos":[1401,1535],"source":"       The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the XamlMember base class."},{"content":"By deriving from XamlMember and overriding the <ph id=\"ph1\">`Lookup`</ph> virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.","pos":[1536,1768],"source":" By deriving from XamlMember and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology."},{"content":"You can also use a provided XAML schema context under this scheme and still return the results you want.","pos":[1769,1873]},{"content":"As an example, consider the XamlMember property &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.","pos":[1880,1975],"source":"       As an example, consider the XamlMember property <xref:System.Xaml.XamlMember.IsWritePublic%2A>."},{"content":"This property informs callers that operations such as using a &lt;xref:System.Xaml.XamlWriter&gt; for serialization can write a value for this member on a target object.","pos":[1976,2139],"source":" This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object."},{"content":"In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR &lt;xref:System.Type&gt; and its members (the &lt;xref:System.Reflection.MemberInfo&gt;).","pos":[2140,2363],"source":" In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>)."},{"content":"Therefore, by default, the XAML type system depends on the CLR type system.","pos":[2364,2439]},{"content":"However, you can remove this dependency for your XAML type system reporting of &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; by overriding the API &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;.","pos":[2440,2641],"source":" However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>."},{"content":"Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.","pos":[2642,2928]},{"content":"Constructing XamlMember Without XAML Schema Context    Most constructors of XamlMember require a &lt;xref:System.Xaml.XamlSchemaContext&gt; as part of their initialization.","pos":[2937,3103],"source":"      ## Constructing XamlMember Without XAML Schema Context    Most constructors of XamlMember require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization."},{"content":"The &lt;xref:System.Xaml.XamlSchemaContext&gt; is also necessary for many internal &lt;xref:System.Xaml.XamlSchemaContext&gt; operations, such as obtaining information that is being forwarded from the backing type.","pos":[3104,3306],"source":" The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type."},{"content":"When you are working with the XamlMember API, you typically have a &lt;xref:System.Xaml.XamlSchemaContext&gt; that is available from a surrounding construct such as a &lt;xref:System.Xaml.XamlWriter&gt;.","pos":[3307,3498],"source":" When you are working with the XamlMember API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>."},{"content":"In this case, you can pass the &lt;xref:System.Xaml.XamlSchemaContext&gt; reference through to all XAML type system calls that require a XAML schema context.","pos":[3499,3650],"source":" In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context."},{"content":"One specific constructor, &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;, does not require a &lt;xref:System.Xaml.XamlSchemaContext&gt;.","pos":[3657,3837],"source":"       One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>."},{"content":"However, a XamlMember that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <ph id=\"ph1\">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.","pos":[3838,4058],"source":" However, a XamlMember that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"content":"For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, such a member cannot be written into an object graph.","pos":[4065,4185],"source":"       For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph."},{"content":"Using the .NET Framework XAML services implementation, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant XamlMember reports <ph id=\"ph1\">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.","pos":[4186,4476],"source":" Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant XamlMember reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"content":"You should not construct a XamlMember that has a value of <ph id=\"ph1\">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.","pos":[4483,4772],"source":"       You should not construct a XamlMember that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior."},{"content":"For example, one or more of the  following might be true of your implementation:      -   The XAML schema context is available later.","pos":[4773,4906]},{"content":"-   You use a member invoker pattern.","pos":[4912,4949]},{"content":"-   You deliberately override &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; in a custom XAML writer.","pos":[4955,5090],"source":"      -   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer."}]},{"pos":[9553,9751],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.EventInfo&gt; and a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref:System.Reflection.EventInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>."},{"pos":[9763,9860],"content":"Use this constructor if the member represents an event (event handler connection-point property).","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents an event (event handler connection-point property).","pos":[0,97]}]},{"pos":[10083,10171],"content":"The CLR type system <xref:System.Reflection.EventInfo> that represents the event member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CLR type system &lt;xref:System.Reflection.EventInfo&gt; that represents the event member.","pos":[0,88],"source":"The CLR type system <xref:System.Reflection.EventInfo> that represents the event member."}]},{"pos":[10257,10346],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[10941,11142],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; and a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref:System.Reflection.PropertyInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>."},{"pos":[11154,11265],"content":"Use this constructor if the member represents a property (and specifically is not an event handler connection).","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents a property (and specifically is not an event handler connection).","pos":[0,111]}]},{"pos":[11500,11594],"content":"The CLR type system <xref:System.Reflection.PropertyInfo> that represents the property member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; that represents the property member.","pos":[0,94],"source":"The CLR type system <xref:System.Reflection.PropertyInfo> that represents the property member."}]},{"pos":[11680,11769],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[12477,12756],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.EventInfo&gt; and a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, including <bpt id=\"p3\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref:System.Reflection.EventInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."},{"pos":[12768,12871],"content":"Use this constructor if the member represents an event (or an event handler connection-point property).","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents an event (or an event handler connection-point property).","pos":[0,103]}]},{"pos":[13140,13228],"content":"The CLR type system <xref:System.Reflection.EventInfo> that represents the event member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CLR type system &lt;xref:System.Reflection.EventInfo&gt; that represents the event member.","pos":[0,88],"source":"The CLR type system <xref:System.Reflection.EventInfo> that represents the event member."}]},{"pos":[13314,13403],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[13490,13662],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that handles run-time reflection calls against the <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[14385,14662],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using reflection &lt;xref:System.Reflection.PropertyInfo&gt; and a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, including <bpt id=\"p3\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using reflection <xref:System.Reflection.PropertyInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."},{"pos":[14674,14781],"content":"Use this constructor only if the member represents a property and if it is not an event handler connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor only if the member represents a property and if it is not an event handler connection.","pos":[0,107]}]},{"pos":[15062,15156],"content":"The CLR type system <xref:System.Reflection.PropertyInfo> that represents the property member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; that represents the property member.","pos":[0,94],"source":"The CLR type system <xref:System.Reflection.PropertyInfo> that represents the property member."}]},{"pos":[15242,15331],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[15418,15590],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[16224,16394],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that represents an attachable event.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event."},{"pos":[16406,16479],"content":"Use this constructor if the member represents an attachable event member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents an attachable event member.","pos":[0,73]}]},{"pos":[16723,16763],"content":"The string name of the attachable event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string name of the attachable event.","pos":[0,40]}]},{"pos":[16840,17028],"content":"The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the handler <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Add\" name=\"Add\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method of the attachable member's backing implementation.","needQuote":true,"needEscape":true,"source":"The CLR type system <xref:System.Reflection.MethodInfo> for the handler <xref uid=\"langword_csharp_Add\" name=\"Add\" href=\"\"></xref> method of the attachable member's backing implementation."},{"pos":[17114,17203],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[17755,18055],"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations; see Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class using a string name and declaring <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> information.","pos":[0,172],"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information."},{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is constructed with this signature has significant limitations; see Remarks.","pos":[173,300],"source":" A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations; see Remarks."}]},{"pos":[18068,19271],"content":"A <xref:System.Xaml.XamlMember> that is constructed with the XamlMember signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.       For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.       You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the following might be true of your implementation:      -   The XAML schema context is available later.      -   You use a member invoker pattern.      -   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xaml.XamlMember&gt; that is constructed with the XamlMember signature returns <ph id=\"ph1\">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.","pos":[0,144],"source":"A <xref:System.Xaml.XamlMember> that is constructed with the XamlMember signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"content":"For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, such a member cannot be written into an object graph.","pos":[151,271],"source":"       For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph."},{"content":"Using the .NET Framework XAML Services implementation, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlMember&gt; reports <ph id=\"ph1\">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.","pos":[272,581],"source":" Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"content":"You should not construct a &lt;xref:System.Xaml.XamlMember&gt; with &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;<ph id=\"ph1\">`true`</ph> unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.","pos":[588,876],"source":"       You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior."},{"content":"For example, one or more of the following might be true of your implementation:      -   The XAML schema context is available later.","pos":[877,1009]},{"content":"-   You use a member invoker pattern.","pos":[1015,1052]},{"content":"-   You deliberately override &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; in a custom XAML writer.","pos":[1058,1193],"source":"      -   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer."}]},{"pos":[19460,19490],"content":"The string name of the member.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string name of the member.","pos":[0,30]}]},{"pos":[19567,19648],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> information for the declaring type.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlType\"></xref> information for the declaring type."},{"pos":[19718,19896],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the member is attachable; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the member is attachable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[20055,20167],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;declaringType&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>name</code> or <code>declaringType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[20833,21006],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that represents an attachable property.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property."},{"pos":[21018,21087],"content":"Use this constructor if the member represents an attachable property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents an attachable property.","pos":[0,69]}]},{"pos":[21375,21418],"content":"The string name of the attachable property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string name of the attachable property.","pos":[0,43]}]},{"pos":[21496,21678],"content":"The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.","needQuote":true,"needEscape":true,"source":"The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor of the attachable member's backing implementation."},{"pos":[21756,21938],"content":"The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.","needQuote":true,"needEscape":true,"source":"The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor of the attachable member's backing implementation."},{"pos":[22024,22113],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[22875,23126],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that represents an attachable event, including <bpt id=\"p3\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."},{"pos":[23138,23211],"content":"Use this constructor if the member represents an attachable event member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents an attachable event member.","pos":[0,73]}]},{"pos":[23501,23541],"content":"The string name of the attachable event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string name of the attachable event.","pos":[0,40]}]},{"pos":[23618,23806],"content":"The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the handler <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Add\" name=\"Add\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> method of the attachable member's backing implementation.","needQuote":true,"needEscape":true,"source":"The CLR type system <xref:System.Reflection.MethodInfo> for the handler <xref uid=\"langword_csharp_Add\" name=\"Add\" href=\"\"></xref> method of the attachable member's backing implementation."},{"pos":[23892,23981],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[24068,24240],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[25093,25347],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class for a <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> that represents an attachable property, including <bpt id=\"p3\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> information.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."},{"pos":[25359,25435],"content":"Use this constructor if the member represents an attachable property member.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use this constructor if the member represents an attachable property member.","pos":[0,76]}]},{"pos":[25769,25812],"content":"The string name of the attachable property.","needQuote":true,"needEscape":true,"nodes":[{"content":"The string name of the attachable property.","pos":[0,43]}]},{"pos":[25890,26072],"content":"The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.","needQuote":true,"needEscape":true,"source":"The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor of the attachable member's backing implementation."},{"pos":[26150,26332],"content":"The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.","needQuote":true,"needEscape":true,"source":"The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor of the attachable member's backing implementation."},{"pos":[26418,26507],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> context that qualifies the member.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."},{"pos":[26594,26766],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[27161,27323],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the type that declares the member that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[27336,28025],"content":"This value is typically set during initialization and is usually not `null`.      > [!IMPORTANT] >  DeclaringType information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"This value is typically set during initialization and is usually not <ph id=\"ph1\">`null`</ph>.","pos":[0,76],"source":"This value is typically set during initialization and is usually not `null`."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  DeclaringType information can be passed in by constructors for initialization.","pos":[82,178],"source":"      > [!IMPORTANT] >  DeclaringType information can be passed in by constructors for initialization."},{"content":"By calling directly into base constructors, initialization for &lt;xref:System.Xaml.XamlMember&gt; derived classes can omit some of the value-checks that are made in the base class.","pos":[179,354],"source":" By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class."},{"content":"Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.","pos":[355,585]},{"content":"For any security-critical checks of declaring type information, use the underlying CLR type instead.","pos":[586,686]}]},{"pos":[28165,28322],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for the type that declares the member that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[28735,28865],"content":"Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for deferred loading of XAML declared objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> object, which is used for deferred loading of XAML declared objects.","pos":[0,130],"source":"Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for deferred loading of XAML declared objects."}]},{"pos":[28877,29113],"content":"Calling DeferringLoader invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calling DeferringLoader invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[0,236],"nodes":[{"content":"Calling DeferringLoader invokes &lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt; or a specific override of that method.","pos":[0,125],"source":"Calling DeferringLoader invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method."},{"content":"This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[126,236]}]}]},{"pos":[29354,29495],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> with <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlDeferringLoader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constraint on the generic.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic."},{"pos":[29880,30096],"content":"Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a list of <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,67],"source":"Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."},{"content":"These report the members where dependency relationships for initialization order exist relative to this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[68,216],"source":" These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>."}]},{"pos":[30109,31497],"content":"Calling DependsOn invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.       The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule. The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order. By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member. You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.       The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose. Large numbers of dependencies have the potential to slow down XAML processing. Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.       Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling DependsOn invokes &lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt; or a specific override of that method.","pos":[0,113],"source":"Calling DependsOn invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method."},{"content":"This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[114,224]},{"content":"The <ph id=\"ph1\">`DependsOn`</ph> pattern can be applied to object model cases that deliberately contradict a general XAML rule.","pos":[231,341],"source":"       The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule."},{"content":"The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.","pos":[342,512]},{"content":"By applying a <ph id=\"ph1\">`DependsOn`</ph> pattern to a member, you can instruct XAML writers to always process the referenced member before this member.","pos":[513,649],"source":" By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member."},{"content":"You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.","pos":[650,820]},{"content":"The <ph id=\"ph1\">`DependsOn`</ph> pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.","pos":[827,958],"source":"       The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose."},{"content":"Large numbers of dependencies have the potential to slow down XAML processing.","pos":[959,1037]},{"content":"Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.","pos":[1038,1149]},{"content":"Example <ph id=\"ph1\">`DependsOn`</ph> scenarios from WPF include certain properties on &lt;xref:System.Windows.Controls.ControlTemplate&gt; and &lt;xref:System.Windows.DataTemplate&gt;, on &lt;xref:System.Windows.Trigger&gt;, and on &lt;xref:System.Windows.Setter&gt;.","pos":[1156,1382],"source":"       Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>."}]},{"pos":[31705,31767],"content":"A list of <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."},{"pos":[32183,32247],"content":"Indicates whether the current object is equal to another object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the current object is equal to another object.","pos":[0,64]}]},{"pos":[32388,32427],"content":"The object to compare with this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to compare with this object.","pos":[0,39]}]},{"pos":[32486,32687],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current object is equal to the <code>obj</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[33130,33211],"content":"Indicates whether the current object is equal to another object of the same type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates whether the current object is equal to another object of the same type.","pos":[0,81]}]},{"pos":[33372,33410],"content":"An object to compare with this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object to compare with this object.","pos":[0,38]}]},{"pos":[33469,33672],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current object is equal to the <code>other</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[34062,34100],"content":"Returns the hash code for this object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the hash code for this object.","pos":[0,38]}]},{"pos":[34235,34256],"content":"An integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"An integer hash code.","pos":[0,21]}]},{"pos":[34681,34748],"content":"Returns a list of XAML namespaces where this XAML member can exist.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of XAML namespaces where this XAML member can exist.","pos":[0,67]}]},{"pos":[34760,35000],"content":"The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The default implementation returns the &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt; call result from the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; that is associated with this &lt;xref:System.Xaml.XamlMember&gt;.","pos":[0,240],"source":"The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>."}]},{"pos":[35212,35260],"content":"A list of XAML namespace identifiers as strings.","needQuote":true,"needEscape":true,"nodes":[{"content":"A list of XAML namespace identifiers as strings.","pos":[0,48]}]},{"pos":[35637,35792],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[35805,36854],"content":"The `Invoker` pattern is an advanced XAML type system extension technique. The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.       If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the Invoker property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default. This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.       Calling Invoker invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.","needQuote":false,"needEscape":true,"nodes":[{"content":"The <ph id=\"ph1\">`Invoker`</ph> pattern is an advanced XAML type system extension technique.","pos":[0,74],"source":"The `Invoker` pattern is an advanced XAML type system extension technique."},{"content":"The <ph id=\"ph1\">`Invoker`</ph> pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.","pos":[75,243],"source":" The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services."},{"content":"If a &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt; override returns <ph id=\"ph1\">`null`</ph>, or if the default implementation returns <ph id=\"ph2\">`null`</ph> because it lacks the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; for this &lt;xref:System.Xaml.XamlMember&gt;, the Invoker property returns &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.","pos":[250,602],"source":"       If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the Invoker property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>."},{"content":"&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; is the default.","pos":[609,711],"source":"       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default."},{"content":"This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override <ph id=\"ph1\">`Invoker`</ph> patterns are passed for construction of XAML type system entities.","pos":[712,927],"source":" This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities."},{"content":"Calling Invoker invokes &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt; or a specific override of that method.","pos":[934,1043],"source":"       Calling Invoker invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method."}]},{"pos":[37020,37170],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[37547,37667],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is reported as an ambient property.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property."},{"pos":[37680,38989],"content":"Calling IsAmbient invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.       Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>. The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.       <xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>. It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling IsAmbient invokes &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt; or a specific override of that method.","pos":[0,113],"source":"Calling IsAmbient invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method."},{"content":"This behavior occurs in implementations where the initial internal reflection logic has not already set the information.","pos":[114,234]},{"content":"Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.","pos":[241,428]},{"content":"The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.","pos":[429,596],"source":" The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>."},{"content":"The default implementation of &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt; uses this existing &lt;xref:System.Windows.Markup.AmbientAttribute&gt; technique, and it returns <ph id=\"ph1\">`true`</ph> if &lt;xref:System.Windows.Markup.AmbientAttribute&gt; exists on a member declaration.","pos":[597,854],"source":" The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration."},{"content":"&lt;xref:System.Windows.Markup.AmbientAttribute&gt; is found on members of several WPF types, which include &lt;xref:System.Windows.Application&gt;, &lt;xref:System.Windows.Setter&gt;, and &lt;xref:System.Windows.Style&gt;.","pos":[861,1060],"source":"       <xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>."},{"content":"It is also found on the &lt;xref:System.Windows.ResourceDictionary&gt; type, which connotes that any member that uses &lt;xref:System.Windows.ResourceDictionary&gt; as its type should be considered ambient even if the member is not specifically attributed.","pos":[1061,1305],"source":" It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed."}]},{"pos":[39103,39326],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is reported as an ambient property; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[39720,39829],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is an attachable member.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member."},{"pos":[39841,39960],"content":"The IsAttachable value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The IsAttachable value is initialized based on which constructor was used to construct a &lt;xref:System.Xaml.XamlMember&gt;.","pos":[0,119],"source":"The IsAttachable value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>."}]},{"pos":[40076,40288],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is an attachable member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[40680,40785],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is a XAML directive.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive."},{"pos":[40798,41378],"content":"The IsDirective value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>. The base <xref:System.Xaml.XamlMember> constructors initialize so that IsDirective is `false`. However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that IsDirective is `true`.       If you want to report IsDirective as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IsDirective value is initialized based on which constructor was used to construct a &lt;xref:System.Xaml.XamlMember&gt;.","pos":[0,118],"source":"The IsDirective value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>."},{"content":"The base &lt;xref:System.Xaml.XamlMember&gt; constructors initialize so that IsDirective is <ph id=\"ph1\">`false`</ph>.","pos":[119,213],"source":" The base <xref:System.Xaml.XamlMember> constructors initialize so that IsDirective is `false`."},{"content":"However, the &lt;xref:System.Xaml.XamlDirective&gt; class (a &lt;xref:System.Xaml.XamlMember&gt; derived class) initializes so that IsDirective is <ph id=\"ph1\">`true`</ph>.","pos":[214,356],"source":" However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that IsDirective is `true`."},{"content":"If you want to report IsDirective as <ph id=\"ph1\">`true`</ph> to callers of a custom XAML schema class for XAML members, make sure you derive from &lt;xref:System.Xaml.XamlDirective&gt; because that is the only way to enable that behavior.","pos":[363,578],"source":"       If you want to report IsDirective as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior."}]},{"pos":[41494,41702],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is a XAML directive; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[42073,42185],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents an event member.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event member."},{"pos":[42197,42306],"content":"Calling IsEvent invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calling IsEvent invokes &lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt; or a specific override of that method.","pos":[0,109],"source":"Calling IsEvent invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method."}]},{"pos":[42417,42625],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents an event; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[43012,43244],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is initialized with a valid <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> string as its &lt;xref:System.Xaml.XamlMember.Name*&gt;.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> string as its <xref:System.Xaml.XamlMember.Name*>."},{"pos":[43359,43651],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> is initialized with a valid <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> string; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> string; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[44037,44152],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a read-only member.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member."},{"pos":[44164,44279],"content":"Calling IsReadOnly invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calling IsReadOnly invokes &lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt; or a specific override of that method.","pos":[0,115],"source":"Calling IsReadOnly invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method."}]},{"pos":[44393,44611],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a read-only member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[45006,45202],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a member with a callable public <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member with a callable public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor."},{"pos":[45215,46056],"content":"The IsReadPublic value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and IsReadPublic returns `false`.       Calling IsReadPublic invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.      > [!IMPORTANT] >  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IsReadPublic value checks whether the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is public.","pos":[0,99],"source":"The IsReadPublic value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public."},{"content":"If &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is nonpublic, the <ph id=\"ph1\">`get`</ph> accessor is not callable in a practical way, and IsReadPublic returns <ph id=\"ph2\">`false`</ph>.","pos":[100,252],"source":" If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and IsReadPublic returns `false`."},{"content":"Calling IsReadPublic invokes &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt; or a specific override of that method.","pos":[259,378],"source":"       Calling IsReadPublic invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt; method is virtual and therefore, can be overridden.","pos":[384,509],"source":"      > [!IMPORTANT] >  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[510,748]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[749,836]}]},{"pos":[46173,46458],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a callable public <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[46840,46971],"content":"Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.","pos":[0,131]}]},{"pos":[46984,48054],"content":"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for IsUnknown.       For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for IsUnknown cannot be written into an object graph. Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for IsUnknown.       You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for IsUnknown unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.       Calling IsUnknown invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.","needQuote":false,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Xaml.XamlMember&gt; that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <ph id=\"ph1\">`true`</ph> for IsUnknown.","pos":[0,197],"source":"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for IsUnknown."},{"content":"For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, a &lt;xref:System.Xaml.XamlMember&gt; with <ph id=\"ph1\">`true`</ph> for IsUnknown cannot be written into an object graph.","pos":[204,368],"source":"       For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for IsUnknown cannot be written into an object graph."},{"content":"Under the default implementations in .NET Framework XAML Services APIs, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlMember&gt; reports <ph id=\"ph1\">`true`</ph> for IsUnknown.","pos":[369,662],"source":" Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for IsUnknown."},{"content":"You should not construct a &lt;xref:System.Xaml.XamlMember&gt; that has a value of <ph id=\"ph1\">`true`</ph> for IsUnknown unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.","pos":[669,944],"source":"       You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for IsUnknown unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior."},{"content":"Calling IsUnknown invokes &lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt; or a specific override of that method.","pos":[951,1064],"source":"       Calling IsUnknown invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method."}]},{"pos":[48168,48353],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the member is not resolvable; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the member is resolvable.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the member is not resolvable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the member is resolvable."},{"pos":[48742,48858],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a write-only member.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member."},{"pos":[48870,48987],"content":"Calling IsWriteOnly invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calling IsWriteOnly invokes &lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt; or a specific override of that method.","pos":[0,117],"source":"Calling IsWriteOnly invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method."}]},{"pos":[49102,49321],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a write-only member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[49722,49922],"content":"Gets a value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a member that has a callable public <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a callable public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor."},{"pos":[49935,50813],"content":"The IsWritePublic value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and IsWritePublic returns `false`.       Calling IsWritePublic invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.      > [!IMPORTANT] >  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The IsWritePublic value considers whether the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is public as part of the determination.","pos":[0,132],"source":"The IsWritePublic value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination."},{"content":"If &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is nonpublic, the <ph id=\"ph1\">`set`</ph> accessor is not callable in a practical way, and IsWritePublic returns <ph id=\"ph2\">`false`</ph>.","pos":[133,286],"source":" If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and IsWritePublic returns `false`."},{"content":"Calling IsWritePublic invokes &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; or a specific override of that method.","pos":[293,414],"source":"       Calling IsWritePublic invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; method is virtual and therefore, can be overridden.","pos":[420,546],"source":"      > [!IMPORTANT] >  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[547,785]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[786,873]}]},{"pos":[50931,51216],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a callable public <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[51703,51830],"content":"When implemented in a derived class, returns an <bpt id=\"p1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation."},{"pos":[51843,52179],"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.       The default implementation returns `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.","pos":[0,111]},{"content":"In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to &lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;.","pos":[112,285],"source":" In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>."},{"content":"The default implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[292,334],"source":"       The default implementation returns `null`."}]},{"pos":[52404,52486],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> implementation.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation."},{"pos":[52949,53082],"content":"Returns a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for deferred loading of XAML declared objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> object, which is used for deferred loading of XAML declared objects.","pos":[0,133],"source":"Returns a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for deferred loading of XAML declared objects."}]},{"pos":[53095,53745],"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.       The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type. If neither object is available, this method might return `null`.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; property.","pos":[0,117],"source":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property."},{"content":"Override this method if you want &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.","pos":[118,387],"source":" Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information."},{"content":"The default implementation returns an object either by reading &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; or using a &lt;xref:System.Xaml.XamlDeferringLoader&gt; from the declaring type.","pos":[394,583],"source":"       The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type."},{"content":"If neither object is available, this method might return <ph id=\"ph1\">`null`</ph>.","pos":[584,648],"source":" If neither object is available, this method might return `null`."}]},{"pos":[54018,54165],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> that has a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlDeferringLoader\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constraint on the generic.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic."},{"pos":[54590,54821],"content":"Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a list of <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","pos":[0,70],"source":"Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."},{"content":"Items in the list report the members where dependency relationships for initialization order exist relative to this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[71,231],"source":" Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>."}]},{"pos":[54834,55845],"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.       The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.       Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.       The list is read-only.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.       The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.       Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.       The list is read-only.","pos":[0,1005],"nodes":[{"content":"This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; property.","pos":[0,111],"source":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property."},{"content":"Override this method if you want &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.","pos":[112,375],"source":" Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information."},{"content":"The WPF XAML reader and writer implementations attribute this case with &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;.","pos":[382,502],"source":"       The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>."},{"content":"The default implementation uses this existing &lt;xref:System.Windows.Markup.DependsOnAttribute&gt; technique.","pos":[503,607],"source":" The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique."},{"content":"Override this method if you are not using &lt;xref:System.Windows.Markup.DependsOnAttribute&gt; for this purpose and intend to replace that technique for indicating property processing order with your own technique.","pos":[614,823],"source":"       Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique."},{"content":"If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.","pos":[824,976]},{"content":"The list is read-only.","pos":[983,1005]}]}]},{"pos":[56084,56146],"content":"A list of <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."},{"pos":[56555,56696],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[56709,57467],"content":"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.       The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>. However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.       Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is invoked by calls to &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.","pos":[0,76],"source":"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>."},{"content":"The default implementation does not require that a &lt;xref:System.Xaml.XamlMember&gt; be constructed by using one of the constructors that pass an initial &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.","pos":[83,277],"source":"       The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>."},{"content":"However, an &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; value must exist for the &lt;xref:System.Xaml.XamlMember&gt;; otherwise, the default implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[278,449],"source":" However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`."},{"content":"Override this method if you also derive from &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; and intend to return the derived class.","pos":[456,584],"source":"       Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class."},{"content":"If you return <ph id=\"ph1\">`null`</ph>, &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt; returns &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; to callers.","pos":[585,754],"source":" If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers."}]},{"pos":[57664,57856],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> information for this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>; or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlMember\"></xref>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[58273,58373],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is reported as an ambient property.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property."},{"pos":[58386,59590],"content":"This method is invoked by internal calls that check for ambient XAML property information. Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers. The internal calls that reference LookupIsAmbient are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types. Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for LookupIsAmbient if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.       Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.       Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is invoked by internal calls that check for ambient XAML property information.","pos":[0,90]},{"content":"Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.","pos":[91,194]},{"content":"The internal calls that reference LookupIsAmbient are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.","pos":[195,397]},{"content":"The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.","pos":[398,537]},{"content":"Specifically, the default implementation checks for &lt;xref:System.Windows.Markup.AmbientAttribute&gt; and returns <ph id=\"ph1\">`true`</ph> for LookupIsAmbient if &lt;xref:System.Windows.Markup.AmbientAttribute&gt; exists on a member definition.","pos":[538,754],"source":" Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for LookupIsAmbient if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition."},{"content":"Override this method if you are not using &lt;xref:System.Windows.Markup.AmbientAttribute&gt; for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.","pos":[761,966],"source":"       Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique."},{"content":"Example APIs from WPF that attribute with &lt;xref:System.Windows.Markup.AmbientAttribute&gt; are &lt;xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt;.","pos":[973,1200],"source":"       Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>."}]},{"pos":[59735,59953],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to report this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> as an ambient property; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an ambient property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[60362,60447],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents an event.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event."},{"pos":[60460,60988],"content":"The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation checks whether &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; is of type &lt;xref:System.Reflection.EventInfo&gt;, and if it is, returns <ph id=\"ph1\">`true`</ph>.","pos":[0,168],"source":"The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;.","pos":[175,271],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","pos":[272,526],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis."}]},{"pos":[61131,61351],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to report that this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents an event; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to report that this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[61773,61880],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents an intended read-only property.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an intended read-only property."},{"pos":[61893,62447],"content":"The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation returns <ph id=\"ph1\">`true`</ph> if &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; exists, but a public <ph id=\"ph2\">`set`</ph> accessor does not exist for it, as determined by internal reflection.","pos":[0,191],"source":"The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;.","pos":[198,297],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","pos":[298,552],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis."}]},{"pos":[62593,62822],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to report this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> as an intended read-only property; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an intended read-only property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[63257,63430],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a property that has a public <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor."},{"pos":[63443,64620],"content":"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.       LookupIsReadPublic returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type. Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.      > [!IMPORTANT] >  The LookupIsReadPublic method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation returns results based either on internal reflection or the negation of &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;, processing in that order.","pos":[0,169],"source":"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order."},{"content":"LookupIsReadPublic returns whether the member itself is public; it returns <ph id=\"ph1\">`true`</ph> for a public member on a nonpublic declaring type.","pos":[176,308],"source":"       LookupIsReadPublic returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type."},{"content":"Use &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt; instead, if you also want to consider the visibility of the declaring type.","pos":[309,434],"source":" Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;.","pos":[441,542],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[543,745],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The LookupIsReadPublic method is virtual and therefore, can be overridden.","pos":[751,843],"source":"      > [!IMPORTANT] >  The LookupIsReadPublic method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[844,1082]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[1083,1170]}]},{"pos":[64768,65064],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a property that has a public <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[65486,65660],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a member that is not resolvable by the backing system that is used for type and member resolution.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that is not resolvable by the backing system that is used for type and member resolution."},{"pos":[65673,66185],"content":"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>. The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.       Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method may be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.","pos":[0,102],"source":"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"content":"The default implementation returns results that are based on either internal reflection or checking for a <ph id=\"ph1\">`null`</ph> value of &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;, processing in that order.","pos":[103,301],"source":" The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[308,510],"source":"       Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]},{"pos":[66330,66553],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a non-resolvable member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a non-resolvable member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[66982,67238],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a member that has a public <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor but not a public <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor but not a public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor."},{"pos":[67251,67770],"content":"The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation returns <ph id=\"ph1\">`true`</ph> if an &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; exists that has a public <ph id=\"ph2\">`set`</ph> accessor and a nonpublic <ph id=\"ph3\">`get`</ph> accessor, as determined by internal reflection.","pos":[0,207],"source":"The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;.","pos":[214,314],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[315,517],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]},{"pos":[67917,68136],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a write-only member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[68577,68748],"content":"Returns whether this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> represents a member that has a public <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> accessor.","needQuote":true,"needEscape":true,"source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor."},{"pos":[68761,69670],"content":"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.      > [!IMPORTANT] >  The LookupIsWritePublic method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation returns results based  either internal reflection or the negation of &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;, processing in that order.","pos":[0,166],"source":"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.","pos":[173,275],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[276,478],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  The LookupIsWritePublic method is virtual and therefore, can be overridden.","pos":[484,577],"source":"      > [!IMPORTANT] >  The LookupIsWritePublic method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[578,816]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[817,904]}]},{"pos":[69819,70036],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> represents a writable member; otherwise, <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a writable member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[70464,70594],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the type where the <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can exist.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."},{"pos":[70607,71323],"content":"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, LookupTargetType always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, LookupTargetType returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, LookupTargetType always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, LookupTargetType returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,714],"nodes":[{"content":"The default implementation distinguishes between attachable and non-attachable members.","pos":[0,87]},{"content":"For non-attachable members, LookupTargetType always returns &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.","pos":[88,195],"source":" For non-attachable members, LookupTargetType always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>."},{"content":"For attachable members, LookupTargetType returns a result based on examining the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; accessor parameter type and interprets that type based on XAML schema context.","pos":[196,405],"source":" For attachable members, LookupTargetType returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;.","pos":[412,511],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[512,714],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]},{"pos":[71491,71577],"content":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type where the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can exist.","pos":[0,73],"source":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."},{"content":"See Remarks.","pos":[74,86]}]},{"pos":[71972,72078],"content":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the type that is used by the member.","pos":[0,93],"source":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."},{"content":"See Remarks.","pos":[94,106]}]},{"pos":[72091,73435],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.       The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.      -   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.      -   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).      -   For a method, <xref:System.Xaml.XamlType> is the return type.       In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.       The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.      -   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.      -   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).      -   For a method, <xref:System.Xaml.XamlType> is the return type.       In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,1332],"nodes":[{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.","pos":[0,93],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>."},{"content":"Override this method if you want &lt;xref:System.Xaml.XamlMember.Type%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.","pos":[94,352],"source":" Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information."},{"content":"The default implementation uses different code paths and conceptual meanings for the returned &lt;xref:System.Xaml.XamlType&gt; that is based on whether this &lt;xref:System.Xaml.XamlMember&gt; represents a property, method, or event.","pos":[359,581],"source":"       The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event."},{"content":"-   For a property, the returned &lt;xref:System.Xaml.XamlType&gt; is the type that sets the property or is returned by the property.","pos":[587,714],"source":"      -   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property."},{"content":"-   For an event, the returned &lt;xref:System.Xaml.XamlType&gt; is the required event handler type (a delegate in a CLR implementation).","pos":[720,851],"source":"      -   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation)."},{"content":"-   For a method, &lt;xref:System.Xaml.XamlType&gt; is the return type.","pos":[857,922],"source":"      -   For a method, <xref:System.Xaml.XamlType> is the return type."},{"content":"In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.","pos":[929,1029]},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.","pos":[1036,1129],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[1130,1332],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]},{"pos":[73597,73695],"content":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the type that is used by the member.","pos":[0,85],"source":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."},{"content":"See Remarks.","pos":[86,98]}]},{"pos":[74129,74242],"content":"Returns a type converter implementation that is associated with this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a type converter implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[74255,75098],"content":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.      -   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.      -   If the member is an event, an event-specific type converter is returned.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.      -   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.      -   If the member is an event, an event-specific type converter is returned.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,835],"nodes":[{"content":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.","pos":[0,318],"source":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context."},{"content":"-   If &lt;xref:System.Xaml.XamlMember.Type%2A&gt; is valid, a type converter that is associated with the type is returned.","pos":[324,441],"source":"      -   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned."},{"content":"-   If the member is an event, an event-specific type converter is returned.","pos":[447,523]},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;.","pos":[530,632],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[633,835],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]},{"pos":[75377,75581],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> instance with <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constraint; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instance with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[76039,76190],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[76203,77291],"content":"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This behavior can result in `null` for certain cases. including cases where no associated accessor exists or the member is not a property.       This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation interprets the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; property as &lt;xref:System.Reflection.PropertyInfo&gt; and returns the value of &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt; (with the parameter set to <ph id=\"ph1\">`true`</ph>), which means that the returned method can be nonpublic.","pos":[0,336],"source":"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic."},{"content":"This behavior can result in <ph id=\"ph1\">`null`</ph> for certain cases.","pos":[337,390],"source":" This behavior can result in `null` for certain cases."},{"content":"including cases where no associated accessor exists or the member is not a property.","pos":[391,475]},{"content":"This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt; property on an associated &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.","pos":[482,675],"source":"       This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[676,878],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"Make sure to implement LookupUnderlyingGetter, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, and &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; so that they all return correlated results.","pos":[879,1086],"source":" Make sure to implement LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results."}]},{"pos":[77481,77673],"content":"The &lt;xref:System.Reflection.MethodInfo&gt; for the associated <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Reflection.MethodInfo> for the associated <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[78134,78269],"content":"Returns a CLR type system &lt;xref:System.Reflection.MemberInfo&gt; that is associated with this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a CLR type system <xref:System.Reflection.MemberInfo> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[78282,79191],"content":"The default implementation returns the underlying member information, which is based on construction. If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.       If an underlying member was set during construction, you should not need to call this method.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and LookupUnderlyingMember so that they all return correlated results.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation returns the underlying member information, which is based on construction.","pos":[0,101]},{"content":"If the &lt;xref:System.Reflection.MemberInfo&gt; object is constructed with a signature that does not provide enough information to set the underlying member, this method returns <ph id=\"ph1\">`null`</ph>.","pos":[102,282],"source":" If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`."},{"content":"If an underlying member was set during construction, you should not need to call this method.","pos":[289,382]},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;.","pos":[389,494],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[495,697],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"Make sure to implement &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, and LookupUnderlyingMember so that they all return correlated results.","pos":[698,905],"source":" Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and LookupUnderlyingMember so that they all return correlated results."}]},{"pos":[79381,79580],"content":"A CLR type system &lt;xref:System.Reflection.MemberInfo&gt; object that is associated with this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A CLR type system <xref:System.Reflection.MemberInfo> object that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[80041,80192],"content":"Returns a <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[80205,81254],"content":"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.       This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation interprets &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; as &lt;xref:System.Reflection.PropertyInfo&gt; and returns the value of &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt; (with the parameter set to <ph id=\"ph1\">`true`</ph>), which means that the returned method can be nonpublic.","pos":[0,323],"source":"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic."},{"content":"This can result in <ph id=\"ph1\">`null`</ph> for certain cases, including cases where there is no such accessor, or the member is not a property.","pos":[324,450],"source":" This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt; on an associated &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[457,839],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"Make sure to implement &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, LookupUnderlyingSetter, and &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; so that they all return correlated results.","pos":[840,1047],"source":" Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results."}]},{"pos":[81444,81636],"content":"The &lt;xref:System.Reflection.MethodInfo&gt; for the associated <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> accessor; or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref:System.Reflection.MethodInfo> for the associated <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[82092,82207],"content":"Returns a value serializer implementation that is associated with this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a value serializer implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[82220,83056],"content":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.      -   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.      -   If the previous conditions do not apply, `null` is returned.       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","needQuote":false,"needEscape":true,"nodes":[{"content":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.","pos":[0,320],"source":"The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context."},{"content":"-   If &lt;xref:System.Xaml.XamlMember.Type%2A&gt; is valid, a value converter that is associated with the type is returned.","pos":[326,444],"source":"      -   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned."},{"content":"-   If the previous conditions do not apply, <ph id=\"ph1\">`null`</ph> is returned.","pos":[450,514],"source":"      -   If the previous conditions do not apply, `null` is returned."},{"content":"This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;.","pos":[521,625],"source":"       This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>."},{"content":"Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[626,828],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]},{"pos":[83341,83533],"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> instance with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instance with <xref:System.Windows.Markup.ValueSerializer> constraint, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[83899,84052],"content":"Gets the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> name string that declares this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[84065,84668],"content":"This value is always set during construction. The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.       [XamlName Grammar](~/add/includes/ajax-current-ext-md.md) and naming rules for CLR type and members are not an exact intersect. It is possible to declare a member name that is legal under CLR but not valid under XAML naming. You should avoid this situation if possible.","needQuote":false,"needEscape":true,"nodes":[{"content":"This value is always set during construction.","pos":[0,45]},{"content":"The constructors that are implemented by &lt;xref:System.Xaml.XamlMember&gt; typically throw an exception if an initial name is not specified; therefore, do not expect this property to be <ph id=\"ph1\">`null`</ph> or an empty string, if you are using default .NET Framework XAML Services implementations.","pos":[46,325],"source":" The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations."},{"content":"<bpt id=\"p1\">[</bpt>XamlName Grammar<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept> and naming rules for CLR type and members are not an exact intersect.","pos":[332,459],"source":"[XamlName Grammar](~/add/includes/ajax-current-ext-md.md) and naming rules for CLR type and members are not an exact intersect."},{"content":"It is possible to declare a member name that is legal under CLR but not valid under XAML naming.","pos":[460,556]},{"content":"You should avoid this situation if possible.","pos":[557,601]}]},{"pos":[84778,84926],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> name string that declares this <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[85473,85578],"content":"Determines whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects have the same value.","needQuote":true,"needEscape":true,"source":"Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have the same value."},{"pos":[85799,85909],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[85986,86096],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[86155,86385],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">xamlMember1</ph><ept id=\"p2\">&lt;/code&gt;</ept> is the same as the value of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlMember2</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>xamlMember1</code> is the same as the value of <code>xamlMember2</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[86949,87056],"content":"Determines whether two specified <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects have different values.","needQuote":true,"needEscape":true,"source":"Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have different values."},{"pos":[87279,87389],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[87466,87576],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[87635,87863],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">xamlMember1</ph><ept id=\"p2\">&lt;/code&gt;</ept> differs from the value of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlMember2</ph><ept id=\"p3\">&lt;/code&gt;</ept>; otherwise, <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>xamlMember1</code> differs from the value of <code>xamlMember2</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[88311,88442],"content":"Gets the single XAML namespace URI that identifies the primary XAML namespace for this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets the single XAML namespace URI that identifies the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[88454,88787],"content":"The PreferredXamlNamespace property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The PreferredXamlNamespace property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","pos":[0,333],"nodes":[{"content":"The PreferredXamlNamespace property provides the same value as calling &lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt; and then getting the first value string from the returned list.","pos":[0,185],"source":"The PreferredXamlNamespace property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list."},{"content":"The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","pos":[186,333]}]}]},{"pos":[88914,89026],"content":"The identifier for the primary XAML namespace for this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, as a string.","needQuote":true,"needEscape":true,"source":"The identifier for the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>, as a string."},{"pos":[89488,89641],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value, which indicates how a visual designer should process the member.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> value, which indicates how a visual designer should process the member."},{"pos":[89856,90049],"content":"A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A value of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> enumeration.","pos":[0,102],"source":"A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration."},{"content":"The default is <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[103,193],"source":" The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref>."}]},{"pos":[90447,90574],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the type where the <bpt id=\"p2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> can exist.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."},{"pos":[90587,91508],"content":"The returned value is different for attachable and non-attachable members. For non-attachable members, TargetType returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:      -   If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.      -   If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called. The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors. A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.","needQuote":false,"needEscape":true,"nodes":[{"content":"The returned value is different for attachable and non-attachable members.","pos":[0,74]},{"content":"For non-attachable members, TargetType returns &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.","pos":[75,169],"source":" For non-attachable members, TargetType returns <xref:System.Xaml.XamlMember.DeclaringType%2A>."},{"content":"For attachable members, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; returns a result that is based on this logic:      -   If reflection cannot resolve a backing (&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id=\"ph1\">`true`</ph>), this method returns an internal constant that represents a generic object type.","pos":[170,470],"source":" For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:      -   If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type."},{"content":"-   If the previous condition does not apply, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; is called.","pos":[476,582],"source":"      -   If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called."},{"content":"The default implementation returns a &lt;xref:System.Xaml.XamlType&gt; that is based on examining the methods that implement the <ph id=\"ph1\">`get`</ph> and <ph id=\"ph2\">`set`</ph> accessors.","pos":[583,732],"source":" The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors."},{"content":"A class might override &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; to use a different behavior such as other metadata forms that might report target types for attachable members.","pos":[733,917],"source":" A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members."}]},{"pos":[91645,91731],"content":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The type where the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> can exist.","pos":[0,73],"source":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."},{"content":"See Remarks.","pos":[74,86]}]},{"pos":[92110,92194],"content":"Returns a string representation of this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[92206,92272],"content":"This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This implementation returns &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.","pos":[0,66],"source":"This implementation returns <xref:System.Xaml.XamlMember.Name%2A>."}]},{"pos":[92408,92484],"content":"A string representation of this <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>."},{"pos":[92837,92927],"content":"Gets the <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the type that is used by the member.","needQuote":true,"needEscape":true,"source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."},{"pos":[92940,93939],"content":"Calling Type invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.       In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings. Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:      -   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.      -   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).      -   For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.       In each case, the XAML schema context is used to evaluate the XAML type from the backing type.","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling Type invokes &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt; or a specific override of that method.","pos":[0,103],"source":"Calling Type invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method."},{"content":"This occurs when the initial internal reflection logic has not already set the information.","pos":[104,195]},{"content":"In the default behavior (no &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt; override), the returned &lt;xref:System.Xaml.XamlType&gt; can have different conceptual meanings.","pos":[202,365],"source":"       In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings."},{"content":"Which meaning applies depends on whether this &lt;xref:System.Xaml.XamlMember&gt; represents a property, method, or event, as the following list shows:      -   For a property, the returned &lt;xref:System.Xaml.XamlType&gt; is the type that sets the property or is returned by the property.","pos":[366,644],"source":" Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:      -   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property."},{"content":"-   For an event, the returned &lt;xref:System.Xaml.XamlType&gt; is the required event handler type (a delegate in a CLR implementation).","pos":[650,781],"source":"      -   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation)."},{"content":"-   For a method, &lt;xref:System.Xaml.XamlType&gt; is the return type of that method, which may be <ph id=\"ph1\">`null`</ph>.","pos":[787,888],"source":"      -   For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`."},{"content":"In each case, the XAML schema context is used to evaluate the XAML type from the backing type.","pos":[895,989]}]},{"pos":[94070,94168],"content":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> of the type that is used by the member.","pos":[0,85],"source":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."},{"content":"See Remarks.","pos":[86,98]}]},{"pos":[94562,94708],"content":"Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which can be used for type conversion construction of XAML declared objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> object, which can be used for type conversion construction of XAML declared objects.","pos":[0,146],"source":"Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which can be used for type conversion construction of XAML declared objects."}]},{"pos":[94721,97346],"content":"Calling TypeConverter invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.       Implementations that return a non-null property value for TypeConverter are not necessarily a working <xref:System.ComponentModel.TypeConverter>. The following is a list of possible non-null return values for TypeConverter and what these values represent:      -   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.      -   The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.      -   The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>. In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`. However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion. Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.       If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling TypeConverter invokes &lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt; or a specific override of that method.","pos":[0,121],"source":"Calling TypeConverter invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method."},{"content":"This behavior occurs when the initial internal reflection logic has not already set the information.","pos":[122,222]},{"content":"Implementations that return a non-null property value for TypeConverter are not necessarily a working &lt;xref:System.ComponentModel.TypeConverter&gt;.","pos":[229,374],"source":"       Implementations that return a non-null property value for TypeConverter are not necessarily a working <xref:System.ComponentModel.TypeConverter>."},{"content":"The following is a list of possible non-null return values for TypeConverter and what these values represent:      -   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.","pos":[375,637]},{"content":"This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.","pos":[638,786]},{"content":"-   The return value reports a built-in value converter.","pos":[792,848]},{"content":"These converters exist for certain internal operations that are performed by a XAML writer.","pos":[849,940]},{"content":"In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.","pos":[941,1066]},{"content":"For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.","pos":[1067,1225]},{"content":"For example, a conversion for an &lt;xref:System.Int32&gt; value has built-in forwarded conversion, and therefore, the &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt; value references &lt;xref:System.ComponentModel.Int32Converter&gt;.","pos":[1226,1466],"source":" For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>."},{"content":"-   The return value reports the special case of an unconstrained object model; that is, the &lt;xref:System.Xaml.XamlMember&gt; has a &lt;xref:System.Xaml.XamlMember.Type%2A&gt; value of &lt;xref:System.Object&gt;.","pos":[1472,1669],"source":"      -   The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>."},{"content":"In this case, the &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; reports that the &lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt; is {<ph id=\"ph1\">`Object}`</ph>.","pos":[1670,1850],"source":" In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`."},{"content":"However, &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt; is <ph id=\"ph1\">`null`</ph> because no actual type or instance is available to perform this conversion.","pos":[1851,2015],"source":" However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion."},{"content":"Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.","pos":[2016,2176]},{"content":"If you can access a working &lt;xref:System.ComponentModel.TypeConverter&gt; from &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;, you can invoke its conversion methods.","pos":[2183,2368],"source":"       If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods."},{"content":"However, many conversion methods rely on service context.","pos":[2369,2426]},{"content":"If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.","pos":[2427,2615]}]},{"pos":[97594,97761],"content":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; value, with a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint on the generic. See Remarks.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> value, with a <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> constraint on the generic.","pos":[0,154],"source":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; value, with a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint on the generic."},{"content":"See Remarks.","pos":[155,167]}]},{"pos":[98179,98408],"content":"Gets the CLR type system <xref:System.Reflection.MemberInfo> that is available for a member that is constructed by <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.EventInfo>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the CLR type system &lt;xref:System.Reflection.MemberInfo&gt; that is available for a member that is constructed by &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.Reflection.MethodInfo&gt;, or &lt;xref:System.Reflection.EventInfo&gt;.","pos":[0,229],"source":"Gets the CLR type system <xref:System.Reflection.MemberInfo> that is available for a member that is constructed by <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.EventInfo>."}]},{"pos":[98420,98547],"content":"Calling UnderlyingMember invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.","needQuote":true,"needEscape":true,"nodes":[{"content":"Calling UnderlyingMember invokes &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; or a specific override of that method.","pos":[0,127],"source":"Calling UnderlyingMember invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method."}]},{"pos":[98705,99076],"content":"CLR type system <xref:System.Reflection.MemberInfo> information, as cast from the initial constructor parameters. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"CLR type system &lt;xref:System.Reflection.MemberInfo&gt; information, as cast from the initial constructor parameters.","pos":[0,113],"source":"CLR type system <xref:System.Reflection.MemberInfo> information, as cast from the initial constructor parameters."},{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is constructed with the <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29<ph id=\"ph2\">&amp;gt;</ph> signature returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[114,371],"source":" A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[99492,99625],"content":"Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for value serialization of XAML declared objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> object, which is used for value serialization of XAML declared objects.","pos":[0,133],"source":"Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for value serialization of XAML declared objects."}]},{"pos":[99638,100129],"content":"Calling ValueSerializer invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.       Not all cases that return a non-null property value for ValueSerializer are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See Remarks in <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to ValueSerializer.","needQuote":false,"needEscape":true,"nodes":[{"content":"Calling ValueSerializer invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.       Not all cases that return a non-null property value for ValueSerializer are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See Remarks in <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to ValueSerializer.","pos":[0,489],"nodes":[{"content":"Calling ValueSerializer invokes &lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt; or a specific override of that method.","pos":[0,125],"source":"Calling ValueSerializer invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method."},{"content":"This behavior occurs when the initial internal reflection logic has not already set the information.","pos":[126,226]},{"content":"Not all cases that return a non-null property value for ValueSerializer are necessarily a working &lt;xref:System.Windows.Markup.ValueSerializer&gt;.","pos":[233,376],"source":"       Not all cases that return a non-null property value for ValueSerializer are necessarily a working <xref:System.Windows.Markup.ValueSerializer>."},{"content":"See Remarks in &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;; the same considerations apply to ValueSerializer.","pos":[377,489],"source":" See Remarks in <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to ValueSerializer."}]}]},{"pos":[100383,100516],"content":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; with <xref:System.Windows.Markup.ValueSerializer> constraint on the generic.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <ph id=\"ph1\">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id=\"ph2\">&amp;gt;</ph> with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint on the generic.","pos":[0,133],"source":"A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; with <xref:System.Windows.Markup.ValueSerializer> constraint on the generic."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlMember\n  id: XamlMember\n  children:\n  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.DeclaringType\n  - System.Xaml.XamlMember.DeferringLoader\n  - System.Xaml.XamlMember.DependsOn\n  - System.Xaml.XamlMember.Equals(System.Object)\n  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  - System.Xaml.XamlMember.GetHashCode\n  - System.Xaml.XamlMember.GetXamlNamespaces\n  - System.Xaml.XamlMember.Invoker\n  - System.Xaml.XamlMember.IsAmbient\n  - System.Xaml.XamlMember.IsAttachable\n  - System.Xaml.XamlMember.IsDirective\n  - System.Xaml.XamlMember.IsEvent\n  - System.Xaml.XamlMember.IsNameValid\n  - System.Xaml.XamlMember.IsReadOnly\n  - System.Xaml.XamlMember.IsReadPublic\n  - System.Xaml.XamlMember.IsUnknown\n  - System.Xaml.XamlMember.IsWriteOnly\n  - System.Xaml.XamlMember.IsWritePublic\n  - System.Xaml.XamlMember.LookupCustomAttributeProvider\n  - System.Xaml.XamlMember.LookupDeferringLoader\n  - System.Xaml.XamlMember.LookupDependsOn\n  - System.Xaml.XamlMember.LookupInvoker\n  - System.Xaml.XamlMember.LookupIsAmbient\n  - System.Xaml.XamlMember.LookupIsEvent\n  - System.Xaml.XamlMember.LookupIsReadOnly\n  - System.Xaml.XamlMember.LookupIsReadPublic\n  - System.Xaml.XamlMember.LookupIsUnknown\n  - System.Xaml.XamlMember.LookupIsWriteOnly\n  - System.Xaml.XamlMember.LookupIsWritePublic\n  - System.Xaml.XamlMember.LookupTargetType\n  - System.Xaml.XamlMember.LookupType\n  - System.Xaml.XamlMember.LookupTypeConverter\n  - System.Xaml.XamlMember.LookupUnderlyingGetter\n  - System.Xaml.XamlMember.LookupUnderlyingMember\n  - System.Xaml.XamlMember.LookupUnderlyingSetter\n  - System.Xaml.XamlMember.LookupValueSerializer\n  - System.Xaml.XamlMember.Name\n  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  - System.Xaml.XamlMember.PreferredXamlNamespace\n  - System.Xaml.XamlMember.SerializationVisibility\n  - System.Xaml.XamlMember.TargetType\n  - System.Xaml.XamlMember.ToString\n  - System.Xaml.XamlMember.Type\n  - System.Xaml.XamlMember.TypeConverter\n  - System.Xaml.XamlMember.UnderlyingMember\n  - System.Xaml.XamlMember.ValueSerializer\n  langs:\n  - csharp\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n  type: Class\n  summary: Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType\"></xref>) and also for general XAML type system logic.\n  remarks: \"XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible XamlMember subclasses. For most uses of .NET Framework XAML Services APIs and the XamlMember API, you use the default XAML schema context. The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system. This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.  \\n  \\n## Lookup* APIs and XamlMember Derived Classes  \\n XamlMember defines several virtual members that derived classes might override. These members have names that always start with the string `Lookup`. The remainder of the API name then references the property that the virtual method influences. For example, a XamlMember derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class. You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant `Lookup*` methods.  \\n  \\n The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the XamlMember base class. By deriving from XamlMember and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology. You can also use a provided XAML schema context under this scheme and still return the results you want.  \\n  \\n As an example, consider the XamlMember property <xref:System.Xaml.XamlMember.IsWritePublic%2A>. This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.  \\n  \\n## Constructing XamlMember Without XAML Schema Context  \\n Most constructors of XamlMember require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization. The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the XamlMember API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>. In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.  \\n  \\n One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>. However, a XamlMember that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant XamlMember reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n You should not construct a XamlMember that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the  following might be true of your implementation:  \\n  \\n-   The XAML schema context is available later.  \\n  \\n-   You use a member invoker pattern.  \\n  \\n-   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.\"\n  syntax:\n    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Xaml.XamlMember>\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(EventInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref:System.Reflection.EventInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.\n  remarks: Use this constructor if the member represents an event (event handler connection-point property).\n  syntax:\n    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: eventInfo\n      type: System.Reflection.EventInfo\n      description: The CLR type system <xref:System.Reflection.EventInfo> that represents the event member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(PropertyInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref:System.Reflection.PropertyInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.\n  remarks: Use this constructor if the member represents a property (and specifically is not an event handler connection).\n  syntax:\n    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: propertyInfo\n      type: System.Reflection.PropertyInfo\n      description: The CLR type system <xref:System.Reflection.PropertyInfo> that represents the property member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref:System.Reflection.EventInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor if the member represents an event (or an event handler connection-point property).\n  syntax:\n    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: eventInfo\n      type: System.Reflection.EventInfo\n      description: The CLR type system <xref:System.Reflection.EventInfo> that represents the event member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using reflection <xref:System.Reflection.PropertyInfo> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor only if the member represents a property and if it is not an event handler connection.\n  syntax:\n    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: propertyInfo\n      type: System.Reflection.PropertyInfo\n      description: The CLR type system <xref:System.Reflection.PropertyInfo> that represents the property member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String,MethodInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event.\n  remarks: Use this constructor if the member represents an attachable event member.\n  syntax:\n    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: attachableEventName\n      type: System.String\n      description: The string name of the attachable event.\n    - id: adder\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref:System.Reflection.MethodInfo> for the handler <xref uid=\"langword_csharp_Add\" name=\"Add\" href=\"\"></xref> method of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String,XamlType,Boolean)\n  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)\n  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations; see Remarks.\n  remarks: \"A <xref:System.Xaml.XamlMember> that is constructed with the XamlMember signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the following might be true of your implementation:  \\n  \\n-   The XAML schema context is available later.  \\n  \\n-   You use a member invoker pattern.  \\n  \\n-   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.\"\n  syntax:\n    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);\n    parameters:\n    - id: name\n      type: System.String\n      description: The string name of the member.\n    - id: declaringType\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> information for the declaring type.\n    - id: isAttachable\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the member is attachable; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>declaringType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property.\n  remarks: Use this constructor if the member represents an attachable property.\n  syntax:\n    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: attachablePropertyName\n      type: System.String\n      description: The string name of the attachable property.\n    - id: getter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor of the attachable member's backing implementation.\n    - id: setter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor if the member represents an attachable event member.\n  syntax:\n    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: attachableEventName\n      type: System.String\n      description: The string name of the attachable event.\n    - id: adder\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref:System.Reflection.MethodInfo> for the handler <xref uid=\"langword_csharp_Add\" name=\"Add\" href=\"\"></xref> method of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor if the member represents an attachable property member.\n  syntax:\n    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: attachablePropertyName\n      type: System.String\n      description: The string name of the attachable property.\n    - id: getter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor of the attachable member's backing implementation.\n    - id: setter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref:System.Reflection.MethodInfo> for the <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.DeclaringType\n  id: DeclaringType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: XamlMember.DeclaringType\n  fullName: System.Xaml.XamlMember.DeclaringType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This value is typically set during initialization and is usually not `null`.  \\n  \\n> [!IMPORTANT]\\n>  DeclaringType information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.\"\n  syntax:\n    content: public System.Xaml.XamlType DeclaringType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.DeclaringType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.DeferringLoader\n  id: DeferringLoader\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: DeferringLoader\n  nameWithType: XamlMember.DeferringLoader\n  fullName: System.Xaml.XamlMember.DeferringLoader\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for deferred loading of XAML declared objects.\n  remarks: Calling DeferringLoader invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n      description: A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlMember.DeferringLoader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.DependsOn\n  id: DependsOn\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: DependsOn\n  nameWithType: XamlMember.DependsOn\n  fullName: System.Xaml.XamlMember.DependsOn\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"Calling DependsOn invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.  \\n  \\n The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule. The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order. By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member. You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.  \\n  \\n The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose. Large numbers of dependencies have the potential to slow down XAML processing. Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.  \\n  \\n Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.\"\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlMember}\n      description: A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects.\n  overload: System.Xaml.XamlMember.DependsOn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: XamlMember.Equals(Object)\n  fullName: System.Xaml.XamlMember.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Indicates whether the current object is equal to another object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current object is equal to the <code>obj</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  id: Equals(System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Equals(XamlMember)\n  nameWithType: XamlMember.Equals(XamlMember)\n  fullName: System.Xaml.XamlMember.Equals(XamlMember)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Indicates whether the current object is equal to another object of the same type.\n  syntax:\n    content: public bool Equals (System.Xaml.XamlMember other);\n    parameters:\n    - id: other\n      type: System.Xaml.XamlMember\n      description: An object to compare with this object.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the current object is equal to the <code>other</code> parameter; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.GetHashCode\n  id: GetHashCode\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: XamlMember.GetHashCode()\n  fullName: System.Xaml.XamlMember.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the hash code for this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer hash code.\n  overload: System.Xaml.XamlMember.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.GetXamlNamespaces\n  id: GetXamlNamespaces\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: GetXamlNamespaces()\n  nameWithType: XamlMember.GetXamlNamespaces()\n  fullName: System.Xaml.XamlMember.GetXamlNamespaces()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a list of XAML namespaces where this XAML member can exist.\n  remarks: The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.\n  syntax:\n    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: A list of XAML namespace identifiers as strings.\n  overload: System.Xaml.XamlMember.GetXamlNamespaces*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.Invoker\n  id: Invoker\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Invoker\n  nameWithType: XamlMember.Invoker\n  fullName: System.Xaml.XamlMember.Invoker\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The `Invoker` pattern is an advanced XAML type system extension technique. The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.  \\n  \\n If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the Invoker property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.  \\n  \\n <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default. This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.  \\n  \\n Calling Invoker invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }\n    return:\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.Invoker*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsAmbient\n  id: IsAmbient\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsAmbient\n  nameWithType: XamlMember.IsAmbient\n  fullName: System.Xaml.XamlMember.IsAmbient\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property.\n  remarks: \"Calling IsAmbient invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.  \\n  \\n Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>. The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.  \\n  \\n <xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>. It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.\"\n  syntax:\n    content: public bool IsAmbient { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsAmbient*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsAttachable\n  id: IsAttachable\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsAttachable\n  nameWithType: XamlMember.IsAttachable\n  fullName: System.Xaml.XamlMember.IsAttachable\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member.\n  remarks: The IsAttachable value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.\n  syntax:\n    content: public bool IsAttachable { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsAttachable*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsDirective\n  id: IsDirective\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsDirective\n  nameWithType: XamlMember.IsDirective\n  fullName: System.Xaml.XamlMember.IsDirective\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive.\n  remarks: \"The IsDirective value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>. The base <xref:System.Xaml.XamlMember> constructors initialize so that IsDirective is `false`. However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that IsDirective is `true`.  \\n  \\n If you want to report IsDirective as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.\"\n  syntax:\n    content: public bool IsDirective { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsDirective*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsEvent\n  id: IsEvent\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsEvent\n  nameWithType: XamlMember.IsEvent\n  fullName: System.Xaml.XamlMember.IsEvent\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event member.\n  remarks: Calling IsEvent invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.\n  syntax:\n    content: public bool IsEvent { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsNameValid\n  id: IsNameValid\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsNameValid\n  nameWithType: XamlMember.IsNameValid\n  fullName: System.Xaml.XamlMember.IsNameValid\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> string as its <xref:System.Xaml.XamlMember.Name*>.\n  syntax:\n    content: public bool IsNameValid { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> string; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsNameValid*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsReadOnly\n  id: IsReadOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XamlMember.IsReadOnly\n  fullName: System.Xaml.XamlMember.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member.\n  remarks: Calling IsReadOnly invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsReadPublic\n  id: IsReadPublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsReadPublic\n  nameWithType: XamlMember.IsReadPublic\n  fullName: System.Xaml.XamlMember.IsReadPublic\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member with a callable public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor.\n  remarks: \"The IsReadPublic value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and IsReadPublic returns `false`.  \\n  \\n Calling IsReadPublic invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: public bool IsReadPublic { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsReadPublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsUnknown\n  id: IsUnknown\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: XamlMember.IsUnknown\n  fullName: System.Xaml.XamlMember.IsUnknown\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.\n  remarks: \"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for IsUnknown.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for IsUnknown cannot be written into an object graph. Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for IsUnknown.  \\n  \\n You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for IsUnknown unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.  \\n  \\n Calling IsUnknown invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the member is not resolvable; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the member is resolvable.\n  overload: System.Xaml.XamlMember.IsUnknown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsWriteOnly\n  id: IsWriteOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsWriteOnly\n  nameWithType: XamlMember.IsWriteOnly\n  fullName: System.Xaml.XamlMember.IsWriteOnly\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member.\n  remarks: Calling IsWriteOnly invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.\n  syntax:\n    content: public bool IsWriteOnly { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsWriteOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.IsWritePublic\n  id: IsWritePublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsWritePublic\n  nameWithType: XamlMember.IsWritePublic\n  fullName: System.Xaml.XamlMember.IsWritePublic\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a callable public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.\n  remarks: \"The IsWritePublic value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and IsWritePublic returns `false`.  \\n  \\n Calling IsWritePublic invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: public bool IsWritePublic { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.IsWritePublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider\n  id: LookupCustomAttributeProvider\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupCustomAttributeProvider()\n  nameWithType: XamlMember.LookupCustomAttributeProvider()\n  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.\n  remarks: \"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.  \\n  \\n The default implementation returns `null`.\"\n  syntax:\n    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();\n    parameters: []\n    return:\n      type: System.Reflection.ICustomAttributeProvider\n      description: An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.\n  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupDeferringLoader\n  id: LookupDeferringLoader\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupDeferringLoader()\n  nameWithType: XamlMember.LookupDeferringLoader()\n  fullName: System.Xaml.XamlMember.LookupDeferringLoader()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for deferred loading of XAML declared objects.\n  remarks: \"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \\n  \\n The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type. If neither object is available, this method might return `null`.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n      description: A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlMember.LookupDeferringLoader*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupDependsOn\n  id: LookupDependsOn\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupDependsOn()\n  nameWithType: XamlMember.LookupDependsOn()\n  fullName: System.Xaml.XamlMember.LookupDependsOn()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \\n  \\n The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.  \\n  \\n Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.  \\n  \\n The list is read-only.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlMember}\n      description: A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects.\n  overload: System.Xaml.XamlMember.LookupDependsOn*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupInvoker\n  id: LookupInvoker\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupInvoker()\n  nameWithType: XamlMember.LookupInvoker()\n  fullName: System.Xaml.XamlMember.LookupInvoker()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.  \\n  \\n The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>. However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.  \\n  \\n Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlMember\"></xref>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupInvoker*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsAmbient\n  id: LookupIsAmbient\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsAmbient()\n  nameWithType: XamlMember.LookupIsAmbient()\n  fullName: System.Xaml.XamlMember.LookupIsAmbient()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property.\n  remarks: \"This method is invoked by internal calls that check for ambient XAML property information. Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers. The internal calls that reference LookupIsAmbient are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types. Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for LookupIsAmbient if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.  \\n  \\n Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.  \\n  \\n Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected virtual bool LookupIsAmbient ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an ambient property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsAmbient*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsEvent\n  id: LookupIsEvent\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsEvent()\n  nameWithType: XamlMember.LookupIsEvent()\n  fullName: System.Xaml.XamlMember.LookupIsEvent()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event.\n  remarks: \"The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsEvent ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to report that this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsEvent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsReadOnly\n  id: LookupIsReadOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsReadOnly()\n  nameWithType: XamlMember.LookupIsReadOnly()\n  fullName: System.Xaml.XamlMember.LookupIsReadOnly()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an intended read-only property.\n  remarks: \"The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsReadOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an intended read-only property; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsReadOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsReadPublic\n  id: LookupIsReadPublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsReadPublic()\n  nameWithType: XamlMember.LookupIsReadPublic()\n  fullName: System.Xaml.XamlMember.LookupIsReadPublic()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor.\n  remarks: \"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.  \\n  \\n LookupIsReadPublic returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type. Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.  \\n  \\n> [!IMPORTANT]\\n>  The LookupIsReadPublic method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual bool LookupIsReadPublic ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsReadPublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsUnknown\n  id: LookupIsUnknown\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsUnknown()\n  nameWithType: XamlMember.LookupIsUnknown()\n  fullName: System.Xaml.XamlMember.LookupIsUnknown()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that is not resolvable by the backing system that is used for type and member resolution.\n  remarks: \"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>. The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.  \\n  \\n Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsUnknown ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a non-resolvable member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsUnknown*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsWriteOnly\n  id: LookupIsWriteOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsWriteOnly()\n  nameWithType: XamlMember.LookupIsWriteOnly()\n  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor but not a public <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor.\n  remarks: \"The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsWriteOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsWriteOnly*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupIsWritePublic\n  id: LookupIsWritePublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsWritePublic()\n  nameWithType: XamlMember.LookupIsWritePublic()\n  fullName: System.Xaml.XamlMember.LookupIsWritePublic()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor.\n  remarks: \"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.  \\n  \\n> [!IMPORTANT]\\n>  The LookupIsWritePublic method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual bool LookupIsWritePublic ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a writable member; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupIsWritePublic*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupTargetType\n  id: LookupTargetType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupTargetType()\n  nameWithType: XamlMember.LookupTargetType()\n  fullName: System.Xaml.XamlMember.LookupTargetType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.\n  remarks: \"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, LookupTargetType always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, LookupTargetType returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupTargetType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist. See Remarks.\n  overload: System.Xaml.XamlMember.LookupTargetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupType\n  id: LookupType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupType()\n  nameWithType: XamlMember.LookupType()\n  fullName: System.Xaml.XamlMember.LookupType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member. See Remarks.\n  remarks: \"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \\n  \\n The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.  \\n  \\n-   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.  \\n  \\n-   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).  \\n  \\n-   For a method, <xref:System.Xaml.XamlType> is the return type.  \\n  \\n In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member. See Remarks.\n  overload: System.Xaml.XamlMember.LookupType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupTypeConverter\n  id: LookupTypeConverter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupTypeConverter()\n  nameWithType: XamlMember.LookupTypeConverter()\n  fullName: System.Xaml.XamlMember.LookupTypeConverter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a type converter implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation uses the following logic and processing order:  \\n  \\n-   If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.  \\n  \\n-   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.  \\n  \\n-   If the member is an event, an event-specific type converter is returned.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n      description: A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instance with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupTypeConverter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupUnderlyingGetter\n  id: LookupUnderlyingGetter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupUnderlyingGetter()\n  nameWithType: XamlMember.LookupUnderlyingGetter()\n  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This behavior can result in `null` for certain cases. including cases where no associated accessor exists or the member is not a property.  \\n  \\n This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.\"\n  syntax:\n    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> for the associated <xref uid=\"langword_csharp_get\" name=\"get\" href=\"\"></xref> accessor; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupUnderlyingMember\n  id: LookupUnderlyingMember\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupUnderlyingMember()\n  nameWithType: XamlMember.LookupUnderlyingMember()\n  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a CLR type system <xref:System.Reflection.MemberInfo> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation returns the underlying member information, which is based on construction. If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.  \\n  \\n If an underlying member was set during construction, you should not need to call this method.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and LookupUnderlyingMember so that they all return correlated results.\"\n  syntax:\n    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo\n      description: A CLR type system <xref:System.Reflection.MemberInfo> object that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupUnderlyingMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupUnderlyingSetter\n  id: LookupUnderlyingSetter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupUnderlyingSetter()\n  nameWithType: XamlMember.LookupUnderlyingSetter()\n  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.\"\n  syntax:\n    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref:System.Reflection.MethodInfo> for the associated <xref uid=\"langword_csharp_set\" name=\"set\" href=\"\"></xref> accessor; or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.LookupValueSerializer\n  id: LookupValueSerializer\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupValueSerializer()\n  nameWithType: XamlMember.LookupValueSerializer()\n  fullName: System.Xaml.XamlMember.LookupValueSerializer()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value serializer implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation uses the following logic and processing order:  \\n  \\n-   If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.  \\n  \\n-   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.  \\n  \\n-   If the previous conditions do not apply, `null` is returned.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n      description: A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; instance with <xref:System.Windows.Markup.ValueSerializer> constraint, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.LookupValueSerializer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.Name\n  id: Name\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XamlMember.Name\n  fullName: System.Xaml.XamlMember.Name\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This value is always set during construction. The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.  \\n  \\n [XamlName Grammar](~/add/includes/ajax-current-ext-md.md) and naming rules for CLR type and members are not an exact intersect. It is possible to declare a member name that is legal under CLR but not valid under XAML naming. You should avoid this situation if possible.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The <xref uid=\"langword_csharp_xamlName\" name=\"xamlName\" href=\"\"></xref> name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.Name*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: op_Equality(XamlMember,XamlMember)\n  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)\n  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)\n  type: Operator\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have the same value.\n  syntax:\n    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);\n    parameters:\n    - id: xamlMember1\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: xamlMember2\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>xamlMember1</code> is the same as the value of <code>xamlMember2</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: op_Inequality(XamlMember,XamlMember)\n  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)\n  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)\n  type: Operator\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have different values.\n  syntax:\n    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);\n    parameters:\n    - id: xamlMember1\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    - id: xamlMember2\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the value of <code>xamlMember1</code> differs from the value of <code>xamlMember2</code>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.PreferredXamlNamespace\n  id: PreferredXamlNamespace\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: PreferredXamlNamespace\n  nameWithType: XamlMember.PreferredXamlNamespace\n  fullName: System.Xaml.XamlMember.PreferredXamlNamespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the single XAML namespace URI that identifies the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: The PreferredXamlNamespace property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.\n  syntax:\n    content: public string PreferredXamlNamespace { get; }\n    return:\n      type: System.String\n      description: The identifier for the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>, as a string.\n  overload: System.Xaml.XamlMember.PreferredXamlNamespace*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.SerializationVisibility\n  id: SerializationVisibility\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: SerializationVisibility\n  nameWithType: XamlMember.SerializationVisibility\n  fullName: System.Xaml.XamlMember.SerializationVisibility\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> value, which indicates how a visual designer should process the member.\n  syntax:\n    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }\n    return:\n      type: System.ComponentModel.DesignerSerializationVisibility\n      description: A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref>.\n  overload: System.Xaml.XamlMember.SerializationVisibility*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.TargetType\n  id: TargetType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: XamlMember.TargetType\n  fullName: System.Xaml.XamlMember.TargetType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.\n  remarks: \"The returned value is different for attachable and non-attachable members. For non-attachable members, TargetType returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:  \\n  \\n-   If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.  \\n  \\n-   If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called. The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors. A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.\"\n  syntax:\n    content: public System.Xaml.XamlType TargetType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist. See Remarks.\n  overload: System.Xaml.XamlMember.TargetType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.ToString\n  id: ToString\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: XamlMember.ToString()\n  fullName: System.Xaml.XamlMember.ToString()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.Type\n  id: Type\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Type\n  nameWithType: XamlMember.Type\n  fullName: System.Xaml.XamlMember.Type\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.\n  remarks: \"Calling Type invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.  \\n  \\n In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings. Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:  \\n  \\n-   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.  \\n  \\n-   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).  \\n  \\n-   For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.  \\n  \\n In each case, the XAML schema context is used to evaluate the XAML type from the backing type.\"\n  syntax:\n    content: public System.Xaml.XamlType Type { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member. See Remarks.\n  overload: System.Xaml.XamlMember.Type*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.TypeConverter\n  id: TypeConverter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: TypeConverter\n  nameWithType: XamlMember.TypeConverter\n  fullName: System.Xaml.XamlMember.TypeConverter\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which can be used for type conversion construction of XAML declared objects.\n  remarks: \"Calling TypeConverter invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  \\n  \\n Implementations that return a non-null property value for TypeConverter are not necessarily a working <xref:System.ComponentModel.TypeConverter>. The following is a list of possible non-null return values for TypeConverter and what these values represent:  \\n  \\n-   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.  \\n  \\n-   The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.  \\n  \\n-   The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>. In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`. However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion. Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.  \\n  \\n If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n      description: A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; value, with a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint on the generic. See Remarks.\n  overload: System.Xaml.XamlMember.TypeConverter*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.UnderlyingMember\n  id: UnderlyingMember\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: UnderlyingMember\n  nameWithType: XamlMember.UnderlyingMember\n  fullName: System.Xaml.XamlMember.UnderlyingMember\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the CLR type system <xref:System.Reflection.MemberInfo> that is available for a member that is constructed by <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.EventInfo>.\n  remarks: Calling UnderlyingMember invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.\n  syntax:\n    content: public System.Reflection.MemberInfo UnderlyingMember { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: CLR type system <xref:System.Reflection.MemberInfo> information, as cast from the initial constructor parameters. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  overload: System.Xaml.XamlMember.UnderlyingMember*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Xaml.XamlMember.ValueSerializer\n  id: ValueSerializer\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: ValueSerializer\n  nameWithType: XamlMember.ValueSerializer\n  fullName: System.Xaml.XamlMember.ValueSerializer\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; object, which is used for value serialization of XAML declared objects.\n  remarks: \"Calling ValueSerializer invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  \\n  \\n Not all cases that return a non-null property value for ValueSerializer are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See Remarks in <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to ValueSerializer.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n      description: A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; with <xref:System.Windows.Markup.ValueSerializer> constraint on the generic.\n  overload: System.Xaml.XamlMember.ValueSerializer*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(EventInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: true\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(PropertyInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: true\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)\n- uid: System.Xaml.Schema.XamlMemberInvoker\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlMemberInvoker\n  nameWithType: XamlMemberInvoker\n  fullName: System.Xaml.Schema.XamlMemberInvoker\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String,MethodInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String,XamlType,Boolean)\n  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)\n  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)\n- uid: System.Xaml.XamlMember.DeclaringType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: XamlMember.DeclaringType\n  fullName: System.Xaml.XamlMember.DeclaringType\n- uid: System.Xaml.XamlMember.DeferringLoader\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeferringLoader\n  nameWithType: XamlMember.DeferringLoader\n  fullName: System.Xaml.XamlMember.DeferringLoader\n- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<XamlDeferringLoader>\n  nameWithType: XamlValueConverter<XamlDeferringLoader>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlDeferringLoader\n    name: XamlDeferringLoader\n    nameWithType: XamlDeferringLoader\n    fullName: XamlDeferringLoader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.DependsOn\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DependsOn\n  nameWithType: XamlMember.DependsOn\n  fullName: System.Xaml.XamlMember.DependsOn\n- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<XamlMember>\n  nameWithType: IList<XamlMember>\n  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.Xaml.XamlMember>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlMember\n    name: XamlMember\n    nameWithType: XamlMember\n    fullName: XamlMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.Equals(System.Object)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: XamlMember.Equals(Object)\n  fullName: System.Xaml.XamlMember.Equals(Object)\n- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Equals(XamlMember)\n  nameWithType: XamlMember.Equals(XamlMember)\n  fullName: System.Xaml.XamlMember.Equals(XamlMember)\n- uid: System.Xaml.XamlMember\n  parent: System.Xaml\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n- uid: System.Xaml.XamlMember.GetHashCode\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: XamlMember.GetHashCode()\n  fullName: System.Xaml.XamlMember.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xaml.XamlMember.GetXamlNamespaces\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetXamlNamespaces()\n  nameWithType: XamlMember.GetXamlNamespaces()\n  fullName: System.Xaml.XamlMember.GetXamlNamespaces()\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<System.String>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.Invoker\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Invoker\n  nameWithType: XamlMember.Invoker\n  fullName: System.Xaml.XamlMember.Invoker\n- uid: System.Xaml.XamlMember.IsAmbient\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAmbient\n  nameWithType: XamlMember.IsAmbient\n  fullName: System.Xaml.XamlMember.IsAmbient\n- uid: System.Xaml.XamlMember.IsAttachable\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAttachable\n  nameWithType: XamlMember.IsAttachable\n  fullName: System.Xaml.XamlMember.IsAttachable\n- uid: System.Xaml.XamlMember.IsDirective\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsDirective\n  nameWithType: XamlMember.IsDirective\n  fullName: System.Xaml.XamlMember.IsDirective\n- uid: System.Xaml.XamlMember.IsEvent\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsEvent\n  nameWithType: XamlMember.IsEvent\n  fullName: System.Xaml.XamlMember.IsEvent\n- uid: System.Xaml.XamlMember.IsNameValid\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsNameValid\n  nameWithType: XamlMember.IsNameValid\n  fullName: System.Xaml.XamlMember.IsNameValid\n- uid: System.Xaml.XamlMember.IsReadOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XamlMember.IsReadOnly\n  fullName: System.Xaml.XamlMember.IsReadOnly\n- uid: System.Xaml.XamlMember.IsReadPublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadPublic\n  nameWithType: XamlMember.IsReadPublic\n  fullName: System.Xaml.XamlMember.IsReadPublic\n- uid: System.Xaml.XamlMember.IsUnknown\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsUnknown\n  nameWithType: XamlMember.IsUnknown\n  fullName: System.Xaml.XamlMember.IsUnknown\n- uid: System.Xaml.XamlMember.IsWriteOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWriteOnly\n  nameWithType: XamlMember.IsWriteOnly\n  fullName: System.Xaml.XamlMember.IsWriteOnly\n- uid: System.Xaml.XamlMember.IsWritePublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWritePublic\n  nameWithType: XamlMember.IsWritePublic\n  fullName: System.Xaml.XamlMember.IsWritePublic\n- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupCustomAttributeProvider()\n  nameWithType: XamlMember.LookupCustomAttributeProvider()\n  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n- uid: System.Xaml.XamlMember.LookupDeferringLoader\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDeferringLoader()\n  nameWithType: XamlMember.LookupDeferringLoader()\n  fullName: System.Xaml.XamlMember.LookupDeferringLoader()\n- uid: System.Xaml.XamlMember.LookupDependsOn\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDependsOn()\n  nameWithType: XamlMember.LookupDependsOn()\n  fullName: System.Xaml.XamlMember.LookupDependsOn()\n- uid: System.Xaml.XamlMember.LookupInvoker\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupInvoker()\n  nameWithType: XamlMember.LookupInvoker()\n  fullName: System.Xaml.XamlMember.LookupInvoker()\n- uid: System.Xaml.XamlMember.LookupIsAmbient\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsAmbient()\n  nameWithType: XamlMember.LookupIsAmbient()\n  fullName: System.Xaml.XamlMember.LookupIsAmbient()\n- uid: System.Xaml.XamlMember.LookupIsEvent\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsEvent()\n  nameWithType: XamlMember.LookupIsEvent()\n  fullName: System.Xaml.XamlMember.LookupIsEvent()\n- uid: System.Xaml.XamlMember.LookupIsReadOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadOnly()\n  nameWithType: XamlMember.LookupIsReadOnly()\n  fullName: System.Xaml.XamlMember.LookupIsReadOnly()\n- uid: System.Xaml.XamlMember.LookupIsReadPublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadPublic()\n  nameWithType: XamlMember.LookupIsReadPublic()\n  fullName: System.Xaml.XamlMember.LookupIsReadPublic()\n- uid: System.Xaml.XamlMember.LookupIsUnknown\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsUnknown()\n  nameWithType: XamlMember.LookupIsUnknown()\n  fullName: System.Xaml.XamlMember.LookupIsUnknown()\n- uid: System.Xaml.XamlMember.LookupIsWriteOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWriteOnly()\n  nameWithType: XamlMember.LookupIsWriteOnly()\n  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()\n- uid: System.Xaml.XamlMember.LookupIsWritePublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWritePublic()\n  nameWithType: XamlMember.LookupIsWritePublic()\n  fullName: System.Xaml.XamlMember.LookupIsWritePublic()\n- uid: System.Xaml.XamlMember.LookupTargetType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTargetType()\n  nameWithType: XamlMember.LookupTargetType()\n  fullName: System.Xaml.XamlMember.LookupTargetType()\n- uid: System.Xaml.XamlMember.LookupType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupType()\n  nameWithType: XamlMember.LookupType()\n  fullName: System.Xaml.XamlMember.LookupType()\n- uid: System.Xaml.XamlMember.LookupTypeConverter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTypeConverter()\n  nameWithType: XamlMember.LookupTypeConverter()\n  fullName: System.Xaml.XamlMember.LookupTypeConverter()\n- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<TypeConverter>\n  nameWithType: XamlValueConverter<TypeConverter>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.TypeConverter\n    name: TypeConverter\n    nameWithType: TypeConverter\n    fullName: TypeConverter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.LookupUnderlyingGetter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingGetter()\n  nameWithType: XamlMember.LookupUnderlyingGetter()\n  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()\n- uid: System.Xaml.XamlMember.LookupUnderlyingMember\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingMember()\n  nameWithType: XamlMember.LookupUnderlyingMember()\n  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Xaml.XamlMember.LookupUnderlyingSetter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingSetter()\n  nameWithType: XamlMember.LookupUnderlyingSetter()\n  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()\n- uid: System.Xaml.XamlMember.LookupValueSerializer\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupValueSerializer()\n  nameWithType: XamlMember.LookupValueSerializer()\n  fullName: System.Xaml.XamlMember.LookupValueSerializer()\n- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<ValueSerializer>\n  nameWithType: XamlValueConverter<ValueSerializer>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Markup.ValueSerializer\n    name: ValueSerializer\n    nameWithType: ValueSerializer\n    fullName: ValueSerializer\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.Name\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Name\n  nameWithType: XamlMember.Name\n  fullName: System.Xaml.XamlMember.Name\n- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Equality(XamlMember,XamlMember)\n  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)\n  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)\n- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Inequality(XamlMember,XamlMember)\n  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)\n  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)\n- uid: System.Xaml.XamlMember.PreferredXamlNamespace\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: PreferredXamlNamespace\n  nameWithType: XamlMember.PreferredXamlNamespace\n  fullName: System.Xaml.XamlMember.PreferredXamlNamespace\n- uid: System.Xaml.XamlMember.SerializationVisibility\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: XamlMember.SerializationVisibility\n  fullName: System.Xaml.XamlMember.SerializationVisibility\n- uid: System.ComponentModel.DesignerSerializationVisibility\n  parent: System.ComponentModel\n  isExternal: false\n  name: DesignerSerializationVisibility\n  nameWithType: DesignerSerializationVisibility\n  fullName: System.ComponentModel.DesignerSerializationVisibility\n- uid: System.Xaml.XamlMember.TargetType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TargetType\n  nameWithType: XamlMember.TargetType\n  fullName: System.Xaml.XamlMember.TargetType\n- uid: System.Xaml.XamlMember.ToString\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ToString()\n  nameWithType: XamlMember.ToString()\n  fullName: System.Xaml.XamlMember.ToString()\n- uid: System.Xaml.XamlMember.Type\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Type\n  nameWithType: XamlMember.Type\n  fullName: System.Xaml.XamlMember.Type\n- uid: System.Xaml.XamlMember.TypeConverter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TypeConverter\n  nameWithType: XamlMember.TypeConverter\n  fullName: System.Xaml.XamlMember.TypeConverter\n- uid: System.Xaml.XamlMember.UnderlyingMember\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: UnderlyingMember\n  nameWithType: XamlMember.UnderlyingMember\n  fullName: System.Xaml.XamlMember.UnderlyingMember\n- uid: System.Xaml.XamlMember.ValueSerializer\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: XamlMember.ValueSerializer\n  fullName: System.Xaml.XamlMember.ValueSerializer\n- uid: System.Xaml.XamlMember.#ctor*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember.XamlMember\n- uid: System.Xaml.XamlMember.DeclaringType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: XamlMember.DeclaringType\n- uid: System.Xaml.XamlMember.DeferringLoader*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeferringLoader\n  nameWithType: XamlMember.DeferringLoader\n- uid: System.Xaml.XamlMember.DependsOn*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DependsOn\n  nameWithType: XamlMember.DependsOn\n- uid: System.Xaml.XamlMember.Equals*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Equals\n  nameWithType: XamlMember.Equals\n- uid: System.Xaml.XamlMember.GetHashCode*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetHashCode\n  nameWithType: XamlMember.GetHashCode\n- uid: System.Xaml.XamlMember.GetXamlNamespaces*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetXamlNamespaces\n  nameWithType: XamlMember.GetXamlNamespaces\n- uid: System.Xaml.XamlMember.Invoker*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Invoker\n  nameWithType: XamlMember.Invoker\n- uid: System.Xaml.XamlMember.IsAmbient*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAmbient\n  nameWithType: XamlMember.IsAmbient\n- uid: System.Xaml.XamlMember.IsAttachable*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAttachable\n  nameWithType: XamlMember.IsAttachable\n- uid: System.Xaml.XamlMember.IsDirective*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsDirective\n  nameWithType: XamlMember.IsDirective\n- uid: System.Xaml.XamlMember.IsEvent*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsEvent\n  nameWithType: XamlMember.IsEvent\n- uid: System.Xaml.XamlMember.IsNameValid*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsNameValid\n  nameWithType: XamlMember.IsNameValid\n- uid: System.Xaml.XamlMember.IsReadOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XamlMember.IsReadOnly\n- uid: System.Xaml.XamlMember.IsReadPublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadPublic\n  nameWithType: XamlMember.IsReadPublic\n- uid: System.Xaml.XamlMember.IsUnknown*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsUnknown\n  nameWithType: XamlMember.IsUnknown\n- uid: System.Xaml.XamlMember.IsWriteOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWriteOnly\n  nameWithType: XamlMember.IsWriteOnly\n- uid: System.Xaml.XamlMember.IsWritePublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWritePublic\n  nameWithType: XamlMember.IsWritePublic\n- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupCustomAttributeProvider\n  nameWithType: XamlMember.LookupCustomAttributeProvider\n- uid: System.Xaml.XamlMember.LookupDeferringLoader*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDeferringLoader\n  nameWithType: XamlMember.LookupDeferringLoader\n- uid: System.Xaml.XamlMember.LookupDependsOn*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDependsOn\n  nameWithType: XamlMember.LookupDependsOn\n- uid: System.Xaml.XamlMember.LookupInvoker*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupInvoker\n  nameWithType: XamlMember.LookupInvoker\n- uid: System.Xaml.XamlMember.LookupIsAmbient*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsAmbient\n  nameWithType: XamlMember.LookupIsAmbient\n- uid: System.Xaml.XamlMember.LookupIsEvent*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsEvent\n  nameWithType: XamlMember.LookupIsEvent\n- uid: System.Xaml.XamlMember.LookupIsReadOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadOnly\n  nameWithType: XamlMember.LookupIsReadOnly\n- uid: System.Xaml.XamlMember.LookupIsReadPublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadPublic\n  nameWithType: XamlMember.LookupIsReadPublic\n- uid: System.Xaml.XamlMember.LookupIsUnknown*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsUnknown\n  nameWithType: XamlMember.LookupIsUnknown\n- uid: System.Xaml.XamlMember.LookupIsWriteOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWriteOnly\n  nameWithType: XamlMember.LookupIsWriteOnly\n- uid: System.Xaml.XamlMember.LookupIsWritePublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWritePublic\n  nameWithType: XamlMember.LookupIsWritePublic\n- uid: System.Xaml.XamlMember.LookupTargetType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTargetType\n  nameWithType: XamlMember.LookupTargetType\n- uid: System.Xaml.XamlMember.LookupType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupType\n  nameWithType: XamlMember.LookupType\n- uid: System.Xaml.XamlMember.LookupTypeConverter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTypeConverter\n  nameWithType: XamlMember.LookupTypeConverter\n- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingGetter\n  nameWithType: XamlMember.LookupUnderlyingGetter\n- uid: System.Xaml.XamlMember.LookupUnderlyingMember*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingMember\n  nameWithType: XamlMember.LookupUnderlyingMember\n- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingSetter\n  nameWithType: XamlMember.LookupUnderlyingSetter\n- uid: System.Xaml.XamlMember.LookupValueSerializer*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupValueSerializer\n  nameWithType: XamlMember.LookupValueSerializer\n- uid: System.Xaml.XamlMember.Name*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Name\n  nameWithType: XamlMember.Name\n- uid: System.Xaml.XamlMember.op_Equality*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Equality\n  nameWithType: XamlMember.op_Equality\n- uid: System.Xaml.XamlMember.op_Inequality*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Inequality\n  nameWithType: XamlMember.op_Inequality\n- uid: System.Xaml.XamlMember.PreferredXamlNamespace*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: PreferredXamlNamespace\n  nameWithType: XamlMember.PreferredXamlNamespace\n- uid: System.Xaml.XamlMember.SerializationVisibility*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: XamlMember.SerializationVisibility\n- uid: System.Xaml.XamlMember.TargetType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TargetType\n  nameWithType: XamlMember.TargetType\n- uid: System.Xaml.XamlMember.ToString*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ToString\n  nameWithType: XamlMember.ToString\n- uid: System.Xaml.XamlMember.Type*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Type\n  nameWithType: XamlMember.Type\n- uid: System.Xaml.XamlMember.TypeConverter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TypeConverter\n  nameWithType: XamlMember.TypeConverter\n- uid: System.Xaml.XamlMember.UnderlyingMember*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: UnderlyingMember\n  nameWithType: XamlMember.UnderlyingMember\n- uid: System.Xaml.XamlMember.ValueSerializer*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: XamlMember.ValueSerializer\n"}