{"nodes":[{"pos":[488,578],"content":"The segments of a query that can be expanded by the <ph id=\"ph1\">`$expand`</ph> clause that follows a query.","needQuote":true,"needEscape":true,"source":"The segments of a query that can be expanded by the `$expand` clause that follows a query."},{"pos":[591,1115],"content":"An `$expand` clause indicates that each expand item should be fully expanded. For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.       The left-most resource property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.       Redundant `$expand` clause rules are ignored.","needQuote":false,"needEscape":true,"nodes":[{"content":"An <ph id=\"ph1\">`$expand`</ph> clause indicates that each expand item should be fully expanded.","pos":[0,77],"source":"An `$expand` clause indicates that each expand item should be fully expanded."},{"content":"For example, the value <ph id=\"ph1\">`OrderLines.Product.Image`</ph> with <ph id=\"ph2\">`$expand`</ph> causes <ph id=\"ph3\">`OrderLines`</ph>, the <ph id=\"ph4\">`Product`</ph> of each element in <ph id=\"ph5\">`OrderLines`</ph>, and the <ph id=\"ph6\">`Image`</ph> of the <ph id=\"ph7\">`Product`</ph> of each element in <ph id=\"ph8\">`OrderLines`</ph> to be expanded.","pos":[78,291],"source":" For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded."},{"content":"The left-most resource property in an <ph id=\"ph1\">`$expand`</ph> clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.","pos":[298,468],"source":"       The left-most resource property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI."},{"content":"Redundant <ph id=\"ph1\">`$expand`</ph> clause rules are ignored.","pos":[475,520],"source":"       Redundant `$expand` clause rules are ignored."}]},{"pos":[1799,1851],"content":"Creates a collection of expand segments for a query.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates a collection of expand segments for a query.","pos":[0,52]}]},{"pos":[2510,2611],"content":"Initializes a new collection of expand segments that is empty and has the specified initial capacity.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initializes a new collection of expand segments that is empty and has the specified initial capacity.","pos":[0,101]}]},{"pos":[2761,2835],"content":"The number of expand segments that the new collection can initially store.","needQuote":true,"needEscape":true,"nodes":[{"content":"The number of expand segments that the new collection can initially store.","pos":[0,74]}]},{"pos":[3329,3414],"content":"Boolean value that indicates whether segments to be expanded include a filter clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean value that indicates whether segments to be expanded include a filter clause.","pos":[0,85]}]},{"pos":[3527,3612],"content":"Boolean value that indicates whether segments to be expanded include a filter clause.","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean value that indicates whether segments to be expanded include a filter clause.","pos":[0,85]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.ExpandSegmentCollection\n  id: ExpandSegmentCollection\n  children:\n  - System.Data.Services.ExpandSegmentCollection.#ctor\n  - System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)\n  - System.Data.Services.ExpandSegmentCollection.HasFilter\n  langs:\n  - csharp\n  name: ExpandSegmentCollection\n  nameWithType: ExpandSegmentCollection\n  fullName: System.Data.Services.ExpandSegmentCollection\n  type: Class\n  summary: The segments of a query that can be expanded by the `$expand` clause that follows a query.\n  remarks: \"An `$expand` clause indicates that each expand item should be fully expanded. For example, the value `OrderLines.Product.Image` with `$expand` causes `OrderLines`, the `Product` of each element in `OrderLines`, and the `Image` of the `Product` of each element in `OrderLines` to be expanded.  \\n  \\n The left-most resource property in an `$expand` clause must be a property on the entity type within the entity set identified by the last path segment in the request URI.  \\n  \\n Redundant `$expand` clause rules are ignored.\"\n  syntax:\n    content: 'public class ExpandSegmentCollection : System.Collections.Generic.List<System.Data.Services.ExpandSegment>'\n  inheritance:\n  - System.Collections.Generic.List`1\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor\n  id: '#ctor'\n  parent: System.Data.Services.ExpandSegmentCollection\n  langs:\n  - csharp\n  name: ExpandSegmentCollection()\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection()\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection()\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Creates a collection of expand segments for a query.\n  syntax:\n    content: public ExpandSegmentCollection ();\n    parameters: []\n  overload: System.Data.Services.ExpandSegmentCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Data.Services.ExpandSegmentCollection\n  langs:\n  - csharp\n  name: ExpandSegmentCollection(Int32)\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Initializes a new collection of expand segments that is empty and has the specified initial capacity.\n  syntax:\n    content: public ExpandSegmentCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: The number of expand segments that the new collection can initially store.\n  overload: System.Data.Services.ExpandSegmentCollection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Services.ExpandSegmentCollection.HasFilter\n  id: HasFilter\n  parent: System.Data.Services.ExpandSegmentCollection\n  langs:\n  - csharp\n  name: HasFilter\n  nameWithType: ExpandSegmentCollection.HasFilter\n  fullName: System.Data.Services.ExpandSegmentCollection.HasFilter\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Boolean value that indicates whether segments to be expanded include a filter clause.\n  syntax:\n    content: public bool HasFilter { get; }\n    return:\n      type: System.Boolean\n      description: Boolean value that indicates whether segments to be expanded include a filter clause.\n  overload: System.Data.Services.ExpandSegmentCollection.HasFilter*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Collections.Generic.List`1\n  isExternal: false\n  name: System.Collections.Generic.List<System.Data.Services.ExpandSegment>\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: ExpandSegmentCollection()\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection()\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection()\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: ExpandSegmentCollection(Int32)\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Services.ExpandSegmentCollection.HasFilter\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: HasFilter\n  nameWithType: ExpandSegmentCollection.HasFilter\n  fullName: System.Data.Services.ExpandSegmentCollection.HasFilter\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor*\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: ExpandSegmentCollection\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection\n- uid: System.Data.Services.ExpandSegmentCollection.HasFilter*\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: HasFilter\n  nameWithType: ExpandSegmentCollection.HasFilter\n"}