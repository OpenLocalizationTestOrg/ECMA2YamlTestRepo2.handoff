{"nodes":[{"pos":[5391,5632],"content":"Represents a currency value ranging from -2 <bpt id=\"p1\">&lt;sup&gt;</bpt>63<ept id=\"p1\">&lt;/sup&gt;</ept> (or -922,337,203,685,477.5808) to 2 <bpt id=\"p2\">&lt;sup&gt;</bpt>63<ept id=\"p2\">&lt;/sup&gt;</ept> -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.","needQuote":true,"needEscape":true,"source":"Represents a currency value ranging from -2 <sup>63</sup> (or -922,337,203,685,477.5808) to 2 <sup>63</sup> -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database."},{"pos":[5644,5743],"content":"The actual value of the SqlMoney object is stored in <xref:System.Data.SqlTypes.SqlMoney.Value%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The actual value of the SqlMoney object is stored in &lt;xref:System.Data.SqlTypes.SqlMoney.Value%2A&gt;.","pos":[0,99],"source":"The actual value of the SqlMoney object is stored in <xref:System.Data.SqlTypes.SqlMoney.Value%2A>."}]},{"pos":[6504,6642],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Decimal&gt; value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with the specified <xref:System.Decimal> value."},{"pos":[6777,6810],"content":"The monetary value to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The monetary value to initialize.","pos":[0,33]}]},{"pos":[7268,7387],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with specified double value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with specified double value."},{"pos":[7520,7553],"content":"The monetary value to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The monetary value to initialize.","pos":[0,33]}]},{"pos":[8006,8130],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified integer value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with the specified integer value."},{"pos":[8259,8292],"content":"The monetary value to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The monetary value to initialize.","pos":[0,33]}]},{"pos":[8745,8874],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified long integer value.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with the specified long integer value."},{"pos":[9004,9037],"content":"The monetary value to initialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"The monetary value to initialize.","pos":[0,33]}]},{"pos":[9594,9686],"content":"Calculates the sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Calculates the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters."},{"pos":[9915,9978],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[10052,10115],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[10189,10395],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stucture whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the sum of the two <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> stucture whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters."},{"pos":[10893,11085],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the supplied <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> and returns an indication of their relative values."},{"pos":[11262,11332],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be compared.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> to be compared."},{"pos":[11390,12031],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic)","pos":[407,580],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       "}]},{"pos":[12498,12660],"content":"Compares this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> instance to the supplied &lt;xref:System.Object&gt; and returns an indication of their relative values.","needQuote":true,"needEscape":true,"source":"Compares this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> instance to the supplied <xref:System.Object> and returns an indication of their relative values."},{"pos":[12798,12838],"content":"The <xref:System.Object> to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Object&gt; to be compared.","pos":[0,40],"source":"The <xref:System.Object> to be compared."}]},{"pos":[12896,13537],"content":"A signed number that indicates the relative values of the instance and the object.       <table><thead><tr><th> Return value       </th><th> Condition       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than the object.       </td></tr><tr><td> Zero       </td><td> This instance is the same as the object.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       </td></tr></tbody></table>","needQuote":false,"needEscape":true,"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.       ","pos":[0,89],"nodes":[{"content":"A signed number that indicates the relative values of the instance and the object.","pos":[0,82]}]},{"content":"Return value","pos":[112,124]},{"content":"Condition","pos":[141,150]},{"content":"Less than zero","pos":[191,205]},{"content":" This instance is less than the object.       ","pos":[221,267],"nodes":[{"content":"This instance is less than the object.","pos":[1,39]}]},{"content":"Zero","pos":[286,290]},{"content":" This instance is the same as the object.       ","pos":[306,354],"nodes":[{"content":"This instance is the same as the object.","pos":[1,41]}]},{"content":"Greater than zero","pos":[373,390]},{"content":"This instance is greater than the object       -or-       The object is a null reference (<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in Visual Basic)","pos":[407,580],"source":" This instance is greater than the object       -or-       The object is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic)       "}]},{"pos":[14114,14229],"content":"The division operator divides the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter by the second.","needQuote":true,"needEscape":true,"source":"The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter by the second."},{"pos":[14461,14524],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[14598,14661],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[14735,14889],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the results of the division.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the results of the division."},{"pos":[15337,15501],"content":"Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; property of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> object."},{"pos":[15646,15672],"content":"The object to be compared.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object to be compared.","pos":[0,26]}]},{"pos":[15731,15990],"content":"Equals will return <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the object is an instance of <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and the two are equal; otherwise <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Equals will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is an instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[16563,16702],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are equal."},{"pos":[16936,16999],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[17073,17136],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[17212,17496],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> will be null.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the two values are equal.","pos":[0,89],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[90,164],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"content":"If either instance is null, then the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> will be null.","pos":[165,284],"source":" If either instance is null, then the <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> will be null."}]},{"pos":[17921,17958],"content":"Gets the hash code for this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the hash code for this instance.","pos":[0,37]}]},{"pos":[18093,18127],"content":"A 32-bit signed integer hash code.","needQuote":true,"needEscape":true,"nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]},{"pos":[18652,18770],"content":"Returns the XML Schema definition language (XSD) of the specified <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[18989,19044],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19116,19275],"content":"A <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that indicates the XSD of the specified <bpt id=\"p2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaSet\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>."},{"pos":[19877,20038],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than the second."},{"pos":[20277,20340],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[20414,20477],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[20553,21051],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[21689,21862],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than or equal to the second."},{"pos":[22108,22171],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[22245,22308],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[22384,22894],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,510],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[23302,23423],"content":"Returns a Boolean value that indicates whether this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure is null.","needQuote":true,"needEscape":true,"source":"Returns a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure is null."},{"pos":[23435,23523],"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","needQuote":true,"needEscape":true,"source":"For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."},{"pos":[23633,23777],"content":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if null.","pos":[0,69],"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[70,144],"source":" Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}]},{"pos":[24360,24518],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than the second."},{"pos":[24754,24817],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[24891,24954],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[25030,25525],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,495],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[26145,26315],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than or equal to the second."},{"pos":[26558,26621],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[26695,26758],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[26834,27341],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,507],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[27753,27942],"content":"Represents the maximum value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Represents the maximum value that can be assigned to the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class."},{"pos":[27954,28008],"content":"The value of this constant is 922,337,203,685,477.5807","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this constant is 922,337,203,685,477.5807","pos":[0,54]}]},{"pos":[28168,28180],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[28533,28718],"content":"Represents the minimum value that can be assigned to &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Represents the minimum value that can be assigned to <xref:System.Data.SqlTypes.SqlMoney.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class."},{"pos":[28730,28785],"content":"The value of this constant is -922,337,203,685,477.5808","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of this constant is -922,337,203,685,477.5808","pos":[0,55]}]},{"pos":[28945,28957],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29490,29613],"content":"The multiplicaion operator calculates the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"The multiplicaion operator calculates the product of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters."},{"pos":[29847,29910],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[29984,30047],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[30121,30281],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the product of the multiplication.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the product of the multiplication."},{"pos":[30871,31014],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are not equal."},{"pos":[31251,31314],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[31388,31451],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[31527,32024],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[32414,32564],"content":"Represents a <bpt id=\"p1\">&lt;xref href=\"System.DBNull\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that can be assigned to this instance of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class."},{"pos":[32576,32745],"content":"Null functions as a constant for the <xref:System.Data.SqlTypes.SqlMoney> class. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"Null functions as a constant for the &lt;xref:System.Data.SqlTypes.SqlMoney&gt; class.","pos":[0,80],"source":"Null functions as a constant for the <xref:System.Data.SqlTypes.SqlMoney> class."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling Null Values<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[81,169],"source":" For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[32901,32913],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33463,33555],"content":"Calculates the sum of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"Calculates the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters."},{"pos":[33792,33855],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[33929,33992],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[34066,34272],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> stucture whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the sum of the two <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> stucture whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters."},{"pos":[34877,34992],"content":"The division operator divides the first <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter by the second.","needQuote":true,"needEscape":true,"source":"The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter by the second."},{"pos":[35229,35292],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[35366,35429],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[35503,35657],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the results of the division.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the results of the division."},{"pos":[36262,36401],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether they are equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are equal."},{"pos":[36640,36703],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[36777,36840],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[36916,37413],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are not equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[38203,38215],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[38289,38301],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39091,39103],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39177,39189],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[39972,39984],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40058,40070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40794,40806],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[40865,40877],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41660,41672],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[41746,41758],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42541,42553],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[42627,42639],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43338,43350],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[43424,43436],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44056,44217],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than the second."},{"pos":[44459,44522],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[44596,44659],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[44735,45233],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than the second instance.","pos":[0,174],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[175,239],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[240,498],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[45891,46064],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is greater than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than or equal to the second."},{"pos":[46313,46376],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[46450,46513],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[46589,47099],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is greater than or equal to the second instance.","pos":[0,186],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[187,251],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[252,510],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[47812,47824],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[47898,47910],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48620,48632],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[48706,48718],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49428,49440],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[49514,49526],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50236,50248],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50322,50334],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[50974,50986],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51060,51072],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51697,51709],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[51783,51795],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[52410,52553],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether they are not equal.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are not equal."},{"pos":[52794,52857],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[52931,52994],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[53070,53567],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the two instances are not equal or <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if the two instances are equal.","pos":[0,238],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[239,497],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[54174,54332],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than the second."},{"pos":[54571,54634],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[54708,54771],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[54847,55342],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than the second instance.","pos":[0,171],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[172,236],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[237,495],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[55982,56152],"content":"Performs a logical comparison of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters to determine whether the first is less than or equal to the second.","needQuote":true,"needEscape":true,"source":"Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than or equal to the second."},{"pos":[56398,56461],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[56535,56598],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[56674,57181],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that is <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the first instance is less than or equal to the second instance.","pos":[0,183],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[184,248],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"content":"If either instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value*&gt; of the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[249,507],"source":" If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>."}]},{"pos":[57793,57916],"content":"The multiplicaion operator calculates the product of the two <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameters.","needQuote":true,"needEscape":true,"source":"The multiplicaion operator calculates the product of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters."},{"pos":[58153,58216],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[58290,58353],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[58427,58587],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the product of the multiplication.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the product of the multiplication."},{"pos":[59207,59329],"content":"The subtraction operator subtracts the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter from the first.","needQuote":true,"needEscape":true,"source":"The subtraction operator subtracts the second <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter from the first."},{"pos":[59569,59632],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[59706,59769],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[59843,59955],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the subtraction.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure that contains the results of the subtraction."},{"pos":[60501,60599],"content":"The unary minus operator negates the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter.","needQuote":true,"needEscape":true,"source":"The unary minus operator negates the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter."},{"pos":[60808,60887],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to be negated.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to be negated."},{"pos":[60961,61111],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; contains the results of the negation.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the results of the negation."},{"pos":[61564,61694],"content":"Converts the &lt;xref:System.String&gt; representation of a number to its <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equivalent.","needQuote":true,"needEscape":true,"source":"Converts the <xref:System.String> representation of a number to its <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> equivalent."},{"pos":[61853,61935],"content":"The <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be parsed.","needQuote":true,"needEscape":true,"source":"The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> to be parsed."},{"pos":[62009,62142],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equivalent to the value that is contained in the specified &lt;xref:System.String&gt;.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> equivalent to the value that is contained in the specified <xref:System.String>."},{"pos":[62724,62846],"content":"The subtraction operator subtracts the second <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> parameter from the first.","needQuote":true,"needEscape":true,"source":"The subtraction operator subtracts the second <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter from the first."},{"pos":[63080,63143],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[63217,63280],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[63354,63466],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure that contains the results of the subtraction.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure that contains the results of the subtraction."},{"pos":[64107,64217],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[64390,64464],"content":"An <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>."},{"pos":[65209,65319],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[66307,66417],"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.","pos":[0,110]}]},{"pos":[67117,67244],"content":"Converts the Value of this instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> as a &lt;xref:System.Decimal&gt; structure.","needQuote":true,"needEscape":true,"source":"Converts the Value of this instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> as a <xref:System.Decimal> structure."},{"pos":[67374,67553],"content":"A &lt;xref:System.Decimal&gt; structure whose value equals the &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; property of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A <xref:System.Decimal> structure whose value equals the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[67966,68067],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to a &lt;xref:System.Double&gt;.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to a <xref:System.Double>."},{"pos":[68194,68291],"content":"A double with a value equal to this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A double with a value equal to this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[68698,68799],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to an &lt;xref:System.Int32&gt;.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to an <xref:System.Int32>."},{"pos":[68921,69043],"content":"A 32-bit integer whose value equals the integer part of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A 32-bit integer whose value equals the integer part of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[69449,69563],"content":"Converts the Value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to an &lt;xref:System.Int64&gt;.","needQuote":true,"needEscape":true,"source":"Converts the Value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to an <xref:System.Int64>."},{"pos":[69686,69808],"content":"A 64-bit integer whose value equals the integer part of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"A 64-bit integer whose value equals the integer part of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[70239,70370],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>."},{"pos":[70544,70912],"content":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure. If the value of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure is zero, the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value will be <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref>. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,65],"source":"A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure."},{"content":"If the value of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure is zero, the <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> structure's value will be <bpt id=\"p3\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.False\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","pos":[66,298],"source":" If the value of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure is zero, the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value will be <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref>."},{"content":"Otherwise, <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlBoolean.True\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[299,368],"source":" Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>."}]},{"pos":[71333,71461],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>."},{"pos":[71626,71756],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlByte\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[72189,72320],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>."},{"pos":[72494,72631],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDecimal\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[73062,73192],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>."},{"pos":[73363,73499],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlDouble\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[73924,74053],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>."},{"pos":[74221,74356],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt16\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[74780,74909],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>."},{"pos":[75077,75212],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt32\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[75636,75765],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>."},{"pos":[75933,76068],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlInt64\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[76497,76627],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>."},{"pos":[76798,76934],"content":"A new <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlSingle\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> equal to the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[77364,77494],"content":"Converts this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure to <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>."},{"pos":[77665,77835],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlString\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure whose value is a string representing the value of this <bpt id=\"p2\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure whose value is a string representing the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[78250,78337],"content":"Converts this instance of <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to string.","needQuote":true,"needEscape":true,"source":"Converts this instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> to string."},{"pos":[78473,78595],"content":"A string whose value is the string representation of the value of this <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A string whose value is the string representation of the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>."},{"pos":[78988,79123],"content":"Gets the monetary value of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure. This property is read-only.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the monetary value of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","pos":[0,107],"source":"Gets the monetary value of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"content":"This property is read-only.","pos":[108,135]}]},{"pos":[79235,79337],"content":"The monetary value of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure.","needQuote":true,"needEscape":true,"source":"The monetary value of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure."},{"pos":[79531,79559],"content":"The property is set to null.","needQuote":true,"needEscape":true,"nodes":[{"content":"The property is set to null.","pos":[0,28]}]},{"pos":[79875,80061],"content":"Represents the zero value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlMoney.Value*&gt; property of an instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.SqlTypes.SqlMoney\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Represents the zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class."},{"pos":[80073,80153],"content":"Zero functions as a constant for the <xref:System.Data.SqlTypes.SqlMoney> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"Zero functions as a constant for the &lt;xref:System.Data.SqlTypes.SqlMoney&gt; class.","pos":[0,80],"source":"Zero functions as a constant for the <xref:System.Data.SqlTypes.SqlMoney> class."}]},{"pos":[80309,80321],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlTypes.SqlMoney\n  id: SqlMoney\n  children:\n  - System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)\n  - System.Data.SqlTypes.SqlMoney.#ctor(System.Double)\n  - System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)\n  - System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)\n  - System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.Equals(System.Object)\n  - System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.GetHashCode\n  - System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  - System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.IsNull\n  - System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.MaxValue\n  - System.Data.SqlTypes.SqlMoney.MinValue\n  - System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.Null\n  - System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)\n  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)\n  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)\n  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)\n  - System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.Parse(System.String)\n  - System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  - System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema\n  - System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  - System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  - System.Data.SqlTypes.SqlMoney.ToDecimal\n  - System.Data.SqlTypes.SqlMoney.ToDouble\n  - System.Data.SqlTypes.SqlMoney.ToInt32\n  - System.Data.SqlTypes.SqlMoney.ToInt64\n  - System.Data.SqlTypes.SqlMoney.ToSqlBoolean\n  - System.Data.SqlTypes.SqlMoney.ToSqlByte\n  - System.Data.SqlTypes.SqlMoney.ToSqlDecimal\n  - System.Data.SqlTypes.SqlMoney.ToSqlDouble\n  - System.Data.SqlTypes.SqlMoney.ToSqlInt16\n  - System.Data.SqlTypes.SqlMoney.ToSqlInt32\n  - System.Data.SqlTypes.SqlMoney.ToSqlInt64\n  - System.Data.SqlTypes.SqlMoney.ToSqlSingle\n  - System.Data.SqlTypes.SqlMoney.ToSqlString\n  - System.Data.SqlTypes.SqlMoney.ToString\n  - System.Data.SqlTypes.SqlMoney.Value\n  - System.Data.SqlTypes.SqlMoney.Zero\n  langs:\n  - csharp\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n  type: Struct\n  summary: Represents a currency value ranging from -2 <sup>63</sup> (or -922,337,203,685,477.5808) to 2 <sup>63</sup> -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.\n  remarks: The actual value of the SqlMoney object is stored in <xref:System.Data.SqlTypes.SqlMoney.Value%2A>.\n  syntax:\n    content: >-\n      [System.Xml.Serialization.XmlSchemaProvider(\"GetXsdType\")]\n\n      public struct SqlMoney : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable\n  inheritance:\n  - System.ValueType\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  - System.Xml.Serialization.IXmlSerializable\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)\n  id: '#ctor(System.Decimal)'\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: SqlMoney(Decimal)\n  nameWithType: SqlMoney.SqlMoney(Decimal)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Decimal)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with the specified <xref:System.Decimal> value.\n  syntax:\n    content: public SqlMoney (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The monetary value to initialize.\n  overload: System.Data.SqlTypes.SqlMoney.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: SqlMoney(Double)\n  nameWithType: SqlMoney.SqlMoney(Double)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Double)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with specified double value.\n  syntax:\n    content: public SqlMoney (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The monetary value to initialize.\n  overload: System.Data.SqlTypes.SqlMoney.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: SqlMoney(Int32)\n  nameWithType: SqlMoney.SqlMoney(Int32)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int32)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with the specified integer value.\n  syntax:\n    content: public SqlMoney (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The monetary value to initialize.\n  overload: System.Data.SqlTypes.SqlMoney.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: SqlMoney(Int64)\n  nameWithType: SqlMoney.SqlMoney(Int64)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int64)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class with the specified long integer value.\n  syntax:\n    content: public SqlMoney (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The monetary value to initialize.\n  overload: System.Data.SqlTypes.SqlMoney.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Add(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Add(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Add(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Calculates the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney Add (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> stucture whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters.\n  overload: System.Data.SqlTypes.SqlMoney.Add*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)\n  id: CompareTo(System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: CompareTo(SqlMoney)\n  nameWithType: SqlMoney.CompareTo(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (System.Data.SqlTypes.SqlMoney value);\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlMoney\n      description: The <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic)  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlMoney.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: SqlMoney.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> instance to the supplied <xref:System.Object> and returns an indication of their relative values.\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref:System.Object> to be compared.\n    return:\n      type: System.Int32\n      description: \"A signed number that indicates the relative values of the instance and the object.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than the object.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as the object.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than the object  \\n  \\n -or-  \\n  \\n The object is a null reference (<xref uid=\\\"langword_csharp_Nothing\\\" name=\\\"Nothing\\\" href=\\\"\\\"></xref> in Visual Basic)  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Data.SqlTypes.SqlMoney.CompareTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Divide(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Divide(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Divide(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney Divide (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the results of the division.\n  overload: System.Data.SqlTypes.SqlMoney.Divide*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SqlMoney.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlMoney.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Compares the supplied object parameter to the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> object.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to be compared.\n    return:\n      type: System.Boolean\n      description: Equals will return <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the object is an instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> and the two are equal; otherwise <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Equals(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Equals(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Equals(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the two values are equal. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. If either instance is null, then the <xref uid=\"langword_csharp_SqlMoney\" name=\"SqlMoney\" href=\"\"></xref> will be null.\n  overload: System.Data.SqlTypes.SqlMoney.Equals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SqlMoney.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlMoney.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Data.SqlTypes.SqlMoney.GetHashCode*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlMoney.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlMoney.GetXsdType(XmlSchemaSet)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns the XML Schema definition language (XSD) of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  syntax:\n    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);\n    parameters:\n    - id: schemaSet\n      type: System.Xml.Schema.XmlSchemaSet\n      description: An <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n    return:\n      type: System.Xml.XmlQualifiedName\n      description: A <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref> that indicates the XSD of the specified <xref href=\"System.Xml.Schema.XmlSchemaSet\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.GetXsdType*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: GreaterThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.GreaterThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.GreaterThan(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: SqlMoney.IsNull\n  fullName: System.Data.SqlTypes.SqlMoney.IsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Returns a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure is null.\n  remarks: For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if null. Otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.IsNull*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: LessThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.LessThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.LessThan(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: LessThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.MaxValue\n  id: MaxValue\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: SqlMoney.MaxValue\n  fullName: System.Data.SqlTypes.SqlMoney.MaxValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents the maximum value that can be assigned to the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class.\n  remarks: The value of this constant is 922,337,203,685,477.5807\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlMoney MaxValue;\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.MinValue\n  id: MinValue\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: SqlMoney.MinValue\n  fullName: System.Data.SqlTypes.SqlMoney.MinValue\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents the minimum value that can be assigned to <xref:System.Data.SqlTypes.SqlMoney.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class.\n  remarks: The value of this constant is -922,337,203,685,477.5808\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlMoney MinValue;\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Multiply(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Multiply(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Multiply(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The multiplicaion operator calculates the product of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney Multiply (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the product of the multiplication.\n  overload: System.Data.SqlTypes.SqlMoney.Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: NotEquals(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.NotEquals(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.NotEquals(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.NotEquals*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Null\n  id: \"Null\"\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: SqlMoney.Null\n  fullName: System.Data.SqlTypes.SqlMoney.Null\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents a <xref href=\"System.DBNull\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class.\n  remarks: Null functions as a constant for the <xref:System.Data.SqlTypes.SqlMoney> class. For more information, see [Handling Null Values](~/add/includes/ajax-current-ext-md.md).\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlMoney Null;\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Addition(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Addition(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Addition(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Calculates the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Addition (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> stucture whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the sum of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters.\n  overload: System.Data.SqlTypes.SqlMoney.op_Addition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Division(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Division(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Division(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The division operator divides the first <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter by the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Division (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the results of the division.\n  overload: System.Data.SqlTypes.SqlMoney.op_Division*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Equality(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Equality(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Equality(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.op_Equality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)\n  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlMoney.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlBoolean)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlBoolean x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)\n  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlMoney.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDecimal)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlDecimal x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)\n  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlMoney.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDouble)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlDouble x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)\n  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlMoney.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static decimal op_Explicit (System.Data.SqlTypes.SqlMoney x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n    return:\n      type: System.Decimal\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)\n  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlMoney.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlSingle)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlSingle x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlSingle\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)\n  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(SqlString)\n  nameWithType: SqlMoney.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlString)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlString x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)\n  id: op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Explicit(Double)\n  nameWithType: SqlMoney.op_Explicit(Double)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(Double)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (double x);\n    parameters:\n    - id: x\n      type: System.Double\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_GreaterThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.op_GreaterThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is greater than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)\n  id: op_Implicit(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Implicit(SqlByte)\n  nameWithType: SqlMoney.op_Implicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlByte)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlByte x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt16)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt16)\n  nameWithType: SqlMoney.op_Implicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt16)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlInt16 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt16\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt32)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt32)\n  nameWithType: SqlMoney.op_Implicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt32)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlInt32 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt32\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)\n  id: op_Implicit(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Implicit(SqlInt64)\n  nameWithType: SqlMoney.op_Implicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlInt64 x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)\n  id: op_Implicit(System.Decimal)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Implicit(Decimal)\n  nameWithType: SqlMoney.op_Implicit(Decimal)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Decimal)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (decimal x);\n    parameters:\n    - id: x\n      type: System.Decimal\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)\n  id: op_Implicit(System.Int64)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Implicit(Int64)\n  nameWithType: SqlMoney.op_Implicit(Int64)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Int64)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (long x);\n    parameters:\n    - id: x\n      type: System.Int64\n      description: To be added.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Inequality(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Inequality(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Inequality(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether they are not equal.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.op_Inequality*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_LessThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_LessThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_LessThan(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.op_LessThan*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters to determine whether the first is less than or equal to the second.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> is null, the <xref:System.Data.SqlTypes.SqlBoolean.Value*> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Multiply(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Multiply(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Multiply(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The multiplicaion operator calculates the product of the two <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameters.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Multiply (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the product of the multiplication.\n  overload: System.Data.SqlTypes.SqlMoney.op_Multiply*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_Subtraction(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Subtraction(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Subtraction(SqlMoney,SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The subtraction operator subtracts the second <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_Subtraction (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure that contains the results of the subtraction.\n  overload: System.Data.SqlTypes.SqlMoney.op_Subtraction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)\n  id: op_UnaryNegation(System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: op_UnaryNegation(SqlMoney)\n  nameWithType: SqlMoney.op_UnaryNegation(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(SqlMoney)\n  type: Operator\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The unary minus operator negates the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney op_UnaryNegation (System.Data.SqlTypes.SqlMoney x);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: The <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to be negated.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure whose <xref:System.Data.SqlTypes.SqlMoney.Value*> contains the results of the negation.\n  overload: System.Data.SqlTypes.SqlMoney.op_UnaryNegation*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: SqlMoney.Parse(String)\n  fullName: System.Data.SqlTypes.SqlMoney.Parse(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the <xref:System.String> representation of a number to its <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> equivalent.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref> to be parsed.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> equivalent to the value that is contained in the specified <xref:System.String>.\n  overload: System.Data.SqlTypes.SqlMoney.Parse*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  id: Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Subtract(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Subtract(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Subtract(SqlMoney,SqlMoney)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: The subtraction operator subtracts the second <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> parameter from the first.\n  syntax:\n    content: public static System.Data.SqlTypes.SqlMoney Subtract (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    - id: y\n      type: System.Data.SqlTypes.SqlMoney\n      description: A <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: A new <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure that contains the results of the subtraction.\n  overload: System.Data.SqlTypes.SqlMoney.Subtract*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema\n  id: System#Xml#Serialization#IXmlSerializable#GetSchema\n  isEii: true\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();\n    parameters: []\n    return:\n      type: System.Xml.Schema.XmlSchema\n      description: An <xref uid=\"langword_csharp_XmlSchema\" name=\"XmlSchema\" href=\"\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: <xref uid=\"langword_csharp_XmlReader\" name=\"XmlReader\" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  isEii: true\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: <xref uid=\"langword_csharp_XmlWriter\" name=\"XmlWriter\" href=\"\"></xref>\n  overload: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToDecimal\n  id: ToDecimal\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToDecimal()\n  nameWithType: SqlMoney.ToDecimal()\n  fullName: System.Data.SqlTypes.SqlMoney.ToDecimal()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the Value of this instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> as a <xref:System.Decimal> structure.\n  syntax:\n    content: public decimal ToDecimal ();\n    parameters: []\n    return:\n      type: System.Decimal\n      description: A <xref:System.Decimal> structure whose value equals the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlMoney.ToDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToDouble\n  id: ToDouble\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToDouble()\n  nameWithType: SqlMoney.ToDouble()\n  fullName: System.Data.SqlTypes.SqlMoney.ToDouble()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to a <xref:System.Double>.\n  syntax:\n    content: public double ToDouble ();\n    parameters: []\n    return:\n      type: System.Double\n      description: A double with a value equal to this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlMoney.ToDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToInt32\n  id: ToInt32\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToInt32()\n  nameWithType: SqlMoney.ToInt32()\n  fullName: System.Data.SqlTypes.SqlMoney.ToInt32()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to an <xref:System.Int32>.\n  syntax:\n    content: public int ToInt32 ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit integer whose value equals the integer part of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlMoney.ToInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToInt64\n  id: ToInt64\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToInt64()\n  nameWithType: SqlMoney.ToInt64()\n  fullName: System.Data.SqlTypes.SqlMoney.ToInt64()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts the Value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to an <xref:System.Int64>.\n  syntax:\n    content: public long ToInt64 ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: A 64-bit integer whose value equals the integer part of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlMoney.ToInt64*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlBoolean\n  id: ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlBoolean()\n  nameWithType: SqlMoney.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlBoolean()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: A <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure. If the value of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure is zero, the <xref href=\"System.Data.SqlTypes.SqlBoolean\"></xref> structure's value will be <xref href=\"System.Data.SqlTypes.SqlBoolean.False\"></xref>. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.True\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlBoolean*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlByte\n  id: ToSqlByte\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlByte()\n  nameWithType: SqlMoney.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlByte()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: A <xref href=\"System.Data.SqlTypes.SqlByte\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlByte*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlDecimal\n  id: ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlDecimal()\n  nameWithType: SqlMoney.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDecimal()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: A new <xref href=\"System.Data.SqlTypes.SqlDecimal\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlDecimal*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlDouble\n  id: ToSqlDouble\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlDouble()\n  nameWithType: SqlMoney.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDouble()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: A new <xref href=\"System.Data.SqlTypes.SqlDouble\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlDouble*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt16\n  id: ToSqlInt16\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlInt16()\n  nameWithType: SqlMoney.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt16()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt16\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlInt16*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt32\n  id: ToSqlInt32\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlInt32()\n  nameWithType: SqlMoney.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt32()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt32\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlInt32*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt64\n  id: ToSqlInt64\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlInt64()\n  nameWithType: SqlMoney.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt64()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: A new <xref href=\"System.Data.SqlTypes.SqlInt64\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlInt64*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlSingle\n  id: ToSqlSingle\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlSingle()\n  nameWithType: SqlMoney.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlSingle()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: A new <xref href=\"System.Data.SqlTypes.SqlSingle\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlSingle*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToSqlString()\n  nameWithType: SqlMoney.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\"></xref>.\n  syntax:\n    content: public System.Data.SqlTypes.SqlString ToSqlString ();\n    parameters: []\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: A <xref href=\"System.Data.SqlTypes.SqlString\"></xref> structure whose value is a string representing the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToSqlString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlMoney.ToString()\n  fullName: System.Data.SqlTypes.SqlMoney.ToString()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Converts this instance of <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> to string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string whose value is the string representation of the value of this <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref>.\n  overload: System.Data.SqlTypes.SqlMoney.ToString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Value\n  nameWithType: SqlMoney.Value\n  fullName: System.Data.SqlTypes.SqlMoney.Value\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Gets the monetary value of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure. This property is read-only.\n  syntax:\n    content: public decimal Value { get; }\n    return:\n      type: System.Decimal\n      description: The monetary value of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> structure.\n  overload: System.Data.SqlTypes.SqlMoney.Value*\n  exceptions:\n  - type: System.Data.SqlTypes.SqlNullValueException\n    commentId: T:System.Data.SqlTypes.SqlNullValueException\n    description: The property is set to null.\n  platform:\n  - net462\n- uid: System.Data.SqlTypes.SqlMoney.Zero\n  id: Zero\n  parent: System.Data.SqlTypes.SqlMoney\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: SqlMoney.Zero\n  fullName: System.Data.SqlTypes.SqlMoney.Zero\n  type: Field\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlTypes\n  summary: Represents the zero value that can be assigned to the <xref:System.Data.SqlTypes.SqlMoney.Value*> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlMoney\"></xref> class.\n  remarks: Zero functions as a constant for the <xref:System.Data.SqlTypes.SqlMoney> class.\n  syntax:\n    content: public static readonly System.Data.SqlTypes.SqlMoney Zero;\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.SqlTypes.SqlNullValueException\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlNullValueException\n  nameWithType: SqlNullValueException\n  fullName: System.Data.SqlTypes.SqlNullValueException\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: SqlMoney(Decimal)\n  nameWithType: SqlMoney.SqlMoney(Decimal)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: true\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Double)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: SqlMoney(Double)\n  nameWithType: SqlMoney.SqlMoney(Double)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Double)\n- uid: System.Double\n  parent: System\n  isExternal: true\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: SqlMoney(Int32)\n  nameWithType: SqlMoney.SqlMoney(Int32)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: SqlMoney(Int64)\n  nameWithType: SqlMoney.SqlMoney(Int64)\n  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: true\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Add(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Add(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Add(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: CompareTo(SqlMoney)\n  nameWithType: SqlMoney.CompareTo(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: SqlMoney.CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Divide(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Divide(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Divide(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SqlMoney.Equals(Object)\n  fullName: System.Data.SqlTypes.SqlMoney.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Equals(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Equals(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Equals(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  nameWithType: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n- uid: System.Data.SqlTypes.SqlMoney.GetHashCode\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SqlMoney.GetHashCode()\n  fullName: System.Data.SqlTypes.SqlMoney.GetHashCode()\n- uid: System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GetXsdType(XmlSchemaSet)\n  nameWithType: SqlMoney.GetXsdType(XmlSchemaSet)\n  fullName: System.Data.SqlTypes.SqlMoney.GetXsdType(XmlSchemaSet)\n- uid: System.Xml.XmlQualifiedName\n  parent: System.Xml\n  isExternal: true\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Xml.Schema.XmlSchemaSet\n  parent: System.Xml.Schema\n  isExternal: false\n  name: XmlSchemaSet\n  nameWithType: XmlSchemaSet\n  fullName: System.Xml.Schema.XmlSchemaSet\n- uid: System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GreaterThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.GreaterThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.GreaterThan(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GreaterThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.IsNull\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlMoney.IsNull\n  fullName: System.Data.SqlTypes.SqlMoney.IsNull\n- uid: System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: LessThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.LessThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.LessThan(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: LessThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.MaxValue\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: MaxValue\n  nameWithType: SqlMoney.MaxValue\n  fullName: System.Data.SqlTypes.SqlMoney.MaxValue\n- uid: System.Data.SqlTypes.SqlMoney.MinValue\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: MinValue\n  nameWithType: SqlMoney.MinValue\n  fullName: System.Data.SqlTypes.SqlMoney.MinValue\n- uid: System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Multiply(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Multiply(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Multiply(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: NotEquals(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.NotEquals(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.NotEquals(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.Null\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: \"Null\"\n  nameWithType: SqlMoney.Null\n  fullName: System.Data.SqlTypes.SqlMoney.Null\n- uid: System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Addition(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Addition(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Addition(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Division(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Division(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Division(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Equality(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Equality(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Equality(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(SqlBoolean)\n  nameWithType: SqlMoney.op_Explicit(SqlBoolean)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlBoolean)\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(SqlDecimal)\n  nameWithType: SqlMoney.op_Explicit(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  nameWithType: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(SqlDouble)\n  nameWithType: SqlMoney.op_Explicit(SqlDouble)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDouble)\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  nameWithType: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(SqlMoney)\n  nameWithType: SqlMoney.op_Explicit(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(SqlSingle)\n  nameWithType: SqlMoney.op_Explicit(SqlSingle)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlSingle)\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  nameWithType: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(SqlString)\n  nameWithType: SqlMoney.op_Explicit(SqlString)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlString)\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  nameWithType: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit(Double)\n  nameWithType: SqlMoney.op_Explicit(Double)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(Double)\n- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_GreaterThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_GreaterThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit(SqlByte)\n  nameWithType: SqlMoney.op_Implicit(SqlByte)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlByte)\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  nameWithType: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit(SqlInt16)\n  nameWithType: SqlMoney.op_Implicit(SqlInt16)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt16)\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  nameWithType: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit(SqlInt32)\n  nameWithType: SqlMoney.op_Implicit(SqlInt32)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt32)\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  nameWithType: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit(SqlInt64)\n  nameWithType: SqlMoney.op_Implicit(SqlInt64)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt64)\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  nameWithType: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit(Decimal)\n  nameWithType: SqlMoney.op_Implicit(Decimal)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Decimal)\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit(Int64)\n  nameWithType: SqlMoney.op_Implicit(Int64)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Int64)\n- uid: System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Inequality(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Inequality(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Inequality(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_LessThan(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_LessThan(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_LessThan(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_LessThanOrEqual(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Multiply(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Multiply(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Multiply(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Subtraction(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.op_Subtraction(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_Subtraction(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_UnaryNegation(SqlMoney)\n  nameWithType: SqlMoney.op_UnaryNegation(SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.Parse(System.String)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Parse(String)\n  nameWithType: SqlMoney.Parse(String)\n  fullName: System.Data.SqlTypes.SqlMoney.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Subtract(SqlMoney,SqlMoney)\n  nameWithType: SqlMoney.Subtract(SqlMoney,SqlMoney)\n  fullName: System.Data.SqlTypes.SqlMoney.Subtract(SqlMoney,SqlMoney)\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema()\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()\n  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()\n- uid: System.Xml.Schema.XmlSchema\n  parent: System.Xml.Schema\n  isExternal: true\n  name: XmlSchema\n  nameWithType: XmlSchema\n  fullName: System.Xml.Schema.XmlSchema\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: true\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: true\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.Data.SqlTypes.SqlMoney.ToDecimal\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToDecimal()\n  nameWithType: SqlMoney.ToDecimal()\n  fullName: System.Data.SqlTypes.SqlMoney.ToDecimal()\n- uid: System.Data.SqlTypes.SqlMoney.ToDouble\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToDouble()\n  nameWithType: SqlMoney.ToDouble()\n  fullName: System.Data.SqlTypes.SqlMoney.ToDouble()\n- uid: System.Data.SqlTypes.SqlMoney.ToInt32\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToInt32()\n  nameWithType: SqlMoney.ToInt32()\n  fullName: System.Data.SqlTypes.SqlMoney.ToInt32()\n- uid: System.Data.SqlTypes.SqlMoney.ToInt64\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToInt64()\n  nameWithType: SqlMoney.ToInt64()\n  fullName: System.Data.SqlTypes.SqlMoney.ToInt64()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlBoolean()\n  nameWithType: SqlMoney.ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlBoolean()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlByte\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlByte()\n  nameWithType: SqlMoney.ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlByte()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlDecimal\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlDecimal()\n  nameWithType: SqlMoney.ToSqlDecimal()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDecimal()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlDouble\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlDouble()\n  nameWithType: SqlMoney.ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDouble()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt16\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlInt16()\n  nameWithType: SqlMoney.ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt16()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt32\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlInt32()\n  nameWithType: SqlMoney.ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt32()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt64\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlInt64()\n  nameWithType: SqlMoney.ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt64()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlSingle\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlSingle()\n  nameWithType: SqlMoney.ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlSingle()\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlString\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlString()\n  nameWithType: SqlMoney.ToSqlString()\n  fullName: System.Data.SqlTypes.SqlMoney.ToSqlString()\n- uid: System.Data.SqlTypes.SqlMoney.ToString\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlMoney.ToString()\n  fullName: System.Data.SqlTypes.SqlMoney.ToString()\n- uid: System.Data.SqlTypes.SqlMoney.Value\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Value\n  nameWithType: SqlMoney.Value\n  fullName: System.Data.SqlTypes.SqlMoney.Value\n- uid: System.Data.SqlTypes.SqlMoney.Zero\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Zero\n  nameWithType: SqlMoney.Zero\n  fullName: System.Data.SqlTypes.SqlMoney.Zero\n- uid: System.Data.SqlTypes.SqlMoney.#ctor*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: SqlMoney\n  nameWithType: SqlMoney.SqlMoney\n- uid: System.Data.SqlTypes.SqlMoney.Add*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Add\n  nameWithType: SqlMoney.Add\n- uid: System.Data.SqlTypes.SqlMoney.CompareTo*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: CompareTo\n  nameWithType: SqlMoney.CompareTo\n- uid: System.Data.SqlTypes.SqlMoney.Divide*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Divide\n  nameWithType: SqlMoney.Divide\n- uid: System.Data.SqlTypes.SqlMoney.Equals*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Equals\n  nameWithType: SqlMoney.Equals\n- uid: System.Data.SqlTypes.SqlMoney.GetHashCode*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SqlMoney.GetHashCode\n- uid: System.Data.SqlTypes.SqlMoney.GetXsdType*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GetXsdType\n  nameWithType: SqlMoney.GetXsdType\n- uid: System.Data.SqlTypes.SqlMoney.GreaterThan*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GreaterThan\n  nameWithType: SqlMoney.GreaterThan\n- uid: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: SqlMoney.GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlMoney.IsNull*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: IsNull\n  nameWithType: SqlMoney.IsNull\n- uid: System.Data.SqlTypes.SqlMoney.LessThan*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: LessThan\n  nameWithType: SqlMoney.LessThan\n- uid: System.Data.SqlTypes.SqlMoney.LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: SqlMoney.LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlMoney.Multiply*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Multiply\n  nameWithType: SqlMoney.Multiply\n- uid: System.Data.SqlTypes.SqlMoney.NotEquals*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: NotEquals\n  nameWithType: SqlMoney.NotEquals\n- uid: System.Data.SqlTypes.SqlMoney.op_Addition*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Addition\n  nameWithType: SqlMoney.op_Addition\n- uid: System.Data.SqlTypes.SqlMoney.op_Division*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Division\n  nameWithType: SqlMoney.op_Division\n- uid: System.Data.SqlTypes.SqlMoney.op_Equality*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Equality\n  nameWithType: SqlMoney.op_Equality\n- uid: System.Data.SqlTypes.SqlMoney.op_Explicit*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Explicit\n  nameWithType: SqlMoney.op_Explicit\n- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThan*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: SqlMoney.op_GreaterThan\n- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: SqlMoney.op_GreaterThanOrEqual\n- uid: System.Data.SqlTypes.SqlMoney.op_Implicit*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Implicit\n  nameWithType: SqlMoney.op_Implicit\n- uid: System.Data.SqlTypes.SqlMoney.op_Inequality*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SqlMoney.op_Inequality\n- uid: System.Data.SqlTypes.SqlMoney.op_LessThan*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_LessThan\n  nameWithType: SqlMoney.op_LessThan\n- uid: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: SqlMoney.op_LessThanOrEqual\n- uid: System.Data.SqlTypes.SqlMoney.op_Multiply*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Multiply\n  nameWithType: SqlMoney.op_Multiply\n- uid: System.Data.SqlTypes.SqlMoney.op_Subtraction*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: SqlMoney.op_Subtraction\n- uid: System.Data.SqlTypes.SqlMoney.op_UnaryNegation*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: SqlMoney.op_UnaryNegation\n- uid: System.Data.SqlTypes.SqlMoney.Parse*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Parse\n  nameWithType: SqlMoney.Parse\n- uid: System.Data.SqlTypes.SqlMoney.Subtract*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Subtract\n  nameWithType: SqlMoney.Subtract\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.GetSchema\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.ReadXml\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml\n- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: System.Xml.Serialization.IXmlSerializable.WriteXml\n  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml\n- uid: System.Data.SqlTypes.SqlMoney.ToDecimal*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToDecimal\n  nameWithType: SqlMoney.ToDecimal\n- uid: System.Data.SqlTypes.SqlMoney.ToDouble*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToDouble\n  nameWithType: SqlMoney.ToDouble\n- uid: System.Data.SqlTypes.SqlMoney.ToInt32*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToInt32\n  nameWithType: SqlMoney.ToInt32\n- uid: System.Data.SqlTypes.SqlMoney.ToInt64*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToInt64\n  nameWithType: SqlMoney.ToInt64\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlBoolean*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlBoolean\n  nameWithType: SqlMoney.ToSqlBoolean\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlByte*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlByte\n  nameWithType: SqlMoney.ToSqlByte\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlDecimal*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlDecimal\n  nameWithType: SqlMoney.ToSqlDecimal\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlDouble*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlDouble\n  nameWithType: SqlMoney.ToSqlDouble\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt16*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlInt16\n  nameWithType: SqlMoney.ToSqlInt16\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt32*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlInt32\n  nameWithType: SqlMoney.ToSqlInt32\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt64*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlInt64\n  nameWithType: SqlMoney.ToSqlInt64\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlSingle*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlSingle\n  nameWithType: SqlMoney.ToSqlSingle\n- uid: System.Data.SqlTypes.SqlMoney.ToSqlString*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToSqlString\n  nameWithType: SqlMoney.ToSqlString\n- uid: System.Data.SqlTypes.SqlMoney.ToString*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: ToString\n  nameWithType: SqlMoney.ToString\n- uid: System.Data.SqlTypes.SqlMoney.Value*\n  parent: System.Data.SqlTypes.SqlMoney\n  isExternal: false\n  name: Value\n  nameWithType: SqlMoney.Value\n"}