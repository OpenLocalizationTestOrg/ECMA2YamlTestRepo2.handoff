{"nodes":[{"pos":[811,920],"content":"Provides a stack object that can be used by a serializer to make information available to nested serializers.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides a stack object that can be used by a serializer to make information available to nested serializers.","pos":[0,109]}]},{"pos":[933,2911],"content":"Some serializers require information about the context of an object to correctly persist their state. The ContextStack class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it. The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.       A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object. A serializer can set a context object to the stack before invoking a nested serializer. Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.       Typically, the objects on the stack contain information about the context of the current object that is being serialized. A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack. It is up to the implementation of each serializer to determine what objects get pushed on this stack.       As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>. If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing. The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value. To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.","needQuote":false,"needEscape":true,"nodes":[{"content":"Some serializers require information about the context of an object to correctly persist their state.","pos":[0,101]},{"content":"The ContextStack class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.","pos":[102,264]},{"content":"The value of the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt; property is provided by an &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; to share information of use to some serializers.","pos":[265,528],"source":" The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers."},{"content":"A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.","pos":[535,750]},{"content":"A serializer can set a context object to the stack before invoking a nested serializer.","pos":[751,838]},{"content":"Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.","pos":[839,960]},{"content":"Typically, the objects on the stack contain information about the context of the current object that is being serialized.","pos":[967,1088]},{"content":"A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.","pos":[1089,1325]},{"content":"It is up to the implementation of each serializer to determine what objects get pushed on this stack.","pos":[1326,1427]},{"content":"As an example, an object with a property named <ph id=\"ph1\">`Enabled`</ph> has a data type of &lt;xref:System.Boolean&gt;.","pos":[1434,1532],"source":"       As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>."},{"content":"If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.","pos":[1533,1656]},{"content":"The serializer does not have this information, however, because it is only instructed to write the &lt;xref:System.Boolean&gt; value.","pos":[1657,1784],"source":" The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value."},{"content":"To provide this information to the serializer, the parent serializer can push a &lt;xref:System.ComponentModel.PropertyDescriptor&gt; that points to the <ph id=\"ph1\">`Enabled`</ph> property on the context stack.","pos":[1785,1972],"source":" To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack."}]},{"pos":[3904,4021],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"></xref> class."},{"pos":[5106,5198],"content":"Appends an object to the end of the stack, rather than pushing it onto the top of the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Appends an object to the end of the stack, rather than pushing it onto the top of the stack.","pos":[0,92]}]},{"pos":[5210,5468],"content":"This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order. There is no way to remove an object that was appended to the end of the stack without removing all other objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order. There is no way to remove an object that was appended to the end of the stack without removing all other objects.","pos":[0,258],"nodes":[{"content":"This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.","pos":[0,144]},{"content":"There is no way to remove an object that was appended to the end of the stack without removing all other objects.","pos":[145,258]}]}]},{"pos":[5608,5648],"content":"A context object to append to the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"A context object to append to the stack.","pos":[0,40]}]},{"pos":[5841,5926],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[6359,6396],"content":"Gets the current object on the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current object on the stack.","pos":[0,37]}]},{"pos":[6408,6504],"content":"The current object is the object at the top of the stack, or the object last added to the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The current object is the object at the top of the stack, or the object last added to the stack.","pos":[0,96]}]},{"pos":[6616,6739],"content":"The current object on the stack, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no objects were pushed.","needQuote":true,"needEscape":true,"source":"The current object on the stack, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no objects were pushed."},{"pos":[7300,7352],"content":"Gets the object on the stack at the specified level.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the object on the stack at the specified level.","pos":[0,52]}]},{"pos":[7491,7776],"content":"The level of the object to retrieve on the stack. Level 0 is the top of the stack, level 1 is the next down, and so on. This level must be 0 or greater. If level is greater than the number of levels on the stack, it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The level of the object to retrieve on the stack.","pos":[0,49]},{"content":"Level 0 is the top of the stack, level 1 is the next down, and so on.","pos":[50,119]},{"content":"This level must be 0 or greater.","pos":[120,152]},{"content":"If level is greater than the number of levels on the stack, it returns <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[153,285],"source":" If level is greater than the number of levels on the stack, it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}]},{"pos":[7834,7980],"content":"The object on the stack at the specified level, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no object exists at that level.","needQuote":true,"needEscape":true,"source":"The object on the stack at the specified level, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object exists at that level."},{"pos":[8183,8217],"content":"<ph id=\"ph1\">&lt;code&gt;level&lt;/code&gt;</ph> is less than 0.","needQuote":true,"needEscape":true,"source":"<code>level</code> is less than 0."},{"pos":[8679,8766],"content":"Gets the first object on the stack that inherits from or implements the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the first object on the stack that inherits from or implements the specified type.","pos":[0,87]}]},{"pos":[8778,8918],"content":"A check is made on each level of the stack, searching for an object that implements or inherits `type`. If a match is found, it is returned.","needQuote":true,"needEscape":true,"nodes":[{"content":"A check is made on each level of the stack, searching for an object that implements or inherits <ph id=\"ph1\">`type`</ph>.","pos":[0,103],"source":"A check is made on each level of the stack, searching for an object that implements or inherits `type`."},{"content":"If a match is found, it is returned.","pos":[104,140]}]},{"pos":[9055,9097],"content":"A type to retrieve from the context stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"A type to retrieve from the context stack.","pos":[0,42]}]},{"pos":[9155,9348],"content":"The first object on the stack that inherits from or implements the specified type, or <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no object on the stack implements the type.","needQuote":true,"needEscape":true,"source":"The first object on the stack that inherits from or implements the specified type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object on the stack implements the type."},{"pos":[9539,9621],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[10038,10103],"content":"Removes the current object off of the stack, returning its value.","needQuote":true,"needEscape":true,"nodes":[{"content":"Removes the current object off of the stack, returning its value.","pos":[0,65]}]},{"pos":[10676,10803],"content":"The object removed from the stack; <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if no objects are on the stack.","needQuote":true,"needEscape":true,"source":"The object removed from the stack; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no objects are on the stack."},{"pos":[11363,11418],"content":"Pushes, or places, the specified object onto the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"Pushes, or places, the specified object onto the stack.","pos":[0,55]}]},{"pos":[12006,12048],"content":"The context object to push onto the stack.","needQuote":true,"needEscape":true,"nodes":[{"content":"The context object to push onto the stack.","pos":[0,42]}]},{"pos":[12239,12324],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Serialization.ContextStack\n  id: ContextStack\n  children:\n  - System.ComponentModel.Design.Serialization.ContextStack.#ctor\n  - System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)\n  - System.ComponentModel.Design.Serialization.ContextStack.Current\n  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)\n  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)\n  - System.ComponentModel.Design.Serialization.ContextStack.Pop\n  - System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)\n  langs:\n  - csharp\n  name: ContextStack\n  nameWithType: ContextStack\n  fullName: System.ComponentModel.Design.Serialization.ContextStack\n  type: Class\n  summary: Provides a stack object that can be used by a serializer to make information available to nested serializers.\n  remarks: \"Some serializers require information about the context of an object to correctly persist their state. The ContextStack class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it. The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.  \\n  \\n A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object. A serializer can set a context object to the stack before invoking a nested serializer. Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.  \\n  \\n Typically, the objects on the stack contain information about the context of the current object that is being serialized. A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack. It is up to the implementation of each serializer to determine what objects get pushed on this stack.  \\n  \\n As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>. If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing. The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value. To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.\"\n  example:\n  - \"The following code example demonstrates using a ContextStack to push and then remove 10 values.  \\n  \\n [!code-cpp[ContextStackExample#1](~/add/codesnippet/cpp/t-system.componentmodel._11_1.cpp)]\\n [!code-vb[ContextStackExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._11_1.vb)]\\n [!code-cs[ContextStackExample#1](~/add/codesnippet/csharp/t-system.componentmodel._11_1.cs)]\"\n  syntax:\n    content: public sealed class ContextStack\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: ContextStack()\n  nameWithType: ContextStack.ContextStack()\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.  \\n  \\n [!code-cpp[ContextStackExample#2](~/add/codesnippet/cpp/m-system.componentmodel._1_1.cpp)]\\n [!code-vb[ContextStackExample#2](~/add/codesnippet/visualbasic/m-system.componentmodel._1_1.vb)]\\n [!code-cs[ContextStackExample#2](~/add/codesnippet/csharp/m-system.componentmodel._1_1.cs)]\"\n  syntax:\n    content: public ContextStack ();\n    parameters: []\n  overload: System.ComponentModel.Design.Serialization.ContextStack.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)\n  id: Append(System.Object)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: Append(Object)\n  nameWithType: ContextStack.Append(Object)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Appends an object to the end of the stack, rather than pushing it onto the top of the stack.\n  remarks: This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order. There is no way to remove an object that was appended to the end of the stack without removing all other objects.\n  syntax:\n    content: public void Append (object context);\n    parameters:\n    - id: context\n      type: System.Object\n      description: A context object to append to the stack.\n  overload: System.ComponentModel.Design.Serialization.ContextStack.Append*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Current\n  id: Current\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: Current\n  nameWithType: ContextStack.Current\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the current object on the stack.\n  remarks: The current object is the object at the top of the stack, or the object last added to the stack.\n  syntax:\n    content: public object Current { get; }\n    return:\n      type: System.Object\n      description: The current object on the stack, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no objects were pushed.\n  overload: System.ComponentModel.Design.Serialization.ContextStack.Current*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ContextStack.Item(Int32)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the object on the stack at the specified level.\n  syntax:\n    content: public object this[int level] { get; }\n    parameters:\n    - id: level\n      type: System.Int32\n      description: The level of the object to retrieve on the stack. Level 0 is the top of the stack, level 1 is the next down, and so on. This level must be 0 or greater. If level is greater than the number of levels on the stack, it returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n    return:\n      type: System.Object\n      description: The object on the stack at the specified level, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object exists at that level.\n  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>level</code> is less than 0.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)\n  id: Item(System.Type)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: Item(Type)\n  nameWithType: ContextStack.Item(Type)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)\n  type: Property\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the first object on the stack that inherits from or implements the specified type.\n  remarks: A check is made on each level of the stack, searching for an object that implements or inherits `type`. If a match is found, it is returned.\n  syntax:\n    content: public object this[Type type] { get; }\n    parameters:\n    - id: type\n      type: System.Type\n      description: A type to retrieve from the context stack.\n    return:\n      type: System.Object\n      description: The first object on the stack that inherits from or implements the specified type, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no object on the stack implements the type.\n  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop\n  id: Pop\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: Pop()\n  nameWithType: ContextStack.Pop()\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Removes the current object off of the stack, returning its value.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \\n  \\n [!code-cpp[ContextStackExample#4](~/add/codesnippet/cpp/m-system.componentmodel._2_1.cpp)]\\n [!code-vb[ContextStackExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._2_1.vb)]\\n [!code-cs[ContextStackExample#4](~/add/codesnippet/csharp/m-system.componentmodel._2_1.cs)]\"\n  syntax:\n    content: public object Pop ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The object removed from the stack; <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no objects are on the stack.\n  overload: System.ComponentModel.Design.Serialization.ContextStack.Pop*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)\n  id: Push(System.Object)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  langs:\n  - csharp\n  name: Push(Object)\n  nameWithType: ContextStack.Push(Object)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Pushes, or places, the specified object onto the stack.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \\n  \\n [!code-cpp[ContextStackExample#3](~/add/codesnippet/cpp/m-system.componentmodel._20_1.cpp)]\\n [!code-vb[ContextStackExample#3](~/add/codesnippet/visualbasic/m-system.componentmodel._20_1.vb)]\\n [!code-cs[ContextStackExample#3](~/add/codesnippet/csharp/m-system.componentmodel._20_1.cs)]\"\n  syntax:\n    content: public void Push (object context);\n    parameters:\n    - id: context\n      type: System.Object\n      description: The context object to push onto the stack.\n  overload: System.ComponentModel.Design.Serialization.ContextStack.Push*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: true\n  name: System.ArgumentOutOfRangeException\n- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: ContextStack()\n  nameWithType: ContextStack.ContextStack()\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Append(Object)\n  nameWithType: ContextStack.Append(Object)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Current\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Current\n  nameWithType: ContextStack.Current\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ContextStack.Item(Int32)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Item(Type)\n  nameWithType: ContextStack.Item(Type)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Pop()\n  nameWithType: ContextStack.Pop()\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Push(Object)\n  nameWithType: ContextStack.Push(Object)\n  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)\n- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor*\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: ContextStack\n  nameWithType: ContextStack.ContextStack\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Append*\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Append\n  nameWithType: ContextStack.Append\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Current*\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Current\n  nameWithType: ContextStack.Current\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Item*\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Item\n  nameWithType: ContextStack.Item\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop*\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Pop\n  nameWithType: ContextStack.Pop\n- uid: System.ComponentModel.Design.Serialization.ContextStack.Push*\n  parent: System.ComponentModel.Design.Serialization.ContextStack\n  isExternal: false\n  name: Push\n  nameWithType: ContextStack.Push\n"}