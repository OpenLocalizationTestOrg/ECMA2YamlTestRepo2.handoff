{"nodes":[{"pos":[1654,1773],"content":"Represents a rich editing control which operates on <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Represents a rich editing control which operates on <xref href=\"System.Windows.Documents.FlowDocument\"></xref> objects."},{"pos":[1786,5600],"content":"<xref:System.Windows.Documents.FlowDocument> is the only supported child element for a RichTextBox.      > [!IMPORTANT] >  RichTextBox has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.  Consequently, custom event handlers that listen for `MouseUp` or `MouseDown` events from a RichTextBox will never be called.  If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code). Do not mark the event handled unless you deliberately want to disable RichTextBox native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].       While RichTextBox supports copying and pasting of images, certain scenarios are currently unsupported and may not work properly.  The following table summarizes these scenarios and expected results.      |Image Copy Source|Image Paste Result|   |-----------------------|------------------------|   |Image source is a graphic metafile|No image is pasted|   |Image source uses relative path or link|Garbled or blank image is pasted|   |Image source link does not end with an expected image format (.PNG, .JPG, .GIF)|Garbled or blank image is pasted|   |Image source copied from malformed RichText (RTF)|Link to image source is pasted (rather than image)|       Pasting HTML content into a RichTextBox might result in unexpected behavior because RichTextBox uses RTF format rather than directly using HTML format.       Text always wraps in a RichTextBox. If you do not want text to wrap then set the <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> on the <xref:System.Windows.Documents.FlowDocument> to be larger than the width of the RichTextBox. However, once the page width is reached the text still wraps.       Horizontally and vertically aligning content within a RichTextBox is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties. Aligning the RichTextBox within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.       Scrollbars are not visible on a RichTextBox by default. To make a scrollbar visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> property to <xref:System.Windows.Controls.ScrollBarVisibility> or <xref:System.Windows.Controls.ScrollBarVisibility>.       Usually, the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect when the text in a <xref:System.Windows.Controls.TextBox> or RichTextBox changes, rather then <xref:System.Windows.UIElement.KeyDown> as you might expect. For an example, see [How to: Detect When Text in a TextBox Has Changed](~/add/includes/ajax-current-ext-md.md).       RichTextBox supports a variety of keyboard commands. For a list of keyboard commands, see <xref:System.Windows.Documents.EditingCommands>.       Dependency properties for this control might be set by the controlâ€™s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).","needQuote":false,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Documents.FlowDocument&gt; is the only supported child element for a RichTextBox.","pos":[0,99],"source":"<xref:System.Windows.Documents.FlowDocument> is the only supported child element for a RichTextBox."},{"content":"&gt; <ph id=\"ph1\">[!IMPORTANT]</ph> &gt;  RichTextBox has built-in handling for the bubbling  &lt;xref:System.Windows.UIElement.MouseUp&gt; and &lt;xref:System.Windows.UIElement.MouseDown&gt; events.","pos":[105,268],"source":"      > [!IMPORTANT] >  RichTextBox has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events."},{"content":"Consequently, custom event handlers that listen for <ph id=\"ph1\">`MouseUp`</ph> or <ph id=\"ph2\">`MouseDown`</ph> events from a RichTextBox will never be called.","pos":[270,394],"source":"  Consequently, custom event handlers that listen for `MouseUp` or `MouseDown` events from a RichTextBox will never be called."},{"content":"If you need to respond to these events, listen for the tunneling &lt;xref:System.Windows.UIElement.PreviewMouseUp&gt; and &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; events instead, or register the handlers with the &lt;xref:System.Windows.EventSetter.HandledEventsToo%2A&gt; argument (this latter option is only available through code).","pos":[396,726],"source":"  If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code)."},{"content":"Do not mark the event handled unless you deliberately want to disable RichTextBox native handling of these events, and be aware that this has notable effects on the control's <ph id=\"ph1\">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>.","pos":[727,965],"source":" Do not mark the event handled unless you deliberately want to disable RichTextBox native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]."},{"content":"While RichTextBox supports copying and pasting of images, certain scenarios are currently unsupported and may not work properly.","pos":[972,1100]},{"content":"The following table summarizes these scenarios and expected results.","pos":[1102,1170]},{"content":"|Image Copy Source|Image Paste Result|   |-----------------------|------------------------|   |Image source is a graphic metafile|No image is pasted|   |Image source uses relative path or link|Garbled or blank image is pasted|   |Image source link does not end with an expected image format (.PNG, .JPG, .GIF)|Garbled or blank image is pasted|   |Image source copied from malformed RichText (RTF)|Link to image source is pasted (rather than image)|       Pasting HTML content into a RichTextBox might result in unexpected behavior because RichTextBox uses RTF format rather than directly using HTML format.","pos":[1176,1782]},{"content":"Text always wraps in a RichTextBox.","pos":[1789,1824]},{"content":"If you do not want text to wrap then set the &lt;xref:System.Windows.Documents.FlowDocument.PageWidth%2A&gt; on the &lt;xref:System.Windows.Documents.FlowDocument&gt; to be larger than the width of the RichTextBox.","pos":[1825,2027],"source":" If you do not want text to wrap then set the <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> on the <xref:System.Windows.Documents.FlowDocument> to be larger than the width of the RichTextBox."},{"content":"However, once the page width is reached the text still wraps.","pos":[2028,2089]},{"content":"Horizontally and vertically aligning content within a RichTextBox is done with the &lt;xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A&gt; and &lt;xref:System.Windows.Controls.Control.VerticalContentAlignment%2A&gt; properties.","pos":[2096,2330],"source":"       Horizontally and vertically aligning content within a RichTextBox is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties."},{"content":"Aligning the RichTextBox within the layout of the page is done with the &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt; and &lt;xref:System.Windows.FrameworkElement.VerticalAlignment%2A&gt; properties.","pos":[2331,2540],"source":" Aligning the RichTextBox within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties."},{"content":"Scrollbars are not visible on a RichTextBox by default.","pos":[2547,2602]},{"content":"To make a scrollbar visible, set the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A&gt; property to &lt;xref:System.Windows.Controls.ScrollBarVisibility&gt; or &lt;xref:System.Windows.Controls.ScrollBarVisibility&gt;.","pos":[2603,2842],"source":" To make a scrollbar visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> property to <xref:System.Windows.Controls.ScrollBarVisibility> or <xref:System.Windows.Controls.ScrollBarVisibility>."},{"content":"Usually, the &lt;xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged&gt; event should be used to detect when the text in a &lt;xref:System.Windows.Controls.TextBox&gt; or RichTextBox changes, rather then &lt;xref:System.Windows.UIElement.KeyDown&gt; as you might expect.","pos":[2849,3113],"source":"       Usually, the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect when the text in a <xref:System.Windows.Controls.TextBox> or RichTextBox changes, rather then <xref:System.Windows.UIElement.KeyDown> as you might expect."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Detect When Text in a TextBox Has Changed<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[3114,3225],"source":" For an example, see [How to: Detect When Text in a TextBox Has Changed](~/add/includes/ajax-current-ext-md.md)."},{"content":"RichTextBox supports a variety of keyboard commands.","pos":[3232,3284]},{"content":"For a list of keyboard commands, see &lt;xref:System.Windows.Documents.EditingCommands&gt;.","pos":[3285,3370],"source":" For a list of keyboard commands, see <xref:System.Windows.Documents.EditingCommands>."},{"content":"Dependency properties for this control might be set by the controlâ€™s default style.","pos":[3377,3460]},{"content":"If a property is set by a default style, the property might change from its default value when the control appears in the application.","pos":[3462,3596]},{"content":"The default style is determined by which desktop theme is used when the application is running.","pos":[3597,3692]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Default WPF Themes<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.","pos":[3694,3788],"source":"  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)."}]},{"pos":[49257,49363],"content":"Initializes a new, default instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new, default instance of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> class."},{"pos":[49375,49715],"content":"This constructor creates an empty <xref:System.Windows.Documents.FlowDocument> that is associated with the Document property.  Specifically, the empty <xref:System.Windows.Documents.FlowDocument> contains a single <xref:System.Windows.Documents.Paragraph>, which contains a single <xref:System.Windows.Documents.Run> which contains no text.","needQuote":true,"needEscape":true,"nodes":[{"content":"This constructor creates an empty <xref:System.Windows.Documents.FlowDocument> that is associated with the Document property.  Specifically, the empty <xref:System.Windows.Documents.FlowDocument> contains a single <xref:System.Windows.Documents.Paragraph>, which contains a single <xref:System.Windows.Documents.Run> which contains no text.","pos":[0,340],"nodes":[{"content":"This constructor creates an empty &lt;xref:System.Windows.Documents.FlowDocument&gt; that is associated with the Document property.","pos":[0,125],"source":"This constructor creates an empty <xref:System.Windows.Documents.FlowDocument> that is associated with the Document property."},{"content":"Specifically, the empty &lt;xref:System.Windows.Documents.FlowDocument&gt; contains a single &lt;xref:System.Windows.Documents.Paragraph&gt;, which contains a single &lt;xref:System.Windows.Documents.Run&gt; which contains no text.","pos":[127,340],"source":"  Specifically, the empty <xref:System.Windows.Documents.FlowDocument> contains a single <xref:System.Windows.Documents.Paragraph>, which contains a single <xref:System.Windows.Documents.Run> which contains no text."}]}]},{"pos":[50353,50552],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class, adding a specified <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> as the initial content.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> class, adding a specified <xref href=\"System.Windows.Documents.FlowDocument\"></xref> as the initial content."},{"pos":[51110,51275],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to be added as the initial contents of the new <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.FlowDocument\"></xref> to be added as the initial contents of the new <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[51745,51790],"content":"Gets or sets the position of the input caret.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the position of the input caret.","pos":[0,45]}]},{"pos":[52337,52763],"content":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> object specifying the position of the input caret.       By default, the caret is at the first insertion position at the beginning of the content hosted by the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>. See <xref href=\"System.Windows.Documents.TextPointer\"></xref> for more information on text position terminology like \"insertion position\".","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifying the position of the input caret.","pos":[0,110],"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> object specifying the position of the input caret."},{"content":"By default, the caret is at the first insertion position at the beginning of the content hosted by the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[117,277],"source":"       By default, the caret is at the first insertion position at the beginning of the content hosted by the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"content":"See <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> for more information on text position terminology like \"insertion position\".","pos":[278,416],"source":" See <xref href=\"System.Windows.Documents.TextPointer\"></xref> for more information on text position terminology like \"insertion position\"."}]},{"pos":[52944,53048],"content":"An attempt is made to set this property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set this property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[53143,53305],"content":"An attempt is made to set this property to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that references a position outside of the current document.","needQuote":true,"needEscape":true,"source":"An attempt is made to set this property to a <xref href=\"System.Windows.Documents.TextPointer\"></xref> that references a position outside of the current document."},{"pos":[53678,53847],"content":"Gets or sets the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets the <xref href=\"System.Windows.Documents.FlowDocument\"></xref> that represents the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[53859,54080],"content":"A FlowDocument may only be hosted by a single <xref:System.Windows.Controls.RichTextBox>.  Specifying a single FlowDocument as the contents of multiple <xref:System.Windows.Controls.RichTextBox> controls is not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"A FlowDocument may only be hosted by a single <xref:System.Windows.Controls.RichTextBox>.  Specifying a single FlowDocument as the contents of multiple <xref:System.Windows.Controls.RichTextBox> controls is not supported.","pos":[0,221],"nodes":[{"content":"A FlowDocument may only be hosted by a single &lt;xref:System.Windows.Controls.RichTextBox&gt;.","pos":[0,89],"source":"A FlowDocument may only be hosted by a single <xref:System.Windows.Controls.RichTextBox>."},{"content":"Specifying a single FlowDocument as the contents of multiple &lt;xref:System.Windows.Controls.RichTextBox&gt; controls is not supported.","pos":[91,221],"source":"  Specifying a single FlowDocument as the contents of multiple <xref:System.Windows.Controls.RichTextBox> controls is not supported."}]}]},{"pos":[54590,55133],"content":"A <xref href=\"System.Windows.Documents.FlowDocument\"></xref> object that represents the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.       By default, this property is set to an empty <xref href=\"System.Windows.Documents.FlowDocument\"></xref>.  Specifically, the empty <xref href=\"System.Windows.Documents.FlowDocument\"></xref> contains a single <xref href=\"System.Windows.Documents.Paragraph\"></xref>, which contains a single <xref href=\"System.Windows.Documents.Run\"></xref> which contains no text.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that represents the contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,161],"source":"A <xref href=\"System.Windows.Documents.FlowDocument\"></xref> object that represents the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"content":"By default, this property is set to an empty <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[168,272],"source":"       By default, this property is set to an empty <xref href=\"System.Windows.Documents.FlowDocument\"></xref>."},{"content":"Specifically, the empty <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> contains a single <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.Paragraph\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, which contains a single <bpt id=\"p3\">&lt;xref href=\"System.Windows.Documents.Run\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> which contains no text.","pos":[274,529],"source":"  Specifically, the empty <xref href=\"System.Windows.Documents.FlowDocument\"></xref> contains a single <xref href=\"System.Windows.Documents.Paragraph\"></xref>, which contains a single <xref href=\"System.Windows.Documents.Run\"></xref> which contains no text."}]},{"pos":[55309,55413],"content":"An attempt is made to set this property to <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set this property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[55508,55709],"content":"An attempt is made to set this property to a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.FlowDocument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that represents the contents of another <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An attempt is made to set this property to a <xref href=\"System.Windows.Documents.FlowDocument\"></xref> that represents the contents of another <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[55820,55881],"content":"This property is set while a change block has been activated.","needQuote":true,"needEscape":true,"nodes":[{"content":"This property is set while a change block has been activated.","pos":[0,61]}]},{"pos":[56602,56789],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that points to the next spelling error in the contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the next spelling error in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[57091,57222],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> indicating a position from which to search for the next spelling error.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> indicating a position from which to search for the next spelling error."},{"pos":[57316,57466],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.LogicalDirection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to search for the next spelling error, starting at the specified <ph id=\"ph1\">`posision`</ph>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.LogicalDirection\"></xref> in which to search for the next spelling error, starting at the specified `posision`."},{"pos":[57547,57824],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that points to the next spelling error in the contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if no next spelling error exists.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the next spelling error in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no next spelling error exists."},{"pos":[58469,58606],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that points to the insertion point closest to the specified position.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the insertion point closest to the specified position."},{"pos":[58618,58794],"content":"<xref:System.Windows.Controls.RichTextBox> uses a standard coordinate system with the origin located at the upper-left corner of the <xref:System.Windows.Controls.RichTextBox>.","needQuote":true,"needEscape":true,"nodes":[{"content":"&lt;xref:System.Windows.Controls.RichTextBox&gt; uses a standard coordinate system with the origin located at the upper-left corner of the &lt;xref:System.Windows.Controls.RichTextBox&gt;.","pos":[0,176],"source":"<xref:System.Windows.Controls.RichTextBox> uses a standard coordinate system with the origin located at the upper-left corner of the <xref:System.Windows.Controls.RichTextBox>."}]},{"pos":[59014,59165],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object specifying the position to retrieve a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> for.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Point\"></xref> object specifying the position to retrieve a <xref href=\"System.Windows.Documents.TextPointer\"></xref> for."},{"pos":[59234,59900],"content":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method always returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying the closest insertion position for the <xref href=\"System.Windows.Point\"></xref> specified, regardless or whether or not the supplied <xref href=\"System.Windows.Point\"></xref> is inside a character's bounding box.       If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Point\"></xref> does not fall within any character bounding box.","needQuote":false,"needEscape":true,"nodes":[{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, this method always returns a <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> specifying the closest insertion position for the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> specified, regardless or whether or not the supplied <bpt id=\"p4\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> is inside a character's bounding box.","pos":[0,376],"source":"If <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, this method always returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying the closest insertion position for the <xref href=\"System.Windows.Point\"></xref> specified, regardless or whether or not the supplied <xref href=\"System.Windows.Point\"></xref> is inside a character's bounding box."},{"content":"If <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>, this method returns <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the specified <bpt id=\"p3\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> does not fall within any character bounding box.","pos":[383,638],"source":"       If <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>, this method returns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if the specified <xref href=\"System.Windows.Point\"></xref> does not fall within any character bounding box."}]},{"pos":[59982,60768],"content":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying the closest insertion position for the supplied point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>snapToText</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the supplied <xref href=\"System.Windows.Point\"></xref> is not within any character's bounding box. Note that the <xref href=\"System.Windows.Documents.TextPointer\"></xref> returned is usually the position between two characters. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of the returned <xref href=\"System.Windows.Documents.TextPointer\"></xref> to determine which of the two characters the <xref href=\"System.Windows.Documents.TextPointer\"></xref> corresponds to.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> specifying the closest insertion position for the supplied point, or <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph1\">snapToText</ph><ept id=\"p3\">&lt;/code&gt;</ept> is <bpt id=\"p4\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept> and the supplied <bpt id=\"p5\">&lt;xref href=\"System.Windows.Point\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept> is not within any character's bounding box.","pos":[0,385],"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying the closest insertion position for the supplied point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>snapToText</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the supplied <xref href=\"System.Windows.Point\"></xref> is not within any character's bounding box."},{"content":"Note that the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> returned is usually the position between two characters.","pos":[386,514],"source":" Note that the <xref href=\"System.Windows.Documents.TextPointer\"></xref> returned is usually the position between two characters."},{"content":"Use the &lt;xref:System.Windows.Documents.TextPointer.LogicalDirection*&gt; property of the returned <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to determine which of the two characters the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> corresponds to.","pos":[515,786],"source":" Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of the returned <xref href=\"System.Windows.Documents.TextPointer\"></xref> to determine which of the two characters the <xref href=\"System.Windows.Documents.TextPointer\"></xref> corresponds to."}]},{"pos":[60963,61072],"content":"Raised if layout information for the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> is not current.","needQuote":true,"needEscape":true,"source":"Raised if layout information for the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> is not current."},{"pos":[61598,61813],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.SpellingError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with any spelling error at a specified position in the contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Controls.SpellingError\"></xref> object associated with any spelling error at a specified position in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[61825,62073],"content":"A <xref:System.Windows.Documents.TextPointer> like `position` usually specifies a position between two characters. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property of `position` to specify which character to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Documents.TextPointer&gt; like <ph id=\"ph1\">`position`</ph> usually specifies a position between two characters.","pos":[0,114],"source":"A <xref:System.Windows.Documents.TextPointer> like `position` usually specifies a position between two characters."},{"content":"Use the &lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt; property of <ph id=\"ph1\">`position`</ph> to specify which character to examine.","pos":[115,248],"source":" Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property of `position` to specify which character to examine."}]},{"pos":[62311,62679],"content":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of this <xref href=\"System.Windows.Documents.TextPointer\"></xref> to specify the direction of the character to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a position and logical direction that resolves to a character to examine for a spelling error.","pos":[0,169],"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that specifies a position and logical direction that resolves to a character to examine for a spelling error."},{"content":"Use the &lt;xref:System.Windows.Documents.TextPointer.LogicalDirection*&gt; property of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to specify the direction of the character to examine.","pos":[170,368],"source":" Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of this <xref href=\"System.Windows.Documents.TextPointer\"></xref> to specify the direction of the character to examine."}]},{"pos":[62761,63052],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.SpellingError\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the details of the spelling error found at the character indicated by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if no spelling error exists at the specified character.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Controls.SpellingError\"></xref> object containing the details of the spelling error found at the character indicated by <code>position</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no spelling error exists at the specified character."},{"pos":[63686,63892],"content":"Returns a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object covering any misspelled word at a specified position in the contents of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns a <xref href=\"System.Windows.Documents.TextRange\"></xref> object covering any misspelled word at a specified position in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[63904,64152],"content":"A <xref:System.Windows.Documents.TextPointer> like `position` usually specifies a position between two characters. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property of `position` to specify which character to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A &lt;xref:System.Windows.Documents.TextPointer&gt; like <ph id=\"ph1\">`position`</ph> usually specifies a position between two characters.","pos":[0,114],"source":"A <xref:System.Windows.Documents.TextPointer> like `position` usually specifies a position between two characters."},{"content":"Use the &lt;xref:System.Windows.Documents.TextPointer.LogicalDirection%2A&gt; property of <ph id=\"ph1\">`position`</ph> to specify which character to examine.","pos":[115,248],"source":" Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property of `position` to specify which character to examine."}]},{"pos":[64392,64760],"content":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of this <xref href=\"System.Windows.Documents.TextPointer\"></xref> to specify the direction of the character to examine.","needQuote":true,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies a position and logical direction that resolves to a character to examine for a spelling error.","pos":[0,169],"source":"A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that specifies a position and logical direction that resolves to a character to examine for a spelling error."},{"content":"Use the &lt;xref:System.Windows.Documents.TextPointer.LogicalDirection*&gt; property of this <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextPointer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to specify the direction of the character to examine.","pos":[170,368],"source":" Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of this <xref href=\"System.Windows.Documents.TextPointer\"></xref> to specify the direction of the character to examine."}]},{"pos":[64839,65116],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextRange\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object covering any misspelled word that includes the character specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph1\">position</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> if no spelling error exists at the specified character.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Documents.TextRange\"></xref> object covering any misspelled word that includes the character specified by <code>position</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no spelling error exists at the specified character."},{"pos":[65622,65870],"content":"Gets or sets a value that indicates whether the user can interact with <bpt id=\"p1\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> and <bpt id=\"p2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> objects within the <bpt id=\"p3\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets or sets a value that indicates whether the user can interact with <xref href=\"System.Windows.UIElement\"></xref> and <xref href=\"System.Windows.ContentElement\"></xref> objects within the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[65882,66043],"content":"IsDocumentEnabled is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDocumentEnabled is introduced in the .NET Framework version 3.5.","pos":[0,66]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[68,161],"source":"  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[67186,67529],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the user can interact with <bpt id=\"p2\">&lt;xref href=\"System.Windows.UIElement\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> and <bpt id=\"p3\">&lt;xref href=\"System.Windows.ContentElement\"&gt;</bpt><ept id=\"p3\">&lt;/xref&gt;</ept> objects within the <bpt id=\"p4\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p4\">&lt;/xref&gt;</ept>; otherwise, <bpt id=\"p5\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p5\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user can interact with <xref href=\"System.Windows.UIElement\"></xref> and <xref href=\"System.Windows.ContentElement\"></xref> objects within the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[68068,68165],"content":"Identifies the <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled*> dependency property.","needQuote":true,"needEscape":true,"nodes":[{"content":"Identifies the &lt;xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled*&gt; dependency property.","pos":[0,97],"source":"Identifies the <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled*> dependency property."}]},{"pos":[68350,68362],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[68787,68926],"content":"Gets an enumerator that can iterate the logical children of the <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_RichTextBox\" name=\"RichTextBox\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets an enumerator that can iterate the logical children of the <xref uid=\"langword_csharp_RichTextBox\" name=\"RichTextBox\" href=\"\"></xref>."},{"pos":[69099,69138],"content":"An enumerator for the logical children.","needQuote":true,"needEscape":true,"nodes":[{"content":"An enumerator for the logical children.","pos":[0,39]}]},{"pos":[69686,69768],"content":"Called to re-measure the <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Called to re-measure the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[69780,69860],"content":"This method overrides <xref:System.Windows.Controls.Control.MeasureOverride%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.Controls.Control.MeasureOverride%2A&gt;.","pos":[0,80],"source":"This method overrides <xref:System.Windows.Controls.Control.MeasureOverride%2A>."}]},{"pos":[70061,70213],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure specifying constraints on the size of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure specifying constraints on the size of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[70277,70418],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Size\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> structure indicating the new size of the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Windows.Size\"></xref> structure indicating the new size of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[70947,71111],"content":"Creates and returns an <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[71123,71208],"content":"This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.","needQuote":true,"needEscape":true,"nodes":[{"content":"This method overrides &lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A&gt;.","pos":[0,85],"source":"This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>."}]},{"pos":[71434,71578],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Windows.Automation.Peers.AutomationPeer\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object for this <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[72213,72281],"content":"Called when the DPI at which this Rich Text Box is rendered changes.","needQuote":true,"needEscape":true,"nodes":[{"content":"Called when the DPI at which this Rich Text Box is rendered changes.","pos":[0,68]}]},{"pos":[72523,72554],"content":"The previous DPI scale setting.","needQuote":true,"needEscape":true,"nodes":[{"content":"The previous DPI scale setting.","pos":[0,31]}]},{"pos":[72636,72662],"content":"The new DPI scale setting.","needQuote":true,"needEscape":true,"nodes":[{"content":"The new DPI scale setting.","pos":[0,26]}]},{"pos":[73119,73290],"content":"Gets a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextSelection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the current selection in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Gets a <xref href=\"System.Windows.Documents.TextSelection\"></xref> object containing the current selection in the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"pos":[73302,73404],"content":"Use the <xref:System.Windows.Documents.TextRange.Select%2A> method to programmatically select content.","needQuote":true,"needEscape":true,"nodes":[{"content":"Use the &lt;xref:System.Windows.Documents.TextRange.Select%2A&gt; method to programmatically select content.","pos":[0,102],"source":"Use the <xref:System.Windows.Documents.TextRange.Select%2A> method to programmatically select content."}]},{"pos":[73916,74447],"content":"A <xref href=\"System.Windows.Documents.TextSelection\"></xref> object containing the current selection in the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.       The default returned <xref href=\"System.Windows.Documents.TextSelection\"></xref> has an <xref:System.Windows.Documents.TextRange.IsEmpty*> property value of <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>. An empty <xref href=\"System.Windows.Documents.TextSelection\"></xref> renders as a caret in the text area with no selection.","needQuote":false,"needEscape":true,"nodes":[{"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextSelection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object containing the current selection in the <bpt id=\"p2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[0,166],"source":"A <xref href=\"System.Windows.Documents.TextSelection\"></xref> object containing the current selection in the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>."},{"content":"The default returned <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextSelection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> has an &lt;xref:System.Windows.Documents.TextRange.IsEmpty*&gt; property value of <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","pos":[173,391],"source":"       The default returned <xref href=\"System.Windows.Documents.TextSelection\"></xref> has an <xref:System.Windows.Documents.TextRange.IsEmpty*> property value of <xref uid=\"langword_csharp_True\" name=\"True\" href=\"\"></xref>."},{"content":"An empty <bpt id=\"p1\">&lt;xref href=\"System.Windows.Documents.TextSelection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> renders as a caret in the text area with no selection.","pos":[392,515],"source":" An empty <xref href=\"System.Windows.Documents.TextSelection\"></xref> renders as a caret in the text area with no selection."}]},{"pos":[74976,75222],"content":"Returns a value that indicates whether or not the effective value of the &lt;xref:System.Windows.Controls.RichTextBox.Document*&gt; property should be serialized during serialization of a <bpt id=\"p1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Returns a value that indicates whether or not the effective value of the <xref:System.Windows.Controls.RichTextBox.Document*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> object."},{"pos":[75363,75589],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the &lt;xref:System.Windows.Controls.RichTextBox.Document*&gt; property should be serialized; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.RichTextBox.Document*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[76278,76450],"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[76591,76619],"content":"An object to add as a child.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object to add as a child.","pos":[0,28]}]},{"pos":[77320,77492],"content":"This type or member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","needQuote":true,"needEscape":true,"source":"This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."},{"pos":[77630,77660],"content":"A string to add to the object.","needQuote":true,"needEscape":true,"nodes":[{"content":"A string to add to the object.","pos":[0,30]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.RichTextBox\n  id: RichTextBox\n  children:\n  - System.Windows.Controls.RichTextBox.#ctor\n  - System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)\n  - System.Windows.Controls.RichTextBox.CaretPosition\n  - System.Windows.Controls.RichTextBox.Document\n  - System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)\n  - System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  - System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)\n  - System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)\n  - System.Windows.Controls.RichTextBox.IsDocumentEnabled\n  - System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty\n  - System.Windows.Controls.RichTextBox.LogicalChildren\n  - System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)\n  - System.Windows.Controls.RichTextBox.OnCreateAutomationPeer\n  - System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  - System.Windows.Controls.RichTextBox.Selection\n  - System.Windows.Controls.RichTextBox.ShouldSerializeDocument\n  - System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  - System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)\n  langs:\n  - csharp\n  name: RichTextBox\n  nameWithType: RichTextBox\n  fullName: System.Windows.Controls.RichTextBox\n  type: Class\n  summary: Represents a rich editing control which operates on <xref href=\"System.Windows.Documents.FlowDocument\"></xref> objects.\n  remarks: \"<xref:System.Windows.Documents.FlowDocument> is the only supported child element for a RichTextBox.  \\n  \\n> [!IMPORTANT]\\n>  RichTextBox has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.  Consequently, custom event handlers that listen for `MouseUp` or `MouseDown` events from a RichTextBox will never be called.  If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code). Do not mark the event handled unless you deliberately want to disable RichTextBox native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].  \\n  \\n While RichTextBox supports copying and pasting of images, certain scenarios are currently unsupported and may not work properly.  The following table summarizes these scenarios and expected results.  \\n  \\n|Image Copy Source|Image Paste Result|  \\n|-----------------------|------------------------|  \\n|Image source is a graphic metafile|No image is pasted|  \\n|Image source uses relative path or link|Garbled or blank image is pasted|  \\n|Image source link does not end with an expected image format (.PNG, .JPG, .GIF)|Garbled or blank image is pasted|  \\n|Image source copied from malformed RichText (RTF)|Link to image source is pasted (rather than image)|  \\n  \\n Pasting HTML content into a RichTextBox might result in unexpected behavior because RichTextBox uses RTF format rather than directly using HTML format.  \\n  \\n Text always wraps in a RichTextBox. If you do not want text to wrap then set the <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> on the <xref:System.Windows.Documents.FlowDocument> to be larger than the width of the RichTextBox. However, once the page width is reached the text still wraps.  \\n  \\n Horizontally and vertically aligning content within a RichTextBox is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties. Aligning the RichTextBox within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.  \\n  \\n Scrollbars are not visible on a RichTextBox by default. To make a scrollbar visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> property to <xref:System.Windows.Controls.ScrollBarVisibility> or <xref:System.Windows.Controls.ScrollBarVisibility>.  \\n  \\n Usually, the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect when the text in a <xref:System.Windows.Controls.TextBox> or RichTextBox changes, rather then <xref:System.Windows.UIElement.KeyDown> as you might expect. For an example, see [How to: Detect When Text in a TextBox Has Changed](~/add/includes/ajax-current-ext-md.md).  \\n  \\n RichTextBox supports a variety of keyboard commands. For a list of keyboard commands, see <xref:System.Windows.Documents.EditingCommands>.  \\n  \\n Dependency properties for this control might be set by the controlâ€™s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).\"\n  example:\n  - \"The following example declares a RichTextBox that contains a simple <xref:System.Windows.Documents.FlowDocument>.  \\n  \\n [!code-xml[RichTextBoxSnippets#_RTB_XAML](~/add/codesnippet/xaml/RichTextBoxSnippets/Window1.xaml#_rtb_xaml)]  \\n  \\n [!code-vb[RichTextBoxMiscSnippets_procedural_snip#RichTextBoxCodeOnlyExample](~/add/codesnippet/visualbasic/RichTextBoxMiscSnippets_procedural_snip.textmiscsnippets_procedural/richtextboxexample.vb#richtextboxcodeonlyexample)]\\n [!code-cs[RichTextBoxMiscSnippets_procedural_snip#RichTextBoxCodeOnlyExample](~/add/codesnippet/csharp/RichTextBoxMiscSnippets_procedural_snip.TextMiscSnippets_procedural/RichTextBoxExample.cs#richtextboxcodeonlyexample)]\"\n  syntax:\n    content: >-\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.Inherit)]\n\n      [System.Windows.Markup.ContentProperty(\"Document\")]\n\n      public class RichTextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Media.Visual\n  - System.Windows.UIElement\n  - System.Windows.FrameworkElement\n  - System.Windows.Controls.Control\n  - System.Windows.Controls.Primitives.TextBoxBase\n  implements:\n  - System.Windows.Markup.IAddChild\n  inheritedMembers:\n  - System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)\n  - System.Windows.Controls.Control.Background\n  - System.Windows.Controls.Control.BackgroundProperty\n  - System.Windows.Controls.Control.BorderBrush\n  - System.Windows.Controls.Control.BorderBrushProperty\n  - System.Windows.Controls.Control.BorderThickness\n  - System.Windows.Controls.Control.BorderThicknessProperty\n  - System.Windows.Controls.Control.FontFamily\n  - System.Windows.Controls.Control.FontFamilyProperty\n  - System.Windows.Controls.Control.FontSize\n  - System.Windows.Controls.Control.FontSizeProperty\n  - System.Windows.Controls.Control.FontStretch\n  - System.Windows.Controls.Control.FontStretchProperty\n  - System.Windows.Controls.Control.FontStyle\n  - System.Windows.Controls.Control.FontStyleProperty\n  - System.Windows.Controls.Control.FontWeight\n  - System.Windows.Controls.Control.FontWeightProperty\n  - System.Windows.Controls.Control.Foreground\n  - System.Windows.Controls.Control.ForegroundProperty\n  - System.Windows.Controls.Control.HandlesScrolling\n  - System.Windows.Controls.Control.HorizontalContentAlignment\n  - System.Windows.Controls.Control.HorizontalContentAlignmentProperty\n  - System.Windows.Controls.Control.IsTabStop\n  - System.Windows.Controls.Control.IsTabStopProperty\n  - System.Windows.Controls.Control.MouseDoubleClick\n  - System.Windows.Controls.Control.MouseDoubleClickEvent\n  - System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Control.Padding\n  - System.Windows.Controls.Control.PaddingProperty\n  - System.Windows.Controls.Control.PreviewMouseDoubleClick\n  - System.Windows.Controls.Control.PreviewMouseDoubleClickEvent\n  - System.Windows.Controls.Control.TabIndex\n  - System.Windows.Controls.Control.TabIndexProperty\n  - System.Windows.Controls.Control.Template\n  - System.Windows.Controls.Control.TemplateProperty\n  - System.Windows.Controls.Control.ToString\n  - System.Windows.Controls.Control.VerticalContentAlignment\n  - System.Windows.Controls.Control.VerticalContentAlignmentProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab\n  - System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)\n  - System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection\n  - System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.BeginChange\n  - System.Windows.Controls.Primitives.TextBoxBase.CanRedo\n  - System.Windows.Controls.Primitives.TextBoxBase.CanUndo\n  - System.Windows.Controls.Primitives.TextBoxBase.CaretBrush\n  - System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.Copy\n  - System.Windows.Controls.Primitives.TextBoxBase.Cut\n  - System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock\n  - System.Windows.Controls.Primitives.TextBoxBase.EndChange\n  - System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight\n  - System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth\n  - System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset\n  - System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility\n  - System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled\n  - System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive\n  - System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled\n  - System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.LineDown\n  - System.Windows.Controls.Primitives.TextBoxBase.LineLeft\n  - System.Windows.Controls.Primitives.TextBoxBase.LineRight\n  - System.Windows.Controls.Primitives.TextBoxBase.LineUp\n  - System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit\n  - System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate\n  - System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.Controls.Primitives.TextBoxBase.PageDown\n  - System.Windows.Controls.Primitives.TextBoxBase.PageLeft\n  - System.Windows.Controls.Primitives.TextBoxBase.PageRight\n  - System.Windows.Controls.Primitives.TextBoxBase.PageUp\n  - System.Windows.Controls.Primitives.TextBoxBase.Paste\n  - System.Windows.Controls.Primitives.TextBoxBase.Redo\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)\n  - System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectAll\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity\n  - System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.SpellCheck\n  - System.Windows.Controls.Primitives.TextBoxBase.TextChanged\n  - System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent\n  - System.Windows.Controls.Primitives.TextBoxBase.Undo\n  - System.Windows.Controls.Primitives.TextBoxBase.UndoLimit\n  - System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset\n  - System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility\n  - System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty\n  - System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight\n  - System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.ActualHeight\n  - System.Windows.FrameworkElement.ActualHeightProperty\n  - System.Windows.FrameworkElement.ActualWidth\n  - System.Windows.FrameworkElement.ActualWidthProperty\n  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.ApplyTemplate\n  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)\n  - System.Windows.FrameworkElement.BeginInit\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)\n  - System.Windows.FrameworkElement.BindingGroup\n  - System.Windows.FrameworkElement.BindingGroupProperty\n  - System.Windows.FrameworkElement.BringIntoView\n  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)\n  - System.Windows.FrameworkElement.ContextMenu\n  - System.Windows.FrameworkElement.ContextMenuClosing\n  - System.Windows.FrameworkElement.ContextMenuClosingEvent\n  - System.Windows.FrameworkElement.ContextMenuOpening\n  - System.Windows.FrameworkElement.ContextMenuOpeningEvent\n  - System.Windows.FrameworkElement.ContextMenuProperty\n  - System.Windows.FrameworkElement.Cursor\n  - System.Windows.FrameworkElement.CursorProperty\n  - System.Windows.FrameworkElement.DataContext\n  - System.Windows.FrameworkElement.DataContextChanged\n  - System.Windows.FrameworkElement.DataContextProperty\n  - System.Windows.FrameworkElement.DefaultStyleKey\n  - System.Windows.FrameworkElement.DefaultStyleKeyProperty\n  - System.Windows.FrameworkElement.EndInit\n  - System.Windows.FrameworkElement.FindName(System.String)\n  - System.Windows.FrameworkElement.FindResource(System.Object)\n  - System.Windows.FrameworkElement.FlowDirection\n  - System.Windows.FrameworkElement.FlowDirectionProperty\n  - System.Windows.FrameworkElement.FocusVisualStyle\n  - System.Windows.FrameworkElement.FocusVisualStyleProperty\n  - System.Windows.FrameworkElement.ForceCursor\n  - System.Windows.FrameworkElement.ForceCursorProperty\n  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)\n  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)\n  - System.Windows.FrameworkElement.GetTemplateChild(System.String)\n  - System.Windows.FrameworkElement.GetUIParentCore\n  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)\n  - System.Windows.FrameworkElement.Height\n  - System.Windows.FrameworkElement.HeightProperty\n  - System.Windows.FrameworkElement.HorizontalAlignment\n  - System.Windows.FrameworkElement.HorizontalAlignmentProperty\n  - System.Windows.FrameworkElement.InheritanceBehavior\n  - System.Windows.FrameworkElement.Initialized\n  - System.Windows.FrameworkElement.InputScope\n  - System.Windows.FrameworkElement.InputScopeProperty\n  - System.Windows.FrameworkElement.IsInitialized\n  - System.Windows.FrameworkElement.IsLoaded\n  - System.Windows.FrameworkElement.Language\n  - System.Windows.FrameworkElement.LanguageProperty\n  - System.Windows.FrameworkElement.LayoutTransform\n  - System.Windows.FrameworkElement.LayoutTransformProperty\n  - System.Windows.FrameworkElement.Loaded\n  - System.Windows.FrameworkElement.LoadedEvent\n  - System.Windows.FrameworkElement.Margin\n  - System.Windows.FrameworkElement.MarginProperty\n  - System.Windows.FrameworkElement.MaxHeight\n  - System.Windows.FrameworkElement.MaxHeightProperty\n  - System.Windows.FrameworkElement.MaxWidth\n  - System.Windows.FrameworkElement.MaxWidthProperty\n  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)\n  - System.Windows.FrameworkElement.MinHeight\n  - System.Windows.FrameworkElement.MinHeightProperty\n  - System.Windows.FrameworkElement.MinWidth\n  - System.Windows.FrameworkElement.MinWidthProperty\n  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)\n  - System.Windows.FrameworkElement.Name\n  - System.Windows.FrameworkElement.NameProperty\n  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)\n  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)\n  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)\n  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)\n  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)\n  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)\n  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)\n  - System.Windows.FrameworkElement.OverridesDefaultStyle\n  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty\n  - System.Windows.FrameworkElement.Parent\n  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)\n  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)\n  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)\n  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)\n  - System.Windows.FrameworkElement.RequestBringIntoView\n  - System.Windows.FrameworkElement.RequestBringIntoViewEvent\n  - System.Windows.FrameworkElement.Resources\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)\n  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)\n  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)\n  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.FrameworkElement.ShouldSerializeResources\n  - System.Windows.FrameworkElement.ShouldSerializeStyle\n  - System.Windows.FrameworkElement.ShouldSerializeTriggers\n  - System.Windows.FrameworkElement.SizeChanged\n  - System.Windows.FrameworkElement.SizeChangedEvent\n  - System.Windows.FrameworkElement.SourceUpdated\n  - System.Windows.FrameworkElement.Style\n  - System.Windows.FrameworkElement.StyleProperty\n  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)\n  - System.Windows.FrameworkElement.Tag\n  - System.Windows.FrameworkElement.TagProperty\n  - System.Windows.FrameworkElement.TargetUpdated\n  - System.Windows.FrameworkElement.TemplatedParent\n  - System.Windows.FrameworkElement.ToolTip\n  - System.Windows.FrameworkElement.ToolTipClosing\n  - System.Windows.FrameworkElement.ToolTipClosingEvent\n  - System.Windows.FrameworkElement.ToolTipOpening\n  - System.Windows.FrameworkElement.ToolTipOpeningEvent\n  - System.Windows.FrameworkElement.ToolTipProperty\n  - System.Windows.FrameworkElement.Triggers\n  - System.Windows.FrameworkElement.TryFindResource(System.Object)\n  - System.Windows.FrameworkElement.Unloaded\n  - System.Windows.FrameworkElement.UnloadedEvent\n  - System.Windows.FrameworkElement.UnregisterName(System.String)\n  - System.Windows.FrameworkElement.UpdateDefaultStyle\n  - System.Windows.FrameworkElement.UseLayoutRounding\n  - System.Windows.FrameworkElement.UseLayoutRoundingProperty\n  - System.Windows.FrameworkElement.VerticalAlignment\n  - System.Windows.FrameworkElement.VerticalAlignmentProperty\n  - System.Windows.FrameworkElement.VisualChildrenCount\n  - System.Windows.FrameworkElement.Width\n  - System.Windows.FrameworkElement.WidthProperty\n  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)\n  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)\n  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)\n  - System.Windows.Media.Visual.VisualBitmapEffect\n  - System.Windows.Media.Visual.VisualBitmapEffectInput\n  - System.Windows.Media.Visual.VisualBitmapScalingMode\n  - System.Windows.Media.Visual.VisualCacheMode\n  - System.Windows.Media.Visual.VisualClearTypeHint\n  - System.Windows.Media.Visual.VisualClip\n  - System.Windows.Media.Visual.VisualEdgeMode\n  - System.Windows.Media.Visual.VisualEffect\n  - System.Windows.Media.Visual.VisualOffset\n  - System.Windows.Media.Visual.VisualOpacity\n  - System.Windows.Media.Visual.VisualOpacityMask\n  - System.Windows.Media.Visual.VisualParent\n  - System.Windows.Media.Visual.VisualScrollableAreaClip\n  - System.Windows.Media.Visual.VisualTextHintingMode\n  - System.Windows.Media.Visual.VisualTextRenderingMode\n  - System.Windows.Media.Visual.VisualTransform\n  - System.Windows.Media.Visual.VisualXSnappingGuidelines\n  - System.Windows.Media.Visual.VisualYSnappingGuidelines\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)\n  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.AllowDrop\n  - System.Windows.UIElement.AllowDropProperty\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.AreAnyTouchesCaptured\n  - System.Windows.UIElement.AreAnyTouchesCapturedProperty\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithin\n  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOver\n  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty\n  - System.Windows.UIElement.AreAnyTouchesOver\n  - System.Windows.UIElement.AreAnyTouchesOverProperty\n  - System.Windows.UIElement.Arrange(System.Windows.Rect)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.UIElement.BitmapEffect\n  - System.Windows.UIElement.BitmapEffectInput\n  - System.Windows.UIElement.BitmapEffectInputProperty\n  - System.Windows.UIElement.BitmapEffectProperty\n  - System.Windows.UIElement.CacheMode\n  - System.Windows.UIElement.CacheModeProperty\n  - System.Windows.UIElement.CaptureMouse\n  - System.Windows.UIElement.CaptureStylus\n  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.Clip\n  - System.Windows.UIElement.ClipProperty\n  - System.Windows.UIElement.ClipToBounds\n  - System.Windows.UIElement.ClipToBoundsProperty\n  - System.Windows.UIElement.CommandBindings\n  - System.Windows.UIElement.DesiredSize\n  - System.Windows.UIElement.DragEnter\n  - System.Windows.UIElement.DragEnterEvent\n  - System.Windows.UIElement.DragLeave\n  - System.Windows.UIElement.DragLeaveEvent\n  - System.Windows.UIElement.DragOver\n  - System.Windows.UIElement.DragOverEvent\n  - System.Windows.UIElement.Drop\n  - System.Windows.UIElement.DropEvent\n  - System.Windows.UIElement.Effect\n  - System.Windows.UIElement.EffectProperty\n  - System.Windows.UIElement.Focus\n  - System.Windows.UIElement.Focusable\n  - System.Windows.UIElement.FocusableChanged\n  - System.Windows.UIElement.FocusableProperty\n  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.UIElement.GiveFeedback\n  - System.Windows.UIElement.GiveFeedbackEvent\n  - System.Windows.UIElement.GotFocus\n  - System.Windows.UIElement.GotFocusEvent\n  - System.Windows.UIElement.GotKeyboardFocus\n  - System.Windows.UIElement.GotKeyboardFocusEvent\n  - System.Windows.UIElement.GotMouseCapture\n  - System.Windows.UIElement.GotMouseCaptureEvent\n  - System.Windows.UIElement.GotStylusCapture\n  - System.Windows.UIElement.GotStylusCaptureEvent\n  - System.Windows.UIElement.GotTouchCapture\n  - System.Windows.UIElement.GotTouchCaptureEvent\n  - System.Windows.UIElement.HasAnimatedProperties\n  - System.Windows.UIElement.HasEffectiveKeyboardFocus\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)\n  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)\n  - System.Windows.UIElement.InputBindings\n  - System.Windows.UIElement.InputHitTest(System.Windows.Point)\n  - System.Windows.UIElement.InvalidateArrange\n  - System.Windows.UIElement.InvalidateMeasure\n  - System.Windows.UIElement.InvalidateVisual\n  - System.Windows.UIElement.IsArrangeValid\n  - System.Windows.UIElement.IsEnabled\n  - System.Windows.UIElement.IsEnabledChanged\n  - System.Windows.UIElement.IsEnabledCore\n  - System.Windows.UIElement.IsEnabledProperty\n  - System.Windows.UIElement.IsFocused\n  - System.Windows.UIElement.IsFocusedProperty\n  - System.Windows.UIElement.IsHitTestVisible\n  - System.Windows.UIElement.IsHitTestVisibleChanged\n  - System.Windows.UIElement.IsHitTestVisibleProperty\n  - System.Windows.UIElement.IsInputMethodEnabled\n  - System.Windows.UIElement.IsKeyboardFocused\n  - System.Windows.UIElement.IsKeyboardFocusedChanged\n  - System.Windows.UIElement.IsKeyboardFocusedProperty\n  - System.Windows.UIElement.IsKeyboardFocusWithin\n  - System.Windows.UIElement.IsKeyboardFocusWithinChanged\n  - System.Windows.UIElement.IsKeyboardFocusWithinProperty\n  - System.Windows.UIElement.IsManipulationEnabled\n  - System.Windows.UIElement.IsManipulationEnabledProperty\n  - System.Windows.UIElement.IsMeasureValid\n  - System.Windows.UIElement.IsMouseCaptured\n  - System.Windows.UIElement.IsMouseCapturedChanged\n  - System.Windows.UIElement.IsMouseCapturedProperty\n  - System.Windows.UIElement.IsMouseCaptureWithin\n  - System.Windows.UIElement.IsMouseCaptureWithinChanged\n  - System.Windows.UIElement.IsMouseCaptureWithinProperty\n  - System.Windows.UIElement.IsMouseDirectlyOver\n  - System.Windows.UIElement.IsMouseDirectlyOverChanged\n  - System.Windows.UIElement.IsMouseDirectlyOverProperty\n  - System.Windows.UIElement.IsMouseOver\n  - System.Windows.UIElement.IsMouseOverProperty\n  - System.Windows.UIElement.IsStylusCaptured\n  - System.Windows.UIElement.IsStylusCapturedChanged\n  - System.Windows.UIElement.IsStylusCapturedProperty\n  - System.Windows.UIElement.IsStylusCaptureWithin\n  - System.Windows.UIElement.IsStylusCaptureWithinChanged\n  - System.Windows.UIElement.IsStylusCaptureWithinProperty\n  - System.Windows.UIElement.IsStylusDirectlyOver\n  - System.Windows.UIElement.IsStylusDirectlyOverChanged\n  - System.Windows.UIElement.IsStylusDirectlyOverProperty\n  - System.Windows.UIElement.IsStylusOver\n  - System.Windows.UIElement.IsStylusOverProperty\n  - System.Windows.UIElement.IsVisible\n  - System.Windows.UIElement.IsVisibleChanged\n  - System.Windows.UIElement.IsVisibleProperty\n  - System.Windows.UIElement.KeyDown\n  - System.Windows.UIElement.KeyDownEvent\n  - System.Windows.UIElement.KeyUp\n  - System.Windows.UIElement.KeyUpEvent\n  - System.Windows.UIElement.LayoutUpdated\n  - System.Windows.UIElement.LostFocus\n  - System.Windows.UIElement.LostFocusEvent\n  - System.Windows.UIElement.LostKeyboardFocus\n  - System.Windows.UIElement.LostKeyboardFocusEvent\n  - System.Windows.UIElement.LostMouseCapture\n  - System.Windows.UIElement.LostMouseCaptureEvent\n  - System.Windows.UIElement.LostStylusCapture\n  - System.Windows.UIElement.LostStylusCaptureEvent\n  - System.Windows.UIElement.LostTouchCapture\n  - System.Windows.UIElement.LostTouchCaptureEvent\n  - System.Windows.UIElement.ManipulationBoundaryFeedback\n  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent\n  - System.Windows.UIElement.ManipulationCompleted\n  - System.Windows.UIElement.ManipulationCompletedEvent\n  - System.Windows.UIElement.ManipulationDelta\n  - System.Windows.UIElement.ManipulationDeltaEvent\n  - System.Windows.UIElement.ManipulationInertiaStarting\n  - System.Windows.UIElement.ManipulationInertiaStartingEvent\n  - System.Windows.UIElement.ManipulationStarted\n  - System.Windows.UIElement.ManipulationStartedEvent\n  - System.Windows.UIElement.ManipulationStarting\n  - System.Windows.UIElement.ManipulationStartingEvent\n  - System.Windows.UIElement.Measure(System.Windows.Size)\n  - System.Windows.UIElement.MouseDown\n  - System.Windows.UIElement.MouseDownEvent\n  - System.Windows.UIElement.MouseEnter\n  - System.Windows.UIElement.MouseEnterEvent\n  - System.Windows.UIElement.MouseLeave\n  - System.Windows.UIElement.MouseLeaveEvent\n  - System.Windows.UIElement.MouseLeftButtonDown\n  - System.Windows.UIElement.MouseLeftButtonDownEvent\n  - System.Windows.UIElement.MouseLeftButtonUp\n  - System.Windows.UIElement.MouseLeftButtonUpEvent\n  - System.Windows.UIElement.MouseMove\n  - System.Windows.UIElement.MouseMoveEvent\n  - System.Windows.UIElement.MouseRightButtonDown\n  - System.Windows.UIElement.MouseRightButtonDownEvent\n  - System.Windows.UIElement.MouseRightButtonUp\n  - System.Windows.UIElement.MouseRightButtonUpEvent\n  - System.Windows.UIElement.MouseUp\n  - System.Windows.UIElement.MouseUpEvent\n  - System.Windows.UIElement.MouseWheel\n  - System.Windows.UIElement.MouseWheelEvent\n  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)\n  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)\n  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)\n  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)\n  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)\n  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)\n  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)\n  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)\n  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)\n  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)\n  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)\n  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)\n  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)\n  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)\n  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)\n  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)\n  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)\n  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)\n  - System.Windows.UIElement.Opacity\n  - System.Windows.UIElement.OpacityMask\n  - System.Windows.UIElement.OpacityMaskProperty\n  - System.Windows.UIElement.OpacityProperty\n  - System.Windows.UIElement.PersistId\n  - System.Windows.UIElement.PreviewDragEnter\n  - System.Windows.UIElement.PreviewDragEnterEvent\n  - System.Windows.UIElement.PreviewDragLeave\n  - System.Windows.UIElement.PreviewDragLeaveEvent\n  - System.Windows.UIElement.PreviewDragOver\n  - System.Windows.UIElement.PreviewDragOverEvent\n  - System.Windows.UIElement.PreviewDrop\n  - System.Windows.UIElement.PreviewDropEvent\n  - System.Windows.UIElement.PreviewGiveFeedback\n  - System.Windows.UIElement.PreviewGiveFeedbackEvent\n  - System.Windows.UIElement.PreviewGotKeyboardFocus\n  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewKeyDown\n  - System.Windows.UIElement.PreviewKeyDownEvent\n  - System.Windows.UIElement.PreviewKeyUp\n  - System.Windows.UIElement.PreviewKeyUpEvent\n  - System.Windows.UIElement.PreviewLostKeyboardFocus\n  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent\n  - System.Windows.UIElement.PreviewMouseDown\n  - System.Windows.UIElement.PreviewMouseDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonDown\n  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseLeftButtonUp\n  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseMove\n  - System.Windows.UIElement.PreviewMouseMoveEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonDown\n  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent\n  - System.Windows.UIElement.PreviewMouseRightButtonUp\n  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent\n  - System.Windows.UIElement.PreviewMouseUp\n  - System.Windows.UIElement.PreviewMouseUpEvent\n  - System.Windows.UIElement.PreviewMouseWheel\n  - System.Windows.UIElement.PreviewMouseWheelEvent\n  - System.Windows.UIElement.PreviewQueryContinueDrag\n  - System.Windows.UIElement.PreviewQueryContinueDragEvent\n  - System.Windows.UIElement.PreviewStylusButtonDown\n  - System.Windows.UIElement.PreviewStylusButtonDownEvent\n  - System.Windows.UIElement.PreviewStylusButtonUp\n  - System.Windows.UIElement.PreviewStylusButtonUpEvent\n  - System.Windows.UIElement.PreviewStylusDown\n  - System.Windows.UIElement.PreviewStylusDownEvent\n  - System.Windows.UIElement.PreviewStylusInAirMove\n  - System.Windows.UIElement.PreviewStylusInAirMoveEvent\n  - System.Windows.UIElement.PreviewStylusInRange\n  - System.Windows.UIElement.PreviewStylusInRangeEvent\n  - System.Windows.UIElement.PreviewStylusMove\n  - System.Windows.UIElement.PreviewStylusMoveEvent\n  - System.Windows.UIElement.PreviewStylusOutOfRange\n  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent\n  - System.Windows.UIElement.PreviewStylusSystemGesture\n  - System.Windows.UIElement.PreviewStylusSystemGestureEvent\n  - System.Windows.UIElement.PreviewStylusUp\n  - System.Windows.UIElement.PreviewStylusUpEvent\n  - System.Windows.UIElement.PreviewTextInput\n  - System.Windows.UIElement.PreviewTextInputEvent\n  - System.Windows.UIElement.PreviewTouchDown\n  - System.Windows.UIElement.PreviewTouchDownEvent\n  - System.Windows.UIElement.PreviewTouchMove\n  - System.Windows.UIElement.PreviewTouchMoveEvent\n  - System.Windows.UIElement.PreviewTouchUp\n  - System.Windows.UIElement.PreviewTouchUpEvent\n  - System.Windows.UIElement.QueryContinueDrag\n  - System.Windows.UIElement.QueryContinueDragEvent\n  - System.Windows.UIElement.QueryCursor\n  - System.Windows.UIElement.QueryCursorEvent\n  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)\n  - System.Windows.UIElement.ReleaseAllTouchCaptures\n  - System.Windows.UIElement.ReleaseMouseCapture\n  - System.Windows.UIElement.ReleaseStylusCapture\n  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)\n  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.UIElement.RenderSize\n  - System.Windows.UIElement.RenderTransform\n  - System.Windows.UIElement.RenderTransformOrigin\n  - System.Windows.UIElement.RenderTransformOriginProperty\n  - System.Windows.UIElement.RenderTransformProperty\n  - System.Windows.UIElement.ShouldSerializeCommandBindings\n  - System.Windows.UIElement.ShouldSerializeInputBindings\n  - System.Windows.UIElement.SnapsToDevicePixels\n  - System.Windows.UIElement.SnapsToDevicePixelsProperty\n  - System.Windows.UIElement.StylusButtonDown\n  - System.Windows.UIElement.StylusButtonDownEvent\n  - System.Windows.UIElement.StylusButtonUp\n  - System.Windows.UIElement.StylusButtonUpEvent\n  - System.Windows.UIElement.StylusDown\n  - System.Windows.UIElement.StylusDownEvent\n  - System.Windows.UIElement.StylusEnter\n  - System.Windows.UIElement.StylusEnterEvent\n  - System.Windows.UIElement.StylusInAirMove\n  - System.Windows.UIElement.StylusInAirMoveEvent\n  - System.Windows.UIElement.StylusInRange\n  - System.Windows.UIElement.StylusInRangeEvent\n  - System.Windows.UIElement.StylusLeave\n  - System.Windows.UIElement.StylusLeaveEvent\n  - System.Windows.UIElement.StylusMove\n  - System.Windows.UIElement.StylusMoveEvent\n  - System.Windows.UIElement.StylusOutOfRange\n  - System.Windows.UIElement.StylusOutOfRangeEvent\n  - System.Windows.UIElement.StylusPlugIns\n  - System.Windows.UIElement.StylusSystemGesture\n  - System.Windows.UIElement.StylusSystemGestureEvent\n  - System.Windows.UIElement.StylusUp\n  - System.Windows.UIElement.StylusUpEvent\n  - System.Windows.UIElement.TextInput\n  - System.Windows.UIElement.TextInputEvent\n  - System.Windows.UIElement.TouchDown\n  - System.Windows.UIElement.TouchDownEvent\n  - System.Windows.UIElement.TouchEnter\n  - System.Windows.UIElement.TouchEnterEvent\n  - System.Windows.UIElement.TouchesCaptured\n  - System.Windows.UIElement.TouchesCapturedWithin\n  - System.Windows.UIElement.TouchesDirectlyOver\n  - System.Windows.UIElement.TouchesOver\n  - System.Windows.UIElement.TouchLeave\n  - System.Windows.UIElement.TouchLeaveEvent\n  - System.Windows.UIElement.TouchMove\n  - System.Windows.UIElement.TouchMoveEvent\n  - System.Windows.UIElement.TouchUp\n  - System.Windows.UIElement.TouchUpEvent\n  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)\n  - System.Windows.UIElement.Uid\n  - System.Windows.UIElement.UidProperty\n  - System.Windows.UIElement.UpdateLayout\n  - System.Windows.UIElement.Visibility\n  - System.Windows.UIElement.VisibilityProperty\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.#ctor\n  id: '#ctor'\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: RichTextBox()\n  nameWithType: RichTextBox.RichTextBox()\n  fullName: System.Windows.Controls.RichTextBox.RichTextBox()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new, default instance of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> class.\n  remarks: This constructor creates an empty <xref:System.Windows.Documents.FlowDocument> that is associated with the Document property.  Specifically, the empty <xref:System.Windows.Documents.FlowDocument> contains a single <xref:System.Windows.Documents.Paragraph>, which contains a single <xref:System.Windows.Documents.Run> which contains no text.\n  syntax:\n    content: public RichTextBox ();\n    parameters: []\n  overload: System.Windows.Controls.RichTextBox.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)\n  id: '#ctor(System.Windows.Documents.FlowDocument)'\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: RichTextBox(FlowDocument)\n  nameWithType: RichTextBox.RichTextBox(FlowDocument)\n  fullName: System.Windows.Controls.RichTextBox.RichTextBox(FlowDocument)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> class, adding a specified <xref href=\"System.Windows.Documents.FlowDocument\"></xref> as the initial content.\n  remarks: ''\n  example:\n  - \"The following example illustrates use of this constructor.  \\n  \\n [!code-vb[RichTextBoxSnippets#_RTB_Constructor](~/add/codesnippet/visualbasic/richtextboxsnippets/window1.xaml.vb#_rtb_constructor)]\\n [!code-cs[RichTextBoxSnippets#_RTB_Constructor](~/add/codesnippet/csharp/RichTextBoxSnippets/Window1.xaml.cs#_rtb_constructor)]\"\n  syntax:\n    content: public RichTextBox (System.Windows.Documents.FlowDocument document);\n    parameters:\n    - id: document\n      type: System.Windows.Documents.FlowDocument\n      description: A <xref href=\"System.Windows.Documents.FlowDocument\"></xref> to be added as the initial contents of the new <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  overload: System.Windows.Controls.RichTextBox.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.CaretPosition\n  id: CaretPosition\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: CaretPosition\n  nameWithType: RichTextBox.CaretPosition\n  fullName: System.Windows.Controls.RichTextBox.CaretPosition\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the position of the input caret.\n  remarks: ''\n  example:\n  - \"The following example illustrates the use of this property.  \\n  \\n [!code-vb[RichTextBoxSnippets#_RTB_CaretPosition](~/add/codesnippet/visualbasic/richtextboxsnippets/window1.xaml.vb#_rtb_caretposition)]\\n [!code-cs[RichTextBoxSnippets#_RTB_CaretPosition](~/add/codesnippet/csharp/RichTextBoxSnippets/Window1.xaml.cs#_rtb_caretposition)]\"\n  syntax:\n    content: public System.Windows.Documents.TextPointer CaretPosition { get; set; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: \"A <xref href=\\\"System.Windows.Documents.TextPointer\\\"></xref> object specifying the position of the input caret.  \\n  \\n By default, the caret is at the first insertion position at the beginning of the content hosted by the <xref href=\\\"System.Windows.Controls.RichTextBox\\\"></xref>. See <xref href=\\\"System.Windows.Documents.TextPointer\\\"></xref> for more information on text position terminology like \\\"insertion position\\\".\"\n  overload: System.Windows.Controls.RichTextBox.CaretPosition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set this property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set this property to a <xref href=\"System.Windows.Documents.TextPointer\"></xref> that references a position outside of the current document.\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.Document\n  id: Document\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: Document\n  nameWithType: RichTextBox.Document\n  fullName: System.Windows.Controls.RichTextBox.Document\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the <xref href=\"System.Windows.Documents.FlowDocument\"></xref> that represents the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: A FlowDocument may only be hosted by a single <xref:System.Windows.Controls.RichTextBox>.  Specifying a single FlowDocument as the contents of multiple <xref:System.Windows.Controls.RichTextBox> controls is not supported.\n  example:\n  - \"The following example illustrates the use of this property.  \\n  \\n [!code-vb[RichTextBoxSnippets#_RTB_Document](~/add/codesnippet/visualbasic/richtextboxsnippets/window1.xaml.vb#_rtb_document)]\\n [!code-cs[RichTextBoxSnippets#_RTB_Document](~/add/codesnippet/csharp/RichTextBoxSnippets/Window1.xaml.cs#_rtb_document)]\"\n  syntax:\n    content: public System.Windows.Documents.FlowDocument Document { get; set; }\n    return:\n      type: System.Windows.Documents.FlowDocument\n      description: \"A <xref href=\\\"System.Windows.Documents.FlowDocument\\\"></xref> object that represents the contents of the <xref href=\\\"System.Windows.Controls.RichTextBox\\\"></xref>.  \\n  \\n By default, this property is set to an empty <xref href=\\\"System.Windows.Documents.FlowDocument\\\"></xref>.  Specifically, the empty <xref href=\\\"System.Windows.Documents.FlowDocument\\\"></xref> contains a single <xref href=\\\"System.Windows.Documents.Paragraph\\\"></xref>, which contains a single <xref href=\\\"System.Windows.Documents.Run\\\"></xref> which contains no text.\"\n  overload: System.Windows.Controls.RichTextBox.Document*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt is made to set this property to <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set this property to a <xref href=\"System.Windows.Documents.FlowDocument\"></xref> that represents the contents of another <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property is set while a change block has been activated.\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)\n  id: GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: GetNextSpellingErrorPosition(TextPointer,LogicalDirection)\n  nameWithType: RichTextBox.GetNextSpellingErrorPosition(TextPointer,LogicalDirection)\n  fullName: System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(TextPointer,LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the next spelling error in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetNextSpellingErrorPosition (System.Windows.Documents.TextPointer position, System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: position\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> indicating a position from which to search for the next spelling error.\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: A <xref href=\"System.Windows.Documents.LogicalDirection\"></xref> in which to search for the next spelling error, starting at the specified `posision`.\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the next spelling error in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no next spelling error exists.\n  overload: System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  id: GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: GetPositionFromPoint(Point,Boolean)\n  nameWithType: RichTextBox.GetPositionFromPoint(Point,Boolean)\n  fullName: System.Windows.Controls.RichTextBox.GetPositionFromPoint(Point,Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Documents.TextPointer\"></xref> that points to the insertion point closest to the specified position.\n  remarks: <xref:System.Windows.Controls.RichTextBox> uses a standard coordinate system with the origin located at the upper-left corner of the <xref:System.Windows.Controls.RichTextBox>.\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetPositionFromPoint (System.Windows.Point point, bool snapToText);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: A <xref href=\"System.Windows.Point\"></xref> object specifying the position to retrieve a <xref href=\"System.Windows.Documents.TextPointer\"></xref> for.\n    - id: snapToText\n      type: System.Boolean\n      description: \"If <xref uid=\\\"langword_csharp_true\\\" name=\\\"true\\\" href=\\\"\\\"></xref>, this method always returns a <xref href=\\\"System.Windows.Documents.TextPointer\\\"></xref> specifying the closest insertion position for the <xref href=\\\"System.Windows.Point\\\"></xref> specified, regardless or whether or not the supplied <xref href=\\\"System.Windows.Point\\\"></xref> is inside a character's bounding box.  \\n  \\n If <xref uid=\\\"langword_csharp_false\\\" name=\\\"false\\\" href=\\\"\\\"></xref>, this method returns <xref uid=\\\"langword_csharp_null\\\" name=\\\"null\\\" href=\\\"\\\"></xref> if the specified <xref href=\\\"System.Windows.Point\\\"></xref> does not fall within any character bounding box.\"\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> specifying the closest insertion position for the supplied point, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if <code>snapToText</code> is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> and the supplied <xref href=\"System.Windows.Point\"></xref> is not within any character's bounding box. Note that the <xref href=\"System.Windows.Documents.TextPointer\"></xref> returned is usually the position between two characters. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of the returned <xref href=\"System.Windows.Documents.TextPointer\"></xref> to determine which of the two characters the <xref href=\"System.Windows.Documents.TextPointer\"></xref> corresponds to.\n  overload: System.Windows.Controls.RichTextBox.GetPositionFromPoint*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Raised if layout information for the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> is not current.\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)\n  id: GetSpellingError(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: GetSpellingError(TextPointer)\n  nameWithType: RichTextBox.GetSpellingError(TextPointer)\n  fullName: System.Windows.Controls.RichTextBox.GetSpellingError(TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Controls.SpellingError\"></xref> object associated with any spelling error at a specified position in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: A <xref:System.Windows.Documents.TextPointer> like `position` usually specifies a position between two characters. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property of `position` to specify which character to examine.\n  syntax:\n    content: public System.Windows.Controls.SpellingError GetSpellingError (System.Windows.Documents.TextPointer position);\n    parameters:\n    - id: position\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of this <xref href=\"System.Windows.Documents.TextPointer\"></xref> to specify the direction of the character to examine.\n    return:\n      type: System.Windows.Controls.SpellingError\n      description: A <xref href=\"System.Windows.Controls.SpellingError\"></xref> object containing the details of the spelling error found at the character indicated by <code>position</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no spelling error exists at the specified character.\n  overload: System.Windows.Controls.RichTextBox.GetSpellingError*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)\n  id: GetSpellingErrorRange(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: GetSpellingErrorRange(TextPointer)\n  nameWithType: RichTextBox.GetSpellingErrorRange(TextPointer)\n  fullName: System.Windows.Controls.RichTextBox.GetSpellingErrorRange(TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a <xref href=\"System.Windows.Documents.TextRange\"></xref> object covering any misspelled word at a specified position in the contents of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: A <xref:System.Windows.Documents.TextPointer> like `position` usually specifies a position between two characters. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property of `position` to specify which character to examine.\n  syntax:\n    content: public System.Windows.Documents.TextRange GetSpellingErrorRange (System.Windows.Documents.TextPointer position);\n    parameters:\n    - id: position\n      type: System.Windows.Documents.TextPointer\n      description: A <xref href=\"System.Windows.Documents.TextPointer\"></xref> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <xref:System.Windows.Documents.TextPointer.LogicalDirection*> property of this <xref href=\"System.Windows.Documents.TextPointer\"></xref> to specify the direction of the character to examine.\n    return:\n      type: System.Windows.Documents.TextRange\n      description: A <xref href=\"System.Windows.Documents.TextRange\"></xref> object covering any misspelled word that includes the character specified by <code>position</code>, or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> if no spelling error exists at the specified character.\n  overload: System.Windows.Controls.RichTextBox.GetSpellingErrorRange*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.IsDocumentEnabled\n  id: IsDocumentEnabled\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: IsDocumentEnabled\n  nameWithType: RichTextBox.IsDocumentEnabled\n  fullName: System.Windows.Controls.RichTextBox.IsDocumentEnabled\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets a value that indicates whether the user can interact with <xref href=\"System.Windows.UIElement\"></xref> and <xref href=\"System.Windows.ContentElement\"></xref> objects within the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: IsDocumentEnabled is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/add/includes/ajax-current-ext-md.md).\n  example:\n  - \"The following example creates <xref:System.Windows.Controls.CheckBox> and a <xref:System.Windows.Controls.RichTextBox> that contains a <xref:System.Windows.Documents.Hyperlink> and a <xref:System.Windows.Controls.Button>.  The IsDocumentEnabled property of the <xref:System.Windows.Controls.RichTextBox> is bound to the <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> property of the <xref:System.Windows.Controls.CheckBox>.  When the user selects the <xref:System.Windows.Controls.CheckBox>, the user can interact with the <xref:System.Windows.Controls.Button> and <xref:System.Windows.Documents.Hyperlink>. When the user clears the <xref:System.Windows.Controls.CheckBox>, the <xref:System.Windows.Controls.Button> and <xref:System.Windows.Documents.Hyperlink> are disabled.  \\n  \\n [!code-xml[RTBIsDocumentEnabled#1](~/add/codesnippet/xaml/p-system.windows.control_112_1.xaml)]\\n [!code-xml[RTBIsDocumentEnabled#1](~/add/codesnippet/xaml/rtbisdocumentenabled2/Window1.xaml#1)]\"\n  syntax:\n    content: public bool IsDocumentEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the user can interact with <xref href=\"System.Windows.UIElement\"></xref> and <xref href=\"System.Windows.ContentElement\"></xref> objects within the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.RichTextBox.IsDocumentEnabled*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty\n  id: IsDocumentEnabledProperty\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: IsDocumentEnabledProperty\n  nameWithType: RichTextBox.IsDocumentEnabledProperty\n  fullName: System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Identifies the <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled*> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsDocumentEnabledProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.LogicalChildren\n  id: LogicalChildren\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: LogicalChildren\n  nameWithType: RichTextBox.LogicalChildren\n  fullName: System.Windows.Controls.RichTextBox.LogicalChildren\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets an enumerator that can iterate the logical children of the <xref uid=\"langword_csharp_RichTextBox\" name=\"RichTextBox\" href=\"\"></xref>.\n  syntax:\n    content: protected override System.Collections.IEnumerator LogicalChildren { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator for the logical children.\n  overload: System.Windows.Controls.RichTextBox.LogicalChildren*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)\n  id: MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: MeasureOverride(Size)\n  nameWithType: RichTextBox.MeasureOverride(Size)\n  fullName: System.Windows.Controls.RichTextBox.MeasureOverride(Size)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called to re-measure the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: This method overrides <xref:System.Windows.Controls.Control.MeasureOverride%2A>.\n  syntax:\n    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);\n    parameters:\n    - id: constraint\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure specifying constraints on the size of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n    return:\n      type: System.Windows.Size\n      description: A <xref href=\"System.Windows.Size\"></xref> structure indicating the new size of the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  overload: System.Windows.Controls.RichTextBox.MeasureOverride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.OnCreateAutomationPeer\n  id: OnCreateAutomationPeer\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: OnCreateAutomationPeer()\n  nameWithType: RichTextBox.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.RichTextBox.OnCreateAutomationPeer()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Creates and returns an <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.\n  syntax:\n    content: protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Peers.AutomationPeer\n      description: An <xref href=\"System.Windows.Automation.Peers.AutomationPeer\"></xref> object for this <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  overload: System.Windows.Controls.RichTextBox.OnCreateAutomationPeer*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  id: OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: OnDpiChanged(DpiScale,DpiScale)\n  nameWithType: RichTextBox.OnDpiChanged(DpiScale,DpiScale)\n  fullName: System.Windows.Controls.RichTextBox.OnDpiChanged(DpiScale,DpiScale)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Called when the DPI at which this Rich Text Box is rendered changes.\n  syntax:\n    content: protected override void OnDpiChanged (System.Windows.DpiScale oldDpiScaleInfo, System.Windows.DpiScale newDpiScaleInfo);\n    parameters:\n    - id: oldDpiScaleInfo\n      type: System.Windows.DpiScale\n      description: The previous DPI scale setting.\n    - id: newDpiScaleInfo\n      type: System.Windows.DpiScale\n      description: The new DPI scale setting.\n  overload: System.Windows.Controls.RichTextBox.OnDpiChanged*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.Selection\n  id: Selection\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: Selection\n  nameWithType: RichTextBox.Selection\n  fullName: System.Windows.Controls.RichTextBox.Selection\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a <xref href=\"System.Windows.Documents.TextSelection\"></xref> object containing the current selection in the <xref href=\"System.Windows.Controls.RichTextBox\"></xref>.\n  remarks: Use the <xref:System.Windows.Documents.TextRange.Select%2A> method to programmatically select content.\n  example:\n  - \"The following example illustrates the use of this property.  \\n  \\n [!code-vb[RichTextBoxSnippets#_RTB_Selection](~/add/codesnippet/visualbasic/richtextboxsnippets/window1.xaml.vb#_rtb_selection)]\\n [!code-cs[RichTextBoxSnippets#_RTB_Selection](~/add/codesnippet/csharp/RichTextBoxSnippets/Window1.xaml.cs#_rtb_selection)]\"\n  syntax:\n    content: public System.Windows.Documents.TextSelection Selection { get; }\n    return:\n      type: System.Windows.Documents.TextSelection\n      description: \"A <xref href=\\\"System.Windows.Documents.TextSelection\\\"></xref> object containing the current selection in the <xref href=\\\"System.Windows.Controls.RichTextBox\\\"></xref>.  \\n  \\n The default returned <xref href=\\\"System.Windows.Documents.TextSelection\\\"></xref> has an <xref:System.Windows.Documents.TextRange.IsEmpty*> property value of <xref uid=\\\"langword_csharp_True\\\" name=\\\"True\\\" href=\\\"\\\"></xref>. An empty <xref href=\\\"System.Windows.Documents.TextSelection\\\"></xref> renders as a caret in the text area with no selection.\"\n  overload: System.Windows.Controls.RichTextBox.Selection*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.ShouldSerializeDocument\n  id: ShouldSerializeDocument\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: ShouldSerializeDocument()\n  nameWithType: RichTextBox.ShouldSerializeDocument()\n  fullName: System.Windows.Controls.RichTextBox.ShouldSerializeDocument()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Returns a value that indicates whether or not the effective value of the <xref:System.Windows.Controls.RichTextBox.Document*> property should be serialized during serialization of a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> object.\n  syntax:\n    content: public bool ShouldSerializeDocument ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the <xref:System.Windows.Controls.RichTextBox.Document*> property should be serialized; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.Windows.Controls.RichTextBox.ShouldSerializeDocument*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  id: System#Windows#Markup#IAddChild#AddChild(System.Object)\n  isEii: true\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: RichTextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.RichTextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IAddChild.AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to add as a child.\n  overload: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)\n  id: System#Windows#Markup#IAddChild#AddText(System.String)\n  isEii: true\n  parent: System.Windows.Controls.RichTextBox\n  langs:\n  - csharp\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: RichTextBox.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.RichTextBox.System.Windows.Markup.IAddChild.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IAddChild.AddText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: A string to add to the object.\n  overload: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Windows.Controls.Primitives.TextBoxBase\n  isExternal: false\n  name: System.Windows.Controls.Primitives.TextBoxBase\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.Windows.Controls.RichTextBox.#ctor\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: RichTextBox()\n  nameWithType: RichTextBox.RichTextBox()\n  fullName: System.Windows.Controls.RichTextBox.RichTextBox()\n- uid: System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: RichTextBox(FlowDocument)\n  nameWithType: RichTextBox.RichTextBox(FlowDocument)\n  fullName: System.Windows.Controls.RichTextBox.RichTextBox(FlowDocument)\n- uid: System.Windows.Documents.FlowDocument\n  parent: System.Windows.Documents\n  isExternal: false\n  name: FlowDocument\n  nameWithType: FlowDocument\n  fullName: System.Windows.Documents.FlowDocument\n- uid: System.Windows.Controls.RichTextBox.CaretPosition\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: CaretPosition\n  nameWithType: RichTextBox.CaretPosition\n  fullName: System.Windows.Controls.RichTextBox.CaretPosition\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Controls.RichTextBox.Document\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: Document\n  nameWithType: RichTextBox.Document\n  fullName: System.Windows.Controls.RichTextBox.Document\n- uid: System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetNextSpellingErrorPosition(TextPointer,LogicalDirection)\n  nameWithType: RichTextBox.GetNextSpellingErrorPosition(TextPointer,LogicalDirection)\n  fullName: System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(TextPointer,LogicalDirection)\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetPositionFromPoint(Point,Boolean)\n  nameWithType: RichTextBox.GetPositionFromPoint(Point,Boolean)\n  fullName: System.Windows.Controls.RichTextBox.GetPositionFromPoint(Point,Boolean)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetSpellingError(TextPointer)\n  nameWithType: RichTextBox.GetSpellingError(TextPointer)\n  fullName: System.Windows.Controls.RichTextBox.GetSpellingError(TextPointer)\n- uid: System.Windows.Controls.SpellingError\n  parent: System.Windows.Controls\n  isExternal: false\n  name: SpellingError\n  nameWithType: SpellingError\n  fullName: System.Windows.Controls.SpellingError\n- uid: System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetSpellingErrorRange(TextPointer)\n  nameWithType: RichTextBox.GetSpellingErrorRange(TextPointer)\n  fullName: System.Windows.Controls.RichTextBox.GetSpellingErrorRange(TextPointer)\n- uid: System.Windows.Documents.TextRange\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextRange\n  nameWithType: TextRange\n  fullName: System.Windows.Documents.TextRange\n- uid: System.Windows.Controls.RichTextBox.IsDocumentEnabled\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: IsDocumentEnabled\n  nameWithType: RichTextBox.IsDocumentEnabled\n  fullName: System.Windows.Controls.RichTextBox.IsDocumentEnabled\n- uid: System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: IsDocumentEnabledProperty\n  nameWithType: RichTextBox.IsDocumentEnabledProperty\n  fullName: System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Controls.RichTextBox.LogicalChildren\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: RichTextBox.LogicalChildren\n  fullName: System.Windows.Controls.RichTextBox.LogicalChildren\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: true\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: MeasureOverride(Size)\n  nameWithType: RichTextBox.MeasureOverride(Size)\n  fullName: System.Windows.Controls.RichTextBox.MeasureOverride(Size)\n- uid: System.Windows.Size\n  parent: System.Windows\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Windows.Size\n- uid: System.Windows.Controls.RichTextBox.OnCreateAutomationPeer\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: OnCreateAutomationPeer()\n  nameWithType: RichTextBox.OnCreateAutomationPeer()\n  fullName: System.Windows.Controls.RichTextBox.OnCreateAutomationPeer()\n- uid: System.Windows.Automation.Peers.AutomationPeer\n  parent: System.Windows.Automation.Peers\n  isExternal: false\n  name: AutomationPeer\n  nameWithType: AutomationPeer\n  fullName: System.Windows.Automation.Peers.AutomationPeer\n- uid: System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: OnDpiChanged(DpiScale,DpiScale)\n  nameWithType: RichTextBox.OnDpiChanged(DpiScale,DpiScale)\n  fullName: System.Windows.Controls.RichTextBox.OnDpiChanged(DpiScale,DpiScale)\n- uid: System.Windows.DpiScale\n  parent: System.Windows\n  isExternal: false\n  name: DpiScale\n  nameWithType: DpiScale\n  fullName: System.Windows.DpiScale\n- uid: System.Windows.Controls.RichTextBox.Selection\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: Selection\n  nameWithType: RichTextBox.Selection\n  fullName: System.Windows.Controls.RichTextBox.Selection\n- uid: System.Windows.Documents.TextSelection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextSelection\n  nameWithType: TextSelection\n  fullName: System.Windows.Documents.TextSelection\n- uid: System.Windows.Controls.RichTextBox.ShouldSerializeDocument\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: ShouldSerializeDocument()\n  nameWithType: RichTextBox.ShouldSerializeDocument()\n  fullName: System.Windows.Controls.RichTextBox.ShouldSerializeDocument()\n- uid: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild(Object)\n  nameWithType: RichTextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n  fullName: System.Windows.Controls.RichTextBox.System.Windows.Markup.IAddChild.AddChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText(String)\n  nameWithType: RichTextBox.System.Windows.Markup.IAddChild.AddText(String)\n  fullName: System.Windows.Controls.RichTextBox.System.Windows.Markup.IAddChild.AddText(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.RichTextBox.#ctor*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: RichTextBox\n  nameWithType: RichTextBox.RichTextBox\n- uid: System.Windows.Controls.RichTextBox.CaretPosition*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: CaretPosition\n  nameWithType: RichTextBox.CaretPosition\n- uid: System.Windows.Controls.RichTextBox.Document*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: Document\n  nameWithType: RichTextBox.Document\n- uid: System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetNextSpellingErrorPosition\n  nameWithType: RichTextBox.GetNextSpellingErrorPosition\n- uid: System.Windows.Controls.RichTextBox.GetPositionFromPoint*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetPositionFromPoint\n  nameWithType: RichTextBox.GetPositionFromPoint\n- uid: System.Windows.Controls.RichTextBox.GetSpellingError*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetSpellingError\n  nameWithType: RichTextBox.GetSpellingError\n- uid: System.Windows.Controls.RichTextBox.GetSpellingErrorRange*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: GetSpellingErrorRange\n  nameWithType: RichTextBox.GetSpellingErrorRange\n- uid: System.Windows.Controls.RichTextBox.IsDocumentEnabled*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: IsDocumentEnabled\n  nameWithType: RichTextBox.IsDocumentEnabled\n- uid: System.Windows.Controls.RichTextBox.LogicalChildren*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: LogicalChildren\n  nameWithType: RichTextBox.LogicalChildren\n- uid: System.Windows.Controls.RichTextBox.MeasureOverride*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: MeasureOverride\n  nameWithType: RichTextBox.MeasureOverride\n- uid: System.Windows.Controls.RichTextBox.OnCreateAutomationPeer*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: OnCreateAutomationPeer\n  nameWithType: RichTextBox.OnCreateAutomationPeer\n- uid: System.Windows.Controls.RichTextBox.OnDpiChanged*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: OnDpiChanged\n  nameWithType: RichTextBox.OnDpiChanged\n- uid: System.Windows.Controls.RichTextBox.Selection*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: Selection\n  nameWithType: RichTextBox.Selection\n- uid: System.Windows.Controls.RichTextBox.ShouldSerializeDocument*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: ShouldSerializeDocument\n  nameWithType: RichTextBox.ShouldSerializeDocument\n- uid: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddChild\n  nameWithType: RichTextBox.System.Windows.Markup.IAddChild.AddChild\n- uid: System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText*\n  parent: System.Windows.Controls.RichTextBox\n  isExternal: false\n  name: System.Windows.Markup.IAddChild.AddText\n  nameWithType: RichTextBox.System.Windows.Markup.IAddChild.AddText\n"}