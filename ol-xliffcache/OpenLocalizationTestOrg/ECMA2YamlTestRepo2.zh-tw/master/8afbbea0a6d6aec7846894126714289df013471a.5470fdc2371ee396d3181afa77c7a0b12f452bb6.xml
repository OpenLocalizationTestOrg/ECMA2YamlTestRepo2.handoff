{"nodes":[{"pos":[701,760],"content":"Provides information about ASP.NET authentication failures.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides information about ASP.NET authentication failures.","pos":[0,59]}]},{"pos":[773,2853],"content":"The following list describes the features for which WebAuthenticationFailureAuditEvent events are raised by default by ASP.NET.      > [!NOTE] >  By default ASP.NET is configured to log audit failure conditions only, as logging success conditions can severely strain system resources. You can always configure the system to log the success conditions.      -   Forms Authentication. While success audits include the user name that was authenticated; failure audits do not include the user name, since they typically result from a ticket that failed decryption or validation. Both contain the client IP address. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>.      -   Membership. Both success and failure audits contain the username that was attempted. Neither form of audit will contain the password that was attempted, because that would risk persisting a valid password in the log. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>.       When a WebAuthenticationFailureAuditEvent is raised, by default it updates the Audit Authentication Failure Events Raised performance counter. To view this performance counter in System Monitor (PerfMon), in the **Add Counters** window select `ASP.NET` in the **Performance** object drop-down list, select the **Authentication Failure Events Raised** performance counter, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) on MSDN.      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the WebAuthenticationFailureAuditEvent class, see the example provided in this topic.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following list describes the features for which WebAuthenticationFailureAuditEvent events are raised by default by ASP.NET.","pos":[0,127]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  By default ASP.NET is configured to log audit failure conditions only, as logging success conditions can severely strain system resources.","pos":[133,284],"source":"      > [!NOTE] >  By default ASP.NET is configured to log audit failure conditions only, as logging success conditions can severely strain system resources."},{"content":"You can always configure the system to log the success conditions.","pos":[285,351]},{"content":"-   Forms Authentication.","pos":[357,382]},{"content":"While success audits include the user name that was authenticated; failure audits do not include the user name, since they typically result from a ticket that failed decryption or validation.","pos":[383,574]},{"content":"Both contain the client IP address.","pos":[575,610]},{"content":"The related event audit code is &lt;xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure&gt;.","pos":[611,718],"source":" The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>."},{"content":"-   Membership.","pos":[724,739]},{"content":"Both success and failure audits contain the username that was attempted.","pos":[740,812]},{"content":"Neither form of audit will contain the password that was attempted, because that would risk persisting a valid password in the log.","pos":[813,944]},{"content":"The related event audit code is &lt;xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure&gt;.","pos":[945,1057],"source":" The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>."},{"content":"When a WebAuthenticationFailureAuditEvent is raised, by default it updates the Audit Authentication Failure Events Raised performance counter.","pos":[1064,1206]},{"content":"To view this performance counter in System Monitor (PerfMon), in the <bpt id=\"p1\">**</bpt>Add Counters<ept id=\"p1\">**</ept> window select <ph id=\"ph1\">`ASP.NET`</ph> in the <bpt id=\"p2\">**</bpt>Performance<ept id=\"p2\">**</ept> object drop-down list, select the <bpt id=\"p3\">**</bpt>Authentication Failure Events Raised<ept id=\"p3\">**</ept> performance counter, and click the <bpt id=\"p4\">**</bpt>Add<ept id=\"p4\">**</ept> button.","pos":[1207,1465],"source":" To view this performance counter in System Monitor (PerfMon), in the **Add Counters** window select `ASP.NET` in the **Performance** object drop-down list, select the **Authentication Failure Events Raised** performance counter, and click the **Add** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using the System Monitor (PerfMon) with ASP.NET Applications<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=36882&amp;clcid=0x409)</ept> on MSDN.","pos":[1466,1621],"source":" For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) on MSDN."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section.","pos":[1627,1849],"source":"      > [!NOTE] >  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[1850,1950]},{"content":"For an example of deriving from the WebAuthenticationFailureAuditEvent class, see the example provided in this topic.","pos":[1951,2068]}]},{"pos":[5382,5536],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebAuthenticationFailureAuditEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified event parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebAuthenticationFailureAuditEvent\"></xref> class with the specified event parameters."},{"pos":[5548,5833],"content":"The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class.","pos":[0,285],"nodes":[{"content":"The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code.","pos":[0,102]},{"content":"It is called by ASP.NET.","pos":[103,127]},{"content":"You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the &lt;xref:System.Web.Management.WebAuthenticationFailureAuditEvent&gt; class.","pos":[128,285],"source":" You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class."}]}]},{"pos":[6415,6437],"content":"The event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event description.","pos":[0,22]}]},{"pos":[6505,6548],"content":"The object that is the source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]},{"pos":[6613,6706],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value associated with the event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value associated with the event."},{"pos":[6781,6818],"content":"The name of the user to authenticate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to authenticate.","pos":[0,37]}]},{"pos":[7674,7828],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebAuthenticationFailureAuditEvent\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified event parameters.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebAuthenticationFailureAuditEvent\"></xref> class with the specified event parameters."},{"pos":[7840,8125],"content":"The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class.","needQuote":true,"needEscape":true,"nodes":[{"content":"The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class.","pos":[0,285],"nodes":[{"content":"The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code.","pos":[0,102]},{"content":"It is called by ASP.NET.","pos":[103,127]},{"content":"You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the &lt;xref:System.Web.Management.WebAuthenticationFailureAuditEvent&gt; class.","pos":[128,285],"source":" You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class."}]}]},{"pos":[8728,8750],"content":"The event description.","needQuote":true,"needEscape":true,"nodes":[{"content":"The event description.","pos":[0,22]}]},{"pos":[8818,8861],"content":"The object that is the source of the event.","needQuote":true,"needEscape":true,"nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]},{"pos":[8926,9106],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]},{"pos":[9177,9297],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.Web.Management.WebEventCodes\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value that specifies the detailed identifier for the event.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event."},{"pos":[9372,9409],"content":"The name of the user to authenticate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to authenticate.","pos":[0,37]}]},{"pos":[9998,10040],"content":"Gets the name of the user to authenticate.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the user to authenticate.","pos":[0,42]}]},{"pos":[10052,10245],"content":"Only the success audits should include the name of the authenticated user. The failure audits should not include the user name, since they typically result from failed decryption or validation.","needQuote":true,"needEscape":true,"nodes":[{"content":"Only the success audits should include the name of the authenticated user. The failure audits should not include the user name, since they typically result from failed decryption or validation.","pos":[0,193],"nodes":[{"content":"Only the success audits should include the name of the authenticated user.","pos":[0,74]},{"content":"The failure audits should not include the user name, since they typically result from failed decryption or validation.","pos":[75,193]}]}]},{"pos":[10733,10770],"content":"The name of the user to authenticate.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the user to authenticate.","pos":[0,37]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent\n  id: WebAuthenticationFailureAuditEvent\n  children:\n  - System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)\n  - System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)\n  - System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate\n  langs:\n  - csharp\n  name: WebAuthenticationFailureAuditEvent\n  nameWithType: WebAuthenticationFailureAuditEvent\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent\n  type: Class\n  summary: Provides information about ASP.NET authentication failures.\n  remarks: \"The following list describes the features for which WebAuthenticationFailureAuditEvent events are raised by default by ASP.NET.  \\n  \\n> [!NOTE]\\n>  By default ASP.NET is configured to log audit failure conditions only, as logging success conditions can severely strain system resources. You can always configure the system to log the success conditions.  \\n  \\n-   Forms Authentication. While success audits include the user name that was authenticated; failure audits do not include the user name, since they typically result from a ticket that failed decryption or validation. Both contain the client IP address. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>.  \\n  \\n-   Membership. Both success and failure audits contain the username that was attempted. Neither form of audit will contain the password that was attempted, because that would risk persisting a valid password in the log. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>.  \\n  \\n When a WebAuthenticationFailureAuditEvent is raised, by default it updates the Audit Authentication Failure Events Raised performance counter. To view this performance counter in System Monitor (PerfMon), in the **Add Counters** window select `ASP.NET` in the **Performance** object drop-down list, select the **Authentication Failure Events Raised** performance counter, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) on MSDN.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the WebAuthenticationFailureAuditEvent class, see the example provided in this topic.\"\n  example:\n  - \"The following code example shows how to use the WebAuthenticationFailureAuditEvent class.  \\n  \\n [!code-cs[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._6_1.cs)]\\n [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._6_1.vb)]\"\n  syntax:\n    content: 'public class WebAuthenticationFailureAuditEvent : System.Web.Management.WebFailureAuditEvent'\n  inheritance:\n  - System.Object\n  - System.Web.Management.WebBaseEvent\n  - System.Web.Management.WebManagementEvent\n  - System.Web.Management.WebAuditEvent\n  - System.Web.Management.WebFailureAuditEvent\n  implements: []\n  inheritedMembers:\n  - System.Web.Management.WebAuditEvent.RequestInformation\n  - System.Web.Management.WebBaseEvent.ApplicationInformation\n  - System.Web.Management.WebBaseEvent.EventCode\n  - System.Web.Management.WebBaseEvent.EventDetailCode\n  - System.Web.Management.WebBaseEvent.EventID\n  - System.Web.Management.WebBaseEvent.EventOccurrence\n  - System.Web.Management.WebBaseEvent.EventSequence\n  - System.Web.Management.WebBaseEvent.EventSource\n  - System.Web.Management.WebBaseEvent.EventTime\n  - System.Web.Management.WebBaseEvent.EventTimeUtc\n  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebBaseEvent.Message\n  - System.Web.Management.WebBaseEvent.Raise\n  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WebBaseEvent.ToString\n  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  - System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters\n  - System.Web.Management.WebManagementEvent.ProcessInformation\n  platform:\n  - net462\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)\n  id: '#ctor(System.String,System.Object,System.Int32,System.String)'\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  langs:\n  - csharp\n  name: WebAuthenticationFailureAuditEvent(String,Object,Int32,String)\n  nameWithType: WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,String)\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebAuthenticationFailureAuditEvent\"></xref> class with the specified event parameters.\n  remarks: The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class.\n  example:\n  - \"The following code example shows how to customize this constructor.  \\n  \\n [!code-cs[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/add/codesnippet/csharp/ad94f9ba-4e75-4b44-88d9-_1.cs)]\\n [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#2](~/add/codesnippet/visualbasic/ad94f9ba-4e75-4b44-88d9-_1.vb)]\"\n  syntax:\n    content: protected WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value associated with the event.\n    - id: nameToAuthenticate\n      type: System.String\n      description: The name of the user to authenticate.\n  overload: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)'\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  langs:\n  - csharp\n  name: WebAuthenticationFailureAuditEvent(String,Object,Int32,Int32,String)\n  nameWithType: WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,Int32,String)\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,Int32,String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebAuthenticationFailureAuditEvent\"></xref> class with the specified event parameters.\n  remarks: The WebAuthenticationFailureAuditEvent constructor is not intended to be used directly from your code. It is called by ASP.NET. You can call the WebAuthenticationFailureAuditEvent constructor when deriving from the <xref:System.Web.Management.WebAuthenticationFailureAuditEvent> class.\n  example:\n  - \"The following code example shows how to customize this constructor.  \\n  \\n [!code-cs[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/add/codesnippet/csharp/d0ed240e-77e1-4ad8-be99-_1.cs)]\\n [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/add/codesnippet/visualbasic/d0ed240e-77e1-4ad8-be99-_1.vb)]\"\n  syntax:\n    content: protected WebAuthenticationFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: eventDetailCode\n      type: System.Int32\n      description: The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event.\n    - id: nameToAuthenticate\n      type: System.String\n      description: The name of the user to authenticate.\n  overload: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate\n  id: NameToAuthenticate\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  langs:\n  - csharp\n  name: NameToAuthenticate\n  nameWithType: WebAuthenticationFailureAuditEvent.NameToAuthenticate\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the name of the user to authenticate.\n  remarks: Only the success audits should include the name of the authenticated user. The failure audits should not include the user name, since they typically result from failed decryption or validation.\n  example:\n  - \"The following code example shows how to use NameToAuthenticate property.  \\n  \\n [!code-cs[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/add/codesnippet/csharp/p-system.web.management._26_1.cs)]\\n [!code-vb[System.Web.Management.WebAuthenticationFailureAuditEvent#3](~/add/codesnippet/visualbasic/p-system.web.management._26_1.vb)]\"\n  syntax:\n    content: public string NameToAuthenticate { get; }\n    return:\n      type: System.String\n      description: The name of the user to authenticate.\n  overload: System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: System.Web.Management.WebFailureAuditEvent\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  isExternal: false\n  name: WebAuthenticationFailureAuditEvent(String,Object,Int32,String)\n  nameWithType: WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,String)\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  isExternal: false\n  name: WebAuthenticationFailureAuditEvent(String,Object,Int32,Int32,String)\n  nameWithType: WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,Int32,String)\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent(String,Object,Int32,Int32,String)\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  isExternal: false\n  name: NameToAuthenticate\n  nameWithType: WebAuthenticationFailureAuditEvent.NameToAuthenticate\n  fullName: System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.#ctor*\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  isExternal: false\n  name: WebAuthenticationFailureAuditEvent\n  nameWithType: WebAuthenticationFailureAuditEvent.WebAuthenticationFailureAuditEvent\n- uid: System.Web.Management.WebAuthenticationFailureAuditEvent.NameToAuthenticate*\n  parent: System.Web.Management.WebAuthenticationFailureAuditEvent\n  isExternal: false\n  name: NameToAuthenticate\n  nameWithType: WebAuthenticationFailureAuditEvent.NameToAuthenticate\n"}