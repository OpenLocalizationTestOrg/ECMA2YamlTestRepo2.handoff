{"nodes":[{"pos":[584,666],"content":"Provides the base functionality for writing resources to an output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides the base functionality for writing resources to an output file or stream.","pos":[0,82]}]},{"pos":[678,1190],"content":"Resource writers are used to write resources to files in a particular file format. Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file). Otherwise, use the default <xref:System.Resources.ResourceWriter> class, which writes resources to a binary .resources file, or the <xref:System.Resources.ResXResourceWriter> class, which writes resources to an XML resource (.resx) file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Resource writers are used to write resources to files in a particular file format. Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file). Otherwise, use the default <xref:System.Resources.ResourceWriter> class, which writes resources to a binary .resources file, or the <xref:System.Resources.ResXResourceWriter> class, which writes resources to an XML resource (.resx) file.","pos":[0,512],"nodes":[{"content":"Resource writers are used to write resources to files in a particular file format.","pos":[0,82]},{"content":"Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file).","pos":[83,274]},{"content":"Otherwise, use the default &lt;xref:System.Resources.ResourceWriter&gt; class, which writes resources to a binary .resources file, or the &lt;xref:System.Resources.ResXResourceWriter&gt; class, which writes resources to an XML resource (.resx) file.","pos":[275,512],"source":" Otherwise, use the default <xref:System.Resources.ResourceWriter> class, which writes resources to a binary .resources file, or the <xref:System.Resources.ResXResourceWriter> class, which writes resources to an XML resource (.resx) file."}]}]},{"pos":[1827,1923],"content":"Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.","pos":[0,96]}]},{"pos":[1935,2044],"content":"The resources are not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resources are not written until the &lt;xref:System.Resources.IResourceWriter.Generate%2A&gt; method is called.","pos":[0,109],"source":"The resources are not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called."}]},{"pos":[2197,2216],"content":"Name of a resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"Name of a resource.","pos":[0,19]}]},{"pos":[2278,2333],"content":"Value of a resource as an 8-bit unsigned integer array.","needQuote":true,"needEscape":true,"nodes":[{"content":"Value of a resource as an 8-bit unsigned integer array.","pos":[0,55]}]},{"pos":[2508,2604],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[3068,3158],"content":"Adds a named resource of type <xref:System.Object> to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a named resource of type &lt;xref:System.Object&gt; to the list of resources to be written.","pos":[0,90],"source":"Adds a named resource of type <xref:System.Object> to the list of resources to be written."}]},{"pos":[3171,3429],"content":"The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.      > [!NOTE] >  `value` might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.","needQuote":false,"needEscape":true,"nodes":[{"content":"The resource is not written until the &lt;xref:System.Resources.IResourceWriter.Generate%2A&gt; method is called.","pos":[0,107],"source":"The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph><ph id=\"ph2\"> &gt;  </ph><ph id=\"ph3\">`value`</ph> might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.","pos":[113,255],"source":"      > [!NOTE] >  `value` might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used."}]},{"pos":[3583,3608],"content":"The name of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource.","pos":[0,25]}]},{"pos":[3670,3696],"content":"The value of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the resource.","pos":[0,26]}]},{"pos":[3871,3967],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[4431,4521],"content":"Adds a named resource of type <xref:System.String> to the list of resources to be written.","needQuote":true,"needEscape":true,"nodes":[{"content":"Adds a named resource of type &lt;xref:System.String&gt; to the list of resources to be written.","pos":[0,90],"source":"Adds a named resource of type <xref:System.String> to the list of resources to be written."}]},{"pos":[4533,4640],"content":"The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.","needQuote":true,"needEscape":true,"nodes":[{"content":"The resource is not written until the &lt;xref:System.Resources.IResourceWriter.Generate%2A&gt; method is called.","pos":[0,107],"source":"The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called."}]},{"pos":[4793,4818],"content":"The name of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the resource.","pos":[0,25]}]},{"pos":[4880,4906],"content":"The value of the resource.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value of the resource.","pos":[0,26]}]},{"pos":[5073,5169],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."},{"pos":[5506,5604],"content":"Closes the underlying resource file or stream, ensuring all the data has been written to the file.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the underlying resource file or stream, ensuring all the data has been written to the file.","pos":[0,98]}]},{"pos":[5616,5784],"content":"If necessary, Close will call the <xref:System.Resources.IResourceWriter.Generate%2A> method to output the resources to the underlying file or stream before closing it.","needQuote":true,"needEscape":true,"nodes":[{"content":"If necessary, Close will call the &lt;xref:System.Resources.IResourceWriter.Generate%2A&gt; method to output the resources to the underlying file or stream before closing it.","pos":[0,168],"source":"If necessary, Close will call the <xref:System.Resources.IResourceWriter.Generate%2A> method to output the resources to the underlying file or stream before closing it."}]},{"pos":[6269,6396],"content":"Writes all the resources added by the <xref:System.Resources.IResourceWriter.AddResource*> method to the output file or stream.","needQuote":true,"needEscape":true,"nodes":[{"content":"Writes all the resources added by the &lt;xref:System.Resources.IResourceWriter.AddResource*&gt; method to the output file or stream.","pos":[0,127],"source":"Writes all the resources added by the <xref:System.Resources.IResourceWriter.AddResource*> method to the output file or stream."}]},{"pos":[6408,6855],"content":"Generate does not close the output file or output stream. Instead, consider calling the <xref:System.Resources.IResourceWriter.Close%2A> method. Generate is useful when you want to create a resource file, but you don't want to close the output stream. Generate can be called only once. After you call Generate, all <xref:System.Resources.IResourceWriter> methods other than <xref:System.Resources.IResourceWriter.Close%2A> will throw an exception.","needQuote":true,"needEscape":true,"nodes":[{"content":"Generate does not close the output file or output stream. Instead, consider calling the <xref:System.Resources.IResourceWriter.Close%2A> method. Generate is useful when you want to create a resource file, but you don't want to close the output stream. Generate can be called only once. After you call Generate, all <xref:System.Resources.IResourceWriter> methods other than <xref:System.Resources.IResourceWriter.Close%2A> will throw an exception.","pos":[0,447],"nodes":[{"content":"Generate does not close the output file or output stream.","pos":[0,57]},{"content":"Instead, consider calling the &lt;xref:System.Resources.IResourceWriter.Close%2A&gt; method.","pos":[58,144],"source":" Instead, consider calling the <xref:System.Resources.IResourceWriter.Close%2A> method."},{"content":"Generate is useful when you want to create a resource file, but you don't want to close the output stream.","pos":[145,251]},{"content":"Generate can be called only once.","pos":[252,285]},{"content":"After you call Generate, all &lt;xref:System.Resources.IResourceWriter&gt; methods other than &lt;xref:System.Resources.IResourceWriter.Close%2A&gt; will throw an exception.","pos":[286,447],"source":" After you call Generate, all <xref:System.Resources.IResourceWriter> methods other than <xref:System.Resources.IResourceWriter.Close%2A> will throw an exception."}]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Resources.IResourceWriter\n  id: IResourceWriter\n  children:\n  - System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])\n  - System.Resources.IResourceWriter.AddResource(System.String,System.Object)\n  - System.Resources.IResourceWriter.AddResource(System.String,System.String)\n  - System.Resources.IResourceWriter.Close\n  - System.Resources.IResourceWriter.Generate\n  langs:\n  - csharp\n  name: IResourceWriter\n  nameWithType: IResourceWriter\n  fullName: System.Resources.IResourceWriter\n  type: Interface\n  summary: Provides the base functionality for writing resources to an output file or stream.\n  remarks: Resource writers are used to write resources to files in a particular file format. Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file). Otherwise, use the default <xref:System.Resources.ResourceWriter> class, which writes resources to a binary .resources file, or the <xref:System.Resources.ResXResourceWriter> class, which writes resources to an XML resource (.resx) file.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IResourceWriter : IDisposable\n  implements:\n  - System.IDisposable\n  platform:\n  - net462\n- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])\n  id: AddResource(System.String,System.Byte[])\n  parent: System.Resources.IResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,Byte[])\n  nameWithType: IResourceWriter.AddResource(String,Byte[])\n  fullName: System.Resources.IResourceWriter.AddResource(String,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.\n  remarks: The resources are not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.\n  syntax:\n    content: public void AddResource (string name, byte[] value);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of a resource.\n    - id: value\n      type: System.Byte[]\n      description: Value of a resource as an 8-bit unsigned integer array.\n  overload: System.Resources.IResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)\n  id: AddResource(System.String,System.Object)\n  parent: System.Resources.IResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,Object)\n  nameWithType: IResourceWriter.AddResource(String,Object)\n  fullName: System.Resources.IResourceWriter.AddResource(String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a named resource of type <xref:System.Object> to the list of resources to be written.\n  remarks: \"The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.  \\n  \\n> [!NOTE]\\n>  `value` might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.\"\n  syntax:\n    content: public void AddResource (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource.\n    - id: value\n      type: System.Object\n      description: The value of the resource.\n  overload: System.Resources.IResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)\n  id: AddResource(System.String,System.String)\n  parent: System.Resources.IResourceWriter\n  langs:\n  - csharp\n  name: AddResource(String,String)\n  nameWithType: IResourceWriter.AddResource(String,String)\n  fullName: System.Resources.IResourceWriter.AddResource(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Adds a named resource of type <xref:System.String> to the list of resources to be written.\n  remarks: The resource is not written until the <xref:System.Resources.IResourceWriter.Generate%2A> method is called.\n  syntax:\n    content: public void AddResource (string name, string value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource.\n    - id: value\n      type: System.String\n      description: The value of the resource.\n  overload: System.Resources.IResourceWriter.AddResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>name</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.\n  platform:\n  - net462\n- uid: System.Resources.IResourceWriter.Close\n  id: Close\n  parent: System.Resources.IResourceWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: IResourceWriter.Close()\n  fullName: System.Resources.IResourceWriter.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Closes the underlying resource file or stream, ensuring all the data has been written to the file.\n  remarks: If necessary, Close will call the <xref:System.Resources.IResourceWriter.Generate%2A> method to output the resources to the underlying file or stream before closing it.\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Resources.IResourceWriter.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Resources.IResourceWriter.Generate\n  id: Generate\n  parent: System.Resources.IResourceWriter\n  langs:\n  - csharp\n  name: Generate()\n  nameWithType: IResourceWriter.Generate()\n  fullName: System.Resources.IResourceWriter.Generate()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Resources\n  summary: Writes all the resources added by the <xref:System.Resources.IResourceWriter.AddResource*> method to the output file or stream.\n  remarks: Generate does not close the output file or output stream. Instead, consider calling the <xref:System.Resources.IResourceWriter.Close%2A> method. Generate is useful when you want to create a resource file, but you don't want to close the output stream. Generate can be called only once. After you call Generate, all <xref:System.Resources.IResourceWriter> methods other than <xref:System.Resources.IResourceWriter.Close%2A> will throw an exception.\n  syntax:\n    content: public void Generate ();\n    parameters: []\n  overload: System.Resources.IResourceWriter.Generate*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ArgumentNullException\n  isExternal: true\n  name: System.ArgumentNullException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: AddResource(String,Byte[])\n  nameWithType: IResourceWriter.AddResource(String,Byte[])\n  fullName: System.Resources.IResourceWriter.AddResource(String,Byte[])\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte[]\n  parent: System\n  isExternal: true\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: Byte[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Resources.IResourceWriter.AddResource(System.String,System.Object)\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: AddResource(String,Object)\n  nameWithType: IResourceWriter.AddResource(String,Object)\n  fullName: System.Resources.IResourceWriter.AddResource(String,Object)\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Resources.IResourceWriter.AddResource(System.String,System.String)\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: AddResource(String,String)\n  nameWithType: IResourceWriter.AddResource(String,String)\n  fullName: System.Resources.IResourceWriter.AddResource(String,String)\n- uid: System.Resources.IResourceWriter.Close\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: Close()\n  nameWithType: IResourceWriter.Close()\n  fullName: System.Resources.IResourceWriter.Close()\n- uid: System.Resources.IResourceWriter.Generate\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: Generate()\n  nameWithType: IResourceWriter.Generate()\n  fullName: System.Resources.IResourceWriter.Generate()\n- uid: System.Resources.IResourceWriter.AddResource*\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: AddResource\n  nameWithType: IResourceWriter.AddResource\n- uid: System.Resources.IResourceWriter.Close*\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: Close\n  nameWithType: IResourceWriter.Close\n- uid: System.Resources.IResourceWriter.Generate*\n  parent: System.Resources.IResourceWriter\n  isExternal: false\n  name: Generate\n  nameWithType: IResourceWriter.Generate\n"}