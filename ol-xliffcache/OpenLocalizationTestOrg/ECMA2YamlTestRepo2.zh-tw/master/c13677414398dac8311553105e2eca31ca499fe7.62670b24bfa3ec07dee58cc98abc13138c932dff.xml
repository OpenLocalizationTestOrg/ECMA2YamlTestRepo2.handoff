{"nodes":[{"pos":[1751,1798],"content":"Represents an open connection to a data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents an open connection to a data source.","pos":[0,47]}]},{"pos":[1811,4550],"content":"An OdbcConnection object represents a unique connection to a data source created by using a connection string or ODBC data source name (DSN). With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native ODBC driver, some methods or properties of an OdbcConnection object may not be available.       The OdbcConnection object uses native resources such as ODBC environment and connection handles. You should always explicitly close any open OdbcConnection objects by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** before the OdbcConnection object goes out of scope, or by placing the connection within a `Using` statement. Not doing this leaves the freeing of these native resources to garbage collection. It might not free them immediately. This, in turn, can eventually cause the underlying driver to run out of resources or reach a maximum limit. This has resulted in intermittent failures. For example, you might experience `Maximum Connections` -related errors while many connections are waiting to be deleted by the garbage collector. Explicitly closing the connections allows for a more efficient use of native resources, enhancing scalability and improving overall application performance.      > [!NOTE] >  To deploy high-performance applications, you frequently must use connection pooling. However, when you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the provider manages this automatically.       If one of the `Execute` methods of the <xref:System.Data.Odbc.OdbcCommand> class causes a fatal <xref:System.Data.Odbc.OdbcException> (for example, a SQL Server severity level of 20 or greater), the OdbcConnection may close. However, the user can reopen the connection and continue.       An application that creates an instance of the OdbcConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. OdbcConnection creates security demands by using the <xref:System.Data.Odbc.OdbcPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.Odbc.OdbcPermissionAttribute> object. Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the computer, user, and enterprise levels. For more information, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).       For more information about handling warning and informational messages from the data source, see [Connection Events](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"An OdbcConnection object represents a unique connection to a data source created by using a connection string or ODBC data source name (DSN).","pos":[0,141]},{"content":"With a client/server database system, it is equivalent to a network connection to the server.","pos":[142,235]},{"content":"Depending on the functionality supported by the native ODBC driver, some methods or properties of an OdbcConnection object may not be available.","pos":[236,380]},{"content":"The OdbcConnection object uses native resources such as ODBC environment and connection handles.","pos":[387,483]},{"content":"You should always explicitly close any open OdbcConnection objects by calling &lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt; or <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept> before the OdbcConnection object goes out of scope, or by placing the connection within a <ph id=\"ph1\">`Using`</ph> statement.","pos":[484,733],"source":" You should always explicitly close any open OdbcConnection objects by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** before the OdbcConnection object goes out of scope, or by placing the connection within a `Using` statement."},{"content":"Not doing this leaves the freeing of these native resources to garbage collection.","pos":[734,816]},{"content":"It might not free them immediately.","pos":[817,852]},{"content":"This, in turn, can eventually cause the underlying driver to run out of resources or reach a maximum limit.","pos":[853,960]},{"content":"This has resulted in intermittent failures.","pos":[961,1004]},{"content":"For example, you might experience <ph id=\"ph1\">`Maximum Connections`</ph> -related errors while many connections are waiting to be deleted by the garbage collector.","pos":[1005,1151],"source":" For example, you might experience `Maximum Connections` -related errors while many connections are waiting to be deleted by the garbage collector."},{"content":"Explicitly closing the connections allows for a more efficient use of native resources, enhancing scalability and improving overall application performance.","pos":[1152,1308]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  To deploy high-performance applications, you frequently must use connection pooling.","pos":[1314,1411],"source":"      > [!NOTE] >  To deploy high-performance applications, you frequently must use connection pooling."},{"content":"However, when you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the provider manages this automatically.","pos":[1412,1570]},{"content":"If one of the <ph id=\"ph1\">`Execute`</ph> methods of the &lt;xref:System.Data.Odbc.OdbcCommand&gt; class causes a fatal &lt;xref:System.Data.Odbc.OdbcException&gt; (for example, a SQL Server severity level of 20 or greater), the OdbcConnection may close.","pos":[1577,1801],"source":"       If one of the `Execute` methods of the <xref:System.Data.Odbc.OdbcCommand> class causes a fatal <xref:System.Data.Odbc.OdbcException> (for example, a SQL Server severity level of 20 or greater), the OdbcConnection may close."},{"content":"However, the user can reopen the connection and continue.","pos":[1802,1859]},{"content":"An application that creates an instance of the OdbcConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.","pos":[1866,2075]},{"content":"OdbcConnection creates security demands by using the &lt;xref:System.Data.Odbc.OdbcPermission&gt; object.","pos":[2076,2175],"source":" OdbcConnection creates security demands by using the <xref:System.Data.Odbc.OdbcPermission> object."},{"content":"Users can verify that their code has sufficient permissions by using the &lt;xref:System.Data.Odbc.OdbcPermissionAttribute&gt; object.","pos":[2176,2304],"source":" Users can verify that their code has sufficient permissions by using the <xref:System.Data.Odbc.OdbcPermissionAttribute> object."},{"content":"Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the computer, user, and enterprise levels.","pos":[2305,2464]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Access Security and ADO.NET<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2465,2565],"source":" For more information, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md)."},{"content":"For more information about handling warning and informational messages from the data source, see <bpt id=\"p1\">[</bpt>Connection Events<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[2572,2728],"source":"       For more information about handling warning and informational messages from the data source, see [Connection Events](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[7206,7299],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> class."},{"pos":[7312,8051],"content":"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.      |Properties|Initial value|   |----------------|-------------------|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|empty string (\"\")|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|   |<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\"\")|       You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.      |Properties|Initial value|   |----------------|-------------------|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|empty string (\"\")|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|   |<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\"\")|       You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.","pos":[0,727],"nodes":[{"content":"When a new instance of &lt;xref:System.Data.Odbc.OdbcConnection&gt; is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the &lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt; property.","pos":[0,294],"source":"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property."},{"content":"|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;|empty string (\"\")|   |&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A&gt;|15|   |&lt;xref:System.Data.Odbc.OdbcConnection.Database%2A&gt;|empty string (\"\")|       You can change the value for these properties only by using the &lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt; property.","pos":[300,727],"source":"      |Properties|Initial value|   |----------------|-------------------|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|empty string (\"\")|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|   |<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\"\")|       You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property."}]}]},{"pos":[8957,9087],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class with the specified connection string.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> class with the specified connection string."},{"pos":[9100,9838],"content":"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.      |Properties|Initial value|   |----------------|-------------------|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|`connectionString`|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|   |<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\"\")|       You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.","needQuote":false,"needEscape":true,"nodes":[{"content":"When a new instance of &lt;xref:System.Data.Odbc.OdbcConnection&gt; is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the &lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt; property.","pos":[0,294],"source":"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property."},{"content":"|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt;|<ph id=\"ph1\">`connectionString`</ph>|   |&lt;xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A&gt;|15|   |&lt;xref:System.Data.Odbc.OdbcConnection.Database%2A&gt;|empty string (\"\")|       You can change the value for these properties only by using the &lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A&gt; property.","pos":[300,728],"source":"      |Properties|Initial value|   |----------------|-------------------|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|`connectionString`|   |<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|   |<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\"\")|       You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property."}]},{"pos":[10353,10397],"content":"The connection used to open the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection used to open the data source.","pos":[0,44]}]},{"pos":[11191,11203],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11280,11292],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[11764,11804],"content":"Starts a transaction at the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Starts a transaction at the data source.","pos":[0,40]}]},{"pos":[11817,12453],"content":"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.       To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.      > [!NOTE] >  If you do not specify an isolation level, the isolation level will be determined by the driver being used. To specify an isolation level with the BeginTransaction method, use the overload that takes the `isolevel` parameter.","needQuote":false,"needEscape":true,"nodes":[{"content":"To commit or roll back the transaction, you must explicitly use the &lt;xref:System.Data.Odbc.OdbcTransaction.Commit%2A&gt; or &lt;xref:System.Data.Odbc.OdbcTransaction.Rollback%2A&gt; methods.","pos":[0,181],"source":"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods."},{"content":"To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[188,388]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If you do not specify an isolation level, the isolation level will be determined by the driver being used.","pos":[394,513],"source":"      > [!NOTE] >  If you do not specify an isolation level, the isolation level will be determined by the driver being used."},{"content":"To specify an isolation level with the BeginTransaction method, use the overload that takes the <ph id=\"ph1\">`isolevel`</ph> parameter.","pos":[514,631],"source":" To specify an isolation level with the BeginTransaction method, use the overload that takes the `isolevel` parameter."}]},{"pos":[13198,13241],"content":"An object representing the new transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object representing the new transaction.","pos":[0,43]}]},{"pos":[13428,13503],"content":"A transaction is currently active. Parallel transactions are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"A transaction is currently active. Parallel transactions are not supported.","pos":[0,75],"nodes":[{"content":"A transaction is currently active.","pos":[0,34]},{"content":"Parallel transactions are not supported.","pos":[35,75]}]}]},{"pos":[13992,14105],"content":"Starts a transaction at the data source with the specified <bpt id=\"p1\">&lt;xref href=\"System.Data.IsolationLevel\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> value.","needQuote":true,"needEscape":true,"source":"Starts a transaction at the data source with the specified <xref href=\"System.Data.IsolationLevel\"></xref> value."},{"pos":[14118,14508],"content":"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.       To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","needQuote":false,"needEscape":true,"nodes":[{"content":"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.       To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[0,388],"nodes":[{"content":"To commit or roll back the transaction, you must explicitly use the &lt;xref:System.Data.Odbc.OdbcTransaction.Commit%2A&gt; or &lt;xref:System.Data.Odbc.OdbcTransaction.Rollback%2A&gt; methods.","pos":[0,181],"source":"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods."},{"content":"To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[188,388]}]}]},{"pos":[15328,15474],"content":"The transaction isolation level for this connection. If you do not specify an isolation level, the default isolation level for the driver is used.","needQuote":true,"needEscape":true,"nodes":[{"content":"The transaction isolation level for this connection. If you do not specify an isolation level, the default isolation level for the driver is used.","pos":[0,146],"nodes":[{"content":"The transaction isolation level for this connection.","pos":[0,52]},{"content":"If you do not specify an isolation level, the default isolation level for the driver is used.","pos":[53,146]}]}]},{"pos":[15551,15594],"content":"An object representing the new transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object representing the new transaction.","pos":[0,43]}]},{"pos":[15781,15856],"content":"A transaction is currently active. Parallel transactions are not supported.","needQuote":true,"needEscape":true,"nodes":[{"content":"A transaction is currently active. Parallel transactions are not supported.","pos":[0,75],"nodes":[{"content":"A transaction is currently active.","pos":[0,34]},{"content":"Parallel transactions are not supported.","pos":[35,75]}]}]},{"pos":[16285,16391],"content":"Changes the current database associated with an open <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Changes the current database associated with an open <xref href=\"System.Data.Odbc.OdbcConnection\"></xref>."},{"pos":[16403,16555],"content":"The <ph id=\"ph1\">`value`</ph> parameter must contain a valid database name, and cannot contain a null value, an empty string (\"\"), or a string with only blank characters.","needQuote":true,"needEscape":true,"source":"The `value` parameter must contain a valid database name, and cannot contain a null value, an empty string (\"\"), or a string with only blank characters."},{"pos":[17070,17088],"content":"The database name.","needQuote":true,"needEscape":true,"nodes":[{"content":"The database name.","pos":[0,18]}]},{"pos":[17257,17288],"content":"The database name is not valid.","needQuote":true,"needEscape":true,"nodes":[{"content":"The database name is not valid.","pos":[0,31]}]},{"pos":[17399,17426],"content":"The connection is not open.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection is not open.","pos":[0,27]}]},{"pos":[17533,17560],"content":"Cannot change the database.","needQuote":true,"needEscape":true,"nodes":[{"content":"Cannot change the database.","pos":[0,27]}]},{"pos":[17896,17937],"content":"Closes the connection to the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Closes the connection to the data source.","pos":[0,41]}]},{"pos":[17950,19155],"content":"The Close method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If Close is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.       An application can call Close more than one time without generating an exception.      > [!NOTE] >  When you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the ODBC Driver Manager manages this automatically. For more information about how to enable and disabling connection pooling, see the Microsoft Open Database Connectivity (ODBC) documentation.      > [!CAUTION] >  Do not call Close or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"The Close method rolls back any pending transactions.","pos":[0,53]},{"content":"It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.","pos":[54,169]},{"content":"If Close is called while handling a &lt;xref:System.Data.Common.DbConnection.StateChange&gt; event, no additional &lt;xref:System.Data.Common.DbConnection.StateChange&gt; events are fired.","pos":[170,346],"source":" If Close is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired."},{"content":"An application can call Close more than one time without generating an exception.","pos":[353,434]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  When you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the ODBC Driver Manager manages this automatically.","pos":[440,613],"source":"      > [!NOTE] >  When you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the ODBC Driver Manager manages this automatically."},{"content":"For more information about how to enable and disabling connection pooling, see the Microsoft Open Database Connectivity (ODBC) documentation.","pos":[614,755]},{"content":"&gt; <ph id=\"ph1\">[!CAUTION]</ph> &gt;  Do not call Close or <ph id=\"ph2\">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id=\"ph3\">`Finalize`</ph> method of your class.","pos":[761,906],"source":"      > [!CAUTION] >  Do not call Close or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class."},{"content":"In a finalizer, you should only release unmanaged resources that your class owns directly.","pos":[907,997]},{"content":"If your class does not own any unmanaged resources, do not include a <ph id=\"ph1\">`Finalize`</ph> method in your class definition.","pos":[998,1110],"source":" If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Garbage Collection<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[1111,1197],"source":" For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[20082,20133],"content":"Gets or sets the string used to open a data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the string used to open a data source.","pos":[0,51]}]},{"pos":[26054,26267],"content":"The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection. The default value is an empty string (\"\"). The maximum length is 1024 characters.","needQuote":true,"needEscape":true,"nodes":[{"content":"The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection. The default value is an empty string (\"\"). The maximum length is 1024 characters.","pos":[0,213],"nodes":[{"content":"The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection.","pos":[0,131]},{"content":"The default value is an empty string (\"\").","pos":[132,174]},{"content":"The maximum length is 1024 characters.","pos":[175,213]}]}]},{"pos":[26738,26862],"content":"Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","pos":[0,124]}]},{"pos":[26874,27327],"content":"Unlike the .NET Framework data providers for SQL Server and OLE DB, the .NET Framework Data Provider for ODBC does not support setting this property as a connection string value, because it is not a valid ODBC connection keyword. To specify a connection time-out, set the ConnectionTimeout property before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>. This is equivalent to setting the ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT attribute.","needQuote":true,"needEscape":true,"nodes":[{"content":"Unlike the .NET Framework data providers for SQL Server and OLE DB, the .NET Framework Data Provider for ODBC does not support setting this property as a connection string value, because it is not a valid ODBC connection keyword.","pos":[0,229]},{"content":"To specify a connection time-out, set the ConnectionTimeout property before calling &lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt;.","pos":[230,361],"source":" To specify a connection time-out, set the ConnectionTimeout property before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>."},{"content":"This is equivalent to setting the ODBC <ph id=\"ph1\">`SQLSetConnectAttr`</ph> SQL_ATTR_LOGIN_TIMOUT attribute.","pos":[362,453],"source":" This is equivalent to setting the ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT attribute."}]},{"pos":[27450,27536],"content":"The time in seconds to wait for a connection to open. The default value is 15 seconds.","needQuote":true,"needEscape":true,"nodes":[{"content":"The time in seconds to wait for a connection to open. The default value is 15 seconds.","pos":[0,86],"nodes":[{"content":"The time in seconds to wait for a connection to open.","pos":[0,53]},{"content":"The default value is 15 seconds.","pos":[54,86]}]}]},{"pos":[27708,27737],"content":"The value set is less than 0.","needQuote":true,"needEscape":true,"nodes":[{"content":"The value set is less than 0.","pos":[0,29]}]},{"pos":[28113,28266],"content":"Creates and returns an <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object associated with the <bpt id=\"p2\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Creates and returns an <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> object associated with the <xref href=\"System.Data.Odbc.OdbcConnection\"></xref>."},{"pos":[28435,28495],"content":"An <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcCommand\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"An <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> object."},{"pos":[29128,29140],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[29565,29659],"content":"Gets the name of the current database or the database to be used after a connection is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the current database or the database to be used after a connection is opened.","pos":[0,94]}]},{"pos":[29672,30209],"content":"At first, the Database property is set in the connection string. The Database property can be updated by using the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method. If you change the current database using an SQL statement or the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method, an informational message is sent and then the property is updated.       Retrieving the Database property is equivalent to calling the ODBC function `SQLGetInfo` with the `Attribute` parameter set to SQL_ATTR_CURRENT_CATALOG.","needQuote":false,"needEscape":true,"nodes":[{"content":"At first, the Database property is set in the connection string.","pos":[0,64]},{"content":"The Database property can be updated by using the &lt;xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A&gt; method.","pos":[65,179],"source":" The Database property can be updated by using the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method."},{"content":"If you change the current database using an SQL statement or the &lt;xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A&gt; method, an informational message is sent and then the property is updated.","pos":[180,376],"source":" If you change the current database using an SQL statement or the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method, an informational message is sent and then the property is updated."},{"content":"Retrieving the Database property is equivalent to calling the ODBC function <ph id=\"ph1\">`SQLGetInfo`</ph> with the <ph id=\"ph2\">`Attribute`</ph> parameter set to SQL_ATTR_CURRENT_CATALOG.","pos":[383,535],"source":"       Retrieving the Database property is equivalent to calling the ODBC function `SQLGetInfo` with the `Attribute` parameter set to SQL_ATTR_CURRENT_CATALOG."}]},{"pos":[30694,30801],"content":"The name of the current database. The default value is an empty string (\"\") until the connection is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the current database. The default value is an empty string (\"\") until the connection is opened.","pos":[0,107],"nodes":[{"content":"The name of the current database.","pos":[0,33]},{"content":"The default value is an empty string (\"\") until the connection is opened.","pos":[34,107]}]}]},{"pos":[31229,31282],"content":"Gets the server name or file name of the data source.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the server name or file name of the data source.","pos":[0,53]}]},{"pos":[31294,31438],"content":"Retrieving the DataSource property is equivalent to calling the ODBC function <ph id=\"ph1\">`SQLGetInfo`</ph> with the <ph id=\"ph2\">`InfoType`</ph> parameter set to SQL_SERVER_NAME.","needQuote":true,"needEscape":true,"source":"Retrieving the DataSource property is equivalent to calling the ODBC function `SQLGetInfo` with the `InfoType` parameter set to SQL_SERVER_NAME."},{"pos":[31937,32059],"content":"The server name or file name of the data source. The default value is an empty string (\"\") until the connection is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The server name or file name of the data source. The default value is an empty string (\"\") until the connection is opened.","pos":[0,122],"nodes":[{"content":"The server name or file name of the data source.","pos":[0,48]},{"content":"The default value is an empty string (\"\") until the connection is opened.","pos":[49,122]}]}]},{"pos":[32675,32687],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[33094,33164],"content":"Gets the name of the ODBC driver specified for the current connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the name of the ODBC driver specified for the current connection.","pos":[0,70]}]},{"pos":[33176,33316],"content":"Retrieving the Driver property is equivalent to calling the ODBC function <ph id=\"ph1\">`SQLGetInfo`</ph> with the <ph id=\"ph2\">`InfoType`</ph> parameter set to SQL_DRIVER_NAME.","needQuote":true,"needEscape":true,"source":"Retrieving the Driver property is equivalent to calling the ODBC function `SQLGetInfo` with the `InfoType` parameter set to SQL_DRIVER_NAME."},{"pos":[33427,33589],"content":"The name of the ODBC driver. This typically is the DLL name (for example, Sqlsrv32.dll). The default value is an empty string (\"\") until the connection is opened.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the ODBC driver. This typically is the DLL name (for example, Sqlsrv32.dll). The default value is an empty string (\"\") until the connection is opened.","pos":[0,162],"nodes":[{"content":"The name of the ODBC driver.","pos":[0,28]},{"content":"This typically is the DLL name (for example, Sqlsrv32.dll).","pos":[29,88]},{"content":"The default value is an empty string (\"\") until the connection is opened.","pos":[89,162]}]}]},{"pos":[34225,34291],"content":"Enlists in the specified transaction as a distributed transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enlists in the specified transaction as a distributed transaction.","pos":[0,66]}]},{"pos":[34304,36144],"content":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose. For more information, see [Distributed Transactions](~/add/includes/ajax-current-ext-md.md).       You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see [Distributed Transactions](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction returns an exception if the <xref:System.Data.OdbcClient.OdbcConnection> has already started a transaction using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OdbcClient.OdbcCommand> object), EnlistDistributedTransaction rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.","needQuote":false,"needEscape":true,"nodes":[{"content":"New in ADO.NET 2.0 is support for using the &lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt; method to enlist in a distributed transaction.","pos":[0,150],"source":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction."},{"content":"Because it enlists a connection in a &lt;xref:System.Transactions.Transaction&gt; instance, <bpt id=\"p1\">**</bpt>EnlistTransaction<ept id=\"p1\">**</ept> takes advantage of functionality available in the &lt;xref:System.Transactions&gt; namespace for managing distributed transactions, making it preferable to <bpt id=\"p2\">**</bpt>EnlistDistributedTransaction<ept id=\"p2\">**</ept> for this purpose.","pos":[151,459],"source":" Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Distributed Transactions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[460,552],"source":" For more information, see [Distributed Transactions](~/add/includes/ajax-current-ext-md.md)."},{"content":"You can continue to enlist in an existing distributed transaction using the &lt;xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A&gt; method if auto-enlistment is disabled.","pos":[559,750],"source":"       You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled."},{"content":"Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.","pos":[751,949]},{"content":"For more information about distributed transactions, see <bpt id=\"p1\">[</bpt>Distributed Transactions<ept id=\"p1\">](../Topic/Distributed%20Transactions.md)</ept>.","pos":[950,1074],"source":" For more information about distributed transactions, see [Distributed Transactions](../Topic/Distributed%20Transactions.md)."},{"content":"EnlistDistributedTransaction returns an exception if the &lt;xref:System.Data.OdbcClient.OdbcConnection&gt; has already started a transaction using &lt;xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A&gt;.","pos":[1081,1288],"source":"       EnlistDistributedTransaction returns an exception if the <xref:System.Data.OdbcClient.OdbcConnection> has already started a transaction using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>."},{"content":"However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an &lt;xref:System.Data.OdbcClient.OdbcCommand&gt; object), EnlistDistributedTransaction rolls back the local transaction and enlists in the existing distributed transaction as requested.","pos":[1289,1624],"source":" However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OdbcClient.OdbcCommand> object), EnlistDistributedTransaction rolls back the local transaction and enlists in the existing distributed transaction as requested."},{"content":"You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using &lt;xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A&gt;.","pos":[1625,1836],"source":" You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>."}]},{"pos":[36372,36478],"content":"A reference to an existing <bpt id=\"p1\">&lt;xref href=\"System.EnterpriseServices.ITransaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to enlist.","needQuote":true,"needEscape":true,"source":"A reference to an existing <xref href=\"System.EnterpriseServices.ITransaction\"></xref> in which to enlist."},{"pos":[37064,37130],"content":"Enlists in the specified transaction as a distributed transaction.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enlists in the specified transaction as a distributed transaction.","pos":[0,66]}]},{"pos":[37143,37971],"content":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see [Distributed Transactions](~/add/includes/ajax-current-ext-md.md).","needQuote":false,"needEscape":true,"nodes":[{"content":"New in ADO.NET 2.0 is support for using the &lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt; method to enlist in a distributed transaction.","pos":[0,150],"source":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction."},{"content":"Because it enlists a connection in a &lt;xref:System.Transactions.Transaction&gt; instance, <bpt id=\"p1\">**</bpt>EnlistTransaction<ept id=\"p1\">**</ept> takes advantage of functionality available in the &lt;xref:System.Transactions&gt; namespace for managing distributed transactions, making it preferable to <bpt id=\"p2\">**</bpt>EnlistDistributedTransaction<ept id=\"p2\">**</ept>, which uses a <bpt id=\"p3\">**</bpt>System.EnterpriseServices.ITransaction<ept id=\"p3\">**</ept> object.","pos":[151,506],"source":" Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object."},{"content":"It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.","pos":[507,704]},{"content":"For more information about distributed transactions, see <bpt id=\"p1\">[</bpt>Distributed Transactions<ept id=\"p1\">](~/add/includes/ajax-current-ext-md.md)</ept>.","pos":[705,828],"source":" For more information about distributed transactions, see [Distributed Transactions](~/add/includes/ajax-current-ext-md.md)."}]},{"pos":[38183,38282],"content":"A reference to an existing <bpt id=\"p1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in which to enlist.","needQuote":true,"needEscape":true,"source":"A reference to an existing <xref href=\"System.Transactions.Transaction\"></xref> in which to enlist."},{"pos":[38718,38826],"content":"Returns schema information for the data source of this <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"Returns schema information for the data source of this <xref href=\"System.Data.Odbc.OdbcConnection\"></xref>."},{"pos":[38986,39064],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains schema information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information."},{"pos":[39540,39693],"content":"Returns schema information for the data source of this <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified name for the schema name.","needQuote":true,"needEscape":true,"source":"Returns schema information for the data source of this <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> using the specified name for the schema name."},{"pos":[39706,39992],"content":"When `collectionName` is null, the <xref:System.Data.DataTable> contains information about all available metadata and any restrictions.      > [!NOTE] >  All restrictions that apply to the `SQLStatistics` method also apply to the `ODBCConnection.GetSchema(\"`indexes`\")` collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"When <ph id=\"ph1\">`collectionName`</ph> is null, the &lt;xref:System.Data.DataTable&gt; contains information about all available metadata and any restrictions.","pos":[0,135],"source":"When `collectionName` is null, the <xref:System.Data.DataTable> contains information about all available metadata and any restrictions."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  All restrictions that apply to the <ph id=\"ph2\">`SQLStatistics`</ph> method also apply to the <ph id=\"ph3\">`ODBCConnection.GetSchema(\"`</ph>indexes<ph id=\"ph4\">`\")`</ph> collection.","pos":[141,281],"source":"      > [!NOTE] >  All restrictions that apply to the `SQLStatistics` method also apply to the `ODBCConnection.GetSchema(\"`indexes`\")` collection."}]},{"pos":[40176,40219],"content":"Specifies the name of the schema to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of the schema to return.","pos":[0,43]}]},{"pos":[40285,40363],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains schema information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information."},{"pos":[40898,41111],"content":"Returns schema information for the data source of this <bpt id=\"p1\">&lt;xref href=\"System.Data.Odbc.OdbcConnection\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> using the specified string for the schema name and the specified string array for the restriction values.","needQuote":true,"needEscape":true,"source":"Returns schema information for the data source of this <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> using the specified string for the schema name and the specified string array for the restriction values."},{"pos":[41124,42428],"content":"When `collectionName` is specified as null, the <xref:System.Data.DataTable> contains information about all the metadata that is available, and its restrictions.       The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you must set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.       An example of this is the \"Tables\" collection. If the \"Tables\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \"Carl,\" then you would need to pass in at least the following values: null, \"Carl\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\"\") is considered to be the value for the specified parameter.      > [!NOTE] >  All restrictions that apply to SQLStatistics method will apply to the ODBCConnection.GetSchema(\"indexes\") collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"When <ph id=\"ph1\">`collectionName`</ph> is specified as null, the &lt;xref:System.Data.DataTable&gt; contains information about all the metadata that is available, and its restrictions.","pos":[0,161],"source":"When `collectionName` is specified as null, the <xref:System.Data.DataTable> contains information about all the metadata that is available, and its restrictions."},{"content":"The <ph id=\"ph1\">`restrictionValues`</ph> parameter can supply <bpt id=\"p1\">*</bpt>n<ept id=\"p1\">*</ept> depth of values which are specified by the restrictions collection for a specific collection.","pos":[168,310],"source":"       The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection."},{"content":"In order to set values on a given restriction, and not set the values of other restrictions, you must set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.","pos":[311,553]},{"content":"An example of this is the \"Tables\" collection.","pos":[560,606]},{"content":"If the \"Tables\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \"Carl,\" then you would need to pass in at least the following values: null, \"Carl\".","pos":[607,842]},{"content":"If a restriction value is not passed in, the default values are used for that restriction.","pos":[843,933]},{"content":"This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.","pos":[934,1054]},{"content":"In that case, the empty string (\"\") is considered to be the value for the specified parameter.","pos":[1055,1149]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  All restrictions that apply to SQLStatistics method will apply to the ODBCConnection.GetSchema(\"indexes\") collection.","pos":[1155,1285],"source":"      > [!NOTE] >  All restrictions that apply to SQLStatistics method will apply to the ODBCConnection.GetSchema(\"indexes\") collection."}]},{"pos":[42640,42683],"content":"Specifies the name of the schema to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the name of the schema to return.","pos":[0,43]}]},{"pos":[42759,42822],"content":"Specifies a set of restriction values for the requested schema.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies a set of restriction values for the requested schema.","pos":[0,63]}]},{"pos":[42888,42966],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Data.DataTable\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that contains schema information.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information."},{"pos":[43397,43469],"content":"Occurs when the ODBC driver sends a warning or an informational message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Occurs when the ODBC driver sends a warning or an informational message.","pos":[0,72]}]},{"pos":[43481,43666],"content":"Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.Odbc.OdbcInfoMessageEventHandler> delegate to listen to this event.","needQuote":true,"needEscape":true,"nodes":[{"content":"Clients that want to process warnings or informational messages sent by the server should create an &lt;xref:System.Data.Odbc.OdbcInfoMessageEventHandler&gt; delegate to listen to this event.","pos":[0,185],"source":"Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.Odbc.OdbcInfoMessageEventHandler> delegate to listen to this event."}]},{"pos":[43849,43861],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[44209,44346],"content":"Opens a connection to a data source with the property settings specified by the <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"Opens a connection to a data source with the property settings specified by the &lt;xref:System.Data.Odbc.OdbcConnection.ConnectionString*&gt;.","pos":[0,137],"source":"Opens a connection to a data source with the property settings specified by the <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>."}]},{"pos":[44359,44862],"content":"The <xref:System.Data.Odbc.OdbcConnection> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source.      > [!NOTE] >  If the <xref:System.Data.Odbc.OdbcConnection> goes out of scope, the connection it represents does not close automatically. Therefore, you must explicitly close the connection by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, or by placing the connection within a `Using` statement.","needQuote":false,"needEscape":true,"nodes":[{"content":"The &lt;xref:System.Data.Odbc.OdbcConnection&gt; draws an open connection from the connection pool if one is available.","pos":[0,113],"source":"The <xref:System.Data.Odbc.OdbcConnection> draws an open connection from the connection pool if one is available."},{"content":"Otherwise, it establishes a new connection to the data source.","pos":[114,176]},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  If the &lt;xref:System.Data.Odbc.OdbcConnection&gt; goes out of scope, the connection it represents does not close automatically.","pos":[182,318],"source":"      > [!NOTE] >  If the <xref:System.Data.Odbc.OdbcConnection> goes out of scope, the connection it represents does not close automatically."},{"content":"Therefore, you must explicitly close the connection by calling &lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt;, <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept>, or by placing the connection within a <ph id=\"ph1\">`Using`</ph> statement.","pos":[319,500],"source":" Therefore, you must explicitly close the connection by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, or by placing the connection within a `Using` statement."}]},{"pos":[45102,45219],"content":"The functionality of this method is unsupported in the base class and must be implemented in a derived class instead.","needQuote":true,"needEscape":true,"nodes":[{"content":"The functionality of this method is unsupported in the base class and must be implemented in a derived class instead.","pos":[0,117]}]},{"pos":[45615,45737],"content":"Indicates that the ODBC Driver Manager environment handle can be released when the last underlying connection is released.","needQuote":true,"needEscape":true,"nodes":[{"content":"Indicates that the ODBC Driver Manager environment handle can be released when the last underlying connection is released.","pos":[0,122]}]},{"pos":[45750,46840],"content":"`ReleaseObjectPool` can be called to release the ODBC environment handle. You might want to call this method if, for example, the connection object will not be used again. When all connections in the environment are closed, the environment can be disposed. Note that calling the method alone does not actually release the active connections that exist in the environment.       The following must occur before the environment is finally disposed:      1.  Call <xref:System.Data.Odbc.OdbcConnection.Close%2A> to release the <xref:System.Data.Odbc.OdbcConnection> object from the environment.      2.  Allow each connection object to time out.      3.  Call ReleaseObjectPool.      4.  Invoke garbage collection.       Conversely, if you call <xref:System.Data.Odbc.OdbcConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call ReleaseObjectPool, the resources reserved for the environment remain available.       After an environment handle is released, a request for a new <xref:System.Data.Odbc.OdbcConnection> creates a new environment.","needQuote":false,"needEscape":true,"nodes":[{"content":"<ph id=\"ph1\">`ReleaseObjectPool`</ph> can be called to release the ODBC environment handle.","pos":[0,73],"source":"`ReleaseObjectPool` can be called to release the ODBC environment handle."},{"content":"You might want to call this method if, for example, the connection object will not be used again.","pos":[74,171]},{"content":"When all connections in the environment are closed, the environment can be disposed.","pos":[172,256]},{"content":"Note that calling the method alone does not actually release the active connections that exist in the environment.","pos":[257,371]},{"content":"The following must occur before the environment is finally disposed:      1.","pos":[378,454]},{"content":"Call &lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt; to release the &lt;xref:System.Data.Odbc.OdbcConnection&gt; object from the environment.","pos":[456,591],"source":"  Call <xref:System.Data.Odbc.OdbcConnection.Close%2A> to release the <xref:System.Data.Odbc.OdbcConnection> object from the environment."},{"content":"2.","pos":[597,599]},{"content":"Allow each connection object to time out.","pos":[601,642]},{"content":"3.","pos":[648,650]},{"content":"Call ReleaseObjectPool.","pos":[652,675]},{"content":"4.","pos":[681,683]},{"content":"Invoke garbage collection.","pos":[685,711]},{"content":"Conversely, if you call &lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt; on all active connections, and invoke garbage collection, but do not call ReleaseObjectPool, the resources reserved for the environment remain available.","pos":[718,943],"source":"       Conversely, if you call <xref:System.Data.Odbc.OdbcConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call ReleaseObjectPool, the resources reserved for the environment remain available."},{"content":"After an environment handle is released, a request for a new &lt;xref:System.Data.Odbc.OdbcConnection&gt; creates a new environment.","pos":[950,1076],"source":"       After an environment handle is released, a request for a new <xref:System.Data.Odbc.OdbcConnection> creates a new environment."}]},{"pos":[47376,47463],"content":"Gets a string that contains the version of the server to which the client is connected.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a string that contains the version of the server to which the client is connected.","pos":[0,87]}]},{"pos":[47476,48075],"content":"If ServerVersion is not supported by the underlying ODBC driver, an empty string (\"\") is returned.       The ServerVersion property takes the form '*##.##.####*,' where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The driver must render the product version in this form but can also append the product-specific version as a string (for example, \"04.01.0000 Rdb 4.1\"). This string takes the form '*major.minor.build*' where *major* and *minor* are exactly two digits and *build* is exactly four digits.","needQuote":false,"needEscape":true,"nodes":[{"content":"If ServerVersion is not supported by the underlying ODBC driver, an empty string (\"\") is returned.","pos":[0,98]},{"content":"The ServerVersion property takes the form '<bpt id=\"p1\">*</bpt>##.##.####<ept id=\"p1\">*</ept>,' where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.","pos":[105,305],"source":"       The ServerVersion property takes the form '*##.##.####*,' where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version."},{"content":"The driver must render the product version in this form but can also append the product-specific version as a string (for example, \"04.01.0000 Rdb 4.1\").","pos":[306,459]},{"content":"This string takes the form '<bpt id=\"p1\">*</bpt>major.minor.build<ept id=\"p1\">*</ept>' where <bpt id=\"p2\">*</bpt>major<ept id=\"p2\">*</ept> and <bpt id=\"p3\">*</bpt>minor<ept id=\"p3\">*</ept> are exactly two digits and <bpt id=\"p4\">*</bpt>build<ept id=\"p4\">*</ept> is exactly four digits.","pos":[460,593],"source":" This string takes the form '*major.minor.build*' where *major* and *minor* are exactly two digits and *build* is exactly four digits."}]},{"pos":[48203,48239],"content":"The version of the connected server.","needQuote":true,"needEscape":true,"nodes":[{"content":"The version of the connected server.","pos":[0,36]}]},{"pos":[48423,48448],"content":"The connection is closed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The connection is closed.","pos":[0,25]}]},{"pos":[48780,48821],"content":"Gets the current state of the connection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the current state of the connection.","pos":[0,41]}]},{"pos":[48834,49344],"content":"The following are allowed state changes:      -   From `Closed` to `Open`, using the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.      -   From `Open` to `Closed`, using either the <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** method.      > [!NOTE] >  Calling the State property on an open connection increases application overhead because each such call causes a SQL_ATTR_CONNECTION_DEAD call to the underlying ODBC driver to determine whether the connection is still valid.","needQuote":false,"needEscape":true,"nodes":[{"content":"The following are allowed state changes:      -   From <ph id=\"ph1\">`Closed`</ph> to <ph id=\"ph2\">`Open`</ph>, using the &lt;xref:System.Data.Odbc.OdbcConnection.Open%2A&gt; method.","pos":[0,139],"source":"The following are allowed state changes:      -   From `Closed` to `Open`, using the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method."},{"content":"-   From <ph id=\"ph1\">`Open`</ph> to <ph id=\"ph2\">`Closed`</ph>, using either the &lt;xref:System.Data.Odbc.OdbcConnection.Close%2A&gt; or <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept> method.","pos":[145,261],"source":"      -   From `Open` to `Closed`, using either the <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** method."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  Calling the State property on an open connection increases application overhead because each such call causes a SQL_ATTR_CONNECTION_DEAD call to the underlying ODBC driver to determine whether the connection is still valid.","pos":[267,503],"source":"      > [!NOTE] >  Calling the State property on an open connection increases application overhead because each such call causes a SQL_ATTR_CONNECTION_DEAD call to the underlying ODBC driver to determine whether the connection is still valid."}]},{"pos":[49499,49665],"content":"A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values. The default is <xref uid=\"langword_csharp_Closed\" name=\"Closed\" href=\"\"></xref>.","needQuote":true,"needEscape":true,"nodes":[{"content":"A bitwise combination of the <bpt id=\"p1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> values.","pos":[0,85],"source":"A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values."},{"content":"The default is <bpt id=\"p1\">&lt;xref uid=\"langword_csharp_Closed\" name=\"Closed\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept>.","pos":[86,166],"source":" The default is <xref uid=\"langword_csharp_Closed\" name=\"Closed\" href=\"\"></xref>."}]},{"pos":[50173,50276],"content":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.","needQuote":true,"needEscape":true,"nodes":[{"content":"For a description of this member, see <ph id=\"ph1\">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id=\"ph2\">&amp;gt;</ph>.","pos":[0,103],"source":"For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."}]},{"pos":[50288,50474],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcConnection> instance is cast to an <xref:System.ICloneable> interface.","needQuote":true,"needEscape":true,"nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcConnection> instance is cast to an <xref:System.ICloneable> interface.","pos":[0,186],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the &lt;xref:System.Data.Odbc.OdbcConnection&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.","pos":[60,186],"source":" It can be used only when the <xref:System.Data.Odbc.OdbcConnection> instance is cast to an <xref:System.ICloneable> interface."}]}]},{"pos":[50602,50661],"content":"A new <xref:System.Object> that is a copy of this instance.","needQuote":true,"needEscape":true,"nodes":[{"content":"A new &lt;xref:System.Object&gt; that is a copy of this instance.","pos":[0,59],"source":"A new <xref:System.Object> that is a copy of this instance."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Odbc.OdbcConnection\n  id: OdbcConnection\n  children:\n  - System.Data.Odbc.OdbcConnection.#ctor\n  - System.Data.Odbc.OdbcConnection.#ctor(System.String)\n  - System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  - System.Data.Odbc.OdbcConnection.BeginTransaction\n  - System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)\n  - System.Data.Odbc.OdbcConnection.Close\n  - System.Data.Odbc.OdbcConnection.ConnectionString\n  - System.Data.Odbc.OdbcConnection.ConnectionTimeout\n  - System.Data.Odbc.OdbcConnection.CreateCommand\n  - System.Data.Odbc.OdbcConnection.CreateDbCommand\n  - System.Data.Odbc.OdbcConnection.Database\n  - System.Data.Odbc.OdbcConnection.DataSource\n  - System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)\n  - System.Data.Odbc.OdbcConnection.Driver\n  - System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  - System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)\n  - System.Data.Odbc.OdbcConnection.GetSchema\n  - System.Data.Odbc.OdbcConnection.GetSchema(System.String)\n  - System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])\n  - System.Data.Odbc.OdbcConnection.InfoMessage\n  - System.Data.Odbc.OdbcConnection.Open\n  - System.Data.Odbc.OdbcConnection.ReleaseObjectPool\n  - System.Data.Odbc.OdbcConnection.ServerVersion\n  - System.Data.Odbc.OdbcConnection.State\n  - System.Data.Odbc.OdbcConnection.System#ICloneable#Clone\n  langs:\n  - csharp\n  name: OdbcConnection\n  nameWithType: OdbcConnection\n  fullName: System.Data.Odbc.OdbcConnection\n  type: Class\n  summary: Represents an open connection to a data source.\n  remarks: \"An OdbcConnection object represents a unique connection to a data source created by using a connection string or ODBC data source name (DSN). With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native ODBC driver, some methods or properties of an OdbcConnection object may not be available.  \\n  \\n The OdbcConnection object uses native resources such as ODBC environment and connection handles. You should always explicitly close any open OdbcConnection objects by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** before the OdbcConnection object goes out of scope, or by placing the connection within a `Using` statement. Not doing this leaves the freeing of these native resources to garbage collection. It might not free them immediately. This, in turn, can eventually cause the underlying driver to run out of resources or reach a maximum limit. This has resulted in intermittent failures. For example, you might experience `Maximum Connections` -related errors while many connections are waiting to be deleted by the garbage collector. Explicitly closing the connections allows for a more efficient use of native resources, enhancing scalability and improving overall application performance.  \\n  \\n> [!NOTE]\\n>  To deploy high-performance applications, you frequently must use connection pooling. However, when you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the provider manages this automatically.  \\n  \\n If one of the `Execute` methods of the <xref:System.Data.Odbc.OdbcCommand> class causes a fatal <xref:System.Data.Odbc.OdbcException> (for example, a SQL Server severity level of 20 or greater), the OdbcConnection may close. However, the user can reopen the connection and continue.  \\n  \\n An application that creates an instance of the OdbcConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. OdbcConnection creates security demands by using the <xref:System.Data.Odbc.OdbcPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.Odbc.OdbcPermissionAttribute> object. Users and administrators can also use the Code Access Security Policy Tool (Caspol.exe) to modify security policy at the computer, user, and enterprise levels. For more information, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).  \\n  \\n For more information about handling warning and informational messages from the data source, see [Connection Events](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcCommand> and an OdbcConnection. The OdbcConnection is opened and set as the <xref:System.Data.Odbc.OdbcCommand.Connection%2A> property. The example then calls <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \\n  \\n [!code-vb[Classic WebData OdbcConnection#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_3_1.vb)]\\n [!code-cs[Classic WebData OdbcConnection#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_3_1.cs)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultEvent(\"InfoMessage\")]\n\n      public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Data.Common.DbConnection\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.Data.Common.DbConnection.DbProviderFactory\n  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)\n  - System.Data.Common.DbConnection.OpenAsync\n  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbConnection.StateChange\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.#ctor\n  id: '#ctor'\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: OdbcConnection()\n  nameWithType: OdbcConnection.OdbcConnection()\n  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> class.\n  remarks: \"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|empty string (\\\"\\\")|  \\n|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|  \\n|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\\\"\\\")|  \\n  \\n You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.\"\n  example:\n  - \"The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \\n  \\n [!code-cs[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_9_1.cs)]\\n [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_9_1.vb)]\"\n  syntax:\n    content: public OdbcConnection ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcConnection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: OdbcConnection(String)\n  nameWithType: OdbcConnection.OdbcConnection(String)\n  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Initializes a new instance of the <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> class with the specified connection string.\n  remarks: \"When a new instance of <xref:System.Data.Odbc.OdbcConnection> is created, the write-only and read-only properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|`connectionString`|  \\n|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|  \\n|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|empty string (\\\"\\\")|  \\n  \\n You can change the value for these properties only by using the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property.\"\n  example:\n  - \"The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \\n  \\n [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_3_1.vb)]\\n [!code-cs[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_3_1.cs)]\"\n  syntax:\n    content: public OdbcConnection (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection used to open the data source.\n  overload: System.Data.Odbc.OdbcConnection.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  id: BeginDbTransaction(System.Data.IsolationLevel)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: BeginDbTransaction(IsolationLevel)\n  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)\n  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  syntax:\n    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);\n    parameters:\n    - id: isolationLevel\n      type: System.Data.IsolationLevel\n      description: To be added.\n    return:\n      type: System.Data.Common.DbTransaction\n      description: To be added.\n  overload: System.Data.Odbc.OdbcConnection.BeginDbTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.BeginTransaction\n  id: BeginTransaction\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: BeginTransaction()\n  nameWithType: OdbcConnection.BeginTransaction()\n  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Starts a transaction at the data source.\n  remarks: \"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \\n  \\n To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.  \\n  \\n> [!NOTE]\\n>  If you do not specify an isolation level, the isolation level will be determined by the driver being used. To specify an isolation level with the BeginTransaction method, use the overload that takes the `isolevel` parameter.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \\n  \\n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_6_1.cs)]\\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_6_1.vb)]\"\n  syntax:\n    content: public System.Data.Odbc.OdbcTransaction BeginTransaction ();\n    parameters: []\n    return:\n      type: System.Data.Odbc.OdbcTransaction\n      description: An object representing the new transaction.\n  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A transaction is currently active. Parallel transactions are not supported.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)\n  id: BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)\n  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Starts a transaction at the data source with the specified <xref href=\"System.Data.IsolationLevel\"></xref> value.\n  remarks: \"To commit or roll back the transaction, you must explicitly use the <xref:System.Data.Odbc.OdbcTransaction.Commit%2A> or <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \\n  \\n To make sure that the .NET Framework Data Provider for ODBC transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \\n  \\n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_4_1.cs)]\\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_4_1.vb)]\"\n  syntax:\n    content: public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);\n    parameters:\n    - id: isolevel\n      type: System.Data.IsolationLevel\n      description: The transaction isolation level for this connection. If you do not specify an isolation level, the default isolation level for the driver is used.\n    return:\n      type: System.Data.Odbc.OdbcTransaction\n      description: An object representing the new transaction.\n  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A transaction is currently active. Parallel transactions are not supported.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)\n  id: ChangeDatabase(System.String)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: ChangeDatabase(String)\n  nameWithType: OdbcConnection.ChangeDatabase(String)\n  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Changes the current database associated with an open <xref href=\"System.Data.Odbc.OdbcConnection\"></xref>.\n  remarks: The `value` parameter must contain a valid database name, and cannot contain a null value, an empty string (\"\"), or a string with only blank characters.\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \\n  \\n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_1_1.cs)]\\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_1_1.vb)]\"\n  syntax:\n    content: public override void ChangeDatabase (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The database name.\n  overload: System.Data.Odbc.OdbcConnection.ChangeDatabase*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The database name is not valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection is not open.\n  - type: System.Data.Odbc.OdbcException\n    commentId: T:System.Data.Odbc.OdbcException\n    description: Cannot change the database.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.Close\n  id: Close\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: OdbcConnection.Close()\n  fullName: System.Data.Odbc.OdbcConnection.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Closes the connection to the data source.\n  remarks: \"The Close method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If Close is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.  \\n  \\n An application can call Close more than one time without generating an exception.  \\n  \\n> [!NOTE]\\n>  When you use the .NET Framework Data Provider for ODBC, you do not have to enable connection pooling because the ODBC Driver Manager manages this automatically. For more information about how to enable and disabling connection pooling, see the Microsoft Open Database Connectivity (ODBC) documentation.  \\n  \\n> [!CAUTION]\\n>  Do not call Close or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](~/add/includes/ajax-current-ext-md.md).\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcConnection>, opens it, displays some of its properties, and then closes the connection.  \\n  \\n [!code-vb[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_0_1.vb)]\\n [!code-cs[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_0_1.cs)]\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcConnection.Close*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.ConnectionString\n  id: ConnectionString\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: OdbcConnection.ConnectionString\n  fullName: System.Data.Odbc.OdbcConnection.ConnectionString\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the string used to open a data source.\n  remarks: \"The ConnectionString property is designed to match ODBC connection string format as closely as possible. The ConnectionString can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver. Therefore, the syntax for the ConnectionString must exactly match what the Driver Manager and underlying driver support.  \\n  \\n You can use the ConnectionString property to connect to a variety of data sources. This includes an ODBC data source name (DSN). The following example illustrates several possible connection strings.  \\n  \\n```  \\n\\\"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;\\\"  \\n  \\n\\\"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes\\\"  \\n  \\n\\\"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\\\\bin\\\\Northwind.mdb\\\"  \\n  \\n\\\"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\\\\bin\\\\book1.xls\\\"  \\n  \\n\\\"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\\\\bin\\\"  \\n  \\n\\\"DSN=dsnname\\\"  \\n```  \\n  \\n> [!NOTE]\\n>  The .NET Framework Data Provider for ODBC does not support the `Persist Security Info` keyword that is supported by other .NET Framework data providers. However, the ConnectionString property behaves as if `Persist Security Info` were set to `false`. This means that you cannot retrieve the password from the ConnectionString property if the connection has been opened. When the ConnectionString property is read from an <xref:System.Data.Odbc.OdbcConnection> object that has been opened, the connection string is returned minus the password. You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.  \\n  \\n Many of the settings specified in the string have corresponding read-only properties (for example, `Server=(local)`, which corresponds to the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property). These properties are updated after the connection is opened, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.Odbc.OdbcConnection> properties (such as <xref:System.Data.Odbc.OdbcConnection.Database%2A>) return only default settings or those settings specified in the ConnectionString.  \\n  \\n In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method. It is the responsibility of the underlying ODBC driver to validate the connection string. If the connection string contains invalid or unsupported properties, the driver may raise an <xref:System.Data.Odbc.OdbcException> at run time.  \\n  \\n However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the ConnectionString property. At that time, the data provider verifies that the connection string meets the \\\"keyword=value;...\\\" format, but it does not verify whether keywords or values are valid. The remaining verification is performed by the underlying ODBC driver when the application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.  \\n  \\n An ODBC connection string has the following syntax:  \\n  \\n```  \\nconnection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  \\nempty-string ::=  \\nattribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  \\nattribute-keyword ::= DSN | UID | PWD  \\n | driver-defined-attribute-keyword  \\nattribute-value ::= character-string  \\ndriver-defined-attribute-keyword ::= identifier  \\n```  \\n  \\n where `character-string` has zero or more characters; `identifier` has one or more characters; `attribute-keyword` is not case sensitive; `attribute-value` can be case sensitive; and the value of the DSN keyword does not consist only of blanks.  \\n  \\n Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?*=!@ not enclosed with braces. The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks. Because of the grammar of the system information, keywords and data source names cannot contain the backslash (\\\\\\\\) character.  \\n  \\n Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required. If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.  \\n  \\n A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?*=!@ is passed intact to the driver. However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings. Avoid using embedded braces in a keyword value.  \\n  \\n The connection string may include any number of driver-defined keywords. Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string. The driver defines which keywords are required to connect to the data source.  \\n  \\n If any keywords are repeated in the connection string, there is no guarantee which value will be selected.  \\n  \\n> [!NOTE]\\n>  If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation.\"\n  syntax:\n    content: public override string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: The ODBC driver connection string that includes settings, such as the data source name, needed to establish the initial connection. The default value is an empty string (\"\"). The maximum length is 1024 characters.\n  overload: System.Data.Odbc.OdbcConnection.ConnectionString*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout\n  id: ConnectionTimeout\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: ConnectionTimeout\n  nameWithType: OdbcConnection.ConnectionTimeout\n  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error.\n  remarks: Unlike the .NET Framework data providers for SQL Server and OLE DB, the .NET Framework Data Provider for ODBC does not support setting this property as a connection string value, because it is not a valid ODBC connection keyword. To specify a connection time-out, set the ConnectionTimeout property before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>. This is equivalent to setting the ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT attribute.\n  syntax:\n    content: public int ConnectionTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time in seconds to wait for a connection to open. The default value is 15 seconds.\n  overload: System.Data.Odbc.OdbcConnection.ConnectionTimeout*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value set is less than 0.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.CreateCommand\n  id: CreateCommand\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: CreateCommand()\n  nameWithType: OdbcConnection.CreateCommand()\n  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Creates and returns an <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> object associated with the <xref href=\"System.Data.Odbc.OdbcConnection\"></xref>.\n  syntax:\n    content: public System.Data.Odbc.OdbcCommand CreateCommand ();\n    parameters: []\n    return:\n      type: System.Data.Odbc.OdbcCommand\n      description: An <xref href=\"System.Data.Odbc.OdbcCommand\"></xref> object.\n  overload: System.Data.Odbc.OdbcConnection.CreateCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand\n  id: CreateDbCommand\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: CreateDbCommand()\n  nameWithType: OdbcConnection.CreateDbCommand()\n  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  syntax:\n    content: protected override System.Data.Common.DbCommand CreateDbCommand ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbCommand\n      description: To be added.\n  overload: System.Data.Odbc.OdbcConnection.CreateDbCommand*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.Database\n  id: Database\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: Database\n  nameWithType: OdbcConnection.Database\n  fullName: System.Data.Odbc.OdbcConnection.Database\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets the name of the current database or the database to be used after a connection is opened.\n  remarks: \"At first, the Database property is set in the connection string. The Database property can be updated by using the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method. If you change the current database using an SQL statement or the <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> method, an informational message is sent and then the property is updated.  \\n  \\n Retrieving the Database property is equivalent to calling the ODBC function `SQLGetInfo` with the `Attribute` parameter set to SQL_ATTR_CURRENT_CATALOG.\"\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \\n  \\n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_1_1.cs)]\\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_1_1.vb)]\"\n  syntax:\n    content: public override string Database { get; }\n    return:\n      type: System.String\n      description: The name of the current database. The default value is an empty string (\"\") until the connection is opened.\n  overload: System.Data.Odbc.OdbcConnection.Database*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.DataSource\n  id: DataSource\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: DataSource\n  nameWithType: OdbcConnection.DataSource\n  fullName: System.Data.Odbc.OdbcConnection.DataSource\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets the server name or file name of the data source.\n  remarks: Retrieving the DataSource property is equivalent to calling the ODBC function `SQLGetInfo` with the `InfoType` parameter set to SQL_SERVER_NAME.\n  example:\n  - \"The following example creates an <xref:System.Data.Odbc.OdbcConnection> and displays the backend data source name.  \\n  \\n [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_3_1.vb)]\\n [!code-cs[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_3_1.cs)]\"\n  syntax:\n    content: public override string DataSource { get; }\n    return:\n      type: System.String\n      description: The server name or file name of the data source. The default value is an empty string (\"\") until the connection is opened.\n  overload: System.Data.Odbc.OdbcConnection.DataSource*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: OdbcConnection.Dispose(Boolean)\n  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: To be added.\n  overload: System.Data.Odbc.OdbcConnection.Dispose*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.Driver\n  id: Driver\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: Driver\n  nameWithType: OdbcConnection.Driver\n  fullName: System.Data.Odbc.OdbcConnection.Driver\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets the name of the ODBC driver specified for the current connection.\n  remarks: Retrieving the Driver property is equivalent to calling the ODBC function `SQLGetInfo` with the `InfoType` parameter set to SQL_DRIVER_NAME.\n  syntax:\n    content: public string Driver { get; }\n    return:\n      type: System.String\n      description: The name of the ODBC driver. This typically is the DLL name (for example, Sqlsrv32.dll). The default value is an empty string (\"\") until the connection is opened.\n  overload: System.Data.Odbc.OdbcConnection.Driver*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: EnlistDistributedTransaction(ITransaction)\n  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)\n  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Enlists in the specified transaction as a distributed transaction.\n  remarks: \"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose. For more information, see [Distributed Transactions](~/add/includes/ajax-current-ext-md.md).  \\n  \\n You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see [Distributed Transactions](../Topic/Distributed%20Transactions.md).  \\n  \\n EnlistDistributedTransaction returns an exception if the <xref:System.Data.OdbcClient.OdbcConnection> has already started a transaction using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OdbcClient.OdbcCommand> object), EnlistDistributedTransaction rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.\"\n  syntax:\n    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);\n    parameters:\n    - id: transaction\n      type: System.EnterpriseServices.ITransaction\n      description: A reference to an existing <xref href=\"System.EnterpriseServices.ITransaction\"></xref> in which to enlist.\n  overload: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)\n  id: EnlistTransaction(System.Transactions.Transaction)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: EnlistTransaction(Transaction)\n  nameWithType: OdbcConnection.EnlistTransaction(Transaction)\n  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Enlists in the specified transaction as a distributed transaction.\n  remarks: 'New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a **System.EnterpriseServices.ITransaction** object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see [Distributed Transactions](~/add/includes/ajax-current-ext-md.md).'\n  syntax:\n    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: A reference to an existing <xref href=\"System.Transactions.Transaction\"></xref> in which to enlist.\n  overload: System.Data.Odbc.OdbcConnection.EnlistTransaction*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.GetSchema\n  id: GetSchema\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: GetSchema()\n  nameWithType: OdbcConnection.GetSchema()\n  fullName: System.Data.Odbc.OdbcConnection.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Returns schema information for the data source of this <xref href=\"System.Data.Odbc.OdbcConnection\"></xref>.\n  syntax:\n    content: public override System.Data.DataTable GetSchema ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.\n  overload: System.Data.Odbc.OdbcConnection.GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)\n  id: GetSchema(System.String)\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: GetSchema(String)\n  nameWithType: OdbcConnection.GetSchema(String)\n  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Returns schema information for the data source of this <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> using the specified name for the schema name.\n  remarks: \"When `collectionName` is null, the <xref:System.Data.DataTable> contains information about all available metadata and any restrictions.  \\n  \\n> [!NOTE]\\n>  All restrictions that apply to the `SQLStatistics` method also apply to the `ODBCConnection.GetSchema(\\\"`indexes`\\\")` collection.\"\n  syntax:\n    content: public override System.Data.DataTable GetSchema (string collectionName);\n    parameters:\n    - id: collectionName\n      type: System.String\n      description: Specifies the name of the schema to return.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.\n  overload: System.Data.Odbc.OdbcConnection.GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])\n  id: GetSchema(System.String,System.String[])\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: GetSchema(String,String[])\n  nameWithType: OdbcConnection.GetSchema(String,String[])\n  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Returns schema information for the data source of this <xref href=\"System.Data.Odbc.OdbcConnection\"></xref> using the specified string for the schema name and the specified string array for the restriction values.\n  remarks: \"When `collectionName` is specified as null, the <xref:System.Data.DataTable> contains information about all the metadata that is available, and its restrictions.  \\n  \\n The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you must set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.  \\n  \\n An example of this is the \\\"Tables\\\" collection. If the \\\"Tables\\\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \\\"Carl,\\\" then you would need to pass in at least the following values: null, \\\"Carl\\\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\\\"\\\") is considered to be the value for the specified parameter.  \\n  \\n> [!NOTE]\\n>  All restrictions that apply to SQLStatistics method will apply to the ODBCConnection.GetSchema(\\\"indexes\\\") collection.\"\n  syntax:\n    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);\n    parameters:\n    - id: collectionName\n      type: System.String\n      description: Specifies the name of the schema to return.\n    - id: restrictionValues\n      type: System.String[]\n      description: Specifies a set of restriction values for the requested schema.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.\n  overload: System.Data.Odbc.OdbcConnection.GetSchema*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.InfoMessage\n  id: InfoMessage\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: InfoMessage\n  nameWithType: OdbcConnection.InfoMessage\n  fullName: System.Data.Odbc.OdbcConnection.InfoMessage\n  type: Event\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Occurs when the ODBC driver sends a warning or an informational message.\n  remarks: Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.Odbc.OdbcInfoMessageEventHandler> delegate to listen to this event.\n  syntax:\n    content: public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;\n    return:\n      type: System.Data.Odbc.OdbcInfoMessageEventHandler\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.Open\n  id: Open\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: OdbcConnection.Open()\n  fullName: System.Data.Odbc.OdbcConnection.Open()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Opens a connection to a data source with the property settings specified by the <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>.\n  remarks: \"The <xref:System.Data.Odbc.OdbcConnection> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Data.Odbc.OdbcConnection> goes out of scope, the connection it represents does not close automatically. Therefore, you must explicitly close the connection by calling <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, or by placing the connection within a `Using` statement.\"\n  syntax:\n    content: public override void Open ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcConnection.Open*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The functionality of this method is unsupported in the base class and must be implemented in a derived class instead.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool\n  id: ReleaseObjectPool\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: ReleaseObjectPool()\n  nameWithType: OdbcConnection.ReleaseObjectPool()\n  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Indicates that the ODBC Driver Manager environment handle can be released when the last underlying connection is released.\n  remarks: \"`ReleaseObjectPool` can be called to release the ODBC environment handle. You might want to call this method if, for example, the connection object will not be used again. When all connections in the environment are closed, the environment can be disposed. Note that calling the method alone does not actually release the active connections that exist in the environment.  \\n  \\n The following must occur before the environment is finally disposed:  \\n  \\n1.  Call <xref:System.Data.Odbc.OdbcConnection.Close%2A> to release the <xref:System.Data.Odbc.OdbcConnection> object from the environment.  \\n  \\n2.  Allow each connection object to time out.  \\n  \\n3.  Call ReleaseObjectPool.  \\n  \\n4.  Invoke garbage collection.  \\n  \\n Conversely, if you call <xref:System.Data.Odbc.OdbcConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call ReleaseObjectPool, the resources reserved for the environment remain available.  \\n  \\n After an environment handle is released, a request for a new <xref:System.Data.Odbc.OdbcConnection> creates a new environment.\"\n  syntax:\n    content: public static void ReleaseObjectPool ();\n    parameters: []\n  overload: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.ServerVersion\n  id: ServerVersion\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: ServerVersion\n  nameWithType: OdbcConnection.ServerVersion\n  fullName: System.Data.Odbc.OdbcConnection.ServerVersion\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets a string that contains the version of the server to which the client is connected.\n  remarks: \"If ServerVersion is not supported by the underlying ODBC driver, an empty string (\\\"\\\") is returned.  \\n  \\n The ServerVersion property takes the form '*##.##.####*,' where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The driver must render the product version in this form but can also append the product-specific version as a string (for example, \\\"04.01.0000 Rdb 4.1\\\"). This string takes the form '*major.minor.build*' where *major* and *minor* are exactly two digits and *build* is exactly four digits.\"\n  syntax:\n    content: public override string ServerVersion { get; }\n    return:\n      type: System.String\n      description: The version of the connected server.\n  overload: System.Data.Odbc.OdbcConnection.ServerVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection is closed.\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.State\n  id: State\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: State\n  nameWithType: OdbcConnection.State\n  fullName: System.Data.Odbc.OdbcConnection.State\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: Gets the current state of the connection.\n  remarks: \"The following are allowed state changes:  \\n  \\n-   From `Closed` to `Open`, using the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.  \\n  \\n-   From `Open` to `Closed`, using either the <xref:System.Data.Odbc.OdbcConnection.Close%2A> or **Dispose** method.  \\n  \\n> [!NOTE]\\n>  Calling the State property on an open connection increases application overhead because each such call causes a SQL_ATTR_CONNECTION_DEAD call to the underlying ODBC driver to determine whether the connection is still valid.\"\n  syntax:\n    content: public override System.Data.ConnectionState State { get; }\n    return:\n      type: System.Data.ConnectionState\n      description: A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values. The default is <xref uid=\"langword_csharp_Closed\" name=\"Closed\" href=\"\"></xref>.\n  overload: System.Data.Odbc.OdbcConnection.State*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Data.Odbc.OdbcConnection\n  langs:\n  - csharp\n  name: System.ICloneable.Clone()\n  nameWithType: OdbcConnection.System.ICloneable.Clone()\n  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.Odbc\n  summary: For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Odbc.OdbcConnection> instance is cast to an <xref:System.ICloneable> interface.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref:System.Object> that is a copy of this instance.\n  overload: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Data.Common.DbConnection\n  isExternal: false\n  name: System.Data.Common.DbConnection\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.ArgumentException\n  isExternal: true\n  name: System.ArgumentException\n- uid: System.Data.Odbc.OdbcException\n  parent: System.Data.Odbc\n  isExternal: false\n  name: OdbcException\n  nameWithType: OdbcException\n  fullName: System.Data.Odbc.OdbcException\n- uid: System.NotSupportedException\n  isExternal: true\n  name: System.NotSupportedException\n- uid: System.Data.Odbc.OdbcConnection.#ctor\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: OdbcConnection()\n  nameWithType: OdbcConnection.OdbcConnection()\n  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()\n- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: OdbcConnection(String)\n  nameWithType: OdbcConnection.OdbcConnection(String)\n  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: BeginDbTransaction(IsolationLevel)\n  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)\n  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Data.IsolationLevel\n- uid: System.Data.Odbc.OdbcConnection.BeginTransaction\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: BeginTransaction()\n  nameWithType: OdbcConnection.BeginTransaction()\n  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()\n- uid: System.Data.Odbc.OdbcTransaction\n  parent: System.Data.Odbc\n  isExternal: false\n  name: OdbcTransaction\n  nameWithType: OdbcTransaction\n  fullName: System.Data.Odbc.OdbcTransaction\n- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)\n  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)\n- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ChangeDatabase(String)\n  nameWithType: OdbcConnection.ChangeDatabase(String)\n  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)\n- uid: System.Data.Odbc.OdbcConnection.Close\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Close()\n  nameWithType: OdbcConnection.Close()\n  fullName: System.Data.Odbc.OdbcConnection.Close()\n- uid: System.Data.Odbc.OdbcConnection.ConnectionString\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: OdbcConnection.ConnectionString\n  fullName: System.Data.Odbc.OdbcConnection.ConnectionString\n- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: OdbcConnection.ConnectionTimeout\n  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Odbc.OdbcConnection.CreateCommand\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: CreateCommand()\n  nameWithType: OdbcConnection.CreateCommand()\n  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()\n- uid: System.Data.Odbc.OdbcCommand\n  parent: System.Data.Odbc\n  isExternal: false\n  name: OdbcCommand\n  nameWithType: OdbcCommand\n  fullName: System.Data.Odbc.OdbcCommand\n- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: CreateDbCommand()\n  nameWithType: OdbcConnection.CreateDbCommand()\n  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.Data.Odbc.OdbcConnection.Database\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Database\n  nameWithType: OdbcConnection.Database\n  fullName: System.Data.Odbc.OdbcConnection.Database\n- uid: System.Data.Odbc.OdbcConnection.DataSource\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: DataSource\n  nameWithType: OdbcConnection.DataSource\n  fullName: System.Data.Odbc.OdbcConnection.DataSource\n- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: OdbcConnection.Dispose(Boolean)\n  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Odbc.OdbcConnection.Driver\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Driver\n  nameWithType: OdbcConnection.Driver\n  fullName: System.Data.Odbc.OdbcConnection.Driver\n- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: EnlistDistributedTransaction(ITransaction)\n  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)\n  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)\n- uid: System.EnterpriseServices.ITransaction\n  parent: System.EnterpriseServices\n  isExternal: false\n  name: ITransaction\n  nameWithType: ITransaction\n  fullName: System.EnterpriseServices.ITransaction\n- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: EnlistTransaction(Transaction)\n  nameWithType: OdbcConnection.EnlistTransaction(Transaction)\n  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Data.Odbc.OdbcConnection.GetSchema\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: GetSchema()\n  nameWithType: OdbcConnection.GetSchema()\n  fullName: System.Data.Odbc.OdbcConnection.GetSchema()\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: GetSchema(String)\n  nameWithType: OdbcConnection.GetSchema(String)\n  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)\n- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: GetSchema(String,String[])\n  nameWithType: OdbcConnection.GetSchema(String,String[])\n  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])\n- uid: System.String[]\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: String[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Odbc.OdbcConnection.InfoMessage\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: InfoMessage\n  nameWithType: OdbcConnection.InfoMessage\n  fullName: System.Data.Odbc.OdbcConnection.InfoMessage\n- uid: System.Data.Odbc.OdbcInfoMessageEventHandler\n  parent: System.Data.Odbc\n  isExternal: false\n  name: OdbcInfoMessageEventHandler\n  nameWithType: OdbcInfoMessageEventHandler\n  fullName: System.Data.Odbc.OdbcInfoMessageEventHandler\n- uid: System.Data.Odbc.OdbcConnection.Open\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Open()\n  nameWithType: OdbcConnection.Open()\n  fullName: System.Data.Odbc.OdbcConnection.Open()\n- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ReleaseObjectPool()\n  nameWithType: OdbcConnection.ReleaseObjectPool()\n  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()\n- uid: System.Data.Odbc.OdbcConnection.ServerVersion\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ServerVersion\n  nameWithType: OdbcConnection.ServerVersion\n  fullName: System.Data.Odbc.OdbcConnection.ServerVersion\n- uid: System.Data.Odbc.OdbcConnection.State\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: State\n  nameWithType: OdbcConnection.State\n  fullName: System.Data.Odbc.OdbcConnection.State\n- uid: System.Data.ConnectionState\n  parent: System.Data\n  isExternal: false\n  name: ConnectionState\n  nameWithType: ConnectionState\n  fullName: System.Data.ConnectionState\n- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: System.ICloneable.Clone()\n  nameWithType: OdbcConnection.System.ICloneable.Clone()\n  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Odbc.OdbcConnection.#ctor*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: OdbcConnection\n  nameWithType: OdbcConnection.OdbcConnection\n- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: BeginDbTransaction\n  nameWithType: OdbcConnection.BeginDbTransaction\n- uid: System.Data.Odbc.OdbcConnection.BeginTransaction*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: BeginTransaction\n  nameWithType: OdbcConnection.BeginTransaction\n- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ChangeDatabase\n  nameWithType: OdbcConnection.ChangeDatabase\n- uid: System.Data.Odbc.OdbcConnection.Close*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Close\n  nameWithType: OdbcConnection.Close\n- uid: System.Data.Odbc.OdbcConnection.ConnectionString*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: OdbcConnection.ConnectionString\n- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: OdbcConnection.ConnectionTimeout\n- uid: System.Data.Odbc.OdbcConnection.CreateCommand*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: CreateCommand\n  nameWithType: OdbcConnection.CreateCommand\n- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: CreateDbCommand\n  nameWithType: OdbcConnection.CreateDbCommand\n- uid: System.Data.Odbc.OdbcConnection.Database*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Database\n  nameWithType: OdbcConnection.Database\n- uid: System.Data.Odbc.OdbcConnection.DataSource*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: DataSource\n  nameWithType: OdbcConnection.DataSource\n- uid: System.Data.Odbc.OdbcConnection.Dispose*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Dispose\n  nameWithType: OdbcConnection.Dispose\n- uid: System.Data.Odbc.OdbcConnection.Driver*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Driver\n  nameWithType: OdbcConnection.Driver\n- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: EnlistDistributedTransaction\n  nameWithType: OdbcConnection.EnlistDistributedTransaction\n- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: EnlistTransaction\n  nameWithType: OdbcConnection.EnlistTransaction\n- uid: System.Data.Odbc.OdbcConnection.GetSchema*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: GetSchema\n  nameWithType: OdbcConnection.GetSchema\n- uid: System.Data.Odbc.OdbcConnection.Open*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: Open\n  nameWithType: OdbcConnection.Open\n- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ReleaseObjectPool\n  nameWithType: OdbcConnection.ReleaseObjectPool\n- uid: System.Data.Odbc.OdbcConnection.ServerVersion*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: ServerVersion\n  nameWithType: OdbcConnection.ServerVersion\n- uid: System.Data.Odbc.OdbcConnection.State*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: State\n  nameWithType: OdbcConnection.State\n- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*\n  parent: System.Data.Odbc.OdbcConnection\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: OdbcConnection.System.ICloneable.Clone\n"}