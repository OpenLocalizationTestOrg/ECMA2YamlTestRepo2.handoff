{"nodes":[{"pos":[563,808],"content":"Specifies the attributes of a bitmap image. The BitmapData class is used by the <xref:System.Drawing.Bitmap.LockBits*> and <xref:System.Drawing.Bitmap.UnlockBits*> methods of the <xref href=\"System.Drawing.Bitmap\"></xref> class. Not inheritable.","needQuote":true,"needEscape":true,"nodes":[{"content":"Specifies the attributes of a bitmap image.","pos":[0,43]},{"content":"The BitmapData class is used by the &lt;xref:System.Drawing.Bitmap.LockBits<bpt id=\"p1\">*</bpt>&gt; and &lt;xref:System.Drawing.Bitmap.UnlockBits<ept id=\"p1\">*</ept>&gt; methods of the <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> class.","pos":[44,228],"source":" The BitmapData class is used by the <xref:System.Drawing.Bitmap.LockBits*> and <xref:System.Drawing.Bitmap.UnlockBits*> methods of the <xref href=\"System.Drawing.Bitmap\"></xref> class."},{"content":"Not inheritable.","pos":[229,245]}]},{"pos":[2106,2201],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.BitmapData\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.Drawing.Imaging.BitmapData\"></xref> class."},{"pos":[2683,2826],"content":"Gets or sets the pixel height of the <xref href=\"System.Drawing.Bitmap\"></xref> object. Also sometimes referred to as the number of scan lines.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the pixel height of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,87],"source":"Gets or sets the pixel height of the <xref href=\"System.Drawing.Bitmap\"></xref> object."},{"content":"Also sometimes referred to as the number of scan lines.","pos":[88,143]}]},{"pos":[2938,3012],"content":"The pixel height of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The pixel height of the <xref href=\"System.Drawing.Bitmap\"></xref> object."},{"pos":[3456,3643],"content":"Gets or sets the format of the pixel information in the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object that returned this <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Imaging.BitmapData\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the format of the pixel information in the <xref href=\"System.Drawing.Bitmap\"></xref> object that returned this <xref href=\"System.Drawing.Imaging.BitmapData\"></xref> object."},{"pos":[3655,3759],"content":"The format defines how many bits of memory are needed to store the color information for a single pixel.","needQuote":true,"needEscape":true,"nodes":[{"content":"The format defines how many bits of memory are needed to store the color information for a single pixel.","pos":[0,104]}]},{"pos":[3929,4106],"content":"A <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Imaging.PixelFormat\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> that specifies the format of the pixel information in the associated <bpt id=\"p2\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"A <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> that specifies the format of the pixel information in the associated <xref href=\"System.Drawing.Bitmap\"></xref> object."},{"pos":[4540,4561],"content":"Reserved. Do not use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved. Do not use.","pos":[0,21],"nodes":[{"content":"Reserved.","pos":[0,9]},{"content":"Do not use.","pos":[10,21]}]}]},{"pos":[4675,4696],"content":"Reserved. Do not use.","needQuote":true,"needEscape":true,"nodes":[{"content":"Reserved. Do not use.","pos":[0,21],"nodes":[{"content":"Reserved.","pos":[0,9]},{"content":"Do not use.","pos":[10,21]}]}]},{"pos":[5112,5241],"content":"Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.","pos":[0,129],"nodes":[{"content":"Gets or sets the address of the first pixel data in the bitmap.","pos":[0,63]},{"content":"This can also be thought of as the first scan line in the bitmap.","pos":[64,129]}]}]},{"pos":[6443,6493],"content":"The address of the first pixel data in the bitmap.","needQuote":true,"needEscape":true,"nodes":[{"content":"The address of the first pixel data in the bitmap.","pos":[0,50]}]},{"pos":[6911,7023],"content":"Gets or sets the stride width (also called scan width) of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"Gets or sets the stride width (also called scan width) of the <xref href=\"System.Drawing.Bitmap\"></xref> object."},{"pos":[7035,7238],"content":"The stride is the width of a single row of pixels (a scan line), rounded up to a four-byte boundary. If the stride is positive, the bitmap is top-down. If the stride is negative, the bitmap is bottom-up.","needQuote":true,"needEscape":true,"nodes":[{"content":"The stride is the width of a single row of pixels (a scan line), rounded up to a four-byte boundary. If the stride is positive, the bitmap is top-down. If the stride is negative, the bitmap is bottom-up.","pos":[0,203],"nodes":[{"content":"The stride is the width of a single row of pixels (a scan line), rounded up to a four-byte boundary.","pos":[0,100]},{"content":"If the stride is positive, the bitmap is top-down.","pos":[101,151]},{"content":"If the stride is negative, the bitmap is bottom-up.","pos":[152,203]}]}]},{"pos":[7350,7435],"content":"The stride width, in bytes, of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The stride width, in bytes, of the <xref href=\"System.Drawing.Bitmap\"></xref> object."},{"pos":[7849,8005],"content":"Gets or sets the pixel width of the <xref href=\"System.Drawing.Bitmap\"></xref> object. This can also be thought of as the number of pixels in one scan line.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets or sets the pixel width of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","pos":[0,86],"source":"Gets or sets the pixel width of the <xref href=\"System.Drawing.Bitmap\"></xref> object."},{"content":"This can also be thought of as the number of pixels in one scan line.","pos":[87,156]}]},{"pos":[8116,8189],"content":"The pixel width of the <bpt id=\"p1\">&lt;xref href=\"System.Drawing.Bitmap\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object.","needQuote":true,"needEscape":true,"source":"The pixel width of the <xref href=\"System.Drawing.Bitmap\"></xref> object."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.Imaging.BitmapData\n  id: BitmapData\n  children:\n  - System.Drawing.Imaging.BitmapData.#ctor\n  - System.Drawing.Imaging.BitmapData.Height\n  - System.Drawing.Imaging.BitmapData.PixelFormat\n  - System.Drawing.Imaging.BitmapData.Reserved\n  - System.Drawing.Imaging.BitmapData.Scan0\n  - System.Drawing.Imaging.BitmapData.Stride\n  - System.Drawing.Imaging.BitmapData.Width\n  langs:\n  - csharp\n  name: BitmapData\n  nameWithType: BitmapData\n  fullName: System.Drawing.Imaging.BitmapData\n  type: Class\n  summary: Specifies the attributes of a bitmap image. The BitmapData class is used by the <xref:System.Drawing.Bitmap.LockBits*> and <xref:System.Drawing.Bitmap.UnlockBits*> methods of the <xref href=\"System.Drawing.Bitmap\"></xref> class. Not inheritable.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the BitmapData class with the <xref:System.Drawing.Bitmap.LockBits%2A> and <xref:System.Drawing.Bitmap.UnlockBits%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/t-system.drawing.imaging_1_1.cs)]\\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/t-system.drawing.imaging_1_1.vb)]\\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/t-system.drawing.imaging_1_1.cpp)]\"\n  syntax:\n    content: public sealed class BitmapData\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.#ctor\n  id: '#ctor'\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: BitmapData()\n  nameWithType: BitmapData.BitmapData()\n  fullName: System.Drawing.Imaging.BitmapData.BitmapData()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.Imaging.BitmapData\"></xref> class.\n  syntax:\n    content: public BitmapData ();\n    parameters: []\n  overload: System.Drawing.Imaging.BitmapData.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.Height\n  id: Height\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: Height\n  nameWithType: BitmapData.Height\n  fullName: System.Drawing.Imaging.BitmapData.Height\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets or sets the pixel height of the <xref href=\"System.Drawing.Bitmap\"></xref> object. Also sometimes referred to as the number of scan lines.\n  syntax:\n    content: public int Height { get; set; }\n    return:\n      type: System.Int32\n      description: The pixel height of the <xref href=\"System.Drawing.Bitmap\"></xref> object.\n  overload: System.Drawing.Imaging.BitmapData.Height*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.PixelFormat\n  id: PixelFormat\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: PixelFormat\n  nameWithType: BitmapData.PixelFormat\n  fullName: System.Drawing.Imaging.BitmapData.PixelFormat\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets or sets the format of the pixel information in the <xref href=\"System.Drawing.Bitmap\"></xref> object that returned this <xref href=\"System.Drawing.Imaging.BitmapData\"></xref> object.\n  remarks: The format defines how many bits of memory are needed to store the color information for a single pixel.\n  syntax:\n    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; set; }\n    return:\n      type: System.Drawing.Imaging.PixelFormat\n      description: A <xref href=\"System.Drawing.Imaging.PixelFormat\"></xref> that specifies the format of the pixel information in the associated <xref href=\"System.Drawing.Bitmap\"></xref> object.\n  overload: System.Drawing.Imaging.BitmapData.PixelFormat*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.Reserved\n  id: Reserved\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: Reserved\n  nameWithType: BitmapData.Reserved\n  fullName: System.Drawing.Imaging.BitmapData.Reserved\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Reserved. Do not use.\n  syntax:\n    content: public int Reserved { get; set; }\n    return:\n      type: System.Int32\n      description: Reserved. Do not use.\n  overload: System.Drawing.Imaging.BitmapData.Reserved*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.Scan0\n  id: Scan0\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: Scan0\n  nameWithType: BitmapData.Scan0\n  fullName: System.Drawing.Imaging.BitmapData.Scan0\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, and Scan0 properties; the <xref:System.Drawing.Bitmap.LockBits%2A> and <xref:System.Drawing.Bitmap.UnlockBits%2A> methods; and the <xref:System.Drawing.Imaging.ImageLockMode> enumeration. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form's Paint event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n> [!NOTE]\\n>  The following example code was created for use with an image with the <xref:System.Drawing.Imaging.PixelFormat> format.  \\n  \\n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/p-system.drawing.imaging_1.cs)]\\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/p-system.drawing.imaging_1.vb)]\\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/p-system.drawing.imaging_1.cpp)]\"\n  syntax:\n    content: public IntPtr Scan0 { get; set; }\n    return:\n      type: System.IntPtr\n      description: The address of the first pixel data in the bitmap.\n  overload: System.Drawing.Imaging.BitmapData.Scan0*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.Stride\n  id: Stride\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: Stride\n  nameWithType: BitmapData.Stride\n  fullName: System.Drawing.Imaging.BitmapData.Stride\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets or sets the stride width (also called scan width) of the <xref href=\"System.Drawing.Bitmap\"></xref> object.\n  remarks: The stride is the width of a single row of pixels (a scan line), rounded up to a four-byte boundary. If the stride is positive, the bitmap is top-down. If the stride is negative, the bitmap is bottom-up.\n  syntax:\n    content: public int Stride { get; set; }\n    return:\n      type: System.Int32\n      description: The stride width, in bytes, of the <xref href=\"System.Drawing.Bitmap\"></xref> object.\n  overload: System.Drawing.Imaging.BitmapData.Stride*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Drawing.Imaging.BitmapData.Width\n  id: Width\n  parent: System.Drawing.Imaging.BitmapData\n  langs:\n  - csharp\n  name: Width\n  nameWithType: BitmapData.Width\n  fullName: System.Drawing.Imaging.BitmapData.Width\n  type: Property\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing.Imaging\n  summary: Gets or sets the pixel width of the <xref href=\"System.Drawing.Bitmap\"></xref> object. This can also be thought of as the number of pixels in one scan line.\n  syntax:\n    content: public int Width { get; set; }\n    return:\n      type: System.Int32\n      description: The pixel width of the <xref href=\"System.Drawing.Bitmap\"></xref> object.\n  overload: System.Drawing.Imaging.BitmapData.Width*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Drawing.Imaging.BitmapData.#ctor\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: BitmapData()\n  nameWithType: BitmapData.BitmapData()\n  fullName: System.Drawing.Imaging.BitmapData.BitmapData()\n- uid: System.Drawing.Imaging.BitmapData.Height\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Height\n  nameWithType: BitmapData.Height\n  fullName: System.Drawing.Imaging.BitmapData.Height\n- uid: System.Int32\n  parent: System\n  isExternal: true\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.Imaging.BitmapData.PixelFormat\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: PixelFormat\n  nameWithType: BitmapData.PixelFormat\n  fullName: System.Drawing.Imaging.BitmapData.PixelFormat\n- uid: System.Drawing.Imaging.PixelFormat\n  parent: System.Drawing.Imaging\n  isExternal: false\n  name: PixelFormat\n  nameWithType: PixelFormat\n  fullName: System.Drawing.Imaging.PixelFormat\n- uid: System.Drawing.Imaging.BitmapData.Reserved\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Reserved\n  nameWithType: BitmapData.Reserved\n  fullName: System.Drawing.Imaging.BitmapData.Reserved\n- uid: System.Drawing.Imaging.BitmapData.Scan0\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Scan0\n  nameWithType: BitmapData.Scan0\n  fullName: System.Drawing.Imaging.BitmapData.Scan0\n- uid: System.IntPtr\n  parent: System\n  isExternal: true\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Drawing.Imaging.BitmapData.Stride\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Stride\n  nameWithType: BitmapData.Stride\n  fullName: System.Drawing.Imaging.BitmapData.Stride\n- uid: System.Drawing.Imaging.BitmapData.Width\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Width\n  nameWithType: BitmapData.Width\n  fullName: System.Drawing.Imaging.BitmapData.Width\n- uid: System.Drawing.Imaging.BitmapData.#ctor*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: BitmapData\n  nameWithType: BitmapData.BitmapData\n- uid: System.Drawing.Imaging.BitmapData.Height*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Height\n  nameWithType: BitmapData.Height\n- uid: System.Drawing.Imaging.BitmapData.PixelFormat*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: PixelFormat\n  nameWithType: BitmapData.PixelFormat\n- uid: System.Drawing.Imaging.BitmapData.Reserved*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Reserved\n  nameWithType: BitmapData.Reserved\n- uid: System.Drawing.Imaging.BitmapData.Scan0*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Scan0\n  nameWithType: BitmapData.Scan0\n- uid: System.Drawing.Imaging.BitmapData.Stride*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Stride\n  nameWithType: BitmapData.Stride\n- uid: System.Drawing.Imaging.BitmapData.Width*\n  parent: System.Drawing.Imaging.BitmapData\n  isExternal: false\n  name: Width\n  nameWithType: BitmapData.Width\n"}