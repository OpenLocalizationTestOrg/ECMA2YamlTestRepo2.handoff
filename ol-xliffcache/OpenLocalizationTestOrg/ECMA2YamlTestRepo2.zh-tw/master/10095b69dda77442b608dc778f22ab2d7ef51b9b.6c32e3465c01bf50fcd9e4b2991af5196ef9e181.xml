{"nodes":[{"pos":[591,645],"content":"Enables the creation of an XPath from a data contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables the creation of an XPath from a data contract.","pos":[0,54]}]},{"pos":[1862,1961],"content":"Creates an XPath using the specified operation name, parameter name, and data contract information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Creates an XPath using the specified operation name, parameter name, and data contract information.","pos":[0,99]}]},{"pos":[2344,2434],"content":"The name of the service contract XML element that contains the service contract namespace.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the service contract XML element that contains the service contract namespace.","pos":[0,90]}]},{"pos":[2504,2538],"content":"The name of the service operation.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the service operation.","pos":[0,34]}]},{"pos":[2608,2652],"content":"The name of the service operation parameter.","needQuote":true,"needEscape":true,"nodes":[{"content":"The name of the service operation parameter.","pos":[0,44]}]},{"pos":[2717,2906],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> to indicate that the service operation is a response; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the service operation is a response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."},{"pos":[2965,2983],"content":"The data contract.","needQuote":true,"needEscape":true,"nodes":[{"content":"The data contract.","pos":[0,18]}]},{"pos":[3069,3242],"content":"The metadata, generated using the <xref:System.Type.GetMember*> method of the <xref:System.Type> class, which points to the specific data member used to generated the query.","needQuote":true,"needEscape":true,"nodes":[{"content":"The metadata, generated using the &lt;xref:System.Type.GetMember*&gt; method of the &lt;xref:System.Type&gt; class, which points to the specific data member used to generated the query.","pos":[0,173],"source":"The metadata, generated using the <xref:System.Type.GetMember*> method of the <xref:System.Type> class, which points to the specific data member used to generated the query."}]},{"pos":[3326,3487],"content":"When this method returns, contains the XML namespaces and their prefixes found in the data contract. Instantiate this parameter before passing it in this method.","needQuote":true,"needEscape":true,"nodes":[{"content":"When this method returns, contains the XML namespaces and their prefixes found in the data contract. Instantiate this parameter before passing it in this method.","pos":[0,161],"nodes":[{"content":"When this method returns, contains the XML namespaces and their prefixes found in the data contract.","pos":[0,100]},{"content":"Instantiate this parameter before passing it in this method.","pos":[101,161]}]}]},{"pos":[3545,3646],"content":"The XPath generated from the specified operation name, parameter name, and data contract information.","needQuote":true,"needEscape":true,"nodes":[{"content":"The XPath generated from the specified operation name, parameter name, and data contract information.","pos":[0,101]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.ParameterXPathQueryGenerator\n  id: ParameterXPathQueryGenerator\n  children:\n  - System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)\n  langs:\n  - csharp\n  name: ParameterXPathQueryGenerator\n  nameWithType: ParameterXPathQueryGenerator\n  fullName: System.ServiceModel.Description.ParameterXPathQueryGenerator\n  type: Class\n  summary: Enables the creation of an XPath from a data contract.\n  syntax:\n    content: public static class ParameterXPathQueryGenerator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)\n  id: CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)\n  parent: System.ServiceModel.Description.ParameterXPathQueryGenerator\n  langs:\n  - csharp\n  name: CreateFromDataContractSerializer(XName,String,String,Boolean,Type,MemberInfo[],XmlNamespaceManager)\n  nameWithType: ParameterXPathQueryGenerator.CreateFromDataContractSerializer(XName,String,String,Boolean,Type,MemberInfo[],XmlNamespaceManager)\n  fullName: System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(XName,String,String,Boolean,Type,MemberInfo[],XmlNamespaceManager)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Creates an XPath using the specified operation name, parameter name, and data contract information.\n  syntax:\n    content: public static string CreateFromDataContractSerializer (System.Xml.Linq.XName serviceContractName, string operationName, string parameterName, bool isReply, Type type, System.Reflection.MemberInfo[] pathToMember, out System.Xml.XmlNamespaceManager namespaces);\n    parameters:\n    - id: serviceContractName\n      type: System.Xml.Linq.XName\n      description: The name of the service contract XML element that contains the service contract namespace.\n    - id: operationName\n      type: System.String\n      description: The name of the service operation.\n    - id: parameterName\n      type: System.String\n      description: The name of the service operation parameter.\n    - id: isReply\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> to indicate that the service operation is a response; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n    - id: type\n      type: System.Type\n      description: The data contract.\n    - id: pathToMember\n      type: System.Reflection.MemberInfo[]\n      description: The metadata, generated using the <xref:System.Type.GetMember*> method of the <xref:System.Type> class, which points to the specific data member used to generated the query.\n    - id: namespaces\n      type: System.Xml.XmlNamespaceManager\n      description: When this method returns, contains the XML namespaces and their prefixes found in the data contract. Instantiate this parameter before passing it in this method.\n    return:\n      type: System.String\n      description: The XPath generated from the specified operation name, parameter name, and data contract information.\n  overload: System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(System.Xml.Linq.XName,System.String,System.String,System.Boolean,System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)\n  parent: System.ServiceModel.Description.ParameterXPathQueryGenerator\n  isExternal: false\n  name: CreateFromDataContractSerializer(XName,String,String,Boolean,Type,MemberInfo[],XmlNamespaceManager)\n  nameWithType: ParameterXPathQueryGenerator.CreateFromDataContractSerializer(XName,String,String,Boolean,Type,MemberInfo[],XmlNamespaceManager)\n  fullName: System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer(XName,String,String,Boolean,Type,MemberInfo[],XmlNamespaceManager)\n- uid: System.String\n  parent: System\n  isExternal: true\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Linq.XName\n  parent: System.Xml.Linq\n  isExternal: true\n  name: XName\n  nameWithType: XName\n  fullName: System.Xml.Linq.XName\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: true\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: true\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: MemberInfo[]\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.XmlNamespaceManager\n  parent: System.Xml\n  isExternal: true\n  name: XmlNamespaceManager\n  nameWithType: XmlNamespaceManager\n  fullName: System.Xml.XmlNamespaceManager\n- uid: System.ServiceModel.Description.ParameterXPathQueryGenerator.CreateFromDataContractSerializer*\n  parent: System.ServiceModel.Description.ParameterXPathQueryGenerator\n  isExternal: false\n  name: CreateFromDataContractSerializer\n  nameWithType: ParameterXPathQueryGenerator.CreateFromDataContractSerializer\n"}