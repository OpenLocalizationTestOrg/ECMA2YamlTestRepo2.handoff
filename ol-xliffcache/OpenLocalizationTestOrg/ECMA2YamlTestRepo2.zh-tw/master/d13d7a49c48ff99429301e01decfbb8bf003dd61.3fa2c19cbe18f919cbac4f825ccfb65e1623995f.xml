{"nodes":[{"pos":[294,389],"content":"Represents the method that will handle the \"SourceChanged\" event on specific listener elements.","needQuote":true,"needEscape":true,"nodes":[{"content":"Represents the method that will handle the \"SourceChanged\" event on specific listener elements.","pos":[0,95]}]},{"pos":[402,1308],"content":"The \"SourceChanged\" event that this delegate represents handlers for is not exposed as a public [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event, as is the case with most routed events. Instead, \"SourceChanged\" is a routed event that remains private to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is direct routed. Because it is direct routed, `sender` and the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data are always the same object. You can add and remove handlers to this event despite the private access level of the event itself by using the public methods <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A> and <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.       The `sender` of the event will be a derived class of <xref:System.Windows.PresentationSource>.","needQuote":false,"needEscape":true,"nodes":[{"content":"The \"SourceChanged\" event that this delegate represents handlers for is not exposed as a public <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> event, as is the case with most routed events.","pos":[0,204],"source":"The \"SourceChanged\" event that this delegate represents handlers for is not exposed as a public [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event, as is the case with most routed events."},{"content":"Instead, \"SourceChanged\" is a routed event that remains private to the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is direct routed.","pos":[205,388],"source":" Instead, \"SourceChanged\" is a routed event that remains private to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is direct routed."},{"content":"Because it is direct routed, <ph id=\"ph1\">`sender`</ph> and the &lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt; in the event data are always the same object.","pos":[389,528],"source":" Because it is direct routed, `sender` and the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data are always the same object."},{"content":"You can add and remove handlers to this event despite the private access level of the event itself by using the public methods &lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt; and &lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;.","pos":[529,799],"source":" You can add and remove handlers to this event despite the private access level of the event itself by using the public methods <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A> and <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>."},{"content":"The <ph id=\"ph1\">`sender`</ph> of the event will be a derived class of &lt;xref:System.Windows.PresentationSource&gt;.","pos":[806,900],"source":"       The `sender` of the event will be a derived class of <xref:System.Windows.PresentationSource>."}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.SourceChangedEventHandler\n  id: SourceChangedEventHandler\n  langs:\n  - csharp\n  name: SourceChangedEventHandler\n  nameWithType: SourceChangedEventHandler\n  fullName: System.Windows.SourceChangedEventHandler\n  type: Delegate\n  summary: Represents the method that will handle the \"SourceChanged\" event on specific listener elements.\n  remarks: \"The \\\"SourceChanged\\\" event that this delegate represents handlers for is not exposed as a public [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] event, as is the case with most routed events. Instead, \\\"SourceChanged\\\" is a routed event that remains private to the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is direct routed. Because it is direct routed, `sender` and the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data are always the same object. You can add and remove handlers to this event despite the private access level of the event itself by using the public methods <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A> and <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.  \\n  \\n The `sender` of the event will be a derived class of <xref:System.Windows.PresentationSource>.\"\n  syntax:\n    content: public delegate void SourceChangedEventHandler(object sender, SourceChangedEventArgs e);\n  inheritance:\n  - System.Delegate\n  platform:\n  - net462\nreferences:\n- uid: System.Delegate\n  isExternal: false\n  name: System.Delegate\n"}