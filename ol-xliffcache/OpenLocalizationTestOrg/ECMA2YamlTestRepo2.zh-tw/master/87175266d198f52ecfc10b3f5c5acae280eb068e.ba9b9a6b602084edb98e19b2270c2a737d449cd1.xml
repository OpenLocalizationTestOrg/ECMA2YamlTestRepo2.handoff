{"nodes":[{"pos":[813,879],"content":"This class can be used for issuing the asymmetric key based token.","needQuote":true,"needEscape":true,"nodes":[{"content":"This class can be used for issuing the asymmetric key based token.","pos":[0,66]}]},{"pos":[1610,1725],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> class."},{"pos":[1737,1776],"content":"The constructor used for extensibility.","needQuote":true,"needEscape":true,"nodes":[{"content":"The constructor used for extensibility.","pos":[0,39]}]},{"pos":[2610,2751],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class based on a key identifier.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> class based on a key identifier."},{"pos":[2763,2815],"content":"Constructs a proof token based on an key identifier.","needQuote":true,"needEscape":true,"nodes":[{"content":"Constructs a proof token based on an key identifier.","pos":[0,52]}]},{"pos":[3060,3117],"content":"The key identifier on which to construct the proof token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier on which to construct the proof token.","pos":[0,57]}]},{"pos":[3784,3925],"content":"Initializes a new instance of the <bpt id=\"p1\">&lt;xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> class based on an RSA algorithm.","needQuote":true,"needEscape":true,"source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> class based on an RSA algorithm."},{"pos":[3937,3988],"content":"Constructs a proof token based on an RSA algorithm.","needQuote":true,"needEscape":true,"nodes":[{"content":"Constructs a proof token based on an RSA algorithm.","pos":[0,51]}]},{"pos":[4197,4253],"content":"The RSA algorithm on which to construct the proof token.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSA algorithm on which to construct the proof token.","pos":[0,56]}]},{"pos":[5008,5073],"content":"Applies the proof descriptor to the RSTR's requested proof token.","needQuote":true,"needEscape":true,"nodes":[{"content":"Applies the proof descriptor to the RSTR's requested proof token.","pos":[0,65]}]},{"pos":[5085,5164],"content":"For an asymmetric token, there is nothing to write into the RSTR’s proof token.","needQuote":true,"needEscape":true,"nodes":[{"content":"For an asymmetric token, there is nothing to write into the RSTR’s proof token.","pos":[0,79]}]},{"pos":[5431,5473],"content":"The RSTR on which to apply the descriptor.","needQuote":true,"needEscape":true,"nodes":[{"content":"The RSTR on which to apply the descriptor.","pos":[0,42]}]},{"pos":[6034,6168],"content":"Gets the key identifier that the requestor has provided from the use key. It can be echoed back inside the SAML token if it is needed.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets the key identifier that the requestor has provided from the use key. It can be echoed back inside the SAML token if it is needed.","pos":[0,134],"nodes":[{"content":"Gets the key identifier that the requestor has provided from the use key.","pos":[0,73]},{"content":"It can be echoed back inside the SAML token if it is needed.","pos":[74,134]}]}]},{"pos":[6374,6442],"content":"The key identifier that the requestor has provided from the use key.","needQuote":true,"needEscape":true,"nodes":[{"content":"The key identifier that the requestor has provided from the use key.","pos":[0,68]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  id: AsymmetricProofDescriptor\n  children:\n  - System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor\n  - System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.Security.Cryptography.RSA)\n  - System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  - System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier\n  langs:\n  - csharp\n  name: AsymmetricProofDescriptor\n  nameWithType: AsymmetricProofDescriptor\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  type: Class\n  summary: This class can be used for issuing the asymmetric key based token.\n  syntax:\n    content: 'public class AsymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.ProofDescriptor\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  langs:\n  - csharp\n  name: AsymmetricProofDescriptor()\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor()\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.AsymmetricProofDescriptor()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> class.\n  remarks: The constructor used for extensibility.\n  syntax:\n    content: public AsymmetricProofDescriptor ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)'\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  langs:\n  - csharp\n  name: AsymmetricProofDescriptor(SecurityKeyIdentifier)\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.AsymmetricProofDescriptor(SecurityKeyIdentifier)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> class based on a key identifier.\n  remarks: Constructs a proof token based on an key identifier.\n  syntax:\n    content: public AsymmetricProofDescriptor (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier on which to construct the proof token.\n  overload: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.Security.Cryptography.RSA)\n  id: '#ctor(System.Security.Cryptography.RSA)'\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  langs:\n  - csharp\n  name: AsymmetricProofDescriptor(RSA)\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor(RSA)\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.AsymmetricProofDescriptor(RSA)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.AsymmetricProofDescriptor\"></xref> class based on an RSA algorithm.\n  remarks: Constructs a proof token based on an RSA algorithm.\n  syntax:\n    content: public AsymmetricProofDescriptor (System.Security.Cryptography.RSA rsaAlgorithm);\n    parameters:\n    - id: rsaAlgorithm\n      type: System.Security.Cryptography.RSA\n      description: The RSA algorithm on which to construct the proof token.\n  overload: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  langs:\n  - csharp\n  name: ApplyTo(RequestSecurityTokenResponse)\n  nameWithType: AsymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Applies the proof descriptor to the RSTR's requested proof token.\n  remarks: For an asymmetric token, there is nothing to write into the RSTR’s proof token.\n  syntax:\n    content: public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);\n    parameters:\n    - id: response\n      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n      description: The RSTR on which to apply the descriptor.\n  overload: System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier\n  id: KeyIdentifier\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  langs:\n  - csharp\n  name: KeyIdentifier\n  nameWithType: AsymmetricProofDescriptor.KeyIdentifier\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the key identifier that the requestor has provided from the use key. It can be echoed back inside the SAML token if it is needed.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier that the requestor has provided from the use key.\n  overload: System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.IdentityModel.Tokens.ProofDescriptor\n  isExternal: false\n  name: System.IdentityModel.Tokens.ProofDescriptor\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: AsymmetricProofDescriptor()\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor()\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.AsymmetricProofDescriptor()\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: AsymmetricProofDescriptor(SecurityKeyIdentifier)\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor(SecurityKeyIdentifier)\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.AsymmetricProofDescriptor(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.Security.Cryptography.RSA)\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: AsymmetricProofDescriptor(RSA)\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor(RSA)\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.AsymmetricProofDescriptor(RSA)\n- uid: System.Security.Cryptography.RSA\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSA\n  nameWithType: RSA\n  fullName: System.Security.Cryptography.RSA\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: ApplyTo(RequestSecurityTokenResponse)\n  nameWithType: AsymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(RequestSecurityTokenResponse)\n- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n  parent: System.IdentityModel.Protocols.WSTrust\n  isExternal: false\n  name: RequestSecurityTokenResponse\n  nameWithType: RequestSecurityTokenResponse\n  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: KeyIdentifier\n  nameWithType: AsymmetricProofDescriptor.KeyIdentifier\n  fullName: System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor*\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: AsymmetricProofDescriptor\n  nameWithType: AsymmetricProofDescriptor.AsymmetricProofDescriptor\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo*\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: ApplyTo\n  nameWithType: AsymmetricProofDescriptor.ApplyTo\n- uid: System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier*\n  parent: System.IdentityModel.Tokens.AsymmetricProofDescriptor\n  isExternal: false\n  name: KeyIdentifier\n  nameWithType: AsymmetricProofDescriptor.KeyIdentifier\n"}