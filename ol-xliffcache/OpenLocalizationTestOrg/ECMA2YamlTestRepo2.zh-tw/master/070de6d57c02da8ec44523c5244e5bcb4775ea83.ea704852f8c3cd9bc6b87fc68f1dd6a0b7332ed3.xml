{"nodes":[{"pos":[606,678],"content":"Provides an interface that can invoke serialization and deserialization.","needQuote":true,"needEscape":true,"nodes":[{"content":"Provides an interface that can invoke serialization and deserialization.","pos":[0,72]}]},{"pos":[691,1698],"content":"This service provides methods to convert a collection of objects to a serializable object that represents them, and to convert serialization data to the object or objects that it represents.       All components that support a designer must support serialization of each component's type. This occurs when the designer scans the public properties, methods, and events of each type and represents these within a type descriptor.       This interface uses the technique of scanning members to convert a collection of components into a single object that supports run-time serialization. This does not necessarily provide for the serialization of custom types that belong to the class. Many objects require a custom serializer to have their values serialized at run time. To specify a serializer for a custom type, use a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> attribute or implement an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>.","needQuote":false,"needEscape":true,"nodes":[{"content":"This service provides methods to convert a collection of objects to a serializable object that represents them, and to convert serialization data to the object or objects that it represents.       All components that support a designer must support serialization of each component's type. This occurs when the designer scans the public properties, methods, and events of each type and represents these within a type descriptor.       This interface uses the technique of scanning members to convert a collection of components into a single object that supports run-time serialization. This does not necessarily provide for the serialization of custom types that belong to the class. Many objects require a custom serializer to have their values serialized at run time. To specify a serializer for a custom type, use a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> attribute or implement an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>.","pos":[0,1003],"nodes":[{"content":"This service provides methods to convert a collection of objects to a serializable object that represents them, and to convert serialization data to the object or objects that it represents.","pos":[0,190]},{"content":"All components that support a designer must support serialization of each component's type.","pos":[197,288]},{"content":"This occurs when the designer scans the public properties, methods, and events of each type and represents these within a type descriptor.","pos":[289,427]},{"content":"This interface uses the technique of scanning members to convert a collection of components into a single object that supports run-time serialization.","pos":[434,584]},{"content":"This does not necessarily provide for the serialization of custom types that belong to the class.","pos":[585,682]},{"content":"Many objects require a custom serializer to have their values serialized at run time.","pos":[683,768]},{"content":"To specify a serializer for a custom type, use a &lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&gt; attribute or implement an &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&gt;.","pos":[769,1003],"source":" To specify a serializer for a custom type, use a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> attribute or implement an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>."}]}]},{"pos":[2359,2473],"content":"Deserializes the specified serialization data object and returns a collection of objects represented by that data.","needQuote":true,"needEscape":true,"nodes":[{"content":"Deserializes the specified serialization data object and returns a collection of objects represented by that data.","pos":[0,114]}]},{"pos":[2664,2704],"content":"An object consisting of serialized data.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object consisting of serialized data.","pos":[0,40]}]},{"pos":[2779,2884],"content":"An <xref:System.Collections.ICollection> of objects rebuilt from the specified serialization data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"An &lt;xref:System.Collections.ICollection&gt; of objects rebuilt from the specified serialization data object.","pos":[0,105],"source":"An <xref:System.Collections.ICollection> of objects rebuilt from the specified serialization data object."}]},{"pos":[3611,3705],"content":"Serializes the specified collection of objects and stores them in a serialization data object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Serializes the specified collection of objects and stores them in a serialization data object.","pos":[0,94]}]},{"pos":[3718,4080],"content":"The returned object fully supports run-time serialization.       The object returned from this method contains live references to objects in the collection. This object can then be passed to any run-time serialization mechanism. The object itself serializes components the same way designers write source for them, by storing their state, property by property.","needQuote":false,"needEscape":true,"nodes":[{"content":"The returned object fully supports run-time serialization.       The object returned from this method contains live references to objects in the collection. This object can then be passed to any run-time serialization mechanism. The object itself serializes components the same way designers write source for them, by storing their state, property by property.","pos":[0,360],"nodes":[{"content":"The returned object fully supports run-time serialization.","pos":[0,58]},{"content":"The object returned from this method contains live references to objects in the collection.","pos":[65,156]},{"content":"This object can then be passed to any run-time serialization mechanism.","pos":[157,228]},{"content":"The object itself serializes components the same way designers write source for them, by storing their state, property by property.","pos":[229,360]}]}]},{"pos":[4267,4304],"content":"A collection of objects to serialize.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of objects to serialize.","pos":[0,37]}]},{"pos":[4362,4446],"content":"An object that contains the serialized state of the specified collection of objects.","needQuote":true,"needEscape":true,"nodes":[{"content":"An object that contains the serialized state of the specified collection of objects.","pos":[0,84]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  id: IDesignerSerializationService\n  children:\n  - System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)\n  - System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)\n  langs:\n  - csharp\n  name: IDesignerSerializationService\n  nameWithType: IDesignerSerializationService\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  type: Interface\n  summary: Provides an interface that can invoke serialization and deserialization.\n  remarks: \"This service provides methods to convert a collection of objects to a serializable object that represents them, and to convert serialization data to the object or objects that it represents.  \\n  \\n All components that support a designer must support serialization of each component's type. This occurs when the designer scans the public properties, methods, and events of each type and represents these within a type descriptor.  \\n  \\n This interface uses the technique of scanning members to convert a collection of components into a single object that supports run-time serialization. This does not necessarily provide for the serialization of custom types that belong to the class. Many objects require a custom serializer to have their values serialized at run time. To specify a serializer for a custom type, use a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> attribute or implement an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>.\"\n  syntax:\n    content: public interface IDesignerSerializationService\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)\n  id: Deserialize(System.Object)\n  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  langs:\n  - csharp\n  name: Deserialize(Object)\n  nameWithType: IDesignerSerializationService.Deserialize(Object)\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(Object)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Deserializes the specified serialization data object and returns a collection of objects represented by that data.\n  syntax:\n    content: public System.Collections.ICollection Deserialize (object serializationData);\n    parameters:\n    - id: serializationData\n      type: System.Object\n      description: An object consisting of serialized data.\n    return:\n      type: System.Collections.ICollection\n      description: An <xref:System.Collections.ICollection> of objects rebuilt from the specified serialization data object.\n  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)\n  id: Serialize(System.Collections.ICollection)\n  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  langs:\n  - csharp\n  name: Serialize(ICollection)\n  nameWithType: IDesignerSerializationService.Serialize(ICollection)\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(ICollection)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Serializes the specified collection of objects and stores them in a serialization data object.\n  remarks: \"The returned object fully supports run-time serialization.  \\n  \\n The object returned from this method contains live references to objects in the collection. This object can then be passed to any run-time serialization mechanism. The object itself serializes components the same way designers write source for them, by storing their state, property by property.\"\n  syntax:\n    content: public object Serialize (System.Collections.ICollection objects);\n    parameters:\n    - id: objects\n      type: System.Collections.ICollection\n      description: A collection of objects to serialize.\n    return:\n      type: System.Object\n      description: An object that contains the serialized state of the specified collection of objects.\n  overload: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)\n  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  isExternal: false\n  name: Deserialize(Object)\n  nameWithType: IDesignerSerializationService.Deserialize(Object)\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(Object)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)\n  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  isExternal: false\n  name: Serialize(ICollection)\n  nameWithType: IDesignerSerializationService.Serialize(ICollection)\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(ICollection)\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize*\n  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  isExternal: false\n  name: Deserialize\n  nameWithType: IDesignerSerializationService.Deserialize\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize*\n  parent: System.ComponentModel.Design.Serialization.IDesignerSerializationService\n  isExternal: false\n  name: Serialize\n  nameWithType: IDesignerSerializationService.Serialize\n"}