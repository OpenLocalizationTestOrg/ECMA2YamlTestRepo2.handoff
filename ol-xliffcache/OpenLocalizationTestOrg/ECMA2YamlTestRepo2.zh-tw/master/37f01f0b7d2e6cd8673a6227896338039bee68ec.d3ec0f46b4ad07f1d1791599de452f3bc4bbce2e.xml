{"nodes":[{"pos":[584,645],"content":"Defines methods for retrieving data-store schema information.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines methods for retrieving data-store schema information.","pos":[0,61]}]},{"pos":[658,1301],"content":"Classes that implement the IDesignerDataSchema interface retrieve schema information from a data store and return it to the user interface, typically to populate UI elements that enable the user to specify the data-store object that they  want to work with.       The IDesignerDataSchema interface provides two methods: the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> method, which returns the requested schema objects, and the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method, which indicates whether a specified data-schema object is supported by the data store.","needQuote":false,"needEscape":true,"nodes":[{"content":"Classes that implement the IDesignerDataSchema interface retrieve schema information from a data store and return it to the user interface, typically to populate UI elements that enable the user to specify the data-store object that they  want to work with.       The IDesignerDataSchema interface provides two methods: the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> method, which returns the requested schema objects, and the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method, which indicates whether a specified data-schema object is supported by the data store.","pos":[0,641],"nodes":[{"content":"Classes that implement the IDesignerDataSchema interface retrieve schema information from a data store and return it to the user interface, typically to populate UI elements that enable the user to specify the data-store object that they  want to work with.","pos":[0,257]},{"content":"The IDesignerDataSchema interface provides two methods: the &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A&gt; method, which returns the requested schema objects, and the &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt; method, which indicates whether a specified data-schema object is supported by the data store.","pos":[264,641],"source":"       The IDesignerDataSchema interface provides two methods: the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> method, which returns the requested schema objects, and the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method, which indicates whether a specified data-schema object is supported by the data store."}]}]},{"pos":[2037,2081],"content":"Gets a collection of specified schema items.","needQuote":true,"needEscape":true,"nodes":[{"content":"Gets a collection of specified schema items.","pos":[0,44]}]},{"pos":[2094,3032],"content":"The GetSchemaItems method returns a collection of all the specified schema objects in the data store.       See the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class for the list of schema objects supported by the .NET Framework. Additional schema objects can be added to the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class by creating a derived type.       If the data store does not support the requested schema object, the GetSchemaItems method should return `null`. You can use the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method to determine whether a data store supports the requested schema object before calling the GetSchemaItems method, to avoid returning `null` to your application.       If the data store supports the requested object, but does not contain any instances, the GetSchemaItems method should return an empty collection.","needQuote":false,"needEscape":true,"nodes":[{"content":"The GetSchemaItems method returns a collection of all the specified schema objects in the data store.","pos":[0,101]},{"content":"See the &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; class for the list of schema objects supported by the .NET Framework.","pos":[108,250],"source":"       See the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class for the list of schema objects supported by the .NET Framework."},{"content":"Additional schema objects can be added to the &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; class by creating a derived type.","pos":[251,395],"source":" Additional schema objects can be added to the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class by creating a derived type."},{"content":"If the data store does not support the requested schema object, the GetSchemaItems method should return <ph id=\"ph1\">`null`</ph>.","pos":[402,513],"source":"       If the data store does not support the requested schema object, the GetSchemaItems method should return `null`."},{"content":"You can use the &lt;xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A&gt; method to determine whether a data store supports the requested schema object before calling the GetSchemaItems method, to avoid returning <ph id=\"ph1\">`null`</ph> to your application.","pos":[514,780],"source":" You can use the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method to determine whether a data store supports the requested schema object before calling the GetSchemaItems method, to avoid returning `null` to your application."},{"content":"If the data store supports the requested object, but does not contain any instances, the GetSchemaItems method should return an empty collection.","pos":[787,932]}]},{"pos":[3310,3339],"content":"The schema objects to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema objects to return.","pos":[0,29]}]},{"pos":[3414,3467],"content":"A collection of schema objects of the specified type.","needQuote":true,"needEscape":true,"nodes":[{"content":"A collection of schema objects of the specified type.","pos":[0,53]}]},{"pos":[4249,4341],"content":"Returns a value indicating whether the data store contains the specified data-schema object.","needQuote":true,"needEscape":true,"nodes":[{"content":"Returns a value indicating whether the data store contains the specified data-schema object.","pos":[0,92]}]},{"pos":[4354,4723],"content":"The SupportsSchemaClass method indicates whether the data store supports a specified data-schema object. If the data store does not support the specified object, the SupportsSchemaClass method should return `false`.       You can add tests for additional data-schema objects by deriving from the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class.","needQuote":false,"needEscape":true,"nodes":[{"content":"The SupportsSchemaClass method indicates whether the data store supports a specified data-schema object.","pos":[0,104]},{"content":"If the data store does not support the specified object, the SupportsSchemaClass method should return <ph id=\"ph1\">`false`</ph>.","pos":[105,215],"source":" If the data store does not support the specified object, the SupportsSchemaClass method should return `false`."},{"content":"You can add tests for additional data-schema objects by deriving from the &lt;xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass&gt; class.","pos":[222,367],"source":"       You can add tests for additional data-schema objects by deriving from the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class."}]},{"pos":[4980,5009],"content":"The schema objects to return.","needQuote":true,"needEscape":true,"nodes":[{"content":"The schema objects to return.","pos":[0,29]}]},{"pos":[5068,5264],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the data store supports the specified data-schema object; otherwise, <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept>.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data store supports the specified data-schema object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>."}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema\n  id: IDesignerDataSchema\n  children:\n  - System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  - System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  langs:\n  - csharp\n  name: IDesignerDataSchema\n  nameWithType: IDesignerDataSchema\n  fullName: System.ComponentModel.Design.Data.IDesignerDataSchema\n  type: Interface\n  summary: Defines methods for retrieving data-store schema information.\n  remarks: \"Classes that implement the IDesignerDataSchema interface retrieve schema information from a data store and return it to the user interface, typically to populate UI elements that enable the user to specify the data-store object that they  want to work with.  \\n  \\n The IDesignerDataSchema interface provides two methods: the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> method, which returns the requested schema objects, and the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method, which indicates whether a specified data-schema object is supported by the data store.\"\n  syntax:\n    content: public interface IDesignerDataSchema\n  implements: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  id: GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  parent: System.ComponentModel.Design.Data.IDesignerDataSchema\n  langs:\n  - csharp\n  name: GetSchemaItems(DesignerDataSchemaClass)\n  nameWithType: IDesignerDataSchema.GetSchemaItems(DesignerDataSchemaClass)\n  fullName: System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(DesignerDataSchemaClass)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Data\n  summary: Gets a collection of specified schema items.\n  remarks: \"The GetSchemaItems method returns a collection of all the specified schema objects in the data store.  \\n  \\n See the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class for the list of schema objects supported by the .NET Framework. Additional schema objects can be added to the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class by creating a derived type.  \\n  \\n If the data store does not support the requested schema object, the GetSchemaItems method should return `null`. You can use the <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> method to determine whether a data store supports the requested schema object before calling the GetSchemaItems method, to avoid returning `null` to your application.  \\n  \\n If the data store supports the requested object, but does not contain any instances, the GetSchemaItems method should return an empty collection.\"\n  syntax:\n    content: public System.Collections.ICollection GetSchemaItems (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);\n    parameters:\n    - id: schemaClass\n      type: System.ComponentModel.Design.Data.DesignerDataSchemaClass\n      description: The schema objects to return.\n    return:\n      type: System.Collections.ICollection\n      description: A collection of schema objects of the specified type.\n  overload: System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  id: SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  parent: System.ComponentModel.Design.Data.IDesignerDataSchema\n  langs:\n  - csharp\n  name: SupportsSchemaClass(DesignerDataSchemaClass)\n  nameWithType: IDesignerDataSchema.SupportsSchemaClass(DesignerDataSchemaClass)\n  fullName: System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(DesignerDataSchemaClass)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Data\n  summary: Returns a value indicating whether the data store contains the specified data-schema object.\n  remarks: \"The SupportsSchemaClass method indicates whether the data store supports a specified data-schema object. If the data store does not support the specified object, the SupportsSchemaClass method should return `false`.  \\n  \\n You can add tests for additional data-schema objects by deriving from the <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> class.\"\n  syntax:\n    content: public bool SupportsSchemaClass (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);\n    parameters:\n    - id: schemaClass\n      type: System.ComponentModel.Design.Data.DesignerDataSchemaClass\n      description: The schema objects to return.\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the data store supports the specified data-schema object; otherwise, <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.\n  overload: System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  parent: System.ComponentModel.Design.Data.IDesignerDataSchema\n  isExternal: false\n  name: GetSchemaItems(DesignerDataSchemaClass)\n  nameWithType: IDesignerDataSchema.GetSchemaItems(DesignerDataSchemaClass)\n  fullName: System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(DesignerDataSchemaClass)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: true\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.ComponentModel.Design.Data.DesignerDataSchemaClass\n  parent: System.ComponentModel.Design.Data\n  isExternal: false\n  name: DesignerDataSchemaClass\n  nameWithType: DesignerDataSchemaClass\n  fullName: System.ComponentModel.Design.Data.DesignerDataSchemaClass\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)\n  parent: System.ComponentModel.Design.Data.IDesignerDataSchema\n  isExternal: false\n  name: SupportsSchemaClass(DesignerDataSchemaClass)\n  nameWithType: IDesignerDataSchema.SupportsSchemaClass(DesignerDataSchemaClass)\n  fullName: System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(DesignerDataSchemaClass)\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems*\n  parent: System.ComponentModel.Design.Data.IDesignerDataSchema\n  isExternal: false\n  name: GetSchemaItems\n  nameWithType: IDesignerDataSchema.GetSchemaItems\n- uid: System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass*\n  parent: System.ComponentModel.Design.Data.IDesignerDataSchema\n  isExternal: false\n  name: SupportsSchemaClass\n  nameWithType: IDesignerDataSchema.SupportsSchemaClass\n"}