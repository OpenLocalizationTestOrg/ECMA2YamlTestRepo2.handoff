{"nodes":[{"pos":[604,786],"content":"Lists the options that the <bpt id=\"p1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> object can use to specify white space for the display of a word or punctuation mark.","needQuote":true,"needEscape":true,"source":"Lists the options that the <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> object can use to specify white space for the display of a word or punctuation mark."},{"pos":[799,2362],"content":"Windows Desktop Speech returns recognized phrases as collections of <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> objects. Each object corresponds to a single word or punctuation mark. The `DisplayAttributes` property of a <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> uses a member of the DisplayAttributes enumeration to describe how print spacing is handled around a given word or punctuation mark.       Two or more members of the `DisplayAttributes` enumeration may be combined by a bit-wise `OR` to specify how a particular word should be displayed.      > [!NOTE] >  The display formatting that the speech recognizer uses is language specific.       For example, suppose the input phrase to a recognition engine using the default system grammar provided by <xref:System.Speech.Recognition.DictationGrammar> is \"Hello comma he said period\". Then the recognition engine returns a <xref:System.Speech.Recognition.RecognizedPhrase> containing five <xref:System.Speech.Recognition.RecognizedWordUnit> objects containing the following strings with the following `DisplayAttributes` values.      |Item|`DisplayAttributes`|   |----------|-------------------------|   |Hello|OneTrailingSpace|   |,|OneTrailingSpace &#124; ConsumeLeadingSpaces|   |he|OneTrailingSpace|   |said|OneTrailingSpace|   |.|OneTrailingSpace &#124; ConsumeLeadingSpaces|       The text returned for this recognized phrase is printed as: \"Hello, he said.\"","needQuote":false,"needEscape":true,"nodes":[{"content":"Windows Desktop Speech returns recognized phrases as collections of &lt;xref:System.Speech.Recognition.RecognizedWordUnit&gt; or &lt;xref:System.Speech.Recognition.ReplacementText&gt; objects.","pos":[0,180],"source":"Windows Desktop Speech returns recognized phrases as collections of <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> objects."},{"content":"Each object corresponds to a single word or punctuation mark.","pos":[181,242]},{"content":"The <ph id=\"ph1\">`DisplayAttributes`</ph> property of a &lt;xref:System.Speech.Recognition.RecognizedWordUnit&gt; or &lt;xref:System.Speech.Recognition.ReplacementText&gt; uses a member of the DisplayAttributes enumeration to describe how print spacing is handled around a given word or punctuation mark.","pos":[243,517],"source":" The `DisplayAttributes` property of a <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> uses a member of the DisplayAttributes enumeration to describe how print spacing is handled around a given word or punctuation mark."},{"content":"Two or more members of the <ph id=\"ph1\">`DisplayAttributes`</ph> enumeration may be combined by a bit-wise <ph id=\"ph2\">`OR`</ph> to specify how a particular word should be displayed.","pos":[524,671],"source":"       Two or more members of the `DisplayAttributes` enumeration may be combined by a bit-wise `OR` to specify how a particular word should be displayed."},{"content":"&gt; <ph id=\"ph1\">[!NOTE]</ph> &gt;  The display formatting that the speech recognizer uses is language specific.","pos":[677,766],"source":"      > [!NOTE] >  The display formatting that the speech recognizer uses is language specific."},{"content":"For example, suppose the input phrase to a recognition engine using the default system grammar provided by &lt;xref:System.Speech.Recognition.DictationGrammar&gt; is \"Hello comma he said period\".","pos":[773,962],"source":"       For example, suppose the input phrase to a recognition engine using the default system grammar provided by <xref:System.Speech.Recognition.DictationGrammar> is \"Hello comma he said period\"."},{"content":"Then the recognition engine returns a &lt;xref:System.Speech.Recognition.RecognizedPhrase&gt; containing five &lt;xref:System.Speech.Recognition.RecognizedWordUnit&gt; objects containing the following strings with the following <ph id=\"ph1\">`DisplayAttributes`</ph> values.","pos":[963,1206],"source":" Then the recognition engine returns a <xref:System.Speech.Recognition.RecognizedPhrase> containing five <xref:System.Speech.Recognition.RecognizedWordUnit> objects containing the following strings with the following `DisplayAttributes` values."},{"content":"|Item|<ph id=\"ph1\">`DisplayAttributes`</ph>|   |----------|-------------------------|   |Hello|OneTrailingSpace|   |,|OneTrailingSpace &amp;#124; ConsumeLeadingSpaces|   |he|OneTrailingSpace|   |said|OneTrailingSpace|   |.|OneTrailingSpace &amp;#124; ConsumeLeadingSpaces|       The text returned for this recognized phrase is printed as: \"Hello, he said.\"","pos":[1212,1542],"source":"      |Item|`DisplayAttributes`|   |----------|-------------------------|   |Hello|OneTrailingSpace|   |,|OneTrailingSpace &#124; ConsumeLeadingSpaces|   |he|OneTrailingSpace|   |said|OneTrailingSpace|   |.|OneTrailingSpace &#124; ConsumeLeadingSpaces|       The text returned for this recognized phrase is printed as: \"Hello, he said.\""}]},{"pos":[4128,4164],"content":"The item has no spaces preceding it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item has no spaces preceding it.","pos":[0,36]}]},{"pos":[4296,4308],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4699,4752],"content":"The item does not specify how white space is handled.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item does not specify how white space is handled.","pos":[0,53]}]},{"pos":[4868,4880],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5331,5367],"content":"The item has one space following it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item has one space following it.","pos":[0,36]}]},{"pos":[5495,5507],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5963,6000],"content":"The item has two spaces following it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item has two spaces following it.","pos":[0,37]}]},{"pos":[6129,6141],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6602,6638],"content":"The item has no spaces following it.","needQuote":true,"needEscape":true,"nodes":[{"content":"The item has no spaces following it.","pos":[0,36]}]},{"pos":[6768,6780],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.DisplayAttributes\n  id: DisplayAttributes\n  children:\n  - System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces\n  - System.Speech.Recognition.DisplayAttributes.None\n  - System.Speech.Recognition.DisplayAttributes.OneTrailingSpace\n  - System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces\n  - System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces\n  langs:\n  - csharp\n  name: DisplayAttributes\n  nameWithType: DisplayAttributes\n  fullName: System.Speech.Recognition.DisplayAttributes\n  type: Enum\n  summary: Lists the options that the <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine\"></xref> object can use to specify white space for the display of a word or punctuation mark.\n  remarks: \"Windows Desktop Speech returns recognized phrases as collections of <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> objects. Each object corresponds to a single word or punctuation mark. The `DisplayAttributes` property of a <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> uses a member of the DisplayAttributes enumeration to describe how print spacing is handled around a given word or punctuation mark.  \\n  \\n Two or more members of the `DisplayAttributes` enumeration may be combined by a bit-wise `OR` to specify how a particular word should be displayed.  \\n  \\n> [!NOTE]\\n>  The display formatting that the speech recognizer uses is language specific.  \\n  \\n For example, suppose the input phrase to a recognition engine using the default system grammar provided by <xref:System.Speech.Recognition.DictationGrammar> is \\\"Hello comma he said period\\\". Then the recognition engine returns a <xref:System.Speech.Recognition.RecognizedPhrase> containing five <xref:System.Speech.Recognition.RecognizedWordUnit> objects containing the following strings with the following `DisplayAttributes` values.  \\n  \\n|Item|`DisplayAttributes`|  \\n|----------|-------------------------|  \\n|Hello|OneTrailingSpace|  \\n|,|OneTrailingSpace &#124; ConsumeLeadingSpaces|  \\n|he|OneTrailingSpace|  \\n|said|OneTrailingSpace|  \\n|.|OneTrailingSpace &#124; ConsumeLeadingSpaces|  \\n  \\n The text returned for this recognized phrase is printed as: \\\"Hello, he said.\\\"\"\n  example:\n  - \"The following example uses the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property of a list of <xref:System.Speech.Recognition.RecognizedWordUnit> objects to format the words as a phrase.  \\n  \\n```c#  \\n  \\n// Use the DisplayAttributes property to format speech as text.   \\n  \\nstatic string GetDisplayText(List<RecognizedWordUnit> words)  \\n{  \\n  StringBuilder sb = new StringBuilder();  \\n  \\n  // Concatenate the word units together. Use the DisplayAttributes  \\n  // property of each word unit to add or remove white space around  \\n  // the word unit.  \\n  foreach (RecognizedWordUnit word in words)  \\n  {  \\n    if ((word.DisplayAttributes  \\n      & DisplayAttributes.ConsumeLeadingSpaces) != 0))  \\n    {  \\n      sb = new StringBuilder(sb.ToString().TrimEnd());  \\n    }  \\n  \\n    sb.Append(word.Text);  \\n  \\n    if ((word.DisplayAttributes  \\n      & DisplayAttributes.OneTrailingSpace) != 0)  \\n    {  \\n      sb.Append(\\\" \\\");  \\n    }  \\n    else if ((word.DisplayAttributes  \\n      & DisplayAttributes.TwoTrailingSpaces) != 0)  \\n    {  \\n      sb.Append(\\\"  \\\");  \\n    }  \\n  }  \\n  \\n  return sb.ToString();  \\n}  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum DisplayAttributes\n  inheritance:\n  - System.Enum\n  platform:\n  - net462\n- uid: System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces\n  id: ConsumeLeadingSpaces\n  parent: System.Speech.Recognition.DisplayAttributes\n  langs:\n  - csharp\n  name: ConsumeLeadingSpaces\n  nameWithType: DisplayAttributes.ConsumeLeadingSpaces\n  fullName: System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The item has no spaces preceding it.\n  syntax:\n    content: ConsumeLeadingSpaces\n    return:\n      type: System.Speech.Recognition.DisplayAttributes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.DisplayAttributes.None\n  id: None\n  parent: System.Speech.Recognition.DisplayAttributes\n  langs:\n  - csharp\n  name: None\n  nameWithType: DisplayAttributes.None\n  fullName: System.Speech.Recognition.DisplayAttributes.None\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The item does not specify how white space is handled.\n  syntax:\n    content: None\n    return:\n      type: System.Speech.Recognition.DisplayAttributes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.DisplayAttributes.OneTrailingSpace\n  id: OneTrailingSpace\n  parent: System.Speech.Recognition.DisplayAttributes\n  langs:\n  - csharp\n  name: OneTrailingSpace\n  nameWithType: DisplayAttributes.OneTrailingSpace\n  fullName: System.Speech.Recognition.DisplayAttributes.OneTrailingSpace\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The item has one space following it.\n  syntax:\n    content: OneTrailingSpace\n    return:\n      type: System.Speech.Recognition.DisplayAttributes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces\n  id: TwoTrailingSpaces\n  parent: System.Speech.Recognition.DisplayAttributes\n  langs:\n  - csharp\n  name: TwoTrailingSpaces\n  nameWithType: DisplayAttributes.TwoTrailingSpaces\n  fullName: System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The item has two spaces following it.\n  syntax:\n    content: TwoTrailingSpaces\n    return:\n      type: System.Speech.Recognition.DisplayAttributes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\n- uid: System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces\n  id: ZeroTrailingSpaces\n  parent: System.Speech.Recognition.DisplayAttributes\n  langs:\n  - csharp\n  name: ZeroTrailingSpaces\n  nameWithType: DisplayAttributes.ZeroTrailingSpaces\n  fullName: System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces\n  type: Field\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: The item has no spaces following it.\n  syntax:\n    content: ZeroTrailingSpaces\n    return:\n      type: System.Speech.Recognition.DisplayAttributes\n      description: To be added.\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Enum\n  isExternal: false\n  name: System.Enum\n- uid: System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces\n  parent: System.Speech.Recognition.DisplayAttributes\n  isExternal: false\n  name: ConsumeLeadingSpaces\n  nameWithType: DisplayAttributes.ConsumeLeadingSpaces\n  fullName: System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces\n- uid: System.Speech.Recognition.DisplayAttributes\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: DisplayAttributes\n  nameWithType: DisplayAttributes\n  fullName: System.Speech.Recognition.DisplayAttributes\n- uid: System.Speech.Recognition.DisplayAttributes.None\n  parent: System.Speech.Recognition.DisplayAttributes\n  isExternal: false\n  name: None\n  nameWithType: DisplayAttributes.None\n  fullName: System.Speech.Recognition.DisplayAttributes.None\n- uid: System.Speech.Recognition.DisplayAttributes.OneTrailingSpace\n  parent: System.Speech.Recognition.DisplayAttributes\n  isExternal: false\n  name: OneTrailingSpace\n  nameWithType: DisplayAttributes.OneTrailingSpace\n  fullName: System.Speech.Recognition.DisplayAttributes.OneTrailingSpace\n- uid: System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces\n  parent: System.Speech.Recognition.DisplayAttributes\n  isExternal: false\n  name: TwoTrailingSpaces\n  nameWithType: DisplayAttributes.TwoTrailingSpaces\n  fullName: System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces\n- uid: System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces\n  parent: System.Speech.Recognition.DisplayAttributes\n  isExternal: false\n  name: ZeroTrailingSpaces\n  nameWithType: DisplayAttributes.ZeroTrailingSpaces\n  fullName: System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces\n"}