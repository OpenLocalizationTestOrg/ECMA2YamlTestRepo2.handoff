{"nodes":[{"pos":[627,736],"content":"Enumerates the elements of a collection of <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> objects.","needQuote":true,"needEscape":true,"source":"Enumerates the elements of a collection of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects."},{"pos":[749,2802],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection. At this position, the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined. Therefore, you must call <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>.       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> is called. <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> to the next element.       If <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> also return `false`. If the last call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","needQuote":false,"needEscape":true,"nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]},{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[127,210]},{"content":"At this position, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.","pos":[211,351],"source":" At this position, the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined."},{"content":"Therefore, you must call &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before calling &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt;.","pos":[352,633],"source":" Therefore, you must call <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>."},{"content":"&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.","pos":[640,856],"source":"       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> is called."},{"content":"&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; to the next element.","pos":[857,1078],"source":" <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> to the next element."},{"content":"If &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returns <ph id=\"ph1\">`false`</ph>.","pos":[1085,1386],"source":"       If <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; also return <ph id=\"ph1\">`false`</ph>.","pos":[1387,1555],"source":" When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> also return `false`."},{"content":"If the last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, the return value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.","pos":[1556,1803],"source":" If the last call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[1810,1882]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[1883,2045]}]},{"pos":[3478,3608],"content":"Returns the <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.","needQuote":true,"needEscape":true,"source":"Returns the <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> in the collection at the current position of the enumerator."},{"pos":[3621,4719],"content":"The return value of GetCurrent is undefined under any of the following conditions:      -   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> is called. <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling GetCurrent.      -   The last call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returned `false`, which indicates the end of the collection.      -   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.       GetCurrent returns the same object until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> is called. <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> sets the return value of GetCurrent to the next element.","needQuote":false,"needEscape":true,"nodes":[{"content":"The return value of GetCurrent is undefined under any of the following conditions:      -   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.","pos":[0,306],"source":"The return value of GetCurrent is undefined under any of the following conditions:      -   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> is called."},{"content":"&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; must be called to advance the enumerator to the first element of the collection before calling GetCurrent.","pos":[307,500],"source":" <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling GetCurrent."},{"content":"-   The last call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; returned <ph id=\"ph1\">`false`</ph>, which indicates the end of the collection.","pos":[506,674],"source":"      -   The last call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returned `false`, which indicates the end of the collection."},{"content":"-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.","pos":[680,801]},{"content":"GetCurrent returns the same object until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; is called.","pos":[808,946],"source":"       GetCurrent returns the same object until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> is called."},{"content":"&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; sets the return value of GetCurrent to the next element.","pos":[947,1090],"source":" <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> sets the return value of GetCurrent to the next element."}]},{"pos":[4902,5024],"content":"The <bpt id=\"p1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> in the collection at the current position of the enumerator.","needQuote":true,"needEscape":true,"source":"The <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> in the collection at the current position of the enumerator."},{"pos":[5638,5700],"content":"Advances the enumerator to the next element of the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Advances the enumerator to the next element of the collection.","pos":[0,62]}]},{"pos":[5713,6755],"content":"After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> method is called, an enumerator is positioned before the first element of the collection. The first call to the MoveNext method moves the enumerator to the first element of the collection.       If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns `false`. When the enumerator is at this position, subsequent calls to MoveNext also return `false` until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> is called.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> throws an <xref:System.InvalidOperationException>.","needQuote":false,"needEscape":true,"nodes":[{"content":"After an enumerator is created or after the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; method is called, an enumerator is positioned before the first element of the collection.","pos":[0,217],"source":"After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> method is called, an enumerator is positioned before the first element of the collection."},{"content":"The first call to the MoveNext method moves the enumerator to the first element of the collection.","pos":[218,316]},{"content":"If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <ph id=\"ph1\">`false`</ph>.","pos":[323,468],"source":"       If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to MoveNext also return <ph id=\"ph1\">`false`</ph> until &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; is called.","pos":[469,659],"source":" When the enumerator is at this position, subsequent calls to MoveNext also return `false` until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> is called."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[666,738]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.","pos":[739,1038],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> throws an <xref:System.InvalidOperationException>."}]},{"pos":[6882,7126],"content":"<bpt id=\"p1\">&lt;xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"&gt;</bpt><ept id=\"p1\">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id=\"p2\">&lt;xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"&gt;</bpt><ept id=\"p2\">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.","needQuote":true,"needEscape":true,"source":"<xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the enumerator was successfully advanced to the next element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the enumerator has passed the end of the collection."},{"pos":[7341,7402],"content":"The collection was modified after the enumerator was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection was modified after the enumerator was created.","pos":[0,61]}]},{"pos":[7892,7989],"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","needQuote":true,"needEscape":true,"nodes":[{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","pos":[0,97]}]},{"pos":[8002,8686],"content":"After you call Reset, the value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined. Call the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> method to move the enumerator to the first element of the collection.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> or Reset throws an <xref:System.InvalidOperationException>.","needQuote":false,"needEscape":true,"nodes":[{"content":"After you call Reset, the value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined. Call the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> method to move the enumerator to the first element of the collection.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> or Reset throws an <xref:System.InvalidOperationException>.","pos":[0,682],"nodes":[{"content":"After you call Reset, the value of &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A&gt; is undefined.","pos":[0,137],"source":"After you call Reset, the value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined."},{"content":"Call the &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; method to move the enumerator to the first element of the collection.","pos":[138,303],"source":" Call the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> method to move the enumerator to the first element of the collection."},{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[310,382]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A&gt; or Reset throws an &lt;xref:System.InvalidOperationException&gt;.","pos":[383,682],"source":" If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> or Reset throws an <xref:System.InvalidOperationException>."}]}]},{"pos":[8963,9024],"content":"The collection was modified after the enumerator was created.","needQuote":true,"needEscape":true,"nodes":[{"content":"The collection was modified after the enumerator was created.","pos":[0,61]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  id: IRemoteArgumentEnumeratorContract\n  children:\n  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent\n  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext\n  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset\n  langs:\n  - csharp\n  name: IRemoteArgumentEnumeratorContract\n  nameWithType: IRemoteArgumentEnumeratorContract\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  type: Interface\n  summary: Enumerates the elements of a collection of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects.\n  remarks: \"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. At this position, the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined. Therefore, you must call <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>.  \\n  \\n <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> is called. <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> to the next element.  \\n  \\n If <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> also return `false`. If the last call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.\"\n  syntax:\n    content: 'public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract'\n  implements:\n  - System.AddIn.Contract.IContract\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent\n  id: GetCurrent\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  langs:\n  - csharp\n  name: GetCurrent()\n  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> in the collection at the current position of the enumerator.\n  remarks: \"The return value of GetCurrent is undefined under any of the following conditions:  \\n  \\n-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> is called. <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling GetCurrent.  \\n  \\n-   The last call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> returned `false`, which indicates the end of the collection.  \\n  \\n-   The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.  \\n  \\n GetCurrent returns the same object until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> is called. <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> sets the return value of GetCurrent to the next element.\"\n  syntax:\n    content: public System.AddIn.Contract.RemoteArgument GetCurrent ();\n    parameters: []\n    return:\n      type: System.AddIn.Contract.RemoteArgument\n      description: The <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> in the collection at the current position of the enumerator.\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext\n  id: MoveNext\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Advances the enumerator to the next element of the collection.\n  remarks: \"After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> method is called, an enumerator is positioned before the first element of the collection. The first call to the MoveNext method moves the enumerator to the first element of the collection.  \\n  \\n If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns `false`. When the enumerator is at this position, subsequent calls to MoveNext also return `false` until <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> is called.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> throws an <xref:System.InvalidOperationException>.\"\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> if the enumerator was successfully advanced to the next element; <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref> if the enumerator has passed the end of the collection.\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The collection was modified after the enumerator was created.\n  platform:\n  - net462\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset\n  id: Reset\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: IRemoteArgumentEnumeratorContract.Reset()\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Sets the enumerator to its initial position, which is before the first element in the collection.\n  remarks: \"After you call Reset, the value of <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> is undefined. Call the <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> method to move the enumerator to the first element of the collection.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> or Reset throws an <xref:System.InvalidOperationException>.\"\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The collection was modified after the enumerator was created.\n  platform:\n  - net462\nreferences:\n- uid: System.InvalidOperationException\n  isExternal: true\n  name: System.InvalidOperationException\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  isExternal: false\n  name: GetCurrent()\n  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()\n- uid: System.AddIn.Contract.RemoteArgument\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: RemoteArgument\n  nameWithType: RemoteArgument\n  fullName: System.AddIn.Contract.RemoteArgument\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  isExternal: false\n  name: MoveNext()\n  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: true\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  isExternal: false\n  name: Reset()\n  nameWithType: IRemoteArgumentEnumeratorContract.Reset()\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  isExternal: false\n  name: GetCurrent\n  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  isExternal: false\n  name: MoveNext\n  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  isExternal: false\n  name: Reset\n  nameWithType: IRemoteArgumentEnumeratorContract.Reset\n"}