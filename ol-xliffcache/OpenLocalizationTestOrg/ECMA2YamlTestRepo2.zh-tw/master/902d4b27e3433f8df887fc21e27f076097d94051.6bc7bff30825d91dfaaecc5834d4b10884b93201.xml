{"nodes":[{"pos":[785,861],"content":"Enables collections to be passed between an add-in and its host application.","needQuote":true,"needEscape":true,"nodes":[{"content":"Enables collections to be passed between an add-in and its host application.","pos":[0,76]}]},{"pos":[874,1503],"content":"This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection. The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.       Objects in collections must be remotable. For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/en-us/a6460173-9507-4b87-8c07-d4ee245d715c).","needQuote":false,"needEscape":true,"nodes":[{"content":"This class provides methods that enable an &lt;xref:System.Collections.Generic.IList%601&gt; collection to be converted to a &lt;xref:System.AddIn.Contract.IListContract%601&gt; collection.","pos":[0,177],"source":"This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection."},{"content":"The &lt;xref:System.AddIn.Contract.IListContract%601&gt; collection is passed across the isolation boundary and converted back to an &lt;xref:System.Collections.Generic.IList%601&gt; collection that the add-in or the host application can use.","pos":[178,408],"source":" The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use."},{"content":"Objects in collections must be remotable.","pos":[415,456]},{"content":"For more information about the object types that you can pass, see <bpt id=\"p1\">[</bpt>Contracts, Views, and Adapters<ept id=\"p1\">](http://msdn.microsoft.com/en-us/a6460173-9507-4b87-8c07-d4ee245d715c)</ept>.","pos":[457,627],"source":" For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/en-us/a6460173-9507-4b87-8c07-d4ee245d715c)."}]},{"pos":[2386,2398],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[2478,2490],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3746,3758],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3854,3866],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[3962,3974],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4058,4070],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[4935,4947],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[5029,5041],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6304,6316],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6412,6424],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6520,6532],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]},{"pos":[6623,6635],"content":"To be added.","needQuote":true,"needEscape":true,"nodes":[{"content":"To be added.","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Pipeline.CollectionAdapters\n  id: CollectionAdapters\n  children:\n  - System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract`1)\n  - System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  - System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})\n  - System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  langs:\n  - csharp\n  name: CollectionAdapters\n  nameWithType: CollectionAdapters\n  fullName: System.AddIn.Pipeline.CollectionAdapters\n  type: Class\n  summary: Enables collections to be passed between an add-in and its host application.\n  remarks: \"This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection. The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.  \\n  \\n Objects in collections must be remotable. For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/en-us/a6460173-9507-4b87-8c07-d4ee245d715c).\"\n  syntax:\n    content: public static class CollectionAdapters\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract`1)\n  id: ToIList``1(System.AddIn.Contract.IListContract`1)\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  langs:\n  - csharp\n  name: ToIList(IListContract<T>)\n  nameWithType: CollectionAdapters.ToIList(IListContract<T>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIList(IListContract<T>)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  syntax:\n    content: public static System.Collections.Generic.IList<T> ToIList<T> (System.AddIn.Contract.IListContract<T> collection);\n    parameters:\n    - id: collection\n      type: System.AddIn.Contract.IListContract`1\n      description: To be added.\n    return:\n      type: System.Collections.Generic.IList{T}\n      description: To be added.\n  overload: System.AddIn.Pipeline.CollectionAdapters.ToIList<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  id: ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  langs:\n  - csharp\n  name: ToIList(IListContract<TContract>,Converter<TContract,TView>,Converter<TView,TContract>)\n  nameWithType: CollectionAdapters.ToIList(IListContract<TContract>,Converter<TContract,TView>,Converter<TView,TContract>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIList(IListContract<TContract>,Converter<TContract,TView>,Converter<TView,TContract>)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  syntax:\n    content: public static System.Collections.Generic.IList<TView> ToIList<TContract,TView> (System.AddIn.Contract.IListContract<TContract> collection, Converter<TContract,TView> contractViewAdapter, Converter<TView,TContract> viewContractAdapter);\n    parameters:\n    - id: collection\n      type: System.AddIn.Contract.IListContract{TContract}\n      description: To be added.\n    - id: contractViewAdapter\n      type: System.Converter{TContract,TView}\n      description: To be added.\n    - id: viewContractAdapter\n      type: System.Converter{TView,TContract}\n      description: To be added.\n    return:\n      type: System.Collections.Generic.IList{TView}\n      description: To be added.\n  overload: System.AddIn.Pipeline.CollectionAdapters.ToIList<TContract,TView>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})\n  id: ToIListContract``1(System.Collections.Generic.IList{``0})\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  langs:\n  - csharp\n  name: ToIListContract(IList<T>)\n  nameWithType: CollectionAdapters.ToIListContract(IList<T>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIListContract(IList<T>)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  syntax:\n    content: public static System.AddIn.Contract.IListContract<T> ToIListContract<T> (System.Collections.Generic.IList<T> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IList{T}\n      description: To be added.\n    return:\n      type: System.AddIn.Contract.IListContract`1\n      description: To be added.\n  overload: System.AddIn.Pipeline.CollectionAdapters.ToIListContract<T>*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  id: ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  langs:\n  - csharp\n  name: ToIListContract(IList<TView>,Converter<TView,TContract>,Converter<TContract,TView>)\n  nameWithType: CollectionAdapters.ToIListContract(IList<TView>,Converter<TView,TContract>,Converter<TContract,TView>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIListContract(IList<TView>,Converter<TView,TContract>,Converter<TContract,TView>)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Pipeline\n  syntax:\n    content: public static System.AddIn.Contract.IListContract<TContract> ToIListContract<TView,TContract> (System.Collections.Generic.IList<TView> collection, Converter<TView,TContract> viewContractAdapter, Converter<TContract,TView> contractViewAdapter);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IList{TView}\n      description: To be added.\n    - id: viewContractAdapter\n      type: System.Converter{TView,TContract}\n      description: To be added.\n    - id: contractViewAdapter\n      type: System.Converter{TContract,TView}\n      description: To be added.\n    return:\n      type: System.AddIn.Contract.IListContract{TContract}\n      description: To be added.\n  overload: System.AddIn.Pipeline.CollectionAdapters.ToIListContract<TView,TContract>*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract`1)\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIList(IListContract<T>)\n  nameWithType: CollectionAdapters.ToIList(IListContract<T>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIList(IListContract<T>)\n- uid: System.Collections.Generic.IList{T}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<T>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AddIn.Contract.IListContract`1\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IListContract<T>\n  nameWithType: IListContract<T>\n  fullName: System.AddIn.Contract.IListContract<T>\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIList(IListContract<TContract>,Converter<TContract,TView>,Converter<TView,TContract>)\n  nameWithType: CollectionAdapters.ToIList(IListContract<TContract>,Converter<TContract,TView>,Converter<TView,TContract>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIList(IListContract<TContract>,Converter<TContract,TView>,Converter<TView,TContract>)\n- uid: System.Collections.Generic.IList{TView}\n  parent: System.Collections.Generic\n  isExternal: true\n  name: IList<TView>\n  nameWithType: IList<TView>\n  fullName: System.Collections.Generic.IList<TView>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: IList<TView>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TView\n    name: TView\n    nameWithType: TView\n    fullName: TView\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AddIn.Contract.IListContract{TContract}\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IListContract<TContract>\n  nameWithType: IListContract<TContract>\n  fullName: System.AddIn.Contract.IListContract<TContract>\n  spec.csharp:\n  - uid: System.AddIn.Contract.IListContract`1\n    name: IListContract\n    nameWithType: IListContract\n    fullName: IListContract<TContract>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TContract\n    name: TContract\n    nameWithType: TContract\n    fullName: TContract\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Converter{TContract,TView}\n  parent: System\n  isExternal: false\n  name: Converter<TContract,TView>\n  nameWithType: Converter<TContract,TView>\n  fullName: System.Converter<TContract,TView>\n  spec.csharp:\n  - uid: System.Converter`2\n    name: Converter\n    nameWithType: Converter\n    fullName: Converter<TContract,TView>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TContract\n    name: TContract\n    nameWithType: TContract\n    fullName: TContract\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TView\n    name: TView\n    nameWithType: TView\n    fullName: TView\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Converter{TView,TContract}\n  parent: System\n  isExternal: false\n  name: Converter<TView,TContract>\n  nameWithType: Converter<TView,TContract>\n  fullName: System.Converter<TView,TContract>\n  spec.csharp:\n  - uid: System.Converter`2\n    name: Converter\n    nameWithType: Converter\n    fullName: Converter<TView,TContract>\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TView\n    name: TView\n    nameWithType: TView\n    fullName: TView\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TContract\n    name: TContract\n    nameWithType: TContract\n    fullName: TContract\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIListContract(IList<T>)\n  nameWithType: CollectionAdapters.ToIListContract(IList<T>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIListContract(IList<T>)\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIListContract(IList<TView>,Converter<TView,TContract>,Converter<TContract,TView>)\n  nameWithType: CollectionAdapters.ToIListContract(IList<TView>,Converter<TView,TContract>,Converter<TContract,TView>)\n  fullName: System.AddIn.Pipeline.CollectionAdapters.ToIListContract(IList<TView>,Converter<TView,TContract>,Converter<TContract,TView>)\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIList<T>*\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIList<T>\n  nameWithType: CollectionAdapters.ToIList<T>\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIList<TContract,TView>*\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIList<TContract,TView>\n  nameWithType: CollectionAdapters.ToIList<TContract,TView>\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIListContract<T>*\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIListContract<T>\n  nameWithType: CollectionAdapters.ToIListContract<T>\n- uid: System.AddIn.Pipeline.CollectionAdapters.ToIListContract<TView,TContract>*\n  parent: System.AddIn.Pipeline.CollectionAdapters\n  isExternal: false\n  name: ToIListContract<TView,TContract>\n  nameWithType: CollectionAdapters.ToIListContract<TView,TContract>\n"}