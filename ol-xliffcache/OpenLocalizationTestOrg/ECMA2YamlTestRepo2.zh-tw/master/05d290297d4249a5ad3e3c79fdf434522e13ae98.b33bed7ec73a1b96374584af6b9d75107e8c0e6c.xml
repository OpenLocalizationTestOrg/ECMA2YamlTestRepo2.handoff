{"nodes":[{"pos":[539,618],"content":"Defines the interface required to process messages from request-reply channels.","needQuote":true,"needEscape":true,"nodes":[{"content":"Defines the interface required to process messages from request-reply channels.","pos":[0,79]}]},{"pos":[631,705],"content":"This contract has the following settings:      -   Sessions are allowed.","needQuote":false,"needEscape":true,"nodes":[{"content":"This contract has the following settings:      -   Sessions are allowed.","pos":[0,72]}]},{"pos":[1670,1723],"content":"Initiates the asynchronous processing of the message.","needQuote":true,"needEscape":true,"nodes":[{"content":"Initiates the asynchronous processing of the message.","pos":[0,53]}]},{"pos":[1975,2003],"content":"The message to be processed.","needQuote":true,"needEscape":true,"nodes":[{"content":"The message to be processed.","pos":[0,28]}]},{"pos":[2075,2167],"content":"An asynchronous callback delegate that is invoked when the message processing has completed.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous callback delegate that is invoked when the message processing has completed.","pos":[0,92]}]},{"pos":[2229,2298],"content":"A user-defined state object that is passed to the callback procedure.","needQuote":true,"needEscape":true,"nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]}]},{"pos":[2362,2556],"content":"An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking &lt;xref:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest*&gt;.","pos":[0,194],"source":"An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest*>."}]},{"pos":[3208,3262],"content":"Finishes asynchronous execution of message processing.","needQuote":true,"needEscape":true,"nodes":[{"content":"Finishes asynchronous execution of message processing.","pos":[0,54]}]},{"pos":[3455,3579],"content":"The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest*>.","needQuote":true,"needEscape":true,"nodes":[{"content":"The asynchronous result returned by the call to &lt;xref:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest*&gt;.","pos":[0,124],"source":"The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest*>."}]},{"pos":[3660,3670],"content":"The reply.","needQuote":true,"needEscape":true,"nodes":[{"content":"The reply.","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.IRequestReplyRouter\n  id: IRequestReplyRouter\n  children:\n  - System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)\n  langs:\n  - csharp\n  name: IRequestReplyRouter\n  nameWithType: IRequestReplyRouter\n  fullName: System.ServiceModel.Routing.IRequestReplyRouter\n  type: Interface\n  summary: Defines the interface required to process messages from request-reply channels.\n  remarks: \"This contract has the following settings:  \\n  \\n-   Sessions are allowed.\"\n  syntax:\n    content: >-\n      [System.ServiceModel.ServiceContract(Namespace=\"http://schemas.microsoft.com/netfx/2009/05/routing\", SessionMode=System.ServiceModel.SessionMode.Allowed)]\n\n      public interface IRequestReplyRouter\n  implements: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  id: BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.IRequestReplyRouter\n  langs:\n  - csharp\n  name: BeginProcessRequest(Message,AsyncCallback,Object)\n  nameWithType: IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Initiates the asynchronous processing of the message.\n  syntax:\n    content: public IAsyncResult BeginProcessRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message to be processed.\n    - id: callback\n      type: System.AsyncCallback\n      description: An asynchronous callback delegate that is invoked when the message processing has completed.\n    - id: state\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure.\n    return:\n      type: System.IAsyncResult\n      description: An asynchronous result that can be used to poll or wait for results, or both; this value is also required when invoking <xref:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest*>.\n  overload: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest*\n  exceptions: []\n  platform:\n  - net462\n- uid: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)\n  id: EndProcessRequest(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.IRequestReplyRouter\n  langs:\n  - csharp\n  name: EndProcessRequest(IAsyncResult)\n  nameWithType: IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  fullName: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing\n  summary: Finishes asynchronous execution of message processing.\n  syntax:\n    content: public System.ServiceModel.Channels.Message EndProcessRequest (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The asynchronous result returned by the call to <xref:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest*>.\n    return:\n      type: System.ServiceModel.Channels.Message\n      description: The reply.\n  overload: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest*\n  exceptions: []\n  platform:\n  - net462\nreferences:\n- uid: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Routing.IRequestReplyRouter\n  isExternal: false\n  name: BeginProcessRequest(Message,AsyncCallback,Object)\n  nameWithType: IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n  fullName: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: true\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: true\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: true\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: true\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)\n  parent: System.ServiceModel.Routing.IRequestReplyRouter\n  isExternal: false\n  name: EndProcessRequest(IAsyncResult)\n  nameWithType: IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n  fullName: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)\n- uid: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest*\n  parent: System.ServiceModel.Routing.IRequestReplyRouter\n  isExternal: false\n  name: BeginProcessRequest\n  nameWithType: IRequestReplyRouter.BeginProcessRequest\n- uid: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest*\n  parent: System.ServiceModel.Routing.IRequestReplyRouter\n  isExternal: false\n  name: EndProcessRequest\n  nameWithType: IRequestReplyRouter.EndProcessRequest\n"}